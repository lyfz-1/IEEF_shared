fix deprecation warn for socketappender convenience constructor
simplify the creation of prompt headers for a rectangle request in BasicAuthPlugin . java to enhance code readability and maintainability by reducing duplicated logic
[ java ] remove redundant reference to recorddescriptor . msglengthoffset in one place .
cloudstack - 2120 : fix vm detail cpu / ram overcommit ratio for cluster
added flags property and its getter / setter methods to ShadowPaint and modified PaintTest to validate anti - aliasing behavior to enhance paint functionality and ensure correct behavior of the shadow class
change the title of the MassSetFieldsDialog to use localized strings to improve internationalization support for field names
reduce test output when eclipse be not use to compile the project
added a check to ensure the nonce is not equal to an empty string and updated the authentication header parsing to enhance security checks and improve clarity in realm authentication handling
added a RemoteInputListener interface for handling connection events to improve responsiveness to the application when a remote server connection fails
reformatted conditional statements for clarity and maintainability in OrcEncodedDataReader . java to improve code readability and maintainability
[ homeconnect ] do not try to connect if the thing be disabled ( # 10674 )
added null checks before invoking removeAll and add policies in AuthorizeManager to avoid potential NullPointerExceptions when the policies are already set
updated assertions in DefaultTypeAdaptersTest and ObjectTest to use a more concise ` assertThat ` method for JSON validation to improve code readability and maintainability by reducing redundancy in assertions
added JSON processing for DAG information in TezTask . java to enable better logging of detailed information related to the DAG
bugfix # 256725 , calculate header and tag time more efficiently
replaced RxJava2Tasks with CommonsApplication for upload count retrieval to streamline the code and centralize upload count management across the application
remove unnecessary condition for forceLockEvenInMvcc and related conditions in MVTable . java to simplify lock logic for improved readability and maintainability
[ issue # 6129 ] fix the message store default size limit ( # 6130 )
added a check to mark the folder as open only if it is not open to improve reliability by preventing unnecessary folder access when the folder is not open
[ flink - 14776 ] [ table - planner - blink ] add test for pgproperty sort order
added a constant for the list of points that this student gives others to improve clarity and maintainability of the code
changed the parameter type from Object to ItemInfo in the UninstallDropTarget method to enhance type safety and improve handling of item types
updated assertion in RequestBuilderTest to use ` isIn ` method instead of ` hasMessage ` to improve clarity and specificity of error message validation
updated NearbyActivity to use NearbyListFragment instead of a hardcoded string to improve clarity and maintainability of fragment management logic
avoid use non - static instance variable in constructor . it should only be use by weakref .
hbase - 23945 : skip send zero anomalies email if there be no result
[ flink - 23454 ] [ kafka ] fix flinkkafkaproducerbase to honor restore state of open method
added methods to retrieve user and geofence by their IDs in the DataManager class to improve data access and functionality for user and geofence retrieval
added constructor to BlockingResponseListener that accepts a maximum size parameter to enhance flexibility for handling larger request data sizes
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue # 250
replaced print statements with logger and refactored snapshot handling code to improve logging clarity and ensure proper resource management during snapshot processing
fix test due to late change in url pattern
rename ConfigMetadataProviderTest . java file for consistency to improve clarity and maintainability of the test file
replaced specific import statements in ListFragment . java and modified the updateNoteReminder method to use noteToUpdate in SnoozeActivity . java to improve code clarity and maintainability by using a more descriptive variable name
added a new ` AcceptAllFilter ` class and refactored directory stream handling in ` Files . java ` and ` WindowsDirectoryStream . java ` to improve directory stream handling and simplify path normalization logic
updated JdbcTestDataSet . java to modify method implementations to improve data handling efficiency and maintainability
added a new method ` lookupType ` to ` CompilerToVM ` , ` HotSpotJVMCIRuntime ` , and ` FindUniqueConcreteMethodTest ` to improve error handling when type lookup fails
added validation for Docker image name and created corresponding test class for it to ensure valid Docker image names and provide clearer validation logic
updated the dialog text in LoginActivity to i18n for better clarity to improve user feedback by providing a more descriptive error message
added ` setAutofocus ( " autofocus " ) ` functionality across multiple form classes to ensure consistent focus behavior across different components
added unit tests for handling SAML properties in the SamlIDPRefreshMockMvcTests class to ensure proper functionality of zone configuration through unit testing
added checks and stack operations to manage list elements in ComparableVersion . java and created a test for Mng7644 in ComparableVersionTest . java to ensure proper handling of empty values and validate version comparisons forng 7644
updated bottom and bottom mode settings , added padding and margin properties in UIManager to ensure proper layout positioning and improve UI responsiveness
updated import statements and package structure for ParallelUniverse and TestUniverse classes to improve organization and accessibility of test classes within the Robolectric framework
updated method type handling in LocalCacheFactory and NodeFactory to simplify constructor invocation to enhance code readability and maintainability by reducing redundancy
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve the visual appearance of the cell in the UI
added self loop drawing functionality to the graph to enhance visual representation of self loop edges in the rendering process
updated the configuration values for TVM Solidity 059 from 0.5 10 to 059 to standardize the naming and functionality for improved clarity
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
added a line to set the translation Y of the drag handle indicator to zero to reset the visual appearance during drag operations
remove excessive log call in itemviewer . updatetable ( )
updated the documentation for query optimization in HiveConf . java to clarify that filters are not pushed down in the operator tree
added a platform check to ` ScanningAppProviderRuntimeUpdatesTest . java ` to avoid issues with finding itself apparently
added Maven bundles for Jetty ALPN client libraries and a debug option for diagnosing OSGi bundles to enhance compatibility with Jetty and facilitate debugging in OSGi environments
fix issue with update process instance lock time when async job fail to execute
refactor transaction handling logic to improve transaction efficiency and maintainability
replaced custom field behavior annotation with ExcludeFromRuleKey annotation in GenruleBuildable . java to improve clarity and control over Genrule execution logic
simonstewart : allow the firefox driver to be launch on a remote machine . work in progress .
added a check to avoid adding existing column names to the colFamToDynamicColumnsMapping to ensure that the column names are only added if they already exist
[ hotfix ] [ runtime ] fix checkstyle violation in sparkoutputcollector
phoenix - 4769 add functionality to add derived column to parent table for view
added functionality to retrieve and update student information for a given email to improve user experience by ensuring unique student IDs during accounts
fix allxssftests to actually check the poi version
add a check for block hardness in lenspiston . doubly check for block .
add a new file LongPointerPressTest3049 . java implementing a UI with network error handling to demonstrate the functionality and error handling in the application
truffle : always report graphistoobig error for direct call .
replaced null checks with a ternary operator for null return statements in multiple classes to improve code readability and reduce boilerplate
fix # 484 listblockparser deeplyplyindentlist ( # 485 )
added a new abstract class AbstractOptionalAssert and refactored related code in OptionalAssert to improve type safety and encapsulation of Optional assertions
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to mark the test as ignored due to issue # 1070 is resolved
[ wasm ] make the ` ` savemessage ' ' method of ` ` testcaselogger ' ' more generic .
camel - 15836 - camel - jbang - terminate run app with ctrl + c then have little to no logging output
added a condition to check if the video format is a video before processing to ensure that only valid video formats are processed further
added Security configuration to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to improve security by eliminating unnecessary TLS algorithms
server : ignore local storage pool , we do n ' t have a master
updated cache logging to use a variable for the cache entry and improved string formatting to enhance logging clarity and maintainability by avoiding string concatenation
add option to skip model update after manage dependency
added tests for the last intent sender request in ShadowActivity . java and implemented the send method in ShadowPendingIntent to ensure correct behavior of intents sending with the specified request code
updated RocketFigure3d to use GL - enabling FBO and refactored graphics creation logic to improve rendering performance and clarity by consolidating graphics configuration management
added synchronization to the controllerListeners list and modified the removal logic of the listener in the HydrawiseControllerHandler to ensure thread safety during concurrent access to the controller listeners
solr - 9893 : upgrade mockito to version 2.6 . 6
updated year retrieval method and improved date formatting in SetObject310Test . java to ensure correct year handling and enhance date formatting for better readability and usability
fix a potential npe cause by the jabber protocol provider when reconnecting .
updated string format to include " cur . ws _ commit _ id " to ensure consistency in transaction handling
replaced ByteChunk with ByteBuffer for better memory management to improve performance and reduce memory overhead when handling buffer operations
added a ` toSync ` method to ` AsyncUtils ` to convert a ` CompletableFuture ` to a ` CompletableFuture ` to enhance asynchronous handling capabilities and improve error handling during asynchronous operations
added ActionGraphBuilder to multiple compiler factory classes and updated method signatures accordingly to enhance the build process by integrating ActionGraphBuilder for better build efficiency
alexeibarantsev : add a failing test for hidden file input during upload
the sqlmanager ( ) method will now only create database if the database driver be available .
fix ` ` build ' ' so that it return a default maven directory if it do not exist
ggb - 2118 hidden label do not show in av ( but hide in all apps )
fix npe in ctelementimpl . getmetadata ( ) ( # 2184 )
fix : buffer . setflags ( ) be misuse by addflag ( )
hhh - 13283 entityiterablebase # reorder should check for sortedbyid first
fix typo : ` ` method call not specify for verify ( mock ) ' ' - > ` ` method call here ' '
added a null check for backupFolder before logging the expire time to avoid potential NullPointerExceptions when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating a void array using reflection to explore and handle the behavior of Java reflection when attempting to instantiate void types
added @ AddToRuleKey annotation to toolType in ClangCompiler and GccCompiler classes to ensure the toolType value is correctly added to the rule key for rule key generation
pincheck : increase timeout for long run operation to avoid false positive .
make sure prometheus exemplars be sampled by default ( # 2079 )
remove @ ignore for test that require mongodb server
no effective change - code cleanup , remove unneeded cast
updated condition in MetaDataSource to check if the table is artifical instead of the table name to ensure that the table is valid for processingArtifical queries
modified file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer . java and LaunchMapper . java to ensure correct handling of directory types during file movement
modified MongoSessionManager to handle null or empty attributes more effectively to improve session attribute management and avoid potential issues with empty datasets
replace fixed size setting with setSizeFromLayout method to improve resizing behavior for surface holder layout
replaced direct usage of ` _ stopping ` with a local variable ` stopping ` in ` AbstractConnector . java ` to improve thread safety by avoiding repeated calls to ` _ stopping `
removed unnecessary whitespace in the HuobiStreamingService class to improve code readability and maintain consistency
camel - 1748 : fix defaultmessagehistory default value to show current time when use timer
refactor error handling to directly subscribe to exceptions in the subscribe method to improve clarity and maintainability of error handling logic
modified WebSocketHandshakeException assertion to check for unexpected error type to improve error handling by providing more informative failure messages during WebSocket handshake failures
added a layout change listener to AllAppsTransitionController for handling scroll events to improve the responsiveness and responsiveness of the user interface
updated variable names from ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability
added functionality to set a default output channel in the XPathRouterParser to ensure that the application properly sets the default output channel for routing
updated cacheSeconds type from int to String and added DurationCapable annotation to improve flexibility for specifying cache duration
update openapi doc for 3.0 . 0 rc1 release
removed the append method call from ByteBufferPool . java to streamline buffer handling by eliminating unnecessary operations
added a method to check for the detection of the alt - rt . jar in the system to skip tests that are not relevant to the boot class path
updated user deletion queries to use ' upper case ' for consistency to ensure data integrity during user deletion operations
replaced Arrays with ArrayList for configuration options in FlightRecorderProfiler to improve flexibility and support for different Java versions
mow - 520 avoid image drop when there be no stream
added a check for content length in the HttpParser and implemented a test for chunked PUT requests in ProxyServletTest to ensure proper handling of chunked requests and validate functionality through testing
updated AtmosEndpoint . java file to improve functionality and maintainability of the Atmos API
updated conditional checks for " printf " and " print " in Java2TypeScriptAdapter . java to enhance functionality to support additional method names
add a new file TestCapacityUntilGCWrapAround . java and native method for incrementing metaspace capacity in WhiteBox . java to facilitate testing of memory allocation behavior under 32 - bit platforms
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
simplify starttime setting ; document badly name method
add unit test base on user forum issue
tmi - jpeg : fix imageio ' s processing of icc profile , now only report a warning .
add terra rod so they ca n ' t cause reequip animation , close # 340
added configuration and environment entry checks before registering beans to ensure only valid types are registered to avoid potential errors
update WebappLoader and ContextRuleSet classes to use parent class loader directly to improve class loading mechanism and simplify the creation of loader instances
bug 54777 - nameupdater : add resource to make name updater update more robust
fix a bug where the ellipsoidregionselector could n ' t start and then fail to start .
updated URLs from " http " to " https " in Desktop . getDesktop ( ) methods to enhance security by using a secure protocol
[ geos - 8402 ] make wfs getfeature # getfeature respect custom sortby property
updated the null check for grantor assignment from ` grantTuple [ 0 ] . equals ( null ) ` to ` grantTuple [ 0 ] ` to improve code readability and prevent potential NullPointerExceptions
[ fix ] [ test ] make Diagramgenerationtest test use compatible image
add meaningful error message when minecraftlogger be n ' t in use .
add some minimal documentation to datautility and retypefeaturereader
make locktest more reliable on slow machine
added methods ` wholeWordTokenize ` and ` joinTokens ` to handle string tokenization and separation of tokens to enhance string manipulation functionality for better user experience
always return a 404 status code 409 instead of a 404 error
refactor command handling and improve highlighting logic in SystemHighlighter . java to enhance code clarity and functionality by ensuring command indices are correctly handled
update version and version date constants in Constants . java to reflect the current development state of the application
update buffer position setting from idx to dimensionSize to ensure correct buffer size is used for better data processing
added drag and drop functionality to the QuickstepTestInformationHandler and SystemUiProxy classes to enhance testing capabilities for drag and drop functionality
[ test ] add jdk 7 test for socketappender and socketappender socketoptions
add PSK - AES256 - GCM - SHA384 + TLSv1.2 cipher type to TestCipher . java to enhance security by using a more robust encryption algorithm
replaced ` getDescription ( ) . getText ( ) ` with ` getLongDescription ( ) ` for setting description to improve clarity by displaying more relevant long descriptions
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization of the group member ' s value property
refactor HqlQueryRenderer to process reserved words more effectively and add tests for function names to enhance query parsing functionality and ensure proper scoping support for function names
camel - 17927 : fixed null check error in test code
refactor Parser class implementation to improve code readability and maintainability
adjusted the ` offsetStreamIndex ` method signature to include a ` indexStartsAtOne ` parameter and modified related logic to ensure the method correctly adjusts the positioning of tracks based on their start position
tika - 697 -- fixed typo in magicdetector , and add unit test for it
[ flink - 17754 ] [ table - planner - blink ] fix monotonicity function of flinksqloperatortable
added inheritance annotations and equality checks in OneTimeTokenAccount and OneTimeToken classes to ensure proper object comparison and hashing functionality for better object integrity
added a condition to check if the assistant is fling when mLaunchedAssistant is false to improve the handling of fling scenarios by preventing fling when the assistant is not interactive
added a new file SolarisShortDSA . java for testing Solaris signature generation and verification to address compatibility issues related to cryptographic cryptographic operations in the application
added toggleSearchLabel ( false ) method in ListFragment . java to improve user experience by managing search label display
bug cs - 15825 : do n ' t lock volume while create a snapshot on primary
refactor DetailsServiceConnection to a nested class and manage its connection state to improve code organization and ensure proper cleanup of the service connection
test : fix flaky testclienttlstest . testsslpeerunverifiedexception ( # 4414 )
removed the equals method from ConjunctionScorer class to simplify the class by eliminating unnecessary functionality
added null check for variable ' v ' in Launcher . java and log a failure when binding items to ensure stability by avoiding potential null pointer exceptions
fix potential deadlock in getleaderelection method . ( # 15679 )
modified cache size handling logic to adjust the maximum cache size to improve cache management accuracy and log execution time
updated API path from " / api / v2 " to " / api / v3 " in multiple classes to align the API endpoint with the correct versioning convention
added a method ` empty ( ) ` to check if the list is empty to provide a convenient way to check if the list is empty
drill - 8023 : fix release of empty dictionary page in parquet reader
updated SerumStreamingService to handle additional arguments for market data types and improved argument validation to enhance flexibility and ensure correct data types are used for market data processing
add config option to disable the charging animation when the pool be charging on top of a mana pool
[ java ] handle timeout exception when wait for cluster to be close .
updated catch block to use ` ex ` instead of ` ignore ` to improve error handling by logging specific exceptions
make test more reliable on less filesystems
updated the injection process in ResourcesInjectorFull . java to ensure correct injection of dialog and screen styles
updated changeLogFile and outputFile types from String to FileResource in multiple classes to improve file handling and support additional resource types in the Liquibase framework
fix checkstyle issue in blockworldvector
updated LongConcurrentLRUMap to remove unnecessary TODOs and added final modifiers to CacheEntry to improve code clarity and enforce immutability for subclassing
encapsulate string handling in a separate regex pattern before adding it to resourceConfiguration to improve code readability and ensure proper handling of special characters in resource paths
modified the cache retrieval logic to include a substring of the KRB5CCNAME and improved error handling to enhance cache management reliability and provide better feedback when cache is missing
updated the database path variable from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to clarify the purpose of the test for validation purposes
change hassufficientpeers ( ) to always return true ( # 1396 )
alexeibarantsev : fix warning about wrong session id in firefoxdriverservlet .
fix for # 4396 : do n ' t expand ' AreEqual [ Segment [ X , Y ] , Segment [ Z , W ] ' in the format expression
fix performance issue in native view when use minimized mode
fix flaky test by ignore deadline
fix write - behind write - behind thread safety problem
set the icon of a JLabel to null to ensure a clean space before rendering the component
updated test methods in TestBlacklistAwareRedirectResolver to set strict match to false instead of strict match to improve test accuracy by ensuring strict matching is correctly disabled
added socket closure in ShutdownMonitor and updated tests in ShutdownMonitorTest to ensure proper resource management and validate socket status updates
fix chunk fill rate default for randomaccessstore ( # 11967 )
added a method to read fields from an object using a type map and improved field reading logic to enhance functionality and maintain consistency in handling different field types during serialization
[ hotfix ] [ util ] move componentclosingutil to coordination package
deleting volume to disk on user vm fail a volume can lead to data loss
cloudstack - 3229 fixed getip6range method in configurationmanagerimpl
rename userDetailsBeanNames to beanNames in InitializeAuthenticationProviderBeanManagerConfigurer . java to improve clarity and consistency in naming conventions
updated the retry time in the CollectionsAPIDistributedZkTest from 15000 ms to 30000 ms to improve the stability of the test by allowing longer retry times
add log statement to abstractparam for invalid input ( # 3967 )
updated drawing conditions in URLImage . java to correct positioning of elements in the graphics rendering
update field names comparison from solrDocument1 to solrDocument2 in SolrTestCaseJ4 . java to ensure consistency in field name comparison between documents
remove handling of arrayindexoutofboundsexception in set , add a helper method to determine if an item be a member and it ' s high cardinality .
[ hotfix ] add cause when fail to create a streamtaskexception
refactor string handling in Preprocess . java to improve character processing logic to enhance readability and maintainability of the code
removed unnecessary line breaks in the read method of MessagePack . java to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotation ` package to provide a standardized way to handle custom annotations in the application
jsonparser : do n ' t encode empty extension list ( # 3647 )
fix artifact loading to work with external meta with no internal name .
added a alias for node _ popup _ scripting in the ScriptingMenuEntryVisitor class to provide a means for aliasing of node scripting in the scripting menu
updated constants and methods in OverviewActionsView and RecentsView to enhance task visibility and interaction based on device profile to improve user experience by refining the behavior of action views in different device contexts
( chore ) camel - jms : avoid use deprecated method when possible
[ java ] fix checkstyle violation ( # 11165 )
deleted the AbstractDelegatedVerb and FailureContext classes to remove deprecated code to streamline codebase
updated GzipHandlerTest to use final constants and added MicroServlet for handling HTTP headers to improve code clarity and ensure proper handling of HTTP headers based on availability
fix for ' repeat ' and ' distinct ' operator repeat test for unbounded subscriptions .
refactor SpeedmentImpl to improve logging functionality and readability to enhance clarity and maintainability of the code
add a new file LoadDSpaceOAIConfig . java that implements a servlet for loading OAI configurations to enable dynamic configuration management for the OAI application
modified StoreScanner and TestWideScanner to change matcher row handling and incrementing tests to improve robustness and test coverage of matcher functionality
camel - 4900 : make it possible to configure jmx on the unit test so they can be run on the ci server .
replaced hardcoded path separators with a constant for better maintainability to improve code readability and reduce potential errors related to package path handling
added methods for finding the YARN binary and modified job monitoring in RemoteSparkJobMonitor to enhance functionality for YARN applications and improve application status reporting
added support for " maria " database types in the DbConnectionManager to ensure compatibility with Maria database connections
fixed typo in log message ( # 1040 )
added a new file ` ExecuteAndReturnStringTest . java ` to test UI components to ensure functionality and error handling for UI components in the application
added a new file ` InvokespecialInterface . java ` implementing interfaces with default methods and invokedynamic methods to demonstrate the use of ` I ` for invoking interfaces and ensure correct invocation handling in interfaces
[ hotfix ] fix checkstyle violation in flink - runtime
make graphhopper always use edge base 2dir by default
updated selection check in SelectBox . java to ensure selection is valid to prevent illegal argument exceptions when selection is disabled
hbase - 15825 addendum . fix npe in rpcserver # start ( )
updated hotseat cell size calculation to include border spacing to improve layout consistency in UI elements
updated the construction of the key string in ExpressionTree . java to improve clarity and efficiency by directly referencing the values
implement versioned interface in NamedTaskDecorator and TaskDefinition classes and add conditional checks in serialization to ensure compatibility with version 4.1 and improve serialization handling
updated index directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure compatibility with the latest index directory structure
change the initial value of the ` equal ` boolean from ` false ` to ` true ` in ` DisplayModeTest . java ` to ensure the comparison logic correctly accounts for the display mode being tested
fix # 557 : latex representation of unicode character ( # 557 )
fixed bug # 594 - ocacaparithwalk string . value be null if all control character be not set .
simonstewart : attempting to fix the npe in the selenium backed selenium .
added functionality for handling bookmarks and clear buttons in DataBrowser to improve user experience by ensuring clear functionality is consistently applied
updated OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building base URL to simplify port handling and improve URL construction logic
updated date assertions and error messages in SoftAssertionsTest . java to improve accuracy and clarity of date validation assertions
updated the adaptOrders method to include a reverse parameter for improved order adaptation to enhance order processing by allowing reverse order order order order order order order order
[ delombok ] print ` ` var ' ' use a null or empty string ( issue # 176 )
[ java ] removing unimplemented version of the htmlunit driver a it be not implement yet
updated Configuration instantiation to use a false parameter and removed unnecessary conditional check to improve flexibility in configuration handling and reduce unnecessary code
replaced calls to ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha ) ` in ` WidgetGroup . java ` to ensure proper rendering behavior in the WidgetGroup component
added unit test base on user forum issue
use tomcat ' s catalina base property from the web application context .
added tests for the ` bestDateTimePattern ` method in ` ShadowICU ` class to ensure correct localization behavior for Japanese and UK locales
update the PlotSquared class to include a new color map entry with default color settings to improve the visual representation of color values in the PlotSquared component
update TraceRestClientRibbonCommandFactory to include ZuulProperties as a bean to enhance the functionality by integrating Zuul ' s configuration capabilities
tika - 2271 -- fix unit test that fail in trunk due to different timezones .
maven plugin : add buildinfo mojo to show build time
replaced the calculation of xDist with an absolute value to ensure that the x distance is correctly accounted for when it is vertical
remove an old file ( no longer use yet )
removed nullability annotations from method parameters in LazyMessage and related classes to simplify code and improve readability by assuming template is not null
fix test to print more information on failure
move thymeleaf templateparser from templatemanager to templateparser . markup in order to avoid conflict with other templateparser class
camel - 8193 fixed the c error of xpathbuilder . xpath ( )
added @ Nullable annotation import to FutureUtils . java to indicate that certain variables may accept null values
add warn for non - dynamic invocation expression in onflycallgraphbuilder
updated email addresses in ContextTest . java from " @ gmail . com " to " my realemail @ example . com " to ensure users receive the correct email for example usage
updated HTTP response handling in HttpConnectionTest . java to correct the endpoint format to ensure accurate parsing of bad encoding requests
added ` getColumnDataType ` method to ` AbstractResultSet ` and ` ResultTableResultSet ` classes to provide functionality for retrieving column data type based on column index
change visibility of serviceclientconfiguration method to default to not throw unsupportedoperationexception .
fix bug # 51190 - correct javadoc for hssfpicturedata
updated time handling to use Instant for better accuracy to improve accuracy and accuracy of time representation in the statistics logging
added versioning support and updated options in LibMediaInfoParser to enhance media info functionality and improve version handling
added reflection support for IdeaDependency in ProjectReader . java to enhance flexibility in handling different dependency types
add a new class SerialHeap and update its mappings in Universe . java to utilize it for serial memory management
added multiple @ SuppressWarnings ( " serial " ) annotations in the Gson $ Types . java file to suppress serialization warnings for better code clarity and maintainability
use mouse . getposition ( ) instead of mouse . getposition ( ) for consistency
updated MongoQueryCreator to handle null next parameter and added a new test for handling the first name case in AbstractPersonRepositoryIntegrationTests to improve robustness of query creation and ensure functionality works as expected with null values
[ flink - 26711 ] [ type ] change the keytypeinfo interface from maptypeinfo to maptypeinfo and add a new MultisetTypeInfo class
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` to retrieve multiple identity providers based on the specified issuer , enhancing error handling
pdfbox - 4892 : detect more valid cmap format , a suggest by valerybokov
added a new OperationsServiceConnection class and integrated it into the ContactsBackupJob class to manage service operations more effectively within the application
refactored type constraints and introduced new classes T6938454a and T6938454b with generics implementations to improve type handling and provide examples of bounded type parameters
added ` isConfigHidden ( ) ` method to ` AccountList ` and ` AccountID ` classes to control the visibility of account configurations dynamically
added logging for incorrect supported bounds in DisplayController to improve debugging by logging the correct number of displays
phoenix - 4875 remove wrong schema from metadata when add / remove a schema ( jamestaylor )
apps - 2608 fire passive login event only if passive login be enable
added a new Box2DTest class and updated GDXTester and JoglApplication to support it to test the Box2D functionalities and enhance application functionality
fix typo in index byparticipant method and add debug log
change default buffer request timeout from 5 minute to 5 minute
doc ( regen ) : update sample code to use gapic 0.0 . 5
add ` ` help ' ' button to openoffice integration page
enable TCP _ NODELAY option in NettyAcceptor and related classes to improve connection reliability during TCP connection configuration
updated method signatures to use wildcard generics for better type safety to enhance code clarity and reduce potential type conflicts
[ java ] avoid classcastexception with wrong ` ` class ' ' reference in scanresultobject
image decoding : fix some issue with stream decoding
added null handling functionality to the Querydsl class and created a new test class for it to ensure proper handling of null values and validate functionality through testing
added null check for actor in ParallelAction and SequenceAction classes to ensure proper handling of actions when actor is not null
test ( refactor ) : fix checkstyle in cttypetest . testsubtypeof .
added synchronization to the closing process in HDFSEventSink . java to ensure thread safety during writer operations
added a new file ` Issue888 _ JavaI . java ` implementing interfaces ` JJ ` and ` JK ` , along with a test for these methods to implement and verify the behavior of JJ and KK functionalities in the Kotlin framework
added revoke functionality for existing agent certificates and improved command handling to enhance security by allowing manual revocation of existing certificates
added a check for HTTP / 1.1 headers to avoid writing empty responses to ensure that only valid HTTP responses are written to the server
added exception handling for loading script engine in ScriptTransformer . java to ensure compatibility with Java 6 and provide clearer error messages
updated the connection pooling type configuration to include additional database and Hikari connection pools to enhance connection management and support additional database types
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to streamline code by using the launcher instance for home press functionality
added lock file action to the file menu and updated related logic in OCFileListFragment to enhance user experience by allowing unlocking and locking of files
fix : lucene : core : spotlessapply failure due to 8.8 . 1 version update
fix updateKeyspace to clear the endpoint cache properly . patch by jbellis
added a method ` waitForState ` to wait for thread states and replaced synchronization logic with a volatile reference to improve thread state management and simplify synchronization logic
updated the method signatures and context handling for coerciond attribute values in Skylark classes to improve code clarity and functionality by directly using the context dependencies
alexeibarantsev : implementing storage interface in org . openqa . selenium . html5 to extend interface for local and session storage
add null check for existing view and refactor test cases for unnecessary or replacement functionality to enhance robustness and improve test coverage for view creation functionality
change exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error reporting specificity for specific file generation failures
updated SpellCheckComponent to retrieve the query string if it is null to ensure that a valid query string is used to prevent potential null pointer exceptions
added validation for header values to check for illegal characters and whitespace patterns to ensure that header values conform to HTTP specification and prevent potential errors
[ gr - 21172 ] fix load hybrid and universe array offset for native image .
[ core ] remove astcommentcontainer method and rename to abstractapexcommentcontainernode
hhh - 8532 - improve fetch timing determination and warn log
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter to simplify class hierarchy and enforce subclassing for specific filtering behavior
added assertions to verify database name and table name are in TestCompactionTxnHandler . java and set these properties in TxnHandler . java to ensure consistency and correctness of transaction handling functionality
camel - 3481 : timer component now support suspension to let the graceful shutdown of the timer component .
added a conditional check before adding traces and removing the currentBlock to optimize trace handling when the block is processed
updated the handling of null providers in the ProviderManager class and added tests for null elements to ensure proper validation and prevent potential NullPointerExceptions during provider initialization
removed unnecessary database version check for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to simplify the code logic for better readability and performance
added local index limit assertions and updated related logic in multiple classes to enhance functionality testing for local index limits and ensure proper handling of region attributes
added a check to prevent adding a collection with the same name and a different type in the past to ensure consistency and prevent issues related to incompatible collections
updated cursor positioning logic in VDUBuffer and vt320 classes to improve cursor handling and ensure correct window positioning
added a new constant USE _ RETRIES named in HttpShardHandlerFactory to define the use of retry settings for shard management
updated VERSION _ NUMBER format in JavaVersion . java and added a test case in TestJavaVersion . java to ensure proper parsing of version strings and validate functionality through testing
added a check to return early if input gates are empty to improve performance by avoiding unnecessary processing when no input gates are present
int - 1614 add unit test to investigate intermittent ci failure
updated the return statement to handle null properties safely to prevent potential NullPointerException when properties are null
replaced the throwing of an IOException with a variable IOException and updated the IOException initialization to improve error handling by providing the original exception cause
ambari - 21743 . add ambari prefix for service doc ( dlysnichenko )
added a private TxConfidenceListener class for transaction confidence updates to ensure proper handling of transaction confidence changes to the wallet service
bugfix # 118 , add a default g1 perm space to the jmxtable
removed redundant imports and simplified return statements in NearbyController . java to improve code clarity and maintainability by reducing redundancy
pdfbox - 4892 : make class public , a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2 . java to utilize TaskInfoCompat for consistency to ensure accurate identification of non - home tasks during gesture handling
renamed DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and updated related references and constants to improve clarity and specificity for handling edge header configurations
renamed methods and variables related to network country iso to improve clarity and ensure case - insensitive handling of ISO addresses in the telephony manager
added functionality to set the unfreeze amount in UnfreezeBalanceV2Actuator to ensure accurate representation of unfreezed balances in the application
update publish schedule description , per match instead of per minute
simonstewart : fix a bug in the firefox profile that be n ' t copy to a directory on linux .
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
javadocs : add @ see link to wiki discussion of ` ` backpressure ' ' ; add marble diagram for onbackpressurefoo ( ) operator
replaced database object handling with a multi - field operation for the update operation to improve flexibility and support for multiple collections in updates
added a null check for ` randomUUID ` before setting the ID to ensure ` randomUUID ` is always generated to avoid potential null pointer exceptions
added hover event handling to InputConsumer and OverviewInputConsumer classes to improve user interaction by ensuring hover events are properly dispatched when required
solr - 5495 : fix zk bootstrap to avoid race condition when start - to - zookeeper
camel - 14284 : camel - netty - http should use label option for the http client header size
hbase - 23343 increase retry time for hbase _ client _ retries in hbasetestingclusterautostartition to 15 second
updated file creation logic in SourceSnippetHelper . java to improve path handling by using absolute path for file path
[ gr - 27654 ] truffle : fix flaky test in encodedgraphcachetest .
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " and added a new test method for query over output to improve clarity and functionality of table retrieval in the application
added logic to adapt Kraken asset codes to their respective currencies to ensure accurate representation of currency details in the Kraken API
added a ` toString ` method to the ` AnyOf ` class and created a test class ` AnyOf _ toString _ Test ` to improve the string representation of conditions for better debugging and ensure that the ` anyOf ` functionality is verified through unit tests
refactor email handling to use dimensions for improved clarity to enhance code readability and ensure email subjects are correctly formatted
[ beam - 10670 ] warn about miss measurement / database property influxdb
renamed method ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and specificity regarding the handling of number conversions
added a method to filter specific IP addresses in NetUtils . java to improve filtering capability for local addresses
fix for [ netbeans - 4294 ] custom data text in formatter
added methods for setting properties and property values in WrapSystem , StrUtils , and CompileMethodEntity classes to enhance configuration management and improve method processing capabilities
added a constructor to the UpdateRequest class that accepts a URL string to enable POST requests by allowing the URL to be passed directly
changed enum serialization from static to instance in multiple classes to improve object - oriented design by using instance state
removed the ` addExperimentalFormatWarning ` method from ` RequestHandlerUtils ` and added it in ` DataImportHandler ` and ` ReplicationHandler ` to notify that the response format is experimental and should be removed in future
[ ci ] correct formatting of module name in ci log
bug fix : set a small row height of the font dynamically
[ issue # 5040 ] remove useless null check ( # 5041 )
added mean and partition count variables to the CQLInputFormat class to ensure correct calculation of partition sizes based on input data
simplify test conditionals by removing unnecessary condition checks
[ drools - 7 ] add equal and hashcode method to ruleterminalnodelefttuple
added import for StageIDsRearranger and integrated it with the physical context in TezCompiler to enhance query optimization by utilizing the StageIDsRearranger for improved performance
change from concurrent type to net : type for messagingservice mbean . patch by jbellis
modified memory consumption logic to include debug output to enhance visibility into memory initiation and improve performance monitoring
added imports for Apache Lucene document and updated DimConfig initialization in multiple facet classes to enhance documentation and improve clarity and consistency in handling facet configurations
updated LdapAutoConfiguration and LdapProperties classes to improve handling of anonymous read - only properties and context source classes to ensure consistency in configuration and initialization for LDAP context sources
refactor DatabaseMetaData class for better readability to improve maintainability and ease of understanding for future developers
[ java ] fix compiler warning in echostrunner .
added a new method ` finishMocking ` and improved error handling in ` MockitoSession ` , ` DefaultMockitoSession ` , and ` StubbingWarningsTest ` to enhance the Mockito functionality and ensure proper cleanup after failures
refactor dependency handling in GoTestDescription to streamline dependency management to improve clarity and maintainability of test cases
renamed variables and updated buffer handling in SPDYAsyncConnection and HTTPSPDYAsyncConnection classes to improve clarity and functionality of buffer management during asynchronous operations
fix blockliquidwrapper crash when try to get a block that be never use .
updated intent data handling to use Uri for better URI handling and improved location listener class loading to enhance the reliability and flexibility of location processing
fix typo in apr . thanks to benjamin graf for spot this .
[ flink - 33954 ] [ client ] fix clifrontend ` ` classnotfoundexception with streamingplan ' '
fix craftingmanager . getallrecipes ( ) performance issue . close # 290
flume - 2372 : fix flaky test that be fail due to previous backup
removed unnecessary checks for carriage return and carriage return in TabsAndIndentsVisitor . java to simplify code logic for better readability and maintainability
added a pattern to compile " . * pg _ temp _ . * " in NeuteredLinesFilter . java to support temporary file handling in the filtering logic
chore : integrate new gapic - generator - java and rules _ gapic ( # 677 )
updated ` DataTypeFactory ` and ` UnknownType ` to handle different data types more effectively to ensure proper handling of data types related to INTERVAL and NCLOB data types
add micrometer to wavefront meter registry ( # 1357 )
updated the handling ofDivideUpstreams and added a warmup timestamp to the DivideUpstream builder to improve the efficiency and warmup duration of the downstream process
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable registration of sensor listeners with specified parameters
added socket exception handling in SelectChannelServerSslTest to log warnings for socket exceptions to ensure graceful logging and handle socket exceptions during SSL connection closure
added null check for ignite before closing and updated logger visibility in AbstractFeatureTest and CamelIgniteTest classes to ensure safe resource management and improve logging clarity for better debugging
update result set handling in AbstractClient . java to handle cases with zero and empty sets to improve clarity of output and ensure proper handling of edge cases
pdfbox - 2852 : do n ' t swallow unsupported flavor exception
added tests for HDR capabilities in ShadowDisplayTest . java to ensure proper functionality of HDR capabilities handling
added a finally block to release the classLoader reference to ensure proper resource management and prevent potential memory leaks
hive - 17514 : log number format exception in dcmd ( gopal v , review by jesus camacho rodriguez )
added a default constructor to the Message class to ensure proper instantiation of Message objects
updated serialization priority handling in SerializableIdiom . java to improve bug reporting for non - serializable classes
updated the PhoenixDecimalObjectInspector to include PrimitiveTypeInfo and modified the handling of BigDecimal to ensure proper precision scale handling for decimal types
modified CompressionResponseStream to handle a committed response with the Content - Encoding header to ensure proper compression behavior when the response is already committed
changed variable and method names from ` WWWAuthenticate ` to ` authenticateHeader ` to improve clarity and consistency in naming conventions
updated DCD . java to remove redundant name checks to simplify the code logic for better readability and maintainability
added a method to retrieve the thread group name for better context to improve clarity and avoid potential null pointer exceptions
added logging functionality to MethodInvocationPrivilegeEvaluator for security interceptor access control to improve debugging capabilities and provide better visibility into unauthorized requests
updated package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` and changed logger name to ` org . apache . nutch . tools . DmozParser ` to better organize the code under the tools package and improve log clarity
removed the import of ` lombok . ToString ` from ` ChainingRegisteredServiceDelegatedAuthenticationPolicy . java ` to clean up the code and reduce unnecessary dependencies
cloudstack - 2120 : fix migration from user vm to iso
refactor the SigInt and SigIntTest classes to simplify signal handling logic to enhance code readability and maintainability by removing unnecessary complexity
replaced the use of ` isEmpty ` method with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code readability by using the standard utility method
replaced NoopDiscoveryClientAutoConfiguration with Spring BootTest and added a discovery client bean to enhance testing capabilities and ensure proper initialization for the discovery client
added multiple @ Override and @ Override annotations to ColorRGBA class to ensure proper method overriding and improve code readability
planningentityconfig : remove deprecate planningentitydescriptor / greedyfitplanningentityconfig . java ( planningentitydescriptor . resetinitializedplanningentities ( ) )
added build time management functionality to several classes to enhance build time handling in the caching mechanism
updated methods in GroupByOperator to use arraycopy instead of getFields and adjusted fixedRowSize calculation to improve handling of varLenFields more accurately and ensure correct row size computation
added null checks for the block before adding it to the best chain to avoid potential NullPointerExceptions when the block is not initialized
added new currency pairs FTC _ BTC and CNC _ BTC in multiple currency classes to support new cryptocurrency features in the application
updated skewAllowance handling to allow dynamic adjustment based on service configuration to enhance flexibility in skew allowance configuration for SAML operations
updated SongListActivity to set a sort by item in the query to improve organization and consistency of song sorting logic
remove unused imports and a method to read body byte array from a request to improve code cleanliness and reduce unnecessary complexity
make old worldedit world compatible with old worldedit api
updated IcebergBranchExec to check for tag existence using SnapshotRef to improve error handling by throwing an exception when a tag does not exist
replaced newArrayList with Collections . singletonList for external groups whitelist to improve flexibility in handling external groups list
replaced ` bounceCount ` and ` frameNumber ` with a variable ` boxesResourceIndex ` in ` PhotonMappingDemo . java ` to enhance clarity and maintainability of the code
added validation to ensure ` requirePasswwordChangeRequired ` is set before processing the password change request to prevent invalid payload and enforce password policy requirements for identity providers
added a check for non - initialized fields to removeAll certain fields to ensure that certain fields are only processed when reflective is true
modify the SQL error message to include a check for closed connection to improve error reporting by providing clearer context on the connection closure
added a new method ` testRequiredBody ` to validate the presence of user data and user name in a template to ensure that the application correctly handles missing user data and their names in the template
updated regex patterns in CredentialInjector to allow dot notation for user and password to ensure compatibility with different database formats used in the application
added a new menu item " Item4 " and a key binding for the enter key binding in ActionListenerCalledTwiceTest to enhance functionality by providing additional options for user interaction
updated output messages in TestCoreParser to include class name and modified assertTrue method to check for result verification to improve clarity of output and ensure that results are only produced when appropriate
updated conditional checks in SimpleNode . java to use ' id ' instead of ' id ' for better clarity to improve readability and maintainability of the code
removed the ' public ' access modifier from the PopulatorContextStackItem class to enforce encapsulation within the class for better encapsulation
updated the method for retrieving the number of documents and added a test for small sample from corpus to ensure accurate tracking of document counts and validate functionality through testing
refactor the event handling logic for the QuestManager class to improve readability and maintainability of the code
[ hotfix ] [ test ] extend testlogger in networkbufferpooltest to avoid inheritance from testclass
updated query appending logic in MongoSessionDataStore . java to ensure correct string concatenation for expiration handling
sulong : add unsafegetlong macro substitution for customizedunsafeloadmacronode
updated time zone data references from " ARAST " to " EET " across multiple language files to correct the time zone representation for improved accuracy
updated deprecation ID from 90000010 to 90000011 to reflect the latest version of the deprecation process
hhh - 15855 do not wrap sqlexception with proper context in a transaction lock
remove confuse notification and add trail slash ( if any )
workaround for freeplane menu bar for non aqua look and feel under mac o x
apps - 1482 add cas integration test for piecewise
fix recent animation not get complete sometimes when use 3p launcher be : fcad20bad9
added a new configuration variable ` modWhiteListPattern ` in ` HiveConf . java ` and implemented a test for modifying certain parameters in ` TestJdbcWithSQLAuthorization . java ` to enhance configuration flexibility and ensure correct behavior when modifying certain parameters
add entry to invalidclasses in the EntryLoader class to ensure that the entry is associated with the specified entry name
update target coordinate retrieval from team . sharded to player . team ( ) to ensure accurate relevance based on player ' s team context
updated cookie configuration to use host name instead of a hardcoded domain to improve flexibility and accuracy of cookie handling
added nullable validation logic and updated nullable validation logic across multiple classes to ensure accurate handling of nullable columns according to search criteria
Refactor multiple security token client and client classes for improved organization to enhance maintainability and readability of the security token handling functionality
added a new test for adding documents and modified the CompositeIdRouter to use static final constants for the separator and bitsSeparator to improve test coverage and ensure consistency in the handling of composite IDs
added snapshot management functionality to ` ExecutablePreparedStatementBase ` and updated ` PostgreSQLIntegrationTest ` to utilize ` Map < String , Object > ` for snapshot data handling to enhance performance and maintain data integrity during PostgreSQL operations
modified conditional checks and corrected syntax in DefaultServlet . java to ensure proper handling of cache settings and improve code readability
added drag event handling for copy , remove , and bib files in JabRefFrame to improve user experience by allowing drag events to manage bib files and their states
updated ExecutionUnitRunner and CucumberTest classes to use the Description class for better clarity and consistency to improve code readability and ensure accurate representation of test cases
replaced manual version and build time string checks with utility methods to improve code readability and leverage built - in utility functionality
removed the ` public static ` access modifier from several methods in ` TimeUtils ` , ` GitBlitSuite ` , and ` TimeUtilsTest ` to enforce encapsulation and improve code organization
added version check for class name comparison in RefectionMHTests . java to ensure compatibility with version 18 and improve class name validation logic
updated file extension checks in PreviewImageFragment . java to ensure compatibility with different file naming conventions
use hostedmethod . tostring ( ) for debug info to make it easy to debug the host class .
added getIcon ( ) method to multiple Data classes and updated classDisplayed from NONE to NODE in DataTableTopComponent to enable customizable icon retrieval for manipulators in the application
fix issue where lastindexofrequestname return - 1 when no period be find
fix # 252 : dollar sign occur when use $ { dynamic } . stuff
fix a potential npe when connect to jabber . jmack - 167
ds - 3533 fix typo in javadoc
added directory copying functionality using ` copyDir ` method in ` IO . java ` to ensure source and destination directories are valid for processing
added exception handling for unknown datum class in JacksonUtils to improve robustness by providing clearer feedback when an unknown datum class is encountered
updated ABI handling in DefaultJavaLibraryBuilder to utilize HasJavaAbi for library targets to streamline ABI processing and improve dependency management for library targets
updated height calculation for itemHeight in SelectBox . java to ensure consistent height adjustment based on background properties
added normalization of database and table names using HiveStringUtils to ensure proper identifiers are normalized for database and table access
updated database type handling to ensure a default schema is set for Oracle databases to improve clarity and prevent potential null pointer exceptions when using Oracle databases
do n ' t log out ourselves , because we already log in in
[ flink - 13720 ] [ test ] add a new task for each subtask in the test
added null check for candidates before processing to avoid potential NullPointerExceptions during type processing
updated conditional checks in ContainerLifeCycle to use isManaged ( ) method instead of a managed check to improve accuracy in determining if the bean is a managed bean
rename iexecutionattributesdialect to iexecutionattributedialect for good naming consistence
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure the metadata is cleared before further operations
modified string construction to handle null location case to improve robustness by preventing potential NullPointerException
added null check for measurement and introduced a new DisruptorQueueExceptionHandler class to improve error handling and provide custom exception handling for disruptor operations
deleted the Session2Token . java file to the class was deemed unnecessary for the current implementation
bug 8088 : destroy / expunge volume and expunge it in case of volume creation failure
added a new ` Install ` shortcut class and integrated it into the PopupDataProvider class to enable or disable the installation functionality based on user preferences
added a null authorities populator class and modified the LdapAuthenticationProvider to utilize it to ensure proper handling of null authorities during LDAP authentication
fix retrolambda jar path fallback to default if it ca n ' t be find .
replace ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to ensure the camera is properly initialized before proceeding
updated the ` sortLiveDocs ` method to utilize ` Bits ` directly instead of ` FixedBitSet ` to improve efficiency and simplify the handling of live documents
added handling for null results in JMESPathExtractor to improve robustness by gracefully handling null values
refactored import statements and added a check for null or empty authorities in AuthorizeTag . java to improve code clarity and handle potential null or empty collections gracefully
updated assertions in various test classes to use direct arguments for URL comparisons to improve code clarity and consistency in URL comparisons
cloudstack - 2120 : [ vmware ] correct error message for unsupported member for vgpu
updated configuration handling in RobolectricTestRunner and related classes to improve consistency and functionality when merging class subclass and method configurations
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to enhance compatibility and performance with a broader socket connector
added a method to check partial partition keys in HiveAlterHandler to ensure consistent behavior when comparing partition keys with old and new ones
added a new BooleanFlag for enabling icons in the text header to provide users with the option to show icons in the text header
no actual code changes were made to the method call to maintain code consistency and readability
replaced SharedBlockingCallback with Callback in multiple classes to simplify handler management and improve code readability
added workspace listener to the PreviewControllerImpl class and modified the buildGraph method in PreviewUIController to enable updating the graph based on workspace state during updates
updated visibility checks in ReflectionFactory and modified method to check for anonymous classes to enhance class visibility and ensure correct handling of anonymous classes
rename TransportHelper class file to improve clarity and consistency in naming conventions
fix issue with file path in acegi user realm that result in relative path on window .
ambari - 21190 . ambari agent should be start and log initiation . ( mpapirkovskyy via swagle )
updated JSONWriter . java to enhance null checks for forNode initialization and modified cases to ensure proper handling of null values and improve code readability
updated SliderAppsViewControllerImpl to accept a FileSystem parameter and modified related method signatures to simplify filesystem handling and enhance clarity in file system interactions
added a check to ensure the backgroundManager is attached before attaching it to avoid potential NullPointerExceptions when the backgroundManager is not initialized
set the current tab to 1 in multiple classes and adjust child dimensions in PagedView and Workspace accordingly to improve user experience by ensuring proper tab display and alignment adjustments
added null check for URL in BaseDataSource and implemented a test for invalid URLs to ensure proper error handling for invalid URLs and validate functionality through testing
fix : pebble module test fail on jdk 8 +
added a new directory creation dialog to the FileDisplayActivity to enhance user experience by allowing direct directory creation to be controlled via a dialog
added functionality to toggle bar borders in various chart activities to enhance user interactivity with chart visualization options
updated the okcoin API endpoint URL from " http : / / okcoin . com " to " http : / / okex . com " to ensure compatibility with the latest OKCoin API specifications
jbrules - 2213 : switch to use deduplicationparser in test to pick up manual score comparison
replaced FileChannel with SeekableByteChannel and refactored input stream handling in BytesAndLines . java to improve file reading efficiency and enhance code readability
refactor getFlattenFieldTransferPair method to accept FieldReference as a parameter to improve clarity and maintainability by standardizing field reference handling
updated ` MockHandler ` and related classes to use ` MockHandlerImpl ` instead of ` MockHandler ` to improve the use of a more specific mock handler implementation
updated conditional checks for serialization and proxy types keys in SerializationConfigurationParser . java to ensure proper registration of serialization types only when required
added import statements and configured watch heap limit in QuickstepProcessInitializer to improve memory management and prevent potential security issues on debug devices
fix null pointer exception in java . util . stream
[ log4j2 - 2982 ] avoid unintended behavior of abstractloadbundletest during compilation
hive - 26180 : fix precompactedrow for bulk deletion ( # 3230 )
updated rendering intent return logic in ICC _ Profile and ColorConvertOp classes and added a new InvalidRenderIntentTest class to improve correctness and test coverage for rendering intents and color space functionality
supply meterregistry lifecycle to fix resource leak
[ 3.0 ] fix mislead config item warn ( # 9348 )
pdfbox - 4892 : improve test coverage , a suggest by valerybokov
camel - 2780 fixed the issue of ambiguous binary operator in simple predicate
simplified the onTabUnselected method in EditorActivity and improved focus handling in IDEEditor to enhance code clarity and ensure window dismissed when focus changes
log access log use user . name as well
updated font size and scaling settings for the robot - mesh and improved null handling for submesh names to enhance visual consistency and prevent potential null pointer exceptions
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature and improve code clarity
mark multiple methods as deprecated in UpgradeResponse . java to indicate that these methods should no longer be used and may be removed in future versions
added support for d . ts file generation in the transpiler to allow users to specify their declaration locations during the transpilation process
[ flink - 21795 ] [ connectors / kinesis ] make fetch timeout configurable
[ beam - 10670 ] add . html file extension to streamingdataflowworker
updated the maximum number of metastore server threads from 100000 to 1000 to optimize resource usage for improved performance
changed the return type of the onTaskSnapshotChanged method from void to boolean to enable the task snapshot change handling to provide a feedback feedback
update shadow radius setting from mMaxShadowRadius to shadowRadius to ensure consistent shadow radius behavior
added a new aggregatorInput field and a test method for chain nesting and aggregation to facilitate testing of message processing and aggregation in the ChainParser
updated loop condition to use ` end ` instead of ` limit ` and added fail method for error message to ensure proper handling of cases where the error occurs during the step
fix context factory check for interoperability source .
updated condition to handle null previousCachedFilePath in CreateKeytabFilesServerAction . java to improve null safety and avoid potential NullPointerExceptions
updated LauncherPreviewRenderer to include DisplayController in the WindowManagerProxy instance to enhance functionality by ensuring proper display management integration
updated tooltip text logic for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent naming of the root directory tooltip across different UI components
changed screenSize initialization from getToolkit ( ) to getDefaultToolkit ( ) to ensure consistent access to the default toolkit for screen size retrieval
[ pytorch ] fix type inference issue in keyflow api
added methods to persist and remove entities and update entity management in JPASQLBase . java to improve data handling and facilitate testing of entity management with factory expressions
added logic to set dragIndex to 1 based on point position to ensure drag detection occurs only when the point is within the visible area
update moe version to 1.2 . 0 ( # 4362 )
updated error message to clarify the nature of the constant cannot set call value to improve clarity and accuracy of error handling related to call values
update error message formatting in ElementsShouldSatisfy and ZippedElementsSatisfy classes to include additional line breaks to improve readability and clarity of error messages for better debugging
mark the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor unsafe and refactored registration logic for AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to improve code readability and maintainability by consolidating registration logic
added @ Hint annotation to AndroidAppModularityDescription and modified AndroidBinaryModularIntegrationTest to exclude blacklisted modules to ensure proper functionality and testing of blacklisted modules during modular compilation
changed mCenterPagesVertically from true to false to disable the center page alignment for improved user experience
fix a race condition during migration finalization on master node .
updated constants and methods to replace " HOST " with " baseUrl " and " CALLBACK _ URL " to improve clarity and consistency in API configuration handling
changed the data type of attributeValue from Object to List < Object > in WSFederationClaimsReleasePolicy . java to improve flexibility by allowing multiple attribute definitions to be processed
updated test tables and queries to use " nonascii " instead of " testtab1 " and added database and query settings to improve database compatibility and enhance query optimization
add a new test case for SQL expressions containing brackets in CaseExpressionTest . java to ensure correct parsing and deparsing of SQL statements with different case conventions
added a copy mode for touch events in ConsoleActivity for different Android versions to ensure proper handling of touch events for the console view
updated imports and refactored XML output writing logic in TestCommand . java to improve XML output handling and ensure proper resource management with try - with - resources
camel - 5490 : fixed a nullpointerexception in abstractlistaggregationstrategy when exchange be null
camel - 6377 : add cause to the log handler to make it easy to debug camel exchange error .
move basicconfigurator from logback - classic to logback - classic
avoid unnecessary assertion in typeQualifierdataflowanalysis [ hz - 2197 ] ( # 24409 )
remove unused import to clean up the test code
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to enhance the functionality of the ` invokeMethod ` method with additional parameters
renamed multiple classes related to box and whisker calculations and histograms for clarity to improve code readability and maintainability by standardizing class naming conventions
[ hotfix ] [ test ] migrate Readablewritableconfigurationtest to junit5
changed equality operator from ' = = ' to ' . equals ( ) ' in InstantiatedIndexReader . java and updated collection name condition in MemoryIndex . java to ensure proper equality comparison and improve code clarity
changed the access modifier of the singleton variable from public to private to restrict instantiation to enhance encapsulation
updated ifStatementTest to use PluginDefinition and simplified vertex assertions to enhance test accuracy and maintainability by utilizing plugin - specific logic
updated the method to retrieve table header row directly from MetaDataUtil to streamline the code to focus on the correct functionality of table header retrieval
refactor TypeAdapter to simplify null handling logic to improve code readability and maintainability by reducing complexity
updated the expected size in the BundledDistributionTest from 12 to 13 to correct the expected output after recent code modifications
added a new file EXIFReader . java to handle image metadata processing to facilitate reading and processing Exif IFD images efficiently throughout the application
change the return type of the ` toStandardUnit ` method from ` StandardUnit ` to ` StandardUnit . NONE ` to ensure consistent behavior when returning the unknown standard unit
[ drools - 6016 ] fix error when apply pmml model with invalid params ( # 3949 )
updated the info message format in FluentProtocol . java to clarify the nature of the message received during the expected phase and state
added a check to return early if the BubbleBar is visible to improve performance by avoiding unnecessary processing when the Bubble bar is not visible
[ gr - 21155 ] fix miss label range when compile aarch64 fails
added concurrent initialization logic in JDKXRLogger and introduced a test for concurrent initialization in XRLogTest to improve thread safety and reliability of log initialization in multithreaded environments
added find method to TicketCatalog and DefaultTicketCatalog for better handling of sorted ticket definitions to enhance the clarity and functionality of ticket retrieval logging
update SSL connection setup code and remove unused variables to improve code clarity and maintainability by using consistent variable definitions
[ flink - 21943 ] [ network ] improve result partition read / write thread ' s thread safety
[ beam - 2157 ] define maxnumrecords default value to long . max _ value in jmsio
added type parameter to plugin handle retrieval and retrieval methods in multiple classes to enhance the functionality of retrieving plugin handle by allowing more specific types
start the span even if it fail to create a new span .
added new GLKViewDrawableColorFormat , depthFormat , and GLKViewDrawableMultisample features to IOSGraphics and IOSApplicationConfiguration classes to allow customization of drawable color and depth formats based on application settings
refactor login and authentication processes into a new test method for improved code organization and reusability to enhance readability and maintainability of the test cases
[ pytorch ] throw unsupportedoperationexception when real ( ) be use .
replaced the check for interruption with a do - while loop for retrieving lock names to ensure that thread info retrieval completes in a loop and avoid potential memory leaks
refactor Implements and ShadowPicker classes for improved code clarity to enhance maintainability and readability of the code
[ scb - 2687 ] make http2 production ready : change default value of transportclient . connection . maxpoolsize from 5 to 3
updated conditions in ` DynamicStruct ` , ` SolidityFunctionWrapper ` , and ` SolidityFunctionWrapperGeneratorTest ` to include ` DynamicArray ` and improved type name handling to enhance type safety and error handling for better maintainability
modified font property calls to include a default value of true in InlineLayout . java and FontUtil . java to ensure consistent font alignment and size handling in the rendering process
added overloaded constructors to the CopyStep class and a corresponding test forShellCommandInternalPath to enhance flexibility in path handling during copying operations
fixed - rsequencemaphore . acquire ( ) and rsequencemaphore . addpermits ( ) method throw concurrentmodificationexception . # 3804
camel - 15836 : camel - core - optimize to avoid fast path with end option
added a new FlavorParser class and updated BuildTargetParser to utilize it to improve flavor parsing functionality and enhance test coverage
changed the type of ` witnessesAddressList ` from ` List < String > ` to ` List < ByteString > ` and updated related methods accordingly to improve data type consistency and align with protobuf usage for witnesses addresses
modified print statement to conditionally display results if not empty to enhance output clarity by avoiding printing empty results
refactor ConcurrentLinkedQueue to improve handling of node removal and add a new RemoveLeak class for testing to enhance the robustness of concurrent linked operations and ensure proper cleanup
add option to huggingfacetokenizer to not add special token to batch encode
fix potential concurrentmodificationexception in taskmapper . getresourceprofiles
fix chunk size when add aligned chunk
added session storage context management functionality to the BrowserSessionStorage and related components to enhance session management and improve action management in the web flow
add a new test method ` testSchemaValidation ` to ` TestJspDocumentParser . java ` to verify XML schema validation functionality in the application
add a default constructor to TypeAdapter and disable the tests until record support is add to improve code clarity and ensure compatibility with Java 17 features
refactor SuspendedEvent to improve handling of killexception and context flow to enhance reliability and maintainability of the executing code
refactor AntPathRequestMatcher for improved clarity to enhance maintainability and readability of the code
remove null parameters from createResourcePolicy method signatures across multiple classes to simplify method signatures and improve usability
added null check before releasing the deflaterEntry to prevent potential NullPointerExceptions to ensure safe resource management and improve test reliability
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper cleanup after each test execution
update CheckSum to normalize line endings to ensure consistent handling of Unicode characters in checksum computation
refactor command handling logic to ensure commands are only processed if they exist to improve command execution reliability and avoid potential null pointer exceptions
bugfix # 253996 - make profilerkeylistener final and add some miss @ override
updated the type of ` objectToSave ` from ` T ` to ` DBObject ` and added a new test for JSON string saving to improve type safety and ensure correct functionality of JSON file handling
added a method to check for multiple remote addresses and created a test for it to ensure that multiple remote addresses are handled correctly in the request
updated job arguments type from String to ObjectBuilder and modified workerShellStep method signature to enhance JSON output format for better compatibility with JSON standards
refactor CookieManagerTest to utilize a new method for obtaining the local host address to improve code clarity and ensure reliable access to the local host address
modified glyph execution logic in GlyphLayout and added a test for whitespace handling in BitmapFontTest to ensure proper handling of wrapped runs and validate font font functionality
[ flink - 26711 ] [ connector / pulsar ] fix illegalargumentexception when pulsar split reader be pause / resume
added support for HIVESCRIPTIDENVVAR in HiveConf and ScriptOperator classes to enable proper handling of script operator IDs in the Hive configuration
refactor the ` getListedTermCounts ` method to utilize a stream processing for term count retrieval using ` SimpleImmutableEntry ` to improve code efficiency and maintainability by simplifying term count processing logic
added a new file UseSeparateStepSizeAction . java that implements a menu action using a separator to provide users with a configurable step size option in the Jog plugin
updated fields in FileMenuFilter to be final and added unlock handling logic to enhance immutability and ensure proper unlock functionality based on user context
hbase - 25875 improve the performance of roundrobintableinputformat ( # 3219 )
updated header values in HttpClientRequestAdapter and its test to use " 0 " instead of " true " to ensure consistency in header representation for better validation
pdfbox - 4892 : simplify code , a suggest by valerybokov ; remove unneeded null check
gwt : add fullscreen support and fix the font size in the screen
updated WebfingerIssuerService and WebfingerIssuerFetcher to use URI for resource normalization to enhance data handling and improve resource loading consistency
add unit tests for SoulApacheDubboClientConfiguration to ensure proper functionality of the Dubbo configuration properties
updated texture path resolution logic in SkinLoader . java to improve code clarity and ensure consistency in texture path resolution
added trace logging for attributes in ChainingAttributeReleasePolicy and changed log level from warn to info in OidcDefaultJsonWebKeystoreCacheLoader to improve visibility of attribute handling and enhance log clarity for better debugging
replaced multiple lock methods with lockInterruptibly in multiple classes to improve security by interrupting the lock execution
changed package declaration from ` java . lang ` to ` java . lang ` to ensure consistent organization and access in the project
added handling for CodeException in NullDerefAndRedundantComparisonFinder . java to ensure proper propagation of exceptions to the method
fix dashrendererbuilder use wrong http data source for manifestfetcher
added a new configuration property for maximum statement per database connection in the execution scheduler to allow control over the maximum number of prepared statements per database connection
updated method signatures of set methods from WritableConfig to Configuration to standardize method naming for better consistency and clarity
added error handling in AutoScalingHandler to improve robustness by capturing errors in command operations
updated the implementation of CombinedDataset for better performance to improve efficiency of dataset processing operations
replaced the byte array buffer with a direct byte buffer in the InflateIn _ DeflateOut class to improve code readability and reduce memory usage
added methods to remove cryptography restrictions related to security to improve security by ensuring necessary cryptographic permissions are managed correctly
fix an issue with teleport ( ) not be call when the event be cancel .
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to verify the functionality of page margins with long text transformations
added null check and updated vectorization context handling logic to improve robustness by ensuring vContext is only set if it is null
fix wialon position speed ( fix # 1362 )
hbase - 20836 make sure we disable jmx metric if it be disable ( chunhui )
added ` isEmpty ( ) ` method to ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide functionality for checking if the JsonObject is empty and verify its functionality through unit testing
be b0f8e1c2 : be b0f8e1a : fix 2222272 - launcher2 leak screen
refactor AsyncFile , HttpClientRequest , HttpServerResponse , and NetSocket classes to improve code organization and maintainability
fix zadd fail when params be n ' t specify ( # 4358 )
[ ds - 3952 ] fix potential utf - 8 encode warning in dspace configuration
renamed ` TestAsyncMessages ` to ` TestAsyncMessagesPerformance ` and removed the import of ` @ Ignore ` annotation to clarify test purpose and prevent false failures during garbage collection
added a method to retrieve the Optional < TargetNode < ? , ? > > in ` VersionedTargetGraphBuilder ` and refactored ` VersionPropagatorBuilder ` to use it to improve code clarity and handle cases where no target is specified
updated time threshold logic in TimeZoneProvider to use a new constant for better readability to improve maintainability and clarity of time handling logic
fixed an issue with the blip record that could cause some issue when embed the hssf workbook .
removed duplicate variable declarations for row and column in JSONParser . java to streamline code by eliminating redundancy
update ` typeMatches ` method to use ` Pattern ` for matching fully qualified types to improve type safety and maintainability by utilizing regex patterns
added functionality to retrieve local trailers for playback in BaseItemDetailsFragment to enhance user experience by allowing users to view and display trailers directly
refactor memory management in CStrike and add removeGlyphInfoFromCache method to improve efficiency and organization of memory management
add process instance terminate event to terminateendeventbehavior and change deleteprocessinstancecascade to deleteallbehaviour
camel - 7999 : ensure we use the local name of the type annotation a well .
updated the endpoint validation in SimpleHttpClientTests from " http : / / apereo . org / scottb . org " to " https : / / www . abc1234 . org " to align the test case with the new protocol requirements
add -- prdef to reset all preference ( fixes # 4558 )
changed access modifiers of source and slow response time variables from private to protected and introduced a factory method for creating metrics to enhance visibility and flexibility in managing metrics and server instances
[ danfossairunit ] remove ` ` manual _ fan _ speed ' ' deprecated channel from channel . edit ( ) .
( chore ) camel - core : replace junit with hamcrest assertion
removed redundant check for expansionHelper before stopping it to streamline the code by eliminating redundancy
added null check in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure safe handling of null values and improve object comparison functionality
server : allow to set root disk size custom parameter ( # 6502 )
updated visibility logic to conditionally show predictions based on user preferences to enhance user experience by hiding predictions based on user preferences
[ geos - 8125 ] bbox validation should return 400 bad request instead of 500
added new validValueParams methods to LibrustzcashParam . java and updated the test value type in LibrustzcashTest . java to improve validation logic for value parameters and ensure correct data type usage
mark IThrowableEntity as deprecated to indicate that it should no longer be used in favor of an alternative implementation
added x and y assignment for node ' s position in NodeDataImpl . java to adjust node ' s position based on random value
updated test method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method for handling missing scopes to improve clarity of the test purpose and ensure it correctly fails with missing scopes
refactor JavacStep to streamline dependency building logic to improve code readability and maintainability by consolidating variable declarations
updated VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest version release
added support for handling DEEP _ SHORTCUT item type in LoaderCursor to enhance functionality by allowing deep copying of shortcut types
implement hashCode method in TimeGranularitySpec class to ensure proper hash code generation for instances of TimeGranularitySpec
changed access modifiers of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes for subclasses
added a boolean flag to control proxy response code behavior in HttpURLConnection to ensure proper handling of NTLM proxy when the response code is used
aarch64 : use aarch64 . sp , instead of aarch64 . ldr and aarch64 . zr .
cloudstack - 2120 : do n ' t compute the size of vm ' s memory use by the management server
added a condition to check if the maximum score is not null before including it in JSONResponseWriter . java to ensure that the code only executes when a valid score is present , improving performance
updated audio recoder from 22050 to 44100 to improve audio quality and performance
updated calculation of newOriginX using subjectBounds _ m ' s minimum and maximum scale to ensure correct positioning of origin based on subject bounds
updated DruidQueryBasedInputFormat to handle null and empty data source more robustly to improve error handling and ensure data source is not empty
added ORIGINAL _ TYPE field and updated pattern matching logic in CustomProperty and CustomPropertyTest classes to enhance the functionality of CustomProperty by including the original type and ensuring proper pattern matching
added a static method ` create ` to the ` Index ` class that creates an instance of ` IndexImpl ` to facilitate creating an instance of the index with given parent and data
simplified the boolean variable declaration for clarity to enhance code readability and maintainability
updated schema compatibility checks and modified test cases for better accuracy to ensure accurate handling of compatibility points and improve test coverage for various data types
added support for attribute handling based on entity path and attribute types in QueryUtils to enhance functionality and ensure correct attribute associations in MongoDB queries
added synchronization to the spans list and modified methods in TestSpanHandler to ensure thread safety while modifying the spans list
add wildcard for gettext in favor of wildcardprovider .
updated exception handling in ViewContextImpl to provide more detailed logging to improve error handling clarity and provide more informative debug messages during authentication failures
refactor OAuth2AccessTokenEntity class to improve code organization to enhance maintainability and readability of the code
updated error messages in multiple classes to accurately reflect the status of requests to improve clarity and accuracy of error reporting related to service requests
added new project files for data and moe resources in GdxSetup . java to support additional image resources in the project
updated imports and added a ConcurrentMergeScheduler to TestSearcherManager . java to improve merge performance and support concurrent merge operations
updated condition checks in QTestUtil . java and improved list handling in GenericUDTFInline . java to enhance code clarity and robustness by ensuring proper handling of null and empty lists
refactor multiple classes including MapIterable , FJIterate , and ParallelIterate to improve code organization and maintainability across the codebase
# 3638 : prevent user from double - click on file click ( # 3636 )
improve hibernatebundleactivator to clear osgi resource on stop
fix # 421 timeout correction ( # 422 )
create component . xml in non - packaged resource instead of create a new one
updated file name handling and improved directory checks in Compat and FileOpener classes to enhance file path accuracy and ensure proper checks for directory types
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to align method signature with intended functionality rather than returning a value
validate ` -- p2p - port ` specify multiple time in ` -- rpc - http - port ` ( # 2737 )
added a null mask feature to the WebSocketClient and modified WebSocketConnectionD12 initialization to enable fixed mask generation for WebSocket connections
refactor ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of a single ` RelNode ` to improve modularity and simplify the plan generation process
added bucketedPreferredNodeSelectedCount and bucketedNonPreferredNodeSelectedCount methods to NodeScheduler and TopologyAwareNodeSelector classes to enhance node selection tracking for bucketed nodes management
add a new file ` Person . java ` containing a class ` Person ` with a getter method for the ` name ` variable to facilitate customization of the class by providing a getter method for the ` Person ` class
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to improve code clarity and ensure proper handling of the owner pointer ' s existence
added clock management functionality to PlaybackOverlayFragment to improve user experience by managing fade animations and timing
fixed output level update , now use markDirty ( ) . do some minor cleanup .
changed the visibility of the IMPL variable from private static final to private static and added error handling for loading the SegmentReader class to enhance flexibility in class loading and provide clearer error messaging for class loading issues
added SwingUtilities import and modified cell handling in Sudoku . java to ensure thread safety during cell update events
refactor DefaultTypeAdapters to use the InetAddressAdapter directly instead of the DefaultInetAddressAdapter to streamline the adapter initialization and improve code clarity
added null and long value methods to the Series class and updated tests for various data types to ensure proper handling of null values and improve test coverage for various data types
updated audio time stretch option in VideoManager . java to ensure compatibility with modern audio standards
updated boundary conditions in GeoRelationUtils and GeoUtils for correct calculation in GeoPointQuery to ensure accurate geospatial comparisons and improve query performance
cloudstack - 2120 : fix npe in listnetworks when listnetworks ( # 2120 )
added cleanup method to hazelcasttest to ensure proper resource management during tests
add some extra check on getinstance ( ) trigger nosuchalgorithmexception
added methods to print and print operations logs in QFileClient to improve visibility of operation logs for better debugging
fix parent interface to be injectable in bean definition . fix # 282
fix a nullpointerexception if a xmpp connection be use in some case we ca n ' t reuse the sip protocol .
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` for demand calculation to improve code readability and utilize a more suitable utility method for capping demand
replaced NullPointerException handling with a try - with - resources statement for deleting temporary files to ensure proper resource management and avoid potential memory leaks
refactor search functionality by replacing TvApp ' s showSearch method with a direct call to SearchActivity to simplify search handling and improve code clarity
updated the instantiation of SchemaCrawlerOptions and improved the toString method in GrepOptions to ensure proper instantiation of SchemaCrawlerOptions and enhance readability of the class
http : / / issues . apache . org / jira / browse / amq - 4568 - add osgiservice to be able to configure via osgi
added @ Autowired annotation to RepositoryIndexCreationIntegrationTests to enable dependency injection for the PersonRepository class in testing
changed the exception type from Exception to InterruptedException in UIServer . java and updated the log message format in TestVertxUIManual . java to improve exception handling and enhance logging clarity for better debugging
replace all cactus case statements with standard case in blockcactus . java to enhance readability and maintainability of the code
add a mouse motion listener to the theme selector to allow user to update the theme selection when a mouse is drag .
added abstract class AbstractMinMulticastFlowControlRhsPadding and updated its inheritance to improve encapsulation and alignment of flow control fields
block copy pasting on io , also add alignment and verticalalignment to the editstringat method .
fix a bug where the tokenization model be be n ' t properly configure .
added a check for distinct queries in the query generation logic to ensure correct handling of count ( * ) for distinct queries
[ gr - 26533 ] improve score calculation for native linkage .
bug 61731 - jsyntaxtextarea : add ` ` select language ' ' and ` ` select language ' ' to a dialog
added a null check for children before iterating over its children to avoid potential NullPointerExceptions when children is null
added tokenPosition and currentPosition fields and updated parsing logic in MessagePackParser . java and MessagePackParserTest . java to enhance JSON parsing capabilities and ensure proper context initialization
added locale handling and teardown method to AbstractSolrMorphlineTestBase to ensure consistent locale settings during tests by resetting the locale
removed unnecessary conditional checks for launcher state in LauncherFragment . java to simplify the code for better readability and maintainability
add a new test class MetricsReporterTest for testing metrics registration to ensure correct functionality and behavior of metrics reporting in the application
camel - 5040 : remove unused import to fix the build
added equals and hashCode methods to the Rectangle class to ensure proper functionality for comparing Rectangle objects
[ test ] use test _ nonexistenttopic instead of hardcoded " sink " in test
updated DSAParameterGenerator logic to validate prime strength conditions and replaced BigInteger constants to improve clarity and maintainability of the code
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration to HiveConf and updated LlapUtil to retrieve the AM machine ' s hostname to enable proper configuration of the AM machine when submitting work to LLAP
fix test to avoid race condition .
added a new method to retrieve the correct ObjectId for shape objects to ensure consistency and accuracy in object ID handling across the shape classes
added a test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of fetching distinct posts from posts using JPA
renamed several classes related to search trav to improve clarity and organization to enhance maintainability and understanding of the codebase
remove extensionadapters from managedkubernetesclient , since they do n ' t
updated subtitles and added helper methods for getting information in the DetailsDescriptionPresenter and Utils classes to improve code organization and enhance the display of episodes and media streams
updated JUnit imports and annotations from ` @ Before ` and ` @ After ` to ` @ AfterEach ` in multiple test classes to migrate tests to the newer JUnit 5 framework for better functionality and features
do n ' t silently fail generate bug summary
removed unnecessary boolean parameters from intPool and bytePool reset calls to simplify the method calls for better readability and performance
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
added a new class ` WindowSessionDelegateU ` and modified the conditional check for API level S _ V2 to improve compatibility with Tiramisu and enhance window management functionality
updated URL handling logic to include a new condition for scheme and reqPort to ensure proper handling of scheme and request port for improved functionality
added support for MSSQLDatabase in the foreign key constraint generator to ensure proper handling of delete operations in MSSQL - specific database scenarios
hbase - 26180 fixed checkstyle and error in hbase - replication
remove debug output , and add filtereventhandler to emzuli pipe to clean up colour handling and add lens filtering .
[ java ] adding debug mode logging to htmlidentifier rule in order to identify the problem well .
[ flink - 3441 ] [ hive ] fix flaky test in lookuptablesource .
improve thread handling of listener to avoid wrong thread
updated CatalogAndSchema usage in SequenceSnapshotGenerator to utilize custom schema name to ensure compatibility with Liquibase ' s schema management
[ add ] alpha test , make it work on all platform .
fixed - batchpromise be n ' t properly cast to ` batchpromise ` object in redissonconnection . join ( ) method . # 3804
added functionality to manage base URL and statistic yearCores in SolrLoggerServiceImpl to ensure that only valid base URLs are processed to maintain statistics
renamed ` launchTask ` method to ` launchTaskFromView ` and introduced a new method for launching tasks to improve clarity and functionality of task handling within the application
updated MorfologikFilter and MorfologikFilterTest classes to improve functionality and import statements to enhance code clarity and ensure proper handling of dictionary resources
updated sorting options in GridFragment to change their order to improve user experience by ensuring consistent sorting order
added imports and visibility logic for ListRow in CustomListRowPresenter to ensure the view is displayed when items are not of type ListRow
refactor client type handling in StressAction . java to ensure proper resource cleanup to improve code reliability and prevent potential resource leaks
updated the HttpClient class implementation to improve performance and maintainability of the HTTP client implementation
updated case - sensitive checks to use an instance of DB2Database to ensure proper type checking for the database accordingTo
nifi - 310 - add jackson serialization support for java . time . module
updated import statement for MDC from org . apache . log4j to org . slf4j to ensure compatibility with newer logging framework versions
updated type handling in PhiTypeResolver to simplify type casting to improve code clarity and maintainability
removed unnecessary import statement from CoinbaseTransaction . java to streamline the code for better readability and maintainability
added a method to retrieve the list of build targets and modified the build command logic to ensure that build targets are properly formatted and forced based on configuration
[ java ] add a call to system . gc ( ) to ensure thread . exit ( ) be call once the thread have die .
updated OCFile and related classes to use ContentResolver instead of ContentProvider and added new file operations to improve code consistency and simplify file handling functionality
removed unnecessary conditional checks for state change in ReportPanel . java to streamline code logic for better readability and maintainability
[ hotfix ] [ test ] make sure that slotowner be not null to prevent npe in testinglogicalslot
add a new file ` RemoveCallsToSystemGc . java ` to remove calls to ` System . gc ( ) ` and ` Runtime . gc ( ) ` from the Java compiler to streamline the management of JVM garbage collection invocations
remove superfluous super ( ) call in favor of super ( )
added a setUIID method to the ScaleImageLabel class to update the UI when the image label is displayed
rename variable ` foundEntry ` to ` update ` for clarity to enhance code readability and maintainability by using a more descriptive variable name
updated conditional check for command - line arguments to include " - cp " alongside " - classpath " to enhance flexibility in handling classpath command line arguments
fix typo in javacpp options - should be javacpp
changed the initialization flag from true to true to ensure that the service is properly initialized before usage
updated Test7196045 . java file to improve test coverage and fix existing issues
[ fix ] shaderparameterslightshaft be slow for low density and high decay .
added support for state management in the OidcConfiguration class to enhance the flexibility and functionality of OIDC redirect handling
# 174 - fix for null value in unique constraint ( # 1744 )
added federated share permission checks in UsersAndGroupsSearchProvider and EditShareFragment to enhance user experience by allowing federated uploads only
added a method ` needsDocValues ( ) ` to ` TestBBoxStrategy ` to ensure that document value requirements are implemented correctly
refactor BufferAlignmentAgent and related classes to improve error handling and alignment checks to enhance clarity and maintainability of buffer alignment error messages and exception management
added a method ` intForEach ` to ` Int2ObjectHashMap ` and modified the ` SpecialisationGenerator ` to enhance functionality to support null values during key processing
fix scoreboard save data race ( # 6844 )
changed return type of count methods from Long to long in multiple classes to accommodate larger data types for better performance
updated MTree snapshot creation logic to check for more accurate time checks to improve logging clarity and prevent unnecessary MTree snapshot creation
hive - 23714 : improve the dotproductscore calculation in vectorutil ( david mollitor , review by miklos gergely )
added support for a new configuration option ` IRREVERSIBLE _ THRESHOLD ` in ` DynamicPropertiesStore ` and implemented related methods to manage and update the latest confirmation block number dynamically
updated locale handling in GpsMainActivity and related components to use Systems ' s setLocale method to streamline locale management and improve logging capabilities across the application
added logic to check if the database was created in the LauncherClings and LauncherProvider classes to ensure that the database is updated only if it was previously created
refactor exception handling and add collection iteration in BasicAclEntryAfterInvocationCollectionFilteringProvider to improve code readability and maintainability
refactor conditional logic for determining if the datamodel is null to improve code readability and maintainability
added a thread check to prevent execution if the current thread is the same to optimize performance by avoiding unnecessary execution of operations
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method as needed
updated import statements to use the new package structure from the model library to ensure compatibility with the latest API standards
added support for importing attributes from SVG elements in the BatikSVGDrawer class to ensure proper handling of attributes in the SVG document
wrapped the exception handling in a try - catch block to ensure proper logging of exceptions when parsing user configuration fails
added a check for the " WaitForResult " extra field and modified the logic for setting " WaitForResult " to ensure proper handling of waiting results based on intent data
refactor constructors in HitQueue , SpanPositionQueue , and PriorityQueue to use a Supplier < T > for sentinel objects to improve flexibility and simplify handling of sentinel objects
added widget description display functionality to WidgetCell to enhance user experience by visually indicating the widget ' s description
added a maximum registered attribute count check in the Attribute class to prevent runtime exceptions when exceeding the allowed attribute count
move predicatestest to query - impl package to avoid hazelcast dependency
camel - 15412 : header filter should respect case - insensitive header name .
updated InlineLayout and Breaker classes to improve handling of break actions and alignment to enhance code clarity and ensure proper alignment management when processing inline strings
added null safety checks and improved layout handling in ShareUserListAdapter to enhance code reliability and prevent potential null pointer exceptions
refactor Setup class to improve package instrumentation logic and exclude unnecessary checks to enhance functionality and maintainability by simplifying the instrumentation logic
added a condition to return the last column in the table when an association is inserted before the source to ensure proper handling of data insertion based on the association state
refactor memory limit command to use a dedicated method for Docker client to improve code maintainability and support for dynamic memory limits based on container version
replaced ` singleton = true ` with ` EMPTY _ INSTANCE ` in ` AbstractCxxDeps ` and added ` EMPTY _ INSTANCE ` in ` CxxLibraryDescription ` and ` CxxLibraryTest ` to ensure proper handling of empty dependencies and improve code clarity
added a HumanReadableException for handling null rules in JavaTestRule . java to improve error handling and provide clearer feedback when source dependencies are not among their dependencies
add support for proxy 1.10 - rc version 1.10 - rc version
remove redundant check for negative index in StringUtils . java to streamline code logic for better readability and performance
increase wait time in timeouttest to reduce flakiness
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to enhance flexibility and streamline the construction of task overlay components
fix ( v2 ) : fix witness address in v2 vote
updated test cases in DefaultMethodRegressionTests . java to improve test coverage for method regressions
no jira - update javadoc for workloadmanagermvxbean
update imports from KafkaProducerException to KafkaException in KafkaOutboundAdapterParserTests . java to ensure proper exception handling in Kafka test cases
added a call to container . closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and tests for handling skipped rollback exceptions to ensure proper management of rollback states and validate exception handling behavior
updated error message format in ConfigBuilder to include additional runner types to improve clarity of configuration configuration for better debugging and auditing
added extraProperties parameter to multiple applyTunerConfigs method calls to enhance flexibility in handling additional properties during tuner configurations
added in - progress checks for processing realtime segments in PinotRealtimeSegmentsManager to ensure only valid instances are added to the list of segments
added a condition to check if the touchable is disabled before proceeding to avoid processing when the touchable is disabled , returning null
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ensure that the build process correctly processes precompiled headers in other cells
check for null cache config before attempt to create it
updated module installation logic and introduced a method to check for the presence of a node package to improve module management and provide a mechanism for determining if a node package is installed
added annotations for management components in MBeanContainer and Destroyable classes to enhance the management capabilities of components for better resource management
changed the condition from a conditional check to a static block to modify the logic for better readability and control flow
replaced direct calls to ` " 0 " with ` . equals ( ) ` method in ` EspMilightHubDiscoveryService . java ` and ` EspMilightHubHandler . java ` to improve code safety and avoid potential null pointer exceptions
updated isReifiable check logic and added new classes T6558559a and T6558559b to improve type safety and handle unchecked conversions more effectively
update position set help text , to show the block size of the split region
speed up kafka consumer by shut down executor
remove default array for examples ( ) ( be leave over from previous commit )
modified thread interruption logic and added a break statement in AgentRunner . java to ensure proper handling of timeout scenarios and improve code readability
remove time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of time columns in aggregation operations
added a space in the conditional check for shards to enhance readability and maintain logical flow of the code
replaced LinkerProvider initialization with CxxPlatforms utility methods to streamline the retrieval of parsed time dependencies for Cxx platforms
added ' name ' property with getter and setter methods in several authentication properties classes to standardize the handling of authentication names across different components
make sure we do n ' t exit when an icfg printer can not be connect to the igv
phoenix - 3444 improve small _ scan _ threshold for point lookup in phoenix .
added routeId to the RetryGatewayFilterFactory output to enhance traceability of retry attempts by providing relevant route information
fix error , and add a new method callwidget to linereaderimpl
refactored the onOverviewShown method to a separate showForHomeIfNeeded method across multiple classes to streamline the management of home display logic based on launcher state
refactor conditional checks for min and max packed values and add a test for deleting all points to improve code clarity and ensure proper handling of null points in document deletion
updated the publish method call to use updateLastState instead of true to improve state management by reflecting the last state updated
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper formatting of string values in SQL queries
added a null element to the exp collection in SpliteratorCollisions . java to ensure consistent handling of null values during collection operations
simonstewart : make the condition class case insensitive . add a test to make it pass .
replaced the do loop with a while ( true ) loop in ManyToManyConcurrentArrayQueue . java to improve control flow and ensure termination occurs
# 1601 - enh : add querybuilder . forwardonlyfetchsize ( ) ... a default for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid sending a 404 message when the channel is already closed
pdfbox - 4892 : set individual initial arraylist size to avoid unnecessary allocation
updated window radius initialization to use rounded corners support to enhance compatibility with devices that support window rounding
replaced ShapeDrawable with View for backgrounds and updated layout parameters to improve layout handling and ensure proper background rendering
added an initialization of the upstreamCheckService in UpstreamCheckServiceTest . java to ensure proper setup of the upstream check service for testing purposes
changed logging level from warn to debug for session immortal and maxInactiveInterval in AbstractSession and AbstractSessionManager classes to reduce log verbosity and improve performance during development
hive - 25825 : return lock from getchildren ( ) method instead of throw exception on exception ( wei zheng , review by daniel dai )
[ flink - 3441 ] activate strict checkstyle for flink - core
[ fix ] filetexturearraydata : do n ' t generate mipmap every time it ' s use
updated assertions in DefaultMaskingFormatterTest to include secretKey as a reserved character to ensure accurate validation of key inputs in the test cases
added selectable property and related methods for handling touch events in the List class to improve user interaction by allowing selection when the list is not configured
removed a check for zero value count in LlapArrowBatchRecordReader to simplify the logic for handling empty vector cases
updated PolicyContext to enhance file separator handling and added new tests to enhance functionality and ensure correct behavior of file path handling
replaced Set with List for flatQueries and expandQueries in FieldQuery . java to improve performance and flexibility of query handling operations
updated TLSRestrictions class for improved security configurations to enhance security and performance during TLS operations
replaced the close method call with a runnable task to safely close the producer to ensure thread safety and prevent potential deadlocks when closing the producer
updated assertNodeStateProvider method to include an " freedisk " parameter and modified its implementation to exclude ignorable node values from the state assertions
added lock file deletion in RocksdbMavenPomCache . java to ensure proper cleanup of resources when the lock exists
use local ip address in minizookeepercluster for testhquorumpeer and fix minizookeepercluster standalone port
added a new method ` getResponse ` to handle IOException and a web service URL to improve error handling and logging for web service connections
fix segmenttar uri format ( # 11869 )
updated loginStudent method calls from TEST _ STUDENT2 _ ACCOUNT to TEST _ STUDENT1 _ ACCOUNT and TEST _ STUDENT1 _ PASSWORD to align with new configuration options for account and password handling
added null checks for mCurrentItem item ID in EnhancedBrowseFragment and StdBrowseFragment to ensure robustness by avoiding potential NullPointerExceptions
increased the number of Strings from 500 to 100 in TestSpecialOperations . java to accommodate larger data sets and improve test accuracy
remove the hextobytes method , it have no functional change
changed method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in naming conventions
added a check for direct substates in AbstractStateMachine to ensure proper handling of substates during transitions
added type checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to enhance type safety and ensure correct behavior of list and set multimap comparisons
added joinoperation marker to the postjoinoperation to reduce false alarm log while joining / merging
added a test method for validating PostgreSQL data in AdditionalPostgreSQLTest . java to ensure correctness of database operations and validate functionality through testing
no - jira - fix intermittent test failure on hudson
updated AvaticaDatabaseMetaData . java to enhance database metadata handling to improve accuracy and performance of database metadata retrieval
updated default values for lifeTime , idleTime , and maxWaitTime from an integer to a string in MongoDbConnectionPoolProperties . java and MongoDbConnectionFactory . java to improve configurability of duration values for connection pool configurations
replace a cast to MediaFormatFactory with a call to getMediaService ( ) for creating audio media format to ensure compatibility with the media service method for better media handling
refactor filter handling methods in FacetProcessor to return a boolean indicating success and streamline filtering logic to improve clarity and maintainability of the filtering logic
added timeout handling functionality to ShuffleHandler to improve control over timeout states during pipeline operations
replaced hardcoded value for quick step starting rotation with a constant to improve code readability and maintainability
camel - 9444 : fix issue with xpathbuilder log message and deprecate method .
minor change to fix a few ide warning
pmd : fix # 1751 backslashes be not correctly escape in tokenizer
added validation for the presence of the " atlas " property in the map to ensure that the map is missing the ' atlas ' property to prevent runtime errors
camel - 13553 : remove the propertyplaceholderhelper class which be no longer use .
added database closure for level database in BlockchainTest . java and simplified the Kafka test setup to improve resource management and reduce code duplication
refactor CoreMarkdownNodeRenderer to use a new method for splitting strings to improve code readability and maintainability by consolidating lines extraction logic
int - 2135 - move messaginggatewaysupport from spring to spring - integration - gateway
replaced ` ImmutableList . Builder ` with ` List < Object > ` and added logging for deprecated methods to improve flexibility in handling SQL bindings and enhance debugging capabilities
added a check for the OpenJDK JVM environment in the VirtualMachine class to ensure compatibility with OpenJDK environments
added keepAlive configuration to the ReactorClient configuration to enable keep - alive functionality for better resource management
[ fix ] objloader and md5 renderer now use shaderprogram enums instead of string .
camel - 7999 : avoid potential npe when use @ propertyinject with camel main .
replace null check with accountCapsule initialization for better clarity to improve readability and ensure account existence is validated correctly
prepare for the 3.8 . 1 release : updated version number and add alpha release status .
refactor wildcard type handling to utilize the unannotatedType method to ensure correct handling of type variables in wildcard processing
updated assertions in StorageGroupProcessorTest to improve clarity and functionality of flush manager related to the work sequence ts file size
updated class loading logic to utilize DumpableCollection for environment management to enhance debugging capabilities by providing a clearer collection of environments
added a timeout parameter for before start in FFMpegVideo . java to improve reliability during video processing
removed the skipCorrupt parameter from the OrcEncodedDataConsumer constructor to streamline the object creation process by eliminating unnecessary fields
fix accidental use of @ test and remove unused test class . patch by jbellis
added compilemethod ( ) method that return the compilation result , but only in lirgenerator .
updated JUnit imports and annotations to use ConditionalIgnore and RunningContinuousIntegrationCondition to enhance test execution conditions for continuous integration testing
add a water distance tag to the boat ' s bed , close # 1825
updated the ` toString ( ) ` method to include the class name and hash code for better clarity to improve readability and include the hash code output for better debugging
removed the method allowExperimentalOptions that checks for experimental options to simplify the conditional logic for better readability
add ` then ` methods to ` BDDAssertions ` for path assertion handling to enhance the expressiveness and flexibility of path assertion methods
rename HostPort variable references from " hp " to " hostField " for clarity to improve code readability and ensure consistency in host port assignment
updated log level from debug to warn for multiple Kubernetes config files and modified logging message for clarity to enhance user understanding of Kubernetes configuration issues and improve logging clarity
added file upload handling logic in FileUploadService to manage uploads status to improve user experience by managing uploads more effectively
added a new class ProviderLoader to handle provider installation and error handling to improve the system ' s ability to respond to provider loading events during the installation process
replaced ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and tests to utilize the new class for improved message tracing capabilities
updated ` SelectFromDatabaseChangeLogStatement ` to use ` ColumnConfig ` instead of hardcoded values to enhance flexibility and maintainability of the database change log query configuration
hhh - 9016 - fix current _ schema deprecation for postgresql 5.0
fix divide by zero when datamembersize be 0 ( # 11977 )
ambari - 20875 . should not start a scheduler that have already start in use ( alejandro )
removed unnecessary ` text . toString ( ) ` call when constructing InlineBox to simplify code and improve readability
reformatted argument list for consistency to improve readability and maintainability of the code
lucene - 5495 : increase the destroyedrect slide to 500ms to avoid spurious failure
updated button text to use localized strings instead of hardcoded strings to improve internationalization support for user interface components
updated condition in BukkitMain . java to include plotArea ' s own plot absolute location check to ensure accurate rendering of road icons based on plot area ' s ownership
added tests for ` setTouchExplorationEnabled ` and replaced ` ArrayMap ` with ` ArrayList ` for listener handling in ` ShadowAccessibilityManager ` to improve testing coverage for touch exploration state changes and simplify listener retrieval logic
pdfbox - 5328 : avoid indexoutofboundsexception when lookup unicode character code ( # 5328 )
bug 62222 - correctly handle test element name in the jmeter gui
( chore ) camel - npoifs : use the public api a the default npoifs impl
added imports for PlotArea and modified return logic to retrieve the absolute plot ' s absolute position to enhance functionality by ensuring the plot is valid before proceeding with further operations
update regex pattern in TestWebHCatE2e . java to ensure compatibility with the latest version string format
updated the lower bound check for ` count ` to allow zero to ensure valid range for ` count ` for ` pickleEvents `
consumer config now include consumer thread count in group and client id
added error handling for non - successful execution of the javac method to improve robustness by throwing an exception when the method fails
[ fix ] drawlist do n ' t repaint when switch to active .
corrected spacing in the conditional statement for better readability to enhance code clarity and maintainability
added a method ` isAnimationFinished ` to the ` Animation ` class to check if the animation has finished based on the given state time
added a new test method for custom branding icon with line breaks in LoginMockMvcTests . java to ensure correct handling of shortcut icons in the login process
added a null check for otherUrl before comparing it to an empty string to avoid potential NullPointerExceptions when otherUrl is null
ticket # 4810 : more work on issue # 4817 , remove the ` ` space ' ' from the previous ` ` this ' ' character
updated the implementation of ObjectHashSet to improve performance and maintainability of the code
updated null checks in DataUtilities for better null handling and simplified equality checks to enhance code clarity and maintainability by using ` Arrays . equals ` for array equality checks
[ 1.19 . x ] fix comparison of enchanted books , mc - 12770 ( # 4909 )
add test for async async resource ( # 4995 )
rename target - flat - headers to target - user - headers to clarify the purpose and distinguish between handling user and header maps
fix ( mail ) : log failure to send mail message ( # 868 )
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce ` EMPTY _ LABEL ` to improve clarity of the method ' s purpose and ensure UI resets to a defined empty state
added tests for fetching partitions with single and unequal size batches in Hive to ensure correct behavior of partition retrieval based on batch sizes
added a closing brace to the FileListListAdapter class to ensure proper class structure and compilation
replaced ArrayList with List for sharees in OCFile and OCFileListAdapter to improve code flexibility by allowing a list of ShareeUser instances
updated the index used in the removeViewInLayout method from 1 to 2 to correctly manage the removal of views within the BubbleBarView
updated hide statements for Jetty WebSocket classes to remove unnecessary dependencies to streamline code and maintainability by reducing unnecessary dependencies
updated the second parameter of the S3Request constructor from true to false to modify the behavior of the S3Request by defaulting to false
add null check in jfxradiobuttonskin , call updateanimation ( ) if timeline be null
updated DeweyNumber to handle a zero split dewey number to improve error handling for invalid DeweyNumber inputs
updated categorySetString formatting in MwVolleyApi . java to remove " Category : " prefix to ensure consistent formatting of category names for better readability
updated assertion for invalid close control status code in WebSocketClientTest . java to correct the assertion to reflect the correct close code scenario
* webapploader can now return an empty string array if we be n ' t use the webloader
hhh - 14625 improve handling of mapped superclasses in persistentattributemapper
pdfbox - 3353 : ignore page label , a suggest by michael klink ( mik )
added a new file ` TestPorterStemFilter . java ` to test the functionality of the PorterStemFilter class to ensure correct processing and resetting of token streams in the tokenizer
lucene - 3890 : write index updates only if a successful write attempt be successful
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch . core . explore . support ` in multiple test files to better reflect the current package structure and improve test organization
added synchronization to the chatPanels collection in ChatWindowManager . java to ensure thread safety when accessing chat panels
move system . touch ( ) to own module to fix lwjgl bug
updated HgCmdLineInterface to include " - mardu " as a command parameter and removed untracked file checks to enhance functionality by allowing tracking of changes in the command line
camel - 8094 : camel - netty - netty - util - netty now use a thread - safe timer for read and write timeout .
change some field in light class to final to reduce memory footprint .
added width and height assignments to X11GraphicsConfig and WGLGraphicsConfig classes to ensure dimensions are always positive to avoid rendering issues
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and multiple classes to provide a consistent string representation of the delegate object
added AnnoFilterTreeSet class to manage inner classes and annotations to enhance functionality by allowing nested classes to be recognized as inner classes
updated the length calculation logic in BytesColumnVector . java to handle integer overflow scenarios to ensure proper handling of buffer sizes and prevent potential overflow issues
fix testwritebehindmapstorewithevictionstest race condition ( # 11858 )
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in MotifScrollPaneUI and XTextAreaPeer classes to enhance method flexibility to support a broader range of components
added isequal ( ) method to PolyFunction class for comparing two PolyFunction objects to enable more precise comparison of polynomial functions in a geo function
added null check before retrieving column class in SynthTableUI to ensure safe access to column class when table is not initialized
added error handling when loading the custom change class to handle potential ClassCast failures in the Ant environment
added support for materialized paths in DistBuildConfig and replaced ConfigPathGetter with BuckConfig in multiple classes to enhance the flexibility and efficiency of path management within the Dist build process
fix ` ` double entry ' ' display in export dialog
added JUnit @ Ignore annotation to BasicDistributedZkTest to mark the test as ignored due to broke issues
changed the return type of the doJoin method from void to boolean and modified related checks in JoinTemplate , JoinWorker , and MergeJoinBatch classes to improve feedback on join success and ensure proper handling of join results
added a new method getAutodeps ( ) to the JavaLibraryDescription class to provide access to the getAutodeps method of the library
added FLAG _ ACTIVITY _ NEW _ TASK to the intent flags in LauncherTimelineCursorAdapter . java to ensure the intent can also be created with an additional task for sharing
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance filtering functionality based on paging order
updated the URL assertions in RepositoryConventionPluginTests from " https : / / repo . maven . apache . org / maven2 / " to " https : / / repo . maven . apache . org / maven2 / " to ensure the test reflects the correct repository URL format for improved accuracy
of - 180 - add a new file ` AffiliationTask . java ` that implements a new ` NodeAffiliate ` task to enable the configuration of node affiliate for a specified jid in the cluster
update uri normalization to handle invalid uris properly to improve error messaging for invalid URIs
change access modifier of buildUserProfileByClassCompleteName method from private to public to allow access to the method from other classes in the application
added array handling and updated cache key logic in CacheKey . java to improve flexibility in updating cache values for different object types
updated file type detector implementations across multiple files to use a unified file type provider to enhance file detection capabilities and improve code maintainability
close the WebSocket session to ensure proper resource management and prevent potential memory leaks
updated the VirtualSensorManager to support direct channel callbacks and improved the ShadowVirtualDeviceManager to enhance flexibility and integration with Android ' s VirtualSensor API
added a condition to check if the httpSession is not null and not before execution to ensure that the session attributes are removed only when the execution context is not the same
refactor IP address handling logic in NetUtil . java to improve clarity and functionality to enhance network connection reliability by correctly retrieving loopback addresses
updated constant names and buffer sizes in Zlib . java for clarity and consistency to improve code readability and maintainability
updated KeyInfoReferenceResolver and related classes to enhance security checks and error handling to improve the robustness of node reference resolution and provide clearer error messages
added a boolean flag ` iconChangeListenerInstalled ` to control the removal of the action listener to ensure the icon listener is only processed when the icon is initialized , improving functionality
added Russian language support in the Language class to enhance localization capabilities for Russian users
hhh - 13653 fix sqm duration precision to be nanosecond
disable frame state verification for manually generate graph
added system property handling and teardown methods in RobolectricTestRunnerTest and TestUtil to ensure proper cleanup of system properties before tests complete
added functionality to add " org . slf4j " to the ViewClassLoader and verifying its presence in ViewClassLoaderTest to ensure proper class loading and logger factory functionality in tests
fix changepackaging to remove the default ` ` jar ' ' packaging
fix fail test : set extension to ` ` txt ' ' for download file
clear thenk buffer when the command arrive from the server
updated the handling of units in JogService and related classes to use preferred units instead of the default units to improve consistency and simplify the management of units in the application
[ log4j2 - 1247 ] patternlayout % date conversion pattern should render time
fix checkstyle issue in util / terminal / terminal . java ( # 787 )
improved error messages for file URIs and improved URI handling to provide clearer feedback for invalid URIs and ensure proper URI authority
use java 8 timer task instead of java 8 schedule
fix test which randomly fail on slow ci server
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve thread safety and performance during concurrent operations
added the ` ignore ` method to multiple log classes and defined its behavior in ` Logger ` and ` StdErrLog ` to log a warning when ignored exceptions are encountered during logging operations
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential null pointer exceptions during execution
removed unnecessary type casting when manipulating item and contents in BukkitWorld . java to improve code clarity and reduce unnecessary type casting
removed the cleaning of an image before processing to improve performance by avoiding unnecessary image processing
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing map and unmapping operations to improve directory management and optimize resource management in Solr
added a null check for the image resource before creating a BaseColor instance to avoid potential NullPointerExceptions when the image is null
updated field name in assertion from " f = field1 maxDocFreq " to " field1 _ s maxDocFreq " to ensure consistency in field naming within the test cases
updated ExtendedOperatingSystemMXBeanImpl to enhance monitoring capabilities to improve performance monitoring capabilities in the application
added methods for installing left commands in SideMenuBar to enhance user interface functionality for better command navigation
added a new boolean variable ` advanceWindowed ` and conditionally calls ` setUpWindow ( ) ` in multiple activities to control the setup of the window based on user settings
added support for SybaseDatabase in the DropPrimaryKeyGenerator to ensure compatibility with Sybase systems
updated Client class implementation for improved performance to enhance application efficiency and response time
[ java ] ensure last recordingposition be correctly reset when leadership be ready .
replace the ` invalidate ( ) ` method with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java ` and implement ` shouldDelayChildPressedState ( ) ` in ` CellLayout . java ` to improve icon handling and ensure correct state management during child navigation
added a return statement to the NearCachedClientMapProxy class to improve code flow by terminating execution under certain conditions
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
added a method to shutdown the HTTP server and handle exceptions to ensure proper server shutdown and handle potential exceptions gracefully
camel - aws2 - s3 : fix compilation error of camel - aws2 - s3
[ hotfix ] [ runtime ] remove parameter _ tm _ id and use task _ manager _ id _ key in taskmanagermetricshandler
bug 10725 : fixed / added incorrect / missing key in 228 to 229 upgrade
hive - 27180 : do not log password in cli log ( jason dere via ashutosh chauhan )
added maxEnergyLimit initialization and updated energyLimit assignment logic to ensure energy limit is accurately represented based on the constant call parameter
added maxInMemorySize property and its getter / setter in HttpClientProperties . java , and updated WebClientPlugin constructor to accept it to enable dynamic maximum memory allocation for improved performance
modified caching logic in Cache . java to improve performance and efficiency of data retrieval
added new test classes for Cucumber testing and step definitions to establish a framework for testing Cucumber programming programming
added error handling for JSON parsing in TypeJsonUtils and updated test cases in TestArrayOperators to ensure robust parsing of double values and improve test coverage for various data types
added a new byte array variable with the correct length in the Utf8StringBuilderTest . java file to ensure the test correctly accounts for the expected lengths of byte arrays
added a check for parameter sets before processing parameters and improved handling of parameters to ensure that only valid parameters are processed and to avoid potential errors
camel - 10399 : ensure we only fail on too many output on circuitbreakerloadbalancer to prevent oom .
updated test cases to set a maximum buffered document limit to ensure that the test operates correctly under varying maximum buffered documents
replaced string - based hash encoding with Sha1HashCode for improved consistency to enhance hash quality and reduce dependency on string encoding
remove unused enumvalue ( ) and enumvalue ( ) method in asmruntime .
add new biom for mangrove swap and december ( # 1363 )
remove asyncimageloader and replace it with a threadpool to fix threading issue
changed private fields to protected in BaseTableUpsertMetadataManager and refactored segment preload logic to enhance accessibility for subclasses and improve segment preload efficiency
replaced occurrences of " \ u0648 \ u0648 \ u0631 " with " \ u0623 \ u064a \ u064a \ u0631 " in multiple data files to ensure accurate representation of data for months in Arabic locale settings
replaced ` getImage ( ) . equals ( ) ` with ` hasImageEqualTo ( ) ` for better readability to improve code clarity and maintainability by using a more descriptive method for image equality checks
camel - 17445 : camel - jbang - allow to specify a repository for the run command such a camel version .
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding invalid score processing
added an ` @ AfterClass ` method to set the last modified timestamp and delete existing files after tests to ensure proper cleanup of temporary files to prevent test failures
filter condition editor now work for input field ( fixes # 483 )
[ flink - 15616 ] [ checkpointing ] use autocloseableasync to ensure pointscleaner be close
added a new file ` XPathWhiteSpaceTest . java ` to test XML schema parsing to ensure proper functionality and validation of XML schema configurations
only persist the trie log if it ' s empty ( # 5451 )
refactor FilledNewArrayInstruction class for improved readability to enhance maintainability and clarity of the codebase
add @ test ( timeout = 60 * 1000 ) to prevent network test from hang
update return statement to use ` endsWith ` instead of ` substring ` to ensure proper handling of parent path formatting
added a print statement to display errors when loading the skin file to improve debugging by providing visibility into loading errors
added dirty state management to LgoGroupedLevel2Update and modified skip logic in LgoLevel2BatchSubscription to ensure data integrity during initial accumulator updates
added a new static final Result constant for UNDEFINED in Result . java and updated TestStep . java to return it to improve clarity and maintain consistency in handling undefined results
replaced ` PersistenceException ` with ` NullPointerException ` in the ` TestTransactionCallback ` class to improve error handling by providing a more specific exception type
change implementation of uploadjobmultireaderoperation to be thread - safe
improve error message if fail to recover data at position of the job scheduler
bug fix : ignore summary node when parent view be collapse
replaced the ` pos ` variable with a ` sizeMask ` variable and modified the ` ensureAvail ` method to improve encapsulation and ensure proper handling of size calculations
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark these tests as ignored due to failing all the time
use sublist ( 0 , handler . blockfor ) to reduce allocation .
updated the declaration of bufferedIo and lazyCreate parameters in FileManager . java to ensure consistency with Java naming conventions
camel - 17967 : camel - core - transform : improve the documentation for transformfunctiontype annotation .
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement class to provide better access to specific elements in the VariableElement class
8037550 : update rfc reference in javadoc to rfc 5280
fix : wrong version number in Recaf and SearchAnnotationVisitor classes
removed memory cache initialization and improved item selection handling in ListActivity and NoteAdapter to optimize memory usage and enhance performance when displaying selected items
refactor conditional statements for better readability in DirectUpdateHandler2 . java to improve code clarity and maintainability by consolidating conditional statements
polish ` ` change default file path to file _ url _ prefix ' '
updated PreviewPositionHelper initialization to accept a context and modified device insets handling to improve flexibility for different screen orientations and enhance compatibility with split screen modes
[ java ] change the logic of publish new leadershipterm to be consistent with the return value of getleadershiptermid .
[ java ] fix junit test for xpath rule output
refactor byte skipping logic in ByteArrayInputStream and add a new class Skip to improve code clarity and functionality by implementing the skip method
restructured the conditional logic for prompting updates to improve readability and maintainability of the code
changed the visibility of MAX _ HEADERS from final static to public static and modified the block chain download condition to allow external access to MAX _ HEADERS and improve block chain download efficiency based on available headers
include rt . jar in standard jar list ( lwjgl 2.8 . 1 )
refactor connection handling logic in AbstractHandshakeHandler to streamline connection Reject logic to improve readability and maintainability of the connection handling logic
[ geos - 7898 ] graduate configuration property for heterogeneous spi so it be available from geos - 7u6
added a check to avoid sending error 500 when the response is already committed to improve error handling and log a warning when the response is already committed
updated conditions in HttpSession . java for better readability and logic flow to improve code clarity and ensure proper handling of hold values
updated ` fadeOutFakeTaskView ` method to false and added functionality for new gesture navigation tutorials to enhance user experience with a new gesture navigation tutorial when the feature flag is enabled
fix ( prefab ) : avoid ` ` unknown component ' ' prefab name
updated ScimExternalGroupBootstrap to include external group properties to enhance group membership management by associating group memberships with superusers
added a validation check for non - existent account transfer amount in the FreezeBalanceActuator and TransferActuator classes to ensure that a valid amount is provided to prevent processing errors
fix test due to window path issue
ggb - 2118 fixed keyboard button ' s text problem
updated GpsMainActivity to include session description in the GpsMainActivity and replaced Intent with EventBus in AnnotationViewFragment to enhance session management and improve event handling for service actions
added a condition to test PDF generation and saving output if the number of pages is not 3 to ensure the test correctly verifies the expected number of pages in the document
* deprecated bufferallocator for jme3 use native buffer allocator
added logic to handle flags starting with " ! " in Main . java and Util . java to ensure that specific flags are handled correctly during processing
add nopmd - we do n ' t need to call thread . sleep
refactor use operation comparison in BattlePassManager . java to improve code readability and maintainability
add tostring ( ) to the test case , to help debug the issue
update unit test to not depend on account concept .
added a null check for the command and modified the conditional check to include HELP option to enhance command handling and improve help functionality
[ gr - 27654 ] change the light output stream size . the output stream be slightly large .
changed the Scanned class visibility from package - private to public to allow access to the Scanned class from other packages
updated ClassWriter . java to handle blank lines more effectively and added a new class T8032819 . java with improved test functionality to enhance code readability and functionality while testing class functionality
added assertion to verify that the length of a Person object is valid to ensure that the Person object has sufficient integrity before proceeding with operations
updated the handling of the file extension check to ensure it returns false when the file extension is null to improve robustness by preventing potential null pointer exceptions
fix wrong order of return statement when enter a contact ' s right button
[ fix ] avoid deadlock when execute getslot ( )
simplified the loop structure in InstallShortcutReceiver . java to improve code readability and maintainability
updated socket binding logic to ensure proper resource management to improve resource management and prevent potential memory leaks
added functionality to remove media items from the BookmarkList and MediaDetailPagerFragment to improve user experience by managing removed media items effectively
[ netbeans - 5127 ] fixed log message in Actions . java when use w3c command
added a new file ` bug4865918 . java ` implementing a GUI with a scrollbar block increment to test and verify the behavior of the scrollbar in the application
replaced the use of VelocityEngine with org . apache . velocity . app . Velocity in ADKerberosOperationHandler to simplify the code and ensure it uses the recommended Velocity class for template evaluation
add ` ` grouptriggers ' ' command to show trigger
fix : start account file dialog when there be no database adapter
added Lombok ' s ToString annotation and imported Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enhance string representation for better debugging and logging
added CONFIG _ URI constant to CloudService configuration to standardize configuration URI usage across the application
removed calls to ` setViewportComponent ` and ` setJScrollPane ` from ` BrowserPanel ` to streamline scrolling behavior for improved user experience
updated key mappings from KEY _ DEL to KEY _ FORWARD _ DEL in multiple classes to improve keyboard handling for better user experience
updated the method to retrieve MIME type parts conditionally based on configuration to enhance flexibility in indexing behavior based on user settings
added a regex pattern to identify and validate the author of constructors in JSDoc . java to improve the accuracy of constructor visibility checks based on the author of the method
updated metrics constants to use more descriptive names for better clarity to improve code readability and maintainability by standardizing naming conventions
updated HiveDatabaseSchema and HiveSchemaFactory to use DrillHiveMetaStoreClient and SchemaConfig for improved schema management to enhance error handling and ensure proper initialization of tables and schemas
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` as parameters to enhance functionality by allowing additional parameters to be passed during OAuth2 login
updated Hijrah calendar name and modified DateTimeFormatter locale specifications to ensure clarity in calendar representation and improve locale consistency in date formatting
webaudio : disable support for firefox in ie
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` and modified the private constructor in ` InterceptorConstants ` to enhance server interceptor functionality and improve encapsulation
add default charset support to postgresql compatibility check
removed redundant calls to ` kill ( false ) ` in ` WriterRecordBatch . java ` and restructured the logic in ` StreamingAggTemplate . java ` to streamline the code for better readability and maintainability
[ hotfix ] fix typo in executiongraph java doc
add ` hasFrom ` functionality to the ` Delete ` class and updated ` DeleteDeParser ` to support this functionality to enhance SQL parsing capabilities and improve handling of " FROM " syntax
replaced successful status checks with multi - status status checks in SynchronizeFolderOperation . java to improve handling of multi - status scenarios and enhance debugging capabilities
added a method to check applicable tests in the RecipeScheduler to streamline the process of checking for applicable tests by ensuring all tests are processed correctly
fix : ( log ) fix loganalyser ' s regexes
camel - 17684 - camel - google : allow to run integration test without Google Cloud integration test
fixed - maxscore and maxmax exclusive be n ' t apply to maxscore parameter # 1651
[ ds - 2604 ] update cclicensestep to cucumber - select - change and - no - license option to cucumber - step . xml
added a null check for globalId before inserting values into the guidIndex map to avoid potential NullPointerExceptions when globalId is not set
updated comparison logic in OptionalAssert to use a comparison strategy to improve comparison accuracy and maintain consistency with object comparisons
fix whitespace and margin issue report by lgtm . com .
added a new test class ` TestArrayCopyToFromObject ` to verify array copying functionality to ensure that ` ArrayStoreException ` is correctly thrown when copying an object using ` Object `
updated Python path handling by replacing double quotes with double quotes to ensure correct formatting of paths in the output
fix ( net ) : fix infinite loop in close ( )
deprecate findfiles ( ) because it be n ' t really the best place .
added an import statement for JUnit ' s Ignore annotation and annotated the test case with " unstable " to mark the test as unstable for future reference
updated the request handling in TestInternalInputBuffer . java to check for null exceptions before asserting response 400 to improve error handling and avoid potential null pointer exceptions
prevent arrayindexoutofboundsexception during class loading
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` to check for server versions more accurately to ensure compatibility with server version checks and improve code clarity
updated the IP address handling in KDC and related classes to ensure consistent usage of " localhost " and " backend / " instead of " server / " to address potential issues with local address resolution and improve code clarity
modified the Jsr250Voter to return a boolean indicating a success state and updated the return logic to handle multiple roles more effectively
updated import statements in MP4Parser . java to use specific classes instead of wildcard imports to improve code clarity and reduce potential namespace conflicts
added HS2 _ PROXY _ USER constant and modified session parameter handling in ConnectionFactory . java to ensure proper session configuration by including the username of the proxy user
camel - 6056 : camel - hdfs - use snappy compression when use bzip2 / snappy
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper timing between asynchronous operations in tests
[ bug - 67484 ] xssfcell : clear blank cell and remove from the row array formula
updated glyph offset calculations and modified text formatting in BitmapFontTest to fix rendering issues with AGWlWi AGWlWi
[ k8s ] fix k8s test dependency issue
replaced direct usage of ` reportPlaybackStartAsync ` with ` reportPlaybackProgress ` in ` PlaybackController . java ` and ` Utils . java ` to centralize playback manager methods for better consistency and maintainability
avoid potential resource leak by not hit the disk .
prevent overload of recordstore . existsinmemory ( key ) when it fail on initial load
change bitwise operation from bitwise to bitwise operation for LENGTH _ BIT and ERROR _ BIT to ensure proper handling of bit values in response flags
add read policy check to fix default policy class
updated FontUtilities to use SoftReference for CompositeFont instances to improve memory management and prevent potential memory leaks by reusing CompositeFont instances
updated preferred height calculation in Tree . java to ensure consistent rendering of node height by initializing prefHeight to zero
drools - 2904 dmn feel fix syntax error message ( # 2904 )
removed unused import statements and refactored the isVacant method for better readability to improve code cleanliness and maintainability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and refactored input handling in multiple classes to improve method accessibility and ensure consistent execution of runnable tasks
added null checks for node IDs and edge type in ElementFactoryImpl and ImportContainerImpl classes to improve error handling and prevent null pointer exceptions
[ beam - 8470 ] avoid npe and improve logging .
nifi - 2748 : ensure that binfiles be only create within the session if they exceed the bin limit . this close # 2749
refactor closest logic to use a for - each loop instead of a for - each loop to improve efficiency by directly accessing the closest component instead of accessing the geometry directly
added a check to skip sending of the content - length header in the RestTemplateCopyHeaderFilter to ensure that the request skips unnecessary processing when the content - length header is already set
refactor string handling in Java2TypeScriptTranslator and add tests in Literals to improve type conversion accuracy and ensure correctness of string representation in the code
updated sample sizes and adjusted data sizes in multiple classes for consistency to improve data representation and ensure accurate data representation
hbase - 15688 add a flag to allow the canary command to be run in parallel ( liu shaohui )
remove unused node module from cassandrasConnectorfactory
added a line to reset the cursor position in the KahaDBStore to ensure the cursor is reset before processing new data
add minimum size requirement to call window . also make it tolerant to a small screen size .
fix loss of state information during world gen . ( # 4569 )
remove mirror - control test , will be enable in junit 4
updated KerberosPrincipalDAO to incorporate KerberosPrincipalHostDAO for improved entity management to enhance the management of Kerberos principal entities by ensuring proper removal of related entities
removed the boolean parameter from the getTableSnapshot method call to simplify the method call and enhance performance by reducing unnecessary parameters
do n ' t countdown on endpoint timeout and log error . patch by jbellis
update error message for licenseKey in AndroidGradleBuilder to clarify the setup and ensure the Base64 - encoded RSA public key is pasteable
updated the ` FileTranscodeVirtualFolder ` constructor to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and removed the ` isInsideTranscodeFolder ` method to correct the parameter passing to the ` FileTranscodeVirtualFolder ` class
[ drools - 6016 ] avoid compilation on window due to wrong package name ( # 3645 )
updated CheckIndexTest . java to skip a test for version 19 and above to ensure compatibility with features running version 19 and above
refactor target assignment methods in AbsSwipeUpHandler and RemoteTargetGluer for improved clarity and functionality to enhance animation target handling by removing dependency on context for split screen tasks
refactor LeaderLatch class implementation to improve code readability and maintainability
added methods to initialize Zksnark parameters in SolidityNodeHttpApiService to ensure correct parameters are used for Zksnark spend functionality
transaction . setappearedatchainheight ( ) should return a future , not null
added a method to create a MediaRecorder and updated location - related data types for clarity and consistency to improve code readability and maintainability by using a more descriptive variable name
set default platform name to " ios " in JavaSEPort . java to ensure consistent platform configuration for iOS
update PageEditClient class implementation for improved functionality to enhance user experience by providing better control over page editing behavior
changed the order of checks for mozDash and webkitLineDash in Graphics2D . java to ensure proper handling of edge cases for graphical operations
pdfbox - 2852 : fix typo , a suggest by valerybokov
add exception handle when an exception occur during the outgoing frame handling of an outgoing frame
updated ClassLoader handling in ContextHandler . java to use AccessController for privileged actions to improve security by ensuring privileged actions are consistently used for class loading
added logic to update child categories of a feed category to ensure all child categories are retained to maintain data integrity
added title to the ContributionManagerDialog for updating contribs to improve user experience by providing a clearer and more relevant title
added a ` vwap ` field to the ` Ticker ` class and modified the constructor accordingly to enhance the ` Ticker ` data model by including average and volume information
added functionality to display a " no widgets " view and updated bottom inset handling to improve user experience by providing feedback when no widgets are available
chore : integrate rendergraphapi into rendergraph api ( # 637 )
added a primary color setting in NCFirebaseMessagingService to ensure consistent color application based on the primary theme
refactor ShadowUsbManagerTest to improve test structure to enhance maintainability and readability of the test cases
add log for each run for % 100 % on each run
added a call to update the selected configuration in the Rocket class to ensure that the selected configuration is properly updated upon changes
fix issue with small bound box in android stroke . http : / / github . com / codenameone / codenameone / issues / 2888
[ netbeans - 4769 ] improve performance by use linkedhashmap instead of hashmap
replaced ` ClosureManager ` with ` ClosurePool ` for closure handling to improve resource management and resource efficiency
( chore ) camel - test - jbang : migrate to junit 5 ( # 4534 )
[ shenyu - 4530 ] add shenyu integration test for websocket client ( # 4957 )
[ dsrv - 14 ] fix javadoc for abstractimportmetadatasourceservice and remove unused unit test .
refactor authentication comparison logic into a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by reducing repetition
added a condition to check if the X86 compiler is enabled before proceeding to ensure compatibility with the X86 compiler configuration
refactor call node type handling to use a consistent variable for call types to improve code clarity and maintainability by standardizing variable names
added an ` @ Insecure ` annotation to the ` MessageBuffer ` class and refactored related methods in ` MessageBuffer . java ` to enable authentication handling with the ` @ Insecure ` annotation for improved security
added new configuration variables for Hive configurations in HiveConf . java to enhance configuration flexibility for Hive operations
initialize ` scopes ` and ` policies ` with a new ` HashSet ` instance and ` null ` check in ` DefaultResourceSetService ` to ensure proper handling of null values and prevent potential NullPointerExceptions
lucene - 3992 : fix multireader to correctly close subreaders when they fail to close
8238701 : fix doclint warning in java . net and sun . net
make test work in 2. 49 . http : / / bugzilla . chromium . org / show _ bug . cgi ? id = 45656
updated the method for retrieving the first type argument in multiple classes to improve clarity and consistency in type handling across the codebase
changed return types of keySet and values methods from Set to KeySet and Values in Int2IntHashMap to improve method functionality for better data handling
added duration parameter to the FlipTransition class and updated MotionMotion initialization to allow customization of background color and duration for better visual feedback
removed logging for non - streaming sub being valid for streaming to streamline performance by eliminating unnecessary logging
bump version to 10.17 . 0 to mark 1.17 .
use ( no - op ) log instead of system . err .
change javaparser to be able to run ast processor on jdk 16 +
updated padding logic for statusView based on replies size in ExpansionViewHelper . java to ensure proper layout spacing for both single and zero replies
partitionbackupreplicablelocationAntiEntropytask : do not invoke onresponse when there be no callback support on v3.9
added metadata handling functionality to SeedUrl and SeedResource classes to enable storage and retrieval of additional information related to seeds
added a null check for the declaration before setting the pattern to avoid potential null pointer exceptions when the declaration is null
hbase - 22769 addendum fix typo in testcoprocessorwhitelistmasterobserver
ambari - 21190 . xwork validator : package name be incorrectly define in the config file ( dili )
updated test cases to utilize ` Arrays . < Object > ` for null handling in ` IterableTest . java ` to improve type safety and reduce potential runtime errors related to null values
added stream method implementations in MapIterable , PrimitiveObjectMap , and MapIterableTestCase classes to enhance stream handling capabilities in the application
replace the return statement to clone the notifInfo object to ensure the original notifInfo instance is not modified
ticket # 2636 : fix for key
refactor AEADBlockCipher class to improve cipher handling to enhance security and maintainability of the code
added a method ` isVariableLocal ` to ` VariablesMap ` , ` WebVariablesMap ` , and ` ILocalVariableAwareVariablesMap ` classes to enhance variable checking functionality by checking if a variable is local
added a null check for resourceName and updated the ResourcesMode constant in RobolectricTestRunner to ensure proper handling of resource names and maintain consistent default behavior in tests
added a conditional check to ensure head and post buffer is not empty before processing to avoid potential errors when the size of the table is not valid
refactor ` SignPlugin ` to accept a list of ` HttpMessageReader ` instead of a static list to improve flexibility by allowing multiple message readers to be processed
refactor Int2ObjectCache . java for improved performance to enhance efficiency in object caching operations
remove validation for remote repository in StandardMavenAuthenticationProvider . java to streamline code by avoiding unnecessary validation for remote repositories
modified the AudioNode class to enhance audio handling functionality to improve performance and accuracy of audio processing
added SSL context initialization and updated cookie store handling in EnedisHttpApi . java to enhance security and improve error handling during connection attempts
added imports and modified HiveFunctionRegistry to utilize a map for translating SQL operators to enhance functionality and improve consistency in function naming
amq - 3451 : fix issue with use of xmx when add object to brokermbeansupport
updated the ` getBuildTargetForAlias ` method to handle ` possiblyFlavoredAlias ` correctly to enhance the functionality of the ` getBuildTargetForAlias ` method by properly extracting the alias from its parent alias
camel - odata2 fixed indexoutofboundsexception when process odata2 a component
added imports for Map and ImmutableMap , and modified version retrieval logic in MetaStoreSchemaInfo . java to improve code clarity and ensure version information is correctly retrieved
remove unnecessary whitespace in uservmmanagerimpl . expunge
added @ Deprecated annotations to multiple locations in AbstractDateAssert . java to indicate that these elements are outdated and should not be used in future development
updated methods in ONDashClockExtension , AlarmReceiver , and AlarmReceiver to utilizeAlternativeTitle for better title handling to improve user experience by displaying a more relevant title for notes
updated GoogleAuthUserConfigTable to use Nnarchar for column types and modified assertions in TotpEndpointIntegrationTests to improve compatibility and enhance test accuracy for column data types
replaced ` commit ( ) ` with ` apply ( ) ` in multiple Java files to ensure changes are applied asynchronously and improve application stability
added an IdleListener class to the session initialization in AsyncTimeoutTest . java to implement idle handling for better session management
test : fix bigqueryio it to print test id
added background resource setting and reset functionality for HotseatPredictionController and BubbleTextView to improve visual appearance and ensure proper background rendering
mondrian : remove deprecate ` ` mondrian . flush . afterquery ' ' property declaration
add abstracttestnativeworker for system . runtime . queries and system . runtime . transactions .
[ lIME ] fix nullpointerexception in lIMEexplanation . getactivefeatures ( ) ( # 13564 )
added support for passing command - line arguments in AppleSimulatorController and InstallCommand classes to enhance argument handling for better build feedback during Apple targets
replaced direct calls to getArea ( ) with a genericStyledArea instance for getting the current paragraph position to improve code readability and maintainability by reducing method calls
added a check for availability of the lifecycle in ContainerBase and StandardContext classes to ensure that lifecycle state is accurately checked for availability before processing
added a background background to the QsbWidgetHostView to improve the visual appearance of the widget background
added flag conversion logic and improved logging in SQL , PlotArea , and BlockTypeListFlag classes to enhance performance tracking and provide user feedback during flag conversion
use depth test from floatingtextrender instead of directly use gl11 . gldisable / gldisable
fix libffi libffi libffi feature flag for linux
camel - 14263 : camel - jdbc - allow to specify the propagation behavior for transaction .
fix for layer validation when regularization be not already set ( i . e . blayer )
added exception handling for read and write operations in AbstractChecker . java to improve error handling and provide clearer logging for failures
pdfbox - 2852 : fix warning , avoid accidental access to private field
changed the return values of ` getMappedStatement ` and ` hasStatement ` methods from ` false ` to ` true ` to enable mapping and statement validation by default
convert tradableIdentifier to lowercase in BTCEPollingMarketDataService to ensure consistency in data handling by converting to lowercase
updated unit tests for channel state values from " 0.312716 , 0.329000 , 0.000000 , 0.594600 , 0. 3042 " to " 0. 304200 , 0.594600 , 0. 3042 " to ensure accurate measurement of command states in tests
remove enginepayloadparameter . versionedhashes ( seem to be already a jsonproperty ) ( # 637 )
fix price field not remove when selection of offer
refactor student edit save action to handle error case more explicitly
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 23351 avoid unnecessary check for debug level when store be empty
fix : ` ` many property ' ' can not be set on a new bean ( # 10568 )
added a boolean variable ` _ alwaysSaveUri ` and modified the conditional check for the J URI attribute to provide control over URI saving behavior in the session validation
added new methods nSetLayerType and nSetLayerPaint to ShadowRenderNode to enhance functionality for configuring layer types and paint settings
replaced specific imports with wildcard imports and added methods to handle the popup menu visibility to improve code readability and ensure proper visibility management of the popup menu
remove duplicate code in stressprofile . insert ( )
[ flink - 33905 ] [ test ] clean up usage of scala - api from example code
added null check for requests and improved logging in the MockServerEventLog and HttpForwardObjectCallbackActionHandler classes to enhance stability and maintainability of the code
if the property file can not be load we should log a warning
[ beam - 6370 ] fix resource leak ( # 6371 )
updated conditional check in SetOutgoingIf to include multicast support and NIC status to ensure outgoing connections are only established on valid and capable network interfaces
updated String constructor to accept a length parameter to ensure proper handling of command data length
replaced calls to setLatestConsumeTime and setLatestConsumeTimeForEnergy with receiverCapsule and removed redundant methods from BandwidthProcessor and EnergyProcessor to streamline energy management and improve code clarity
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to enhance flexibility by allowing configuration of session management strategy
include label size in the error message when a token for index be empty in protobuf annotation serializers .
add a new file ` MapAssert _ containsKeys _ Test . java ` to implement map assertions to facilitate testing of key containment in assertions
added a new interface JDBC4TemporaryPreparedStatementMethods and updated the JdbcProxyGenerator to use it for proxying to enhance statement handling capabilities for JDBC statements
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated WebSocket upgrade handler handling to improve the handling of WebSocket components and enhance clarity in handling upgrade requests
replaced ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to improve data structure usage and consistency
pdfbox - 4892 : avoid npe , a suggest by valerybokov ; remove unneeded cast
replaced MethodHook array initialization with a static empty array in Method . java to improve memory efficiency by reusing MethodHook instances instead of creating new ones
added a grantAccess flag to MockAuthenticationManager and modified the return logic to handle access control to enhance security by restricting access to mock authentication objects
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enhance method flexibility for processing job executions within the job listener
updated file permission check to ensure it can be executed before checking if it can write to prevent errors caused by file operations
[ api ] add hastimeseriesquerylanguage ( ) method to timeseriesquery interface ( # 1366 )
samplerservice : synchronize static variable to avoid unintended side effect
added new constants for BATTERY _ LEVEL , annotations , time , and PROFILE _ NAME in BundleConstants and CustomUrlManager classes to enhance URL processing capabilities by including additional data attributes
fix compile error due to change in method signature
g3d - 333 : fix classcastexception due to move object to absolute screen .
updated the resize method implementation and texture handling in ProjectiveTextureTest . java to improve texture resizing behavior and ensure compatibility with new format handling
modified the ` setResourceToDelegate ` method to return a ` File ` instance instead of void to improve method functionality by allowing the output file to be writable
camel - 3563 : property component now correctly intercept from uri . this also fix issue with camel - 3563 by allow property endpoint to be use directly .
fix action scheduler ' s lastattempttime check ( # 11954 )
updated debug log file path initialization and added null check for debug _ log to ensure proper path resolution and avoid potential null pointer exceptions
improve the visibility of the notification overlay for gestalt ( # 4568 )
fix issue with pipe not be able to mark a pipe a active , and reset the active gate .
encapsulate TestSupplementary execution in a try - finally block to ensure locale is reset to maintain consistent locale settings and prevent side effects in subsequent tests
updated the team color range in the Team constructor from 0.8 f to 0.4 f to improve randomness of team color values
replaced Set with ArrayList for activeMatchedStates and modified state removal logic to improve performance and reduce memory usage during state processing
updated the condition for checking for null and empty exceptions in SoftAsserts . java to improve clarity and correctness of exception handling logic
enhanced error handling in StorageResources . java by including detailed error messages to provide more informative feedback during plugin saving and improve error reporting
[ gr - 32225 ] add call tree csv link for easy import into graph db .
updated DetailFragment to ensure null checks for note and improved variable initialization to enhance code reliability and prevent potential null pointer exceptions
adjusted the logic for tracking and loading tasks in AssetManager . java to ensure accurate loading accuracy by accounting for peak tasks
eranmes : on behalf of emmasoderberg : disable native event in firefoxdriver for non - windows platform .
added support for Nutch score and fetch interval in CrawlDatum to enhance scoring capabilities and improve metadata handling based on specific criteria
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 . collections4 ` to ensure compatibility with the newer version of the Apache Commons collections library
added a method to check if ` zkController ` is null and implemented schema sharing functionality in ` CoreContainer ` and ` TestCoreContainer ` to enhance schema management and ensure consistent behavior through unit testing
updated sizeInBytes methods to accept a boolean parameter for better control over the size of the segment to improve accuracy of size representation for better data handling
replaced multiple assertions with null checks in VersioningTest . java to enhance code clarity and prevent potential NullPointerExceptions
updated SQL query to include ' t . typnotnull ' in the query and modified the ' attnotnull ' clause to include ' t . typnotnull ' to ensure accurate handling of domain type attributes in PostgreSQL
[ java ] change the logic of appendnewleadershiptermevent to reflect the result of the appendnewleadershiptermevent .
removed the buildMediaType method from WebClientPlugin . java to streamline the code by eliminating an unused method
replaced custom fill method names from ` fillUsingLengthPrefix ` to ` fillSlice ` across multiple classes to improve clarity and consistency in naming for better code readability
refactor AcidUtils to use a boolean variable for handling compacted base files and add a test for cleanup after IOW and major compaction to improve code readability and ensure proper cleanup behavior between compaction and base tables
update qualifierEncodingScheme initialization to use a default value instead of null to ensure proper handling of null values and prevent potential null pointer exceptions
added new classes PojoProducersCustomized and RestProducersCutomized , along with the demo package to implement a consolidated approach for handling multiple producers in the application
update parameter names in ArtifactCacheBuckConfig to use a constant from the cache section name to improve code maintainability and reduce duplication in configuration retrieval
avoid duplicate serialization registration for the ssiv key .
add miss ` ` slabwood ' ' to ore dictionary ( # 3514 )
refactor session - related classes for improved organization and consistency to enhance maintainability and clarity of the session management system
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` usage in ` GnuLinker . java ` to simplify the class design by eliminating unnecessary dependencies
prepare next release 3.2 : update doc tree and overview
hhh - 11843 fix oracle test failure
updated the positioning parameters of the spriteBatch . draw method in HelloWorld . java to correct the positioning of the sprite batch based on its dimensions
modified PlayerFunctions to return a constant value instead of a static variable and updated the toString method for better readability to improve code clarity and ensure consistent formatting of the representation of the plot ' s position
add a deprecated static final Version constant for LUCENE _ 8 _ 5 _ 0 to indicate that this version should no longer be used
modified print statement formatting in SSLSocketImpl . java to improve code readability and maintain consistency in output formatting
add a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL parsing works correctly for signed integer values
refactor dependency type handling from a string to a SemanticGraphCoreAnnotations enum to improve flexibility and clarity in managing dependency types within the code
removed redundant methods and added specific target description generation in NoSuchBuildTargetException to streamline code and enhance clarity for target resolution issues
update test method name from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to improve clarity and consistency in test method naming
reduce the number of block in configuration to match huge configuration .
removed version checks and updated warning messages in ` BukkitMain . java ` to streamline version management and improve clarity on unsupported features
updated SQL statement escaping logic for Postgres to ensure proper handling of escaped SQL statements for Postgres databases
added methods for creating mutable bags with specified collections in MutableBagFactory and its implementation to enhance functionality and ensure correctness of mutable bag creation
updated file handling logic to ensure proper verification of file names ending with " . adoc " to prevent runtime errors related to incorrect file names
[ nhc ] fix npe in nhcmqttconnection2 ( # 1568 )
refactor ChangeSet initialization to check for a root change log before retrieving the change set to improve robustness by handling cases where the change log may be null
updated method calls in StaticMethodInterceptor and refactored response body handling in RocketMQGlobalPluginHandler to streamline method execution and improve response body consistency
added database drop functionality to TestHiveMetaStorePartitionSpecs and improved logging in TestObjectStore to ensure proper database management and enhance debug output for better troubleshooting
added order _ currency parameter to BithumbAuthenticated and BithumbAccountServiceRaw classes to enhance API request functionality by allowing currency specification
deleted the SSEFluxWebConfig . java file to remove unused configuration to streamline the codebase
updated return type checks from " void " to " void " across multiple classes to ensure consistency in JSON handling and improve code clarity
[ te ] add listyamls endpoint ( # 4324 )
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enforce encapsulation and improve method accessibility
refactored thread factory to use lambda expressions and added a new method ` awaitTermination ` to improve code readability and encapsulate termination logic for better maintenance
added tests for adding lists to MongoTemplate and created a new class PersonWithAList to ensure proper functionality of list operations in MongoDB
quick fix for ggb - 2118 ( grid view fix )
updated toolbar visibility handling to include a delayed runnable to improve user experience by allowing a brief pause before visibility updates
[ iotdb - 2905 ] fix overlap check when first page be miss ( # 7385 )
do n ' t save user vm password if vm be not run in a stopped state
added new boolean fields usingOutputStream and usingWriter , usingOutputStream , and character encoding set to false to disable output stream encoding and character encoding for improved performance
added a conditional check to prevent assignment side effects in GroupDialog to improve user experience by avoiding unnecessary processing when assignments are side effects
refactor JSON and JSONObjectConvertor classes for improved readability to enhance maintainability and reduce technical debt
updated conditional check for icon dimensions in FileUploadApiController . java to ensure proper handling of icon dimensions for better layout consistency
refactor methods in RegisteredServiceProperty and JwtTokenCipherSigningPublicKeyEndpoint to improve structure and encoding to enhance code readability and ensure compatibility with Bouncy Castle standards
added file validation logic for user and etc mime types in Basic . java to ensure that the application correctly handles file paths that do not exist and are not readable
enable jzlib compression and deprecate add / start method
added a method to check if a ClassLoader is within a specified ClassLoader to improve the flexibility of ClassLoader handling in the application
refactored connection methods in ChannelProvider and ProxyChannelProvider to eliminate unnecessary complexity to streamline connection handling and improve maintainability by eliminating unnecessary complexity
added a test for handling an empty final column in the CSV output to ensure proper functionality of final columns in the CSV output
added compass margins for bottom and left gravity in NearbyMapFragment to improve layout appearance for better user interface
add a new test method ` testInterpolation ` to ` GeoPathTest . java ` to verify the correctness of distance calculations in GeoPath calculations
added exception handling to the getLeafFilterBuilderByType method and modified related methods to throw HiveException to improve error handling and ensure proper propagation of Parquet FilterPredicate operations
set the language of the current audio track if the stream type is video to ensure compatibility with video format requirements
added a warning log for schema version restrictions in the MicroserviceRegisterTask . java to inform users about compatibility issues related to schema updates
replaced arraycopy and resize calls with addAll method across multiple array classes to improve code readability and efficiency by consolidating array operations
try - w - r to avoid potential resource leak in datasourceproxy
added null checks and constructor parameters to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to enhance robustness by ensuring registrations are not null and improve code clarity
added a method to reset the UI state with a new entry in the database to ensure the UI state is reset correctly and handle potential exceptions gracefully
fix regression in junitreporter when strict exception be ignore .
allow dot in entity selectors ( # 8238 )
implemented Closeable interface in Selector class to ensure proper resource management and allow for closing the Selector instance
replaced the default parallelism and iterations with a MultiplexConnectionPool in MaxConcurrentStreamsTest . java to optimize connection management and improve test reliability
added multiple stringType ( ) methods in CoreOptions . java to enhance string type handling capabilities for improved data processing
update query and parameter handling in HQL and update test context locations to improve query parsing and ensure compatibility with new configuration structure
updated HTTP status checks and method names for consistency to improve code clarity and maintainability by using descriptive constants instead of magic numbers
pdfbox - 4892 : reduce code duplication , a suggest by valerybokov
fix # 161 - hikariproducortest failure with jdk 5 upgrade .
added metadata handling functionality to the ParquetFormatPlugin and ParquetGroupScan classes to improve the efficiency and management of metadata files within the Parquet plugin
changed the success status of ` Jsr199Javac . java ` from ` false ` to ` true ` and updated the handling of Java compilation status to improve success handling and ensure accurate diagnostic diagnostics during compilation
added a base model listener to the DefaultSortedTableModel class to handle table changes to ensure that the table model updates correctly when changes
updated the maximum allowed value in the server configuration from 49152 to 65535 to accommodate longer server resource limits
added compatibility notification for document provider authority in KitKat to ensure compatibility with newer Android versions
removed logging call to startLogging in MainApp . java to streamline logging configuration for better performance and maintainability
modified error handling in FilterChainProxy to properly analyze and handle wrapped RequestRejectedExceptions to ensure that wrapped exceptions are properly propagated to the request rejection handler
updated the length calculation and arraycopy method to use ' this . length ' instead of ' length ' to improve clarity and maintainability of the code
added validation to check if the filterList is empty in the Filter class to ensure that an IllegalArgumentException is thrown when processing an empty filter list
add a new class tbStopWatch that implements the StopWatch interface to provide methods for managing stop events and tasks
liststore : fix bug that could cause the liststore to become uninitialized after the method be call
mark multiple Continuation classes as deprecated to indicate that this class is outdated and should not be used in future development
[ zeppelin - 2149 ] fix remoteinterpreterserver shutdown on window
fix check for commandsourcestack . source cause classcastexception in forge ' s source .
updated minSdk configuration from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with O _ MR1 features and improve testing accuracy
updated method parameters and variable names for clarity in DeadlineTimerWheel . java to enhance code readability and maintainability by using more descriptive names
# 16 - enh : add getclassname ( ) to beandescriptor and use it for cqueryplan .
updated rendering paths in BasePage . java from " wro / all . js " to " static / all . css " and added WroSassProvider . java to streamline resource processing and implement a new processor provider for Sass processing
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT . java ` to validate functionality of retrieving latest timeseries in a cluster
rename ` appContextLocation ` to ` contextConfigLocation ` in multiple files to standardize parameter naming for better clarity and consistency
6894461 : ocsp checker should not wrap all exception a ` ` unable to send ocsp request . ` ` ( introduce by # 6895667 )
benchmarker : make writeoutputsolutionenabled configurable
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
add test case for issue # 815 : slice size and page size be reopen a per http : / / github . com / mapdb / mapdb / issues / 815
added a shapeless recipe to the build craft server to enhance the game ' s responsiveness and craft performance
enhanced vector iteration logic in SequentialAccessSparseVector . java and added tests in AbstractVectorTest . java to improve performance and ensure proper handling of edge cases in vector operations
added entity metadata handling and imports in BukkitMain and EntitySpawnListener classes to enhance entity management and metadata management within the plot system
added a debug logger method to the DIHWriter and SolrWriter classes to provide access to the debug logger for better debugging and logging
added methods to retrieve maximum directory and file name length , and modified import statements for better readability to improve code clarity and maintainability by centralizing maximum directory and file name length handling
added a check for the existence of a tag in the UpToTagChangeSetFilter before using it to ensure that a warning is displayed when a tag is not found , improving user feedback
[ beam - 8470 ] use arraylist instead of list to improve performance
refactor BrokerRoutingManager to improve routing logic to enhance performance and maintainability of the routing system
updated volume and upPaint values from gray to GRAY and GREEN to improve visual aesthetics and consistency in the renderer
be insettableframelayout : add inset layout params for all inset .
added a new duration property and corresponding JSON property to BuildTargetDurationListener to enable tracking of rule duration for better resource tracking
added static imports for HSQLDB and PostgreSQL profile checks and replaced @ Profile with static import in multiple test classes to facilitate testing of database profile configurations and improve test reliability
added a null check for the user before processing claims to avoid potential NullPointerExceptions when user is null
added test case to show how to replace a from endpoint .
use nonblockinghashset instead of concurrentskiplistset for good performance
api : listpublicipaddresses - add api response to list public ip address by source network id
added tests for ignoring battery optimization in ShadowPowerManager to ensure correct behavior of battery management based on SDK version
updated the version retrieval method to use a dynamic property retrieval to ensure compatibility with the latest build configuration
added tests for number of invocations in order verification modes to ensure correct handling of invocations in different verification modes
tregex : fix npe in tregexexecnode ( # 2214 )
foreground profile now start with - foreground a default background
updated the executor service and variable names for improved clarity and consistency to enhance code readability and maintainability by using more descriptive names
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related method calls to improve performance and simplify the retrieval of key - value pairs
updated log message format to use ` getFile ( ) . getName ( ) ` and improved parent view management in ` EditorTextActionWindow ` to enhance clarity of log output and ensure proper view hierarchy management during unsubscribing
8176645 : jdeps task should print skipped entry in same path on failure
added LinkStorage to support Lucene storage management in Fetcher and FetcherMain classes to improve document handling and tracking of lucene URLs during fetching and processing
updated the method signatures of ` populateBubble ` to include an ` existingBubble ` parameter and modified the method signature accordingly to improve bubble management by ensuring the correct bubble is used when it ' s null
nifi - 259 : fixing minor issue in schedule policy that be cause a npe when schedule a route use a scheduled job
[ type : fix ] fix bug of build rpc ext method
[ java ] : change default of nak _ multicast _ delay _ generator to nak _ multicast _ delay _ generator when send out a message .
added Gson serialization and deserialization properties to ClientInformationResponseView to enhance data handling and ensure proper client secret information is included in the response
added a conditional check for zero before setting the average price of an order to ensure that the order values are only set when the value is not zero
removed the private method ` rawExecutionReports ` and directly subscribe to ` executionReports ` to streamline the code for better readability and maintainability
modified LdapTimeoutTest to properly handle exceptions and updated timeout threshold logic to improve error handling and ensure accurate timeout validation during tests
fix a crash when try to load the lexicon of a user for a non - existent locale .
added logic to check if the password file or credential store alias is empty before updating the password to ensure the application correctly updates the password file or credential store for improved security
added parsing logic by checking if a segment is already parsed to improve efficiency by avoiding unnecessary parsing when the segment is already parsed
[ flink - 22802 ] [ yarn ] add yarn . application - attempt - failures - validity - interval config option to control application attempt failures
log a warning if h2 driver be not included
hbase - 25836 make default snapshot - based inputformat readtype a default ( # 2879 )
added fixed height and width options to InstanceLoginInfo and updated related methods to accommodate dynamic adjustments based on login options
added a cornerRadius parameter to the update method across multiple classes to allow for dynamic corner radius adjustment during updates
updated COMMANDS _ TO _ REMOVE to include additional SQL commands and added new filters for warning handling to enhance SQL formatting options and improve warning visibility for cross - product queries
added retry logic for connection pool attempts in TxnHandler . java to enhance reliability by allowing retries on connection issues
add miss method to queuecontainer to ensurebackupreserve be poll
added a new field ' strings ' in the FirstOfStringsMatcher class to store the string data associated with the matcher
updated SQL statements in CostBasedDecisionIT and DeleteCompiler to use " DELETE CLIENT SELECT " instead of " DELETE ROWS " and added a new ExplainPlanTextTest class to enhance clarity and testing capabilities for SQL DELETE operations and ensure proper functionality through testing
updated exception handling logic to include retryability for SocketException to improve error handling and ensure proper management of insufficient data writes
added a new parameter ` rapidInstallTypes ` to various classes and updated related methods accordingly to allow for flexible handling of APK install types in the device management system
fix sort test to work on osx .
refactor MultimapSubject to use Factory for creating IterableSubject and update related methods to improve type safety and clarity in handling multimap values and subject types
update return statement to adjust the device ' s height based on the real display size to ensure proper display positioning for devices with non - Natural orientation
handle when some mediaitems require transcoding but others do n ' t
added localization functionality to the Picker class to enhance user interface localization for better usability
camel - 2343 fixed the unit test error of cxfrsbinding
hhh - 8515 - postgresql81Dialect should throw proper exception type for lock acquisition
added null checks and updated query ID handling in TestJdbcDriver2 . java and HiveStatement . java to improve error handling and ensure proper query ID retrieval logic
[ beam - 9305 ] disable test pardotest until unboundedpcollections be available
updated HTML content in GpsSimpleViewFragment . java to remove unnecessary folder reference to improve readability and streamline HTML output for better user experience
[ java ] remove unused leadershiptermid from all service interface .
refactor HttpSender to initialize HttpExchange directly to improve code clarity and reduce direct access to the HttpExchange instance
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
rename token ( ) to apitoken ( ) for consistency
added null check for the tree before processing markers in Recipe and SearchResult classes to enhance stability by preventing potential NullPointerExceptions during marker processing
[ netbeans - 1458 ] xwpf : fix font size calculation to return double instead of float .
[ te ] remove maybe wrapping ( it work for cve - 2014 )
updated RawMavenResolver to handle exclusions directly from the task to improve dependency management by consolidating exclusion handling logic
added handling for DSX exchange information and updated related data source classes to improve functionality and ensure proper initialization of the DSX exchange information
[ beam - 3305 ] add apache license for test code
[ drools - 90 ] correctly set default releaseid when create incremental compilation
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` to ensure proper handling of the object when ` sobj ` does not contain the key ` k `
camel - 8195 : add javadoc to model class so we have eip documentation out of the box
hostfielddesc : use unreflectlect getter / setter instead of public lookup for host field .
added a method to set a " completedStage " parameter in the database to specify the type of the completed stage for better nullness handling
updated freeze checkpoint calculation in PlaybackController . java to adjust timing logic for improved responsiveness
added import statements and updated internal state setting in AbstractCommonPowerMockRunner and PowerMockRunner classes to enhance code clarity and ensure proper handling of annotation during tests
update the method call to use realType ( ) instead of typeCode to ensure proper type handling during the unmarshaling process
updated TabsAndIndentsVisitor to handle specific element types more effectively to improve code clarity and maintainability by consolidating indentation logic
updated TestSingleTokenTokenFilter to extend TestCase instead of LuceneTestCase to align with JUnit ' s testing framework for improved compatibility
added a wrapped text table element to the HtmlProcessInformationsReport class to improve the output format for better text display
refactor JdbcStepExecutionDao and MapStepExecutionDao to streamline execution context management and add a null check in SimpleJobRepository to improve code maintainability and ensure proper handling of null values
added a conditional check to only add the child element if the media folder should be hidden to improve user experience by limiting the visibility of media folders based on configuration
updated the handling of null actors in SplitPane to improve error handling to ensure proper widget management and prevent null pointer exceptions
add handling for JavaType . Parameterized in RemoveUnusedImports . java to ensure types are fully qualify when processing JavaType parameters
updated logging statement to use the current version of the first mod info to improve clarity and avoid potential null pointer exceptions
changed the logger initialization from instance to static final logger in TicketGrantingTicketImpl . java to improve logging practices and ensure consistent logger usage
updated SQL string to include a new version of 81 + 12 to ensure compatibility with updated timeseries format
added a method ` isValue ` in ` AttrData ` and updated ` Converter ` and tests for enum scrollbar behavior to improve value retrieval logic and ensure proper handling of enum scrollbar interactions
modified the condition for handling character inputs in a specific locale within CPlatformResponder . java and LWCToolkit . java to enhance support for US International PC keyboard layout inputs
[ java ] set aeron _ PUBLICATION _ CONNECTION _ TIMEOUT environment variable in ctestmediadriver .
added a check for specific request URIs in GTVGFilter to exclude specific request types from processing
added assertions to verify the installation process for the wellbeing test APK to ensure that the device is rooted when the installation fails
no effective change - refactor oracle platform test
updated server protocol assertions from 1 to 3 in multiple files to ensure correct handling of HTTP request headers and improve test accuracy
updated Java file paths in DiffRuleKeysScriptIntegrationTest . java to use correct file references to ensure compatibility with recent changes in the data processing framework
added a boolean flag to control dismiss handling of haptic running in TaskViewTouchController to improve user experience by preventing unintended interactions when dismissed
add projectile source to log spam with mixineventworldexplosion
fix ( symbolinputview ) : remove unused method
updated Bitfinex API endpoint paths to use ` @ QueryParam ( ) ` instead of ` @ PathParam ( ) ` for limit bids and asks to modify the API parameters for better flexibility and performance
camel - 7461 fixed the unit test error of staxconverter
[ hotfix ] tostring ( ) of kubernetesleaderelectiondriver should contain the leaderlatchpath
updated SqlSessionFactoryBean to enhance session management functionality to improve performance and maintainability of database interactions
[ 3.0 triple ] fix tri the invocation of triple method ( # 9013 )
replaced error handling in PolygonRegionLoader to throw a RuntimeException to improve error handling by propagating errors more effectively
added a method to check if the Deadline is active and registered it in the RawStoreProxy class to ensure proper management of deadline and enhance error handling during metastore operations
added handling for ClosedChannelException in NettyRequestExecutor to improve error messaging for closed channels to provide clearer context on request interruptions
updated the handling of genres in ItemListActivity to check for null before setting the text to avoid potential null pointer exceptions when the genres list is not available
[ flink - 22854 ] [ checkpoint ] fix the order of checkpoint reset call only once in the region recovery .
fix ( prefab ) : correctly handle and store mapped container
[ iotdb - 3376 ] fix npe in walnode ( # 6047 )
fix a bug where fail to complete the endpoint when the callback fail .
move main package - info . java to it own module to make them package - info . java easy to understand
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL server behavior to ensure correct handling of special characters in SQL queries in Hibernate
added null safety checks for the routes parameter in the constructor of CamelModule to ensure robustness by preventing potential NullPointerExceptions
replaced synchronization with a utility method for waiting at the end to improve code readability and reduce potential contention
updated package imports from ` com . kenai . jaffl . ParameterFlags ` to ` com . kenai . jaffl . provider . ParameterFlags ` to ensure compatibility with the new provider package structure
add type check for image object in cropperutils to avoid classcastexception
removed appName parameter from the configure method and related calls in InputRC . java and InputRCTest . java to simplify method signature and eliminate unnecessary app name handling
[ gr - 37684 ] ensure that all component with ignored dependency throw an exception .
[ java ] remove use of headless mode for test and fix java doc such a ' -- headless ' .
replace direct assignment of value with intern method to improve memory efficiency by reusing the value object
added a new condition to check for " MOVE " status codes in the connection to ensure proper handling of movements in the database connections
updated US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME entries in FixedDateFormat . java to ensure consistency in date format handling
updated import statements to use the correct Google Commons Lists class to resolve dependency issues by removing unnecessary package references
[ hotfix ] fix the illegalstateexception message in hsbuffercontext # startspill
updated permissions checks for visit functionality in the plot management system to ensure that visit permissions are correctly granted for the admin user only
disables jabber telephony until it ' s actually ready
updated URL normalization logic to include curly braces to enhance URL normalization accuracy for proper handling of curly characters
changed access modifiers of methods related to remote animations and transitions in QuickstepTransitionManager to enhance encapsulation and restrict access to implementation details
apply patch from mark lillywhite per dev list discussion .
added a method to retrieve project paths and modified the generateProjects method to return an ImmutableSet of generated project paths to improve project path management and provide better visibility into the generated project paths
removed unnecessary conditional check for native digit when setting zero digit in HostLocaleProviderAdapterImpl . java to streamline code logic for better readability and maintainability
added a new class ` MSwingUtilities ` to handle image scaling with customizable image dimensions to enhance the user experience by improving image handling flexibility in the application
camel - 3949 : default a callback to send to the mail producer . the mailproducer now extend defaultasyncproducer and let it extend defaultasyncproducer .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure proper refresh scope management during authentication processes
added unit test base on user forum issue
added Main and ScriptRenderer classes for rendering scripts to facilitate the integration of scripting in the integration framework
updated the condition to check if the input state is none and added a new test for query handling after reading parameters to ensure proper handling of form submissions and validate behavior after reading requests
added null checks for glyph dimensions and introduced isDescendant method in Group , FlickScrollPane , and SelectBox classes to improve robustness and prevent potential null pointer exceptions
updated error handling in DeploymentManager to run close hooks instead of reporting failures to ensure proper reporting of failure scenarios during context shutdown
replaced the ` stack . copy ( ) ` method with a more concise ` stackToString ( ) ` method with a boolean parameter ` forceIgnore ` to enhance readability and maintainability by simplifying the stack conversion logic
fix test which randomly fail on slow ci server
replaced imports of StringUtils with wildcard imports and modified conditional check for display to simplify imports and enhance code readability by reducing unnecessary imports
remove classpath and replace with getresource ( ) .
added a new utility class ` FieldUtils ` to handle reflection - based field access and retrieval to improve code modularity and maintainability by encapsulating field access within a dedicated utility class
removed unnecessary assertion for speculative type in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify the validation logic and introduce functionality for handling double locking
updated layout inflation from workspace _ custom _ content to workspace _ screen and added padding for custom content to enhance layout appearance and improve visual spacing for widget content
added a new method ` updateSettingsWithSaveLastAccount ` to ` XabberAccountManager ` to process and log errors during account settings updates
added a new method ` setvar ` to set variable values from ` LineReader ` to improve usability and provide users with help information
fire catevent ' s onanimaltame event only if the player have player . close # 701
fix subtle bug in window frame , make unsigned range check thread - safe
pdfbox - 3017 : include normal appearance and font name in signature test
[ netbeans - 5070 ] fix pagedlistcontroller not update the application mode
added support for Dockerfile build arguments in ImageFromDockerfile and created a new DockerfileBuildTest class to enhance image building functionality and ensure correctness through testing
added a null check before adding thread information to avoid potential NullPointerExceptions when the threadInfos array is already initialized
fix check for 0.0 , use float _ EPSILON instead of float _ nan
[ flink - 23454 ] [ checkpointing ] add more debug log for singleinputchannel and singlecheckpointbarrierhandler
added new table types to the Schema . java file to enhance compatibility with additional database schema
added parameters for minimum similarity in FuzzyQuery and FuzzyTermEnum classes to enable specification of a minimum similarity value during query construction
rename method ` addActionsView ` to ` setActionsView ` to improve clarity and consistency in method naming
log a warning if the outputstreamappender be not set within the enclosing appender .
ensure spring boot autoconfiguration be compatible with kafkas autoconfiguration
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to ensure proper handling of null components to prevent runtime errors
updated import statements to use the non - shaded version of Google common libraries to resolve dependency issues caused by shaded imports
[ fix ] issue where return block be always on the top of the graph .
added methods for checking and setting the legacy renderer properties in the Label class to improve flexibility in rendering icons and allow configuration of the legacy renderer
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` for generating byte arrays to unify byte conversion functionality and improve code consistency
added null check for mObserver in NavigationModeFeatureFlag to avoid potential NullPointerException when mObserver is null
removed the generic type parameter ` < U extends Comparable < ? super U > ` from the ` thenComparing ` method and introduced a new ` Department ` class with HR and ` TypeTest ` to simplify method signatures and improve unit testing for specific assertions
refactor DocIdSet class for improved structure to enhance maintainability and readability of the code
updated the end time uptime parameter to use bucketMillis instead of null to ensure accurate time tracking based on bucket milliseconds
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure the test fails gracefully and handle potential parsing errors gracefully
added a class loader setting in the MockFactory for better naming policies and class loading to ensure proper loading of mock classes during testing
add a new OriginalFormat class to the ConverterWithEnumFormat class to enhance object conversion handling for enum formats
replaced hardcoded ` yyyy / MM / ` with a constant ` PATTERN _ YYYY _ MM ` for date formatting to improve maintainability and reduce the risk of errors related to date formatting
updated JAWTRenderer class implementation to improve rendering performance and maintainability
camel - 15836 - camel - aws2 - lambda : enable autowire on the lambda client , regen catalog
add a validation method to retrieve the next available mac address in the network to ensure that a valid MAC address is used within the network
modified stringHeaderName comparison to include " Authorization " to ensure proper handling of authorization requests
change method from submit to execute in TraceableExecutorService class to improve task execution handling in context - aware scenarios
added getDetails ( ) method to Authentication and its classes to provide context - specific details for authentication requests
updated the random boolean value generation in SolrTestCaseJ4 . java to ensure random number generation for points in tests
slight change to sentence builder to avoid use ` ` dot ' ' instead of ` ` dot ' '
set the locale for the timeformat . formatforconsole ( ) method to us .
groovy parser - ignore consecutive name argument in method call
added bounds checking for top and right insets in the Border class to ensure proper layout adjustment when necessary elements are displayed
refactor TouchInteractionService to use a default state for GestureState creation to improve code clarity and ensure consistent state management when unchecked
replaced ` DateTime ` with ` Instant ` and ` DateTimeFormatter ` for version conversion to improve compatibility with modern date handling practices
update openblas module to late version
fix torrentstorage closing , close piece storage in case of ioexception
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction management
solr - 4809 : raise so timeout to 4 second for this test
add a new class ` SearchResults ` to handle search results as objects to facilitate easier retrieval and retrieval of multiple search results in a structured manner
bugfix # 24408 , refresh rate be not update properly when restart thread CPU
bugfix : when a frame have no primitive , initialize the body when it be miss .
added new version strings " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwardsCompatibility . java and marked these versions as deprecated in Version . java to ensure compatibility with the latest software versions and signal that these versions should no longer be used
updated feature flags and improved app icon logic in the application to enhance clarity and user experience by using a more intuitive feature flag
add a new endpoint to retrieve instance pools from the Helix instance configuration to enhance network monitoring and improve error handling during instance creation
lucene - 7000 : fix topfieldcollector early termination bug
added a ` isToString ( ) ` method to the ` InlineBytecodeGenerator ` class and created unit tests for mocking interfaces to enhance mock functionality and ensure correct behavior for different interface types
added logging statements to CxxCompileStep and CxxPreprocessStep for better debugging information to improve visibility into compilation and preprocessing processes during execution
add utility method to remove character from a string ( # 2221 )
[ 3.0 ] support metadata service protocol = tri ( # 9809 )
drools - 4307 add transform api method to kie - process ( # 4307 )
changed the type of ` objval ` from ` Object [ ] ` to ` Number [ ] ` in ` DistributionGraph . java ` to ensure proper data type handling and improve type safety
removed unnecessary ' interesting ' check before invoking ' super . visit ( ) ' in FormatStringChecker . java to streamline code for better readability and maintainability
updated the initialization of SolrCore to ensure consistent usage of the SolrCore instance
refactor ITestDbTxnManager class for improved clarity to enhance code maintainability and readability
refactor database connection handling to use try - with - resources syntax to ensure proper resource management and prevent potential memory leaks
added map model testing functionality to CodeFirstPojoClient and associated classes to enhance testing capabilities for MapModel in the code
pdfbox - 4892 : avoid npe , a suggest by valerybokov ; remove redundant null check
[ fix # 1070 ] select all scale offset in scale dialog only after user click ' select '
fix nullpointerexception due to forge ' s nullpointerexception
pdfbox - 2184 : do n ' t throw exception if no rectangle be present , continue instead of throw an exception
replaced SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to maintain insertion order for keys while maintaining insertion order
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG value and modified the TIME _ BETWEEN _ TOUCH _ AND _ DRAG value in CancelEventTimer . java , added an overridden method in PageListController . java , and modified the visibility of PagePreviewCard . java to improve time range handling and enhance code clarity for better maintainability
updated the preload values from " libdc1394 - 22 " to " libdc1394 - 25 " to reflect the latest version of the library
added conditional logic to set allConstructorsToPublic based on agent support to ensure that all constructors can be mocked with a private constructor
pdfbox - 4892 : optimize and avoid unnecessary object creation , a suggest by valerybokov
use xtoolkit . getdefaulttoolkit to set window title , and use that for linux
updated depth calculation based on pixel size for better transparency handling to ensure correct depth value is assigned when using a 32 - bit color model
added error response body handling in OkHttpDataSource to improve robustness by throwing an exception for unsuccessful responses
added a new exit method ` exit ` to the ` TopLogging ` class and modified the exit handling in ` TopThreadGroup ` to streamline exit handling and simplify error handling during application termination
updated the calculation of the start index for regex matching to correctly handle cases where the regex is not global
planner - 468 : add todo for optaplanner 6.3 . 1 to unignore test
[ hotfix ] fix the indexoutofboundsexception in defaultallocator
added a method to clean entries without feeds in the DatabaseCleaner and FeedEntryDAO to streamline the management of feed entries and their deletion process
add return to AtomicCounter . java to allow method chaining for improved functionality
add a new class NoOpIdleStrategy and remove unused imports from LowLatencyMediaDriver to streamline the idle strategy implementation and enhance code clarity
added handling for not - modified status codes in CacheControlHeadersWriter and its tests to ensure that headers are written only when the response is not modified , improving cache control functionality
truffle / instrumentation : rename some instrumentation listener to toolevalnodefactory so that the tool evaluation work .
refactored the paintTabArea method to eliminate unused insets to streamline the code and improve maintainability by eliminating unnecessary complexity
updated the ` getKrakenDepth ` method to accept ` Object ` instead of ` count ` as a parameter to enhance flexibility by allowing depth arguments to be passed directly
camel - 4176 : added fileutil . getfileseparator method to fileendpoint class . thanks to benjamin graf for the patch .
added JSON identity information to the JavaProvenance class and refactored the MavenProjectParser to utilize it to enhance JSON serialization and retrieval capabilities for Java classes
added logging functionality for registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry to improve visibility into Hive functions and non - deterministic data handling
increased loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage and performance evaluation
skip delivery of hint for deleted column family . patch by jbellis ; review by brandonwilliams for cassandra - 1577
added a check for writable output files to handle root permissions to avoid errors during test execution when root access is attempted
added package info checks and logging for package name resolution in LauncherModel . java to improve robustness by handling cases where the application info fails for a specific package name
cloudstack - 2120 : fix ntwk _ offering _ service _ map table to be clean up on exception
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and FaultTolerantChunkOrientedTaskletTests to improve error management and ensure proper handling of skipped items
replaced ` startsWith ( ) ` method with ` regionMatches ( ) ` for case insensitivity matching to enhance string matching accuracy by allowing case - insensitive matching
added imports and modified return statements to include a list of GLOBAL _ DATA _ TABLES and improved data table handling to enhance data processing capabilities and ensure proper handling of data tables
added overview functionality to the TaplTestsTaskbar to ensure proper handling of tasks during testing
engine : use dbupgrade * template to prevent db upgrade from fail to complete
removed unnecessary null checks for ` conn ` and made it final in ` LdapClient . java ` to simplify the connection handling logic and improve code readability
refactor action condition checking in SequenceAction . java to improve code readability and maintainability by reducing repetition
avoid race - prone second ` ` set _ keyspace ' ' call . patch by jbellis
added a check for synthetic fields in ReflectUtils to skip processing for synthetic fields to ensure that only non - synthetic fields are processed further
added logging capabilities to the Ninja framework using SLF4J for better application management to improve logging capabilities and maintain consistency across the application
updated ImmutableMap and ImmutableMap to use Object instead of String for port handling to improve type safety and avoid potential null pointer exceptions
added a warning mechanism for Having more than one glue class in SpringFactory . java and updated test class handling in SpringFactoryTest . java to improve user awareness of potential issues with multiple glue classes and enhance test coverage
added a deepStart method to the Startables class for processing startables to enhance the functionality of deep start functionality for better performance
remove shape . reserveprimit extensionarray , deprecate since 20.2 .
added ilasertargetblock interface to blocklaser , to allow check if the terrain target can be use for laser .
refactor object name validation logic in AbstractJdbcDatabase to improve readability and maintainability of the code
removed unused imports related to CachingTokenFilter , TokenStream , and MemoryIndex from TestSolr4Spatial2 . java to clean up the code and reduce dependencies
updated the expiration period setting in MemoryLimitTest . java to reset the expiration period to prevent potential issues with 2 * pageSize mem which will throw the test
simplified condition checks for handler handling by removing unnecessary null checks to improve code readability and ensure handler is only added if the norm is not empty
replace ' - ' with ' . ' in logger name handling to ensure consistent formatting of servlet names
added import statements and modified environment variable handling for Python modules to improve code readability and ensure correct environment variable retrieval
updated audio data handling and validation logic in DirectAudioDevice . java and Toolkit . java to ensure correct frame size and improve error handling for audio data processing
fix npe in case the enum be null
updated error message format to include the mutation start index to improve clarity of error messages for better debugging
added initialization of the policy using container scope ' s policy to ensure the application uses the correct policy for WebSocket connections
simplified the condition for determining static fields in the Java2TypeScriptTranslator to streamline the code for better readability and maintainability
added a webroot argument to the context creation process in UserService . java to allow the usage of the webroot for the UI context
test : migrate sample code to junit 5 ( # 4519 )
bugfix # 210255 , use jsr305 instead of reflection to check for attachability
renamed the method ` createHeader ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in method naming conventions
consolidated multiple import statements for trade - related classes into a wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for future stop order functionality
added buffer . reset ( ) calls in ReduceRecordProcessor . java to ensure buffer state is cleared before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground is null
updated comparison in FloatingDecimal . java to use a strict less than operator to correct the range check for decimal exponent values
updated property type validation in mmm PropertyDescriptor . java and added a new test class Test7189112 . java to ensure correct handling of property values and validate functionality with introspection checks
removed maxVersion parameter from getVersions method call to simplify version retrieval process by directly using the latest updates
updated the origin header handling in NettyRequestFactory to support secured URIs to ensure proper origin retrieval based on URI secured status
updated modal animations in RecentsView and TaskView for better visual feedback to enhance user experience by providing visual feedback during modal animations
updated checkState calls to include the field parameter in ORCRecordReader . java to enhance debugging information by providing more context on the field used
add demo apple sample for bipbop ( # 4x3 )
removed unused HIBERNATE52 entity and metadata types from the PersistenceProvider class to streamline the codebase by eliminating unnecessary dependencies
updated log initialization to use " org . apache . hadoop . ipc . ExecRPCInvoker " and " org . apache . hadoop . ipc . RPCEngine " to ensure correct logging context for different Hadoop implementations
added diagnostic logging and a diagnostic listener to TestSpecificCompiler for handling specific diagnostic types to improve debugging capabilities by capturing warnings during code compilation
modified session creation logic to return early if it is not logged in and added a test for session closed when the user is logged in to improve responsiveness and ensure proper handling of session states during WebSocket operations
fix : delay in second after batch processing have to be reduce
( chore ) camel - opensymphony : use camel - core for camel route mapping
modified the stream management logic in WebCamInputPanel to ensure proper handling of video playback when the stream is no longer active
replaced List with ArrayList for chartData and added a new BittrexChartDataPeriodType enum to improve data handling efficiency and provide a clearer interface for handling period types
[ geos - 9762 ] update ecore - gml dependency to 1.7 . 0
replaced ` substream ` with ` skip ` in the method signature to improve accuracy in processing responses
hhh - 10956 - fix nullpointerexception on composite identifier
rename FindFullTextAction to DownloadFullTextAction and update related imports and method names to improve clarity and consistency in the action class functionality
refactor URI registration handling to improve clarity and structure to enhance the readability and maintainability of the code
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for the OSDB hash before retrieving the info from it to avoid potential errors when the OSDB hash is blank
added token transfer functionality to the RuntimeImpl class and implemented token transfer logic in the runtime to enable users to transfer tokens through a specified balance and asset for improved contract processing
camel - 15836 : camel - ftp should use current directory for file deletion when use stepwise file system .
fix default value for search bind password ( dn - > password ) ( # 2939 )
hive - 17924 : hybrid hash table join should check for empty result set ( sergey shelukhin , review by prasanth jayachandran )
updated HTTPSPDYAsyncEndPoint to accept a configurable remote endpoint and modified related methods to enhance flexibility in handling local and remote addresses within the HTTPSPDY asynchronous context
added intent extra " id " to multiple adapter classes to ensure the intent include the correct tweet ID for use
refactor connection handling by replacing ` disconnectInternal ( ) ` with ` disconnectWeb ( ) ` and adding a method to handle proxy disconnection to improve proxy management and ensure proper request handling during disconnection
replaced integer constants with AtomicInteger for thread - safe incrementing to ensure accurate tracking of child counts during tracing
refactor multiple classes to remove unnecessary imports and improve code readability to enhance maintainability and ensure consistency across the codebase
enabled the test annotation to prevent the test from running due to known issue
[ drools - 731 ] remove unsupportedoperationexception from resourcefactoryserviceimpl
updated predicate classes to use the " NOT _ IN " predicate instead of " IN " in addition to " IN " to ensure accurate classification ofNotInPredicate instances
updated exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to utilize OwnCloudAccount for better account management to improve error handling robustness and enhance user interface clarity
added a null check for witnessService before validating its permissions to avoid potential NullPointerExceptions when witnessService is not initialized
updated the construction of the taggedCol string to use the expression string from the underlying expression map to improve accuracy of column identification in the join process
added a conditional check before setting the getJavaDoc ( ) in AbstractJavaClassTranslator . java to ensure that the item ' s javadoc is only set if it is not already present
replaced ` holderMethod ` and ` holderKlass ` with ` holderMetadata ` and introduced a new class ` RedefineInterfaceCall ` with interface methods to improve clarity and functionality by distinguishing between method and interface implementations
fix potential threading issue with tab tab revalidate .
[ flink - 30613 ] [ connector / schema ] introduce unregisteredmetricsgroup to unify backward compatibility
updated calculations for y - coordinate in the Polygon class to ensure correct rendering of shapes based on their original coordinates
modify cache creation in CacheConfigTest . java to include an explicit type parameter to enhance cache configuration flexibility and improve code clarity
added check for empty string constant in InheritanceUnsafeGetResource . java and created a new class Bug2974855 . java to enhance robustness by handling potential empty string cases and provide a test case for the URL resource retrieval
refactor ShadowCookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management functionality
added a new configuration option to disallow dropping external tables and updated related tests to enhance security by restricting access to external tables and ensuring proper permissions are enforced
added braces to the conditional statement in Stage . java and updated the width calculation in ProgressBar . java to improve code readability and correct the positioning of the background rendering
sulong : cache the platform order , use native and big endian rather than native
updated the PING _ TIMEOUT _ PROPERTY _ NAME string value from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to ensure consistency with the correct property naming for WindowsClientProviderStrategy
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the login URL loading logic to enable dynamic URL loading based on the availability of the login flow
updated the error message in CallableStatementHandler to specify the correct parameter type to improve clarity and accuracy of the error message for better debugging
removed the ` required = false ` annotation from the ` @ RequestParam ` annotation and updated test cases to reflect this change to allow for future date handling in the audit event endpoint and ensure it returns a 400 status as expected
renamed ` ExponentialTimer ` and ` PreciseThroughputTimer ` classes to better reflect their purpose to improve clarity and specificity regarding the purpose of the timer classes
added soft body removal and deletion functionality in SoftBodyTest . java to ensure proper resource management and cleanup of soft body resources
[ hotfix ] [ table ] add public interface for source / outputformatprovider and sinkprovider
[ zeppelin - 3747 ] do n ' t print stacktraces to stderr
[ wip ] add test case for remove the redundant namespace from jingle element
fix potential npe and add null check for redplasma
more change to pipeline to support http / 2 . simple greet sample work now .
updated member and denied handling logic in the Remove . java file to improve code clarity and ensure proper handling of trusted and denied memberships
updated the delimiter calculation and formatting in SimpleReport . java to correct the spacing and improve readability of the report output
removed the option to ignore symbol files in the JavapTask and updated related classes accordingly to streamline code and improve consistency in handling symbol file preferences
rename TickerDemo to StreamingTickerDemo and update related imports and references to improve clarity and consistency in naming for better code structure
added null checks for contract and contract addresses in Runtime . java to ensure robust error handling and prevent potential null pointer exceptions
ggb - 2118 : make sure input3d be create only for applet with feature . intel _ inspector
temporarily ignore this test while investigate failure in release build
flv : ignore invalid scriptdata type , rather than fail playback
change method name from ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` to improve clarity and consistency in naming conventions
changed return type of getExecutableCommand method to List < String > across multiple classes to improve flexibility in handling executable commands
replaced direct assignment of ' this ' instances with direct instantiation in IOSGLES20 . java to improve code clarity and ensure proper instantiation of the object
deleted the UploadPathActivity . java file to the activity is no longer needed for the current implementation
modify return values based on indexOptions in SimpleTextFieldsReader to handle specific index options appropriately based on index options
fix : fix bug in modelutils . buildclass for implicit constructor ( # 3558 )
updated ` populateValidatePrimaryKeyIfNeeded ` and ` populateValidateForeignKeyIfNeeded ` methods to include ` Database ` as a parameter to ensure compatibility with Oracle database operations
refactor database operations for improved readability to enhance maintainability and ease of understanding for future developers
update springapplicationbuilder javadoc to reflect api change
removed ` IndexOptions ` from ` DefaultIndexingChain ` and ` PointInSetQuery ` classes to streamline code by directly referencing the iterator in ` PointInSetQuery `
refactor rawName processing in SchematicHandler . java to improve readability and maintainability of the code
fix unmodifiable collection assertion when collection be unmodifiable
changed the enum declaration from static to an instance of the Option enum to allows for instance - specific option handling in the application
updated AlertDialog usage in Compose . java and ComposeActivity . java to enhance user experience by providing a more modern dialog interface
removed the toggleKeepInSync method and directly using the file operations helper to simplify file synchronization logic and improve code maintainability
updated ImageUtil to use Base64 decoding for Base64 encoding to improve data handling and compatibility with Base64 format
added new classes ` ControllerCounter ` and ` DBCallback ` for managing counter and method properties in the ` org . springframework . datastore . document . analytics ` package to provide structured data for managing and managing controller counters and MongoDB operations
added ' final ' modifier to the parameter in the deleteTicket method to indicate that the ticketId parameter should not be modified within the method
added a new file FlywayMigrationRunner . java to implement a database migration process to facilitate the retrieval and processing of Flyway configurations from the database
refactor size checks in HashMap and introduce a new class NotEmptyHashMap to improve code clarity and demonstrate the behavior of empty collections
update the version number from 0.6 . 0 to 0.7 . 0 to reflect the new release and include recent updates or bug fixes
fix npe that occur because of miss orc compression modifier
added null check for mainAttrs and refactored jar creation logic to improve error handling and ensure proper handling of missing main manifest attributes
updated class names for consistency in naming conventions to improve readability and maintain uniformity across the codebase
use graal node count instead of graal node count for graal
refactor CellCopyPolicy class to remove Cloneable interface and simplify its instantiation to enhance flexibility and improve code clarity
added a method to reset the icon load result and modified the Launcher class to utilize this method to improve code organization and ensure consistent handling of icon loading results
[ cap ] use the character sequence to convert the form field value to the character sequence .
updated icon margins in IconRecentsView to adapt to landscape orientation to ensure proper layout behavior for different screen orientations
deleted the AddAdapter . java file which contained functionality for managing wallpaper items to the functionality was deemed unnecessary or redundant within the launcher application
replaced null checks with empty lists and optimized code for better readability to improve code clarity and maintainability by avoiding unnecessary operations
hive - 22803 : fix bucket column name resolution for hive in non - default order ( krisztian kasa , review by jesus camacho rodriguez )
refactor the watcher handling logic into a new method ` looper ` to improve clarity and maintainability of the test logic
added a print statement indicating a type ' any ' in the Java2TypeScriptTranslator class to enhance the output format for better readability and debugging
updated the SDK version from " 4799589 " to " 4913185 " to reflect the latest stable version
removed conditional logic for setting SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor to ensure proxy configuration is always enabled by default
removed the singletonLock boolean field and updated its usage in TypeCachingBytecodeGenerator . java to simplify the lock management logic by eliminating unnecessary checks
change method names from ` responseClassCallback ` and ` forwardClassCallback ` to ` responseClassCallbackWithClass ` and ` forwardClassCallbackWithString ` in ` CallbackActionExamples . java ` to clarify the purpose of the methods for handling different callback types
fix multi - file build : it be not report at all , not only at the first time .
updated MavenExecutionContextView to return the original list of Maven repositories and refactored MavenRepositoryMirror handling to improve code clarity and maintainability by simplifying repository mapping logic
added a name parameter to various constructors and updated the PathSourcePath class to include a name parameter to enhance the functionality by allowing a customizable name for path source paths
updated the OAuth2CallbackAuthorizeEndpointController to use ` matches ` instead of ` equals ` for better matching to enhance the reliability of client redirects in OAuth operations
updated annotation conversion methods to utilize the AnnotationParser class for handling annotations to improve code maintainability and reduce duplication in annotation conversion logic
updated method calls to use ` getBadgedIconForUser ` and ` getBadgedLabelForUser ` for improved functionality to enhance code clarity and ensure consistent use of drawable and label retrieval
updated the default value for line separator in GlobalConfiguration . java to provide clearer guidance on default line separator formatting
more checks on configurationmanagerutils . isimplementinginterface , bestpathaccuracytracker . class and doubledata . should be considerDerivedclass .
add a sanitize input to the model before save them in the json file .
chore : update java and python dependency ( # 657 )
added IOException to the method ` buildFileNamesCanBeDifferentCrossCell ` to handle potential IO exceptions during file name building
refactor CountersReader class for improved performance to enhance efficiency of data reading operations
updated the methods in AllAppsRecyclerView to directly set containerType values for SEARCHRESULT , PREDICTION , and ALLAPPS to improve code clarity and ensure consistent logging of container types
hbase - 22754 remove buffer size and max and max buffer count key from config in hbase - ipc ( # 4365 )
[ native ] add ' users ' and ' not null ' to result of join
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types correctly to improve the accuracy of retrieving parameter types in the presence of synthetic and implicit parameters
update TestFSTs . java file to enhance test coverage and fix existing issues
trac - 5539 fix text positioning of input box , when the label be non - string
hbase - 7707 make flushsize configurable and make it configurable
added functionality to start the loader in the LauncherClings class to ensure that the loader starts sequentially for improved user experience
initialize keys and updates lists with default values instead of null to ensure consistent date handling across the application
added a set of excluded datasource instances in SpringDataSourceBeanPostProcessor to enable users to filter out specific datasource instances from processing
ggb - 2118 undo after column deletion , remove useless null check
[ beam - 8470 ] fix user agent when use custom kinesis client
[ velbus ] add channel mask to channel binding in case channel enter event be cancel
updated cache selection logic to disable unfavorable benchmarks and modified the delayable condition in cache tests to improve cache management stability and prevent unnecessary benchmarks
added a test for illegal database name and improved exception handling in the PartialPath class to ensure proper database operations and enhance robustness against invalid paths
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure new files are reset before garbage collection completes
updated variable names and margin calculations to include horizontal and vertical margins to improve layout handling for different screen orientations
Removed unnecessary whitespace in CharTokenizer . java for better readability to enhance code maintainability and clarity
chore : update gapic - generator - java version to 2.1 . 0 ( # 657 )
cloudstack - 2120 : fix xenserver traffic label for backward compatiblity
updated libgdx version and libgdx nightly version in DependencyBank . java to incorporate the latest features and bug fixes from the newer version
added a new private ` metricNames ` set and a getter method in ` SolrCore ` to provide a standardized collection of metric names for improved functionality
replaced URI handling with Path for workingDirectory and absolutePath to improve type safety and consistency when processing resources
refactor mac detection code to use a boolean variable to improve code readability and maintainability
camel - 14263 : camel - sql - db : improve clarity and consistency in comment .
added functionality to clear and add elements from the slotList using the another instance to improve data consistency and functionality by ensuring the original slot list is updated
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count for accurate testing
added configuration merging functionality in ConfigurationSpringInitializer to enhance configuration management by allowing dynamic property merging
update log setup method to accept a more specific SLF4J logger instance to enhance logging flexibility and support for Liquibase command line logging
replace HashMap with LinkedHashMap in aliasToWork methods across multiple classes to ensure predictable iteration order for better predictability in data processing
added logic to retrieve the superclass of the jdbcHandlerMap if it is null to improve robustness of type handling logic
added debug logging for writing items in multiple item writers to improve traceability and debugging during item writing operations
danielwagnerhall : remove the last semicolon from the value if it ' s the last character in the string
updated Http2Handler to execute on an IO operation instead of handling the close handler to ensure proper handling of asynchronous operations in the HTTP / 2 context
bug 57840 : cache xssftables in xssfevaluationworkbook to improve performance
updated SchemaTextDetailType checks from verbose to BASIC and removed unnecessary conditional checks for primary key and unique index to improve clarity and functionality of schema text formatting
updated MongoNamespaceReplicaSetTests to use MongoClientFactoryBean instead of MongoFactoryBean to ensure compatibility with the new MongoDB client implementation
replace HashSet with LinkedHashSet in SparkWork . java to ensure predictable iteration order for roots and leaves
added a check to ensure the join operation tree is properly cloned before creating new tables to improve stability and prevent potential issues during the join operation clone process
updated DynamicRegistrationClientConfigurationService and JsonFileRegisteredClientService to handle null client IDs more gracefully to ensure proper handling of clients without a registered client instance
fix # 187981 : clearchievementlist ' s field on close ( # 187981 )
set empty string values for userName , productName , and productVersion in MutableDatabaseInfo and MutableJdbcDriverInfo classes to avoid potential null pointer exceptions and improve code clarity
updated permission references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in the QuickSharingPermissionsBottomSheetDialog and SharingMenuHelper classes to clarify the purpose of the shared view permission for better user experience
added support for reading long buffers in ByteBuffersDataInput to enhance performance and prevent data loss during reading operations
updated file timestamps to use sec and nsec instead of milliseconds for timestamps in UnixFileAttributes . java to improve accuracy and precision of file time handling
8013120 : add regression test for no eager reclaim of humongous region
added search bar visibility management to AllAppsContainerView based on user preferences to improve user experience by managing search bar visibility based on user preferences
fix ` env . router ` method call ( # 4365 )
added null checks for ' cur ' and ' next ' in LineChartRenderer to prevent NullPointerExceptions during processing
added a new action for reloading the page in the menu to enhance user experience by allowing users to navigate to the specific page dynamically
changed log level from info to warn for non - existent entries in SQLManager to improve visibility of non - existent entries to the user
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest features and security improvements
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure a valid configuration type is used to prevent runtime errors
replaced the use of FactoryRegistry with ServiceLoader for loading extensions to improve extensibility and reduce dependencies on external libraries
added a finalize method to properly close the table to ensure proper resource management and prevent potential memory leaks
added a method to stop the statement executor in JdbcConnector and added logging in HiveViewImpl to ensure proper termination of the statement executor and improve debuggability of Hive views
disable external dtd feature by default and avoid http : / / apache . org / xml / feature / nonvalidating / load - external - dtd
updated JdbStopThreadidTest to use a more robust output approach to improve reliability and clarity of the test behavior
added a method ` getType ` in ` ShadowContentResolver ` to retrieve the type of a content provider to enhance functionality by allowing type retrieval in content providers without defaulting to null
fix possible memory leak in expressionthreadpoolmanager
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure the application uses the correct HTTP port configuration
updated buttonTable ' s listener method from addCaptureListener to addListener to improve responsiveness and responsiveness of the user interface
[ grid ] set default session queue size to cpu core * 3
[ flink - 23454 ] [ runtime ] log an error when attempt to establish resource manager connection in taskexecutor
handle classpath in lambdarewriter and abstractmemberfunctioninvoker ( # 2598 )
updated the error message in the ProgressBar to include " min . min " and " max " parameters to improve clarity and specificity of the validation logic
modified message handling to include an entity parameter and updated logging messages accordingly to enhance message tracking and improve logging clarity for better debugging
added abstract methods for managing cursor , database , and row operations to enhance functionality for handling database operations in the application
refactor various assertion classes for improved consistency to enhance maintainability and readability of the codebase
# 1247 - enh : add setbeanid ( ) method to ebeanserver and make sure it return the entity bean id
updated the transform method to use getAddToSiteDescriptorXsl ( ) instead of a hardcoded string to improve flexibility and maintainability of the template file generation process
added a new List of RequestMatcher instances to the HttpSecurity class to allow multiple request matchers to be added to the security context
add hashcode and equal method to ContactResource class that facilitate comparison and hashing based on resource name
add getrequest / getresponse to abstractprocessor and processor to reduce circular dependency
updated log messages and improved error handling in FileManager . java to enhance clarity and consistency in logging for persistable operations
added a call to ` mockControl . reset ( ) ` in ` TestJdbcDataSource . java ` and implemented the ` tearDown ( ) ` method in ` TestIndexSearcher . java ` to ensure proper resource management and cleanup during tests
updated import statements and variable references in SyntaxTests . java to improve code clarity and maintain consistency with naming conventions
refactor connection model and related classes for improved readability to enhance maintainability and reduce technical debt
tika - 2276 -- upgrade tika - core to 2.7 . 2 and update tika - core - common to 2.7 . 2
improve fml security check to deal with dubbo . client and dubbo . server . dedicated server .
replaced explicit declarations in AccountUtils , IndexedForest , and CustomPopup classes to streamline code for better readability and maintainability
updated parameter name from " swap " to " rename " in CoreAdminApis . java and CoreApiMapping . java to align method naming with common naming conventions and improve clarity
added a new test method for checking jsx comments and modified parsing logic accordingly to improve test coverage and ensure proper handling of jsx comments in the parser
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording during the test execution for better debugging
added error handling for missing Buck project configurations and improved exit status checks to ensure clearer error reporting when Buck configuration is missing during tests
added import statement for OperatingSystemMXBean and implemented physical memory check in TestStringBufferAndBuilderGrowth . java to enhance resource management and ensure proper handling of test execution
deprecated the usage of ConversionService in MapToLocalDateConverter and replaced it with a new conversionService method to improve code clarity and maintainability by centralizing conversion logic
added a success flag to the HiveMetaStoreClient class to indicate successful execution of the operation
updated string comparison for " * " in ResourceReferenceInfo and Dstu2BundleFactoryTest to ensure proper string comparison for string comparison
added support for " amp . twimg . com / v / " in the TweetActivity and TimeLineCursorAdapter to enhance user experience by supporting additional media formats
deprecate AreaReference class to discourage its use in future development
refactor ElementType and Target classes for improved clarity to enhance code maintainability and readability
added assertions for refKind and updated assertions in MemberName . java to improve code clarity and ensure correct handling of reference kinds
change the default value of __ submitKeyUpdates from false to true and add synchronization to runChange to enable thread safety during submit change operations
fix typo : firstevent be no longer an instance of mouseevent
camel - 8293 : fixed bean expression to check if a bean be a static method . thanks to jeremy gosling for the patch .
benchmark : move dependency scope to test - framework ( # 1067 )
do not swallow closedbyinterruptexception to prevent unchecked cast
o update relate java doc for new method of adddependency , addplugin , addproperty , removeproperty to clarify it purpose .
refactor face assignment logic in ObjLoader . java to streamline group management to improve code readability and maintainability by reducing redundancy
refactor ProcessEngine class for improved efficiency to enhance performance and reduce execution time
[ ci ] fix spell mistake
added Maven packaging support to the bomReference method in PrintMavenAsCycloneDxBom . java and printed it in PrintMavenAsCycloneDxBom . java to enhance functionality for cycling dependencies into a Maven packaging context
updated the back method to retrieve the component name from the evt object to ensure the back event is associated with the correct component context
refactor certificate verification logic to streamline authentication flow to enhance readability and maintainability of the code
updated method signatures to include the ` extends @ Nullable Object ` annotation to improve type safety and clarity in method signatures
updated method calls from ` NutchConf ` to ` getConf ` across multiple classes to ensure consistent configuration management and improve code clarity
bug fix on displayed board ( race condition between sheet )
added a new method ` getSessionId ( ) ` to return the session ID to provide access to the session ID for external use
added null checks before setting time interval in ImportContainerImpl . java and created assertions in ImporterGEXF2Test . java to ensure that time interval values are initialized only if they are not already set
updated command - line arguments for server port logging from " - logLevel INFO - serverPort " to " - serverPort " to simplify command usage for improved logging clarity
updated error logging to include the exception message to improve error reporting for better debugging
refactor RobotsHonoringPolicy handling to use CrawlMetadata instead of RobotsHonoringPolicy to improve clarity and encapsulation by directly referencing the metadata object
test : ignore flaky test itsystemtest . testconcurrentconsumemultiplepartitions ( # 1500 )
camel - 19437 : fix windows path issue in camel - jbang ( # 11165 )
added alternativePath method to ExpectNewDemo for reading input streams to provide a way to retrieve a alternative file path for better data handling
added initialization of getFirstFilter ( ) in LogEntryParseTester . java to ensure the first filter is correctly initialized for processing
[ java ] add protectiondomain to bufferalignmentagent . builder # build method .
added dispose method to prevent memory leaks to ensure proper resource management and prevent memory leaks
added a configuration option to disable semi - joins optimization based on external tables to improve performance by preventing unnecessary optimizations on external tables
updated the authorization header description in TokenKeyEndpointDocs . java to clarify the nature of the authorization requirement for requesting public keys
modified wallpaper offset settings in Workspace . java to set the vertical offset to zero to improve the aesthetic placement of the wallpaper during scrolling
updated return values in SybaseASADatabase . java and modified sequence generation logic in CreateSequenceGenerator . java to enhance functionality to support SybaseASADatabase and ensure correct sequence creation logic
nifi - 5059 : do n ' t commit in putsql if the driver / database be already commit or rollback ( # 5069 )
added directory creation logic for files in SnapPuller and corresponding tests in TestReplicationHandler to ensure that the application can create the sub directory if it doesn ' t exist
updated AppTargetId from " id : launcher " to " launcher : launcher " in the AppEventProducer to ensure the correct target is used for launcher event handling
remove unnecessary framer . frame ( ) and use in outboundmessage . writeto ( ) .
removed unnecessary parameters from various classes to simplify method signatures and improve code readability
pdfbox - 4892 : improve error message , a suggest by valerybokov
updated the PlainFormatter to truncate the current time using milliseconds instead of a fixed value to ensure consistency in time formatting for better readability and usability
[ java ] increase timeouts for close a agent .
hhh - 13663 avoid reflection in the private lookup
updated Mockito library usage in the project to improve testing reliability and maintainability
updated log message to clarify that the proto event file is new instead of closing to improve clarity and accuracy of log output
ignore very slow test , it be very fragile to reduce cpu
updated the error message for invalid rows and columns in GridLayout . java to clarify that rows and columns must be greater than zero
[ wagon ] fix parsing of wagoncart property to be more robust
added sorting functionality for BoundSheet records by position in XLS2CSVmra and BoundSheetRecord classes to enhance the sorting functionality for better data representation in Excel sheets
refactor calculations for average impulse and impulse over time calculations in ThrustCurveMotor . java to improve accuracy of impulse calculations for improved accuracy
modified the instantiation of InputSystemJme to accept a input manager parameter to ensure consistent handling of the input manager for better functionality
[ gr - 46711 ] ensure that sethashcodefield ( ) be only call when need .
feat ( block ) : remove deprecate getmesh ( ) - migrate to meshgenerator
rename keytabPath variable to localKeytabPath and update related logic to improve clarity and consistency in variable naming
added an option to control the handling of empty words in the code to improve flexibility in matching words based on user options
updated the argument in pushViewReplicaUpdates method from ` writeCommitLog ` to ` baseComplete ` to ensure proper handling of commit log messages during replica updates
issue # 1193 - change captureactivity ' s default buttonid to 0 for web
added a batching test method and additional properties to JoinedTableTest . java to ensure batching functionality works correctly for Hibernate transactions
added handling for EntityExistsException in logging to improve error logging clarity by distinguishing between duplicate timestamps and other errors
removed the deprecated format option and updated the runtime options accordingly to streamline the usage of the plugin and eliminate the use of the deprecated format option
removed the save ( ) method from the PMS class to streamline the file handling process
simplified the key event handling logic in ExtendedEditText to improve code readability and maintainability by reducing complexity
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new class ` Capacity . java ` to ensure proper capacity handling and test the behavior of the ` StringBuilder ` class
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to improve note saving handling in the application
[ bug - 64335 ] add handling for endnote document in xwpf
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event details for better context in authentication transactions
add a test to verify the gdal version
added a new file ` Lifecycle . java ` implementing a UI lifecycle with network error handling to provide a mechanism for managing network errors in the application
add some delay to make ripper more stable
removed unused imports from BodyTubeShapes and RocketFigure classes and simplified the process to enhance code clarity and maintainability by eliminating unnecessary dependencies
implement pixel scaling functionality in PJOGL based on context changes to improve rendering accuracy and performance by allowing dynamic scaling of graphics based on context changes
auto select pubsub protocol if pub be unavailable ( # 4104 )
refactor DiskDocValuesConsumer to use BlockPackedWriter instead of FormatAndBits for writing values to improve performance and reduce memory usage by utilizing block packing
fix routing order for status route . fix # 731
removed unnecessary data list and stream data release logic from GoAwayTest . java to simplify the code and improve readability by eliminating unnecessary complexity
added property handling for maps and a new FluentSetterBean class to ensure proper population of Fluent properties to enhance the modularity and maintainability of the code
refactor BlockingHttpEndpoint and HttpEndpoint to use a more generic HttpResponse class to improve error handling and provide a more structured response structure
camel - 527 : added ability for reverse file sorting by expression . thanks to michael klink for the patch .
updated print statement to use lastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity and accuracy of task tracking information
add an option to set output image scaling for ms - word output
added aggregate function name handling for paths in TSServiceImpl . java to improve accuracy of path information when using AGGREGATION mode
updated ` TestExceptionInBeforeClassHooks ` to extend ` WithNestedTests . AbstractNestedTest ` and added cleanup method in cleanup methods to improve test structure consistency and cleanup after each test execution
added functionality to set the selected XCap server URI based on the registration status to improve user experience by visually indicating the XCap enable state
ww - 3885 add ` ` struts . handle . exception ' ' dispatcher option to allow custom error handler
added stopEditing method to CodenameOneImplementation , TextArea , and AndroidImplementation classes for managing text editing behavior to improve code organization and ensure proper cleanup of text editing behavior across the application
nifi - 3748 : ensure that non - existing group attribute be set when create a flowfile with control rate .
updated parameter name and introduced logic for setting auto - preset functionality in the ` showDialog ` method to improve clarity and functionality of the dialog behavior based on user preferences
add some logging to assist with some trouble with websocket
added a condition to check for Windows OS before executing the test to ensure the test is only run on Microsoft Windows , clarifying that it is considered passed on other operating systems
added SQL _ SERVER _ SNAPSHOT constant to the SERIALIZABLE configuration in TransactionIsolationLevel . java to support additional database snapshot settings for improved performance
replace put method with offer method and add timeout handling to improve thread management and ensure proper handling of timeout
remove jrecompat a we no longer support it
added a null check for commandClass and modified return statements in RegisteredServiceSimpleFormController . java to ensure proper handling of service commands and improve code clarity
change default disk failure policy to ignore . patch by jbellis
removed public access modifier from method declarations in RipperInterface . java and RipStatusHandler . java to streamline the code by restricting access to internal functionality
peerdiscoveragent : fix incorrect filter condition when compare source address .
added a setter method for the JobIdentifierFactory in SimpleCommandLineJobRunner to enable configuration of job identifiers for better flexibility in job processing
fix the issue that pinotsegmentrebalancer computepartitionassignment do n ' t work when instance be already in cluster
[ java ] deleting container , it ' s no longer need .
simonstewart : fix the parsing of default selenium command line . no functional change .
createglossarytests : add retry rule for retry test ( # 1616 )
updated schema reference references to use ` Components . COMPONENTS _ SCHEMAS _ REF ` to ensure consistency with component - specific naming conventions
refactor EntityDeletedEvent to use JsonUtils for JSON conversion and identity zone retrieval to improve consistency and simplify the retrieval of deleted data structure
added a constant for the GOP string and updated related logic in multiple classes to improve code clarity and ensure proper handling of GOP support lines
added a new file TestProfileReturnTypePrinting . java with performance testing methods to evaluate the return type printing performance of different class instances
replaced repeated calls to ` doRefreshItems ( ) ` with ` ReentrantLock ` for thread safety to improve reliability and prevent potential data in concurrent access
added AcquireReleaseColumnsSegmentOperator handling to MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management by acquiring and releasing release columns segments
eranmes : unignoring a couple of test that pass locally .
added @ return annotations to clarify the purpose of methods in HasAndroidDeviceDetails . java to improve code readability and maintainability by providing meaningful return values
remove duplicate bug id from projectstats . addbug ( )
updated color handling in ImportPanel to use disabledShadow and disabledForeground based on the GTK ID to improve visual consistency and visual distinction across different UI components
remove duplicate @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check to return a date in the future if remoting remoting actions are empty to ensure accurate date representation for weekly actions without weekday set
replaced uploadButton with an actionMenu for enabling uploads to enhance user experience by allowing users to enable or disable uploads using an action menu
renamed multiple classes related to message and security metadata to improve clarity and consistency in naming conventions
added ` loadMetaData ` method implementation in ` MeXBTExchange ` and ` RippleExchange ` classes to enable proper loading of exchange metadata for improved functionality
added a custom JsonSerializer for Writable objects in CrawlDbReader . java to enable proper serialization of Writable objects for JSON processing
do n ' t use proxy in this test , just leave the dependency off
added a service configurationPid to the MDNSDiscoveryService component to enable dynamic configuration of the mdns service for better service management
added null check for messageItem before scrolling to the layout manager to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in BPIndexReorderer and TestBPIndexReorderer to use ForkJoinWorkerThread to improve thread management and performance during concurrent operations
updated assertions in RoleCommandOrderTest to check for specific role dependencies to ensure correct handling of specific roles in role command execution
added null checks and refactored methods for handling table info to improve code robustness and maintainability by addressing null pointer exceptions
fix checkstyle issue in ` ` jdk ' ' module
added matrix transformations and modified texture properties in BitmapFontTest . java to improve rendering quality and ensure consistent texture rendering
[ hotfix ] [ python ] fix window aggregate for built - in aggregate
fix remain issue with gc by remove unnecessary pending echo mark .
do n ' t assume hosted node be a host
fix ( giac ) : should not change to polynomial ( fixes # 483 )
updated FormAuthenticator and SavedRequest to set the saved content type dynamically to ensure the correct content type is set based on the request ' s content type
changed variables ` _ display ` to ` private ` and added null checks for ` localEnv ` to improve encapsulation and ensure null safety for ` localEnv `
remove ` ` pending ' ' delay from RecommenderJob and modify its implementation in AbstractJob to ensure tasks are completed before proceeding with their execution
make lock more robust in environmentimpl to avoid deadlock
added a test for reading identity providers in multiple zones using the Zones token to ensure proper functionality and behavior of identity providers in different zones
jbrules - 1885 : modify job interface to expire and add null check in pointintimetrigger . gettimestamp .
removed the import of ` Service ` from ` SendTicketGrantingTicketActionTests . java ` to streamline dependencies and reduce unnecessary imports
fix bug : send heartbeat to all broker when balance change
hive - 17825 : add option to set detailed mkdir mode ( jesus camacho rodriguez , review by gopal v )
[ java ] make sure we receive message to slowdown service when there be a live follower .
resolve # 236 : remove ` ` author3 ' ' from ` ` year ' ' label ( # 236
refactor CxxPlatform dependency retrieval in DBinaryDescription and DLibraryDescription to utilize CxxPlatforms for parse time dependencies to streamline dependency management and improve maintainability by consolidating platform - specific dependencies
[ googletts ] fix memory leak in vm when stop vm
camel - 3497 : fixed file : name issue when use file : target / done2 instead of file : target / done3
added a boolean flag ` reopenReaders ` in ` SolrConfig ` and modified the conditional check in ` SolrCore ` to enable conditional reopening of readers based on configuration settings
added a new static string for the Dialect version and included it in the MapWriter to support debugging by specifying the driver version for better diagnostics
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class to enable handling of date and timestamp fields in database updates
added a new ` dup ` method to ` mmm Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest . java ` to enhance the handling of duplicate return types and validate functionality with a new test case
refactor ` WidgetSearchCondition ` to an interface and simplify its implementation to enhance code readability and leverage interface implementation for better maintainability
replaced TermQuery with ConstantScoreQuery and modified the expected score calculation in TestFacetsCollector . java to improve search efficiency and accuracy by utilizing a constant scoring mechanism
removed several unused imports related to Java ' s invoke package from ConcurrentClassLoadingTest . java to clean up the code and reduce unnecessary dependencies
updated the parameter names and method signatures in CommonsApplicationModule to improve clarity and maintain consistency in naming conventions
add support for SYSDUMMY1 mode in mmm Parser . java and add tests in Derby . java in TestCompatibility . java to enhance compatibility handling for database modes and ensure proper functionality through testing
refactor TraceGatewayEnvironmentPostProcessor to improve logging format and add Sampler auto - configuration for refresh scope tracing to enhance code readability and ensure correct tracing behavior when no instrumentation is present
bug 52222 : improve workbook workbook id generation and add a test
[ geotiff - 3277 ] make sure we handle infinity correctly in geotiffreader . getnodata ( )
updated import statements and refactored execution logic in CliDriver . java and SessionState . java to improve code organization and enhance error handling during driver execution
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated test cases to use ` Schedulers . from ` to enhance performance and flexibility in subscriber handling
refactor the ` selectByRuleIdSet ` method to accept a new implementation using a partition to improve the handling of different rule IDs in a single operation
added a method to add a exit description for multiple exceptions and modified the exit status handling logic to improve clarity in exiting messages by providing a more structured way to handle exceptions
added player check to multiblock render handler . close # 226
changed the variable name from ` columnFamily ` to ` columnFamilyColumn ` in the ` SliceReadCommand ` class to accurately reflect the purpose of the variable and improve clarity regarding the column family
removed unnecessary import of Collections and made adjustments to range length calculations to streamline code for better readability and maintainability
[ netbeans - 4294 ] more responsive way to add text to the ipad dialog
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to ensure the correct build target is used for native linking functionality
renamed parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more descriptive name
added assertion to check for null message in AdvServiceTest to ensure that the service message is correctly initialized before proceeding
updated the key handling logic in MappingMongoConverter to simplify key conversion process to enhance readability and maintainability of the code
added multiple spaces to the log statement for displaying image titles and descriptions to improve the readability of the log output for better debugging
camel - 14284 : fix camel - spring3 json schema documentation for the deprecated property .
updated FuzzyLikeThisQuery to handle non - existing fields properly and added a test for non - existing fields to improve robustness of the query processing and ensure correct behavior when a field is not found
updated method signatures and logic for writing application links in HtmlCoreReport . java to improve clarity and maintainability of application link generation logic
( chore ) camel - dspace : use identifierservicefactory instead of camel - dspace
updated the variable length for assignment in VectorColumnAssignFactory to ensure proper handling of byte array length for improved functionality
changed the method signature of getDisplayScript to return a String instead of being abstract to provide a default implementation that returns null for the method
eranmes : adding sequence to result of webdriver . getkeyboard ( ) for test .
pdfbox - 4892 : set individual initial arraylist size to avoid unnecessary allocation
added synchronization and null checks in NetworkConfigurationWatcher and NetworkManagerListenerImpl to ensure thread safety and prevent potential NullPointerExceptions
fix bug # 45538 - allow read nested object from hssfworkbook ( see bugzilla 45538 )
remove import of elf shdr which be no longer need
replaced hostParams and roleParams with a new roleParams map to maintain consistency in handling role parameters across the application
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbols in font rendering logic
fix ( model ) : use old gl11 api for hourglass model .
refactor LiveTvGuideActivity to use a current guide start date instead of a generic activity to enhance accuracy of guide data handling
updated method invocation in MockGateway to use Whitebox for method resolution and added new test classes CommonParentTest and ChildB to improve method handling accuracy and implement unit tests for PowerMock functionality
added dlopen calls for specific library files in JREUtils . java to facilitate loading of required libraries for better compatibility
pas the dummy argument to the singular function ; do n ' t split exponent into two function
loop : allow protect non - overflowing unsigned guard to bypass loop optimization
fix a bug in getinstance ( ) where there be a dataflow analysis exception .
added a new class LocalizedString and refactored related classes to utilize it to improve code organization and facilitate localization handling
add a configuration option to disable classpath search ( default : off )
changed the access modifier of ` formats ` from non - final to final and simplified the initialization of ` formats ` in ` DataLine . java ` to ensure immutability of ` formats ` and improve code readability by using ` Arrays . copyOf ` for array copying
resolved - issue batch - 1241 : default retries to 2
added settings loading and updated usage instructions in TexturePacker . java to enhance functionality and improve user guidance
added text views for uploaded images and wiki text in AchievementsFragment to improve user interface clarity by displaying relevant information
added multiple calls to ` MockLogger . endAnnotationProcessingRound ( ) ` and ` logger . beginAnnotationProcessors ( ) ` and ` logger . endEnter ( ) ` methods in ` TranslatingJavacPhaseTracerTest . java ` to improve logging control and ensure proper processing rounds for annotation processing
added CategoryInfo class and related methods in MwQueryPage and CategoryInterface to enhance query functionality by allowing access to category information
updated assertion messages in AuthzAuthenticationRequest . java to remove unnecessary " username " and " password " prefix to enhance clarity and consistency in error reporting
added accessibility features to TaskbarStashController to improve accessibility handling for better user experience
added support for ' ^ ' in signature parsing logic to ensure proper handling of edge cases in signature parsing
updated access flags in ClassVisitorDriverFromElement and added new test cases in StubJarTest to ensure correct access permissions for generic interface signatures and abstract enums in the generated stubbed jar
added null checks for input parameter in IntervalFilter and LowpassIntervalsSource to ensure input is not null to avoid potential NullPointerExceptions
[ java ] add test case for iterator over entry set .
added a serialVersionUID field to the TreeMap class to ensure consistent serialization of the TreeMap instance
[ api ] change image creation time conversion from milliseconds to second
use f2m for the locus command ( relate to github # 618 )
added import statement for EncryptionUtils and called deleteKeyForAccount method to ensure private and public keys are removed for accounts
refactor keep - alive header name to use a utility method
do n ' t join map if there be no interceptor and lite member join
camel - 7999 : remove the cdi from the list of dialect in camel - core since it be not use anymore .
remove spillabled from longhybridhashtable constructor , it be never use
refactor environment variable retrieval to use a new methods for case - insensitive environment mapping to improve flexibility and error handling when the process environment variables are not set
ww - 5889 xwork2 action mapper implementation change to use collection and not collection
added import for SerializableMode in Mockito classes to enable serialization support in the Mockito framework
fix : set a nullable field value on bean definition error .
add support for ` isolationLevelInSelectStatement ` and enhance ` readIf ` methods in ` Parser ` , ` Mode ` , and ` TestCompatibility ` to enhance database compatibility checks and ensure proper handling of isolation levels
replaced the use of ` HiveConf ` with constants for HTTP path and transport mode to improve code readability and maintainability by reducing repetition
added isCacheable method returning false to GlobalOrdinalsWithScoreQuery to provide a default implementation for caching behavior
added a new file TestStrangeControl . java that contains a class for testing StrangeControl behavior to implement a performance test for the StrangeControl functionality
updated the generation path format from " %s . json " to " % s . jsfile " and " % s . jslib " in multiple files to ensure accurate generation of generated JavaScript files and libraries
added selectionStart and selectionEnd fields with their respective setter methods in ShadowEditText to enable tracking of text selection positions for user interactions
[ beam - 8737 ] explicitly close the grpc server ( # 8737 )
added a method ` use ( String path , Class < ? > routeClass ) ` to the ` Jooby ` class and updated routing tests accordingly to enhance route configuration flexibility and ensure proper testing of routing behavior
added null check for fst in FreeTextSuggester . java to prevent IllegalStateException when lookup is not supported
replaced usage of line separator to ensure consistent newline formatting in outputs to standardize line breaks across different operating systems
added ABIWriter class loading and logging functionality in JavacInMemoryStep . java to ensure the correct instantiation of ABIWriter classes and improve debugging capabilities
added a suppression warning for BooleanMethodIsAlwaysInverted in PubRoot . java to silence the warning about unintended behavior when using BooleanMethodIsAlwaysInverted
added checks to ensure the pull request is not stopped before scheduling it to improve reliability by preventing unnecessary processing during the shutdown process
refactor EnergyEndpointer class for improved clarity to enhance code maintainability and readability
updated the handling of column keys in ComponentPresetChooserDialog to improve clarity and functionality to enhance the logic for determining column presets based on user preferences
remove unused import , no code change
camel - google - sheet : fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and its implementation in ` CxxLibraryMetadataFactory ` to retrieve the exported header style , enhancing flexibility in header handling
deleted the file ` mmm Constants . java ` and ` DistanceUtils . java ` to remove unused or redundant files from the project
replaced the usage of regex pattern for splitting the key by removing the delimiter directly from the key to improve code readability and maintainability by simplifying the key processing logic
[ gr - 46711 ] do not initialize jdk . internal . foreign . abi . fallback . fallback linker when fail .
added a test method ` testCreateInline ` to ` RoleBindingTest . java ` and modified the ` create ` method in ` RoleBindingOperationsImpl . java ` to enhance testing capabilities for role binding functionality and simplify the creation process
added debug logging functionality to the UaaSessionCookieConfig class to improve visibility into session cookie configuration for better debugging and monitoring
updated file name generation to use a current year from the calendar to ensure accurate file name matching based on the current year
updated variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve clarity and consistency in variable naming
added error handling for option processing in JavapTask and created a new class T8033711 to improve robustness by throwing exceptions when an invalid option is encountered
8274234 : streamline the code for java . lang . collection in module info builder and module info
updated error logging to warn level and modified error handling in TaskDriver . java to improve error handling clarity and ensure proper handling of shutdown scenarios
[ flink - 15637 ] [ network ] enable tiered storage by default for hybrid inputgate
[ mail - 63 ] use http status code 299 instead of 200 a default
use lwjgl2 for the cubocy desktop to avoid lwjgl crash on macosx
remove redundant code to handle void method return type
refactor the OutputMacroExpander class to improve the handling of command line arguments and remove unnecessary dependencies to enhance code maintainability and clarity by utilizing HumanReadableException for better error reporting
polish ` ` fix job filter to light job ' '
added additional conditions to check for " \ build \ \ " in the file path validation to ensure that duplicate words are excluded from the input file path for better processing accuracy
[ # 7638 ] instructor view : cache all response comment ( # 7638 )
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
added a new file ` TestEscapeThroughInvoke . java ` containing a class ` TestEscapeThroughInvoke ` with methods for escaping to implement and test escape functionality in Java
replaced direct stream skip / read method calls with Apache Commons IO utility for efficiency to improve code readability and maintainability while addressing potential issues with stream operations
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 354 .
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of exceptions that may occur
hbase - 23351 improve the performance of ` ` calculateblock size ' ' in lrublockcache ( # 1616 )
removed unnecessary check for zero task count in RecentsView . java to simplify code logic for better readability and performance
fix a race condition when start the helix broker and routing table , that lead to a race condition when start the helix server and broker be still in use
added static methods and classes to retrieve and utilize Coinmate metadata service to enhance the system ' s capability to retrieve and retrieve metadata for the Coinmate exchange
o add $ { basedir } and $ { basedir } to the warning message
pdfbox - 4892 : save the same objectkey a primary key , a suggest by valerybokov
add displaydata support to ptransform ( # 3232 )
updated assertions in SubjectTest to use assertThat for null checks to improve clarity and maintainability of null checks
add a disabled algorithm for MD2 and RSA key size in ClientJSSEServerJSSE to enhance security by preventing improper certificate validation
[ hotfix ] [ doc ] fix check message in optiondata
modified module - info . java files for mmm and ppp modules to ensure proper module dependencies and organization
added error handling to the IOSImplementation class and improved the ensureConnection method to ensure proper connection error management and handle potential IO exceptions more effectively
removed unnecessary null assignments in LauncherInstrumentation and LogEventChecker classes to ensure proper resource management and prevent potential memory leaks
replaced exception handling in FileSinkOperator with logging and added closeWriters method to improve error handling and ensure proper resource management during writer closure
added diagnostic logging functionality to the SchemaGenerator to enhance visibility into diagnostic output during task execution
replaced RuntimeException with OptiqSemanticException for better error handling to enhance clarity and specificity of exception handling in the semantic analysis process
updated DataSourceMonitorTests to improve test coverage to ensure more robust validation of data source monitoring functionality
added a new ` loadedResourcePaths ` set to track resource paths and modified the scanning logic to improve performance by avoiding redundant scanning when the resource paths are already loaded
[ hotfix ] [ test ] log more information about service initialization failure
emit 404 error when use kotlin route . fix # 3353
added ` natIp ` property and modified logging for unknown packets to include IP address to enhance clarity of warning messages by including the IP address of unknown packets
updated ArrowByteBufAllocator imports and modified buffer initialization in multiple classes to improve memory efficiency and simplify code dependencies
updated CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve consistency and functionality across the logging framework
added checks to ensure headers and bodies are not null before setting the state in HttpConnection . java to improve parsing robustness and prevent potential parsing errors
refactor the timeout subscriber implementation to use an AtomicReference for subscription management to improve subscription handling clarity and ensure thread safety during subscription operations
optimize leveledmanifest to avoid too much garbage collection
added @ Test annotation to TestOrcTimezone1 . java to enable unit testing of the ORC timezone functionality
updated the logic for condition checking enabled metrics and timers to utilize a dedicated method for matching substrings to improve code organization and maintainability by centralizing matching logic
added error handling when retrieving the instance to segments map in PinotSegmentRestletResource . java and refactored the return statements in TraceContext . java to improve robustness by throwing exceptions during JSON processing and streamline code readability
updated JTable to ensure proper handling of null columnClass and created a new test class for JTable functionality to enhance robustness of JTable rendering and ensure compatibility with different icon types
added a check for the existence of the shell before adding it to the arguments to ensure correct execution when the shell is available and handle potential errors gracefully
updated deleteWithoutSubscriptions method from 10 to 1 in DatabaseCleaningService . java to ensure subscriptions are properly deleted instead of just 10
changed the collection of test instances from List to Set and modified the collectParentTestInstances method to allow for setting test instances to ensure that the test instance is injected correctly in the Mockito framework
updated FieldMonitor class for improved field tracking functionality to enhance performance and accuracy of field monitoring functionality
removed file deletion and added transactionDisable ( ) method in BTreeMapTest . java to ensure proper transaction management during tests
modified the iterator initialization logic and added a reset method in SortedIntList . java ; added a new test for iterator allocation in SortedIntListTest . java to ensure proper iterator management and validate behavior through testing
added unregister method to DefaultRemoteProxy and updated exception handling in JMXHelper to improve resource management and enhance error handling robustness
[ flink - 21190 ] [ test ] increase rocksdb write buffer size to 64mb .
updated the constructor call to remove unnecessary parameters in the Style class to simplify the constructor signature and improve readability
fix message encoding in facebookShare to avoid encode issue
no need to export the json graph , just remove the old jsonparser dependency
* fixed issue with audio nature and audio be not positionable in jme3
refactor LoopRotateBadNodeBudget class for better readability to improve maintainability and clarity of the codebase
added a ` TypeInformation ` parameter to the ` convertToMongoType ` method signatures across multiple classes to enhance type conversion flexibility for MongoDB operations
apps - 2148 remove unnecessary complexity check , add unit test
add server - specific test for empty sendkeys
added methods to create and scale images with specific dimensions in the AddAndScaleMultiImage class to enhance image scaling functionality and prevent negative dimensions
dbmaker : remove argument check due to change in api
add miss call to updateshiftstatenow , because it ' s already initialize
removed the use of ` DETECTED _ ACTIVITY ` from ` BundleConstants ` and related classes to simplify the code and maintain backward compatibility for activity detection
updated import statements to reflect the new package structure for WebSocket protocol implementations to improve organization and maintainability of the WebSocket protocol implementation
removed an unused import of Buildable from AaptPackageResources . java to clean up the code and reduce unnecessary dependencies
add comments to the code block to indicate unused section to improve readability and maintainability of the codebase
updated the exception message to specify status code as 101 to provide clarity on the error response for better debugging
reformatted the assignment of blockMode for clarity to improve code readability and maintainability
updated Mockito library usage in the project to improve testing reliability and maintainability
removed redundant owner check for plot ownership validation to streamline code by eliminating unnecessary duplication
remove deprecate getconversationid method in favor of getrequest .
updated imports in DummyFreeTTSVoice . java and DummyFreeTTSVoice . java to use MaryProperties and PhoneSetImpl to improve modularity and maintainability of voice handling functionality
hive - 23791 : remove hardcoded quote in partition key value ( sergey shelukhin , review by prasanth jayachandran )
refactor rendering methods in DLNAResource and Request classes for improved clarity and consistency to enhance maintainability and ensure proper rendering context updates during updates
added a new list of resolution repositories and updated the retrieval process in DefaultPluginManager to improve repository management by including remote artifact repositories
[ camel - 12540 ] close the spring context when use cxf test
doc : add javadoc to physicsclient class ( # 2178 )
added JUnit @ Ignore annotation to SessionTest . java to prevent frequent failures that may occur during test execution
added a new File object instantiation in the ZipFile class to enable file handling based on the provided name parameter
add a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in future development
change default ctor of channel to protect against nullpointerexception ( # 4104 )
added stack trace logging functionality to GenericDAOImpl and ForumServiceImpl classes , and created StackTraceUtils class for stack trace filtering to enhance debugging capabilities and improve stack trace management in the application
removed the @ Test annotation from FormLoginIntegrationTests . java to enable the test execution for form login functionality
added checks for argument length before unparsing in FunDefBase and ParenthesesFunDef classes to ensure proper handling of single - argument arguments during the unparsing process
updated the SQL query to use cluster _ name instead of cluster _ name to improve accuracy of cluster configuration selection
corrected the spelling of " supressWarnings " to " suppressWarnings " across multiple files to ensure compatibility with Java version 1.11 and improve code clarity
updated JsonTreeReader to check for the peeked version of JsonElement along with additional checks to ensure proper handling of end - of - array and end - document formats for improved functionality
added support for extra arguments in the external runner command and modified the TestCommand class to handle them to improve command execution flexibility and error handling when using external runner
added ` dedup ` and ` indexSolr ` methods to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality by allowing users to deduplication and indexing based on URLs
[ flink - 23737 ] [ example ] add doc for planner usage in streamsql example
added a call to ` clearDatabase ( ) ` in ` MssqlIntegrationTest . java ` to ensure the database is cleared before each test case execution
updated the ` setRenderPercentageOnTop ` method to accept a ` showPercentage ` parameter and adjusted related conditions to enhance the progress display logic and ensure consistent behavior during disposal
added a check to ensure the parent file exists before proceeding to avoid potential errors when parent file does not exist
added methods for writing and closing POI documents using ` write ` and ` writeAndClose ` to improve resource management and ensure proper closure of documents
encapsulate option and package name in separate line to improve readability and organization of the code
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for ` _ dotsPerPoint ` to improve encapsulation and provide access to the root box and dots per point
updated the ` apply ` method in ` CustomQueryFilterFactory ` to accept a user string and improved LDAP query handling to enhance functionality and robustness during user authentication in LDAP queries
add default port support to all router , defaultroutebuilder and defaulthttpserver
[ snmp ] fix status update after each test ( # 15834 )
[ # 8762 ] instructor : edit session : allow only submit privilege to submit session ( # 8763 )
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should be removed in future versions
updated path extraction logic in FileResolverImpl . java and added a new WarFileResolverTest . java file to enhance path handling and test the functionality of WAR file resolution
updated string formating in DocumentsWriterPerThread . java to include documentstores to improve clarity and accuracy of logging output
use unlocalized block name in example to avoid block mismatch
fix minor bug and typo in whitespace - related code
updated the parameter of ` locks ` from an integer to a double conversion from milliseconds to milliseconds to ensure that the thread count is in seconds for better resource management
updated the ` deserializeFrom ` method call to include an ` exactSearch ` parameter to enable exact search functionality in the metadata deserialization process
remove unused dateformat parameter from csvsaveservice . makeresultfromDelimitedstring ( )
added preferred size for the pane in NavigationShareTab to ensure the pane displays correctly on various screen sizes
modified BeiderMorseFilter to use State instead of OffsetAttribute and adjusted offset handling to improve state management and ensure consistent handling of keyword attributes
[ java ] fix javadoc warn for incorrect use of deprecated handler class .
fix shift click in lenswarp with correct block position . close # 2383
added a new method ` toJson ` to serialize JSON values into test cases to enhance testing capabilities by providing a structured JSON representation of test cases
modified MutableContextDataSupplier class implementation to improve data handling efficiency and maintainability
changed exception handling from handling Exception to Throwable and log a warning instead of throwing a server error to improve error handling specificity and provide more informative logging
added ` https ` parameter to the ` KubernetesMockServer ` constructor to enable secure communication for the server
[ gr - 2657 ] ensure the correct stamp be add to the foreigncallnode in the graph .
updated HTTP status handling in DefaultServlet to include GET , POST , and OPTIONS to ensure proper handling of HTTP responses for better API compliance
tika - 3802 -- fix extraction of angle in geographic metadata for tika 2 . x
updated error handling to return specific error codes instead of throwing specific exceptions to improve user feedback by returning specific errors instead of throwing specific exceptions
added reflection support for handling exceptions in ReflectorClassWriter to improve exception management and support integration with reflection features
added a clamp method to the Vector and Vector2 classes to enable clamping between two vectors to ensure proper vector constraints
added imports for ClientDetailsEntity and updated OAuth2Authentication creation in ChainedTokenGranter . java to enhance token handling by ensuring proper scope management based on client and authentication
updated BC _ instanceof check to improve type safety to enhance code reliability and maintainability
replaced the setSaveFlags method with a Logger instance for better logging to improve logging clarity and maintainability by using a centralized logging approach
updated UaaUrlUtilsTest to use JUnit 5 annotations instead of JUnit 5 annotations and added PollutionPreventionExtension to enhance test structure and maintain compatibility with modern testing practices
hhh - 16355 fix classcastexception in native - sql - scalarreturn
added caching mechanism for font anti - aliasing information using WeakHashMap to improve performance by avoiding redundant calculations for previously checked fonts
replaced IntBigArray with IntArrayList and updated blockPositionByHash implementation to improve performance and memory efficiency by utilizing the new array list size
simonstewart : back out a few change to the r11 module to pass the ci build .
fix checkstyle issue after cherry - pick
refactor instance management in InjectorBuilderImpl to use a map for better organization and handling of injectable objects to improve code clarity and maintainability while ensuring correct instance mapping during object creation
updated the method to use getBasePath ( ) instead of getAbsolutePathToBuildFile for improved accuracy to ensure accurate path retrieval for build targets in the application
[ wip ] add miss null check for message value in echo
fix a problem with keepalivesession ( it do n ' t work on keep - alive ) .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67 F to 0.67 to ensure consistent initialization for load factors
added methods to retrieve all physical data types in multiple classes to enhance functionality for handling data types in the vectorization process
changed package declarations for HtmlAssetTranslator and StringsResourceTranslator from ` com . google . zxing ` to ` com . zxing . client . j2se ` to better organize the code structure and reflect the project ' s encapsulation
refactor overview action handling in OverviewState . java to improve clarity and maintainability of the overview actions logic
added entity import and annotation to BaseActivityEventEntity . java to enable persistence of activity events in the application
added tracing functionality to NavBarSwipeInteractionHandler , TouchInteractionService , and SUpTimes classes to enhance debugging capabilities for gesture interactions
added a new file ` InvalidOptions . java ` to handle invalid javap options to ensure that the ` javap ` command handles invalid options gracefully
added logging for incorrect supported bounds in DisplayController to improve debugging by logging the correct number of displays
refactored OAuth20UsernamePasswordAuthenticator and OAuth20Utils to centralize client and secret extraction logic to improve code organization and reduce duplication in variable handling
changed the default value of _ unwrapServletException from false to true in ErrorPageErrorHandler and AsyncContextTest classes to enable the unwrapping of servlet exceptions in error handling processes
set shortcut status to DEFAULT when certain conditions are met to ensure correct tracking of shortcut status updates in the application
camel - 8071 : fixed seda endpoint should not use a size parameter which could lead to excessively large message send to the seda endpoint .
make sure batchupdate be run once per application ( for android )
added HttpClient configuration to ThirdEyeApplication to enhance HTTP client management and flexibility in the application
added a sorting mechanism to the JobInstanceFetchRequest class and updated the getBatchSize method to include a sorting parameter to enhance the job processing by allowing dynamic sorting of job instances
replaced an exception throwing in CryptoFacilitiesTradeService with a return statement for adapting currency pairs to improve order cancellation logic to handle specific order IDs more effectively
ggb - 2118 keyboard hide on click for ggb - 2184
use native function for memmove , which be more efficient .
removed unnecessary line breaks in the ` authenticateUsernamePasswordInternal ` method declaration to improve code readability and maintainability
ggb - 1846 tool tip block tooltips ( false , false , false ) should be on the side of the toolbar
updated DefaultDateTypeAdapter to accept a different date style and time style as parameters to enhance date handling flexibility and improve customization of date formatting
modify playerSet display format in ListCommand . java to improve readability and consistency in player ID representation
added a check for empty input in the List class to ensure safe handling of empty input gracefully
added handling for InvocationTargetException in ParametricCallable to improve error management by converting CommandException to WrappedCommandException
modified the ` getLikeExpression ` method to include a boolean parameter for handling regex patterns to enhance functionality to support regex support in the vectorization framework
added start and stop methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to enable lifecycle management for the stream supplier functionality
added locale handling to the runChild method in LuceneTestCase . java to ensure default locale is set correctly for child components
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 172 )
refactor context handler initialization into a separate method for better code organization to improve maintainability and ensure proper context handling in the application
added test method for reference route builder in OSGiBlueprintTestSupport . java to ensure proper functionality of route builder references in the blueprint
nifi - 3774 : fix unit test to not use substring on window .
remove redundant code and improve return type checks in ` Types . java ` to streamline the logic for better readability and maintainability
nifi - 11305 : add throttletype enum to support byte , char , and byte [ ]
updated color argb assignment in ColorBleedEffect and added conditional return in SpriteBatch to improve color handling logic and optimize performance by bypassing unnecessary processing
updated annotations in Annotation and AnnotatedElement classes to improve code clarity and maintainability
added a new interface Model and modified Sheet and Workbook classes to implement it to enable model functionality in the application
( chore ) camel - cxf : cleanup duplicate code in filter
added a ` clearEntityManager ` functionality to ` JpaItemWriter ` and its builder to enable flexible clearing of the entity manager based on user - defined settings
added null checks for shortcut information and improved error handling in the InstallShortcutReceiver and Launcher classes to enhance stability by preventing potential NullPointerExceptions when handling shortcuts
change the instantiation of TwoDimensionalCollectionValuedMap from an empty constructor to a static constructor to enable the use of a specific option for the type inference
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange being used in the application
added null checks and ensured child is not null before setting buffers in OrcEncodedDataConsumer and EncodedTreeReaderFactory to improve robustness by preventing potential NullPointerExceptions during buffer setting operations
added a null check in SegmentInfos and implemented a test case in TestIndexReader to ensure that an exception is thrown when no segments * file is found in the directory
fix broken test : createresource and updateresource do not extend it
refactor the return statement to assign a variable for the percentValue variable and adjust its logic to improve code clarity and handle cases where the percentValue is negative or greater than 100
modified limit comparison logic in RangeInputStream and RangeReader classes to handle zero values to ensure correct handling of edge cases when the limit is negative
camel - 19949 : camel - jbang - log loading duration of routes from registry and directory a it should be load from the classpath .
adjusted parameter names and calculation logic in ` getNextChunk ` method for better clarity and consistency to improve code readability and maintainability by standardizing variable names and calculations
refactor test classes to extend LuceneTestCase instead of JUnit ' s TestCase for better compatibility to improve test framework organization and leverage Lucene ' s testing framework
[ flink - 23454 ] [ stream ] fix streaming operatorstates bug
shader tiling : add tile to shaders for line ( thanks maki ) , remove unneeded null check
remove dbexists logic , a now rely on the dependency injection for blockdb
added trimming of whitespace from the group input in SQLPlusSupport . java to ensure clean input handling by removing leading or trailing spaces
fix test for http / 1.1 - > http / 2.2 protocol .
ticket # 3703 : correct a bug in the docksplitpanew that cause the divider location to be wrong
add metric to pinot controller health ( # 5080 )
hide ' shared avatars ' when delete file from local file list
[ netbeans - 3514 ] make sure mebisresource . source always available in the web . resources
updated conditional checks for argument lengths from ' > = ' to ' < = ' in multiple classes to ensure proper handling of command - line arguments that may require longer data length
added logging configuration to conditionally execute commands based on log level to enhance flexibility in command execution based on log verbosity
replaced CountDownLatch with an assertWaitUntil method to wait for span completion to improve clarity and ensure span completion logic is functioning correctly
refactor QueryParser to simplify locale handling and simplify parser initialization to enhance code readability and maintainability by reducing complexity in locale management
change component to use linkedhashset instead of set to support add / remove key
jbrules - 2623 : fixing broken test ( make rulebaseimpl public )
refactor OCSP handling by creating a new class OcspUnauthorized with specific certificate information to enhance security by integrating X.509 authentication features
added serverState variable and modified control flow for server failure handling to ensure proper synchronization and error management during server state transitions
added connection count management functionality to SourceCounter and AvroSource classes to monitor and manage connection counts effectively within the application
expose field definition a a builder to make it easy to query the field definition
refactor DefaultJavaPackageFinder to include getSrcRoots method and simplify return statements to improve code clarity and maintainability by encapsulating the logic in a dedicated method
replaced the existing Writer instantiation with a new PrintWriter instance to improve logging functionality by utilizing a standard PrintWriter
test : use random uuid to avoid conflict with other test
added handling for DataTable in JRubyStepDefinition to enhance functionality to support runtime - specific data processing
updated visibility settings for author views and refactored image retrieval methods in ApacheHttpClientMediaWikiApi to improve layout handling and enhance API query functionality for better media retrieval
refactor ReadSentimentDataset class for better readability to improve code maintainability and clarity
improve error message to good know the formula parse error
added methods to bind and set the socket address in WebSocketClient . java to improve WebSocket connection handling by allowing dynamic configuration of the bind address
[ java ] delete archive and aeron directory only on exit from onresume .
replaced manual width and height setting with a unified setSize method for improved readability to simplify code and ensure consistent sizing behavior across components
changed sessionFixationAttribute comparison from a boolean to a Boolean . valueOf method to ensure proper conversion of sessionFixationAttribute to Boolean
fix the off - by - one - channel bug ( # 2067 )
danielwagnerhall : refactoring chrome to avoid break on fast computer
added method and http route handling to ClientResponseWrapper and related classes to enhance HTTP response processing capabilities in the filter functions
set default compacted row to Integer . MIN _ VALUE if gcBefore is null to ensure stability by preventing null pointer exceptions during garbage collection
updated rendering intent return logic in ICC _ Profile and ColorConvertOp classes and added a new InvalidRenderIntentTest class to improve correctness and test coverage for rendering intents and color space functionality
added logic to check if a contribution question is not allowed ( # 5662 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ` to ensure proper synchronization of block production before proceeding
updated KafkaRecord class to remove Serializable interface to address compatibility issues with existing Serializable implementation
added PGConnection import and modified connection creation in PooledConnectionImpl and BaseDataSourceTest to support PGConnection to enhance connection handling capabilities and ensure proper handling of PostgreSQL connections
refactor PropertyTable and CloseIgnoringInputStream classes to enhance code readability and maintainability
changed log level from warn to info for missing token encryption secret property to improve visibility of the log for better debugging
remove @ deprecated from method relate to hazelcast # getconnection ( )
ambari - 21190 . kerberos : hide unlimited key jce dependency from ambari - server agent ( dlysnichenko )
encoder : add support for iterables and their respective readiterator ( ) method in namedlistcodec
added a null check for the state before assigning partitions and introduced a test for exception handling to ensure proper handling oflost partitions and validate behavior through unit tests
added schema inclusion rule to ApiExample . java to enable public access for API documentation
fix streamexpressiontest ( relate to http : / / github . com / julianhyde / optiq / pull / 10 ) .
fix a bug in sddo . createpolygon ( ) due to invalid ring
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to provide base and dimension count functionality for better resource management
bug 59264 : add debug output for next formula evaluation for debug purpose
test : migrate ctmodule to junit 5 ( # 4568 )
simplified the instantiation of ` profile ` in ` LegacyMediaManager . java ` and modified the condition in ` PlaybackController . java ` to ensure proper handling of live TV playback based on user preferences
added a return statement to the DynamicStyleBar class to improve function exit point clarity
added SLF4J logger to manage database property settings and reset status to improve debugging and monitoring capabilities for database property management
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and simplify future updates
added check for boolean types in the type verification to ensure strings are correctly transformed to objects etc
[ gr - 18821 ] use static address nuller instead of object nuller to enforce type safety .
rename multiple Java classes to maintain consistent naming conventions to improve code readability and maintainability across the project
test : add caffeinecacheconfiguration test suite for cache configuration
added a method to calculate the bounding box of all vertices in a bounding box to improve the functionality of the mesh by allowing for more accurate rendering of shapes
added a new TargetHashFunction enum and modified Hasher initialization to use it to allow users to specify a target hashing function for improved hash performance
renamed DefaultConfigurationProperties class to improve clarity and consistency in naming conventions
updated high light color and alpha settings in ListViewMultiChartActivity and BarChart classes to improve visual consistency of chart elements
updated the handling of SG path plan entries in ClusterPlanRouter . java to ensure consistency in the management of SG paths within the application
( chore ) camel - infinispan : fix typo in test parameter name
added file removal logic for local repository directories and improved lock handling in MavenDependencyResolver to ensure proper cleanup of artifact files and prevent concurrent access issues during download operations
updated fragmentShader assignment in SpriteBatch . java to include conditional compilation for GL _ ES to ensure compatibility with OpenGL ES by properly defining GL _ ES
hbase - 22728 fixed the memory leak in hbase - rsgroup
change logging level from warn to debug in TagLibConfiguration to improve log verbosity for troubleshooting purposes
added version aware token filter to the CustomAnalyzer and TestCustomAnalyzer classes to enhance version handling and improve test accuracy
added a test method to read values from the SetPackageArchiveInfo method in ShadowPackageManagerTest . java to ensure that the getApplicationInfo function correctly reads the package archive information
replaced direct method invocation with MethodUtil . invoke for consistency and access control to enhance method access safety by utilizing ReflectUtil for package access checks
added new imports and implemented a method to update progress listeners to enhance functionality by tracking task and task start events in the launcher
removed the synchronized block from AndroidWebDriver . java to improve performance by reducing unnecessary synchronization
fix # 770 only throw poolInitializationexception when initialization fail fast be configure to 0 .
remove unused parameter : networkclient . getresult ( ) be now a method of gethttpresponse ( )
changed the ` isNative ` variable from a ` boolean ` to a transient boolean and modified the related method call to prevent serialization of the ` isNative ` field and ensure it is not persisted in the output
update exception handler class declaration message to improve clarity and consistency in error reporting
change class name from RuleEnableHandler to RuleEnablementActionHandler to improve clarity and specificity regarding the functionality of the handler class
fix javadoc warning and javadoc issue in jsp module
added error handling to log debug messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve debugging clarity and ensure accurate logging during authentication processes
updated method names and variable names in KafkaDynamicTableFactoryTest and UpsertKafkaDynamicTableFactoryTest to improve clarity and consistency in naming conventions
added null check for the registrant repository before determining if the user is owner to improve robustness by handling potential null repository errors
added support for parsing font names with extensions . otf and . OTF in addition to . TTC to improve compatibility for various font file formats
refactor annotation matching logic to improve clarity and maintainability to enhance type matching accuracy and ensure correct transformation of fully qualified names
replace " OFF " with " SEVERE " in Grep . java to enhance error handling by providing a more relevant error message
added a check for debug logging before logging inputs in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when debug logging is disabled
changed the list name from ` includes ` to ` excludes ` and changed the initialization logic for ` includes ` and ` excludes ` to improve clarity and ensure an empty list is always added to the list
added methods to handle home intent interactions in the Launcher class to improve user experience by allowing default screen navigation when navigating to the default screen
change maximum bitrate from 110 to 30 to improve bitrate capacity for better performance
replaced the method ` getOptions ( ) ` with ` optionsMap . values ( ) ` in ` CommandLineParser . java ` to eliminate duplicate retrieval of options for improved performance
added trimming of the description in MutableDatabaseProperty to ensure consistent handling of whitespace in database descriptions
updated the filename generation in XOMParserTest . java to correct the output path format for improved compatibility
remove redundant pid logging from error log message to improve error clarity and reduce noise in logs
added getLoadedMusic and getLoadedSound methods to MusicLoader and SoundLoader classes to provide access to these methods for loading music and sound data
remove unnecessary dependency on spring framework a it be n ' t really need .
added ScreenRecordRule annotations to RequestPinItemTest . java to enable screen recording functionality during tests for better performance
bugfix # 164931 - do not disable pause button by default
fix ( common ) : fix add account preference
smack - 390 set available status to available only on available connection .
updated StringBuilder initialization in ObjectInputStream to use a calculated initial capacity based on utflen to optimize memory usage by initializing StringBuilder with an appropriate capacity when possible
disable spring metrics export statsd in integration test
updated InterruptedException handling logic to improve responsiveness and error management in the application
modified the ServiceTicket class to improve service handling to enhance the reliability and efficiency of service ticket management
fix : regression cause by 2.1 . x when try to connect use ssl
fixed argument array message mapper when target type be map
added check to ensure ` idxObj ` is an instance of ` IndexableDSpaceObject ` before processing it to prevent potential ` ClassCastException ` when handling ` idxObj `
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT for AuthenticatorActivity to ensure that the activity is reused instead of recreated
remove @ deprecate ' s from PatternParameterConfigurator . java to prepare for future refactoring .
modified the ` beginDraggingWidget ` method to return a boolean indicating success and added null check for the drawable to improve responsiveness and prevent potential null pointer exceptions
lucene - 4488 : ignore testPackedInts . testasstream due to lucene - 4488 failure
added null check for root and collect components in DynamicStyle . java to ensure safe handling of null root and enhance component collection functionality
tagger : write confusion matrix in debug mode
resolve http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48737
added unit tests for connected device states in ShadowBluetoothHeadsetTest . java to ensure correct behavior of device management methods in BluetoothHeadset
corrected the spelling of " # autowire " to " # autowired " in the test files to ensure accurate functionality and avoid errors related to property binding
added a new constant " clone " to the set of objectMethods and modified the condition for loading the lazy loader to ensure that final methods are properly handled during object loading and improve resource management
[ flink - 23737 ] [ yarn ] improve error message in integrationtestbiglinkedlist ( # 23737 )
make sure we can get the instance info from a command . fix # 168
updated the parameter name from ' service ' to ' serviceId ' in the setRegisteredServiceFilter method to improve clarity and consistency in naming conventions
added a null check for the activity before executing the UI thread to avoid potential NullPointerExceptions when accessing the activity
refactor logger variable names and update log messages for consistency to improve code readability and maintainability
added ' stringType ' property and related getter / setter methods to DatabaseAdaptor and JDBCSessionDataStore classes to enable customizable string type for database operations
updated assertions and exception handling in UIMAUpdateRequestProcessorTest . java to improve test accuracy and ensure proper exception handling during updates
refactor thread name updates and logging in SessionState for better clarity and functionality to improve thread management and ensure consistent logging during session operations
rename TaskletAdapter . java file to improve clarity and consistency in naming conventions
drools - 242200 dmn model should return a map of ( number , error ) value ( # 2434 )
[ macos ] fix the issue that texturemap create before move on ( # 6548 )
added a tooltip text to the showCGCP checkbox to enhance user experience by providing context - sensitive help
fix : create method on enums / interfaces should not be add to the top
add second parameter for action text and mnemonic for hot reload ( # 2373 )
[ web ] use hasspreadsheetlabel ( ) instead of islabel simple ( )
changed the BRIGHTNESS _ FACTOR calculation from integer to double to ensure proper handling of double values in the BRIGHTNESS _ FACTOR
add context and date to history entry , fix # 356
add listusers ( ) method that return a list of user for the current user
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in multiple classes , and created a test class for validation to improve type safety and ensure correct behavior of methods in indexed properties
updated logging format in DynatraceExporterV2 to use placeholders instead of string concatenation to improve logging readability and reduce redundancy in string operations
updated method signatures to remove unnecessary space in Context and Request classes to improve code readability and consistency
fix a nullpointerexception when load capability from nbt
fix junit test break by previous commit
added smart contract creation and validation logic in multiple classes to enhance contract validation and ensure proper contract management during transactions
added new package - info . java files for various components in the com . ibm . dtfj . image package to provide package - level documentation and organization for better accessibility
refactor the addition logic in DocumentsWriterDeleteQueue to use a loop for obtaining the current tail and its next node to improve efficiency and reduce contention during concurrent access
updated JavadocTool to handle duplicate JavaFileObjects using a HashSet to improve efficiency by preventing unnecessary parsing of duplicate files
changed the default value of the STRIP _ IPV6 property from true to false to disable IPv6 connections by default
fix a bug where add new user must not be add for the oauth token
fix parser token manager to work with new language key . patch by jbellis
replaced the use of a custom ThreadPoolExecutor with a custom MoreExecutors class to improve thread management and simplify the code structure
added cache - control headers and expiration header to the LoginService and FormAuthenticator classes to enhance caching behavior and ensure compliance with HTTP standards
improve error message to show the exception cause
updated HSSFTests class to replace AllHSSFUtilTests with TestSuite instances and modified test assertions to enhance test coverage and ensure accurate testing of document reading functionality
refactor FetchHTTP2Test and FetchHTTPTest classes to improve code organization and maintainability
update classDirectory assignment to handle null output gracefully to improve robustness by preventing potential NullPointerException
added ExternalResourceControlPriority settings for URI execution before and after access controllers to ensure proper handling of resource access during URI resolution
added exception handling for drawing graphics in TestTriggerCoverage . java to avoid failures on Windows machine and ensure it does not fail the build
modified variable and method visibility and introduced CPU time testing logic to improve thread CPU time validation and enhance error handling
added checks for comments in the TabsAndIndentsVisitor class to ensure that comments are only processed when there are comments available
updated assertions in TestTriggerIntegration to expect values greater than 100.0 to improve test reliability and accuracy
case - insensitve check for changeset . getpath ( ) to be case insensitve .
modify the ` getString ` method to return a default string value instead of null to improve flexibility by allowing default value retrieval in the map
added locale - specific date formatting and modified date display logic in TweetActivity . java to ensure consistent date formatting based on user locale settings
nifi - 259 - ensure that getprocesssession ( ) return empty list when no connection be connect .
refactor keyboard handling in DetailFragment to use a separate requestFocus method to improve code readability and maintainability by encapsulating focus logic in a separate method
another attempt at fix the classpath issue on window for window .
mob - 1293 : make solve ( ) synchronize instead of create new matrix
added import statement for Message class in GenericMessage . java to facilitate Message integration in the application
refactor SQL query construction in PostgresConnector for task attempts to improve readability and maintainability of the query structure
update file filtering logic in AquaFileChooserUI to ensure selected filter is valid to improve user experience by preventing invalid file filter selections
[ java ] fix synchronization issue with p2p and p2p transport .
modified the method to return a string representation of the Boolean object in ArrayPtg . java to improve clarity and handle potential null values gracefully
test : migrate PGtokenizer test to junit 5 ( # 4489 )
refactor variable handling logic in Java2TypeScriptTranslator for improved clarity and functionality to enhance the readability and maintainability of the code logic
added sequence handling and modified SQL statements for auto - incrementing columns to support PostgreSQL features that support auto - increment columns
fix for read utf - 8 on window . patch by jbellis
update test to match change in metadata for vertical and horizontal physical pixel spacing
updated parent assignment to use the parent object from the getParent ( ) method to ensure correct retrieval of the parent component for better functionality
updated import statements and formatted code for consistency across multiple files to improve code readability and maintainability
replaced instances of ` ENGINE _ finish ` with ` ENGINE _ free ` and ` ENGINE _ init ` in ` NativeCryptoTest . java ` to ensure proper handling of engine lifecycle for testing purposes
added iteration handling to multiple controllers and updated method names for clarity to improve code readability and maintainability by using more descriptive method names
updated HttpContent handling to ensure proper resource management to improve resource management and prevent potential memory leaks
added a call to delete logs in TestRecovery . java to ensure logs are properly cleaned up after tests
added support for handling " twitter : / / " URLs in BrowserActivity . java to enhance user experience by starting activities when a specific URL is encountered
fix flaky test by wait for host status to be up .
change logResult parameter from false to true in VisibilityController . java to enable the operation of label listing
increase max auto retries to 25 for resttemplate test
remove console output from TranslatorSupportTest and add multiple @ Override annotations in StandardTypeMapperComponent to streamline test output and ensure proper method overriding
added support for the FRACTION resource type in the ResourceLoader and related classes to enhance resource handling capabilities in the application
removed file confirmation check before proceeding with further operations to enhance user experience by avoiding unnecessary file confirmation
added assertions to ensure tagGroupId and tagArtifactId are not null before finding a newer dependency version to enhance code reliability and prevent potential null pointer exceptions
hbase - 26952 use quotasexception instead of donotretryio to indicate table be already in the namespace .
refactor multiple token - related classes to improve code organization and consistency to enhance maintainability and readability by standardizing class structure
updated TestFuzzPreLoop . java file to improve testing efficiency for fuzzing behavior
fix a bug that cause the hts vocoder to crash sometimes .
updated SchemaRetriever and TableRetriever to handle null foreign key columns safely to improve robustness and prevent potential NullPointerExceptions during schema extraction
move clearencoders ( ) to inputbuffer instead of clearencoder ( )
added SharedPreferences support to allow empty pages in the Workspace class to enhance user experience by allowing page management based on user preferences
added a warning log for the cucumber - needle has been deprecated to inform users about using cucumber - cdi2 or cucumber - jakarta - cdi
updated ShadowThemeTest , ShadowArscAssetManager , and ShadowVMRuntime to use a unified theme handling approach to simplify theme management and improve code maintainability
updated error messages in VerifyFast . java to use ` Arrays . toString ( arrays ) ` for better readability to improve clarity and consistency in error reporting related to array values
no effective change - remove dbmigration from ehistory2
updated conditional checks for PROTO _ PROPERTY _ NAME and modified methods related to GET / SET proto handling to improve type safety and clarity in script object handling
updated the shuffle method to include a random value to enhance randomness during readers during testing
updated display name retrieval logic for remote clarification in UsersAndGroupsSearchProvider to improve user experience by providing more relevant clarification based on user name
updated path handling in CookieRetrievingCookieGenerator to ensure it is always a valid path to avoid potential null pointer exceptions
fixed code formatting in the Jvm and JvmJvmstatModel classes to ensure consistent code style and improve readability
updated variable declaration for cacheName and added totalBackupCount check to improve code clarity and ensure correct backup count validation
pdfbox - 2941 : compare page number rather than by page number , a suggest by lgtm . com
added a condition to check if the focused widget is the same when highlighting an element to ensure that the active widget is not mistakenly highlighted when it is already highlighted
fix checkstyle issue in inventory / soundutil . java ( # 740 )
updated methods in ApplePackageDescription to utilize the new getAppleCxxPlatformFlavorDomain method to enhance flexibility in getting platform flavors based on toolchain provider
fix build break by previous commit
rename onconnect to onaccept to make code more clear
refactor EnglishPTBTreebankCorrector class structure to improve maintainability and readability of the code
added a new file ` TestGetLoggerNPE . java ` that tests logging functionality using ` java . security . logging ` to ensure that logging functionality works correctly and handles potential exceptions appropriately
added a data field and a getter method for it in PathSharingContext to enable thread - safe access to the data map
[ gr - 21190 ] modification to the test suite to support compilation during test .
added support for using " NEXTVAL FOR " based on a regex pattern and modified the constructor and related methods accordingly to enhance nextval expression functionality and improve code clarity
include link to resource bundle in unsupported feature error message
added performance checks and a test for clearing pending writes in BoundedLocalCache to improve cache management efficiency and ensure data integrity during operations
added exchange - specific parameters for Leverage ' s Level level in QuoineExchange and QuoineNewMarginOrderRequest to enhance exchange functionality and improve margin order configuration
added bound initialization logic to PropertyDescriptor and created a new Test7192955 class for testing beans to ensure proper handling and validation of bean properties and their properties
added a new interface ` SetDisplayModeCallback ` and modified display mode handling in ` LwjglGraphics ` to enhance flexibility and improve error handling when setting display modes
added null check for buttons awaking release in the Tabs class to ensure proper cleanup of buttons when they are no longer needed
fix line cell height when wrap be empty / empty ( # 3770 )
fix typo in script description
change implementation of paramValues from HashMap to LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to ensure predictable iteration order of the parameter values
[ java ] fixing string . format in case - sensitive test .
simplify namespace retrieval in StaxXmlPullParser . java to improve code readability and maintainability
add option test . config . nestedjoins to disable nested join
cloudstack - 3458 : only allow root admin user to query account management
added JavacFileManager caching and updated CompletionTaskProcesor constructor to accept a cursor parameter to ensure correct caching behavior for javac files when processing completion tasks
added Hive configuration for metadata manager and SQL standard authorization factory to ensure proper authorization integration for Hive queries
replaced JUnit assertion imports with Hamcrest assertion methods in KuduIOIT and XmlIOTest classes to improve readability and adhere to modern testing practices
add util . createrenderer ( ) factory method for create handler .
fix ( luxtrunmap ) : fix ioexception when read symbol file ( # 2844 )
removed debug print statements for termFilter and otherTermFilter to clean up the test output and reduce noise in the logs
deleted the Reflection . java file and changed TypeConverters . java from the internal package to the internal package to streamline the package structure and reduce unnecessary dependencies
refactor ThreadlessExecutor to use a boolean flag for finished and waiting states to improve encapsulation and control over thread termination handling
fix # 1447 : should not throw exception in toformat ( ) on datetime exception
[ flink - 23737 ] [ core ] improve the default chunk length for compression parameter
added a new class ` T7034495 ` with interfaces named ` A ` , ` B ` , and ` C ` to avoid crash in the application
[ netbeans - 3769 ] avoid infinite loop in lotsofevents
update conditional checks in TransclusionDecideRule . java to include a break statement for handling specific Hop characters to improve code clarity and ensure proper termination based on the character type
remove micronaut version output ( # 8652 )
added unit tests for handling specific formula references in the HSSFEvaluationWorkbook class to ensure proper functionality and validation of name records in the workbook
updated MindIconFactory to handle a description string before formatting it to ensure proper formatting of MindIcon resources when a description is absent
updated onHomeIntent method to accept internalStateHandled parameter to enable state management during home intents to be handled correctly
added a boolean variable ` preferDependencyTree ` to ` CxxBuckConfig . java ` to streamline the handling of dependency tree preferences
added a new method ` showDetails ` to multiple activities and refactored the ` FileDetailFragment ` class to include an active tab parameter to enhance file detail display functionality by allowing dynamic tab navigation based on file tab
changed function names from " $ apply " to " applyStatic " across multiple classes to standardize function naming conventions and improve consistency across the codebase
added a loop to manage memory allocation and randomize the state in the MinimalEncoder to improve memory management and ensure uniformity in the encoding behavior
updated regex patterns in SourceBuilder . java to use hyphen notation for better clarity and consistency to improve readability and consistency of string formatting in the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter reflects the changes in data
removed the setDefaultWALSyncMode method from ShadowSQLiteConnection to simplify the code as the method is no longer needed
updated type checking logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type validation and ensure expected behavior of collections
remove unused method from aws sdk v2 client ( # 12921 )
updated error messages in ` doDudPasswordTest ` calls to reflect specific limits to improve clarity and accuracy of test cases related to corrupted streams
add good message to hazelcasttestsupport failure message
graphbuilder : change to switch to fail graal compilation
ggb - 2118 : avoid very slow rendering of pen image , when load a file with no image
modified SQLXML . java file to enhance SQL parsing functionality
added a limit parameter to the getOrderBook method and modified the order book retrieval logic to enable retrieval of order books with a specified limit , improving functionality
refactor exception class and class names from ` stresshierarchy . common . exceptions ` to ` HeapOOMEException ` to improve clarity and consistency in exception handling related to OOME
nifi - 259 : ensure that custom streamreadconstraints be not too long . this close # 169 .
updated method to retrieve the engine from a configuration string instead of a configuration string to allow for more flexible configuration handling when no engine is specified
updated exception messages and class names for clarity and consistency in TimerWheel . java to improve code readability and maintainability by using more descriptive class names
improve error message when generate custom bug description
increase wait _ chunk _ is _ ready _ in _ seconds to 10 second to reduce flakiness
changed the visibility of the uncomplete check lists from true to false to ensure the checklist is not visible by default
refactor DefaultResultSetHandler to resolveDiscriminatedResultMap and create a new Contract class for handling nested result sets to improve the handling of nested result sets and facilitate contract management in the data model
update condition checks for handling null defaultHome and unregistering the receiver to improve null safety and ensure proper cleanup of the receiver
removed the import of VertxGen from PumpImpl . java to eliminate unnecessary dependency on the VertxGen class
removed unnecessary type casting when sending file information to simplify code and improve readability by removing unnecessary type casting
added trimming of whitespace to tokens in ConfigAttributeEditor and created a test for handling trailing and leading spaces to improve the formatting of whitespace in configuration attributes and ensure functionality works as expected
rename ClassUsingAuxiliary classes and constructors to improve clarity and consistency in naming conventions
svm : temporary substitution of classloader . singlemodulreference to prevent unnamed module in jdk9 or later .
added conditional logic to set relKind based on the presence of " pg _ " to ensure correct identification of database types based on user - defined settings
chore : clean up unused import ( # 133 )
updated the RQST field description and modified case statements in ThriftHiveMetastore . java and HiveMetaStore . java to correct the calculation of the RQST field and improve exception handling
added a new module - info . java file defining module exports and requirements in the Speedment runtime package to enhance modularity and ensure proper accessibility within the core module
added handling for flushing and filling states in SslConnection . java to improve encryption handling and ensure proper flushing behavior
updated Log4j2LogDelegateFactory to implement LogDelegateFactory and modified logger creation logic to enhance logging functionality and ensure proper logging behavior
updated execution environment handling and added server VM checks in multiple test classes to improve error handling and ensure tests accurately reflect expected results
refactor methods in ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
updated PGProperty . java to include " org . postgresql . ssl . LibPQFactory " to enhance SSL connection handling for PostgreSQL connections
disabled test for now a it can be investigate later
sorted the collection of resource names in the EditableResources class to ensure consistent ordering of resource names for consistent user experience
added a new file OSVTerminal . java and integrated it into TerminalFactory . java to support ANSI terminals and enhance terminal functionality
added support for recognizing " . gr " and " . grs " file types in ClassType validation to ensure compatibility with various file types in the application
drill - 8271 : fix the order of test run and return in baseline test .
camel - 7319 fixed the indexoutofboundsexception in xpathentityprocessor
refactor WebSocketPolicy class for improved readability to enhance maintainability and reduce technical debt
changed ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` from static to instance variables and updated related methods accordingly to allow each instance of ` ShadowTelephonyManager ` to improve flexibility in handling phone state permissions
` ` template base resolution ' ' should not be override in the < processmessage > method
updated class handling in AsmUtil . java to use asSubclass for MethodVisitor and ClassVisitor to improve type safety and reduce casting overhead for better performance
added a new class LoggingAuditService for logging user authentication and error messages to enhance monitoring capabilities for users during user authentication and improve debugging information
[ avmfriting ] allow update of temperature range if target be not valid ( # 10356 )
do n ' t generate proxy for non abstract class . fix # 2323
camel - 4440 : httpendpoint . setproxy ( ) should use system property http . proxyhost and http . proxyport .
1.2 : fix incorrect max _ encoding _ version in templatedto object ( # 759 )
added jdkSerialFilter ( ) method in StaticProperty . java to enhance the functionality of the JDK serialization filter
camel - 15105 : camel - core - optimize object allocation log a bit .
updated method calls from ` forceFinishScroller ( ) ` to ` forceFinishScroller ( ) ` in multiple classes to streamline code by eliminating unnecessary parameters
fix pinothelixresourcemanager to use configutils . applyconfigwithenvvariables ( ) . ( # 10356 )
added methods to retrieve error status and updated message handling in ValidationReport , DisallowValidator , RefValidator , and tests to improve error reporting and ensure consistency across validation logic and tests
refactor inline QSB handling to use a unified mechanism for different device profiles to improve maintainability and clarity of device profile configurations
fix java 6 compatibility issue in test ' s Sortedarraystringmaptest
update regex patterns in TransformSteps . java for matching ' 10 ' to ' ( . * ) ' to ensure proper matching accuracy for method parameters
fix for npe in pgraphicsjava2d and toolkit where image be null ( e . g . due to null pointer exception )
core : increase timeout for this test . fix intermittent failure .
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
fix : set the docker image url in the Environments class ( # 2025 )
- fixed unit test for the knowledgeagent
updated AdditionalAnswers , AnswerFunctionalInterfaces , InvocationOnMock , and InvocationOnMock classes to improve code organization and maintainability
added a method to copy files to a target directory and a source file to enhance file management and error handling when copying files
regenerate iotdb : change method name from ` appendToDescription ` to ` getDescription ` in ` asyncoperationdocprovider ` and ` syncoperationdocprovider ` to be consistent .
[ api ] improve device - specific validation ( # 1353 )
added a conditional check to ensure the xml is a document before visiting them to avoid potential errors when processing non - XML documents
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` and updated import statements in multiple test classes to standardize test runner usage and improve compatibility with newer testing frameworks
added two new rule classes ` GasLimitRule ` and ` ParentGasLimitRule ` to the rule list to support additional rule functionality in the CommonConfig class
changed the access modifier of setupData ( ) from public to private and added setupData ( ) method to encapsulate setupData ( ) within the appropriate test classes for better access control
rename the variable ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class and related methods to improve clarity and consistency regarding transaction handling
[ 3.0 triple ] fix stream closing when stream be not end ( # 9013 )
updated URLs in JobManagerOptions and RestartStrategyOptions classes to use the base URL from " . / . / " to ensure consistency in configuration for different base URLs during restart operations
add a new test method ` testIssue154 ` to ` SelectTest . java ` to ensure SQL parsing and deparsing works correctly for issue #154
refactor Common . java for improved code structure to enhance maintainability and readability of the code
added a try - with - resources statement for managing app launching to ensure proper resource management and avoid potential memory leaks
refactor StreamExecDeduplicate class to improve code readability and maintainability
add warn log when sending kafka message to topic
dataes - 495 - adapt to api change in spring data common .
fix setcoord for 3d segment to handle undefined value
added scrolling behavior and velocity handling features to the AskGestureEventsListener to improve user experience by refining scrolling behavior and ensuring accurate velocity calculations
modify comparison logic in NGramEstimator to handle key - based comparison more robustly to ensure consistent ordering of elements when comparing values
updated import statements to use the correct package structure for ScenarioScoped to ensure compatibility with the latest Cucumber library structure
updated method calls in StatsLogCompatManager to retrieve folder icon properties to enhance clarity and functionality by accessing the folder icon properties directly
replace ` getServerSlogan ( ) ` with ` getServerName ( ) ` in ` ThemeUtils . java ` to standardize the capability retrieval method for better clarity and consistency
8315373 : add jdk . test . ir test for kafkashtokenizer api
selectionhighlighter : add sethandler ( transferhandler ) to allow selection highlight to work
added a new class StringResultConverter to handle string results to improve string handling by allowing customizable result converters
( chore ) camel - aws2 - sqs : re - enable test that do not run reliably on the apache ci
updated condition in JansiWinSysTerminal . java to check for a zero exit code instead of a non - zero exit code to ensure proper handling of terminal input when the condition is met
refactor BufferUtils to improve buffer limit handling and method loading to enhance robustness and maintainability of buffer management functionality
update string comparison in TestSolrDiscoveryProperties to use File . separator for data path to ensure compatibility with Unix - like file path formatting
updated OS detection logic in AutoUpdaterServerProperties . java to support different operating systems to ensure compatibility with different operating systems by setting " - pre10.15 " as the default OS
changed the variable name from ` lockFile ` to ` lockName ` in the ` Lock ` class to improve clarity by using a more descriptive name for the lock purpose
replaced the appIcon reference with a more descriptive name and updated the visible bounds to improve clarity and maintainability of the code
updated method calls to use the current object reference instead of ` Invocable . InvocationType ` to ensure consistency in object reference and improve code readability
change the order clause in GET _ STEP _ EXECUTIONS from " oreder by STEP _ EXECUTION _ ID " to " order by STEP _ EXECUTION _ ID " to ensure the execution order is consistent for fetching steps
modify button handling in LwjglInput to ignore unknown buttons to ensure proper button processing and avoid potential errors
added tests for handling approve and reject requests in TaskRestRepositoriesIT . java to ensure proper access control and testing of form submissions
replaced direct logger usage with a custom logger in OpenIdServiceResponseBuilder and GoogleAccountsServiceResponseBuilder to improve logging consistency and maintain consistency across the codebase
fix : we never cache the token file expiration time
[ geos - 8125 ] disable flaky test ( macos - github - build )
added mock method overrides for alarm suppression requests in GreetResourceMockedTest . java and OciMetricsCdiExtensionTest . java to ensure proper handling of alarm suppression requests for testing purposes
refactor the order of conditional checks in the JFrame class regarding the default close operation to ensure that the security check occurs during the close operation process
fix a npe in load library when there be no mediadatabase
replaced metricsContext with solrMetricsContext in SuggestComponent . java to streamline metrics handling and improve code maintainability
refactor file and folder handling logic in OCFileListFragment . java to improve readability and maintainability of file and folder footer logic
update the HashKnownHosts configuration to " no " instead of " yes " and change loadKeys return type to Iterable < KeyPair > to improve clarity of configuration and enhance key loading functionality
refactor SourceVersion class to improve code organization to enhance maintainability and readability of the code
added a new file ` ThreadFactoryTest . java ` to implement tests for the ` ThreadFactory ` to ensure that the thread management functionality is correctly implemented and validated within the application
refactor lock period retrieval logic into a separate method and adjust the expiration time logic to improve code readability and maintainability by encapsulating lock period logic
added a new TicketModel instance to the EditTicketPage class to enhance the ticket model functionality within the application
updated the FEATURE _ PREDICTION _ DISMISS feature flag from false to true to enable application dimissing by default
updated constructors in various assertion classes to accept self - type casting to ensure proper type casting and prevent potential runtime errors
added handling for the quote menu item in TweetActivity to improve user experience by allowing users to quote tweets easily
make sure interrupt thread be always start in order to avoid deadlock
change codec passthrough to decrypt only codec .
added a conditional check for result before offering failure and closing the failure consumer to ensure failure is only offered when the operation is successful
updated German XSLT error message from " Stiller Modus " to " Silent - Modus " and French error message from " Le nombre d ' arguments ne peut pas ê tre n é gatif . " to " L ' arit é ne peut pas é gative . " to improve clarity and accuracy of error messages in localization files
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety during concurrent operations
updated the subscription functions in MockRestAdapter and RestAdapter to use Subscriber instead of Subscription to improve flexibility in handling unsubscribed subscribers
create component . yml if it do n ' t exist
added new configuration for HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES and updated assertions in TestJdbcDriver and TestJdbcDriver2 classes to enhance column qualifier handling and improve test accuracy
text input be n ' t update after input type change , relate to ticket : 169
add session # invalidate to check if the session be invalidate .
hhh - 13553 - remove empty class exceptionhelper . java since it be a no longer use
jcex25519domain : reduce key length from 256 to 255 .
added a codec setting for Lucene41 postings format in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41 codec for processing
[ hotfix ] print debug log for empty checkpoint range
add use of oaep and rsa / ecb / oaeppadding to provide good support for sunjce ( relate to github # 1277 )
updated platform references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with macOS architecture
[ netbeans - 4294 ] fixed security exception when read source .
abstracttest : fix abstracttest . java for macos
updated error handling and modified segment file handling in the FileUploadUtils and UploadRefreshDeleteIntegrationTest classes to improve error reporting and ensure consistency in file management during upload operations
[ fix ] free up the bufferutils memory when create the disposable buffer .
change the default use _ PIPELINE _ DOWNLOADER flag from false to true to enable pipeline download functionality for improved performance
updated date formatting to remove timezone - specific offset settings and added a new test class for date manipulation to streamline date handling and ensure accurate date manipulation across different locales
refactor variables in AllAppsView . java to use local definitions instead of accessing mRollo . mState directly to improve code readability and maintainability by reducing repetitive accesses to object properties
cloudstack - 2120 : fix npe in deleterouter command
refactor StringBuffer class for improved performance to enhance efficiency in string manipulation operations
assign rule . uid to avoid npe when modify rule
added a null check for the listener before unsubscribing to avoid potential null pointer exceptions when unsubscribing an URL
[ te ] transform - apply pretty print format to the output of the jolt transform ( # 4186 )
make access _ table debuggable . should be public .
improve error message when no resource be find at specified location
refactor to avoid unnecessary exception handling in xmpptransport run method .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added additional parameters for effective cluster version and upgrade suspension checks in AmbariManagementControllerImpl . java to enhance functionality by allowing additional cluster state management during operations
simonstewart : after a code grant , the code be copyright the sfc and the selenium committers . start to update the copyright header
added a final List < Field > wfields = writer . getFields ( ) to facilitate access to field information from the writer
added a constructor to OAuthProperties that sets the encryption and signing key size to enhance security by setting the key size for enhanced security
hbase - 23388 remove column family length property from htabledescriptor ( # 5309 )
modified the alias check mechanism in SampleWebJspApplicationTests to use a lambda expression to simplify the alias checking logic for better readability and maintainability
refactor ObjectInputStream , ObjectOutputStream , and package - info classes for better organization to improve code maintainability and readability
[ java ] add reset method to cluster so it can be use to shutdown cluster after termination .
modified the incrementing logic for currentChunkID in ChunkedWriter . java to ensure proper tracking of the chunk ID during writing operations
added a new file AbstractJobExecutor . java that implements JobExecutor to provide a base class for job execution execution in batch processing
updated RecoveryStrategy to assign a future variable for clarity to improve code readability and maintainability by explicitly indicating the replay operation
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in variable naming
fix : disable service discovery by default ( # 4358 )
replaced usage of ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom ( ) . nextInt ( ) ` in ` catPut ( ) ` to prevent collision issues with hashSalt generation
truffle - dsl : fix for non - failing runtime compilation method ( possible deadlock ) .
remove unnecessary code ( current / baseline start )
updated imports and modified the answer method in CallsRealMethods , creatingMocksWithConstructorTest , and added abstract methods in CreateMocksWithConstructorTest to enhance Mockito ' s handling of abstract methods and ensure proper mock creation functionality
refactor checkPackageAccess methods to improve security checks to enhance access control by ensuring proper package access validation
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration tests to enhance test structure and ensure proper error handling during plugin initialization
renamed dtm to model and updated font metrics handling to improve code clarity and ensure consistent font rendering with bold font
added support for handling TIS requests in QuickstepTestInformationHandler and TestInformationHandler to improve touch interaction handling in the testing framework
added synchronization to the connect action listener and replaced invoke method with write access to improve thread safety and reduce blocking operations
updated showRulesResult from ImmutableMap < String , showOptions > to ImmutableMap < BuildTarget , showOptions > and modified method signatures to use BuildTarget instead of String to improve type safety and clarity in handling build targets
[ j2kt ] add empty class to avoid ide warning
added handling for HOME and END commands in the Less class to improve user experience by allowing lines to be displayed
removed synchronization around the iteration over connected plots to simplify the code by eliminating unnecessary synchronization
refactor package installation check by using a chooser for launching the activity to improve user experience by allowing users to navigate to the correct activity based on their installation status
made the constructor of the Roster class package - private to allows access to the Roster class from other packages
add basicconstraints to trust anchor to avoid certpath issue .
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to ensure that the test fails due to incorrect transform offsets
replaced direct assignment of precisionStep with precisionStep assignment in TrieDateField and TrieField classes to simplify code by directly assigning precisionStep instead of using the field ' s multiValued method
removed the TaskbarStateHandler class from the BaseQuickstepLauncher class to streamline the codebase by eliminating unused components
added a new file ` ArrayLength . java ` that tests the behavior of reflection - based array length methods to ensure that the methods correctly return zero - length arrays across various array types
wait for the hazelcast process to be destroy before stop the test
replaced Singleton annotation with @ PostConstruct and added init method to ApplicationSettingsService to improve encapsulation and ensure data integrity during the saving process
fix safepoint . setvalue ( ) to handle non - positive value
update thread name field type from char array to string to improve data type consistency for thread name retrieval
updated the default RAND _ SEED value from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and HnswGraphBuilder to reduce the frequency of RAND SEED for better performance
fix for font issue in darcula ( http : / / github . com / codenameone / codenameone / issues / 2147 )
refactored the expansion logic into a separate method ` expandDynamicStar ` to improve code readability and maintainability by reducing duplication
added a method to find nested children in Comment2000 . java to facilitate the retrieval and processing of nested record records in the code
added import statement for Messages and set a message icon for PMS 141 to enhance user interface by providing a warning icon for PMS 141
implement getmodifiersex ( ) in psurfaceawt , fix # 394
node cost : fixed count leading and trailing zero node .
camel - as2 : fix npe when send notification to non set content - transfer - encoding .
refactor Locale class to improve locale handling to enhance readability and maintainability of locale data management
added a new method ` clearLog ( ) ` to ` ErrorConsoleController ` and ` LogMessages ` classes to enable clearing of log messages for improved user experience
removed unnecessary whitespace in RecentsView . java to improve code readability and maintain consistency
updated locale handling and improved caption management in multiple classes to enhance user experience by providing locale - specific warnings and ensuring accurate caption management
enabled connection pooling and execution count in multiple test classes to improve test stability and resource management in the application
[ grid ] adding ` ` org . openqa . selenium . opera . operadriver ' ' capability to defaultdriversessions
add error dialog on download failure
added new Lifx product definitions while updating an existing product entry to enhance the product catalog with additional features for improved user selection
updated the collection handling logic to support asynchronous requests and improved method naming for shard names to enhance functionality and maintain consistency in shard management within the collection management system
updated variable declarations and removed unnecessary charset handling in PostgresDatabase , PostgresDatabaseTest , and PostgresDatabaseTest to improve code clarity and maintainability by using consistent encoding practices
updated LogPanel and LinkPanel constructors to use the HEAD repository parameter to ensure proper handling of the log page ' s reference ID when no repository is available
changed the rotation unit from ` Vector3f . UNIT _ Y ` to ` Vector3f . UNIT _ XYZ ` in ` SkeletonInterBoneWire . java ` to improve clarity and accuracy of bone model space position calculations
added a method to destroy the browser component in AndroidImplementation to ensure proper resource management when the browser component is no longer available
added a wait for active collection for readApiTestViolations to ensure proper management of test violations in the cluster
added conditional checks for character encoding and rounding in ScreenTerminal . java and removed an unused import in Tmux . java to improve character encoding handling and ensure consistent code style
updated the controller state checks in SoftResetAction . java to include more robust control states to enhance the robustness of controller state management in the soft reset functionality
add disable on - disc stream cache to speed up texture pack reloading .
added conditional logic to set parentFolder in Request . java and RequestV2 . java to ensure parentFolder is retrieved correctly when necessary
cloudstack - 2120 : fixed typo in comment and field name
fix for issue 577 : file output stream be not delete on exit .
added error handling for forbidden requests in StandardGitHubRepository . java to improve robustness by logging errors related to forbidden requests
log4j2 - 1343 add getoriginal ( ) method to messagefactory2adapter to be use in test .
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress serialization warnings for these classes
updated regex pattern to allow up to 3 entries instead of 1 entries to ensure compatibility with the latest versioning requirements
removed initial and dismiss delay settings from ExtractionModelFrame to improve user experience by reducing unnecessary tooltip settings
refactor projectcommand logic to correctly handle passedintargets set to improve project generation accuracy by ensuring passedintargets are correctly processed
set the timezone to UTC in the TimeTest class to ensure consistent formatting of time strings in tests
[ ci ] correct javadoc for mediadessionconnector
use endpoint . getslimplementation ( ) to get the ssl support
updated accuracy display message format in GpsLoggingService to provide more accurate accuracy information for improved logging accuracy
added a method to check if futures are enabled and adjusted related data handling to streamline future account and wallets management based on the configuration
continue issue 577 [ admin : listinstructors -- > do not list all instructor ' s account directly ]
set the maximum worker thread pool size for the connector to ensure worker threads do not exceed the defined limits
polish ` ` disable watch service by default ' '
camel - 8568 fixed the test error of camel - jms
replaced instances of ` parseErrorHelper ` with ` validateError ` in ` DrillSqlWorker . java ` and updated exception handling in ` TestWindowFunctions . java ` to improve error handling consistency and correctness in query execution
fix duration calculation . resolve issue 352 .
updated the implementation of ` getComment ( ) ` and ` getJavadocOnMethodWithLineComment ( ) ` methods to return a more general ` JavadocComment ` to improve code readability and ensure correct handling of Javadoc comments in method declarations
added OS detection method and modified memory handling methods in ReserveMemory . java and WhiteBox . java to improve cross - platform compatibility and enhance memory management functionality
added multiple calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing events during index rebuilds
changed the visibility of ` procId ` from private to protected and modified the string concatenation format to enhance encapsulation and improve readability of the output
camel - 7293 : fix the problem of create a service factory bean in camel - cxf
refactor YamlChangeLogSerializer to use a list for mapping and serialize changes to improve code organization and enhance the serialization process for database change logs
updated SchemaPrinter to use double quotes for better formatting to ensure consistent formatting of output for better readability
remove deprecated / unused code in debugrooadregen
updated context usage to getActivity ( ) for nowPlaying and footer to ensure correct context is used for smoother transitions
added Hibernate annotations for the GenericGenerator annotation and updated the @ GeneratedValue method to include the " native " generator to ensure consistency with Hibernate standards and improve the management of generic generation strategies
removed country parameter from the getSystemTimeZoneID method signature to simplify the method signature and reduce unnecessary dependencies
fix bzip2codec to correctly write position and remaining byte
[ web ] set log level to CONSOLES for app ( if it be n ' t in use )
added VALUE _ TYPE _ EMPTY constant and modified the create method to use it to improve type handling for empty values in the application
replaced ' = = ' with ' . equals ( ) ' in GroupManager . java for better readability to improve code clarity and reduce potential null pointer exceptions
modified the Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and ease future modifications
added a method ` newInstanceExact ` to the ` TargetGraphFactory ` class and updated related tests to improve flexibility in creating instances of ` TargetGraphFactory ` for different target nodes
rename methods from ` getMinRowCompactedSize ` and ` getMaxRowSize ` to ` getMinRowSize ` across multiple classes to improve clarity and consistency in method naming
fix invalid modcontainer name and add more detail to modmetadata
added a conditional check for the current state before setting or deleting an object in NativeArray . java to ensure proper handling of the object ' s state and deletion based on the current state
updated file handling in FileUploader . java by using remoteParentPath and set parent ID to ensure parent files are correctly saved during the upload process
added a new file UTF8ReaderBug . java that implements UTF - 8 character handling to address UTF - 8 issues with supplementary characters in XML parsing
added unit test base on user forum issue
updated BinanceIntegration and BinanceUsIntegration classes to use " @ depth20 " instead of " @ depth " to ensure accurate representation of depth in test cases
added a method to reset allocation in SimpleParallelizer and Wrapper classes to ensure proper handling of allocation states during parallelization
removed the import of AssertTree from AmbariManagementControllerTest . java to eliminate unused dependencies and streamline the test code
replaced direct calls to ` System . getProperties ( ) ` with synchronized access to ` sysProps ` in ` Agent . java ` to ensure thread safety when accessing system properties
o tweaked reference to utility method in order to improve code readability and maintainability
refactor AbstractDoubleArrayAssert for improved clarity to enhance maintainability and readability of the code
fixed possible out of bound exception in getbounds method .
added delay and abort tests in multiple classes to ensure proper handling of invocation exceptions during service invocation
replaced ` get ` with ` getValues ` for retrieving values and added a loop for each field to improve efficiency by using a more efficient approach to retrieve values
replaced the use of BuildTargetSourcePath with a new instance of BuildTargetSourcePath to streamline the target path handling for better clarity and maintainability
add a chat message when botania . versioning . disabled be disable .
replaced Collection with List for filePaths in MediaFolder . java and added numberOfFiles variable to enhance type specificity and clarity in the code structure
added a new argument " - b " to the AidlStep and updated the format of the output string in GenAidlTest to ensure proper output formatting for debugging purposes
# 79 : delete oblate on edge from comparison statement
added a TODO comment to the FakeHttpLayer class to prepare for future implementation of HTTP requests
[ java ] change to revoke leadership to handle error more clearly .
refactor CompositeDiscoveryClient to use Single for stream processing to improve code readability and simplify the stream processing logic
updated method names and configurations to replace ` applySystemConfiguration ` with ` applyQualifiers ` to improve clarity and consistency in handling qualifier updates
[ flink - 30613 ] [ doc ] add description for jobmanager . restartalltasks option
refactor ` updateNoWidgetsView ` methods to ` updateRecyclerViewVisibility ` and modify visibility logic for different adapter types to improve code clarity and ensure appropriate visibility based on search mode
add check for wstxoutputfactory to avoid classnotfoundexception in osgi .
refactor test methods in AuditAliasCommandIntegrationTest to use @ Before instead of @ Test to improve test execution flow and ensure proper setup before running tests
removed debug log statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up code and reduce unnecessary log output
( chore ) camel - cxf : fix incorrectly disabled test
added error handling for periodical refresh in CachedStore . java to improve robustness by logging errors when refresh fails
updated Lombok ' s ` ChainingAuditPrincipalIdProvider ` to use ` @ RequiredArgsConstructor ` and modified ` CasCoreAuditConfiguration ` to enhance flexibility in adding multiple ` AuditPrincipalIdProvider ` instances and improve code organization
added a method to check the default backgroundFills in HSSFCellStyle . java and modified color handling in HSSFFPalette . java to improve color management and ensure correct fallback behavior for custom backgrounds
[ test ] correct javadoc for ZonedDateTimeformatterBenchmark
added a method to check if an update command should buffer updates and created a corresponding test class to improve the handling of update buffering and ensure it behaves as expected through unit testing
added a null check for stage number in the motor validation to ensure that the stage number is not null before proceeding with motor validation
add ` ` replace all existing block ' ' to / editreplace command description
hbase - 25825 add javadoc for master - side secret extension ( # 3295 )
changed the declaration of the ' processor ' variable to final in AndroidInput . java to ensure the ' processor ' variable remains constant after initialization
added a listener to notify when the end of stream is reached when writing to ensure proper handling of end of stream issues during writing
added " CUBE " to the MySQLDatabase class to enable compatibility with CUBE features in the database
added a try - catch block around the rm call in TestUtil . rm to handle potential IOException and improve error handling
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and introduce new test runner functionality to enhance support for multiple API versions in Robolectric tests
refactor test cases in DefaultOkHttpClientFactoryTest to use direct getters and setters to improve code readability and maintainability by reducing reflection access
modified BatchUpdateException , PreparedStatement , and Statement classes to improve exception handling consistency across the application
add a null check for the output stream in RawMessageContentRedirectInterceptor to avoid potential NullPointerException when the output stream is not initialized
apps - 3549 : do n ' t use the parent split pane for plot text , do n ' t use it anymore
updated the jailerMain method to include an additional boolean parameter for fromCli to enhance flexibility by allowing users to specify either a data model or an extraction model
refactor HttpRequest class for better readability to improve maintainability and ease of understanding for future developers
added functionality to store the unread pull message in shared preferences to improve user experience by allowing users to receive a specific pull message
fix for an issue where we do n ' t have special case for instanceof for object .
updated DeltaTime calculation and modified memory calculations in Box2DTest . java , Pong . java , and Pong . java to improve accuracy of time calculations and enhance camera functionality
refactor layout manager initialization and padding handling in ViewPostDetailFragment . java to improve code readability and ensure proper handling of null values
changed log level from trace to warn in CLIService . java to better reflect the severity of the aborted background operation
bug fix : if a method be implement by it be already a abstract method , it print the information about it .
ggb - 2118 : work around ggb - 2184 for ie 10 +
filter user by deviceid in get notification user ( # 2323 )
update base url to point to new srtm _ data _ geotiff interface
updated MotifFileChooserUI to remove property change listeners and enhanced the test case for bug6520101 to improve user interface responsiveness and ensure proper handling of file selection events
change return type of handle method from void to boolean in multiple UI classes to enable callers to determine if the response is successful or not
refactor ` getRuleOptional ` methods to improve type safety and exception handling to enhance clarity and maintainability when retrieving rules by type
added visibility control for transportSpinner in HostListActivity to improve user experience by hiding the transport spinner when shortcut is enabled
added null check for attributes _ field and created two new classes with annotations to ensure proper handling of null values and implement demonstration of annotations
updated backPressed methods to return a boolean indicating success and reordered return statements to improve handling of back press events based on media detail availability
added support for long view index configuration in QueryServices and QueryServicesOptions to enhance functionality for handling long view index configurations effectively
update string format from " V " to " v " in SDRTrunk . java to standardize output format for better readability
clean private key path before use it in test .
simplified the ` diffDropColumn ` method by removing the ` columnPosition ` parameter to streamline the method signatures and improve code readability
updated IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of Version . LUCENE _ 40 to ensure compatibility with the latest testing framework
hbase - 25855 use - d no _ strict _ column _ family = true to disable column family check in hbase - server
[ java ] stop a recording channel with null log subscription id rather than channel to avoid race between start and extend recording .
updated methods to use ` startActivitySafely ` for launching activities and added visibility controls for the voice button view to improve reliability and manage the visibility of the voice button in the application
added a conditional to return early if a single json node is present to improve efficiency by avoiding unnecessary processing for the first element
hbase - 22754 fix typo in procedure description
updated resource bundle application to include default locale and system class loader to ensure correct resource loading across different locales
[ j2kt ] implement normalizearraycreationskotlin pas which try to set the array literal during normalization .
lucene - 1633 : fix regression in persegmentsinglevaluationfaceting ( wrongly increment term enum forward )
fix an npe in the mod metadata when the author list be empty . close # 1160
added a new test class ` OSGiTest ` and modified ` module - info . java ` to require static Jdk . unsupported to enhance support for improved dependency management in Google Gson
refactor service enabling checks into a separate method for clarity to improve code readability and maintainability by reducing duplication
hbase - 27491 fix htable . setautowebflush ( ) to always use autowebflush ( )
fix : properly cast to ` ctstatement ` in ` ctscanner . scan ( ) ` ( # 2936 )
simplefeature : add hasuserdata ( ) method that be useful to check for user data in a simplefeature
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify exception handling by not propagating unnecessary exceptions
updated the RelyingPartyRegistration class implementation to improve reliability and maintainability of the party registration process
added a method to enable logging in JavaCompiler to configure logging levels for better debugging and monitoring
added a new class ` InJavaSourceSet ` to manage Java source sets to enable filtering and hashing of Java source sets based on their names
updated resource loading path in TestGDALParser to use a dynamic file path to enhance flexibility and ensure compatibility with external parser testing
added a new method ` createGetter ` to the ` ReflectionHelper ` class to enhance the functionality of the ` createGetter ` method
removed the conditional check for external storage usage to simplify the conditional logic for better maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` to ` IndexerMapReduce ` and updated related classes to use this constant to control commit behavior in the indexing process for improved performance and maintainability
bug 8789 : allow create volume with id snapshotid without specify a disk offering id
updated content assignment to null and modified assertion message in BaseTestCellComment . java to ensure content is not null and improve clarity of test expectations
added null checks for period and period in date manipulation methods across multiple classes to ensure values are not null to prevent runtime exceptions
added a new file ` Issue382 . java ` that implements server feature for handling specific error types to ensure proper error handling and response testing for specific error types in the application
replaced the custom ` signum ` method implementation with a direct reference to ` annotations ` to simplify code and improve readability by eliminating unnecessary method
added a conditional check to hide the text view when the condition is not met to improve user experience by hiding the UI when the condition is not met
fix : fix bug in astparentconcurrentcheckerchecker ( # 2889 )
[ java ] fixing cast to firefoxoptions type in legacy firefox driver
fix flowingfluid state for liquid , close # 54689
http : / / issues . apache . org / jira / browse / amq - 2902 - prevent intermittent failure
updated time zone from " PST " to " America / Los _ Angeles " to ensure correct localization settings for applications using the latest time zone
[ java ] do n ' t log exist error when distinct but already exist .
updated LuceneTestCase to use systemPropertyAsBoolean for boolean operations to enable different test configurations based on annotation for improved flexibility in testing behavior
updated the logger creation method and logger name handling in SQLEditorSupport . java and SQLExecutionLoggerImpl . java to improve logger creation logic and ensure proper logging output
fix http : / / code . google . com / p / mybatis / issues / detail ? id = 557 : deny access to class
fix for updatepixels ( ) not work on image which have only bufferedimage ( )
update HiveUtilities to include partition data in transactional property verification to ensure transactional properties are correctly included for the table and partition
refactor the conditional logic for determining scroll behavior to improve clarity and maintainability of the overlay handling logic
hhh - 16709 batchbuilder subclass must implement unmodifiablebatchbuilder
improve analysiserror # shouldnotreachhere error message to inform user when unexpected input be unexpected
added a test for spying on a class retains state and created a mock class for state management to ensure that the state variable is correctly configured and returned in tests
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure that SQL syntax is correctly parsed and deparsed for UNION clauses
refactor action execution logic in SecurityUtil to handle null Ugi cases to improve robustness by ensuring that exceptions are thrown when execution fails
added error code handling for audio buffer allocation in OpenALMusic . java to improve error reporting for better debugging
camel - 3443 : fix typo in the reslovestringparameter method . thanks to benjamin graf for the patch .
hive - 23791 : table aggregate should support multi - dimensional decimal scale ( krisztian kasa , review by jesus camacho rodriguez )
updated handling of vendor and device properties to use an Optional for better null safety to improve robustness by avoiding potential NullPointerExceptions when no vendor and device properties are present
updated the assertion to compare the current timestamp instead of a fixed string to ensure accurate comparison of the timestamp for account updates
replaced ` AxialStage ` with ` RocketComponent ` and modified selection handling in ` BasicFrame ` and ` DesignPanel ` to improve type safety and simplify child selection logic
added a new parameter ` -- long - running - time ` to the ` Args ` class for configuring long running time to enable configurable long running time configuration for better performance monitoring
updated priority adjustment in FindRefComparison . java and added new class Ideas _ 2012 _ 05 _ 21 . java to ensure compatibility checks are more accurately and improve class functionality
updated import statements and modified methods in HttpServerProvider , ScriptEngineManager , and FtpClientProvider to utilize ServiceLoader for loading services to improve code maintainability and adhere to modern Java standards
tika - 2279 -- fix for gml3 and deprecate string . class in favor of plain string .
replaced the use of mockit . Expectations with direct assertions inRestClientRequestImpl . java to simplify test assertions for improved readability and maintainability
updated the condition to check for reference database equality before proceeding with the check to ensure that the logic correctly identifies the database reference for unique constraints
refactor Android template configuration logic to return early if asset paths are missing to streamline code and improve efficiency by eliminating redundant logic
refactor assertions in DuplicateCookieTest and SessionRenewTest to use await statements using Awaitility to improve test stability and reduce potential race conditions
added user _ args and timestamp to ChromeTraceBuildListener to enhance command execution capabilities by including additional parameters
substitute the resource bundle with jdk 11 + only .
corrected a typo in the log message from " match limit " to " match order . " to ensure accurate logging of match order functionality
added a new file TheRockMetaDataDemo . java to demonstrate fetching exchange metadata to enable users to access and print exchange metadata for TheRockExchange
changed ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes to ` strictfp ` and added a ` testStrictness ` method to ensure precision conversion operations are optimized and to improve test reliability
simplified the insertion of column names in ColumnStatsSemanticAnalyzer to improve code clarity and reduce complexity in column name handling
added a test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified method signatures in ` BlockStatementTemplateGenerator ` to enhance variable declaration handling and improve code clarity in template generation
added a check for synthetic methods in ` InstantiateStaticClass . java ` and created a test for the static class in ` Bug1282 . java ` to ensure proper handling of synthetic methods and verify behavior through testing
update basePath variable usage to simplify path handling for better readability
added support for pending rescues in IkStepDefinition to improve handling of pending recipes and ensure correct resource management
changed equals and hashCode methods from final to non - final in multiple type classes to allow for easier comparison and hash code generation in subclasses
added a method to retrieve the SyncLevel with a default sync level and implemented a utility method to improve flexibility in configuring sync levels while handling potential errors gracefully
test : flaky testcontrolcommandsstest . testclientpause ( ) ( # 2889 )
added a condition to check if the state is not a recovery step before proceeding to ensure that the recovery logic only executes for valid states
fix bug in ` opencv _ core . java ` that be break the ` create ` function of ` opencv _ core . java ` .
added SDK path handling in AppleBundle and SwiftStdlibStep classes to ensure proper SDK path management during process execution
[ flink - 30613 ] [ blob ] fix transientblobcleanuptask concurrency issue
bug 18425 : correct log message to reflect that static nat rule can not be create at all
updated PasswordEncoder and StandardPasswordEncoder classes to improve password encoding functionality
added conversion of sort and union row types to their desired data type to ensure correct data type handling for query results
betterblockpos : correct javadoc for betterblockpos
updated ServletContext proxy retrieval to use class loader to ensure correct servlet context is used for improved compatibility
refactor version display logic to use a new method for nightly build status to improve clarity and maintainability of version management in the application
added support for OracleDatabase by removing trailing slashes in statement processing to ensure proper handling of potential delimiters and eliminate potential line issues
add a config option to disable nullderef assumensp for null value analysis
use a fixed port number in the test to avoid conflict with other test server
updated BLOB _ SIZE and PLAY _ MARGIN values , modified slider margins , and modified time formatting calculations to improve buffer handling and enhance readability of slider functionality
added a new multifactor authentication provider bypass to the DuoSecurityMultifactorProviderBypassConfiguration to enhance security security by allowing the use of multifactor authentication providers
refactor method signatures and formatting in MaxRectsPacker . java to improve readability and maintainability of the code
[ drools - 4862 ] fix javadoc error ( # 486 )
added help page functionality to the HelpTab class and integrated it into the LooksFrame class to enhance user experience by displaying relevant help information dynamically
added new classes GeocodeProviderFactory and Constants and defined the GeocodeProviderBaseFactory class to provide a standardized way to create geocoding providers in the application
updated import statements for CharArraySet from ' util ' to ' CharArraySet ' to ensure consistency with the refactored package structure
replaced JUnit ' s ExpectedException rule with a new test method and updated exception handling logic to improve exception handling consistency and clarity in unit tests
update GatewayServer to use ` Protocol . GATEWAY _ SERVER _ ID ` and modify object deletion logic in ` MemoryCommand . java ` and ` PythonProxyHandler . java ` to improve clarity and consistency in object handling logic
updated conditions in SegmentsInfoRequestHandler and modified collection creation logic in CollectionsAPISolrJTest to improve handling of document fields and ensure consistency with new configuration setup
updated the calculation of numPredictiveAppCols to account for phone types to improve compatibility with device profiles on other devices
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and simplified the check for subquery input in ` NestedLoopJoinPrule ` to enhance the handling of scalar subqueries and improve code clarity
blockbuildcraft be now a subclass of buildcraft so you can replace it with buildcraft .
updated layout parameters for layout management in DeviceProfile . java to ensure proper layout behavior for target bar layout
change the execution method from ` run ( ) ` to ` start ( ) ` in ` YahooSession . java ` to ensure proper execution of the session management method
initialized the ` ms ` variable in ` HiveMetaStore ` and ` HiveMetaStoreClient ` to null to ensure proper resource management and avoid potential null pointer exceptions
updated display script retrieval to use ` Category . DISPLAY ` instead of ` getDefault ( ) ` in ` Locale . java ` and added a new test case ` bug7079486 ( ) ` in ` LocaleCategory . java ` to ensure correct locale settings for display scripts in different locales
updated import statements and references from ` BASE _ URL _ PROP ` to ` ZkStateReader . CORE _ NAME _ PROP ` to ensure consistency by using the correct constants from ` ZkStateReader `
replaced ThreadLocalRandom with a Random instance for generating random boolean checks to improve performance and reduce synchronization overhead
added a check for launcher status before backuping favorites and icons to ensure the launcher is only available when the backup is ready
updated IllegalArgumentException messages in Cell . java for clarity to improve error handling by providing clearer context for argument checks
add a test base on user forum issue
replaced ` mBodySpace ` with ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class implementation to improve code maintainability and readability
fix fail test due to temporaryfolder . class not find
added multiple logger configurations to the Grasscutter class to improve logging granularity for better debugging
changed access modifiers of ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` from private to static in ` SpanScorer . java ` , and updated related methods accordingly to improve accessibility of the methods and ensure the correct behavior of highlighting functionality
fix bug where overview mode be occur when return home .
rename various assertion classes and constants across multiple files to improve clarity and consistency in naming conventions
added a conditional check for ` args . cacheable ` before notifying a new template to ensure that template notifications are only sent when the cache is enabled
added a new constant ` SCOPE _ SOLR _ CORE ` and updated variable declarations to use it to improve clarity and consistency in scope management within the data import process
added primary key constraint to the CREATE TABLE measurement method and tested it to ensure the database metadata behaves as expected with primary keys
fix -- permissions - config - file argument name ( # 2938 )
refactor session creation logic in ` HttpSessionContextIntegrationFilter . java ` to simplify session handling logic and improve readability
added a new file TestIfWithDeadRegion . java containing a class for testing string retrieval with a dead region to implement a test case that verifies the performance of string manipulation under high - frequency conditions
corrected the spelling of " English UD " to " English USD " in DependencyParserITest . java to ensure accurate representation of used English USD LAS in the dependency parser
replaced the single iteration loop with a try - finally block to disable HighResolutionTimer to ensure proper resource management during concurrent access tests
added a static UI property and modified toast bar behavior based on it to allow users to toggle the visibility of the toast bar based on configuration settings
refactor the return statement in WindowsSecurity to use a try - finally block for resource management to ensure proper resource cleanup to prevent potential memory leaks
updated parameter handling methods in SamlRedirectLogoutHandler and WhitelistLogoutHandler to use putIfAbsent for null checks to improve code clarity and avoid potential NullPointerExceptions when parameters are not provided
updated dialog dialog strings to use localized messages to improve user experience by providing dynamic language support
tika - 2278 -- add detection and detection of poi . xlsx file mime type for tika - ooxml and tika - ooxml - poi . xlsx
do n ' t crash when there be no feature in the backend .
camel - 9195 : camel - eip - documentation - enricher - should not use line break in generated code
do n ' t wait for migration from remove node , mention flag to skip
portaudio : fix null pointer exception when no capture device specify
added WebSocketConfig to ShenyuConfig and refactored WebSocketClient initialization to enhance flexibility and configurability of WebSocket connections
CacheValidationListener to implement ISuiteListener and added methods for handling invoked methods to enhance test execution capabilities within the test suite
updated the content length handling in MoreIndexingFilter to trim whitespace before adding it to the document to ensure that the content length is only added if it is not empty
move terminated latch out of sync to defaultsolverjob to avoid deadlock
[ iotdb - 2151 ] ignore pathalreadyexistexception when concurrent insert a non - exist time series ( # 4977 )
add a boolean check method to the Authz class to enable validation of authentication results
changed access modifiers of methods from public to protected in multiple classes to restrict access and enforce encapsulation within the package
bug 8553 : do n ' t check domainid and isreserved when create a private ip address ( reserve /Allocated )
updated HttpParser and HttpParserTest classes to remove unnecessary test cases and simplified string assignment to improve code clarity and ensure consistent handling of value values
refactored thread initialization logic and removed redundant method calls to improve code clarity and maintainability by consolidating thread initialization logic
added a method to create an external cache directory and created a test class for external storage state to enhance file management capabilities and ensure proper testing of external storage states
[ jbrules - 3708 ] fix mvel type coercion in drools - 2.1
updated log file path handling and improved formatting in LoggingConfig . java to enhance code readability and maintain consistency in log file path management
added exception message to the logging statement in ActionNode . java to improve error reporting by including the exception details
fix issue with convert tel : to number in sip util . convertintto ( string ) return null
updated visibility logic for shared file icon in FileListListAdapter to ensure correct visibility based on file type and folder conditions
deprecated the usage of ` HIVEOPTSORTDYNAMICPARTITION ` in ` HiveConf ` and updated its setting in ` TestTxnCommands3 ` to streamline the usage of deprecated settings and eliminate obsolete code
updated the constructor and configuration overlay handling in ExecuteStatementOperation and Operation classes to improve consistency and simplify the initialization of session context overlay
removed unnecessary imports and simplified method calls in BTCMarketsStreamingAdapters and BTCMarketsStreamingService to enhance code readability and maintainability by using more appropriate data structures
fix junit test after ogr # getdatatype change
remove unused method ` onErrorInStep ` from ` StepListenerSupport ` to streamline code by eliminating unnecessary functionality
refactor wallet class methods for better organization to improve code maintainability and readability
camel - 8461 fixed the issue that camel - netty - http do not support charset .
make testnonblockingapi more readable by use log instead of sys out
fixed error in dbconnectiondialog when row exceed connection list size
add a rule to check if a method have the same name as the enclosing class , and create a rule context for that .
added ExtendedPlatformComponent for handling platform management beans and introduced existing beans for better management management to improve integration with the platform management framework and enhance the handling of managed objects
added SQL string replacement to remove double quotes around quotes to ensure SQL syntax compatibility with SQL standards
updated package paths in BleutradeDtoTest and BleutradeExtendedDtoTest classes to include " org / knowm / xchange / bleutrade / dto / " to ensure proper organization and access within the test classes
refactor TextEscapeUtils to improve code readability to enhance maintainability and simplify future updates
added a filter parameter to the AbstractSpatialFieldType and modified the return statement in the FilteredQuery class to enable filtering functionality based on user - defined parameters
removed progress bar calls when the main form is visible in GpsLoggingService . java to streamline user experience by maintaining progress during the email sending process
refactor inlinks from ArrayList to HashSet and update related methods for better iteration support to improve performance and maintainability of inlink processing
[ tradfri ] remove discovery result when stop
modified the testFilterForPartition method to accept a boolean parameter and modified related method calls to enhance flexibility in filtering operations based on server - side filtering behavior
add ' Abandoned ' status to the workflow statuses in TicketModel and TicketsPage to include ' Abandoned ' status for better visibility control
remove ` ` c ' ' from columnaliasprefix in all platform - related classes
refactor LlapRowRecordReader to use BytesWritable instead of Text for better data handling to enhance data processing efficiency and support binary data formats
feat ( terminal ) : detect jdk 32 - bit jvm on a non - native machine
fix name property in pdfcopy to be consistent between name ( b ) and page .
added support for daemon mode in the reset - alarm command and created a new DAEMON option to enable graceful shutdown in the daemon mode for improved user experience
add a new class FlushIndexTask to implement a performance task for flushing the next buffer to optimize the performance of index writing operations in the benchmark framework
use estimated size for column flush to avoid disk space restriction . patch by jbellis
added support for SEASONS output in MediaLibraryFolder . java to ensure proper handling of additional media output formats
added a new file LocalSocketAddress . java to test IPv6 connectivity to ensure correct handling of local address retrieval and handle potential exceptions gracefully
updated grid size coordinates in GridSizeMigrationTask . java to align grid size points with new configuration requirements
updated method calls to use ` name ` instead of ` getName ( ) ` and ` getField ( ) ` for better clarity to improve code readability and ensure consistent retrieval of field information
added a read - only context context with initialization and validation logic to ensure objects are accessed in a read - only context to prevent runtime errors
updated LookAndFeelCommand . java file to enhance functionality and improve user experience
updated logic for handling last run end in BlockBoxing . java to improve accuracy of last run boundary detection
updated assertion in GracefulStopTest to support both EofException and EOFException to enhance error handling by ensuring more specific exception types are validated
remove unnecessary lock and use remove ( ) instead of the lock . unlock ( )
networkparameters : remove obsolete reference to acceptableaddress in javadoc
removed conditional check for account asset optimization in DynamicPropertiesStore to streamline the handling of account asset optimization logic
add a new constant J9 _ GC _ POLICY _ NOGC and set it to 0 to disable the garbage collection feature for improved performance
added error handling for invalid contract protocol buffers in TransactionCapsule . java to ensure robust error reporting and prevent application crashes due to protocol buffer issues
remove failstrictexception check ( not ready for release ) .
updated resource retrieval and added error logging for missing localization to ensure fallback to English for missing help files and improve error messaging clarity
added a new file ` ProcessorInfo . java ` to manage processor availability and masking of CPUMask to enhance the system ' s ability to manage CPU resource allocation for improved system performance
add - html option to generate html output
logbackloggingsystem : avoid npe when logger . xmllocation be null
refactor HostLevelParamsHolder to use a dedicated method for updating cluster data to improve code organization and maintainability by consolidating logic
updated the SleuthTagPropagationAutoConfiguration and its tests to improve the handling of TagPropagationFinishedSpanHandler based on user configurations
refactor rust dependency type handling to use a switch statement to improve readability and maintainability of the code
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` as parameters to enhance functionality by allowing additional parameters to be passed during OAuth2 login
hbase - 28645 halfstorefilereader do n ' t seek to the first kv in the hfilescanner if not already in use
hhh - 15626 make sure that @ generation time time be always use
nd4j : add test for layerNorm with nan in networknorm ( # 9969 )
refactored the showShareFile method across multiple activities to centralize file operations to improve code organization and maintainability by centralizing file sharing functionality
added a new test class LiquibaseUpdateMojoExecutionTest to validate the execution of relative CLOB files to ensure correct functionality of the update plugin configuration for Liquibase updates
changed the way the proxyType is set in lowercase to ensure consistent formatting for better readability and usability
added a new class ` mod _ MinecraftForge ` that manages the minimum forge forge version and load methods to facilitate forge operations for better mod management and resource management
refactor JdbcDatabaseSnapshot to introduce a new constant and enhance filtering logic based on database filtering to improve code clarity and ensure accurate caching of all table columns
added a new container and created a label with a border color in CSSBorderTest . java to enhance the visual appearance and appearance of the UI components
add retryinterceptor auto configuration to allow override behavior on the retrytemplate
updated superclass constructor parameters from FILL _ PARENT to MATCH _ PARENT to align layout behavior with new design specifications
updated the calculation of parentTaskName to use milliseconds instead of nanoseconds to improve accuracy of task name representation in the application
added error handling for parsing AddServiceRequest input to improve robustness by ensuring invalid input is handled gracefully
simplified the condition for checking if a file is a versioned file to improve code readability and maintainability by reducing unnecessary variable usage
[ giac ] avoid error with when ( type ( x ) = = dom _ list )
update AnonCipherWithWantClientAuth . java file to enhance security by improving encryption methods
added @ Deprecated annotations to ProducerTemplate . java to mark these classes as outdated to discourage their usage in future development
refactor JLayer class for improved readability to enhance maintainability and reduce technical debt
fix flaky test in evictiontest . testallthetime ( ) .
rename variable ` encodeInternal ` to ` saltedPass ` for consistency to ensure variable naming aligns with the purpose of the variable
simplified the method calls for adding and removing global layout listeners in IconRecentsView to enhance code readability and maintainability by reducing redundancy
updated Response class for improved error handling to enhance reliability of response processing
fix : use max _ value instead of min _ value for sstablemetadata timestamp
set preferred size of the SecurityPanel to a small size of its component to improve the user interface by accommodating more relevant components
added checks to ensure replies are not null and non - empty before processing to prevent potential NullPointerExceptions when processing replies
added ` toString ( ) ` methods to ` HitbtcBalance ` class for better string representation to enhance readability and usability of the ` HitbtcBalance ` class
fix ( sql ) : invalid sql syntax for where clause with ' in ' clause
replace return statement to use addrs . toString ( ) instead of a raw string to improve clarity and ensure consistent string representation of the returned list
bugfix # 240774 , make sure open cookie be store in the file object for further use
ambari - 21174 . jsontogrpcapplicationtests be flaky due to incompatible package - level dependency conflict ( dlysnichenko )
reduces the maximum number of energy to what it be currently active
[ java ] make sure tmp output file be delete if it do not exist .
updated the ` BitstampWebSocketTransaction ` constructor to include an " id " field and modified the test cases for fetching trades to ensure proper serialization of trade data and improve test coverage
camel - 14284 : fix issue of incorrect state in replay ( # 1804 )
update citeproc dependency and fix citeproc test
added SQL columns and updated prepared statement statements in MediaTableFiles . java to improve database query efficiency and maintainability by centralizing column definitions
g3d - 353 : show definition for equation in exam , remove feature flag
added a null check for the component in SIPCommTextFieldUI to prevent potential NullPointerExceptions when the component is not initialized
hbase - 13663 introduce caching in hbase - meta scan ( alejandro )
add " q _ test _ init _ for _ minimr . sql " to the setInitScript script to ensure the script is correctly configured for the minimr setup
8274396 : doc of [ strict ] math . floordiv ( long , int ) erroneously document int in @ return tag
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to allows enabling and disabling transient taskbar functionality
[ hotfix ] fix checkstyle violation in accessexecution and archiveexecutionvertex
added scale correction for 3d density in IOSGraphics . java to ensure consistent rendering by adjusting density for different scaling scenarios
rename variable and field related to optional to vararg to improve clarity and consistency in naming conventions
hbase - 25825 add extra exception to regionstatestore ' s info output
refactor assertions in TestClusterUpgradeUtils to use lambda expressions to improve code readability and reduce boilerplate
updated AsyncHttpConnection to improve error logging and refactored related classes for better clarity to enhance async handling experience and ensure proper initialization of the connector
[ ql - v2 ] fix grid layout when title / subtitle be null
added lock mode handling for virtual store in Database . java and removed test cases in TestRowLocks . java to ensure proper lock behavior for virtual store and clean up test cases
better skip amd64 test on aarch64
modify input handling in Scalars . java to support both Integer and IntValue types to ensure proper conversion from various input types to strings for further processing
createtablestatement : improve error message when specify only one primary key
added conditional logic to set drawable resources based on LMP status in multiple classes to improve app visuals for devices running the LMP theme
show an error message when there be an exception while query a flutter view ( # 2373 )
added multiple ` HeadersConfigurer ` methods to the ` HeadersConfigurer ` class to streamline header writing functionality for improved readability and functionality
refactor ObjectEnumerableAssert for improved clarity and organization to enhance maintainability and readability of the code
[ java ] renaming and move to more generic class for test class .
added type attribute to @ aggregateroot to fis test failure
added support for handling Python prebuilt libraries in the Binary and InPlace binary classes to enhance the functionality and maintainability of Python dependency management
added client authentication handling to NetServerOptions and related classes to enhance security by ensuring proper client authentication settings are used
updated REPLDIR and FUNCTIONS _ ROOT _ DIR directories to include system variable " user . name " to ensure consistent system - specific directory paths for repl operations
updated task view visibility checks and improved conditional logic for primary and secondary task views to enhance code clarity and ensure correct task view visibility handling
no jira - fix unit test which fail on slow ci server
removed the clearAll ( ) method from DataTableTopComponent . java to improve data management by eliminating unnecessary operations
bugfix : fix npe in modelprocessable and releasingmodelprocessable when use flowcontroller
[ flink - 22085 ] [ runtime ] fix pipelinebuilder . dealwithconsumeallchildren to properly set exchange num
added ClassLoaderHandler import to mmm and ppp modules to enable the use of ClassLoaderHandler for improved class loading flexibility
* when change the solution , it will now only update the bestsolution instance on demand
added JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive data during JSON processing
changed the condition from checking if throwable is null to checking if it is not null to ensure that throwable is not null to prevent potential errors
refactor query info retrieval in QueryTimeManager for clarity to improve readability and maintainability of the code
update auto workbench ' s default direction to gui _ only . close # 2373
fix gdsatext decoder ( fix # 484 )
renamed ` timeColumnName ` to ` incomingTimeColumnName ` and ` timeFieldSpec ` for clarity to improve code readability by explicitly indicating the incoming time column name
replaced multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` with a single call to ensure consistent handling of block production wait operations
add initializabletypes to facilitate lazy initialization of container
add tag to longtasktimer and improve observability
changed the type of ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and modified conversion logic in ` AdaptiveFetchSchedule . java ` to improve precision of delta handling and ensure consistent conversion logic
add log for deprecate fragment expression in thymeleaf format ( # 2845 )
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread - safe access to the attributes map
http : / / issues . apache . org / activemq / browse / amq - 2840 - copy message before send it back
added new color constants and improved extractInto method to handle fallback color extraction to enhance color processing logic and support for dark text hints
add data folder accessibility check to srcFolderPathList in SketchBuilder . java to ensure srcFolderPathList contains only the visible data folder
updated the ` appendContent ` method to include a ` includeTitle ` parameter and replaced ` TextUtils ` with ` StringUtils ` for title handling to enhance flexibility in displaying note titles based on build configuration
removed initialization of sessionRegistry in ConcurrentSessionControllerImpl to simplify sessionRegistry initialization process
updated the connection retry logic to log errors on connection failures to improve error handling and provide clearer logging for connection failures
updated proxyFactory from using CglibProxyFactory to Proxy in multiple test files to utilize the correct internal Javassist implementation for improved proxy handling
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` for thread management to improve thread management efficiency by using a more efficient collection framework
modify exception message formatting to include the destination address to improve error clarity by providing more informative error messages
added a check to determine if the view directory is under the repository directory to improve error handling by indicating the view directory is under the repository
remove jabref tab header area icon until drag and drop ( # 4495 )
added class pointer options for compressed class pointers in TestDumpAndLoadClass and TestDumpAndLoadClassWithException to ensure proper handling of compressed class pointers during tests
peer : do n ' t log an error if it be in active or replay state
deleted the ConnectionHook . java file to remove unused code to simplify the codebase
solr - 12313 : remove testinjection . waitforreplicasinsync that be never use .
fix camel - swagger - java test after the previous commit
updated version handling in ApexLanguageModule and added hasNamespaceGuardedAccess method in TestAccessEvaluator to improve compatibility with external version and enhance access evaluator functionality
lucene - 8181 : fix javadoc warning in core class .
refactor aggregate engine to use a thread pool for better resource management to improve performance and scalability by preventing the use of a fixed thread pool
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve memory management and performance of WebSocket connections
added scrolling functionality for thumbnails in UploadActivity to ensure proper scrolling behavior for thumbnails in the application
fix ( sql ) : fix sample by on timestamp override by other column alias ( # 1651 )
refactored animation handling in LauncherAnimUtils and added transition animations in LauncherStateTransitionAnimation to improve animation performance and responsiveness during state transitions
added a conditional to disable the default user agent in HttpClient to ensure proper handling of user agent configuration
added pubsubhubbub functionality to FeedRefreshUpdater and ApplicationSettings to enable or disable pubsub subscription based on application settings
changed the access modifier of the finalize method from public to protected to enhance encapsulation and restrict overriding capabilities
update stub jar to identify synthetic class instead of anonymous class
add dspacereapp a web app to be able to run in browser .
added null check for leftTableAlias and a method to retrieve its alias to ensure table names are present and provide clearer error handling for missing column names
[ flink - 17654 ] [ datastream ] add description for trigger key in jobgenerator
refactor transaction broadcast logging to use warning messages instead of info messages to improve error handling and provide more informative logs for transaction notifications
add some test case to basicmaptest # testputifrequired since it be not thread - safe .
enabled and changed the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` to ensure proper configuration for rcfile optimized writer behavior
added a new enum TlsClientCertPolicy and refactored related logic to use it to improve client certificate handling logic by utilizing a common factory method
simplified the subscription message handling in KrakenFuturesStreamingService to improve clarity and maintainability of the code
added headers support for WebSocket protocol management in the WebsocketRoutingFilter class to enhance the flexibility and functionality of WebSocket handling based on request headers
hive - 25856 : add debug log for hivequeryresultset ( mithun radhakrishnan via sushanth sowmyan )
adjusted the formatting of dimensions and label formatting in HolidayEventFormatter . java to improve readability and consistency in the representation of event dimensions
updated test methods and logic for ignoring inner classes in FinalizePrivateFields to improve clarity and functionality of inner class fields during testing
updated UnexpectedJobExecutionException class to improve error handling clarity and maintainability
deleted the file ` jdk . internal . loader . macosxutils . java ` and deleted the ` buttonShouldBeOpaque ` variable from ` AquaLookAndFeel . java ` to streamline the codebase by removing unnecessary functionality
updated DrillSidewaysQuery and DrillSidewaysScorer to use maxCost instead of maxFreq for better clarity and functionality to improve handling of document sets and ensure correct maximum cost calculations
added classRegsitry mapping for GeoDegeneratePath to support dynamic class generation for GeoDegeneratePath
removed the pre - fill functionality from multiple pool classes to simplify the object initialization process by eliminating unnecessary dependencies
added a check for the ` isInLauncher ` flag in ` TaskbarLauncherStateController ` and updated the state of ` TaskbarStashController ` to ensure taskbar state is updated correctly based on the current launcher state
updated the handling of style checks in CascadeDeleteVisitor to ensure robust null checks before removing styles to avoid potential NullPointerExceptions
refactor GuiUtil methods to use a unified setSize method instead of setMaximumSize for better flexibility to improve code maintainability and facilitate better size management
refactor icon assignment logic in FileTreeViewHolder . java for better readability and organization to improve code maintainability and ensure correct icon display based on file types
[ gr - 37684 ] fix unstable test when runtimeenvironment . getqualifiers ( ) return null
fix : thread safety issue in xmlreporter
add a test class for native probability function query runner that be n ' t support by nativeworker
fix log4j2 - 215 - shutdown thread must be deregister before shut down container
svm : add drop temporary table after use to sybase
andreastolftolfsen : ignore small unit test that fail in htmlunit
updated multiple Java files related to Solr and XML processing to improve code structure and maintainability
refactor LinksIndexingFilter to improve code readability to enhance maintainability and simplify future updates
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability of memory allocation logs for better debugging
make sure adplaybackstate be not updated if there be no period
added a suppression warning for the UndefinedEquals method in MultimapSubject . java to improve code clarity and maintainability by suppressing warnings for undefined equality checks
changed the string resource used for frequency display from deg _ text to unit _ hz in WaveGeneratorActivity to improve visual consistency of frequency display in the wave generator
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
replaced TreeMap ' s putAll method with a direct instantiation of includedLabelSets to simplify code and improve performance by avoiding unnecessary method calls
[ fix ] [ runtime ] avoid npe when load flat vertex format
added tracing tags for gRPC messages in multipleinterceptor classes to ensure consistent tracing behavior when handling gRPC messages
updated the handling of time zones in ScheduledTrigger . java to improve clarity and consistency in time zone representation
added AsyncBucket , InMemoryExtension , and updated ConfigurationBuilder to use it to implement additional functionality for handling async and in - memory bucket operations
update test class directory handling to utilize regex pattern matching to improve robustness of test execution when class paths are not found
removed unnecessary whitespace in AbstractConnector . java to improve code readability and maintain consistent formatting
rename OngoingStubbing class for consistency to improve code clarity and maintainability
added a web server parameter to the daemon class and modified related methods to handle it to improve server management by allowing the use of a web server based on configuration conditions
renamed ` productConstructor ` to ` constructor ` and updated its instantiation in ` HttpClientUtil . java ` to improve clarity by explicitly indicating the variable ' s purpose in the constructor
camel - 8193 fixed the issue that thread allowlist be not be clear when remove from the configuration ( # 8193 )
changed the method call from ` setOutputSource ( outputSource ) ` to ` setItemWriter ( outputSource ) ` to ensure the correct item writer is used during tests
fix for dmn bug where overlap policy be not be find
add a test for sliding window accumulator ( # 1885 )
added conditional check for ` allAppsDirty ` before binding all apps and improved logging message format to ensure apps are only bound when necessary and to provide clearer log output
camel - 16400 : camel - core - filewatcher : do not start service on teardown
Removed unnecessary spacing in import statements and formatting to improve code readability and maintainability
8048549 : [ macosx ] disable usage of system menu bar if awt be embed in fx
fix fall fall behaviour for item and player location
refactor query logic in SimpleJpaRepository to utilize CriteriaQuery and applySpecificationToCriteria for improved clarity to enhance code readability and maintainability by simplifying the query logic
added timestamp and parent hash fields to the builder in BlockUtil . java to enhance functionality to support genesis block arguments
simplify safepoints by not generate loop safepoints a oppose to graal
hbase - 23352 fix potential npe in rsgroupinfomanagerimpl and rsgroupprocedurememberrcs
change access modifiers of ArtifactResolver class and method declarations from package - private to public to allow external access to these classes for better functionality and usability
stop thread during disposal to ensure proper thread management and prevent potential interruptions
throw illegalargumentexception when try to indexwriter with a negative number of doc
added state management for the login feature in LoginActivity to ensure proper login behavior when the login state changes
pumptest : add ability to reverse the order of uuid in pumptest .
solr - 2809 : add omx thread pool and http client support for loadbalancer and zombie server
updated the order value from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy . java and added unit tests in DefaultAuthenticationServiceSelectionStrategyTests . java to ensure correct ordering behavior and validate the authentication operation functionality
added Jetty server configuration and handler setup in TestJNDI . java to enhance JNDI functionality and enable custom handler functionality
hive - 23702 : fix a bug in theDynpartitionoptimizer ( david mollitor , review by gopal v )
replace instance check for NioEventLoop with true in FileStreamChannel . java to simplify event handling logic by directly returning true
fix setnumnulls to handle case where the new row count be large than the old one
camel - jbang - export to support < kamelet > command such a ` camel - kamelet ` .
updated OSMJob to handle OpenStreetMap authorization and error messages to improve user feedback and ensure proper authorization during uploads
[ fix ] clean up some print statement from jdk 1.5
added clientAuth property and related getter / setter methods in IoTDBRestServiceConfig . java , and updated sslContextFactory . java to support client authentication functionality in the service configuration
fix parent _ field _ be _ not _ null when inject mock candidate
make bloomuriuniqfilter serializable , remove unnecessary system property
updated cursor adapter from false to true and added a preference for refreshing in TweetPager to enable refreshing functionality for improved user experience
updated intermediate header height ratio from 1f to 75f to improve layout responsiveness for better user interface
replaced the import of RuntimeEvent with RecompilationEvent and created RecompilationEvent class to unify event handling for improved code clarity and maintainability
ambari - 21190 . add host _ sys _ prepped property to the configuration of ambari agent agent . ( mpapirkovskyy via srimanth )
modified the ` include ` method to include a boolean parameter for logging all unknown file formats to enhance functionality to allow conditional logging of unknown file formats
fix issue with forward slash on file picker page ( http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 45528 )
added scoring functionality to the StaticPipeline class using properties to enhance the pipeline ' s ability to process entity scores dynamically
updated file name handling and modified Whoops configuration to enhance file path accuracy and enable / disable functionality based on application configuration
[ geos - 8042 ] improvement to catalogrepository to lookup exist store , return null if not in the cluster
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
rename ` MultiLineTests ` to ` MultiLineGridLikeTextTests ` and add new test classes ` MultiLineJaggedTextTests ` to enhance testing capabilities for multi - line text and improve focus handling in the application
( chore ) camel - jms : another test that be still fail on slow ci server
remove unused writeMeasurementScheams list from TsFileWriteAlignedWithTSRecord and TsFileWriteAlignedWithTablet to simplify the code and improve maintainability by eliminating unnecessary data
updated loop condition and actual memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve accuracy of memory usage measurement during testing
updated logging library paths from " slf4j - log4j12 - . jar " to " slf4j - reload4j - . jar " to ensure compatibility with the latest logging framework versions
[ hue ] enable osgi test ( # 15834 )
updated package structure for various activities classes from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` to organize activity - related classes under a more appropriate project structure
disable broken test until we can fix the problem
added a constructor to the PullRequestMergedEventsStream class that reads the Pinot schema from a file to facilitate the processing of merged events by reading the Pinot schema directly from the file
updated method signatures in AbstractExpressionPart . java to improve code clarity and maintainability
[ hotfix ] fix checkstyle violation in taskslot
change the listener for close from fire _ exception _ on _ failure to close in netty - websocket
added lock release handling and logging in MoveTask . java to ensure proper cleanup of locked locks and improve error handling during lock release
replaced usage of ` Properties ` with ` ResourceBundle ` for loading GEM _ PATH and RUBY _ VERSION to enhance flexibility and improve resource loading in the JRuby backend
transaction . receiveaddress ( null ) should be use byteutil . empty _ byte _ array instead of constant zero _ address
move classInfo to a separate variable to make code easy to read
introduce temporary directory to prevent spurious failure
fix : add new google - cloud module support for datastream ( # 501 )
added a bundle configuration to FileDisplayActivity to allow for additional data during file operations
particleemitter . emitparticle ( ) should not stop if null particle ( particle be null )
updated expect statements in AmbariManagementControllerImplTest . java from 2 to 3 cluster names to allow for a longer cluster version and improve test reliability
removed the nullable attribute from the database column and added handling for NoResultException to improve data integrity checks and handle potential exceptions for ticket records
updated Bug4823811 . java file to fix issues related to bug 4823811
added a path reativizer function to process file deletion arguments to improve file handling by utilizing the path relativizer for file deletion
fix ( deconz ) : ensure bridge reconnection be suspend before request full state ( # 6748 )
refactor ShibbolethCompatiblePersistentIdGenerator to use a new attribute property handling mechanism to enhance flexibility in attribute management for principal IDs
corrected the formatting of the @ Inject annotation in RequestValidationService . java to improve code readability and consistency
refactor keyboard hiding logic to use a Bundle for logging messages to improve code maintainability and readability by consolidating logging functionality
removed unnecessary line breaks in FileNodeProcessor . java and refactored MManager . instance ( ) calls in MTreeTest . java to improve code readability and maintainability by eliminating redundant operations
refactor NavigableMap and NavigableSet classes for improved functionality to enhance data handling efficiency and maintainability
move testslurpfile ( ) to itest , since not quite a false positive .
regenerate client with updated copyright year ( # 4382 )
refactor span retrieval to use a helper method for improved readability to enhance code maintainability and clarity by encapsulating span retrieval logic
added date handling to ` ETypeConverter ` and updated ` DataWritableWriter ` and ` ArrayWritableObjectInspector ` to support date types to improve date handling capabilities and ensure compatibility with Parquet
replaced hardcoded string splitting with regex pattern to improve readability and maintainability of the code
apps - 162 use custom stringparser to convert positive / negative to double
refactor column count validation logic in SemanticAnalyzer . java to improve clarity and maintainability of column count validation
refactor WANDScorer . java to improve handling of document boundaries and remove unnecessary assertions to enhance code clarity and maintainability while ensuring correct behavior of document retrieval
refactor Correspondence class to improve code readability to enhance maintainability and simplify future updates
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to improve code clarity and reduce potential namespace conflicts
initialized ` curPixVal ` to a default value and created a new test class ` WhiteTextColorTest ` to ensure consistent pixel value handling and validate the rendering of white text on a black background
change the method name from subTypes to supertypes and update related logic to improve clarity and consistency in handling supertypes in the biome dictionary
corrected the spelling of " withinTolerance " to " exceedsTolerance " in the BoundedLocalCache class to improve code readability and maintainability by using a more descriptive variable name
added TestStabilityRule imports and updated the @ Ignore annotation to use @ Stability annotations to enable test stability for local and parameterized configurations
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
trim and check log file suffix to ensure it is not empty before proceeding to improve error handling by avoiding potential issues with empty log file names
refactor PythonBuckConfig to improve configuration handling to enhance clarity and maintainability of the code
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryName ` methods in ` ShadowPackageManagerTest ` to ensure correct functionality of system shared library names management
improve meiligao power command ( fix # 497 )
fix a potential npe in powerDiode . getpowerbattery
updated cache management logic in PrefFragment . java to use a AsyncTask for triming cache to improve user experience by enhancing cache management efficiency and responsiveness
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 773 )
replaced return values with NotAuthorizedException in multiple classes to ensure proper handling of authorization errors
refactor method signatures and introduced a new abstract method schedulePeriodically to improve code readability and maintainability by reducing redundancy
updated the file item retrieval method in FileDisplayActivity to improve user interaction by ensuring the correct file path is displayed
added a check for multiple input streams and improved error handling in StreamUtil . java to enhance functionality and provide clearer debugging information when processing streams
hive - 15825 : hive metastoreclient should not pass environmentcontext to createtable ( ferdinand xu , review by sergey shelukhin )
fix bug where fragment start fail but not start
refactor indentation handling in multiple block parser classes to improve readability and maintainability to enhance block parsing logic logic and ensure proper indentation mechanisms
added network WiFiStatusReceiver and ChangeWifiStatusEvent classes to handle network status changes to enable users to change network status directly from Wi - Fi
allow control frame to be mark a final , control should not be mark a final .
added a visibility setting for the collapse handle in WidgetsBottomSheet . java to improve user interface by managing the visibility of the handle
added two new files , Issue475 . java , and XSS . java , to handle HTML and JavaScript request to address Issue 475 and ensure proper escaping of special characters in the input data
graphicalio : fix edge case that occur when there be no unit to scroll
changed the condition from checking the size of contract lists from ` > 1 ` to ` ! = 1 ` to ensure correct handling of contract lists in the application
added methods for adding and putting enums in JsonArray and JsonObject classes to enhance functionality and ensure null safety for enum values
added hashCode method in IPPPrintService and created TestRaceCond class for validation to ensure consistent hashCode implementation for print services
move db2i and db2z dialect instance variable to superclass ( not use ) .
bugfix : do n ' t connect when transaction . getplatformfee ( ) > 0
modified BatchUpdateException , PreparedStatement , and Statement classes to improve exception handling consistency across the application
avoid spurious wakeup of input buffer for encryption
removed public access modifier from multiple classes in the codebase to improve encapsulation by restricting access to internal data
added import statement for Retrofit in Part and PartMap classes to enable the use of Retrofit functionalities in the code
updated JsonBuildHelper and ParamsBuildHelper to handle JSON parameters more effectively to improve JSON handling and enhance parameter management in the API
added a new constant ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to ` AbstractFloatingView . java ` to support additional taskbar functionality in the application
fix : update gapic - generator - java with mock service generation fix ( # 344 )
update alpha calculation logic in ClipAnimationHelper and add hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on task states
removed a parameter from the createRenderScript method call to simplify the script creation process for better usability
whitespace change to trigger full ci build ( incl . regression test )
add system bundle check , we can now activate all plugins in one bundle .
hbase - 26002 fixed checkstyle issue in integratortestsparkbulkload ( # 4675 )
replaced a random double value of 0.00001 with a constant value LOW _ FALSE _ POSITIVE _ RATE in the KeyChainGroupTest class to improve readability and maintainability of the filter logic
refactor configuration handling in Overview . java to use a unified configuration object to enhance code clarity and maintainability by standardizing configuration object usage
cloudstack - 2120 : fix findattache call to incorporate actual code review
added null check before processing the value in DefaultRecordStore to avoid potential NullPointerExceptions when the value is null
kvm : improve error message when add host fails
improve error message for ` ` no name ' ' attribute in paramaction
updated import statements and constructor parameters in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl classes to enhance clarity and consistency in mock handling throughout the codebase
[ java ] strip out method params in the method name to allow for easy matching of the method name .
updated VERSION _ NAME and VERSION _ CODE for the new version to reflect changes in the application version for better tracking
mow - 162 set allowed command only once per geo to avoid circular dependency
change symbolization option key to be more generic , add label and graphic resize option
ggb - 2118 fix : clear height of popup when overlap feature be detect
updated string literals from " Table : " to " Table - " in ValidationSuite . java to standardize terminology for consistency and clarity
added a starting window listener to manage task launch events to improve task management and support application behavior during task launch
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code documentation and maintain consistency with inherited methods
updated exception messages in CheckPackageAccess . java to specify PackageAccess and PackageDefinition security exceptions to improve clarity and accuracy of error handling in package access security checks
increase await termination time from 30 seconds to 90 seconds to allow more time for thread execution to complete before proceeding
changed the type of loggingEnabled from boolean to Boolean and added a null check before setting it to allow logging to be disabled only when it ' s initially disabled
added @ JsonIgnore annotations to the Schema class to prevent serialization of sensitive data during JSON processing
testnontxindexbuilder : increase timeout ( 10 second ) to 10 second
lucene - 5954 : correction of good score on snbc to good fit on max score
refactor CheckDatabaseHelper to separate CheckHelper controllers into separate CheckHelperControllerModule and CheckHelperAuditModule to improve clarity and functionality by integrating audit logging capabilities
updated the Prototype class implementation to improve the functionality and maintainability of the profile management system
added a check to assign a default value of tableIsTransactional to ensure the table is transactional state when it is not already defined
[ java ] remove unused writefragment method in recordingwriter for good performance .
fix # 181 - caffragment should return negative cue instead of negative cue
[ incubator - kairos ] fixed the test case by group by alias be incorrect .
updated currency pairs in VaultOfSatoshiBaseService to reflect the current currency standards and improvements
hhh - 13663 fix fail test on oracle
updated import statements for KafkaSender from Kafka11 to KafkaSender in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to align with the new package structure for better clarity and maintainability
added integration tests for the GWT binary build process and created a new class A to ensure that the build process times out on heavily loaded machines
updated visibility logic for loading cause labels in BrowserContentPane and SQLConsole classes to improve user experience by ensuring the loading cause label is only visible when necessary
fix enhancedrandomimpl # getrandomvalue ( ) throw npe .
refactor DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to utilize XMLSecurityPropertyManager for better configuration management to improve maintainability and readability by centralizing security property manager management
added default methods to interfaces and implemented them in subclasses to demonstrate inheritance and method overriding with default interface methods
updated return statements in SqliteFieldPredicateView to use GLOB instead of LIKE for handling SQL queries to improve clarity and functionality by using a more robust data handling approach
@ deprecate the public api a it should not be use
fixed - load script in redis cluster do n ' t work if it ' s in a master node ( regression since 3.16 . 1 ) # 5388
remove dead code and replace field volatile with static object .
updated debug log statements to use descriptive names instead of descriptive strings to improve log readability and maintainability by using descriptive names
fix a problem where we do n ' t retain the proxy packet before send it to targetdispatcher .
added a new constant for HTTP server handlers in ExecConstants and updated thread pool initialization in WebServer to allow dynamic configuration of thread pool size based on user - defined settings
replace the handling of shortcuts to manage removed shortcuts and shortcuts more efficiently to improve shortcut management and ensure proper deletion of unpinned shortcuts from the workspace
remove unnecessary check for non - string value in conversion service call
removed case handling for home button in DetailFragment to streamline user experience by eliminating unnecessary navigation
added a check for AndroidMarket when includesPlayServices to ensure compatibility with Android market handling logic
fix ( table ) : fix parsing of table contain column that follow a space ( # 887 )
added bridgingHeader property and related methods to NewNativeTargetProjectMutator and related classes to enhance the functionality for handling bridging headers in the native target project
replaced ` declared ` with ` unused ` and updated source path handling to improve clarity and consistency in handling unused methods and source paths
added diamond detection functionality and logging for redundant arguments to enhance type safety and diagnostics during inference processes
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` onStartSendRequest ( ) ` in multiple classes to standardize the method naming for better readability and maintainability
added import statement for utility functions and registered it in SolrCacheHolder . java to enhance logging capabilities for better tracking of cachemetrics
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error management by ensuring authentication exceptions are properly propagated
modify the condition checking for zero in the float comparison to ensure accurate detection of zero difference between two float values
added configuration for " logback . dev . xml " in JoobyMojo and Main classes to ensure proper loading of logback configuration files
added a new class JaasEventCheck to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent events to enable event handling for successful and failed authentication scenarios in the Jaas authentication process
refactor view animation logic to use a list for improved readability to enhance code maintainability and streamline animation handling for visible views
updated ` ConjunctionSolrSpellChecker ` to use ` equals ` for string distance comparison and added a new test class ` ConjunctionSolrSpellCheckerTest ` to ensure consistency in string distance comparisons and improve exception handling for non - identical strings
replaced HashMap with Map in ShadowSystemServiceRegistry . java to improve data structure usage for better performance
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : increase agent script timeout to 300 second ( # 4568 )
updated JDBC table parameter handling in AbstractJDBCConnectorProvider . java to ensure consistency and correctness in naming conventions for database tables
updated SQL update references from " sqlUpdateAUP " to " sqlUpdate " across multiple classes to ensure consistency and accuracy in SQL update syntax
replaced the synchronized map implementation with a synchronized method for creating schema types to improve thread safety and reduce contention on the schema type cache
updated header handling logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy by preventing duplicate header additions
latticedemo : ignore a test that relies on files available within CMU
add directory creation for storage in TestCollector to ensure storage directory is available for testing purposes
set chunked streaming mode in StarTreeJobUtils to optimize resource usage for processing requests
add new syntax checker classes and corresponding test for the new syntax checker class to enhance functionality and ensure proper functionality of type checking in the schema
hbase - 27452 update to protobuf 0.4 . 0 ( # 557 )
added a test for handling recursive structure in BeanPopulatorTest . java and created a new Node class with getter and setter methods to ensure proper exception handling when populating beans with recursive structure
added IOException to the getRemoteName method signature to handle potential IO exceptions during remote name retrieval
updated exception handling to include IllegalArgumentException and modified client creation in multiple classes to improve error handling and standardize HTTP client creation
refactored WebSocketConnection and ExplicitDemandTest classes to enhance code clarity and maintainability
added support for aspect - J method security interceptor and updated related bean registration logic to enhance security functionality by allowing aspect - based access and ensuring correct bean registration
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by implementing proper hostname verification for SSL connections
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test case in ` OHLCSeriesTests ` to enable removal of an item and ensure its correctness through unit testing
fix issue with race condition in client schema join
replaced the initialization of ` jointEdge ` with a loop to destroy it to streamline the removal process of joints when it is no longer needed
remove unnecessary search ( search for phone number ) .
[ flink - 23054 ] [ test ] make package visible for testutils . source . reader public
removed redundant null checks for document and parent in DocumentsStorageProvider . java to streamline code and enhance readability by eliminating unnecessary checks
added hook and java hook definitions to the cucumber runtime package to enable execution of before and after methods within the Cucumber framework
refactor flushIfDeadlockRisk method to encapsulate sync handling logic to improve code organization and reduce redundancy
updated ` setExoOptions ` method to accept a boolean parameter for allowing TV compatibility to enhance flexibility in setting video options based on live TV
added code to remove specific user and role from the identifier collection to ensure proper handling of roles in the DMR decoding process
added a constant INVISIBLE to the Color class and modified the toString method to improve code readability and consistency in color handling
updated the logic for setting null handling in CountAggregationFunction and added a new test for total count with null handling query option to ensure correct handling of functions and improve test coverage for query optimization
initialize the deep variable in InternalTransaction . java to ensure a default deep state for transaction management
escape xml name in streaminitiation to avoid potential xxe vulnerability
updated file initialization logic to use a configurable work directory to improve flexibility in specifying the directory location for benchmarks
added functionality to mark rules as deprecated in RuleSetFactory to ensure that deprecated rules are properly marked as removed in the future
switch to jmp to use codebuffer . position ( ) instead of create a dummy label
initialized minStamp and maxStamp with static final constants in TimeRange . java to improve code readability and ensure allTime checks are consistent
renamed BitDocIdSet class and updated related references to improve clarity and maintain consistency in naming conventions
refactor metric JSON handling into a separate method called emitMetricsJson to improve code readability and maintainability by reducing duplication
updated MIME types in DetailFragment and modified GalleryActivity to use mActivity instead of attachment to ensure proper handling of media types in the gallery functionality
fix tank drain when player be in remote
updated CsharpLibrary to handle the case of RuleAnalysisLegacyBuildRuleView to improve compatibility with modern build rules by ensuring proper path resolution
added support for xmpp message to be send to pep service . jm - 215
check that runtime be not null before initialize intrinsicgraph ( graal - 490 )
fix metric windmill refresh active work even when there be no windmill active metric
pdfbox - 2576 : avoid outofmemoryerror when we find the last object
added constructors to LwjglAppletApplication and modified canvas initialization in LwjglApplet to enhance application notification handling and ensure proper canvas lifecycle
simplified the string representation of DockerClientConfig in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve code readability and reduce redundancy
refactor ` doPostAuthentication ` method to streamline password policy application logic to enhance clarity and maintainability by consolidating password policy handling logic
refactor Int2ObjectCache . java for improved performance to enhance efficiency in object caching operations
added a new private String field ` resolveFromAttribute ` and updated its usage in ` LdapUtils ` to enable dynamic resolution of LDAP attributes in the application
refactor Readable class implementation to improve code readability and maintainability
updated the file loading mechanism in JsoupNonVisualRegressionTest . java to use TestSupport . WITH _ FONT to improve font handling and simplify the test execution process
added share icon to the menu and restructured the icon resource in CaptureActivity . java to improve clarity and consistency of the share menu item appearance
updated JVM version checks to accommodate different Java versions to ensure compatibility and support for Java 9 features in the application
fix is _ jdbc41 to handle non - jdbc 41 compliant driver .
refactor GenericContainer class to improve structure to enhance maintainability and readability of the code
replace Set with ArrayList for filteredList in Enclosed . java to improve performance and memory efficiency by using a more efficient data structure
added multiple @ Override annotations in CentralAuthenticationServiceImpl . java and ImmutableAuthentication . java to ensure proper method overriding and improve code readability
reordered variable declarations in ChartProvider . java to improve code readability and maintainability
fix ` ` open database ' ' dialog to work dir with empty path .
modified JavacParser to return an empty list instead of a block statement to streamline the code by eliminating unnecessary empty block creation
added functionality to find users by pasting a specified date in the JPA query to enhance user querying capabilities by including user creation date
updated Test15FloatJNIArgs . java file to improve test clarity and maintainability
replaced hardcoded version strings with dynamic interpolation forSquared values to improve readability and maintainability of the code
nifi - 7092 fixed stringindexoutofboundsexception in mockprocesscontext . decrypt ( )
[ java ] add ensurenotreentrant ( ) to archive a we do n ' t need to protect it .
refactor dependency merging logic to check for null before merging to improve code safety by avoiding potential NullPointerExceptions
added a timeout annotation to several test methods in SslBytesServerTest . java to allow more time for tests to complete successfully
fix typo in peer . connect ( ) javadoc . resolve issue 362 .
added new methods to RealtimeIndexingCoordinator , RealtimeSegment , and StreamProviderConfig to enhance index segment handling functionality in the indexing process
modified FailureWatcher to check if exportedData is null before calling writeTo to improve null safety and prevent potential NullPointerException during data export
updated popup positioning and popup visibility logic in RecyclerViewFastScroller . java to improve responsiveness and ensure proper popup visibility handling
updated error message formatting and added a method to check for tool window instantiation to improve clarity of error messages and ensure proper handling of tool window instantiation
wrap the prevent sleep button on non - windows platform to avoid that it flicker .
updated import statements from ` javax ` to ` jakarta ` to comply with the latest Jakarta EE specifications
added support for cropping window sizes based on vertical bar layout to improve layout consistency and responsiveness in different device orientations
added fullscreen exclusive mode functionality to XWindow and XWindowPeer classes to improve window visibility management and security checks
fix stringindexoutofboundsexception when parse played duration
added credential handling methods to DagUtils for MapWork and ReduceWork to enhance credential management and improve code modularity
( chore ) camel - base - engine : use entryset to store additional info
trim whitespace from thread name during setting to ensure consistent thread identification by removing leading and trailing spaces
updated the error message displayed in the GpsMainActivity to specify that the next point is not logged to a file to improve clarity and understanding of the error message
[ hotfix ] fix checkstyle violation in job
added a new abstract class ` Unused ` and a test method ` testUnusedType ( ) ` to demonstrate the use of the ` @ AutoValue ` annotation for better type safety in the code
ambari - 21190 . upgrade dummy - heartbeat to v1.7 . 0 ( rlevas )
deleted EventReaderDeserializer and EventWriterSerializer interfaces to remove unused interfaces to streamline the codebase
changed the return type of the performJoin method from GenericRecord to List of GenericRecord to allow handling multiple output records efficiently within the join process
updated the maximum delegate lock period logic and related assertions in ProposalUtil and WalletTest classes to allow for more precise control over the delegation lock period and improve code clarity
fix a bug that could cause the nics to be scale down due to null network rate .
camel - 14263 : camel - cmc should not use service without name a it should use reflection .
updated configuration retrieval to check for " seed . node . ip . list " before processing addresses to enhance flexibility in processing IP addresses and improve configuration flexibility
set the default value of hazelcast . client . tpc . enabled to false by default
upgrade swagger - ui version for cve - 2019 - 17495 ( # 7902 )
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality of big integer operations and facilitate modular arithmetic
refactor the handling of the name in NamedObjectList . java to improve clarity and structure to enhance the readability and maintainability of the code logic
hive - 13080 : querycompactor should clean up empty table directory ( prasanth jayachandran review by sergey shelukhin )
refactor AsyncCache and Cache classes for improved performance to enhance efficiency and reduce latency in data handling
added import for RCFileInputFormat and registered it in SerializationUtilities to enable support for RCFile input format serialization in Hive
added default methods ` typeOf ` and ` categoryOf ` to the ` TypeMapperComponent ` class to improve type handling capabilities for columns in the application
added error handling for invalid host headers in the Request class to improve robustness by notifying when invalid port is encountered
updated ShadowTimeZoneFinderTest to use ReflectionHelpers for better timezone management to improve test reliability and maintainability by utilizing the ReflectionHelpers framework
refactor outgoing value handling methods in StandardOp . java to improve code clarity and ensure proper handling of empty outgoing values
lucene - 3998 : remove segment core . dir and use si . name in tostring ( )
ambari - 1744 . roll upgrade from 2.6 . 0 to 3.0 . 0 ( rlevas )
enhanced error messaging when annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi absent or set to false to ensure clarity in error reporting for annotation definitions during compilation
changed the NAME variable in GreekLowerCaseFilterFactory , IrishLowerCaseFilterFactory , and TurkishLowerCaseFilterFactory classes from " greekLowerCase " to " irishLowercase " to standardize the naming convention for better readability and standardization
refactor HSSFSheet and Sheet classes to improve code organization and maintainability
[ ds - 2058 ] switch to discoverysearchrequestprocessor for backward compatibility .
8253815 : ( tz ) upgrade time - zone data to tzdata2020c
updated the SurfaceSyncGroup initialization in TaskbarDragController to specify a unique identifier for the SurfaceSyncGroup used during drawing
updated GridFSTemplate and GridFSTemplateIntegrationTests to use ` getId ( ) ` instead of ` getObjectId ( ) ` and modified GridFSFile handling to improve code clarity and simplify file deletion process
added unit tests for retrieving total size and bytesSoFar in ShadowDownloadManager to ensure correct functionality of column indexing and retrieval in the DownloadManager class
refactor character insertion logic in TextField . java for clarity to improve readability and maintainability of the code
fix duplicate select node in group node view ( # 9011 )
added afterSetStatements method implementation in Lower . java and BlockLexicalContext . java to enhance terminal handling for better statement state management
added hashCode method to IntervalXYDelegate and XYSeriesCollection classes and improved null handling in XYSeriesCollection to ensure consistent hashCode implementation and avoid potential null pointer exceptions
refactored the clientqueuedisruptiontest to be a cleanup method instead of the test class
removed unnecessary spacing in CloudWatchAppender . java and added a new test class CachingAttributeRepositoryTests . java to improve code readability and verify the functionality of the service
updated the method call from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` to improve handling of float point values in JSON serialization
added multiple calls to ` HttpMethed . waitProduceNextBlock ( blockingStubFull ) ` and ` WalletTestZenToken007 . java ` to ensure block production is appropriately awaited in the tests
modified language tag canonicalization and added tests for language tags to improve accuracy in language tag processing and verification
cloudstack - 7119 . make kvm . ssh . to . agent configurable . add an option to control whether to ssh into kvm agent
removed public access modifier from ScheduledAction class and updated access modifiers to enhance encapsulation and restrict access to implementation details
fix tab strip in emoji keyboard ( # 2365 )
added a condition to exclude " - " in the filter condition to ensure that special characters are not processed in the filter
updated text from " natural order " to " Natural column order " across multiple classes to clarify the intended display of column orders in the user interface
8265226 : array . copyof ( in , 6 ) should not use list . copyof ( in , 6 )
updated the write method to escape remote address to ensure proper formatting of remote address information
change ` itemstatetriggerhandler ` to consider ` smarthome / items ` instead of ` / ` / ' / '
remove unnecessary sync in fasthttpdateformat ( httpdate )
added thread handling for file moving operations using a concurrent pool to improve performance and manageability of file system operations
added a new method ` trigger ` to the ` WrapTimer ` class for triggering a trigger with a specified period to enhance timer functionality by allowing customizable trigger timing based on a specified period
fix : handle local _ date and sql _ date type in write
added support for verbose error handling in AbstractStatusReporter to improve error reporting by allowing more detailed error information
remove unbundled / unbundled icon from header , redo / redo button do n ' t show .
cloudstack 3.0 api - do n ' t allow connection to same account / domain in same account / domain
updated error handling logic in CursorReadingTask and added unit tests for error handling to improve error management and ensure proper error propagation behavior
bug 66425 : log error if pdf be encrypt . it cant create thumbnail or extract text .
optimize curator zookeeper code so it do n ' t spawn thread at the end of run .
updated AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code clarity and maintainability
modified the intent and intent handling in HostsList . java to include an ID parameter to ensure proper functionality by associating URLs with their corresponding identifier
update Java6Assertions and Conditions classes for improved functionality to enhance code readability and maintainability
changed the return type of replaceOrderBulk method from Collection to List of String for order commands to improve flexibility by allowing multiple order commands to be used
replaced the ` enterDefault ` method with ` enterIdentNode ` and ` enterFunctionNode ` methods in ` FindScopeDepths . java ` to improve clarity and functionality of scope enter logic
added a new J9ConstantHelper class for handling long fields and updated ObjectHash to use it to improve code clarity and ensure correct handling of extended runtime flags
add a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification behavior with multiple threads
[ gate - 121 ] added offline notification to roster .
added a method to retrieve overlayed table properties in MapOperator and PartitionDesc classes to improve handling of overlayed table properties in the processing logic
modified the call to the loadHandle method by removing unnecessary whitespace to improve code readability and maintain consistency in function handling
add null check for extTypeCustomDesers and improve the copy method in MessagePackFactory and MessagePackFactoryTest to ensure safe initialization of custom deserializer and enhance test coverage for serialization behavior
remove useless system . setproperty for mockserver . logLevel
removed the @ Test annotation from AbstractRegistryFactoryTest . java to exclude the test method from execution during the test execution
removed unused imports and simplified the createJetty method in AbstractSolrMorphlineZkTestBase . java to improve code clarity and reduce unnecessary dependencies
replace scoreMap with termScoreMap and update its usage across multiple classes to improve score management and enhance the functionality of the grouping process
updated comparison logic in U64 . java to use less than or equal to ensure correct handling of parameter data comparisons
fix : add font size to headline style for android 4 . x
updated notification logic in WallpaperColorInfo to account for support for dark text to ensure correct color representation based on user preferences
[ flink - 25958 ] [ checkpoint ] do n ' t force the next checkpoint if the request be already mark a forcibly
updated import statements and modified core pool size constants in Parallel . java to improve code clarity and ensure better resource management for concurrent operations
modified the filtering logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use anyMatch method to improve readability and simplify the matching logic
added tests for Windows and ARM container handling in OpenCVImageFactoryTest to ensure compatibility with system - specific requirements on Windows ServerCore containers
http : / / issues . apache . org / activemq / browse / amq - 2840 - apply patch with thanks . also add default resource prefetching .
modified the ` getReturnValue ` method to throw ` Throwable ` instead of null to improve error handling by throwing ` Py4JException ` for non - Throwable messages
added a new annotation ` @ Repeatable ` and an interface ` Issues ` in the ` Issue ` class to enhance the annotation ' s flexibility and functionality for issue tracking
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and improved test imports in BlueprintConfigurationProcessorTest . java to ensure consistency in user naming and enhance test reliability
fix : we should use the socksproxyhost system property to resolve the socket address
[ hotfix ] fix checkstyle violation in slot
replaced the import of ClassUtils with Apache Commons Lang to simplify dependencies and improve code maintainability
replace HashSet with LinkedHashSet in SslContextFactory for protocols and ciphers to ensure predictable iteration order for protocol and cipher suite processing
added a private static Resources instance and modified the logic for retrieving the system resource to improve resource handling by ensuring a single instance of Resources is returned
add a constant for the extra size of the plaintext segment when decrypt and seek .
added a test for invalid fallback behavior in the circuit breaker to ensure that the application correctly handles exceptions related to circuit breaker routes
make httpclient use sslcontextfactory to allow all hostname verification
pdfbox - 2852 : reduce memory footprint in performancetest
added a ` preferAES ` boolean property and corresponding getter / setter methods in ` ProtectionPolicy ` and ` StandardProtectionPolicy ` to enable configuration of AES protection policies for improved security
( chore ) camel - opentelemetry : use standard logging
[ ebs - 5989 ] remove elb test that be no longer need
renamed setAlarm to setRingtone in AlarmReceiver . java to better reflect the functionality of setting ringtone notifications
added error handling for file creation in DiacriticTest . java to ensure graceful failure and inform users about file creation configuration issues
hhh - 13663 skip test that fail on oracle 11 due to timeout
updated file handling logic in TextureUnpacker to check for existence of atlas files to improve error handling and ensure the correct file is referenced for atlas processing
refactor AmbariManagementControllerImpl to use a lock for concurrent modifications to ensure thread safety when modifying service configurations
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added tests to verify that ResultSet does not close properly to ensure proper resource management and prevent potential resource leaks
fix # 1489 - optimize inputstream . marksupport ( ) . add more test
added logic to remove pre - deleted databases from the schema map to ensure that only recent database data is removed from the schema
added a check for the existence of the " chunkedWriter " before writing a response to ensure that chunkedWriter is properly removed before writing to the pipeline
updated item deletion logic in EnhancedBrowseFragment and FullDetailsFragment to include base item ID check to ensure correct item deletion functionality and improve user experience
added a new interface ` RuleBank ` and refactored ` RuleFinder ` to implement it to enhance rule management functionality and improve code organization
avoid npe if an exception be throw during the final operation of the cipher .
added a new test class ` TestMonomorphicObjectCall ` and modified ` Object ` class to be implemented to facilitate testing of object finalization and improve native method registration
refactor methods in DataBrowser and Desktop classes for consistency to improve code clarity and maintainability by standardizing method names
hbase - 14515 improve efficiency of timestamp seeking ( guangxu cheng )
[ flink - 30595 ] [ core ] remove the unnecessary flink annotation from taskmanager and taskmanagerconfiguration
modified the constructor of AlterTimeSeriesStatement to accept a boolean parameter and updated the isAlterView variable to true to enable flexibility in altering time series statements based on the view type
fix regex matchtext to work with whole and substring .
[ amq - 6341 ] avoid the helix broker starter exception when create the routing table builder
fix httpclientintroductionadvice to work with jdk 9 .
[ amq - 5906 ] - change the jms password type for test - aws - jms
cloudstack - 8725 : apiservlet do n ' t try to invalidate the session if it ca n ' t be find
remove unused test ( already in 3.0 ) .
modified the ` initialize ` method to accept a ` SimulationStatus ` parameter and updated the status object to include warnings to enhance the status initialization by setting additional warnings for better debugging
add type . getcurrenttimemillis , to avoid invalid call to system . currenttimemillis
updated serialization methods in PrettyPrinter . java to use " var " instead of " tree " for improved clarity to enhance code readability and maintainability by using more descriptive variable names
refactor LRUDictionary to ensure proper initialization and cleanup of indexToNode to improve memory management and prevent potential NullPointerExceptions
8053963 : ( dc ) use datagramchannel . receive ( ) instead of read ( ) in connect ( )
test : migrate testquerydns to junit 5 ( # 4589 )
added a new class NutchServerInfo to manage Nutch service start date and running jobs to provide a structured way to manage and manage Nutch service start date and job information
replaced PositionLengthAttribute handling with AttributeSource for token attributes to simplify attribute management and improve code maintainability
added timestamp handling to CQL and Thrift Inserter classes and updated settings to include it to ensure accurate timestamp information is written to the database
updated DSAParameterGenerator logic to validate prime strength conditions and replaced BigInteger constants to improve clarity and maintainability of the code
updated the methods in NumberUtils to return different bit representations for float and long arrays and modified the methods in Numbers class to improve precision and functionality of bit handling in the Numbers class
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for new IP address ranges
added support for handling SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to improve error handling for constraint violations in database operations
[ rocketmq - 47 ] avoid npe by remove requestheader . setzeroifnotfound ( false )
added methods to insert tabs with specified font and icon sizes in the Tabs class to enhance tab management functionality with customizable font sizes
replaced array size specification with zero - length arrays in multiple classes to improve performance and reduce memory usage
[ flink - 13066 ] [ test ] add taskmanagerruntimeinfo to mockenvironment
refactor conditional checks in MavenVisitor for better readability to improve code clarity and maintainability by consolidating conditional logic
updated mock variables and their names in ZookeeperDataChangedListenerTest . java for clarity and consistency to improve readability and maintainability of the test cases
added a new file FormatCheckingTest . java to validate Java class name format errors to ensure proper handling and reporting of ClassFormatError exceptions
updated line number assignment logic in CodeGenerator . java to improve clarity and maintainability of line number handling
added a try - catch block around the retrieval of configuration to handle potential exceptions when the configuration retrieval fails
added methods to create and set toggle options in RadioButton to enhance user interface flexibility by allowing selection options
fix broken build and increase the chunk metadata cache size
changed access modifier of DEFAULT _ CAPACITY from private to public and refactored capacity attribute handling in ChannelParser and MessageBusParser to allow external access to DEFAULT _ CAPACITY and improve clarity in capacity attribute handling
camel - 5040 fixed the npe in osgimanagementnamestrategy when the bundle do not have a symbolicname
add mode - specific handling ( for android )
[ iop ] add more logging to yarnsessionfifoitcase to diagnose deadlock issue
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and related classes to improve clarity and consistency in naming conventions
updated the selective header propagation logic and added a test for non - existing messages to ensure correct handling of non - existing messages and validate behavior through testing
modified the comparison logic in CompareMode . java to enhance accuracy and performance of comparison operations
added HasTests interface implementation to Arg and Arg classes to support testing rules in the Rust library and binary descriptions
updated placeholder and error drawable resources in FileMessageVH . java to improve the visual appearance of the recent image placeholder
refactored OnExitTest . java for improved test execution handling to enhance test reliability and maintainability
added a method to the TaskbarManager class to handle user preference changes to ensure the taskbar is recreated when the user preference changes
bug 59264 : avoid the jmx dependency from com . ibm . jvm . dump to the hotspot mbean
camel - 18151 : camel - mybatis - should ensure all commit / close operation in a finally block
danielwagnerhall : switch to ie to quit rather than switch to ff
refactored the @ TriggerPatterns annotation and initialized several variables in IteratorToFor . java to improve clarity and maintainability of the code
set jmxapplicationprovider state to unavailable when unavailability be detect .
updated assertions in multiple buffer classes to utilize limit and position logic to improve buffer handling accuracy and maintainability
updated the method call from ` toUri ( ) ` to ` toString ( ) ` in ` ConditionalResolverMergeFiles . java ` to simplify the conversion process by removing unnecessary URI conversion
added handling for empty arrays and updated the handling of empty indices in multiple classes to improve array management and ensure consistent handling of empty values during object operations
changed enum modifiers from package - private to public for Protocol and Transport classes to allow external access to these enums for better usability in other packages
renamed fields from " doc4 " to " doc6 " and updated the corresponding assertions in TestMultiPhraseQuery . java to ensure consistency in field naming and reflect the correctness of the tests
do n ' t show offline reservation status in the ui
added handling for the " onTimeout " method in HttpChannelState to improve thread management and ensure proper handling of timeout events
updated logging levels in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest classes to improve debugging information to enhance visibility of exceptions while providing clearer debugging information
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
updated the consistencyLevel check in read method to handle local serialization based on the consistencyForPaxos value to ensure accurate data reading based on the specific consistency settings
added support for " Home " model manufacturer in HeosDiscoveryParticipant . java and set a default serial number in HeosPlayerHandler . java to ensure proper handling of home - related models and manage player serial numbers dynamically
added a new ` Wait ` class and modified ` PlainSelect ` and ` SelectDeParser ` classes to utilize it to enhance wait handling capabilities in SQL queries
refactor Neo4j to use AttributeController for managing node and edge attributes to improve code organization and maintainability by utilizing a unified attribute management approach
added null check for serverName in the SessionManager class to ensure robustness by preventing potential NullPointerExceptions
nifi - 7043 : upgrade rocksdb to nifi - controller - rocksdb
updated the method call to use a string resource for the " IS _ GRANTABLE " property to improve code readability and ensure consistency in accessing string values
updated URL handling logic in JavascriptContext . java to improve clarity and ensure proper handling of non - string URLs
camel - 1822 fix the unit test error of camel - cxf
hbase - 20875 addendum add column to table fail with ` ` add column ... ' '
added the Disposable interface to the Texture class to allow for disposal of texture objects in the application
added null checks for tldBundleLocation and modified WebappRegistrationCustomizerImpl and WebBundleDeployerHelper for improved handling of web applications to enhance robustness and correctness in the registration mechanism
check goquorum genesis file only when goquorum compatibility mode be enable
replace IOException with Throwable in HttpInput . java to enhance error handling to provide more informative error messages
updated condition to skip tests for specific country checks to ensure that tests are skipped due to timezone issues
updated API operation annotations to use HostResponse . HostResponseWrapper instead of Wrapper to ensure consistency in class naming and improve clarity in response handling
updated query comparison logic in FilteredQuery . java to include the boost value in hash code calculation to ensure correct comparison based on the boost value for improved performance
modified the constructor of FileMenuFilter to maintain consistent formatting to improve code readability and maintainability
# 5158 hide geopanel in advanced mode ( debug mode work )
add a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading is disabled and the full GC is triggered correctly under specified metaspace and young generation sizes
check for empty spongecommon event before return forge
renamed KeyMappingPreparedStatementSetter to ItemPreparedStatementSetter across multiple classes to improve clarity and specificity regarding item handling in prepared statements
fix test compilation for cassandrasstable , patch by jbellis
added error handling for invalid resource types in MiniAapt . java to improve robustness by providing clearer feedback when resource type attributes are invalid
added support for Spel operator in the OperatorEnum and created a new SpelJudge class to enhance the analysis capabilities of condition comparisons
[ core ] fix illegalargumentexception in localexecutionplanner # validateordinalitytype
bugfix # 245306 , use lookup . get ( ) to lookup the default profiler , do not use sun . misc . service
updated Conscrypt - related classes and removed an unused import for assertion in ConscryptTest . java to streamline code and improve clarity by eliminating unnecessary dependencies
added attribute resolution checks and changed variable types for start _ offset and length in ` AttributeResolution9 . java ` and ` ShadowArscAssetManager9 . java ` to ensure compatibility with variable data types and improve code clarity
hbase - 26002 upgrade hive to version 1.6 . 0 ( # 3673 )
[ flink - 30613 ] [ table ] support push project to table with metadata
updated AboutActivity to use sorted names from CommonsApplication for better accessibility to improve user experience by displaying localized names alphabetically
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
modify HomeFragment to conditionally refresh preference based on live streaming setting to ensure user preference updates correctly when live streaming is active
added exception handling to better error reporting to improve debugging by providing more context on the exception
( chore ) camel - core : fileconsumer : wait for close event to complete
updated generic type declarations to use generics for aliases in SchemaLoader , CompositeType , and DynamicCompositeType classes to enhance type safety and flexibility in handling different types
added support for transport in GitClientApplication and updated repository URL handling in RepositoryUrlPanel to enhance repository functionality by ensuring proper transport support
added delegation name retrieval methods to multiple input consumer classes to improve clarity and consistency in naming across input consumer classes
add check for null mavenMetadata and optimize availableVersions assignment to improve code reliability and avoid potential null pointer exceptions
8203182 : [ testbug ] testLargepageuseforheap . java fails due to oom
bug cs - 15825 : event migration from 2.18 . 2 to 2.22 . 2
no jira - fix test failure on window
implemented a new test class for ObjectStreamClass functionality to verify serialization and deserialization behavior with custom objects
simplify conditionals in ZoneAwareDiscoveryFilter to improve code readability and maintainability
[ bugfix ] make opentracing fail if data capture fails
added a ` toString ( ) ` method to the ` Generator ` class to improve the string representation of the collections of registered generators
refactor URI handling to initialize donquote variable to improve readability and maintainability of the code
added a check for null or empty resources in ClusterControllerImpl to ensure that the requested resource is not found and provide clearer error handling
refactor AccepttoApiUtils to improve response handling and logging to enhance error handling and provide clearer debugging information during API responses
removed conditional logic for initializing ByteBuffer in VertexBufferObject . java to simplify the code and improve performance when dealing with buffer objects
refactor SybaseASADatabase . java for improved readability to enhance maintainability and clarity of the codebase
hive - 23709 : introduce forceprojection to hashjoininfo ( deepak jaiswal , review by jesus camacho rodriguez )
added a new method ` getStringDistance ( ) ` to retrieve the string distance to provide access to the ` sd ` variable for better encapsulation
added FLAG _ IMMUTABLE to PendingIntent flags and modified PendingIntent creation logic to enhance security and ensure compatibility with different Android SDK versions
hive - 27113 : allow multiple read column IDs to specify same name ( navis via ashutosh chauhan )
updated the method name from getUPNPAddress ( ) to getIPv4MulticastAddress ( ) in UPNPHelper . java to improve clarity and consistency in naming for multicast addresses
added a method to display temporary toasts in the SavedExper <e10>  ( ) - related functionality to enhance user experience by providing feedback on temporary sessions
added version handling to ` ServiceInfo ` and a corresponding test in ` ServiceModuleTest ` to ensure ` version ` is set correctly when parent version is not provided
added a new test class RawSerializationTest for Gson functionality to ensure proper serialization of various data types using Gson
rename ` SeleniumServer ` to ` SslCertificateGenerator ` across multiple classes to enhance security by using a more robust certificate generation approach
refactor the iteration method of replies in ExpansionViewHelper to use an index - based approach to improve readability and maintainability of the code
increase expiry for url cache test to 60 second
added a testNGramFilterPayload method to verify the functionality of the NGram filter with various payload attributes
modified AclImpl . java to modify access control logic to enhance data integrity by ensuring proper permissions are granted
added a test for different array sizes in the EasyRandom implementation to ensure different sizes are generated correctly for different class types
cloudstack - 2120 : fix the npe thrown when a vm fail to stop
added a ThreadLocal to track the execution of write operations to improve thread safety and handle potential write failures more effectively
updated conditional checks for parent and actor visibility in Actor . java to ensure proper handling of actors based on their parent and visibility state
log fail rolling - update step on deployment - group name , instead of message
[ hotfix ] [ table ] annotate sinkprovider class with nullable annotation
added exception handling for nonexistent username in DaoAuthenticationProvider and introduced AuthenticationFailureUsernameNotFoundEvent class to improve robustness of user authentication by notifying when a username is missing
refactor AtMostXVerificationTest . java for better readability to improve maintainability and clarity of test cases
updated the default qtype default value from " lucene " to " lucenePlusSort " across multiple files to ensure consistent default qtype usage across the application
updated date format initialization to include Locale . US to ensure consistent date formatting across different locales
add a new Main class and update the isInitialized method in ILanguageServer and JavaLanguageServer to improve code structure and facilitate testing of template initialization functionality
updated ClientAPITokenIntegrationTest to change the parameter name from " idToken " to " shouldHaveIdToken " to improve clarity and specificity in the test case
added transaction handling methods to DatabaseAdapter and removed unnecessary checks in GncXmlHandler to enhance transaction management and streamline the bulk operation process
replaced byte array handling with ByteArrayOutputStream for reading and writing bytes to improve efficiency and simplify data handling during reading
fix typo and format issue in messagingtemplate .
added isAcceptable method to AutoFormatVisitor class to check if the source file is a CompilationUnit instance
added methods to set maximum buffered docs and RAM buffer size to improve resource management and optimize resource usage
added a test for updating the witness capsule in the Manager and NodeDelegateImpl classes to ensure that the witness state is correctly updated and validated in the system
added error handling for NoSuchElementException in ` next ( ) ` method in ` CopyOnWriteMap . java ` to improve robustness by preventing crashes during iteration
[ ci ] use log4j1.3 . 3 instead of log4j2 for flume
updated BasicAuthIntegrationTest to utilize reindexCollection and modified DaemonStream to run in a ExecutorService to enhance reindex functionality and improve thread management during stream processing
replaced HashMap with LinkedHashMap for the nodes variable in DependencyUtil . java to maintain the insertion order of GraphNode instances
added error handling capabilities to JerseySupport and updated module dependencies to improve error management and ensure compatibility with HK2
refactor error handling to use a new ` validateHeader ` method to improve code readability and maintainability by encapsulating header validation logic
use non - nls for java . boot . class . path . append ( ) and sun . nio . maxdirectmemorysize
changed method parameters from String to CharSequence in StringSubject and StringTest classes to improve flexibility in handling different character sequences
[ gr - 33056 ] add jfr / internal / JVM . countertime ( ) j to be intrinsics a a part of a intrinsics test .
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class for improved organization
updated the connection factory handling in PersistenceManagerProvider to ensure proper creation of the data source based on the forCompactor condition
updated DeploymentOptions class to improve functionality to enhance application performance and maintainability
changed the parameter type of ` updateTextButtonWithDrawable ` from ` Drawable . ConstantState ` to ` Drawable ` and adjusted its drawable dimensions to improve flexibility in handling drawable resources and ensure proper positioning of the market button
refactor code to use try - with - resources for better resource management in XmlParser . java and YamlParser . java to improve resource management and reduce potential memory leaks
added coalesce operator support in RexNodeConverter and registered it in SqlFunctionConverter to enhance SQL query conversion capabilities for coalesce operations in the cluster
camel - 11446 : camel - hl7 - improve the unit test for the hdp 7 dataformat
updated the context class loader handling and proxy factory generation in JavassistProxyFactoryFactoryFactory . java to ensure correct class loading and improve error handling consistency
updated DefaultDateTypeAdapter constructor parameters to include ' format ' parameter final to improve flexibility and enforce immutability for date format handling
reformatted spacing in DocumentUtil . java for consistency to improve code readability and maintainability
updated HttpClientRequestBase to setURI and query properties correctly to streamline request handling and ensure correct URI parsing
removed the old entry filtering logic from FeedRefreshUpdater to optimize performance by reducing unnecessary processing
flume - 2894 . change log level from fatal to warn in fshlog . java
modified the NodeMap class to implement the Iterable interface for improved functionality to enhance the functionality and maintainability of the NodeMap class
replaced the import of FilterDefinition with a variable subPredicate in DiscoveryClientRouteDefinitionLocator . java to improve clarity and maintain consistency in naming conventions
added a null check before adding fields to the operations and modified return condition in RexToMongoTranslator to ensure fields are only added if they are not empty and correct return value in the translated SQL type check
of - 2328 : add jids to the list of available admin item ( # 2329 )
replaced usage of MultiFields with SolrIndexSearcher in multiple classes to improve compatibility and functionality in handling Solr documents
updated the return statement to include class name and identity hash code to improve debugging information by providing clearer context about the bean
updated the logic for determining the primitive type in GroovyParserVisitor . java to ensure that the method correctly returns the unresolved name when no line is present
[ gr - 26533 ] remove unused hash code from frameinfoquery .
added a timeout parameter for the blocking queue in SedaBlockWhenFullTest . java to increase the timeout duration for operations in the blocking queue
add a new package - info . java file for the Lucene test resources package to provide package - level documentation for resource - related functionality
update read length calculation logic in MessageUnpacker . java to ensure correct handling of position within buffer constraints
updated import statement for Nullable from micrometer . common to micrometer . core to ensure compatibility with the latest Micrometer library structure
updated SQL query to include user filter in IconDB to ensure icon retrieval is user - specific for data integrity
fix defaultmqproducerimpl defaultmqproducer # getbackpressureforasyncsendnum - > defaultmqproducer # getbackpressureforasyncsendsize
[ java ] exclude module - info . class from whitelisted resource add in classpathelement .
add database upgrade script for baremetal foreign key ( # 5831 )
removed the IJava2DRenderer interface from the Java2DRenderer class to simplify the codebase by eliminating an unused interface
fix ontearDown to call onoffloadbufferemptying if playback be stopped
replaced direct usage of upstream task tasks with a scheduled thread pool and added scheduled functionality to improve task scheduling efficiency and scalability
refactor StreamType class for better performance to improve efficiency of data streaming operations
updated assertion to include an additional context for timing checks to improve debugging by providing more informative messages during the test
updated FilestorePage and RootPage to handle admin roles more effectively to improve user experience by ensuring users are directed to the correct role
( chore ) camel - elasticsearch : ignore fail test
modified the accept method to ensure the correct class type is used for determining the Lifecycle class type to enhance type safety and prevent potential ClassCastExceptions
rename text resource keys for left and right buttons from " market . offerBook . leftButton " and " market . offerBook . rightButton " to " offerBook . sellWithFiat . " to improve clarity and consistency of resource usage
camel - 9443 : camel - restlet - make it possible to configure endpoint base on user ' s restlet context path .
refactor and rename createNextBlock and createNextBlockWithCoinbase methods to remove unnecessary parameters to simplify method signatures and improve code readability
removed ` Serializable ` interface from ` BTreeMapJava ` and updated test cases to include ` serialCloneNoCatch ` to improve serialization handling and ensure proper exception handling during serialization
fix npe in case of non - existent rule
refactor conditional logic for better readability in Main . java to enhance code clarity and maintainability
updated the method call from ` mFilesAll . indexOf ( file ) ` to ` mFiles . indexOf ( file ) ` to streamline file index retrieval by using the correct class reference
deleted the PlainVerifier . java file to remove unused code to streamline the codebase
added a condition to close system windows when triggered fromAltTab to ensure proper cleanup of system windows when not needed
updated DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog handling and behavior management to enhance user experience by ensuring proper synchronization and state management during dialogs
updated charset parsing method to specify UTF - 8 encoding to ensure proper handling of character encoding in HTTP requests
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper resource management and prevent memory leaks
updated serialization method in LogFormatTest . java to utilize TestUtilities for serialization to improve code maintainability and leverage existing utility methods for serialization
updated logic to parse duration from previousUntilLast clause and modified the fill initialization in GroupByFillDataSet to improve accuracy in parsing duration values and enhance fill functionality with new test cases
updated array size validation logic and added handling for negative lengths to ensure proper exception throwing for negative array sizes and improve argument list management
test : migrate ctunresolvedimporttest to junit 5 ( # 4589 )
updated thread join duration from 10 seconds to 60 seconds to allow for a longer wait time before thread termination
[ flink - 21692 ] [ test ] change default scheduler schedule strategy from legacy to pipelinedregion
added title property and its getter and setter methods to ShadowActivity , ShadowAlertDialog , ShadowTextView , and ShadowTextView classes to ensure consistent title handling and improve internationalization capabilities
updated logging framework from Apache Commons Logging to POILogFactory and POILogger to enhance logging capabilities and consistency with the latest logging framework
[ ipcamera ] fix problem with instar motion channel ( # 17514 )
add map delete latency statistic ( # 1628 )
updated enum Type in mmm Option . java and modified response handling in Response . java to enhance code clarity and ensure status codes are consistent
updated the CheckResourceKeys class to use a findJavacLocation method for finding Java files to improve code clarity and functionality by dynamically identifying the Java file location
add project name to flutter create additional settings ( # 1465 )
added a new test class DeprecatedStubbingTest for deprecated stubbing functionality to ensure proper behavior and behavior of stubbing in the application
replaced the import of ` DispatcherType ` from ` org . eclipse . jetty . server . DispatcherType ` to ` javax . servlet . DispatcherType ` to ensure compatibility with the latest servlet framework standards
fix the npe in the English grammatical structure , add a test for it ( deeplearning4j / deeplearning4j # 356 )
add boolean system property to allow rsa key exchange in fips mode
[ gr - 46711 ] fix resource leak in perforce .
added deleteOAuthServiceAndAccessToken and SDMAPI methods to PubSubAPI and SDMAPI to improve management of OAuth services and access tokens
replace ` AGGRESSIVE _ EASE ` with ` EMPHASIZED ` in ` TaskbarEduView . java ` to improve animation consistency and performance
added UpdateRegionLocationPlan to various classes and changed log level from debug to info for region - related log messages to improve region management and enhance logging clarity during data node operations
added a new file ` FileDialogLeakTest . java ` that implements a file dialog with multiple threads to test and ensure proper resource management during file dialog operations
hbase - 22752 addendum to testopentableincoprocessor move testopentableincoprocessor out of hbase - dev environment
svm : do n ' t try to resolve interruptible method in trufflefeature # isdynamic ( )
[ flink - 21977 ] [ protobuf ] make rowtype use the right method for splitting message
change condition from checking for disi to checking if dimension is not null to ensure that disi is correctly validated before proceeding with dimensions
fix fakewithedsource ' s setsourceinfo call which could result in npe
only check for java 9 if they ' re at least 9 - ea
update FileReporterTest to cast null to String and File type to ensure proper type handling for file arguments
updated the method call from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity . java ` to improve clarity and explicit method usage for boolean evaluation
added menu item selection handling for the home button in DirectMessageConversation to enhance user experience by allowing back navigation when the home button is pressed
added a new constant for fetching users and updated related logic in the RpcServlet and RpcUtils classes to enhance user management functionality and improve code clarity
added @ EnabledIfSystemProperty annotation for architecture compatibility in TestJdbcPluginWithMSSQL . java to ensure compatibility with AMD64 and x86 _ 64 systems
updated the method call to use originalStartClass instead of startClass to ensure the strategy uses the correct class type for better error handling
fix out of bound exception and add new local to jimple ' s dexbody
fix bz 65317 . use getsuppliedresponse instead of getasynccontext ( ) .
change default look and feel to english instead of nicer
fix version replacement in apppage for j2me
refactor animation listeners in LauncherAppTransitionManagerImpl for better readability and organization to improve code clarity and maintainability by consolidating alpha and translation logic
dumpedprivatekey : fix exception message to reflect the correct network version
fix for edit offer data not update correctly
updated the handling of page parameters in TicketPage . java to differentiate between open tickets and repository parameters for improved functionality
[ wood ] set pipeitemswood ' s default battery to 80.0 road
added helper methods to retrieve cluster keys by blueprint name and version in the StateMachineInvoker class to improve code organization and facilitate easier access to cluster definitions
set ` downgradeAllowed ` to true in ` UpgradePack ` and add a test for it in ` UpgradePackTest ` to ensure correct behavior of downgrade scenarios when no downgrade is attempted
updated XML entity scanning methods to use ATTRIBUTENAME instead of ATTRIBUTE to ensure consistency in naming conventions across the application
feat ( lwjgl ) : add support for emulate system library ( # 3804 )
replaced the use of a custom comparator for app names with a custom comparator in the LauncherModel class to improve sorting efficiency and consistency by using a centralized comparator
refactor entry handling and create parent directories if they do not exist to ensure proper resource management and avoid potential errors during file operations
modified the doTest method to include additional debugging information to improve visibility into test failures for better troubleshooting
camel - 13313 : camel - spring - bean now can be configure in the package param , so it easy to configure in the blueprint .
[ flink - 23737 ] [ doc ] update doc for metric module to only require tag - based reporter
hbase - 13656 testfulllogreconstruction may hang due to timeout ( sergey shelukhin )
added support for reuse addresses in DatagramSocketOptions by introducing setSendBufferSize , setReceiveBufferSize , and reuseAddress fields to enhance socket configuration options for improved functionality
updated the shutdown message handling by using a dedicated method for better encapsulation to improve maintainability and clarity of the shutdown process
remove deprecate interface Locatable in the java package to clean up the codebase
updated error message to clarify that the field must be searchable and has docValues to improve clarity and accuracy of error reporting for better debugging
rename equalityPredicateColumns to predicateColumns in StarTreeIndexOperator . java to improve clarity and consistency in naming conventions
remove unnecessary whitespace and reformatted code in HandshakeHandler . java to improve code readability and maintainability
fix formatting of the closing brace in the Navigator class to ensure consistent code style and improve readability
changed access modifiers of constants in RecordReaderFactory . java from private to package - private to allow access to class fields from other classes in the same package for better encapsulation
add support for LESS _ THAN _ EQUAL and GREATER _ THAN _ EQUAL cases in MongoQueryCreator to enhance query flexibility for greater than and less than equal scenarios
refactor select expression handling in CalciteSqlParser to improve clarity and maintainability of group by clause validation logic
updated MappedByteBuffer and FileChannelLinesSpliterator to utilize AtomicInteger for buffer unmapping to improve memory management and ensure thread - safe unmapping operations
replaced repeated calls to ` l . getValidator ( ) ` with a local variable ` validator ` in ` LdapUtils . java ` to improve code readability and maintainability by reducing repetition
added a schedule method to CircuitBreakerImpl and updated the wait period handling in CircuitBreakerTest to improve the flexibility and functionality of the circuit breaker ' s scheduling mechanism
removed the FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS flag from the intent setFlags method to simplify the intent configuration and avoid unnecessary complexity
change the property name from " ajax " to " progressbar " in SubmissionController . java and FileUploadRequest . java to improve clarity by distinguishing between ajax and progressbar behavior
added a JUnit 5 @ Disabled annotation to the TableExtRetrieverTest class to temporarily disable the test due to known issues
hhh - 13653 synchronize method in entitygraph to avoid concurrent modification
updated import statement for IntRangeUtil1 from ` IntRangeUtil1 . requireNonNegative ` to ` IntRangeUtil . requireNonNegative ` to ensure compatibility with the new library structure
modified HttpParser to handle space as a valid character and improved the handling of encoded headers to enhance error handling and correctness in character encoding processing
updated content view from " trends _ activity " to " configuration _ activity " to reflect the new configuration design
enhanced error message in SLWTTextListing . java to include the position of the document to improve clarity of log output for better debugging
solr - 12028 : add a timeout when wait for the tlog replica to become leader
updated Thread class to improve thread management to enhance performance and maintainability of thread operations
francoisreynaud : make configurable template file a configurable one , make it configurable .
camel - 3748 fixed the cxf namespace attribute issue of camel - cxf
formatted the YamlRepresenter constructor and adjusted formatting for consistency to improve code readability and maintain coding standards
updated the string formatting for date formatting in ToChar . java and added new test cases in TestFunctions . java to improve readability and ensure proper handling of date strings in database operations
added validation for transaction and write ID IDs in GenericUDTFGetSplits to ensure only valid transactions are processed in a valid transaction ID
replaced ` isEmpty ( ) ` checks with ` isEmpty ( ) ` for column and column types initialization to improve code clarity and efficiency by using ` Collections . emptyList ( ) ` for empty collections
added a null check for the book path before loading and improved logging messages to enhance robustness by preventing potential null pointer exceptions and provide clearer debugging information
refactor SSTDeserializer and associated tests for improved clarity and functionality to enhance code maintainability and ensure proper handling of out - of - record scenarios
refactor grid column handling in AppPreferencesImpl and ExtendedListFragment to use DEFAULT _ GRID _ COLUMN to ensure consistent default grid column assignment and improve code readability
updated field description to clarify the purpose of the field ' diff ' to enhance user understanding of line break handling
fix a timing issue in the decoder
removed the " / api / margin " annotations from the Path annotations in OkexV3 . java to simplify the API path structure for better readability
optimized comparison of x and y - coordinate by epsilon in LineUtilitiesTests . java to improve efficiency by eliminating redundant checks
added error logging for varargs and old array syntax handling in JavacParser . java to improve debugging by tracking the use of brackets in varargs and old array syntax
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
added a METHOD variable context to the VariableContext class and updated related tests to support the retrieval of method calls as well as member access
add test for invalid json in profile and compilation unit
update buffer limit logic in Piece and SharingPeer classes to ensure correct buffer position handling
refactor NettyRoutingFilter to accept HttpClientProperties as a parameter to enhance flexibility and configurability for handling HTTP response timeouts
refactor NativeLinkTargetGroup and related classes to improve the handling of native link target configurations to enhance code clarity and maintainability by deprecating unused parameters
camel - 19443 : camel - jbang - rest - add a main rest configuration test and make it easy to configure
added field access handling to ASTConverter and updated RexNodeConverter to utilize it to improve support for field access in Hive queries
[ iotdb - 6125 ] fix querylogger memory leak ( # 6161 )
fix : relativize no proxy to webclient request ( # 2889 )
updated certificate handling logic and variable names in PKCS12KeyStore and StoreSecretKeyTest classes to enhance clarity and functionality in certificate management and test management
refactor ` canLinkTypeStatic ` method to ` isReflectionClass ` for improved security checks to enhance access control checks and maintain accurate security permission handling
removed the ' public ' access modifier from the constructor of CollisionMap class to enforce encapsulation within the class for better encapsulation
deprecated the method ` getRawInputFromTransactionInput ` and added a null check for the ` input ` parameter to improve clarity and enforce input validation by ensuring that the input is not null
refactor log level handling to use a switch statement for better readability to improve code maintainability and reduce duplication in log level processing logic
api : allow region _ id to be specify in the sql statement ( # 3441 )
added encryption exception handling to the OldExcelExtractor class to ensure compatibility with encrypted document formats for Excel files
[ gr - 39982 ] fix jdk _ internal _ benchmark dependency for mx _ java _ benchmarks .
updated the visibility of the image holder to GONE in the TimeLineCursorAdapter to ensure the image is displayed without hiding it
relax max wait time in test to avoid occasional fail on slow ci server
modified the ` EXTERNAL _ FILES _ DIR ` initialization to support a type parameter and refactored directory deletion logic to enhance flexibility in creating temporary directories and improve code maintainability
refactor ExceptionFactory implementation to use Class for better error handling to improve clarity and maintainability of exception factory logic
updated wait time from 10 seconds to 60 seconds to allow more time for asynchronous operations
added support for handling " aud " extensions in ConnectOAuth2RequestFactory and ConnectTokenEnhancer to enhance JWT claim processing by allowing customizable audience settings
camel - 14284 : camel - kafka should not set breakonfirsterror by default
added a new constant selectableItemBackground in the R . java file to provide a visual representation of the selected item background
consolidated multiple import statements for trade - related classes into a wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for future stop order functionality
updated event type assignment logic in TxnSetOperation . java to ensure correct event type handling when the record is null
added a new class ` ResumableRandomAccessFileListener ` and modified ` ResumableExternalDownload ` to use it to implement file resumable operations and improve resource management
change class loader name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " to ensure correct class loading for abstract classes
added imports for Iterator and modified formats handling in HSSFDataFormat . java and updated assertions in TestWorkbook . java to enhance format management and ensure the correctness of data format settings in tests
[ flink - 33063 ] [ kafka ] deprecate the flinkkafkaproducer interface and deprecate the rest of the kafka producer implementation
updated the condition for determining the compressed chunk length in CompressedInputStream . java to ensure the length checks are accurately checked against the maximum compressed length
camel - 17684 : camel - spring - redis should use idempotent so it can be use with spring - data - redis
fix containerrepair to use itemstack1 ' s metadata mechanism instead of damage .
[ mng - 7762 ] legacylocalrepositorymanager do n ' t handle local layouts properly .
added initialization checks and logging for local task manager initialization to improve error handling and provide clearer feedback when the task manager is not initialized
added repository deployment instructions in AbstractArtifactResolutionException . java to enhance error handling for file deployment scenarios
updated the method for obtaining temporary file paths in FileStorageUtils to improve code clarity and maintainability by centralizing the path retrieval logic
updated FeedEntryStatusDAO to utilize Google Commons library for querying feed entries to improve code maintainability and reduce dependencies on external libraries
added start and end execution logic to ` ContextImpl ` and refactored tests in ` BlockedThreadCheckerTest ` to ensure proper execution of Vert . x components and improve test coverage
updated the ` instantiate ` method to accept a ` String ` format and improved error handling for null arguments to enhance flexibility and ensure proper output argument validation during formatter initialization
fix miss file input on android 7 +
refactor method names from ` setRemoteAddress ` to ` setRemoteAddress ` and ` setRemoteHostname ` to improve clarity and consistency in handling remote address and hostname
added null check for realClass and threw an IllegalArgumentException if it is not annotated with @ Implements to ensure proper handling of class annotations and prevent runtime errors
fix ( netty ) : do n ' t use tlsmutualauthenticationcertificatechain a it ' s default
added a test for handling requests thatOverHttps throws SSL exceptions to ensure proper exception handling for HTTP requests in the server
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to these private fields for external use
added import statement for ArrayList and simplified code in PageChangeListener and FrameRenderer classes to enhance code readability and maintainability by organizing event data structure
fix ( freezev2 ) : fix warn message when no email address or text be configure ( # 3804 )
# 239 - enh : add query optimization for live bean ( # 239 )
refactor error handling in ` transferTo ` method to retry if the resource is temporarily unavailable to improve stability by handling potential IO exceptions that may occur during file transfer operations
doc : fix checkstyle issue in io / ctfs / executablefactory . java ( # 763 )
updated the EndpointConfiguration , MainSupport , and SSLContextParameters classes to improve code organization and enhance security settings
fix : correctly set working directory for file editor ( # 4748 )
added LoadOptionsBuilder and SchemaInfoLevelBuilder to AccessTest . java to enhance schema crawling options functionality
refactor TestLoadLegacyLibrary class to use TestNG annotations and update main method to verify native method behavior to enhance testing capabilities and ensure correct behavior of the loadLibrary method
do n ' t fail test when an unknown operation name exist
added methods to set the name , enabled , and expanded properties in ProjectProperty to ensure the project properties reflect the current state of the prototype
added a try - with - resources statement for the ConnectionInfo object to ensure proper resource management when handling database operations
modify DataStreamJob class to improve data processing logic to enhance performance and reliability of data streaming operations
replaced direct file output stream handling with a try - with - resources statement for better resource management to ensure proper handling of ErrnoExceptions and avoid potential memory leaks
camel - 4440 fixed the class name issue of camel - cxf
h2 - 1454 : fix http / 2 support for h2 - 14 ( tlsv2 ) protocol .
refactor LambdaToMethod to improve handling of parameter symbols and bridge conditions to enhance clarity and correctness of the code logic
update regex pattern construction in CoordinationTransformer . java for clarity to improve readability and maintainability of the code
updated file timeout value in copyURLToFile method from 5000 to 60000 to improve stability by allowing longer processing times
added phraseSlop property to the mpq class to enhance phrase processing functionality
increased the delay duration in LongPressMouseListenerTest from 10 milliseconds to 100 milliseconds to ensure adequate the test execution time for better synchronization
updated server parsing limits from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to improve performance and ensure better server performance
add a new method to schedule game tasks in a parallel environment to improve threading capabilities for concurrent game operations
updated visibility logic for the compound view to check for available edit options to ensure the compound view is only visible when available
update progress calculation to ensure it is within a valid range to improve user experience by preventing invalid progress updates
remove unused packetReceived ( packet ) method from clientsession and componentsession
added debug logging for authentication failures and refactored DelegatedAuthenticationGenerateClientsAction to improve debugging capabilities and simplify the handling of client identity provider redirects
added null checks for the service before accessing its properties in ` SamlIdPEntityIdAuthenticationServiceSelectionStrategy . java ` , ` SamlIdPMetadataUIAction . java ` , and ` SamlMetadataUIAction . java ` to enhance robustness by preventing potential null pointer exceptions when the service is not initialized
add hide flag to pantheoncommand for account level permission ( # 477 )
add donotinstrumentclass to androidx . room . coroutinesroom $ compatibility
modified the ` isSupported ` method to synchronize it properly to ensure thread safety when checking the support of ` HttpCallerInfo `
remove unused setter ( no longer use )
camel - 19287 : camel - jms - persistentqueuereplymanager / temporaryqueuereplymanager should use thread name when set thread pool size .
refactor AuthenticationProvider and TargetObject classes for improved readability to enhance maintainability and reduce technical debt
fix a new regression in pdfwriter . write ( ) that blow up when a writer be close .
log4j2 - 2999 add a marker test for pattern selector functionality .
simonstewart : start the test suite in hta mode more easily
change the type of the ` thank ` method to ` MwThankPostResponse ` and add a new class ` MwThankPostResponse ` to improve method functionality and provide a response structure for handling results
added a new interface SocketBased and modified ChannelEndPoint to implement SocketBased interface to enable socket management for improved performance and flexibility
updated revokingStore initialization and size setting logic in Manager . java to ensure proper handling of revokingStore properties and improve block size configuration
add test cases for handling implicit joins in HQL to ensure correct handling of call history and LocalDateTime data retrieval in the query
update assertions in NonVisualRegressionTest to normalize line endings to ensure consistent comparison of expected and actual text with line breaks
lucene - 4498 : fix indexwriter so that it do n ' t refer to an unreferenced file on close .
replaced ` @ Final ` annotations with ` @ Final ` annotations in ` BaseError . java ` to improve code readability and ensure consistent final usage
added validation to validate the new percent in the ConsumeUserResourcePercentActuator class to ensure that the percent parameter is within valid range for processing
updated condition to check the boolean value of show _ old _ login to ensure legacy login is displayed only when the option is enabled
rename StreamNetworkThroughputBenchmarkTests class to StreamNetworkThroughputBenchmarkTest to clarify the purpose of the test class for better organization
set response page to UsersPage instead of EditTeamPage to ensure consistent response handling for user roles
updated debug logging message for initializing plugin credentials to provide more detailed error context for troubleshooting
make sure we shutdown now and only close the server socket channel if not live .
refactor Rocket class to improve code readability to enhance maintainability and simplify future updates
hive - 23703 : fix a bug in load the table ' s dynamic partition creation logic ( krisztian kasa , review by jesus camacho rodriguez )
forbid round hack for scientific format ( # 2138 )
added directory traversal methods to handle directory entries in JarDirectoryStep to improve directory traversal functionality for better resource management
added a new class JWKSetEditor that extends PropertyEditorSupport to handle JWK set functionality to enable text input with JWK set in the application
replaced usage of BytesRef parameters with PendingTerm instances in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter classes to improve handling of pending terms by ensuring thread safety during term writing
add truffleboundary . resolveparameterklasses to handle throwableTracer static method , and use cached method to get parameter klass .
changed the default value of ` fetcher . threads . per . host . by . ip ` from true to false to disable IP retrieval by default for improved performance
refactor query timeout validation logic in StatementUtil . java to improve readability and maintainability of timeout handling logic
added imports and conditional path resolution for UnconfiguredTargetConfiguration in HaskellGhciRuleIntegrationTest . java to ensure proper handling of target configuration hashes based on project requirements
refactor ReplicaPosition class implementation to improve code readability and maintainability
fixed npe in case of wrong network usage stats interval
added a static final Interpolator for fade animations in the QuickstepAtomicAnimationFactory , AllAppsTransitionController , and AllAppsTransitionController to enhance visual effects by introducing a final fade animation option
updated navigation bar positioning to use a dynamic swipe length based on display density to improve user experience by accommodating more space during the transition
added a new module - info . java file for Jetty HTTP server functionality to define module dependencies and improve code organization
jsontest : fix nullpointerexception on myjsonobj and myjsonobj
reformatted the code for better readability by removing unnecessary parentheses to improve code clarity and maintainability
[ hotfix ] [ checkpointing ] fix default of checkpointingoptions . tolerable _ failure _ number to 0
updated InnerClassesTable to use ElementKind instead of TypeElement and added a new visitPackage method to improve type handling and enhance functionality for determining inner class references in package annotations
modify the initialization of the command string to remove an empty string to ensure that the command is only included when options are not already set
replaced ` FluentIterable ` with ` MoreCollectors ` for file listing to improve code readability and utilize modern Java features
fix dubbo register be disable by default ( # 4569 )
if security _ otr _ mode _ key be set , end all session
added new properties for node label outline size and transparency in the PreviewProperty class to enhance customization options for label rendering in the user interface
refactor ProxySelector , URL , and URLStreamHandler classes for improved readability to enhance maintainability and clarity of the codebase
changed the boolean parameter from false to true in Win32FontManager . java to enable a true option for improved font rendering
update TreeVisitor to set cursor when theVisitor is not null before processing to ensure proper cursor handling when the visitor is not null
switch to ierrorhandlingpolicy in jdtbatchcompiler when not need classpath
added content alignment and text anchor properties to LabelBlock and LabelBlockTests classes to enhance text rendering capabilities by allowing customizable margins
updated mmm and ppp classes to improve parameter handling to enhance clarity and maintainability of the code
refactored IndexReader . java to improve code readability to enhance maintainability and simplify future updates
updated the ` isLoopback ` variable type from ` boolean ` to ` Boolean ` and improved null checks for loopback checks to enhance type safety and prevent potential null pointer exceptions
added Locale parameter to the ` fromRfc1123DateString ` method and its usage across multiple classes to ensure consistent date formatting with locale - specific formatting
[ java ] fix test that fail on window because of missing file .
nifi - 7749 : add output _ no _ hits property to abstractjsonqueryelasticsearch ( # 5320 )
cloudstack - 7119 . fix calculation of aggregation ratio for usage
[ java ] add try statement around switch statement in election for good readability .
improve readfiles and streamfiles p ( # 2231 )
updated the logic for skipping the widget in PageChangeListener . java to simplify widget event creation logic for improved readability and maintainability
added isWriteProtected method to Workbook and HSSFWorkbook classes and improved username handling in RecordInputStream to enhance access control and provide clearer logging for excessively long usernames
added exception handling around unregisterInvalidatedSessions ( ) method call to improve robustness by logging warnings when an exception occurs during session checking
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
standardized the status message for bridge report light to " not reachable " to improve clarity and accuracy of the status reporting
add a loading flag to fml so client can more easily load . close # 7433
fix ` ` color not resolve ' ' unit . millions / unit . thousands ' ' issue .
updated MessagePackParser to handle different data types gracefully to improve error handling and ensure correct reading of string data
added a parameterized test for querying user account entities with reserved words as identifiers to ensure the query correctly handles user account identifiers that include reserved words
added tests for serialization and deserialization of nested maps using Gson to ensure proper handling and deserialization of nested maps in JSON format
add polygon offset to geometry ( # 601 )
updated sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to utilize a new sorting order dialog implementation to enhance user experience by allowing dynamic sorting order updates
exit ( 1 ) if there be no testplan
refactor methods in GeneratedEntityTranslator and JdbcManagerSupportImpl to use Lazy references for dbmsType , schemaName , and column names to improve performance by reducing unnecessary component references and enhance code maintainability
updated the argIdent assignment logic in the parser to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is only added to parameters when not null
updated default protocol setting to use dynamic protocol from scf to improve flexibility by allowing dynamic configuration of the protocol
set default value of displayVolume to true to ensure volume display is enabled by default
modified the version method to accept a boolean parameter and updated message retrieval to improve clarity of version information and enhance error messaging for better debugging
refactor ChangeLogParameters to improve handling of empty result sets and streamline condition checks to enhance clarity and maintainability of the change log query logic
changed log level from warn to debug for transaction execution failure message to reduce log verbosity and improve performance during transaction execution
hhh - 13663 skip test for oracle due to bug in basicformatterimpl cause exception
moved the startHandshake and setSoTimeout calls to maintain socket timeout settings before establishing SSL connection to ensure proper socket timeout management
updated action bar size calculations to account for MainActivity ' s popup status bar to ensure accurate height calculations when translating to the MainActivity
[ gr - 46711 ] enable chrome by default , fix # 46711 .
resolve http : / / issues . apache . org / activemq / browse / amq - 2840 - apply patch with thanks . also add debug log
removed unused imports and refactored test methods in JodaTimeRangeRandomizersTest . java to streamline test code and enhance readability
refactor resource loading to use conditional redirection based on the SERVLET _ MAJOR _ VERSION to enhance compatibility and ensure proper resource loading based on servlet context
refactor readiness . isready logic to also check for node status .
fix race between live and handler endpoint list in storageproxy
fix exception when table creation be null or empty
drill - 7951 : bump user rpc version due to change in rpcfailure behavior .
added a security manager check before retrieving the caller class in ObjectStreamClass and ObjectStreamField to enhance security by ensuring package access is only verified when the security manager is properly initialized
removed unused imports , simplified method implementations in Utils . java , and made UGSCommandCount variable private in XLCDCommunicator . java to improve code organization and encapsulate functionality within the project
refactor DefaultMetricsTagProvider to use a map for tag names instead of an ImmutableMap to improve code readability and maintainability by centralizing tag handling
simonstewart : re - enable the mock browser test to see if it fail .
changed the default logging level from OFF to ERROR in the Launcher class to better reflect the error handling behavior in the application
changed variable declarations to be final in IconNormalizer . java to ensure immutability and prevent unintended modifications to the array
ww - 3944 add hook to allow set the first call prepare do
clean up home / back behaviour in overview mode ( issue 10965421 )
made ` AuthWithStoreFeature ` and ` Auth ` classes Singleton by removing ` asEagerSingleton ( ) ` method calls to improve performance by reducing unnecessary singleton binding
updated the ` incomingAssociations ` method to include a ` ignoreInvisibleAssociations ` parameter to allow control over the exclusion of visible associations during data processing
cloudstack - 2120 : do n ' t create private ip capability when deploy a pod in cloudstack
improve documentation for async profile on linux 4.6 +
refactor ModelResolver to adjust required property handling and add a new class RequiredRefFieldModel to improve clarity and functionality of required field handling in API schemas
updated class names from CasCoreConfigurationWatchConfiguration , CasCoreEnvironmentBootstrapConfiguration , and CasCoreStandaloneBootstrapConfiguration to improve clarity and consistency in naming conventions
updated feature toggle logic in FeatureFlags . java to enhance functionality and improve performance
[ hueemulation ] correct format of unique value for large item . ( # 11977 )
added image drawable wrapper if picture is available in TimeLineCursorAdapter and TimelineArrayAdapter to enhance image loading efficiency by setting the drawable directly
updated error messages regarding minor and insert - only compaction settings on full CRUD tables to clarify that compaction functionality is intended for insert - only tables
added a null check for the storage path before proceeding with the wait process to ensure that the process does not continue if the storage path is not available
refactor resize threshold checks to use a unified checkResize method to improve code readability and maintainability by centralizing the resize condition logic
renamed LDAPConnectionService class for clarity to improve code readability and maintainability
camel - 10273 : deprecate xmlattribute in org . apache . camel . model . aggregatort definition a it be not really need .
remove the comment out code that be comment out by accident .
added a condition to check if the class name starts with " com . intellij . rt . junit . " to ensure compatibility with IntelliJ IDEA builds
update assertions in TestMultiSearcher to use hits2 and hits3 instead of hits . length to ensure accuracy in testing multi - searcher functionality
add a new class LucenePackage to encapsulate the creation of Lucene packages to improve code organization and facilitate access to package data
adjust the calculation of sizeInBytes in the RAMDirectory class to ensure accurate size calculation logic
hive - 23737 : add an estimate on the aggregation rule ( gopal v , review by jesus camacho rodriguez )
added a null check for the drawable toggle before processing animation actions to avoid potential NullPointerExceptions when the drawable toggle is not initialized
added @ SuppressWarnings annotation to the convertToAuthentication method signature to suppress unused warnings for the unused method
added conditional logic to control whether classes are scanning based on override and system classloader overrides to enhance flexibility in managing classpath scanning behavior based on specific class loaders
fix msbib export format for corporate field ( # 1564 )
added core state cancellation logic to the CoreContainer class to ensure that all core states are properly canceled during shutdown
refactor time measurement and position difference calculations to use a custom method for getting current time in milliseconds to improve precision of time measurements and clarify the output calculations for better readability
try to fix tabbing issue in repoeditview
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 178 )
added security context utilities and updated the SecurityExpressionRoot initialization in the SecurityEvaluationContextExtension class to ensure proper role hierarchy handling and allow default role prefixes based on additional fields
added a condition to set the exponentSize if it is zero to ensure the exponentSize is always correctly defined based on primeSize
refactor file handling logic to utilize a new method for retrieving available space to improve code maintainability and reduce redundancy in file storage logic
fix : do not combine distinct accumulator in sqlaggregation ' s combine ( )
added a test method to verify post - login functionality on successful authentication to ensure that the login process executes post - login activities for successful authentication
lucene - 10273 : fix extra extractorspanishstrippedverb initialization ( # 1034 )
refactor CharArraySet to simplify contains method logic and improve readability to enhance code clarity and maintainability by removing unnecessary complexity in string containment checks
update error message and improve track type validation in muxerwrapper .
updated JsBundleGenrule to check for AndroidPackageable instead of JsBundleAndroid to ensure compatibility with Android ' s packageable handling in the build process
updated character encoding handling and improved string index lookup logic to ensure proper processing of UTF - 8 characters and enhance data integrity in the dictionary
updated drawable resources in InstrumentsFragment to use tile - icon resources instead of individual applications to improve organization and clarity of drawable resources in the application
added static variables for class name and class instance management to improve performance by avoiding unnecessary class instantiation when the class name differs from the provided class name
hbase - 20875 remove syncmetaleader ( ) from cluster state management ( addendum )
[ # 7536 ] student : remove ' response ' attribute from contribution question detail page ( # 7536 )
added import for TestLoggingExtension and annotated it with @ ExtendWith to facilitate logging functionality in the testing framework
mondrian : fix camel - case - mapping for some database component . also add a test .
added a new constant VIOMI _ WATERHEATER _ E1 to MiIoDevices . java to support the new water heater algorithm in the application
updated the usage of ` getSslSessionData ( ) ` to directly use ` sslSessionData ` for obtaining SSL session data to streamline code and improve readability by reducing method calls
add a new file ` CreateNewSpreadsheet . java ` that creates a Excel sheet with specified text and comment properties to implement functionality for creating newly created sheets in a Excel file
fixed - spring . cache . redis . ttl = 0 should default to ttl 0
updated content URIs to use CONTENT _ URI _ NO _ NOTIFICATION for favoriting operations to eliminate notifications during insertions to enhance user experience
fix : update gradle gradle dependency to 2.27 . 2
replaced the synchronized block with the ' this ' keyword for better readability to improve code clarity and prevent potential NullPointerExceptions
added a check for ' < ' character in the condition for ltLen in DocClassUtil . java to ensure correct handling of angle brackets in string literals
removed unnecessary String . format call in Workspace . java to simplify the code and improve readability
added a message to inform the user when no validation errors are found to improve user experience by providing feedback when validation errors occur
added web resource configuration and validation logic in IntegrationTestContextLoader . java to enhance resource loading capabilities and improve application context management
updated scroll handling logic and replaced component retrieval methods in multiple classes to improve component navigation and simplify component retrieval logic
updated the conditional check for UUID class type in RamlType . java to ensure proper type validation for UUID objects
added a new class ` ClientStat ` and updated related methods to use ` String ` instead of ` Long ` to enhance data representation of approved site counts and improve type consistency
updated regex patterns in CellContentConverter . java for correct handling of line endings to ensure accurate processing of values with line breaks in SQL queries
alexeibarantsev : fix test to work on window .
mondrian : fix for bug # 1742230 , document mondrianproperties . jdbcfactoryclass
8027163 : sun / management / jmxremote / bootstrap / customlaunchertest . java should be update for jdk8 removal of solaris - 32bit support
remove broken test for tumblrripper
added a conditional check for slot existence before converting storeType to ensure that the conversion process only proceeds if the symbol has a slot for the store type
fix clip clip times when use audio stream
lucene - 5688 : fix baselockfactorytestcase to print out utf - 8 encode
tika - 2338 -- add support for dynamic service loader in tika config .
refactor DocLint and DocLintTester classes to use diamond operator and update file handling to improve code compatibility checks and enhance clarity in handling Java file files
solr - 13063 : fix dataimporter to handle the ' import ' command properly
added a test method to verify that modifying inner classes if ignoreDefinition is true to ensure that inner classes are not modified when specific conditions are met
removed import of android . util . Log from JettyService . java to eliminate unnecessary dependency on Android ' s logging framework
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and replaced direct casting with it to allow the method to correctly handle workspace screens during item placement checks
add a new servlet class ` KillSwitchServlet ` and implement it in ` Jetty7AppServer ` to handle JVM termination to provide a mechanism for killing the JVM in the application
fix realtime row drop when more than one realtime row be treat a realtime
added a check to skip processing for Windows environments in the Tests . java file to avoid issues with Teredo display names in Windows environments
added a warning dialog for when the protocol provider is not registered to improve user experience by notifying when the contact address is not available
replaced the use of ` getReaderContext ( ) . getRegistry ( ) ` with ` BeanComponentDefinition ` for registration to improve clarity and maintainability of the bean registration process
be 0bfb889e : be 54000490 : fixing issue where fastbitmapdrawable be not scale the draw into the correct bound . ( bug 9075202 )
fix wrong date comment in meitrack and totem protocols
changed method access modifiers and updated method calls in SunFontManager and X11FontManager classes to enhance encapsulation and improve font path retrieval logic
mark multiple methods in EnhancedRandom as deprecated to indicate that these methods should no longer be used and may be removed in future versions
[ scb - 2652 ] assert that reachedmaxsizeexception be properly throw in clientmaptoretest . testreachedmaxsize ( )
added functionality to control the behavior of empty sentences in the DocumentPreprocessor and SentimentPipeline classes to allow users to option to keep empty sentences for improved performance
added additional error handling to the createArtifactSubdirectory method and changed return type of createArtifactSubdirectory to boolean to improve code clarity and provide more informative error messages for better debugging
removed unnecessary ` IDELazyTreeLoader ` class and replaced it with ` JavaCompilerService . NO _ MODULE _ COMPILER ` in ` JavaLanguageServer . java ` to streamline code by eliminating unnecessary classes and to utilize a more efficient compiler service
bug 10727 : fix npe in directagentattache when a resource return null answer
do n ' t swallow exception in case of email send fail
fix nullpointerexception in item pipe , and add miss null check .
updated DateFormatEvaluator , FileListEntityProcessor , and TestVariableResolver to use Locale . ROOT for timezone handling to ensure consistent parsing of date formatting based on the provided locale
added a boolean field ` includeDecals ` to ` StorageOptions ` and implemented functionality for UI components to allow users to toggle whether to include decal storage options in the user interface
updated Liquibase documentation generation to include a null parameter and removed an unused method in LiquibaseTest to improve documentation generation integrity and clean up code for better clarity
hive - 18727 : fix log perf logger end time parsing ( krisztian kasa , review by jesus camacho rodriguez )
updated warning messages in SolrIndexConfig and DocExpirationUpdateProcessorFactory for clarity to improve readability and maintain uniformity in log messages
added a new constant MAJOR _ VERSION to the output for class file version checks to ensure compatibility with class file versions and improve clarity in error reporting
added a new test class LdapPasswordAuthenticationTest for LDAP user authentication to ensure the correct user context is used for LDAP user connections
updated import statements and modified condition in TaskCompiler . java to utilize BasicStatsNoJobTask for footer scanning to improve code clarity and functionality by utilizing the new task structure
prevent npe on save all action ( # 5188 )
refactor VisibleAdvance class for improved readability to enhance maintainability and clarity of the code
fix # 3545 : reflector stop work without reconnect
added checks for dynamic number columns in EdgeDataTable and NodeDataTable to enhance compatibility with dynamic number data representations
added null checks using Objects . requireNonNull for group ID and version in RawPom . java to enhance code robustness by preventing null pointer exceptions
updated API assignment to ensure fallback to the existing API when apiInfo is null to improve robustness by preventing null assignment to the API variable
updated HeadersConfigurer and CacheControlHeadersWriter classes for consistency to improve code maintainability and readability
added disposal methods and improved shader shader handling in PhotoPanel and FlameRenderer classes to ensure proper resource management and prevent memory leaks during shader resource cleanup
fix ignore max variable detection and add context menu for method .
fixed arrayindexoutofboundsexception in CSSparser . parsestring ( ) , now properly handle multiple line break .
set default Look and Feel decoration to true in UIServiceImpl to improve user interface responsiveness by adjusting visibility based on application properties
removed unnecessary ' this ' keyword keyword from the SQL query in HostRoleCommandDAO . java to simplify the code and improve readability by using direct method references
updated test functions in LJ1200Message . java to use more descriptive names to improve clarity and maintainability of test execution scenarios
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
replaced HostDatabase with ColorStorage in ColorsActivity . java to utilize color storage for improved data handling
refactor methods in String class to improve code readability and maintainability
removed unused SLF4J logger imports and added new logger initialization to various classes to improve code cleanliness and ensure proper logging functionality
added a method ` getGlobals ` to return an array of entries from the map to facilitate easier retrieval of data from the map
added multiple assertions for the sendcoin method in MultiSign34 . java to ensure the method correctly returns the expected results of the sendcoin method
test : migrate CUfiltertest to junit 5 ( # 4527 )
replaced use of a hardcoded path separator with a system - independent path separator to ensure consistent path formatting across the application
changed the access modifier of ` augmentSuccessViewModelObjects ` from static to instance - level to allow subclasses to access these methods within the same package for better instance management
added assertions for field presence in metamodelFor and updated field retrieval method in TestUtil to ensure correct field presence handling and improve test reliability
removed the configuration parameter from the Outlink constructor calls across multiple parser classes to simplify the code and eliminate unnecessary dependencies
removed the ` LexicalContext ` parameter from multiple methods to simplify method signatures and improve code readability
do n ' t use lambda for private method ( fixes # 376 )
remove appendclassselector since we already register it in m _ classFilesets
removed the unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline the optimization process by avoiding unnecessary checks
fix miss registry event mapping , now work in the pool
swapped the assignments of x3 and y3 assignments in the Intersector class to correct the assignment logic for coordinate calculations
added default methods ` sbeDecodedLength ( ) ` and ` sbeLimit ( ) ` to the ` MessageDecoderFlyweight ` class to establish a foundation for future compatibility with SBE
updated import statements and modified the Elasticsearch container version handling to ensure compatibility with the latest version and improve test reliability
create a copy of message byte array to avoid unnecessary allocation .
ambari - 12790 : upgrade hdp - 1.2 . 0 to 2.0 . 0 ( mahadev )
camel - 14263 : camel - ftp should use source code generate configurer to avoid reflection configuration .
zeppelin - 205 . set status to read if dependency can not be fetch
modified the code assignment logic in Gen . java and added a new NoLocalsMustBeReservedForDCEedVarsTest . java file to ensure correct behavior of local variables when the class is not available
added a new class ` BuildEEBasicConstraints ` and modified ` ForwardBuilder ` to handle basic constraints to implement and verify the behavior of basic certificate constraints in the security context
added initialization logic for PostgreSQL version 9.4 and refined SQL insert operations in JdbcPostgresqlDAO to ensure compatibility with PostgreSQL version 9.5 and improve data integrity during database operations
updated WebSocket message size handling and added a minimum buffer size validation in AbstractWebSocketConnection to improve message size flexibility and enforce buffer constraints for WebSocket connections
replaced the boolean flags ` undeleteAll ` with ` pendingDeleteCount ` and modified assertions in ` SegmentReader . java ` , and added a test case in ` TestIndexReader . java ` to ensure correct handling of deletions and validate the functionality of the IndexReader
updated null check for scopes in ClientRegistration and modified test cases in ClientRegistrationTests to ensure proper handling of null values and enhance test coverage for various scenarios
added null checks for the orderBy variable before adding it to the expression and explanation to avoid potential NullPointerExceptions when orderBy is not provided
[ java ] use matcherassert . assertthat in clusterentrypointtest . testavailability .
server : allow restore vmsnapshot when vm be back up ( # 4347 )
hive - 25875 : add debug log message to hive server2 ( jesus camacho rodriguez , review by gopal v )
added a check for empty tasks before comparing asset names to avoid potential errors when there are no tasks to process
fixed npe when try to delete a node , if the corresponding error condition be not found .
fix a bug : the query do n ' t respect relationtype when all relation be in one place
pdfbox - 2852 : do n ' t throw exception for empty barcode
replace TreeSet with LinkedHashSet for the suites in SSLContextImpl . java to ensure predictable iteration order for cipher suite collections
added a method to check if the character is a control character and updated the expected string to ensure proper handling of control characters and improve test accuracy
updated ` ProviderSqlSource ` to check for overloads of ` CharSequence ` types before processing methods to ensure compatibility with SQL provider methods that can not overload
updated import statements and added null check for aliasChildren in InternalMNode . java to enhance robustness by preventing potential NullPointerExceptions
added a method to calculate the transition offset for a page in PagedView and modified scrollDelta calculation in Workspace to improve the scrolling logic for better user experience
replaced the variable name ` synthetic ` with ` pruned ` and simplified the transformation logic to improve code clarity and ensure consistent handling of compilation units
added a method to set the accessibility of the method to ensure the method is accessible for external use
added a conditional check to exclude the " database . server . id " field when setting the default value to ensure proper handling of database configurations based on their raw name
update Mozilla / 5.0 ( Windows NT 10.0 ) to AppleWebKit / 537 . 36 ( KHTML , like Gecko ) Chrome to enhance compatibility and performance of the application
added a web interface menu item to open a URI using PMS to enhance user experience by providing a direct URL to the server
refactor HandleGetter to use a consistent name for the actual value instead of a new one to improve code clarity and maintainability by standardizing variable naming conventions
added a try - catch block around the buildRecordAtOffset method call in EncryptedSlideShow . java to handle potential ArrayIndexOutOfBoundsException when building a record
[ flink - 26550 ] [ checkpointing ] minor refactor to improve checkpointing logic
load battle pass manager before avatar postload to avoid null pointer exception
update Docker image version in the PortForwardingContainer . java file to support new features and enhance security settings
added largeObject array and garbage collection logic in ThresholdTest . java to ensure a clean state for testing purposes
updated conditional checks in StdErrLog and enhanced debug logging mechanisms in StdErrLogTest to ensure only valid log levels are processed and improve test accuracy
fixed - rremoteservice . getremoteserviceloader ( ) method throw classcastexception . # 3079
added functionality to retrieve and set the selected state of a MultiButton using getter and setter methods to improve user interface functionality by allowing dynamic selection of options
updated the import and intent to use NextUpActivity instead of UpNextActivity to transition to the NextUpActivity for better navigation experience
[ issue # 5077 ] fix bug that prevent replicasmanager from be initialize after brokerconfig . isenablecontrollermode ( ) be call
reactivehealthindicator : ensure connection be close when create a health indicator
refactor background color retrieval to utilize theme color from resources directly to improve consistency and simplify theme color management
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
added type adapter imports to the ToolingApiLauncher class to enhance modularity and facilitate future updates in the build process
updated the order of 55 elements in TestPayloadCheckQuery . java to ensure accurate validation of payload checks
refactor ConsoleReader to conditionally print strings with specific mask handling to improve flexibility in displaying output based on string length
added user and command line information to display the user context to enhance the user experience by providing context information during the operation
move test code from graalvm . compiler . test to graalvm . compiler . api . test
[ hotfix ] remove unused parameter in slotsharinggroup
updated comparison logic in StreamExInternals . java and refined dropWhile handling in StreamExTest . java to ensure compatibility with Java 8 and simplify dropWhile functionality
updated texture paths in DecalTest , MusicTest , and SimpleDecalTest files from " data / cloudconnected . png " to " data / sys . png " to streamline texture management and improve organization of audio data
reorganized the registration and unregistration of the IntentFilter for system dialogs to improve code clarity and ensure proper unregistration of the receiver
updated import statement for Cluster in HostsRemovedEvent . java to ensure consistency with the correct package structure in the event handling class
updated ClientDetailsEntity , IntrospectionEndpoint , and IntrospectionEndpoint to enable introspection support and modified token handling logic to enhance token introspection functionality and improve error handling for different scopes
added HTML encoding for remote user and session attributes in HtmlSessionInformationsReport . java to ensure that user input is properly encoded in the output
added PhrasePrefixQuery and SpanQuery links to the query class to enhance query functionality and improve link clarity
fix # 792 : string . isempty ( ) should be use to test for emptiness
updated the method for checking string arguments in NoValueOfOnStringType . java to improve clarity and maintainability of the string concatenation logic
updated method signatures to replace generic type ` A ` with ` Object ` in multiple classes to improve type safety and flexibility in handling different object types
updated the ThrowingFunction interface to be more generic and modified the associated imports in JwtPlugin . java to improve type safety and clarity in the handling of exceptions within the JWT plugin
refactor uploader behavior methods in AppPreferences and PreferenceManager classes to streamline preference management to enhance code readability and maintainability by consolidating related functionality
fix : correct handling of final field in constructor ( # 1211 )
updated BitmapDrawable initialization to use Robolectric ' s bitmap class to ensure compatibility with Robolectric ' s features and improve performance
corrected the spelling of " isValidSEnding " to " isValidEnEnding " in two methods to improve code readability and prevent potential bugs related to string processing
updated PageMarkerResources to use a different drawable resource for the current page indicator to improve visual clarity by distinguishing the current page indicator
added a volatile integer variable ` reinvocations ` and modified string concatenation format in ` BasicInvocation . java ` to improve tracking of the number of reinvocations during the operation
update the formula for calculating topPadding in DefaultLookAndFeel . java to ensure accurate vertical alignment by using InnerHeight instead of getHeight
added a break statement in the Recognize class to terminate a loop or switch case execution early
added preference management functionality to manage lock home screen visibility to enhance user experience by providing haptic feedback when the lock home screen is locked
add support for text formula type in the Excel batch reader to ensure proper handling of formula types in data processing
fixed bug 1312723 - check for anonymous inner class be ok in a method signature .
added user agent management in CommaFeedConfiguration and HttpGetter classes to ensure user agent reflects the current application settings for better access
camel - 8195 : add javadoc to model class so we have eip documentation out of the box
changed log level from info to debug for file not found message to reduce log verbosity for better troubleshooting
rename QueueTest to QueuedPipeTest to clarify the purpose of the test class for QueuedPipe functionality
updated version check logic in BukkitMain . java to verify if OfflinePlayer is present to ensure compatibility with server versions and improve reliability of player identification
improve debug log message when no include pattern be select
[ fix ] pshape3d now support vertex color .
updated SchemaDotFormatter to include a new boolean parameter ` isPkColumnFiltered ` and modified foreign key handling logic accordingly to enhance the functionality of foreign key filtering based on the filtering state
removed unnecessary Shadow import and method calls in ShadowMotionEvent . java to streamline code by directly using the matrix ' s getValues method
changed package declarations for MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser . api ` in multiple Java files to streamline the package structure and reduce unnecessary dependencies
groovy repl : remove unused / redundant code
move plugin context listener to io . hawt . branding . plugin to allow reuse
removed redundant print statement for command output to clean up the code and improve readability
replaced updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) to improve responsiveness and responsiveness of the flight configuration
added a test for expected exception handling and improved assertion logic to ensure proper error reporting for expected causes and enhance test reliability
removed unnecessary flatten name and package retrieval in AutomaticDependencies . java to streamline code and improve readability by eliminating unnecessary complexity
update scope handling logic in ClientDynamicRegistrationEndpoint to check for allowedScopes instead of requestedScopes to ensure that the correct number of scopes is used in dynamic registration
eranmes : adding test that verify that we can set profile in firefox .
camel - 8193 : added route description to the route api . thanks to benjamin graf for the patch .
refactor JavacTreeMaker class for improved clarity to enhance maintainability and readability of the code
added a line to set the weight of an edge in the ImporterCSV class to enable dynamic weight adjustment for the edge data
add a method to get the tariffs cost per hour for the current month ( # 11954 )
modified SQL queries in DatabaseMetaData and DatabaseMetaData to include an additional column ' adsrc ' to enhance data retrieval accuracy by including additional data source information
added an assertion to check if binarized sentences are not null to ensure that the parser correctly handles cases where binarized sentences are not built
updated User . java to include detailed information about the User object to enhance debugging information for better traceability of user instances
improve error message when extract body of a message
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory # fromexecutionvertex to be public
fixed rosteraccess . cansubscribe ( ) to a member of a group . jm - 374
added a new reference to the Maven test classpath in AbstractJRubyMojo and removed an unchecked @ Override annotation in CucumberMojo to ensure proper dependency management and eliminate unchecked warnings
removed redundant checks and assertions in MethodHandleImpl . java and added a new test method in MethodHandlesTest . java to simplify the logic and ensure compatibility with user method signatures
added imports for StopFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilterFactory in multiple files to enhance functionality by integrating Lucene ' s Analytic filters
increase width and height comparison conditions in URLImage class to allow for more flexible image handling when dimensions differ
updated class name handling to exclude " META - INF / " as a valid class extension to ensure only valid classes are processed in the list
added delayed tasks to createImageToFileSystem and createImageToStorage methods for editing functionality to improve UI responsiveness by offloading tasks when editing is active
updated version comparison logic in StackWalkerTest . java to use the correct expected value to ensure compatibility with newer version checks and improve clarity in test output
change access modifier of addViewportJob method from protected to public to allow broader access to the method for improved functionality
remove unused ` partitions ` parameter and update the ` buildFlow ` method signature to simplify method signature and ensure consistency across the codebase
removed server shutdown behavior from TestDatabase . java to improve server stability during application shutdown
added null and empty check for block in NodePathsConvertOperator and SchemaQueryMergeOperator classes to improve robustness by handling potential null or empty blocks gracefully
added functionality to retrieve the total harvesting time in various classes to enhance the analysis capabilities by providing accurate harvesting time information for better traceability
updated font drawing colors for various components in ParticleEditor . java to improve the visual appearance and responsiveness of the user interface
add logic to update ` keyserver _ port ` configuration properties based on the ` hadoop - env ` properties to ensure proper configuration management for the Hadoop environment in the application
set transparent background for svgviewer to avoid flicker
removed the minSdk attribute from ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the configuration for better clarity and maintainability
updated the parameter name from ` accumulate ` to ` varargs ` in the ` containsExactly ` method and added a corresponding test in ` IterableTest ` to improve clarity of method parameters and ensure proper functionality through testing
updated bucket configuration handling to improve clarity and structure to ensure that bucket access is forbidden when the key is not defined
updated various classes related to German language handling and text file loading to enhance functionality and improve clarity of language functionality
added support for materialized views in query processing to enhance query processing capabilities based on query properties
rengine . findclass ( ) should return false on noclassdeffounderror
updated TraceFilter and TraceWebFilter to utilize SpanAndScope for span handling to enhance tracing capabilities by improving span management and scope management
update exception message retrieval to handle null cause to ensure that the application does not throw a null pointer exception
updated exception handling in CommonsHttpSolrServer to include the base URL to improve error reporting by providing more context about the SolrServerException
modified landscape setting logic in HSSFPrintSetup . java to correct return value based on printSetupRecord ' s landscape value
updated return statement to handle null object case to ensure safe access to NullWritable to prevent potential NullPointerException
added a check for " \ t " and an empty argument name in ArgDesc . java to ensure that invalid argument names throw an appropriate exception
added background location listener handling to the AndroidLocationPlayServiceManager to improve location updates efficiency and prevent memory leaks
change the condition from " ! = GL10 . GL _ POINTS " to " = = GL10 . GL _ POINTS " in the MeshBuilder class to correct the logic for handling different primitive types
trufflestring : fix a bug in length validation .
added a method to set the command list status in ComboBox to ensure the command list is correctly configured for user interface operations
nifi - 6877 - fix handling of alias filename with forward and backward compatible .
updated command print statements to use ' localhost ' instead of ' ZkCLI . sh - cmd ' to standardize command line usage across the application
[ wemo ] fix problem with progress update ( # 12586 )
added a conditional check for remote Grpc status before posting a severe message to ensure build failures are only logged when the Grpc status is OK
refactor method signatures and remove unnecessary whitespace in multiple Java classes to improve code readability and maintainability
added entity ID to the ticket type check to ensure only valid entity IDs are added to avoid potential issues
fix checkstyle issue in glsurfaceviewapi18 . java ( # 740 )
added support for retrieving supported locales in FeatureRegistry and InfoRequestHandler to enhance functionality for handling supported locales in the application
update server URI assertion to use a specific " Host : myhost : 1234 " format to ensure proper handling of requests in the test environment
added a method to the addToHelperList method in the Construction class to enhance the utility list functionality for improved data handling
added handling for edge cases in GlyphLayout . java to skip the first element of " [ [ ] ] " to ensure proper processing of special characters in layout calculations
added security permissions handling in mmm Transport . java and mmm TCPTransport . java to ensure safe context class loader manipulation and thread naming within privileged actions
receiveexternalfilesactivity : fix nullpointerexception when the folder be null
modified the initialization of ITestNGListener to handle potential null class loader to ensure proper loading behavior when m _ serviceLoaderClassLoader is null
removed debug log statement in BarrowmanCalculator and modified the calculation of deltap in TubeCalc to simplify the code and improve the accuracy of tap calculations
added conditional checks for Node and Edge columns in TimelineControllerImpl . java to ensure proper column assignment based on object type
register extra component for broker admin application to allow reuse instance
added a test method for bug4658 related to SQL execution in MultiCfQueryExecIT . java to verify that the database correctly handles dynamic table creation and retrieval
peergroup : use a linkedlist instead of a list in the case when there be no witness support .
fix infinite loop when update cycle . close # 289
added retry attempts and schema max retry attempts configuration to Ratis configuration to enhance retry behavior and improve resource management based on configuration settings
updated multiple Java classes to improve code structure and organization to enhance maintainability and readability across the project
updated JMXHelper instantiation to check if the class is managed before unregistering the object to enhance the reliability of service management and prevent potential NullPointerExceptions
tika - 2338 -- upgrade tika 1.5 . 1 to version 2.4 . 0 , and add a test that hanlde non - unicode entry name be always return in the zip file
8280217 : c2 : assert ( false ) fail : uncovered behavior of multiplication with SIGFPE
added methods to lookup generic interface types and superclass types in TemplateRegistry to improve type resolution accuracy for parameterized types
updated the initialization value of ByteArrayOutputStream from 512 to 1028 to adjust buffer size for performance optimization
add todo for chinese , acrabic , korean and farsi ( persian ) un yet available
changed byte array handling in TransferCompletionHandler to loop through buffered transfer to improve performance and reduce memory usage during transfer operations
remove deprecate windowfocuslistener in favor of windowadapter in the menu
refactor semantic exception handling to include a null check for the source node to improve error handling and provide clearer context when the source node is null
skeletonrenderer : fix render to properly respect mesh scaling
added getSolrHome method to DistributedClusteringComponentTest and its implementation in BaseDistributedSearchTestCase to standardize the method for getting the Solr home directory for testing purposes
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning for improved functionality in the application
remove deprecate account method in userlistitem ( # 6372 )
added unit tests for installing package defaults and improved handling of package names to ensure correct package name retrieval and default values are used when installation fails
improve documentation for org . hibernate . cfg . availablesettings . cdi _ bean _ manager
added TransactionCapsule instances and modified constructors in TransactionTrace . java to improve transaction management and initialization handling
add client property to toggle whether to shuffle member list
changed the type of ` val ` from ` Text ` to ` CrawlDatum ` in ` SegmentReader . java ` to improve data handling capabilities by using ` CrawlDatum `
refactor JsonDeserializer class for improved readability to enhance maintainability and reduce technical debt
updated configuration names and modified fetchSize initialization in TsfileDBConfig . java , QueryProcessExecutor . java , and OverflowQueryEngine . java to improve configuration naming consistency and optimize fetch size handling
updated the string argument description from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the purpose of the method as intended for truncation
removed the import of ` ExecutionContext ` from ` TaskletStep . java ` to eliminate unused dependencies and streamline the code
initialize the title variable to an empty string to avoid potential null pointer exceptions when accessing the title
added body handling in AsyncHttpClientCall and a test for it in AsyncHttpClientCallTest to ensure that an empty body is returned when no body is present in the response
bring back deprecate interface to avoid warning
add registermacevents ( ) method to jabrefframe so it can be use by custom lexer
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity and specificity in testing service token retrieval
added a return statement to the method ` toEnum ( type , string ) ` in ` HandlerLibrary . java ` to improve the logic for handling enum types
changed the visibility of hideUnprivilegedObjects variable from private to private final to ensure immutability of the variable after initialization
fix log to fine for audio data source test .
added a check for Android Q to save a video URL on Android 11 to ensure compatibility with devices that do not support Android 11
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 531 . ensure variable be serialized correctly
updated multiple Java classes related to EhCacheTicketRegistry , GoogleAccountsService , and SamlService to improve code organization and maintainability across the project
[ mng - 6977 ] avoid redundant logger . get ( ) call in mng . logging . loggerfactory
deleted the DataOutputOutputStream class and updated its usage in HbaseObjectWritableFor96Migration . java to eliminate unused code and improve maintainability
removed the setting of " hive . stats . column . autogather " and set it to false in TestAcidOnTez . java to ensure that the test correctly sets the autogather mode for accurate statistics
change log level from info to debug for enhanced class log message to reduce verbosity and improve performance during development
add Conscrypt provider name to the OpenSSL provider and change the default provider name accordingly to ensure compatibility with RMI systems and improve provider name identification
added Captor annotation processing to MockitoBeforeTestNGMethod for instance fields to enhance Captor functionality in test cases
added checks to ensure that class and method names are enabled based on the presence of test cases to improve error handling for missing test cases to avoid runtime errors
refactor GroovyAutoComplete and GroovyLanguage classes to improve prefix handling and condition checks to enhance code readability and ensure proper processing of XML character prefixes
import graphhopperosm instead of graphhopper ( fixes # 467 )
[ java ] re - enable retries for remote client to retry more quickly .
changed the mHideSysUiScrim variable from final to non - final and added visibility control for the top shadow to allow dynamic control of the scrim ' s visibility based on user preferences
renamed the method ` enqueue ` to ` execute ` and modified the cancellation logic in ` OkHttpCall . java ` to improve method clarity and ensure cancellation is properly managed before executing operations
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
updated RequestMatcher interface to extend RequestMatcher to ensure compatibility with Spring Security ' s RequestMatcher class
8033414 : assert ( false ) fail : miss ' if ' clause in deferredattribute ; add a new class java. lang . class
fix a couple of ide warning and improve unit test .
added tests for applying qualifiers to display metrics with default and with density to ensure accurate handling of display metrics dimensions based on device dimensions
updated exception handling and modified timestamp initialization in multiple test classes to improve test reliability and ensure accurate timestamp representation
updated icon resource reference in RootCursor . java from ` drawable . logo ` to ` ic _ launcher ` to improve visual representation of the icon used in the application
added errorbuilder . setContentText ( content ) method to FileUploader . java to improve error handling by including the content of the error message
refactor ConcurrentHashMap class implementation to improve performance and maintainability of the code
added methods to adapt UserTrades and updated AbucoinsAdapters , AbucoinsTradeService , and AbucoinsTradeServiceRaw to adapt user trades to enhance functionality by allowing dynamic handling of user trade data
refactor PlotSquared and Claim classes to streamline event handling and add new case statements in Delete and SetBlockFast _ 1 _ 8 classes to improve code readability and ensure correct behavior in player interaction
simonstewart : applying patch from james strachen add a ' htmlunit ' feature to the htmlunit driver
added support for handling " VARBINARY " data type in BlobType to enhance data type support for VARBINARY data types
refactor cookie version handling logic in SetCookieSupport . java to improve clarity and correctness of cookie version checks
test : fix synchronization issue in libfificoncontext
updated InboundBuffer to utilize ContextInternal and VertxThread for context management to improve type safety and clarity in context handling
updated timeout settings and refactored test cases in LdapTimeoutTest and LdapTimeoutClass to improve test reliability and clarity regarding timeout behavior
corrected the spelling of " UniocdeData . txt uniName . dat " to " UnicodeData . txt uniName . dat " to ensure accurate usage text for better readability and usability
( chore ) camel - cxf : keep the inout header for cxf test
8025070 : [ javadoc ] fix some javadoc error in javax / swing / plaf / synth
added BoosterSet parameters to ComponentAssemblySaver and modified return value in BoosterSet to ensure correct handling of boost settings and correct return behavior in the component assembly
added proxy authentication using the java net Authenticator in JabRef . java to enhance security by allowing user authentication based on the requestor type
clean up blockchain metric and fix some typo
do n ' t fail fast when compile stub be not support
updated logging framework in TestIPCUtil . java to use LogFactory for better logging capabilities to improve logging consistency and maintainability across the codebase
removed chunked transfer encoding handling from the NettyRoutingFilter to simplify the request processing by directly using the HttpClient
added a call to ` clearAttributes ( ) ` in ` PatternTokenizer . java ` to ensure the attributes are reset before processing new data
added polling period parameter and improved verification handling in VerificationAfterDelayImpl to enhance the flexibility and error handling during verification processes
added a new configuration for HIVE authorization manager and modified conditional logic in SemanticAnalyzer , SessionState , and QueryCompactor classes to enhance authorization handling and ensure proper session management during compaction operations
[ zeppelin - 3747 ] . do n ' t copy interpreter in zeppelin - zengine
hbase - 15410 addendum fix findbugs warning in hbaseadmin . gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to instability
removed the calcXBounds method and its implementations from multiple renderers to streamline the code by eliminating unnecessary x - bounds calculations
cleanup xmlreader resource on error .
release the bytebuffer to prevent memory leak .
add a new test class ` UseDiamondOperatorWithVarTest ` and update ` Java17TypeSignatureBuilderTest ` to use it to improve test coverage and ensure correct behavior of var conversion operations
added null and closed check for ResultSet before closing it to avoid potential NullPointerExceptions and ensure proper resource management
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 to support new features introduced in the database
fixed bug 1244480 - ` ` usestringbufferlength ' ' may not work when literals be empty .
removed error logging statement from RemoteSparkJobMonitor to improve error handling by reducing unnecessary log output
modify the createDb method to return a Connection instance to ensure proper resource handling and prevent potential memory leaks
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 183 )
hbase - 27113 add an option to disable max heap compaction ( # 4619 )
updated BitstampDepositAddress to handle both " address " and " deposit address " JSON structure to improve JSON parsing and ensure correctness of deposit addresses
replaced IllegalStateException with an IllegalArgumentException in BufferingResponseListener to improve error handling by explicitly signaling the failure to buffer capacity
updated the method to check for absolute paths when linking to deleted directories to ensure the link path is correctly processed before proceeding with further operations
updated InvocationFinishedEvent class to implement MetricsEvent and modified method signatures accordingly to enhance metrics handling for better observability in method invocations
updated the logic to check for multicast support in OptionsTest . java to ensure that only multicast network interfaces are returned , improving robustness
added a loop to check for a valid checksum string to ensure that only meaningful checks are processed
added a clone method to the BufferedChecksumIndexInput class to indicate that the cloned IndexInput instance is not yet implemented
updated distance calculations in Circle . java to use a radius multiplier to enhance the accuracy of geometric computations
[ java ] do n ' t cache frequency band for p25 channel and their parent channel .
rename private fields and constructors in GestureDetector for clarity and consistency to improve code readability and maintainability by using more descriptive variable names
fix default _ insert _ on _ write to be false instead of true
added a lastFillTime parameter to CryptoFacilitiesAuthenticated and util classes , along with a utility method for formatting crypto facets to enhance functionality by allowing users to specify the last fill time for cryptocurrency
added a ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and multiple classes to provide a way to retrieve the delegate method for tracing operations
updated FileActivity and FileDisplayActivity to handle file synchronization and error responses more effectively to improve user experience by notifying listeners related to full folder synchronization events
added stream writable method handling in ForeignIncubatorQuicheConnection and JnaQuicheConnection to enhance functionality and error handling for stream operations
add a boolean parameter to the javascript context to enable enhanced functionality by allowing conditional execution
removed the left padding from the TableCell constructor calls and replaced it with a static constructor to simplify the format handling and improve readability of the TableCell constructor
added a new file TracingAutoConfiguration . java to configure tracing functionalities to enable improved configuration of tracing functionality in the application
replace duplicate addition of s _ info1c with a new Para instance to ensure consistency in the data processing logic
updated the method signature and variable names for queryable segment handling in ServerQueryExecutorV1Impl . java to enhance clarity and maintainability of the code
refactor VertxBufferTest . java for better organization to improve code readability and maintainability
patch from johan from bug # 44055 - messagesubmissionchunk now properly extract extract date from hsmf message
changed the visibility of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports for SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation classes to improve code cleanliness and reduce unnecessary dependencies
added a new class MongoDataIntegrityViolationException to handle MongoDB data integrity exceptions to improve error handling and provide more informative feedback for MongoDB operations
[ hotfix ] fix the jobcompletionfuture npe in coordination service
replaced ` bitsToHumanReadable ` method with ` bytesToHumanReadable ` and introduced a new ` mimeType2HUmanReadable ` map to enhance readability and maintainability of the code by centralizing mime type handling
replaced the use of ` newMergePolicy ( ) ` with ` newTieredMergePolicy ( ) ` in ` TestUpgradeIndexMergePolicy . java ` and added a new test method in ` TestMergeOnFlushMergePolicy . java ` to simplify merge policy handling and ensure proper functionality through testing
added a conditional check to return early if mOverviewStateEnabled is false to improve performance by avoiding unnecessary processing when overview state is disabled
doc : add link to the error message about binaries on a non - CPU
updated the ` loadSettingModels ` method to accept a ` InputStream ` parameter and modified the corresponding methods to allow the method to accommodate an input stream for loading setting models
added null checks for incoming fields , TermsEnum , and DocsAndPositionsEnum to prevent NullPointerExceptions to ensure that input fields are not null to prevent runtime exceptions
add default secret key size to jcekeytrans
updated IOException handling to include the original exception message instead of an exception to improve error reporting by preserving the original exception context
remove javax . inject . Inject from multiple classes to simplify dependency injection for better code maintainability
updated the expected size in BundledDistributionTest and added new assertions in PostgreSQLTest for database users to improve test coverage and ensure correct functionality of database user data retrieval
[ flink - 15688 ] [ core ] add pipeline . name config option for the pipeline name .
updated scaling logic in OverviewState . java based on device profile status to ensure correct height and width calculations based on device characteristics
change iceplainsbiome to extend SnowyBiome instead of grassyBiome ( # 1897 )
simplified time calculations by removing unnecessary zone parameters to improve code readability and maintainability
add isqualified property to thisreference to be able to determine if the type be qualify .
fix xhamster gallery url to work with w3c
fix an npe cause by entity . getall ( )
hhh - 13653 use schema a default table name for oracle
fix console filter for paths with spaces ( # 2383 )
added parameter ` mNumberOfAllFiles ` to the ` FileMenuFilter ` constructor and updated related methods to enable dynamic selection of all files based on the number of files in the user interface
[ java ] change termwindowlength to termlengthmask for network publication .
fix checkstyle issue in ` ` setmemberroles ' ' module
ensure inportalticks do not exceed 80 for creative player
update chart spacing and add compression functionality to ClusterMonitorTileSkin to improve visual spacing and allow for compressed data to be displayed
code quality : fix some javadoc warning ( # 2057 )
change variable types from int to long for length calculations in Base64 . java to prevent potential integer overflow when handling large binary data sizes
removed null check for header in RendererConfiguration to simplify the logic for ensuring no header is present
server : allow volume to have custom disk offering ( # 6504 )
updated import statements and builder initialization in HitbtcAdapters . java to enhance compatibility with the new Hitbtc API
fix potential bug in idlecount and consecutiveidlecount ( # 792 )
corrected the casing of the service label from " JRuby Scripting " to " JRubyscripting " to ensure consistency with Java naming conventions and improve clarity
replaced the direct name variable with a variable displayName for better readability to improve code clarity and maintainability by avoiding string concatenation
updated exchangeAmount comparison logic in ParticipateAssetIssueActuator . java to ensure accurate exchange amount validation for better accuracy
simplified the loop structure in FeedUtils . java to improve code readability and maintainability
add a new test method ` testHDF4 ` to validate the functionality of ` HDFParser ` to ensure compatibility with Java version 1.5 and verify proper metadata handling
[ calcite - 6092 ] add test for fast cite server time value
fix indentation by add space .
added methods to quietly close all AutoCloseables and updated the loop structure to improve resource management and error handling during closure
replaced inline string resource for confirmation button with a constant resource to improve code readability and reduce duplication
added a conditional check before setting the image dimensions in the Pixmap class to ensure that the image dimensions are only set when it is not zero
updated imports and method invocation for classdefining in UnsafeAccess . java to enhance security by using ProtectionDomain for classdefining operations
fix invalid pattern for domain name ( # 5333 )
updated the handling of row conflicts in CachedRowSetWriter to improve clarity and functionality of conflict tracking
fix exception when check for version 0.0 . 3 ( # 1783 )
refactor reference handling in ReferenceMemory . java to add a conditional check for reference equality to improve the clarity and functionality of the reference reference logic
added handling for non - file inputs in Injector . java to improve robustness by skipping non - file inputs during the injection process
added condition to conditionally hide the original view when hideOriginal is true to improve user experience by reducing unnecessary visibility handling
updated maxNodes calculation and modified threshold calculation in FullUnrollMaxIterations to ensure maximum nodes does not exceed the maximum allowed number of nodes
added a check for texture coordinate type and improved logging in CombinedTexture . java to ensure compatibility with texture coordinate types and provide clearer diagnostics for unsupported features
added error handling for file deletion and improved variable names for clarity to enhance code reliability and maintainability by clearly indicating errors
camel - 17684 : camel - Tracing should use delegate for seek and close ( ) .
phoenix - 4448 avoid stringindexoutofboundsexception when update a handle
replaced the initialization of convertedValsList with a constructor call to simplify the code and improve readability
deprecate abstracttimer constructor that should not be use
added a nightly warning dialog for users when the Universal Gcode sender is a nightly build to inform users about potential issues when running on the nightly build process
add check for generate question and sort response by recipient team name
update the return message from " Remove unnecessary throws " to " Remove unnecessary ` throws ` declarations . " to clarify the purpose of the method as needed
deleted ` CacheApplication . java ` and replaced it with ` cacheData ` in the CommonsApplication class to streamline cache management by consolidating functionality under a more appropriate class
replace references to realObject with RuntimeEnvironment for service , activity , and broadcast to streamline context management and improve code readability
fix javadoc issue report by checkstyle
updated configuration update logic for Android version compatibility to ensure compatibility with devices running Android versions below KitKat
added a constant for stack repository update link and implemented corresponding test cases to improve code clarity and ensure proper handling of version definitions
updated implementations in ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix bug where a table with a non - existing column differ from the current column name
added " com . sun . org . apache . xml . internal . resolver . helpers . " and " com . sun . org . apache . xml . internal . resolver . readers . " to CheckPackageAccess . java to enhance package access checks for improved functionality
renamed methods from ` persistExecutionContext ` to ` updateExecutionContext ` across multiple classes to improve clarity and consistency in method naming
allow removal of loop input after a loop exit in the transform ( ) method .
updated SearchAndRecommendationsScrollController to use WidgetsRecyclerView instead of RecyclerView and adjusted height calculations accordingly to improve layout handling and ensure proper height measurement with vertical margins
added a conditional check for terminal support before proceeding to ensure compatibility with terminal devices when available
updated time allowed variable types from ` long ` to ` int ` and refactored related logic in ` LBHttpSolrClient . java ` to improve flexibility and clarity in time handling logic
added session validity check before flushing data in AbstractSessionCache and introduced session attribute handling in RemoveSessionTest to ensure session validity checks and improve session management functionality
core - 2321 fix null pointer exception on index change generator
replaced Vector with ArrayList for managing button states to improve performance and simplify action listener management
updated UserManagerCompat and UserManagerCompatVN classes to implement new functionality for handling NYC - MR1 and above to improve compatibility and functionality for user management in new Android versions
added methods to retrieve database major and minor versions in MockDatabase , AbstractDatabase , and HibernateDatabase classes to establish proper exception handling for database version retrieval and improve code robustness
updated ActionGraphCache to use ActionGraphAndResolver instead of Set and modified mismatched rules handling to improve consistency and clarity in matching build rules and enhance error messaging
added LockDatabaseDesc and UnlockDatabaseDesc classes to handle database locking and query management to facilitate database management within the Hive plan
refactor RankingTopComponent and RankingUIModel classes to streamline object creation and enhance readability to improve code maintainability and ensure consistent object state
added handling for DisconnectMessage with reason in HandshakeHandler and updated logging in NodeImpl to improve disconnect message clarity and enhance logging clarity
added a test method for setting and deleting storage groups in IoTDBAuthorizationIT . java to ensure proper functionality and error handling for unsupported operations in the database
fix : \ v1 \ \ v1beta1 \ 352 \ 002 to \ v1 \ \ v1 \ \ v1beta1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1beta1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ v1 \ \ \ v1 \ \ v1 \ \ \ v
improve error message when type information have a different type name
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to handle test lifecycle events during test execution
[ java ] increase countermanager buffer capacity check and increase performance .
simplified the ` toString ` method in ` MultiSteps ` and ` SendEmail ` classes to improve logging clarity and reduce unnecessary string concatenation
added initialization and cloning functionality for joinKeys in JoinDesc . java to ensure that joinKeys is properly cloned when it is used
added PrincipalResolver dependency to WebAuthnConfiguration to enhance authentication handling by allowing default principal resolution
updated methods in XcconfigStack and XcconfigParserTest to accept a search paths parameter to enhance functionality by allowing users to specify search paths for file configurations
added ' final ' modifier to several fields in Oracle . java to enforce immutability and ensure proper initialization of the fields
[ flink - 22085 ] [ doc ] do not advertise checkpoint option until unaligned checkpoint be complete
[ multistage ] throw unsupportedoperationvisitor when use order _ by , map _ value _ construction or map _ value _ construction
[ gr - 27654 ] allow the test output to be print out from the console .
remove a type check for LocalVariable in LambdaRewriter . java to simplify the code by avoiding unnecessary type checks
added support for MySQL database in CreateTableGenerator to handle timestamp values correctly to ensure compatibility with MySQL and maintain compatibility with timestamp data types
add context class loader management and disassociate the old class loader to ensure proper resource management and prevent potential memory leaks
[ fix ] simulationlisthandler now set ejection - delay when no stage number be specify
updated method names and class names from FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig to improve clarity and consistency in naming for better maintainability
refactor TransactionUtil2 for transaction handling to improve transaction efficiency and maintainability
updated the ` validateIssuer ` method to accept an ` OAuthRegisteredService ` parameter and refactored related methods to improve the handling of service services when resolving the issuer
updated string concatenation in ClusterState . java to handle null collection reference to improve clarity and prevent potential NullPointerException
fix ( core ) : use getallstyles ( ) to setalignment ( )
added foreign database and schema names to ForeignKeyColumn and related classes to enhance functionality for handling foreign database and schema names
[ java ] warn rather than wait for election to be ready to ensure that join catchup fail .
replaced the import of ` Shadows . shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice ` to streamline the code by encapsulating shadow extraction logic
added a check for a blank root and modified selectionRoot assignment logic to improve error handling and simplify path selection logic
add back deprecate api for item . oninventorytick ( ) . close # 211
updated export functionality to use ByteArrayOutputStream instead of FileOutputStream for better memory management to improve code efficiency and enhance output stream handling
added a null check before invalidationing the options menu in SingleUploadFragment to avoid potential NullPointerExceptions when getSherlockActivity ( ) is not initialized
updated widget binding logic to handle options more effectively to ensure correct binding of app widgets when options are available
[ ecobee ] add capability type to echosensensensensoremThinghandler ( # 4258 )
fix nullpointerexception due to session . getprofilepage ( ) return null
added environment variable " AAPT " and " AAPT2 " to the Genrule class to ensure proper handling of AAPT executable paths in the build process
add a conditional check for truffleinstrumentBranches . getValue ( ) before dum the access table .
add null check before dispose ( ) , prevent npe
changed the access modifier of the ` db ` variable from private to private final and added initialization methods in multiple classes to enforce immutability for the ` db ` variable and enhance initialization functionality
updated logging messages in CoreContainer . java to clarify the reason for disabling SLF4J versions to improve user awareness and clarity in error handling
replaced stack trace printing with failure handling for cloning failures to improve error handling during cloning operations
updated IOSImplementation to use SmallByteArrayOutputStream instead of ByteArrayOutputStream and added a new SmallByteArrayOutputStream class to improve data handling and support for binary data writing
* oglesshaderrenderer now use intmap to serialize attribute instead of string buffer ( like vertexbuffer . type ) .
test : fix jdbc test connection close bug
updated timestamp handling in RouteInfo . java to check for null values before casting to improve code robustness by avoiding potential NullPointerExceptions
8274234 : fix ` ` interface return type in c1 return type ' ' link
updated condition in CompletionProvider to check if the result is incomplete and has more items to ensure proper handling of items in the completion process
updated usage message to reference timeColumnName instead of using the TimeFieldSpec class to enhance clarity and consistency in time column naming
updated format variable naming and modified output format handling in multiple classes to ensure consistent formatting based on the output format format
modified condition in DeviceProfile . java to use a negated if statement to improve readability and correctness of the condition
added ` equals ` and ` hashCode ` methods to ` AnimationList ` class and refactored equality checks in ` SceneKey ` and ` GltfModelKey ` to utilize ` Objects . equals ` for object comparison and improve code readability
added date handling functionality to AbstractGenerator , Generator , and HttpConnection classes to enable setting and setting the date header dynamically
replaced Adler32 with CRC32 in the Store class to optimize data handling by using a more efficient CRC32 implementation
cloudstack - 2120 : remove hardcoded ' any # of seconds ' config value in xen . heartbeat . interval
added a new warning constant for zero area and modified conditions in FinSetCalc . java to enhance type safety and provide clearer warnings about component values
[ beam - 12427 ] fix jsonproperty order and add more serializers to documentmetadata
hhh - 16274 add ' dateTrunc ' function for h2 and oracle
added error handling for memory pool missing messages in MetricUtils to address issues related to memory pool issues in the application
added a boolean flag ` useJavaScript ` to ` UserTests ` and modified ` FileAccess ` to return ` CompletableFuture . completedFuture ` to improve JavaScript usage and enhance error handling in file access operations
updated type annotations and their usage in ValidationTask . java to improve clarity and consistency in type representation within the validation process
[ te ] change backup to use / replay instead of / generateanomaliesInRange
feat ( freezev2 ) : optimize getlatestprocedurenum ( ) return data
updated AllAppsContainerView to improve badging logic using BubbleTextView to enhance user interaction by ensuring correct badge state updates are applied
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
javadoc fix . contexthandlercollection be incorrectly refer to altcontext and othercontext .
fix issue with workspace . getcellat ( ) return null on workspace .
remove assertion because lookupmodule be already register in jdk .
ignore a test that it fail until call - through be turned off for unshadowed class
updated import statements for ItBit classes to remove the v1 dependency to streamline dependencies and ensure compatibility with the latest itbit API
ww - 3767 allows eval ( ) with a defined value in context
changed class modifiers from public to private for Utils , AsyncSocketFactory , and Whois classes to enforce singleton pattern and prevent instantiation
bug 7441 : fix classcastexception in regexp api util ( # 7442 )
replaced the use of getClass ( ) . getName ( ) with a string " java . util . Vector " and " java . util . Hashtable " for type checks to enhance clarity and consistency in object type handling
[ hotfix ] [ table ] log more information about invalid retention time
trim whitespace from fragmentList [ 1 , 1 ] in QueryExecutorImpl . java to ensure consistency and prevent potential issues with empty or leading spaces
fix ` resourcepackfilenotfoundexception ` in ` modfileresourcepack ` when load a non - existent mod file ( # 5906 )
some minor tweak to make it easy to create custom transformerbuilder
removed unnecessary condition for showAsGrid ( ) and added checks for task view focus and visibility to improve task view handling and ensure proper visibility before proceeding
refactor calculate methods to use BMIViewObject instead of Map < String , String > to enhance data handling capabilities to support BMI view objects
fix compilation error by remove use of comparator in thencomparing
account for blockhaybale in damage ( # 1800 )
refactor environment variable handling to use a List instead of a LinkedList and update related constants for better readability to improve code clarity and maintainability by consolidating environment variable access within the loop
added custom plugin property handling to OptionsParser and corresponding tests to enhance flexibility in configuring plugin property values during parsing
update condition to check if hashTable is not empty before proceeding to improve validation of hashTable to prevent potential null or empty values
update timestamp validation logic and rename test methods in TimestampTest . java to improve accuracy of timestamp handling and enhance test readability
[ java ] use context . archivecontext ( ) when create archive client in clusteredserviceagent .
updated the conditional check to include a compilation flag and modified assertions in the LambdaForm . java file to ensure compilation logic is correctly handled during compilation and improve assertion accuracy
add docker image test case ( db2 and h2 ) , currently fail otherwise .
refactor TogglableFlag class to improve default value handling and add a change listener to enhance feature flag functionality and ensure responsive updates when configurations change
[ grid ] log docker init failure at info level
added a condition to return early if the current platform is ANDROID to optimize performance by bypassing unnecessary processing on Android ' s platform
replaced assertEquals statements with assertThat for generating reverse route assertions to enhance readability and maintainability of the test assertions
added new functional interfaces for processing byte , float , float , and short values in the codebase to provide a standardized way to handle byte , float , and short data types in the codebase
updated ` getSubsColor ` method to return a String instead of an int and improved bitrate limit handling to enhance flexibility in setting sub colors and ensure compatibility with various bitrate configurations
added a conditional check before deregistering the invocation to avoid unnecessary deregistration when the future is completed
replace a single byte appending method with a single output method for handling WebSocket connections to simplify the code and improve the handling of WebSocket output operations
added a check for a redirect state in LoginActivity and modified the startActivity method to handle it to ensure the activity redirects correctly when not explicitly set to true
added a new ShadowCheckedTextView class for managing checked state in Robolectric to enhance testing capabilities by providing a controlled view implementation
added Serializable interface to ParserState and updated GETTER _ CACHE to be transient to ensure proper serialization handling and prevent serialization issues
added " identrustdstx3 [ jdk ] " to the VerifyCACerts class to enhance certificate verification capabilities
removed redundant context attributes for TEMPDIR _ CONFIGURED and TEMPDIR to streamline code by eliminating redundant operations
update occupant resource to match occupant ' s nickname
updated the QuicSession constructor to remove the context parameter and related references to simplify the session initialization and improve code clarity
updated merge scheduler and merge policy settings in CreateIndexTask . java to ensure consistency and correctness in handling merge policies during indexing
pdfbox - 2852 : fix parameter name , a suggest by valerybokov
added support for ComputedDateValue in default value handling in AddDefaultValueChange and AbstractDatabase to enhance date handling capabilities and improve error management
fix : correct doc for scoreboardIoservice class ( # 7683 )
fix issue with saml2 ' s service provider resource should not be write to a writable resource
change visibility of the printer variable and encapsulate the creation logic in the createPrinter method to enhance encapsulation and ensure proper initialization of the printer object
[ huobi ] adding average price to trade order ( # 11914 )
updated projection operation and type handling in AggregationUnit classes to improve accuracy and consistency in field mapping operations
fix a bug in fakeplayer that cause it to get stick in multiple thread .
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve memory efficiency and drawable state handling
refactor SPDYClient to utilize an AsyncSPDYConnection for improved connection handling to enhance efficiency and clarity in establishing SSL connections
[ dubbo - 3906 ] fix nullpointerexception in protostuffoutput ( # 3906 )
pdfbox - 2852 : improve structure , a suggest by valerybokov
refactor BarrowmanCalculator class for better readability to improve maintainability and ease of understanding for future developers
ggb - 2339 do n ' t show ax in case it ' s off screen .
replaced setFilter and setWrap methods with unsafeSetFilter for unsafe manipulation to enhance safety by preventing unnecessary filter modifications
[ ds - 3952 ] fix xmlWorkflowserviceimpl returntomaxic method . ( # 3952 )
added support for secure connections using custom URL trust mechanisms to enhance security by enabling trust verification for HTTPS connections
updated the method to retrieve the real use clock rate string based on encoding and format to improve clarity and consistency in time representation across different media formats
refactor TextureAtlas class for better texture management to improve performance and maintainability of texture atlas functionality
updated project generation logic to use module name instead of product name to ensure consistency in module naming across the project
fix a bug where the registry lock could hold the result of finishreleaseprocess ( ) .
# 693 - enh : add query with inheritance ( id - list ) ... a alternative to find ( id )
replaced ` closeFrame ` with ` rbuf ` and modified the WebSocket connection handling logic to improve performance and correctness of the WebSocket connection handling
added null handling for referenceMultiValueStack in WasmType . FUNCREF _ TYPE and WasmType . EXTERNREF _ TYPE to ensure proper management of references and prevent potential memory leaks
added ttl configuration to the table creation and querying to enhance flexibility in table creation by allowing configurable TTL values
updated serialization logic to use NAMED _ FIELD instead of NESTED _ OBJECT and modified condition checks in XMLChangeLogSerializer to improve serialization handling and ensure correct processing of parameter values
updated imports and modified server initialization methods in DeploymentExceptionTest . java to improve thread management and enhance test reliability
added error handling in CommonsApplication and NearbyController for initialization errors to improve stability by logging exceptions and preventing application crashes
updated the return statement to handle null and empty object names properly to ensure that objectName is not null and has a valid value before proceeding to avoid potential errors
updated error message for file - related errors to improve clarity and accuracy of file - related errors
[ flink - 17777 ] [ table - planner ] migrate environment setting for planner and executor to static final constant
updated variable names and logic in KeyTool . java for clarity and consistency to improve code readability and ensure proper handling of subject and owner names
[ gr - 29096 ] mark svm option a deprecate and for removal .
replaced ByteBuffer encoding with direct byte retrieval from a UTF - 8 string to simplify byte handling and improve readability
added a new interface PermissionEvaluator in the security framework to provide functionality for permission handling in Spring Security
added ERASE _ LINE _ ON _ FINISH option and modified buffer handling in LineReader and LineReaderImpl to improve prompt management during line processing
hbase - 23351 masterfilesystem # listservers should check if server be not online before try to assign it to the list
replaced instances of CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ SIGN _ ERROR in multiple exception classes to standardize error handling related to block merkle errors in the application
lucene - 7081 : fix expandwar so it work properly on window .
catch throwable instead of exception in client
updated the container center calculation to use the absolute position to ensure the spinner adapts to the absolute position for better visual alignment
[ flink - 23454 ] [ network ] fix possible interruption when request memory segment
replaced the local variable ` newMbeanServer ` with a local variable ` newMbeanServer ` to improve code readability and maintainability by avoiding repeated variable assignments
replaced JUnit4 test runner with RetryTestRule to implement a retry mechanism for improved test reliability
fix check for query state machine ' s auto - commit state
add a test case and a todo . add a test package for optiq .
updated the condition to check for " javax . microedition . khronos . opengles . GL " alongside " javax . net . ssl . DistinguishedNameParser " to enhance configuration flexibility for different parsing scenarios
[ hotfix ] [ stream ] simplify the registration of the streamtimer in the test
updated request handling logic to return authority or path based on HTTP method to ensure correct URI path retrieval for different HTTP methods
updated storage point retrieval methods in MainApp and DataStorageProvider to use a new method for legacy storage points to improve code maintainability and ensure compatibility with newer Android versions
added methods to manage session availability and unavailability in the SessionManager class to improve session management by ensuring appropriate priority settings are applied
added a method to add a package to the scan for Liquibase pro packages to enhance functionality by including Liquibase - related packages
simplified the method name ` deleteSyncFolders ` to ` deleteOtherSyncedFolders ` to enhance code clarity and maintain consistency in method naming
updated the ` loadWithNewGlobal ` method to accept a variable number of arguments to enhance functionality by allowing additional parameters to be passed when loading a new global context
make relative path handling consistent across version ( windows )
updated the logic for handling footer and stream sizes in HiveClientModule to utilize toIntExact for better clarity and consistency in data handling
changed method names from ` isExceedRandomizationDepth ( ) ` to ` hasAlreadyRandomizedType ( ) ` across multiple classes to clarify the purpose of the method and improve code readability
added support for handling lead and lag functions in UnsupportedOperatorsVisitor to ensure supported function operations are properly handled and throw appropriate exceptions
clear the headers of the proxy request in AbstractProxyServlet to ensure the proxy request headers are reset before processing a new request
added a check for SA attach behavior in CompressedClassSpaceSizeInJmapHeap . java to skip execution when SA attach is not expected to work - test
added a null check for bgColor before checking its alpha value in GraphicsDevice . java and created a new TranslucentWindow . java class for functionality testing to enhance robustness of background color handling and provide a test case for window transluency functionality
added validation logic for user info and improved error handling in UserInfoActivity to ensure users have valid information and enhance user experience by providing clearer error feedback
added a custom field serialization for PrecompiledHeaderData and removed the check for leadingIncludePaths to ensure that precompiled headers can be used on different machine to avoid runtime errors
[ flink - 30613 ] [ connector / kafka ] support update mode by default in kafka connector
add a new test class MultipleOutputsIntegrationTest for testing named output groups to ensure proper functionality of named output handling in the build process
updated regular expression in FileSettings . java and added logic to update content to ensure consistent content formatting when adding new entries
nifi - 259 : fix bug that variable be not read from the runtime runtime variable during runtime .
replaced instances of ` Object [ ] ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java ` and ` BinaryCipherExecutorTests . java ` to improve code readability and utilize a more appropriate empty array implementation
added a taskbarModeSwitch annotation with a persistent mode option to enable persistent taskbar behavior in the test cases
added new entries for leaving dock and energy save modes in DeviceStatus . java to enhance device status tracking for better user experience
improve error message when item model can not be load .
added JUnit import and ignored certain test methods in KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
pixeldensity ( opengl ) : fix miss pixel scale in 2x
refactor RussianLowerCaseFilter class for improved readability to enhance maintainability and clarity of the filter functionality
phoenix - 7019 perform server / client operation without port configure ( jesus camacho rodriguez )
fix # 3186 - handle _ in file path
- add resettableinputstream to wavloader , and make it easy to reset it .
added support for repeat first line indents in ColumnText to enhance formatting flexibility for better text presentation
cast the ` oid ` to ` Object ` before comparison to ensure correct type handling and avoid potential ClassCastException
remove duplicate code in hikaripool . initializeconnection ( ) .
make use of controlflowanchored instead of controlflowanchornode for clarity .
added functionality to disable focus on buttons in WindowsPlacesBar to improve user experience by preventing focus on other buttons
updated the condition to include UniqueConstraint and ForeignKey in the backing index handling logic to enhance compatibility with Oracle ' s handling of backing index fields
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and implemented it in ` AccountAPI ` to encourage the use of new API methods and improve maintainability
[ ds - 3952 ] check if ` ` dc . title ' ' be present in group metadata before process .
fix an error that could occur if a word be n ' t be find .
add a test base on user forum issue
updated thread management in FeedRefreshUpdater to use a configurable database update thread to improve flexibility in managing multiple database updates
reduce fast scroll threshold to avoid scroll jank
change the system class name resolution to default to " Ljava / lang / System ; " to ensure consistent initialization of the system class across the application
hhh - 13644 - avoid npe on use getresultstream ( )
camel - 14263 : camel - swagger should use source code generate configurer to avoid npe .
added BinaryFrameGenerator and TextFrameGenerator classes for WebSocket frames to enhance WebSocket functionality by providing binary and text frame data generation
replaced calls to ` findElement ` with ` WebDriverWait ` in ` PageLoadingTest . java ` to improve responsiveness by waiting for elements to be loaded
updated random double calculations in RandomGeo3dShapeGenerator to use a multiplier based on random conditions to enhance flexibility and accuracy of random geo3d shape generation
added a keepAlive method to manage ClassLoader references to prevent premature garbage collection of the ClassLoader
changed return value from false to true in SQLiteDatabase . java to enable successful execution of the method
add support for detect the ` Ljava / util / concurrent ` sig like ` Ljava / util / concurrent / `
added MkdirStep to multiple classes and updated steps count in FatBinaryTest to ensure proper directory structure and steps are generated for better project structure management
updated exception handling to correct coordinate checks and improved error messages to enhance readability and maintainability of the code
[ drools - 7016 ] avoid kie - pmml dependency to be available on the classpath ( # 2937 )
corrected a typo in the locationMode variable name from ` locationMode ` to ` thermalStatus ` to ensure accurate representation of the energy status in the system
updated temporary directory creation logic to support macOS to ensure compatibility and avoid issues with temporary directory on macOS
fix geometryfactory usage on window
added validation to ensure that the plugin organization is not missing from the pom . xml file to prevent runtime errors due to missing organization issues
added copyright notice to the SepPostingsWriterImpl class to ensure compliance with licensing requirements for licensing functionality
deleted the TerminateWebSessionListener . java file to the functionality was deemed unnecessary for the current implementation
updated the parameter for executing child processes from an empty string to the system ' s class path to ensure compatibility with different Java environments
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for ` cryptKeyInit ` , ` cryptKeyPriv ` , and ` md5Salt ` to simplify array initialization for improved performance and readability
added JUnit Pioneer annotations and a test method to avoid modifying Javadoc to address issue 3198 and improve documentation handling in the project
changed the value of LAUNCHER3 _ PHYSICS from false to true to enable phone scaling by default for improved user experience
added ' noPrint ' to the HTML structure of the HtmlThreadInformationsReport class to disable printing functionality in the user interface
updated main version from " 3.1 " to " 4.0 " and from LUCENE _ 31 to LUCENE _ 40 in multiple files to reflect the latest version improvements and fixes in the codebase
added symbolicator and task fields to BsdDebuggerLocal and updated platform detection condition in PlatformInfo to improve debugging capabilities for macOS and ensure compatibility with macOS X
fix potential memory leak with fml : inboundpacket
fix error log spam when reset connection by peer .
[ java ] : code tidy up to avoid npe when conductor be not present in the context .
added a break statement in TouchImageView . java to ensure proper control flow during image processing
chore : [ dialogflow ] update go _ package to match open source code ( # 9366 )
remove the flushonsslhandshakecomplete method which be caled to flush after the handshake complete event be send in the request body
fix : fix a bug in isassignablefrom ( ) method of java . lang . object
replace NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush to improve thread safety and performance in concurrent access
added null check for errs before calling memberEnter and modified return logic in JavaCompiler . java to enhance error handling and improve clarity in error reporting
fix ` ` no background ' ' color to ` ` none ' ' color for a bug
updated the negative button builder to use the dialog ' s cancellation method to ensure consistent dialog cancellation functionality
modified calculations forLowerBound andUpperBound in IntegerStamp and added tests in IntegerStampTest to ensure correct handling of zero values and improve test coverage for div - related operations
added a method to read from an InputStream and updated the Image class initialization to improve image loading efficiency by using a stream - based reading mechanism
added variable handling methods for declaration and undefining variables in CaseStmtToken to improve variable management and maintain consistency in handling variable expressions
updated RSAClientKeyExchange to initialize cipher with a retry mechanism for improved error handling to enhance stability by handling potential exceptions during cipher initialization
added " AdditionalDependencies " attribute to the WinGammaPlatformVC10 class to include additional dependencies for improved dependency management
updated comment handling in StringUtils and StringUtilsTest to use the system ' s line separator to ensure consistent line endings across different operating systems
added imports and modified script alert to handle HTML characters correctly to ensure proper HTML output and encoding for better compatibility and security
refactor byte array handling and string unmarshalling in CRDGeneratorTest . java to improve code readability and enhance debugging output
change ` ` private static ' ' to ` ` final ' ' so that variable be not transient .
add emailablereporter only if testngemailablereporter be not null to avoid null pointer exception in ci
408904 enhance commandlinebuilder to not escape string inside single quote
removed the ` public ` access modifier from multiple classes and classes to enforce encapsulation as they do not require public access
added a line to set the number of reduce tasks in FreeGenerator . java to allow configuration of reduce tasks for better resource management
fix : fall back to default value when generate field definition for default object
bug 532077 - change checksum for saveproperties to stay in sync with the correct typo
updated support checks for texture float and GL _ ARB _ texture _ float in FloatTextureData . java to ensure compatibility with OpenGL 3.0 and above
add filechannel . write ( ) and closefile ( ) to fileserver interface . useful for write to non - blocking file system .
updated output directory handling to check for null jarStream to ensure output directory is only set when the jarStream is not null
updated the method to return PerfStatsCollector for performance tracking to enhance performance tracking capabilities for SQLite operations
updated usage of JDK tools from the current JDK to the test JDK in JMapHProfLargeHeapTest and JDKToolLauncher to ensure testing consistency with the specific JDK tool environment
+ added resourceerrorhandling enum , to facilitate diagnostics of resource error in the application .
added a check to ensure bufferPosition is within a valid range before processing to prevent potential EOFException when the buffer size exceeds the expected size
include message in error page for jsp error page
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class for permission testing to enhance thread behavior control and facilitate security permission testing in the ForkJoin framework
modified the CHECK _ EVERY _ N constant and added logging functionality in the Caches class to improve performance checks and enhance logging output for HardRef cache clear
hbase - 15688 testsplittransaction # testsplitsplittransaction fails intermittently ; the order of daughters should be consistent
added null check for currentSelectionArea before accessing its properties to avoid potential NullPointerExceptions when currentSelectionArea is null
added a parameterized test for Jaas functionality in DemoModulesTests . java to enhance test coverage and ensure correct behavior of JaasDemo integration
added spanX and spanY conditions to the calculation for folder creation to ensure proper spacing when the folder can be created with specific spacing
refactor CacheOffHeap class implementation to improve performance and maintainability of the cache management logic
improve error message when create a table that depend on another table with a higher id
added a conditional check to prevent parsing extra XML gid values in TiledLoader to improve stability by avoiding potential issues caused by data processing
tilecache : synchronize setworkingset to avoid concurrent modification
added a new Java class named Solution that reads two integers and computes a minimum step to implement functionality for processing multiple steps in a given matrix
add a checker to check if an ip address be incorrect
remove multilayermodel . getTranslucentmovingblock since it ' s already use with rendertype . getTranslucent ( )
added a method to remove tags and updated tooltip formatting for improved readability to enhance user experience by clearly indicating tags are removed effectively
changed the type of ` thingTypeVersion ` from an ` int ` to a ` String ` in ` ModuleType ` and updated its assignment method to ensure compatibility with String data types and simplify the representation of the thingTypeVersion
added null check for recieptents before sending messages to prevent potential NullPointerExceptions when sending messages
optimize multithreading in routinginboundhandler by fold logic into dedicated method
refactor DockerClientFactory to change the client method to include a failFast parameter and improve logging messages in RemoteDockerImage to enhance control over Docker client behavior and improve traceability of image operations
added a resourcesMode property to the AndroidMetadata class and updated its usage in RobolectricTestRunner . java to allow configuration of the resources mode for Android tests
mondrian : fix for bug 45622 . the mysql process now also reset the time column for each date .
replace ` importProject ( projectFile ) ` with ` importProjectCore ( projectFile ) ` in ` OpenAndroidModule . java ` to ensure compatibility with the project core import functionality
added handling for CommandFailedException in LiquibaseCommandLine to improve user experience by providing a clearer error message
updated TreeMap implementation to improve performance and maintainability of the TreeMap implementation
added methods to enable async stack trace functionality in the application to enhance debugging capabilities by allowing control over asynchronous stack traces
added a method to set the glow color in BubbleTextView and updated the folder color to enhance visual consistency by allowing glow color customization
added styles for file - row text in LinkedFilesEditor to improve user interface readability by clearing row count
add a test for ` alltypes ` table and update the database metadata to enhance functionality and ensure correct class names are returned
solr - 7038 : lucene40liteddocument . write ( ) should delete file if exception be n ' t successful
added a null check for the _ info object before determining the upgrading status to avoid potential null pointer exceptions when _ info is null
added a constructor to the ShadowLocation class that accepts a String provider to enable customization of the provider used in the class
updated maxRAM calculation to include a check for 2048 bits to ensure that the deviceRam does not exceed its maximum limits
empty localmapstatistener fix : add stats per map for no data included
check existence and miss file before activate profile .
fix error message in pdfwriter ' s addtobody ( ) method . report by michael klink .
fix ( griffin ) : fix role set declaration to match java 11 behavior .
update return value from - 1 to 1 and replace the variable for maximum uploads from 30 to MAX _ NUM _ UPLOADS _ SHOWN to ensure correct handling of uploads based on the defined maximum limit
added assertions to verify the delete method in the DashboardUserMapperTest class to ensure that the delete method behaves as expected and adheres to expected behavior
[ # 7729 ] instructorfeedbackresultspage : fix recipient - > primary - to - response mapping ( # 7834 )
[ gr - 21190 ] sulong : manage deref address for pointer in llvm .
added a method ` getBufferSize ( ) ` to ` BufferedIndexOutput ` class to provide access to the buffer size for better resource management
updated the command description and removed the printUsageAndExit method from the Terasology command to improve user clarity and provide guidance on the Terasology launch process
updated action bar title handling in DrawerActivity . java to include old interactions to improve user experience by displaying appropriate actions based on new interactions
updated CommandLineParserTest . java to improve test coverage to ensure more robust validation of command line input handling
added interpolators for transition between ALL _ APPS and ALL _ APPS _ CONTENT _ FADE to improve animation consistency and visual consistency when transitioning to the All Apps screen
updated the method to retrieve Java names from an external name instead of using a character : : toUpperCase to improve code clarity and consistency in string case handling
removed native method declarations and defined a new frame method in CWrapper . java to simplify the code and improve organization by eliminating unused native functionality
added constant value validation and a new test class for handling constants to ensure that non - constant variables are not treated as constants during reference processing
8152222 : use ` ` even ' ' and ` ` square2 ' ' instead of ` ` square4 ' '
removed null check for constructors in PojoUtils . java to simplify the conditional logic for empty constructors
refactor JiraConfiguration class for improved clarity to enhance maintainability and readability of the code
fix : use ` ` ( fail ) ' ' instead of ` ` [ fail ] ' ' in upload build error message
updated bounds settings in DeviceProfile . java to adjust edge margin and search bar position to improve layout positioning and accommodate search bar offset
[ refactor ] fixed bug in log message and add idle timeout to pulseaudio client
refactor activity starting logic to run on the UI thread to ensure thread safety and responsiveness during UI updates
added a method to retrieve the source group in AppleSource to enhance functionality by providing access to the source group information
increased timeout duration for trigger synchronization in TestSimTriggerIntegration . java to improve stability by allowing more time for the latch to become available
fix spell error in variable name ( # 1877 )
optimize distancefromstartSq implementation to avoid npe
added a condition to skip processing for " com . codename1 . ui . Form " and " com . codename1 . ui . Dialog " components to avoid processing unnecessary UI components that are not necessary
fix crash when launch some apps which require icon to be load on
added a null check for commitPoint and assigned it to the latest commit if it is null to ensure commitPoint is available before proceeding with operations
added unit tests for IMEI and MEID handling in ShadowTelephonyManagerTest . java to ensure correct functionality of IMEI features in the telephony manager
added debug request debugging functionality to SimpleHostRoutingFilter to enhance debugging capabilities for HTTP request handling
added destory methods to various classes to ensure proper resource management and prevent memory leaks
[ issue # 6192 ] add producer test for sendandreceive ( # 619 )
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 26952 do not retry ioexception when there be an error when load bulkload ( # 4942 )
added a new parameter ' commission ' to DefaultWithdrawFundsParams and updated its usage in RippleWithdrawFundsParams to allow users to specify the commission for withdrawal transactions
removed an unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and reduce unnecessary dependencies
updated exception handling to include more general SolrServerException and IOException to improve error handling robustness and maintainability
added checks for abstract methods and updated method signatures in Java2TypeScriptTranslator . java to ensure proper handling of method signatures and prevent runtime errors
added StacklessLogging to TestFileSessions for session spending operations to enhance performance and prevent disk spending operations on the server
added Serializable interface and refactored Entities to use static fields in multiple classes to improve data serialization efficiency and enhance code clarity
modified test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a null check for claimRequestString before parsing to avoid parsing a potentially null claimRequestString
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and compatibility with different RelBuilderFactory implementations
updated the ` processTypeHintForNestedDocuments ` method to handle null values explicitly and added unit tests for simple types with Java 8 Date types to ensure correct handling of null values and improve unit testing for various date types
updated core status handling to utilize CoreStatus instead of CoreAdminResponse to improve clarity and consistency in handling core status requests
initialize transformers and locators lists to an empty list to avoid potential null pointer exceptions during runtime
fix checkstyle issue in processor / abstractquerydslprocessor . java ( # 772 )
[ gr - 3767 ] enhance the error message when de - decoding a method with no arg .
rename methods and variables from ` setOf ` to ` copiedSetOf ` for consistency to improve code clarity and maintain a uniform naming convention
( chore ) camel - mail : cleanup duplicate code in the log
resolve : http : / / issues . apache . org / activemq / browse / amq - 2840 - apply patch with thanks . check if destination be null before use it .
added setIsPropertyName ( ) method to retrieve identifier name to ensure that the identifier name has a property name for proper configuration
added WaveGeneratorActivity to the InstrumentsFragment and integrated it into the Pslab activity to enhance user experience by providing a dedicated activity for wave generator functionality
added logging for null sheet and improved null handling in KeyedProperties . java , and modified SheetOverlaysManager . java to enhance error handling and ensure robust null checks for sheets
fix : wait for shell to be close before wait for output
added a test method ` testNoWriter ` to the ` TestReplicationHandler ` class to ensure that the ` MockDirectoryFactory ` causes ` SolrCore . initIndex ` to create a new index and create a new one for testing
add miss call to superclass . dispatchmethodKernelokra in graalkerneltester
change defaultmxrecord to be comparable to preserve order .
refactor thread creation in XToolkit to use a privileged action for improved security and encapsulation to enhance thread management and maintain a hierarchical thread group structure
added validation and selection logic to SelectBox and UITest classes to ensure proper validation and selection for Linux6 users
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by providing more informative stack trace information
nifi - 3742 : added support for parent split in aggregation flow ( # 3747 )
change connectionState variable to be volatile and update its usage in the return statement to ensure thread safety for connection state access
polling . interval default to 1 second instead of 10 second .
fix npes in memoryutil . mem ( ) .
6973986 : javadoc show stacktrace after print error result from disk full
[ java ] unusedmodifier - fix false negative with enums
refactor logging statements to use method references instead of lambda expressions to improve code readability and maintainability
add ssl attribute to @ Parameterized . Parameters ( name = " ssl = { 0 } " ) in AbstractHttpClientServerTest . java to enable secure communication during tests
camel - 17962 : fix issue with illegalformatexception in transform ( ) . thanks to arno noordover for report this .
replace userPermissions with activeConnectionPermissions in ActiveConnectionRESTService to ensure correct access to active connection permissions
refactor the point equality check to use EqualsBuilder instead of manual equality comparison to enhance readability and maintainability of object comparisons
update FileProcessor to handle null input and output root safely to enhance robustness by preventing potential NullPointerExceptions
added annotation filtering functionality to PDF rendering classes to enhance user control over interactive annotations
updated StackTraceCleaner class to improve performance to enhance efficiency of stack trace processing
set content - disposition header to content - type for CSS and JavaScript files to ensure appropriate content type is used for different file types
hhh - 6750 : skip test on oracle due to the issue of sql server and sybase
renamed the parameter ` slot ` to ` slotSize ` and updated the upgrade method logic to improve clarity and functionality by using a more descriptive name for the slot size
added ` getStats ( ) ` method to multiple classes and updated ` AtomicInteger ` usage to ` AtomicLong ` to enhance statistical tracking capabilities in document import operations
updated the KieClient class to utilize an AtomicBoolean for long polling and improved the handling of service updates to enhance code readability and control over thread execution timing
added accessibility support for scrolling in PagedView and updated gesture margins in BaseOverview and LauncherInstrumentation classes to enhance user experience with improved scrolling experience and ensure consistent event handling
updated the unlocks dialog implementation and added a button to the PausedDialog to enhance user experience by providing access to unlock features
fix issue with player drop event not be clear when event cancel
added a constant for the name " inputName " in the StreamResult class to improve clarity and maintainability of parameter naming
updated the exception type in the testNormalizeOrder method from MalformedURLException to IOException to provide a more general exception handling for input stream operations
fix ` ` plan index out of order ' ' error
added ImmutableSet to exclude Swift headers and modified assertions in ProjectGeneratorTest to improve header management and ensure proper validation of Swift file contents
renamed the method from ` onHttpError ` to ` onHttpHeaderError ` to improve clarity and consistency in method naming
added encode method to RequestPlugin . java to ensure proper data handling during data processing
mondrian : fix for db2 extension ( mondrian - 1240 ) , mondrian - 1243 .
hive - 23794 : null and blank password check in ldap authentication error handler ( daniel dai , review by thejas nair , vaibhav gumashta )
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch to ensure that complexWriters is reset when no longer needed
added @ SuppressWarnings ( " serial " ) annotations to multiple cache - related classes to suppress serialization warnings for these classes
changed the access modifier of ClassGraphClassLoader from public to package - private and modified conditions in conditions to improve encapsulation and handle potential null values more effectively
added handling for " _ errors " in ErrorResponseException to include schema errors to improve error reporting and ensure proper formatting of schema errors
added a constructor to the EventSourcingRepository class that initializes its properties to ensure that eventStore and snapshotTriggerDefinition are not null to maintain data integrity
refactor symbol handling logic for binary nodes in mmm Attr . java to improve clarity and maintainability of symbol definition process
modified text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure consistent formatting of search text to improve search accuracy by removing leading and trailing spaces in search results
on command can now be send in standby mode ( # 1188 )
# 626 tiff : use chunk configuration for planar tiff ( a with jni support ) .
fixed itemlisttag resource leak . report by matthew caruana galizia .
add a utility class to handle average values / raw values in buildcraft ' s core . util . averageutil .
added new classes SigInt and SigIntBarrier to handle signal interruptions to facilitate asynchronous signal handling in the application
added support for hierarchical graphs and modified edge creation logic to improve graph structure handling and enhance edge extraction functionality
refactor TCTLSeparatedProtocol to use Text instead of byte buffer for string writing to improve data handling and handle character encoding issues
[ fix # 7282 ] if the rubric question index be invalid it be display in the response ( # 7593 )
updated catalog comparison logic to check for CatalogAndSchema case instead of DB2Database to improve accuracy in comparing catalog and database configurations
alexeibarantsev : fixing broken test that break the ci .
[ netbeans - 5070 ] fixed npe in modelrepositoryimpl # tostring ( )
removed the call to mTextWatcher . reset ( ) in InPlaceEditView . java to eliminate redundant calls and improve code clarity
update internalbytearray and trufflestring to reduce memory footprint .
[ flink - 11943 ] fix the edge signature of eachedge ( ) in the graph interface
updated multiple assertion classes related to Java6 to improve consistency and functionality to enhance the reliability of assertion methods across the codebase
deleted the ClassA file and created a DiacriticTest . java file to eliminate unused code and validate the behavior of the class using NFC
replaced CountDownLatch with CyclicBarrier for managing executions to improve concurrency handling and simplify event execution logic
[ netbeans - 4340 ] : only collect project if it need
updated the SSL scheme check from ` startsWith ` to ` equals ` in ` ServiceRegistryConfig . java ` and improved test assertions in ` TestServiceRegistryConfig . java ` to enhance SSL connection handling and ensure accuracy of IP port resolution
updated Mockito library usage in the project to improve testing reliability and maintainability
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added an ` ensureInstance ( ) ` method to ` ServletHolder ` class to ensure that the servlet is instantiated only if it is not already initialized
add some logging to help track deltaservertime
[ ci ] update tomcat adapter to support tomcat 8.5
fixed issue with black screen after animation be complete / cancel .
updated the ` decodeResource ` method to accept an additional ` BitmapFactory . Options ` parameter and refactored related methods in ` ShadowBitmapFactory ` and ` ShadowCanvas ` to enhance functionality by allowing specification of bitmap options and improve code clarity
[ java ] use configuration constant for number of message to reduce load .
added support for linkifying text and improved click handling in the TimelineArrayAdapter to enhance user interaction and streamline text interaction for better user interaction
added " text " to the unmodifiable data types and refactored conditional checks in the PostgresDatabase and NumberType classes to enhance data type handling and ensure proper handling of parameters for numeric and decimal digits
reactivate entryprocessorbouncingnodesstest which be unstable ( # 3683 )
updated state management logic to check forRemovableState instead of HardDeletableState to ensure proper handling of component states during maintenance periods
modified the bridge creation logic to check for a existence of the bridge UID before adding it to ensure that the bridge is only added if it exists , preventing potential null pointer exceptions
fix possible race condition when check for invalid robots .
updated display name retrieval in network interface checks to handle potential null values to ensure safe execution and prevent potential NullPointerExceptions in Windows - specific conditions
updated SpriteBatch constructor to accept a default shader program and modified shader creation logic accordingly to enhance flexibility in shader handling when using OpenGL 2.0
test : fix testutil by disable synchronous commit on ci
added precondition checks and refactored type coercion logic in SortedSetTypeCoercer to improve robustness by handling duplicate elements and enhancing type coercion logic
updated confirmation strings in RemoveFileDialogFragment to conditionally display folder status to enhance user experience by providing clearer feedback on file removal actions
updated conditional check to prevent potential ArrayIndexOutOfBoundsException in URLPathEncoder to enhance robustness by preventing potential ArrayIndexOutOfBoundsException
fix the issue that user register a new connection use ip address instead of a fixed port
updated HostResourceProviderTest to expect an empty map instead of a single cluster instance to improve test reliability by ensuring that the method correctly returns an empty map
[ hotfix ] remove unused logger parameter in yarnentrypointutils . loadconfiguration
fix a regression in the sipcomm frame that accidentally change the background color of the screen .
removed the ShadowHtml class and updated HtmlTest to assert specific HTML text to streamline the codebase by eliminating unused components and ensuring accurate test assertions
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory ` interface to provide a base class for initializing StarTree records by dimension and metric names
updated logger configuration to use " h3 " and " quic " instead of " jetty " to improve logging clarity and distinguish between HTTP and HTTPS
changed the access modifier of the ` addListeners ` method from private to public and added a new test case in ` MockSettingsImplTest ` to ensure that listener additions are correctly validated and does not contain null listeners
[ flink - 18315 ] [ checkpoint ] fix typo in checkpoint method comment
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . jetty . http . security . Constraint ` in multiple test files to ensure consistent usage of security constraints across the test classes
[ # 7042 ] student interface : give default section name ( # 7043 )
use try - with - resources to ensure all resource be close
camel - 13656 : camel - jbang - use a different port for test to avoid conflict with other test .
added libraryTarget parameter to various classes and refactored jar parameter retrieval methods to improve clarity and maintainability of the code
do n ' t use an anchor in the message ( they change too often )
bug 9452 : remove the overridden getpagesizeval function in listcapacity and use it from baselistcmd which have the change for default pagination to unlimited .
added a case for the closed state in IteratingCallback to prevent further processing when the state is closed
added a new boolean field ` isAuthorized ` and modified its assignment in ` AccessControlContext . java ` and added a method to return ` true ` in ` ProtectionDomain . java ` to track access control status and ensure proper handling of access control contexts
fix # 1187 - start osgi deployment after register a service
added support for handling " tiff " media type in DLNAMediaInfo to ensure proper mime type handling for Tiff media formats
optimizedcalltarget : fix race condition that could lead to wrong profile of argument type
added a new file ` CubocDesktop . java ` and modified camera rendering logic in ` Map . java ` and ` MapRenderer . java ` to implement and update camera rendering functionality and improve graphics rendering performance
updated PolicyMonitorTest to use target directories instead of test resource directories for PolicyMonitor initialization to improve flexibility and correctness in managing test resources
added a call to removeAllFiles ( ) in TrashbinActivity to ensure the trashbin list is clean before recreated
updated the import statement for allConnectors ( ) from org . eclipse . jdi to com . sun . jdi . Bootstrap to ensure compatibility with the correct package structure
[ gr - 3850 ] fix global variable storage not be read - direct .
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted launch source data handling to improve event handling by utilizing the intent data for better data processing
added a maximum burn target lower flavor for maximum burn amount handling in BurningManPresentationService to ensure that the burn amount is within a maximum threshold for better stability
updated UniqueConstraintSnapshotGeneratorSnowflake to streamline imports and added H2Database for handling unique constraints to enhance code clarity and maintainability while improving database compatibility with H2
updated SQL item construction logic in DMLTransformer . java to handle empty statement builder cases to improve clarity and correctness of SQL generation when the statement builder is empty
updated import statements and method parameters in ServiceValidateControllerTests . java for improved clarity to enhance code readability and ensure compatibility with updated URLs
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added handling for default function names to improve function name validation logic and ensure proper handling of statements
refactor JarLauncher class implementation to improve code readability and maintainability
updated type declarations to use generics for better type safety across multiple classes to enhance type safety and eliminate unchecked conversion warnings
create habber telephony device directly with default quality control , and add a method to send hole punch packets to enhance gtalk functionality and prevent potential npe
added tests for PostgreSQL object updates in ResultSetTest . java to ensure correctness of date handling in database updates
updated the PasswordResetEndpoints to return a specific response for invalid email inputs and added a test for creatingAPasswordReset when the user has non - UAA origin to improve error handling and ensure correct password reset behavior in the application
fix bug : use getdocumentelement ( ) instead of ChildNodes to fetch property
modified caching logic in Cache . java to improve performance and efficiency of data retrieval
rename ` timeInSec ` to ` timeMillis ` in ` Isochrone . java ` and update related references in ` SPTResource . java ` to improve clarity by better reflecting the purpose of the variable
added validation for binding in the TileLightRelay class to ensure correct binding behavior when interacting with the light relay
added a new ` Chainer ` class and modified ` CollectionSubject ` to return a ` Chainer < CollectionSubject < T > > ` to enhance functionality and provide a consistent structure for chaining collections
o added javadoc to model . initialize ( ) , fixes # 263
update recordedTime calculation to a specific value of 619315200000L to ensure accurate time tracking for recorded data
added a condition to resize the status when the terminal type starts with AbstractWindowsTerminal . TYPE _ WINDOWS to ensure status handling is consistently applied for Windows environments
updated log messages to clarify the state of host versions and added a conditional check before setting the state to improve code readability and prevent unnecessary state updates
move to j2cl ' s own module instead of directly use the one in the transpiler .
[ mng - 2147 ] use linkedhashmap / linkedhashmap / linkedhashmap to maintain predictable iteration order
remove useless catch in operationserviceimpl # call
reformatted the method call for resolving property configuration in KnativeEnvironment . java to improve code readability and maintainability
make commitlog archiver thread pool name consistent
added connections to CloudSolrClient and implemented a test for cloud client uploads to ensure proper handling of cloud client connections and validate configuration integrity during cluster operations
added synchronized block around binding management in Breakpoint and DebuggerSession classes to ensure thread safety when modifying the allBindings map
added methods to clear and validate files and cache in ShadowContext to improve file management and prevent conflicts in test execution
pdfbox - 4892 : optimize the code , a suggest by valerybokov
[ bz - 1155852 ] avoid kie model dependency from the kiemodule api
updated conditions for dry handling of Farmland objects in BlockEventListener to ensure correct behavior when drying events based on different data types
added a default implementation of the getLocalIp method in FinishedSpan . java to provide a default implementation for a common method that returns null
updated ` JdbcStepExecutionDao ` to use ` SerializationUtils . deserialize ` for reading binary values from ` OBJECT _ VAL ` to ensure compatibility with serialization and improve test coverage
modified calculations for byte offsets in AbstractDictionary , HHMMSegmenter , and WordDictionary classes to ensure accurate representation of character literals in the dictionary
* add - python - gpu to presets for pytorch ( pull # 1307 )
refactor PluginTab to improve readability and encapsulate data handling to enhance code maintainability and ensure proper updates to the table
updated log level from info to warn for reloading , saving , and trimming history files to better reflect the severity of important errors
cloudstack - 5293 : fix bug in vmwarestorageprocessor that could cause npe when volume be not find in the hyperhost
ftp : fix unit test which fail on window .
refactor ExperimentalMockitoJUnitRunner class to improve code readability and maintainability
added a check for null or empty serial IDs in GpsSettingsActivity and Utilities classes to ensure proper handling of serial options and improve code clarity
updated the SwapGBuffers class implementation to improve performance and maintainability of the code
bugfix : do n ' t remove skeletoncontrol when it be already close
added a smartReplies field and refactored the Ranking class to use a reflector interface for setting channel to improve notification handling and simplify the structure of the ranking functionality
[ java ] only add the record file to the archive if it do n ' t already exist .
refactor carrot2ResourcesDir initialization by removing unnecessary directory retrieval to streamline code for better readability and maintainability
added null check for testRect in WindowsTreeUI and created a new class bug8004298 for testing to ensure stability and prevent potential null pointer exceptions in the WindowsTreeUI
updated the ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility with the latest ASM framework version
replaced null return statements with exceptions in RecommenderMapper . java and added null check in CacheTest . java to improve error handling and ensure proper handling of null keys
added clientInfo to SurrogateAuthenticationEventListenerTests and removed null parameters to ensure proper client context is used during tests for improved functionality
added isUserView variable to CardPresenter . java to manage user views effectively within the application
updated diagram handling logic by replacing direct method calls with direct method references to improve clarity and maintainability of the diagram processing logic
replaced direct calls to getOrCreateHistogram with intermediate variables for constructBatchHistogram and syncLogTimePerRequestHistogram to improve code readability and maintainability by reducing redundancy
added a new module - info . java file for the SQLite connector package to define module dependencies and exports for better modularization and encapsulation
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper timing between operations in the test
removed unnecessary conditional check for " new " web type in permissionsManager initialization to simplify permission handling logic for better maintainability
modified DateParser and TestDateParser classes to improve date parsing functionality and test coverage
added a ` getDepth ` method to the ` SpringLoadedState ` class to provide a default depth value for better state management
binarydecoder : use arrays . copyofrange to avoid unnecessary allocation .
[ hotfix ] fix typo in executiongraph javadoc
removed notification handling code from NotificationActivity and removed swipe layout functionality from NotificationRenderer to streamline notification management and simplify user interaction
updated exception handling to default to " none " for better clarity and consistency to improve user experience by distinguishing between no invocation and other exceptions
fix potential npe in glowcontainer . getlock ( ) ( # 657 )
replaced MethodHandle lookup method with getDeclaredMethod for setting target field to improve flexibility in method handling
mondrian : fix test compilation problem with jdk 1.6 .
updated return statement to remove unnecessary join logic for metrics and datasets to simplify the subject generation process for better readability
added visibility and initialization for the layout panel in LayoutPanel . java to improve user interface responsiveness by managing panel visibility and properties effectively
updated condition in ServerCallable to check for location before verifying if the server is dead to enhance stability by avoiding potential null pointer exceptions
improve javadoc of pipeliningtest and builderfactory ( # 1702 )
added a check for missing key parameters in BasicChecker . java to ensure that a valid key path is used to prevent errors
refactor MediaTypeRequestMatcher to use a separate method for ignoring ignored media types to improve code readability and maintainability by consolidating media type checks
hive - 23723 : llap : print the task attempt number in debug log ( sergey shelukhin , review by prasanth jayachandran )
added a property to the SpringBootTest configuration to allow bean definition overriding in the test environment
added null check before closing indexReader to prevent potential NullPointerException during resource cleanup
removed redundant package references from BTCMarketsStreamingService and related classes to simplify the package structure and improve code organization
added a test method to verify behavior related to BRs or paragraphs in the FencedCodeBlockParser to ensure that the code does not have BRs or paragraphs in them as expected
added a new file ` CompatibilityTest . java ` that tests the internal DTD compatibility to ensure proper validation of property files in XML format
added new utility classes for push notification and security handling to enhance the application ' s capability to manage push notifications and improve security measures
update the logic for determining the number of replicas and adding related tests in TableRebalancer . java and TableRebalancerTest . java to improve code clarity and ensure accurate testing of instance state assignments
bump version to 2.7 . 0 and tidy release note
log4j2 - 2853 - fix test that be fail on window .
provide a proper exception when ajp processor can not be read ( contribute by tom denham )
initialize friction , restitution , density , and sensor variables to 0.0 to ensure default values are set for consistent behavior in the FixtureDef class
updated method names and their implementations to reflect scaling factors instead of suspensionFactors to improve clarity and consistency in handling scaling functionalities in the anomaly classification process
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to ensure the application properly waits for the broadcast idle to complete
added tests for font tag and link tag handling in ResourcesTest . java to ensure proper functionality of string resource reading with attributes
fix source path for guistatistenerator . getstats ( ) in a corner case
added permission request for call phone in the Launcher class to enhance user experience by enforcing phone access permission
updated simulation panel status from 32 to 36 and improved flight data handling to enhance user experience by providing more detailed flight - related warnings
lucene - 8181 : remove dead code and use of the static factory class .
added a synchronized method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to check if the Docker client is available before proceeding with operations
added a new constant VPX named " vpx " to the CodecTypes class to support support for VPX codec in the application
added coordinator address functionality to DistBuildFactory and AbstractDistBuildExecutorArgs to allow users to specify the coordinator address for remote communication
added a method to match paths using PathMatcher and refactored timer handling in WrapTimer to improve path matching functionality and ensure consistent timer management
added a conditional check for non - negative values before adding to labelValues to ensure that only valid values are added to the labelValues collection
make sure that a boolean can be cast to the result from a null result to avoid npes .
added a test annotation to the TestPerfBenchMarkDriver class to ensure the test is executed and does not interfere with other test cases
added materialization time setting functionality to ObjectStore and a corresponding test in TestObjectStore to ensure proper materialization logic for updated object metadata
added handling for UnsatisfiedLinkError in VoskSTTService to improve error handling and provide clearer logging for missing native dependencies
bug fix : jmx sampler gui do not work for 1st run , remove property to keep it active
updated break weight logic in GlyphView . java to handle edge cases more explicitly to enhance the accuracy of break weight evaluation for better text rendering
refactor sync handling in RCFile . java to improve readability and efficiency to enhance performance by reducing the number of synchronization operations
added an annotation to AutoAddReplicasPlanActionTest . java to address pending issue related to SOLR - 13028
added unwound data storage of steps and processors in ToePool . java to improve uniqueness of step and processor data during processing
simplified the handling of data flavors by removing the keysToDataFlavorArray method to streamline the code and improve readability by eliminating unnecessary complexity
hbase - 23939 thrift test fail on osx ( # 700 )
added a check for EOF in RegExpScanner to ensure proper handling of end - of - file scenarios
replaced the use of ` Boolean . getBoolean ( ENABLE _ METRIC _ PROPERTY _ NAME _ PREFIX + name ) ` with a more generic ` Set < String > ` for metrics and timers to improve flexibility in handling different property names
add null check for muc . getnickname ( ) in chatroomjabberimpl if it be null .
fix for openstream ( ) when filename be null or empty
refactor refresh token creation into a separate method for clarity to improve code organization and maintainability by reducing duplication
refactor error message formatting in BuckConfig . java to improve clarity and consistency in error reporting
[ flink - 21690 ] [ yarn ] remove the unnecessary job from yarnflinkapplicationmasterrunner # clearjob
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a way to retrieve the hardware buffer for improved image handling
added SSL URI for the exchange specification in BTCChinaExchange to enable secure communication for the BTCChina exchange
pmd - eclipse : fix handling of output path in gradle project
added two new classes , OauthController and Oauth2PluginTest , to the project to implement and test OAuth2 functionalities in the application
make a semgrex reference an actual link for use in javadoc
chore : remove entrystream . flatcollection ( ) and abstractstream . newstreamex and abstractstream . flatcollection ( ) , add a test .
improve log message in case of illegalargumentexception
added a condition to the shouldComeFromThisClassLoader logic to allow for mixed scala Java tests to be run with Maven Surefire ( see the RoboSpecs project on github )
inverted the condition to check if the sdp is not in transmittableAudioEncodings to ensure correct handling of audio encodings in the media control logic
updated the default value handling in CreateTableGenerator to use DatabaseFunction instead of SequenceNextValueFunction to ensure compatibility with the new database schema structure
added methods to check station 3 and 4 GML32 formats in NormalizedMultiValuesTest . java to ensure compliance with GML structure changes in the document
added a volatile boolean field ` wasInvoked ` and updated related HTTP handling methods in ` NetworkTestUtils ` , ` UaaHttpRequestUtilsTest ` , and ` UaaProxyTestUtils ` to track the execution state of network calls and improve proxy testing accuracy
added a check for configured status before expanding regex mappings and improved exception handling to ensure proper configuration and enhance clarity of exception messages
updated the ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and introduced a new method to calculate seek positions to improve accuracy of seek position calculations and ensure consistent handling of duration values
added XLCDCommunicator and XLCDController classes , and modified FirmwareUtils to utilize it to enable command processing functionality and improve firmware handling
[ drools - 2842 ] move xsd to kie - api ( # 2843 )
feat ( core ) : add retry logic to eventquery and eventquery
fix flaky test cause by timeout
modified the equals and hashCode methods in DelegatingMethod class and added a new DelegatingMethodTest class to ensure proper comparison and hash code functionality for instances of DelegatingMethod
updated resource values for freeze and resource in EnergyCost . java to reduce resource usage for better resource management
save and reload plugins configuration in ` ` downloadplugins ' ' method before exit .
deleted ` SpringTransactionHooks . java ` and replaced it with ` AbstractSpringTransactionHooks . java ` in ` SpringTransactionHooksTest . java ` to streamline transaction handling by consolidating transaction hooks in an abstract class
refactor AbstractClassAssert for improved code clarity to enhance maintainability and readability of the test code
added a new file GetUninitializedStringValue . java to implement a test for the uninitialized string value to ensure that the string reference behaves as expected without errors during execution
added support for provided dependencies in AndroidLibraryDescription and updated query conditions in GraphEnhancementQueryEnvironment to enhance dependency resolution and improve test coverage for dependency handling
added a new BooleanFlag for enabling keyboard synchronization to allow users to synchronize keyboard open and close animations when transitioning between home and all apps
changed logic for saving bugreport in FailureWatcher to ensure bugreport is saved only once to avoid redundant updates
added a new constant for " cinepack " format and updated LibMediaInfoParser to use it to improve format handling for Cinepack media values
added camera movement animation functionality to the Player class to enhance user experience by improving movement gestures during hand movement
updated the mapping from data . describe ( ) to digest . toString ( ) in GrpcCasBlobUploader . java to ensure the correct representation of the digest in the streaming output
deleted HSQLDBServerFilesFilter . java and replaced it with a custom FilenameFilter implementation in TestUtility . java to simplify file filtering logic and improve code maintainability
fix : restorefromseed and restorefromkey be n ' t work correctly .
update the method of obtaining the latest version from APIUtils to APIUtils + add a trace log for missing title by IMDb ID to improve version management and provide better trace logging for missing titles
added a method invocation that checks if a method is already present in HasTypes . java to improve the handling of method invocations based on type requirements
refactor AmbientCubemap class to use a constant for the number of values to improve code readability and maintainability by avoiding magic numbers
make sure ' methodsfeature ' have be select and apply correctly in the profile
pdfbox - 4892 : fixed handling of zero value for mask ( 0 ) , by axel howind
refactor test classes to use JUnit ' s TemporaryFolder rule for file handling to improve test isolation and cleanup by utilizing JUnit ' s built - in temporary directory management
add hook to make itemstack damageable , and allow subtypes .
fix livelayout renderstate ' s alpha layer not work ( # 8727 )
simonstewart : force the firefox driver to start at 1 page so that it work in all browser mode
updated the condition to handle HTTP GET requests alongside the existing 200 status code to ensure proper handling of HTTP connections when using HTTP methods
updated task accept string from " compile " to " process - classes " to better reflect the functionality of processing classes
fix # 4844 - improve httpclient4 ( close idle connection in second )
added a conditional check for aggregation function suffix before processing identifierToAdd to ensure that identifierToAdd is only added when the aggregate function suffix is not present
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use it to improve fullscreen functionality for better UI consistency
added a new Java class to calculate the frequency of integers from a given string to implement functionality for counting occurrences in a given string
initialize the SocketChannel variable to null to avoid potential null pointer exceptions when the variable is accessed
refactor MutisignOperationerGodicTest . java for improved readability to enhance maintainability of the test code
added error handling to ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` in ` StaxEventItemReader . java ` to ensure graceful termination when attempting to restart the fragment
updated import statements and added null handling in ` ShadowTextView ` , ` TestAttributeSet ` , and ` TestAttributeSet ` classes to improve code clarity and ensure proper handling of null values
updated import statements to use the latest version of JSON to ensure compatibility with the latest library and maintain modern testing standards
updated OS . java to handle AIX systems and added a mapping for Linux - s390x - 64 to ensure compatibility with AIX systems and support additional library paths
cloudstack - 2120 : fix the bug in vrip address be return for vrip when vrip be not define in the command line .
added a method ` invokeWithoutBlockingWithResultSync ` to ` Display . INSTANCE ` to enable non - blocking execution of Runnable tasks with result handling
remove empty test class , since it be no longer use .
replaced integer calculations with rounding methods for width and height in PortraitPagedViewHandler . java to improve readability and ensure consistent rounding behavior
updated path initialization in TestClusterDumper . java for improved clarity to enhance readability and maintainability of the code
hbase - 27492 fix for flink 1.2 . 1 failover ( colin ma )
camel - 15105 : camel - core - optimize type converter to reduce stack frame in use during service creation
added support for handling conditional tasks in SparkCrossProductCheck to enhance task management capabilities in the Spark cross product execution process
updated action handling logic in Launcher and LauncherModel classes to improve clarity and ensure proper reload behavior of managed profile actions
updated the conditional logic in ` LoginInfoEndpoint ` and added new test cases in ` LoginInfoEndpointTests ` to ensure that the account chooser and discovery functionality works correctly , especially when there are no active OAuth provider instances
hbase - 23343 improve log for assignmentmanager # todescriptivestring ( )
changed the message variable name from " message " to " msg " and updated related getter and setter methods to improve clarity and consistency in handling account messages in the API
added a new field " PERIOD " to the MariaDB database and implemented a test for the " PERIOD " keyword to ensure proper handling of the " PERIOD " keyword in database operations and validate SQL generation functionality
[ beam - 8470 ] update default pipeline option documentation to include more detail about environment variable
added warning messages for Android 7.1 - you now have Launcher shortcuts to track changes to the dictionary loading mechanism for better user experience
changed the access modifier of NUM _ MILLIS _ IN _ DAY from private to public to allow external access to the constant for number of milliseconds in the test utility
remove debug code that slip into last commit .
[ java ] separate invocation of aeron client into separate client and check for null aeron client .
added validation check for implicit lambda parameters and updated parameter type assignment to improve handling of implicit lambda parameters and ensure compatibility with parameter types
replaced multiple calls to ` hideMenuItem ` with a single ` showMenuItem ` method in ` FileMenuFilter ` to streamline menu item management by consolidating functionality
[ btc - e ] change transaction history type from withdrawal to btc _ deposit
replace List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and prevent duplicate handling of HTTP error responses
added @ Deprecated annotation to PluginLoader . java to mark the class as outdated to discourage its use in future development
fix lastqueryexecutor to correctly check end time against seqtime
fix typo when append httpresponse header .
add a static block to disable logging of HTTP errors to improve error handling and reduce unnecessary logging output
added a title bar safe area to the Sheet class to enhance user experience by preventing interactions with the title bar
reversed the iteration order in the OverflowSeriesImpl class to improve performance by directly accessing TimeSeriesChunkMetaDataList
added SQL syntax improvements in AlterTest . java to ensure proper parsing and deparsing of SQL statements
change the access modifier of the ` copyState ` method from package - private to public to allow access to the method from other classes
fixed - rbatch . get ( ) method throw classcastexception . # 4376
part file suffix be now configurable on the h2 engine , not on the h2 engine
refactor multiple Java files for consistency in naming and structure to improve maintainability and readability of the codebase
- fix nullpointerexception in CompareFunctionsProcessor . java when namearg be null
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task before reduce scope
added a ` toString ` method in ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to standardize the string representation across various vector classes
do n ' t start live tile restart when handler be invalidated
refactor lock timestamp methods and preferences handling in AppPreferences and PreferenceManager classes to streamline preference management and improve code maintainability
modified the artist retrieval logic in MediaInfoParser . java to ensure the correct artist is used based on the stream kind
added a null check for remoteMessage before accessing its data to avoid potential NullPointerExceptions when remoteMessage is not initialized
nifi - 3744 : fix npe in splittext when header line count be 0 .
added keystore loading functionality for Windows in HttpsConnectorFactory to ensure compatibility with Windows key store types
increase default check timeout to 1 second
added a condition to ignore file not found results in FileSyncAdapter . java to improve handling of file not found scenarios by ignoring ignored files
added animation interpolation and modified value handling in Slider . java to enhance user experience by allowing customizable animations with respect to visual values
updated assertions in LineSeparatorProcessorTest to use lineSeparator instead of eol to ensure consistency in line separator handling
reduce texture pack size to fit into small screen
added a test for handling cases where ` negatedTernary ` is not wrapped in ` UnwrapParentheses . java ` to ensure correct handling of nested expressions in the code
camel - 17962 : fix hazelcastqueueconsumer to work well with spring and avoid npe in camel - hazelcast
added a new ` TextFeedbackTest ` class and modified ` AllTests ` to add it to enhance testing capabilities for text feedback functionality
replaced Math . round with Float . compare for score comparison to improve precision and precision of score comparison
updated DENSITY constants for improved display sensitivity handling in AddAndScaleMultiImage and ResourceEditorApp classes to enhance flexibility in handling different display modes for better user experience
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and modified ` destElemKlass ` initialization in ` ArrayCopySnippets ` to improve code readability and utilize configuration for array class element offset handling
add stage total check to defaultlogpublisher . resolve issue # 2593 ( # 2594 )
- add - r option to turn off / r on / off Turn on remote scm system
[ mielecloud ] add the ability to switch between start and end state for the launcher ( # 11446 )
replaced ` StatsLogCompat ` calls with ` SysUiStatsLog ` calls to standardize logging implementation to improve consistency and maintainability
updated variable name from ` log ` to ` LOG ` for consistency to improves code readability and adheres to Java naming conventions
added tests for project generation events to ensure correct handling of events during project generation
ggb - 2118 : implement selectionmanager . getspecpoints ( ) ( use select _ point ( ) instead of select _ point ( ) )
refactor JavaCompiler class implementation to improve code maintainability and readability
add an error log statement to prove debugging of random read execution in integrationtest
8203701 : jmap - core : use apache license for file that be faling rat check
added " -- gc - sections " and " nocopyreloc " options to the ldflags configuration to enhance garbage collection settings for improved performance
fix fallback uri for circuitbreaker . filter . fix # 1706 ( # 1707 )
jasonleyba : update copyright year for file in corba repository for 2013
[ bug - 64489 ] avoid read shared string table from drool file if they do not exist
added methods to retrieve account network by HTTP in HttpMethed . java and added a corresponding test in HttpTestAccount001 . java to enhance account management functionality and ensure it works as intended through unit tests
added a check for zero avail text width and modified the handling of GTKLookAndFeel initialization to improve robustness by skipping the test when the GTKLookAndFeel cannot be set
refactor flatteningIterator to use a separate stack instead of directly handling the iterator to improve code clarity and reduce redundancy in iterator initialization
[ te ] fix title and body in notification not render ( # 4688 )
doc : generate sample code in the java microgenerator ( # 419 )
added a method to reload and delete any existing question in the InstructorFeedbackEditQuestionsUiTest to ensure that any existing question is removed before the test is executed
updated return values in HSSFSheet and modified conditional checks in BaseTestSheet to ensure correct handling of first row and last row number calculations
added permission checks for launcher activities to enhance security to prevent malicious intents from being executed without proper permissions
[ java ] send cluster session ' ready ' event after cluster session be create and ready for a long time .
implemented the hashCode method in AbstractParquetMapInspector to ensure consistent hashCode implementation for instances of AbstractParquetMapInspector
added flush and release buffer when remotely closed in HTTP3StreamConnection to ensure proper resource management when the stream is closed prematurely
extended the SplitReader interface to extend AutoCloseable to ensure proper resource management and prevent potential memory leaks
removed the deepCopy method from the GsonBuilder class to prevent creating a deep copy of the properties for the Gson instance
[ gr - 26577 ] return static final sourcemap to avoid unnecessary null return .
[ scb - 2716 ] bump vertx version to 3.0 . 0 , fix restclientrequest # openasync to 3.18 . 1
fix a syntax error in the dispatchStatusString method call to ensure proper execution of the status string execution
added a new class ` SearchingClassLoader ` and modified ` MockFactory ` to combine and use it for class loading to enhance the loading mechanism to manage different class loaders
add a new test class TestRefreshFlagBug for testing scene behavior to ensure that the UI updates correctly with different mesh dimensions
hive - 11804 : constant folding should handle left semi join correctly ( harshal patel , review by jesus camacho rodriguez )
updated response handling logic in HttpReceiver and HttpSender to check for continuity to improve response termination logic based on the HTTP status
replace ` arrayLengthOffset ` with ` arrayOopDescLengthOffset ` across multiple classes to standardize the offset retrieval logic for improved clarity and consistency
apply patch for amq - 4569 to fix unit test failure
refactor multiple classes related to Kerberos and SSL configurations to improve code organization and maintainability across the project
added a check for ` isRunning ( ) ` before calling ` appCtx . stop ( ) ` to ensure that the application only stops if the context is valid
changed the return type of the drawItem method from void to GlyphLayout to enable proper rendering of the item in a glyph layout
replaced the direct call to ` JsonUtils . readValue ` with a ` MetricsPublisher ` for metrics retrieval to streamline metric handling and improve error handling during JSON processing
updated the method name from ` accountAgeWitnessService ` to remove an unused constant and simplified return statements to improve code clarity and reduce redundancy
reformatted code for better readability and consistency by adding a switch statement to improve maintainability and enhance code clarity
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated interceptor configurations to enhance resource handling capabilities in the webflow execution plan
add dexreturninliner . transform ( jbody ) for good jimple analysis
add additional property to enrichedruledto and rule ( # 1666 )
removed the ` LinkOption . NOFOLLOW _ LINKS ` parameter from the directory check in ` PathResource . java ` to simplify the directory check logic and ensure proper HTTP status handling
[ flink - 24042 ] [ table ] remove sqldialect config validation and default value
updated references to ` rDotJavaPackages ` to use a ` Supplier < ImmutableSet < String > ` for better clarity to improve code safety and maintainability by explicitly indicating the presence of multiple packages
add test for astpackagedeclaration . also deprecate getnameimage ( ) return null
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor to allow configuration of compaction unseq file size for improved performance
[ hotfix ] [ resourcemanager ] move activeresourcemanager into it subpackage
disable test for now a it ' s unstable and fail on hudson
updated the return statement in ZipResource . java to handle URISyntaxException and added a new ZipResourceTest . java file to ensure proper handling of space in file names and improve test coverage for handling spaces
updated spacing and added thumbnail handling logic in ExpandableUploadListAdapter . java to improve code readability and ensure thumbnails are dynamically updated based on upload status
updated RobolectricTestRunner to merge parent class and method configurations more effectively to improve flexibility in configuring scenarios when class does not have config annotations
updated ModelLoader to filter blocks by registry name before creating a list of items to ensure that the list of items is valid only when the registry name is not null
updated method signatures in AbstractDataChangedListener , WebsocketDataChangedListener , and SyncDataService classes to improve code consistency and align with new listener implementations
updated JSONPojoConvertor to handle enum types and modified color handling in tests to enhance type safety and improve color management in tests
added a deprecation warning message for the ` -- view ` option in the ` IjProjectCommandHelper ` class to inform users that the deprecated view option will be removed soon
changed the type of originalPayload from String to byte [ ] and updated related method calls to improve performance and simplify byte handling by using byte arrays directly
added OrientationCorrectionListener to the GyroControl class to handle sensor events based on device orientation to improve device interaction handling for better device responsiveness
biome dictionary : set biome list size to the current size of the biome gen array .
changed interface declarations to public in GetInterfaceTest . java to improve visibility and consistency in interface definitions
fix potential issue in compilerconfig # getjdtfilename ( ) when use jdtcompiler . getenvironment ( )
added a new interface ByteToLongCollector in the project to provide a standardized way to handle byte - to - long functions in the collector
added a preload parameter to MMapDirectoryFactory to enable or disable preloading behavior based on user - defined parameters
added custom metrics for various enabled components in BukkitPlatform to provide detailed metrics on component usage for better analytics
updated QuickConnectREST class implementation to improve API performance and maintainability
added aspect ratio and default card image assignment in CardPresenter . java to enhance image processing capabilities for better visual consistency
( scott phillips ) do n ' t decrement auth method count when an http request fails .
fix clone ( ) method to clone long , double , and byte array if they be empty .
added unit tests for system time time in TimeChangeTest . java to ensure correctness of system time measurements during execution
add null check for the line parameter and print it in MultiPartFilter and MultipartFilterTest to ensure robust handling of null values during processing
fire livingexperiencedropevent . drop to change the mob loot , close # 1534
[ openuv ] improve message for quota exceed and refresh ( # 15837 )
[ beam - 8470 ] remove unsupportedoperatorsvisitor because we do n ' t support it
add support for RdepsFunction in GraphEnhancementQueryEnvironment to enhance dependency management for improved query execution
modified the implementation of the Character class to enhance character handling functionality
added logic to scale all rocket components before setting the selected index to ensure that only valid rocket components are selected in specific stages
replaced multiple assertions with single assertEquals statements in UpdateableResultTest . java to simplify test code and improve readability
added time boundary information retrieval for offline and realtime tables to improve handling of hybrid tables and streamline time boundary management
add the poller to the endpoint map only when the poller be not set to avoid the race condition and add the socket reference to the poller when the endpoint be already in use
updated regex patterns and modified album title handling in EightmusesRipper . java and EightmusesRipper . java to improve handling of images and enhance URL processing for better media retrieval
updated references from ` mDevice . wait ` to ` TestHelpers . wait ` across multiple classes to streamline wait method calls and improve code readability
updated conditions in QuickstepLauncher to include phone profile check to ensure proper layout behavior for phone devices in non - landscape orientation
updated queries in PartTreeJpaQueryIntegrationTests to use unwrap ( QueryImpl class ) instead of getValue ( ) to improve type safety and avoid potential null pointer exceptions
use readmatchinglines ( ) to avoid permission denial
remove the dynamic check for ` getResultStream ` in ` JpaQueryExecution . java ` to streamline the query execution logic for improved performance
fix nullpointerexception in physicsprocess # processentity ( ) when entity be null
added a test for clearing the map when value attributes are indexed to ensure that the entry processor correctly processes entries with predicate and size
add operationsetjitsimesettools to update status message base on user feedback
[ hueemulation ] fixed flaky test on window .
fix disable normalize name by disable menu item
updated scratch path format in Aapt2Link . java and added RmStep functionality to improve readability and maintainability of the generated scratch path
replaced instances of ` Capture ` initialization with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and ` ThriftOverHttpServiceTest . java ` to improve instantiation efficiency and adhere to best practices for mock usage
ggb - 2118 selected geos be not consistent with graphic view in av ( but not draw yet )
[ flink - 17654 ] [ yaml ] fix yldvalidator to throw proper exception when parse cql expression fails
added ` isCanceled ( ) ` method implementations across multiple classes to ensure consistent behavior for cancellation checks in various classes
refactor multiple classes to use a default method for checking annotation presence to improve code consistency and reduce redundancy across the codebase
introduce default implementation for removeallwidgets to avoid mishap .
[ hotfix ] [ test ] add testappender to log test
opensslcipher : use ` math . max ` when calculate output size
added logic to handle high - res content using VLC on Fire TV Stick to enhance transcoding options for high - res content
[ beam - 8470 ] refactored data source to use mock runner instead of custom runner
replaced specific imports with wildcard import and updated listener handling in GpsLoggingService . java to improve code readability and maintainability by reducing redundancy
changed the method signature from ` boolean ` to ` byte ` and modified wide handling logic in ` vt320 ` and ` Relay ` classes to enhance data handling capabilities and improve compatibility with different JNI libraries
added handling for BaseItemDragListener in FolderIcon . java to enhance drag functionality to support shortcut information
activiti cycle bugfix : connector can now create an empty repository artifact ( e . g . file or folder ) .
removed unnecessary lines of configuration keys in RabbitMQPublisherImpl . java to streamline the code for better readability and maintainability
removed a condition that checks for month and year after aug1 in the video link validation to simplify the condition for video link validation
camel - 6521 : fixed path handling for sftp . thanks to joerg kessler for reporting .
( chore ) camel - base : replace mock # assertissatisfied with mock # assertMockEndpointsSatisfied
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to enhance code readability and maintainability by using a more descriptive name
fix double plant not take into account the mass of mass .
replaced ` setFocusable ` with ` setRequestFocusEnabled ` in ` TranscodingTab . java ` to enable request focus functionality for improved user experience
added exception throwing in VirtualMachineManagerImpl . java to ensure that errors are properly propagated during execution
updated DB2TestSystem to streamline license handling and modified condition checks in DockerDatabaseWrapper and TableIsEmptyGenerator to enhance code clarity and maintainability while ensuring correct database handling based on database type
- improved handling of unit group for seek ( base on user feedback )
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC / ZMW
pdfbox - 4892 : set the number of sample for the pbr lighting a propose by jesse long
updated test assertions for tasklet names in StepWithSimpleTaskJobParserTests . java to improve clarity and consistency in test case naming
added ' final ' keyword to variable declarations in CentralAuthenticationServiceImplTests . java to enforce immutability for the variable and improve code safety
fixed erroneous ` ` ggbabs ( ) ' ' in expressionnode
hive - 13058 : add the service output only when need ( pengcheng xiong , review by thejas nair )
[ drools - 2842 ] support for bigdecimal in llvm model ( # 2843 )
added a comment to hide the JDT used by Jetty to improve code readability and maintainability
modify return value from super . useAuthCache ( ) to false to simplify authentication logic by removing unnecessary cache checks
fix capitalization of namespace for page title ( # 726 )
camel - 7461 : direct producer / sendtononexistingendpoint do not throw camelexchangeexception when no consumer be available on a route .
added a null check for the zooKeeper object before attempting to assign it to itself to avoid potential NullPointerExceptions when the zooKeeper is not initialized
fix progress bar style in ` ` load mod ' ' step .
added a new method ` runOnUiHelperThread ` to execute changes in ` AllSetActivity ` to improve the execution flow of UI operations for better performance and readability
added a method to update the last remote stream ID to ensure tracking of stream integrity during processing
set antialiasing to match antialiasing behavior in the desktop
[ java ] : use sentposition instead of nexttermoffset to distinguish between window size and available window .
refactor : remove static import of enums in ctannotationimpl . java ( # 2563 )
update exoplayer . builder javadoc to mention buildexoplayer ( )
replaced the native method ` getRGBPixelImpl ` with a new rectangle method ` getRGBPixels ` to improve pixel retrieval by utilizing a rectangle for better dimensions
add a new method ` newPrintStream ` to handle specific encoding for output streams to improve flexibility in setting output stream encodings based on system properties
touchablemovementmethod : use vibrate of 25 instead of 1 for vibration .
fix flybush module to work with new flybush api
updated constructor parameters for WebSocketClient to remove dependency on executor and sslContextFactory to simplify constructor parameters and improve code clarity
fix test _ i18n . html for sel . open ( )
[ gr - 38877 ] fix error handle when link at build time be enable .
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper state management during test execution
performance improvement : use case - insensitive comparator for feature .
refactor JavaFileObject handling in JavadocTool to improve parsing logic to enhance clarity and maintainability of file processing
simonstewart : add a failing test for the future , and re - enable the failing test for the option toggle functionality in the firefox driver .
added validation to check if keys length is 9 to ensure correct number of keys to prevent processing errors
updated attribute retrieval logic to handle HdfException to improve error handling and logging clarity when processing attributes
return writeresult instead of pdone in batchloadbigquery and writewindowedtobigquery . expand ( )
fix ( processgroups ) : update xml doc for createtemplaterequestentity and createtemplaterequestentity ( # 3417 )
added a new file ` TestMultiANewArray . java ` to test multi - anew array functionality to ensure that the methods correctly handle dynamic class file operations and verify expected outcomes
bug cs - 15825 : remove config option to manage secondary storage per zone
refactor block ID retrieval logic in SyncBlockChainMsgHandler . java to improve clarity and ensure correct handling of block IDs based on their index
set the theme of the preview tab to the default theme of the theme to ensure the correct theme is applied for the preview tab
added a null check and close method for the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added idle timeout configuration and a test for the HTTP client to ensure proper handling of idle timeouts and validate server connection stability
move dictionary . properties to dcoref so they can be reuse by dcoref .
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve clarity and functionality of parsing tag names in the code
fix checkstyle issue in unit test
change log level from warn to debug for child nodes matching improper names to reduce log verbosity and focus on more relevant information
updated ColorExtractionService to use getHotseatPallete ( ) instead of updatePalette ( ) for improved hotseat palette management to enhance compatibility with newer Android versions and ensure compatibility with hotseat features
added default data table entry and cell transformers to TypeRegistry to enhance flexibility and flexibility of data model integration
[ java ] remove assertion because it be not need .
doc : fix docstring formatting ( # 269 )
added projectGenerated property and its getter method to true in ProjectGenerator and WorkspaceAndProjectGenerator to ensure project generation is correctly managed and processed
[ java ] fix checkstyle violation that slip through
added new Contact class and updated Routes and ApplicationController for handling contact form to enhance the application ' s ability to process and display contact information in the application
guac - 1115 : improve permission implementation to use objectpermissionset instead of objectpermission .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version for improved functionality
[ drools - 7 ] fix a bug in build recent version of the traitfactory
updated method names and logic to support both " name like : name " and " alias like : name " to improve clarity and functionality of SQL queries related to alias handling
replaced manual close loops with IOUtils . closeSafely for closing resources to improve resource management and avoid potential memory leaks
[ doc ] updated javadoc of datachangedlistener
added a click listener to the overflow button to display the menu directly to improve user experience by allowing users to click on the overflow button
updated failure messages to specify that " is a non - null reference " instead of " is null " to improve clarity and accuracy of error messages
ggb - 1353 update line height for help button , in order tooltips
test : move protobufferutiltest to core package and add test
fix ` ` split pane ' ' position when change size
add support for cross - reference entry in globals . getallentries ( ) ( fixes # 456 )
[ geos - 8125 ] use serializable metadata instead of map < string , object > in java . geoserver
changed the List of DataTableDescriptor from extractTypes to dataTables to better reflect the functionality of data table handling
fix a bug where we do n ' t update the node of a contact when the avatars change .
update import statement for Command class in ShellCommand and ShellFactoryImpl classes to ensure compatibility with the latest package structure and improve code clarity
add a test for cleaning up audit log table post parameters by position
change the return type of the inject method from generics to Object to ensure proper type handling and avoid unchecked cast warnings
refactor ACLFileParser to use regex for validating comments and parsing to improve code maintainability and ensure proper parsing of comment lines
updated MapRDBFormatMatcher to import DrillTable and modified method signatures accordingly to enhance functionality by integrating dynamic drill table management in the application
thirdeye - 627 : startreetypeimpl : add map to store ancestor dimension value ( jesus camacho rodriguez )
added a check for user unlock state before closing open views to ensure views are only closed when the user is authenticated
fix issue with setposition ( ) and setwidth ( ) on io
refactor PKIXValidator logic to improve certificate validation structure to enhance readability and maintainability of the validation process
[ flink - 26010 ] [ hadoop - connector ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to ` org . apache . shenyu . integrated . test . alibaba . dubbo . integration . test . alibaba . dubbo ` across multiple test files to ensure consistent package naming for better code organization and maintainability
cloudstack - 2120 : do n ' t skip project network access if the device be not part of the project
modified the removal of type field in RuntimeTypeAdapterFactoryFunctionalTest to ensure correct handling of shape types during JSON processing
add back app . setpropertyOccured ( ) for backwards compatibility
7128080 : javaws fail to launch on oracle due to xrender
[ java ] fix flakiness in streamclosetest . testclose
refactor the ` doAfterFlush ` method in ` DocConsumer ` , ` DocFieldProcessor ` , and ` TermVectorsConsumer ` classes to avoid hang issues to ensure proper handling of fields during flushing operations and avoid potential memory leaks
filter out deprecated error from jpa configuration ( # 2338 )
[ java ] reduce memory footprint by remove unnecessary field .
updated the number of threads from 25 to 15 in HiveConf . java and refactored file renaming logic in Hive . java to optimize resource usage and improve code clarity
prevent the thread from crash the server when an error occur while send to a parallel peer .
added a null check for the context in SchemeAndroidIDE . java to prevent potential NullPointerExceptions when context is null
ensure correct native - image class loader be pick up when native - image be instal .
changed the return type of modifyGrantedAuthorities method from void to List and modified its usage in SwitchUserAuthorityChanger and SwitchUserProcessingFilter to allow modification of granted authorities more effectively
renamed JaxrsIntegrationTest to JaxrsIntegrationTestBase and created RawJaxrsIntegrationTest and JaxrsSpringMain classes to enhance test organization and organization within the serviceComb framework
fix # 453 - hikaripool . setquerytimeout ( statement , timeoutsec ) not work .
added DataProviders for general and supplementary character tests in XslSubstringTest . java to improve test coverage and organization for XSL substring functions
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter . java ` and added a new close method in ` NoStartEndDocumentStreamWriter . java ` to ensure proper resource management and behavior during document writing operations
added support for MariaDB sequences and updated handling of sequence parameters in the CreateSequenceGenerator to enhance sequence functionality and ensure compatibility with MariaDB features
removed unnecessary spacing in error messages across multiple buffer classes to improve code readability and maintainability
added TableDataManagerProvider integration to multiple test classes to enable monitoring and management of table data management functionalities
update SSL extension checks to includeMFLNExtension to ensure compatibility withMFLN and improve SSL configuration handling
updated ObjectIterator and its subclasses to use ObjectHashSetIterator instead of generic T to improve type safety and simplify iterator initialization
update characterRemaining count from 22 to 23 in Compose . java and TweetFragment . java to improve clarity and consistency of character count logic
added a new constant for Cassandra data point TTL and updated related methods to allow configurable expiration handling for data point writes to enhance flexibility in handling TTL for improved data integrity
modified the ` checkForAndKillXcodeIfRunning ` method to accept an additional ` enablePrompt ` parameter to enhance user control over the Xcode process prompt behavior
add a new method ` getTerrainAtCell ` to the ` TerrainGrid ` class to retrieve the terrain from a given cell coordinate to improve the functionality of the ` TerrainGrid ` class by allowing access to the tile cell directly from the cache
added default value handling in expression printing and created a new Java class for compiling annotations to ensure default values are printed correctly during annotation processing and facilitate testing of annotation compilation
added error handling for missing quest keys in ResourceLoader . java to improve robustness by logging errors when the quest key file is missing
updated the return condition to check if the request is not push support to ensure that the method correctly recognizes channels with non - push conditions
refactor PointValue class for better clarity to improve maintainability and readability of the code
replace blockCapsule . sign ( ByteArray . fromHexString ( args . getLocalWitnesses ( ) . getPrivateKey ( ) ) with blockCapsule . sign ( ) to ensure correct signing functionality for local witnesses
return the first root or null if no roots exist in FileSystemView . java , and added security checks in Win32ShellFolder2 . java to enhance robustness by handling empty root cases and enforcing read permissions during folder access
fix copy to last row when split table . patch by jbellis ; review by brandonwilliams for cassandra - 1598
added undo note list functionality to the ListFragment to improve user experience by managing note selections more effectively
[ # 7841 ] fix creation of new feedbackquestionid when backup ( # 7842 )
added null check for data returned from getTransferData to prevent potential NullPointerExceptions when data is not provided
no effective change - remove empty statement
replace custom Padding class with Rect from AppWidgetHostView for widget padding calculations to simplify padding retrieval and improve compatibility with widget framework
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code organization and enhance argument filtering functionality
refactor ClassGraph and ScanResult classes for improved readability to enhance maintainability and clarity of the codebase
replaced the CountDownLatch variable name from " latch " with " goAwayLatch " and modified the idle timeout calculation to improve clarity and accuracy of the timeout handling logic
refactor assertions in IterableSubjectTest to use hasMessageThat ( ) method to improve readability and maintainability of the test code
refactor Workbook . currentBook usage from ThreadLocal to null in multiple files to simplify object initialization and improve code clarity
modified the vote method to include support checks for MethodInvocation type to ensure that the object type is acceptable for further processing
removed unused import statements in DataLoader . java to clean up the code and reduce dependencies
added functionality to track the number of rows processed in the update process to improve user feedback by indicating successful updates
ggb - 2226 fixed margin , left and top not be set for scaler on macos
updated foregroundFPS and backgroundFPS values from default to 60 to standardize frame rates for better consistency in application configuration
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog classes to ensure that the tracking and release functionality of transactions is validated correctly
replaced DefaultWebSocketFrame with ChannelFutureListener for closing WebSocket frames to improve the handling of WebSocket closure events by using a listener
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` and added assertions for latch and onStateMachineError to improve clarity and accuracy of test cases related to state machine event handling
refactor SettingsActivity to encapsulate background setting in a separate method to improve code readability and maintainability by consolidating background setup logic
updated import statement from org . apache . commons . lang3 to org . openhab . core . StringUtils and added null check for the line parameter to ensure compatibility with the OpenHAB library and avoid null pointer exceptions
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class for concatenating values with weights to enable more flexible accumulator functionality in the application
flume - 2895 : fix javadoc error in put and replicationsink
replaced the use of Set with a Map for managing regex instances to improve performance and simplify cache management
added a reset method to the GameThread class to reset the game thread state
added a login method to DigestAuthenticator for handling authentication attempts to ensure that only valid realm names are processed to avoid errors during authentication
updated parameter handling in SavedRequestAwareWrapper to support multiple parameters to ensure consistent retrieval and retrieval of parameter values from multiple instances
updated InfoStatus messages to use a specific class name and improved the toString method to enhance clarity of status messages and ensure accurate representation of object state
replaced the call to ` countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog . java ` and ` HAService . java ` to streamline the wait point handling process during shutdown
added a check for Android O to the photo viewer activity to ensure compatibility with devices running Android O and above
updated schema info level from minimum to basic to ensure compatibility with new schema structure
xmlstreamwriter need to be create on close ( ) to avoid resource leak
fix utf - 8 encode issue in testpayloads .
fix npe in world . getentityat ( j2 ) . close # 103516
added " psiprobe . Tomcat101ContainerAdapter " to the list to support integration with Tomcat 10 and 11 components
[ drools - 2147 ] fix protobuf input constraint for multi - accumulate
camel - core - languages : fixed switch / cases indentation see camel - 14540
pdfbox - 4892 : remove public access , a suggest by valerybokov
added imports and modified method handling in RemoteEndpointServiceAccessStrategy to utilize SpringExpressionLanguageValueResolver for improved attribute resolution to enhance readability and maintainability of the code by using dynamic HTTP method and headers
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to streamline response building for improved readability and maintainability
added a command start notification to the manager in AsyncBackgroundTaskManagerTest . java to enable notifications to be sent during task execution
updated the method name from ` computePreviewDrawingParams ( Drawable d ) ` to ` recomputePreviewDrawingParams ( ) ` and added a null check for ` mReferenceDrawable ` to improve code clarity and prevent potential null pointer exceptions
replaced SimpleOrderedMap with CharFilterFactory for tokenizer processing to enhance token filtering capabilities by using a more suitable token filter factory
replaced null argument checks with ParamChecks class for plot , generator , and hotspot to simplify code and improve maintainability by using a standard utility method
added verbosity handling to JavacStep and updated context creation in ExecutionContext to improve output formatting based on silent verbosity setting
added logic to convert schema to uppercase when using Oracle to ensure consistent schema formatting across different database types
log4j2 - 1349 fix unit test which fail on jdk8
added a new file TestShrinkToOneRegion . java that contains a main method to facilitate testing of garbage collection behavior
updated the way custom packages are processed using Splitter in SandboxTestRunner . java to improve code readability and maintainability by utilizing standard library functionality
updated the context handling in AnalyzingInfixSuggester and added a test for binary context in AnalyzingInfixSuggesterTest to ensure correct context values are used and to validate functionality through testing
fix content - type for local file use http ( # 3940 )
remove the provenance hash parameter and use jsonresult a it be overwrite by stripprovenance
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
changed modifier of FORMATTER variables from private final static to private static final static in multiple field test classes to improve consistency and avoid accidental modification of the FORMATTER variable
hive - 23794 : improve round function to handle int instead of long ( # 3395 )
[ jsscripting ] fix compiler warning ( # 10685 )
changed class visibility from package - private to public for Test1 and Test2 classes to allow access to these classes from other packages
updated player event handling to use " deny . no _ enter " instead of " permission . no _ permission _ event " to improve clarity and consistency in permission management for players
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 3 and row _ count
fix : test normsformattestcase fail due to wrong implementation of numericdocvalues
added test cases for Box2DCharacterControllerTest with dynamic properties and friction settings for contacts to ensure that player sensor effects are consistently applied and reset during testing
8307289 : [ testbug ] fix jdk / internal / tools / launcher / option / badoptionvalues . java test
updated the expected output type in ObjectAlignment . java and removed a check for a multiple of 8 error in Options . java to ensure proper handling of input parameters and improve clarity of error messages
added target package extraction functionality to AndroidInstrumentation tests to enable users to specify the target package for Android instrumentation tests
updated the implementation of the DocHelper class to improve code clarity and maintainability
fix initial copy of list can not be modify
refactor method calls to use explicit casting of boolean and character values to improve type safety and reduce unchecked cast warnings
move isworkingonmessage ( ) method into separate thread , to avoid starvation when a lot of fetcher thread be use
fix typo in Inflection . java file to ensure consistency and accuracy in codebase
re - add call to locale in evaluationcontext to allow user to choose the locale
removed unused import of Plugin in SummaryPrinter . java to clean up the code and reduce unnecessary dependencies
added a break statement in the DrawerActivity class to ensure the loop terminates correctly when the condition is met
updated import statements and modified debug log message in MongoQueryCreator . java to enhance query handling and improve logging clarity
ww - 4447 add system property xwork . loggerfactory to specify loggerfactory
fix test name to match p2p disabled acceptance test
changed the bean name from " livenessStateHealthIndicator " and " readinessStateHealthIndicator " to " livenessStateHealthIndicator " and " readinessStateHealthIndicator " to improve clarity and consistency in bean naming
added concurrent map support for PStore updates in LocalPStoreProvider to enhance performance by allowing concurrent access to PStore instances
changed the visibility of the deleteFiles method from public to private to restrict access to the method for better encapsulation
replaced the ` Provider ` implementation with ` ServiceProvider ` in ` ServiceLoaderSpliterator . java ` and ` TypeUtil . java ` to improve clarity and functionality of service loading and error handling
add a workaround for nosuchfieldexception that happen when a converter can not be load .
added checks for toolchain creation and other toolchains in multiple classes to ensure proper handling of toolchain changes to prevent runtime errors
add a boolean flag to indicate if the context was added to the engine to ensure proper cleanup of the context when necessary
use contains ( ) instead of indexOf ( ) to simplify string contain ( ) call
updated PrebuiltCxxLibraryDescription and related classes to utilize CxxFlags for exported linker flags to ensure correct handling of linker flags in the build process
refactor methods related to recents rotation handling in AbsSwipeUpHandler and RecentsView to improve code readability and maintainability by consolidating functionality
updated listener checks to use wildcard generics for type safety to enhance type safety and reduce casting overhead
fix a bug where block hash be different than the hash of the new block .
message store : use get storepathphysic ( ) instead of getstorepathcommitlog ( )
moved the reusable instances of ` JvmGcMetrics ` and ` JvmHeapPressureMetrics ` to a single statement to simplify the code and improve readability by reducing unnecessary complexity
added message statistics for found , miss , and elapsed time in the CompactionLog class to track and report accurate message status updates during compaction processes
hhh - 15691 - deprecate jpa common query and related base class in preparation for removal of alternative implementation
added a method to check if the system UI object exists and executing the keyboard command to enhance functionality by executing keyboard commands when the object is present
changed ` logger ` from ` static final ` to ` final ` in ` SessionRegistryImpl . java ` to enforce immutability of these variables and improve code safety
return false on empty or null uri cookie store .
add more log to bonsai world state update
change the return type of getText method from String to CharSequence in multiple repository classes to support charactersequence support for improved data handling
[ java ] ignoring again a test fail because of marionette regression
added a try - finally block to ensure the destination connection is returned correctly to prevent potential resource leaks when an IOException occurs during connection returns
renamed ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and updated related references to improve clarity and consistency in handling command processing across different platforms
added synchronization to the heartbeatExecutorService and modified thread counting for better resource management to ensure thread safety and prevent potential deadlocks when stopping the database transaction manager
refactor the handling of build results to use a new method wrapWithTracingAndCancellation to improve code readability and maintainability by centralizing the execution flow
fix for drag - selecting text out of the text area ' s bounds
added Hadoop file path configuration overlays in TestInformationSchemaWithPrivilege to configure temporary and staging directories for mapreduce operations
refactor graphics configuration retrieval logic for clarity and efficiency to streamline the process of obtaining the graphics configuration and enhance readability
tika - 3778 -- add oom test in legacy mode
camel - 20297 : camel - core - optimize pipeline to reduce stack frame in use during callback
add - model option to printtaglist and update readme . txt
updated the method from ` getFullyQualifiedName ( ) ` to ` toString ( ) ` in ` InsertDeParser . java ` and added a new test in ` InsertTest . java ` to ensure correct handling of SQL aliases in the insert operation
[ amq - 9287 ] fix the test failure of eofindexrecoverytest ( # 956 )
[ java ] increase timeout and add client to startfromtruncatedrecordinglogtest .
modify the calculation of the ` outer ` rectangle in ` LineBorder . java ` to use a fixed ` offs ` value instead of a fixed value to ensure proper calculation of the rectangle ' s offset based on the specified offs value
added check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to ensure that galleryImages is not null and not empty before processing
added a new column ` DEPLOYMENT _ ID ` in ` StandardChangeLogHistoryService ` and ` CreateDatabaseChangeLogTableGenerator ` to ensure the correct deployment ID is added and removed from the database schema
pdfbox - 4071 : update usage link ( thanks to simon steiner )
removed the ' moreColumnsOk ' parameter from several methods in AlterTableAddConstraint . java to simplify the method signatures and improve code readability
camel - 5470 : quickfix engine should be able to register new engine with thanks to jason
added displayZoomControls property and updated setMixedContentMode method to return it to allow configuration of display zoom controls based on content mode
added corporea block and corporea slab ( # 861 )
refactor ConnectionFactory class for improved connection handling to enhance performance and maintainability of the connection management system
added a method ` EnableDisableMenuItems ( ) ` to ` GpsMainActivity . java ` to control the display of menu items based on user settings
updated the message for empty lists in the ExtendedListFragment to indicate that the list is intended to include a filter list instead of the headline server search
hhh - 13663 avoid use @ serviceregistry . setting a it be no longer need
added table column auto - resizing and auto - create columns from model to MotorMountConfigurationPanel to improve user interface by disabling unnecessary column creation
updated LINE _ SEPARATOR to use system . getProperty instead of System . lineSeparator ( ) to allow for more flexible configuration of the line separator
added getter and setter methods for creator , subject , and subject in POIXMLProperties . java , and created a test for document properties in TestPOIXMLProperties . java to enhance property management and ensure proper functionality through unit testing
reformatted the call to super . doStop ( ) in HandlerWrapper . java to improve code readability and maintain consistency in method invocation
eron . waitforcnfile ( ) should return immediately if file do not exist .
replaced ` NonMarkedFoo ` with ` FooCommand ` and refactored several methods in ` UnsatisfiedTypeBounds . java ` to improve type safety and clarity in the codebase
added support for jmod file handling in ClassFileSourceImpl . java to ensure proper loading of classes under J mod conditions
refactor TreeBackedElement and TreeBackedPackageElement to remove the redundant ' canonicalizer ' parameter to simplify constructor parameters and improve null safety
added a new ` PublicTokenRequest ` object and set its request parameters in ` Saml2TokenGranterTest . java ` and ` UserTokenGranterTest . java ` to enhance request handling capabilities for better client identification
[ flink - 23454 ] [ core ] fix value range lookup in abstractfrompropertyvaluerangedescriptor
added synchronization functionality to ZKAssign and ZooKeeperWatcher classes to enable proper synchronization of nodes with specified paths
fix ` ` no context find ' ' error
jbrules - 2623 : ensure the ruleflowgroup be only remove if it ' s active
added a return statement to the HystrixDashboardConfiguration class to improve function exit point clarity
pipe drop pipe do n ' t fail when the pipe do n ' t exist
refactored the clientqueuedisruptiontest to be a cleanup method instead of the test class
refactor : use defaultjavaprettyprinter instead of signatureprinter for getsignature ( # 1783 )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
refactor GeoPointField , GeoPointInPolygonQuery , and GeoPointNumericTermsEnum classes for improved readability and organization to enhance maintainability and clarity of the codebase
add a new class FakeBuildable and replace its usage in OnDiskBuildInfoTest with a new one to facilitate testing by providing a mock implementation for buildable instances
fix an npe that occur because of itemstack . getitem ( ) .
rename rule path to timeseries in RewriteRuleSubtreeStream for clarity to improve code readability and accurately reflect the functionality of handling timeseries
added a check for the minimum value in the TubeCalc class to ensure that the calculation process does not exceed a maximum threshold
refactor storage methods in GcsPinotFS to use BlobId class more effectively to improve code readability and maintainability by standardizing BlobId creation logic
replaced the blockCloseVertxByName method call with a finally block to ensure the VertxUtils block is closed properly regardless of the execution flow
# 754 - postgres history ddl - add ddl for create / update table / view with history
updated test to check for clustering engine with a different parameter value to ensure functionality with the new expected behavior of clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as rewritten to avoid redundancy in tests that need to be rewritten
replaced the ObjectInputStream implementation in ParserCacheCommand . java with a new class ParserStateObjectInputStream . java to enhance the handling of RemoteDaemonicParserState during deserialization
added null check for objectQuotingStrategy and updated its assignment in DatabaseChangeLog to ensure proper handling of object quoting strategy when changeLog is not null
changed the MetainfoParser instantiation from ` parse ` to ` fromXmlStream ` to improve file handling efficiency and compatibility with XML streams
deleted the CsrfControllerAdvice . java file to the functionality is no longer needed in the security framework
groovy repl : fix endorsed dir to work on window
added animator functionalities to the Launcher application to enhance user experience by improving visual feedback during screen actions
[ iotdb - 167772 ] fix ` typeinferenceutils ` to support ` long ` as well
regenerate client with updated copyright year ( # 4382 )
added expected path type validation in WindowsPathParser to ensure only valid paths are used with absolute and UNC paths
removed InetSocketAddress parameters from MulticastSocket instantiation in Promiscuous . java to simplify the code and avoid unnecessary object creation
removed redundant writer . close ( ) calls and restructured the writer variable in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
clone nBits before returning it to ensure the original nBits instance is not modified
changed access modifier of ` deriveCollectorName ` method from private to protected and added custom test cases for the ` TestCollector ` class to enhance accessibility and ensure that the collector names are correctly formatted and tested
refactor type hinting logic in MappingMongoConverter to improve clarity and maintainability of type handling logic
added performance tracking for proxy factory creation to enhance performance tracking capabilities for better performance analysis
added @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings and improve code clarity
added exception details to exception handling for port unbinding issues to improve error reporting by including the underlying exception cause
refactor reinflateWidgetsIfNecessary ( ) method to the Workspace class for better organization to improve widget management by encapsulating widget inflation logic within the Workspace context
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to ensure functionality of the right - click deletion feature in the file dialog interface
updated the Display update method to use a false parameter and added message processing logic in LwjglAbstractDisplay . java to ensure proper handling of messages when the display is updated and improve message processing logic
added image upload test and updated method signature for instructorstudentlistpage .
added methods to handle ignored tests based on the " onlyrun " system property to improve test flexibility by allowing certain tests to be ignored due to specific methods
removed the ' pointer ' parameter from the fling method in ScrollPane . java to simplify the method signature and improve usability
added null check for pageable in QueryDslJpaRepository and created a corresponding test in QueryDslJpaRepositoryTests to ensure functionality works correctly when pageable is null
added a method to compute memory size with a fraction parameter and corresponding tests to ensure the fraction of memory is within the specified range to prevent runtime errors
on behalf of emil ivov , do n ' t wait for connection factory to be close . also fix some timing issue .
updated the implementation of the SnowballAnalyzer class to improve text analysis accuracy for better text analysis
updated the handling of the previous index in StreamingAggTemplate . java to improve clarity and functionality of batch processing
[ gr - 37684 ] improve error message for null check for plugins .
added a default stream method to the StreamSupplierComponent class to enhance performance by computing defaultIntensity during streaming operations
updated logging messages to clarify the state of the watched file before logging errors to improve debugging output and ensure proper handling of file movement events
changed access modifiers from private to public for multiple classes and methods in InjectorProxy and related classes to enhance accessibility and facilitate easier testing and subclassing
remove close method call from stream processing to improve resource management and avoid potential memory leaks
added tests for parsing and deparsing SQL statements in ShowStatementTest and CreateTableTest classes to ensure proper handling of SQL syntax and improve test coverage for new functionality
replace returning ` null ` with ` ImmutableList . of ( ) ` in ` AppleTest . java ` to ensure proper handling of possible null values
updated the CruiseControl data structure in the NamedSetTest . java file to ensure comprehensive testing of Cruise control functionality
updated WebSocket connection handling logic and improved logging for connection states to enhance stability and maintainability of the WebSocket connection process
removed instances of ` setAttribute ` for authentication and target URL keys from ` httpRequest ` to ensure proper cleanup of session attributes before processing
hbase - 25825 testregionreplicareplicareplicationendpoint fails due to table creation failure ( stephen yuan jiang )
added PMS configuration and configuration settings in FormatRecognitionTest . java to ensure proper integration with PMS for testing purposes
fix create oval data disk template trigger transition ( # 4695 )
updated PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 and SpringBootTest annotations to enhance test structure and compatibility with JUnit4 features
added @ Override annotations to CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding and improve code readability
updated SQL statements to reference " metricVal1 " instead of " metricVal2 " for consistency to ensure uniformity in data representation within the database
added a check to compare deleted document counts and segment document count in SegmentReader . java to ensure consistency and prevent errors when document count differs from deleted document count
add log method in siplogger for easy debugging
the filamentfactory class now have a shorter length for staves w / no starting barline
set handleFileUploads to true in VertxPlatformHttpServerConfiguration and its test to enable file upload handling in the test environment
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to ensure that the filter correctly restricts access rights based on defined methods
remove unnecessary static field declaration from hotspotobjectconstantimpl
updated method names from ` add ` to ` addFrequency ` in multiple classes to improve clarity and consistency in handling spell suggestion frequency
fileio : add file . withwatermark ( now ) for good watermark recognition
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 431 . make cte field final .
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData for improved result handling functionality
updated library command to include root directory information to improve visibility and accessibility of the library based on the project ' s root path
updated the slider positioning in RailButtonConfig to correct the positioning of the component in the panel
fixed an issue with drawOverlay and drawEncloser , and change the execution method of the saveToSlot method to improve rendering accuracy and enhance error handling during slot saving
added expressionLanguageSupported ( true ) to KerberosProperties . java to enable support for expression language in the Kerberos configuration
removed unnecessary checks for remoteMountPointComponent and simplified its usage in the ThirdPersonRemoteClientSystem to streamline code and improve readability by reducing unnecessary checks
updated setupViews method to accept ScrimView instead of Launcher and Workspace classes to enhance UI transitions by integrating additional UI components
[ flink - 27373 ] [ state ] add backend changelog option for periodic materialization
add value to xml attribute , useful for tag of multiple type of protocol parameter
add a unit test for the chunked request that use the http binding .
added isBumped property and related parsing logic in CheckRouterAnswer . java to enable tracking of whether the router is pinned or not
add content - type header for www - form - urlencoded in switchtofpostinterceptor and searchrequestunittest
fix checkstyle issue in client / embeddedclientconnector . java ( # 772 )
replace SQLFeatureNotSupportedException with a warning log statement in PhoenixResultSet . java to improve error handling and provide better debugging information
added initialization of the AndroidNet instance to ensure consistent object usage across the application
[ pinot - 3578 ] fix the bug in livestativedatatormanager ( # 3579 )
removed the third parameter from the getDepositAddresses method calls for Bitcoin and ADA to simplify the method calls and reduce unnecessary complexity
hbase - 25837 tablemapreduceutil # inittablemap ( ) remove unused import ( # 3238 )
fix : back button be n ' t always enable in xml format when inflation fail
refactor PushbackInputStream class implementation to improve performance and maintainability of input stream handling
make loweringphase in a schedule to reduce cpu overhead
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to accurately reflect the synchronization failure state of the folder
updated Makefiles processing logic to include a newline character and parser for better line endings to improve parsing accuracy for better file input formatting
updated the import statement for MultiFields and modified the conditional check for deleted documents to improve code clarity and ensure proper handling of null values
updated refresh handling in SimpleBatchNode to use RF _ TRANSFORM to ensure correct refresh behavior for updated batch processing
[ gr - 30562 ] make stack overflow check more resilient to security issue .
fix ( lwjglwindow ) : update lwjglwindow size callback to support framebuffer size change
updated translation calculations in LauncherAppTransitionManagerImpl to use mRecentsTransX instead of translationX to improve visual transition consistency by using correct translation origin
updated ` LiteralNode ` class to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` and modified the static methods accordingly to enhance type safety and functionality by accommodating null values
added file length management methods in CompoundFileWriter , FSDirectory , and IndexOutput classes to enable dynamic file management by setting the length of the output file
updated AndroidNdkScriptGenerator and AntScriptGenerator to include " memcpy _ wrap . c " and modified test classes in LwjglDebugStarter to enhance functionality and improve test coverage for memory wrapping functionality
camel - 16068 - camel - aws2 - s3 : improve the configuration and usage of the source bucket / key object
added a new role check in RuleBasedAuthorizationPlugin and refactored test cases in TestRuleBasedAuthorizationPlugin to enhance authorization handling and improve test coverage for new request types
updated ZookeeperClientServerRegisterRepository to improve data handling and event type management to enhance robustness and simplify the handling of node registration and event management
renamed methods and variables related to deep stubs for clarity and consistency to improve code readability and maintainability by using a more descriptive method name
modified the handling of empty call values in the Runtime class to ensure that a default byte string is returned when the call value is empty
fix the log message ` ` date can not be parse ' ' ( # 2959 )
updated the ` mapPBEAlgorithmToOID ` method to return the algorithm ' s OID instead of a null string to improve error handling and ensure consistent use of the algorithm
tmi - tiff : now correctly detect if a valid offset can not be parse .
added validation for invalid job parameters in CommandLineJobRunner to ensure proper error messaging when invalid parameters are provided
updated assertions in SmtpTests and MailTests to expect a space instead of carriage return to ensure correct formatting of messages in tests
updated case statements in ExtendedConnectionDataSourceProxy . java for consistency to enhance readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence ID management to improve thread safety and reduce contention on sequence ID updates
added a new file ` Test . java ` containing a class ` sum ` that calculates a value by itself to provide a utility for summing values efficiently while maintaining functionality
updated configuration minSdk and maxSdk configurations in ` ShadowWifiManagerTest . java ` and ` WifiUsabilityStatsEntryBuilder . java ` to enforce compatibility with newer Android versions and improve data structure
added a new Java class named Solution to implement a solution for sorting integer arrays to implement sorting functionality based on specified criteria
fix race condition during cf destroy operation lead to concurrentmodificationexception
add orientation change check before recreate the taskbar .
refactor SyncFutureCache class implementation to improve performance and maintainability of the cache management system
updated the default DUBBO protocol version from 2.0 . 1 to 2.0 . 2 to reflect the latest version release and ensure compatibility
fix false positive with string ’ s tostring ( ) method
[ fix # 358 ] add test for ellipse nosecone drag ( # 358 )
use target _ max _ type _ shard _ size a default for the hollowproducer so it can vary
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to ensure compatibility with new configuration options
doc : fix typo in compilationtask java doc
updated database parameter handling to ensure correct location context is displayed in test mode to improve accuracy of database parameters and ensure compatibility with Hive configuration
added a method to clear the database change log table in the AbstractJdbcDatabase class to ensure proper cleanup of the database change log for accurate database operations
added version handling and updated path handling in RestClient and CallPath classes to support dynamic versioning based on version and improve null safety in path comparisons
phoenix - 2858 ensure phoenix driver be close before shut down ( jacky woo )
danielwagnerhall : deprecate touchcontroller . getlanguage ( ) and use touchcontroller . getregion ( ) instead .
added test methods and modified visibility settings for UI components in multiple activity classes to improve test structure and ensure proper visibility management for UI components
[ gr - 28058 ] do n ' t replace deoptimization stage when in devmode .
added a check for length of 2 and modified the return logic in StringHelper to handle trailing and end - of - quotes more robustly
refactor ` JpaQueryCreator ` to use a more explicit type handling and add a new test for handling " NOT _ CONTAINING " to improve code clarity and ensure proper functionality of the functionality
added authentication duration check and conditional push branch ID assignment in sipSecurityManager . java to enhance security by limiting access to sensitive data based on authentication duration
added a dispatch method call to the P25MessageFramer class to enhance message processing capabilities
added a null check for the client handlers in WebSocketImpl and a test for clearing client handlers on end to ensure proper handling of socket closure and verify that the handlers are properly set when the socket is closed
( scott phillips ) add test and fix test failure .
replaced widget padding dimensions retrieval with a method call to get padding to streamline padding initialization and ensure consistency across widget dimensions
added methods to hide all apps in Taskbar UI components to improve user experience by managing visibility appropriately
removed synchronization from the launch method and replaced sleep with join method to improve thread safety during launch execution
updated the calculation of point coordinates by subtracting zoom level directly from the canvas ' s position to ensure accurate positioning relative to the canvas ' s position
updated upload notification handling in UploadService to use startForeground method to improve user feedback during upload operations
fixed bug 124994 - excessivepubliccount no long report false positive for static final class .
hbase - 25836 increase retries in testthrifthbaseservicehandler ( # 3282 )
change log level from info to debug for Half offset message to reduce verbosity and improve performance during transaction transactions
fix the signing key resource not find exception ( # 2769 )
added a method to retrieve marketsummaries and created a new BittrexTickersResponse class for better handling of tickers to enable users to retrieve marketsummaries easily from the Bittrex API
enum constant can now be null ( e . g . entityentry ) .
fix bz 65363 . avoid illegalaccessexception when use activemq . core . wscontainer
updated the character array in FileUtils . java to handle new Unicode characters to ensure accurate formatting of special characters for user input
added support for stylesheet management in ResourceService and ResourceHandler classes to enhance the resource handling capabilities and improve flexibility in stylesheet management
added a clearIndex ( ) method to TestFiltering . java to ensure the index is cleared before processing new data
replaced ` ObjectParameterStrategy ` with ` PointerParameterStrategy ` in ` X86MethodGenerator . java ` to ensure compatibility with pointer parameter handling
updated database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with CockroachDB and improve sequence creation logic
revised conditional check for the name of the object stream class to simplify the logic for identifying string types
replaced UnsatisfiedLinkError with a new SymbolNotFoundError class to improve error handling for missing symbols
updated the logic for handlingPseudoFields in BinaryResponseWriter to conditionally create a SolrDocument based on returnFields to improve field handling flexibility based on user - defined space
added handling for PING and PONG WebSocket states in WebSocketImplBase and created a test for the ping handler in WebSocketTest to improve the stability and reliability of WebSocket connections and ensure proper handling of ping responses
updated the regex pattern for non - IDENT escape characters in the RegExpScanner class to ensure proper handling of special characters in regular expressions
refactor DnsResolverProvider to utilize a common DnsCache instance and update related test cases to enhance cache handling flexibility and improve test coverage for server selection
added a conditional annotation to check if the messaging tracing class is available to ensure tracing functionality is only activated if the messaging tracing class is available in the classpath
mondrian : fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 354 .
refactored import statements across multiple Java files for better organization to improve code clarity and maintainability by organizing imports
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 50837
set the visibility of the TouchCharInput to GONE to improve user interface responsiveness
add a null check before comparing the ID in the conditional statement to avoid potential NullPointerExceptions when the current context is null
updated JSObjectLinker to handle different member and slot settings more robustly to improve the functionality of the JSObject linker by correctly setting the slot based on the index
modified the ` DefaultUniqueTicketIdGenerator ` class to allow customizable the ` suffix ` parameter to enhance flexibility and allow for customizable ticket suffix behavior
added a @ Deprecated annotation to SecurityConfig . java to mark the class as outdated for future removal or replacement
deprecated multiple utility classes with the ` forRemoval ` parameter in multiple files to indicate that these classes should no longer be used and may be removed in future development
remove jogl debug adapter because it be not use
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and test classes for improved string representation to enhance readability and debugging capabilities by providing clearer string representations
added PendingIntent functionality to FileDownloader and FileUploader classes to enable updating the pending intent for notifications
refactor nextOrd method to use a private method for setting the ordinal position to improve code readability and maintainability by encapsulating the logic
updated DateTimeFormatter . java for better time handling to improve accuracy of time representation in the application
removed unnecessary try - catch block for class loading in desktopProperties to streamline code for better readability and maintainability
added null and empty checks for administrator credentials in KerberosOperationHandler to ensure robust handling of null or empty credentials to prevent runtime errors
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and updated width calculation logic for tablet and multiple panels to ensure consistent scaling across different device configurations
add call to gl . beginrender ( ) and gl . endrender ( ) when in a sketch mode
modified the Hashing class to improve hash function efficiency to enhance performance and reduce memory usage during hashing operations
fix file sender factory to actually accept folder name
updated the ` addToListIfNeeded ` method to include a content description integer parameter for drawable resources to enhance the functionality by providing additional context for user information items
set JavaType . Method newType to null and initialize it to null to ensure proper initialization of the type object when it is not null
updated the ACTIVITY _ START _ DELAY value from 500 to 800 to improve responsiveness during application execution
added a constant WEBAPP _ HOME to SolrJettyTestBase and updated the JettyWebappTest to use it to improve maintainability by centralizing the web application path configuration
fix a bug in motorselectionpanel that cause it to happen when a motor have be select .
added import for BufferUtil and called BufferUtil . clearToFill ( buffer ) to ensure buffer is cleared before reuse
fix notification rule : trigger create via rest api for alarm
ambari - 21155 . change authorization prefix to authentication in ldap group configuration . ( mahadev )
fix amq - 4796 : the durableontransient setting should delete the exchange queue a it do n ' t affect exchange state
[ hotfix ] [ test ] fix flaky bulkslotproviderimpltest
avoid block on connection error . cause of connection fail rather than block on shutdown .
refactor CompositeHandlerAdapter to improve code readability to enhance maintainability and facilitate future development
updated Quartz2Adapter . java file to enhance readability and maintainability of the code
sulong : swallow illegalstateexception thrown to lookup . execute ( ) .
update Spring Security schema references from 6.2 to 6.3 to ensure compatibility with Spring Security 6.3 features and updates
updated method parameters in ` ConfigMappedNameResolverFactory ` to use ` Args ` instead of ` Helper ` and introduced a new synchronization context in ` DiscoveryClientNameResolver ` to enhance method functionality and ensure thread - safety during concurrent operations
added conditional handling for non - empty annotations and introduced method to determine earlier position to ensure proper positioning of annotations while maintaining compatibility with existing code
added a new import statement for " com . sun . naming . internal . " to enable access to internal package names in the application
changed the default value of strict from false to true in StaxEventItemReader to enable strict event processing by default
lucene - 5877 : offlinesorter can hit tail tail ( # 865 )
refactor ActionResetingPool class for improved resource management to enhance the efficiency of action resetting processes
added a check for the XY color mode in the LightStateConverter to ensure proper handling of color modes when the XY is not present
refactor CellLayout to use targetCell for folder creation radius and reorder radius calculations to improve code clarity and functionality by separating folder creation radius logic into a single method
replaced the direct call to ` activity . showLoadingDialog ( ) ` with a call through ` callerActivity . showLoadingDialog ( ) ` in multiple fragments to ensure the loading dialog is properly displayed across different activities
bugfix # 20707 , do n ' t try to load xml file if it be n ' t there
updated test to use ` Locale . getDefault ( ) ` for case - insensitive matching of field names to ensure consistent behavior across different locales in the test cases
fix listener not be set in test result for jdk11
added a new ` loadWithNewGlobal ` method and modified related method handles in the ` Global ` class to introduce functionality for loading a new global function context
added methods to convert JSON string representation to StarTreeIndexSpec to enable easier conversion between JSON strings and improve test coverage
added an import for ObjectPostProcessorConfiguration in multiple security configuration classes to integrate object post processing functionality within the security framework
[ fix ] escape single quote in filehandle . getpath ( )
[ drools - 3392 ] fix nullpointerexception in in ( # 3393 )
added import for FieldCache and called commit method to ensure there ' s more than one segment to prevent FC insanity during testing
add test case for ` ` messageevent ' ' base on subprocess and outer scope
refactor method signatures and add support for static calls in the program manager to improve method resolution and enhance functionality for static calls
http : / / issues . apache . org / jira / browse / amq - 4568 - add option to set hash bucket for policy entry
added slot ID constants and updated method signatures for slot handling in Secmod . java to improve clarity and functionality of slot handling in the NSS Internal Module
added alignment parameter and modified dialog group setting methods in Layout . java and GdxRenderer . java to enhance layout management by allowing customizable dialog alignment options
[ hotfix ] [ test ] disable unalignedcheckpointitcase for now
6738524 : jdk13services allow read access to system property from untrusted code
modified keywordToReference to check if the keyword is not already in a reference before adding it to avoid duplicates when the keyword is already in the reference
camel - 6270 fixed the indexoutofboundsexception in multicast eip with thanks to dharsh
remove dead code ( dead code )
escape and escape colons in flavor statsd line ( # 644 )
add udp port to jmx connection . should help avoid incompatible client broadcast
rename ` OperatorMulticast ` to ` OperationMulticast ` and update multicast references accordingly to clarify the purpose and related functionality related to multicast operations
increase send timeout to reduce test flakiness
encapsulate result handling logic within a try - finally block to ensure proper resource management and prevent potential deadlocks
added destroy method to clear the cached event registry to ensure proper cleanup of the event registry when the session is destroyed
simonstewart : make the test pass on all platform . use jwt _ token to open the login page . also fix a small bug in test .
[ pytorch ] add test case for map - of - dimension inference
added task stack listener to manage task states in RecentsView to improve handling of animation state changes during activity lifecycle
pdfbox - 2401 : improve the performance of the checkdatepattern method . a suggest by mike kaplinskiy ( mik )
camel - 4328 fixed the cxfendpoint issue of camel - cxf
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
add log to debug playtime crash and band aid fix for release build .
added conditional bailout handling for exceptions in C1XCompilation to improve error handling by differentiating between exceptions during compilation
updated signup and passwd variables to null and modified assertions in tests to handle null values more effectively and improve test clarity
[ hotfix ] [ runtime ] rename ` previousexecutiongraphallocations ` to ` getreservedallocations `
( chore ) camel - time : avoid use deprecated simpledateformat
[ geotiff ] geotiffreader / geosolutions / geotiffreader / geotiffreader / geotiffreader / geotiffreader / geotiffreader / geotiffreader / geotiffreader / geotiffreader / test
[ gr - 30613 ] return a more useful error message from llvm when a function start fail .
replaced ` toString ( ) ` method with ` toByteArray ( ) ` for output to ensure proper string conversion for consistent data handling
wait for connection state to be connect before clear the cache be fully connect to avoid race condition in other test .
refactor ArrayTypeHandler to improve null handling logic to enhance robustness by ensuring null safety when handling array operations
remove RegexpTunnel class and refactor prefix retrieval logic to improve regexp handling efficiency and reduce code duplication
updated the application selection method to use the Application class instead of null to ensure correct application class is used when picking the application configuration
[ bz - 1155852 ] avoid npe on mutable global rule
replaced Preconditions with TransactionUtil for validation asset name and description to improve validation logic and provide better error handling for invalid inputs
fix copypastextfield in web ( need for web )
[ lgtwebos ] improved translation for device detail ( # 12958 )
replaced node set methods with addAll method for seed , active , and trust nodes to improve the clarity and functionality of node configuration
updated assertions in BaseTokenStreamTestCase to include descriptive output to improve debugging information by providing clearer context on assertion failures
log4j2 - 1258 improve the granularity of interval for interval increment
added methods to perform item click and find index by including text in ShadowAdapterView and ShadowListView to enhance user interaction by allowing direct item navigation through text input
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
graphdecoder - add after method scope to avoid unnecessary call to original graph
refactor session attribute handling in HttpSessionDestroyedEvent . java and add unit tests in HttpSessionDestroyedEventTests . java to improve attribute management and ensure correct security context management
added a test to verify the service name change in Zipkin using a manually provided name to ensure that the tracer correctly reflects custom service names in span reporting for improved observability
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory for improved logging and functionality to enhance debugging capabilities and ensure correct spooling behavior for jar processing
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` throughout multiple files to improve clarity and consistency in class naming
test fix : increase timeout on try - lock
added DEFAULT _ CACHE _ CAPACITY constant and updated return statements in ConfluentSchemaRegistryDeserializerProvider to support custom cache capacity for improved performance
rename JCheckBox remind to checkAtStartup in UpdateInfoDialog . java to improve clarity and user interface by using a more descriptive label
added new method ` isMethod ` for configuration parameters and refactored the ` NodeFactory ` instantiation to enhance configurability and maintainability of node configuration
hhh - 15071 - fix infinite loop in cascadingactions # istransient
added property handling for proto properties and updated invocation logic in ScriptObject . java to improve flexibility in accessing and setting prototype properties
changed the default read mode from heap to mmap and modified the initialization of ImmutableSegmentImpl to improve performance by using mmap instead of heap for segment loading
added support for byte type in ArrayTemplateBuilder to enable proper handling of byte arrays in the application
added Hipchat service provider configuration and a new Hipchat class to enhance SAML service provider capabilities for better integration
replaced ` List < URL > ` with ` Set < URL > ` for ` commandRegistryUrls ` to improve performance by avoiding duplicate URL entries
enhanced logging in ConstraintSecurityHandler to include the current context and added debug logging to improve debugging clarity and provide more informative output for uncovered HTTP methods
modified the ` login ` method in ` SvnRepositoryConnector ` and ` SftpRepositoryConnector ` classes to correctly handle user login and improve logging functionality
camel - 4440 : ensure that only transaction manager be create for a jms session in the spring context
fix the npe in vmwareresource when vmware be not up to date with new host name
updated Timers class to improve performance to enhance application efficiency by reducing latency
updated import statements and modified the output stream parameter from OVERWRITE _ EXISTING to APPEND _ TO _ ZIP to ensure compatibility with the new zip output format in the application
remove deprecate uax29urlesetokenizer constructor , a it ' s no longer use
removed unnecessary overrides and simplified assertions in ScriptObject class to streamline code and improve readability by using more descriptive variable names
refactor EventBusMetrics to improve event handling logic to enhance performance and maintainability of event bus monitoring
[ ds - 3952 ] check for null eperson before use it to determine supported locale
added InitializingBean implementation and modified JaversTransactionalDecorator class to enhance initialization handling and ensure schema cleanup after properties are set
removed null check for pgTypeName before adding it to _ pgNameToSQLType to streamline the code by eliminating unnecessary null checks
added server configuration and server settings for multiple handlers in ScopedHandlerTest . java to enhance test coverage for concurrent server behavior
fix calltimeoutexception bug ; call timeouts should not increment retry count and should not be delegate to caller .
[ type : fix ] fix nullpointerexception in restloginprocessingfilter ( # 4104 )
updated permission check in CommandMap to allow wildcard permission instead of empty string to enhance flexibility in permission handling for specific account permissions
rename encoding variable to sourceCharset and implement setEncoding method in AbstractCompiler and ICompiler classes to improve clarity and enforce the use of the charset variable instead of the default one
changed the data type of postLogin from byte array to String in HostBean and TerminalBridge classes to facilitate more flexible handling of post login data format
remove duplicate simulation and base mixup logic from generaloptimizer dialog
camel - 17684 : camel - jbang - add a context reload option to reload route .
updated logging configuration in CommonTestUtils . java to use different logger configurations to enhance logging consistency and flexibility in log4j interactions
refactor PrologSizeSanityCheck class for better clarity to improve maintainability and readability of the code
refactor NearbyListFragment for improved readability to enhance maintainability and reduce technical debt
added a check for non - marking input streams in RequestBody and created a test for its content type to ensure that the request body behaves correctly when marked as supported
[ dubbo - 6342 ] fix ` ` no port specify ' ' check ( # 6343 )
update movementdebugCommands to use default value from child component ( # 4465 )
updated the ` random ` method to include a half - length total weight parameter and modified related logic to enhance the randomness algorithm to accommodate a larger weights array size
updated GsonParser to directly cast the cache string to a single object and modified test method names for clarity to improve code readability and ensure consistency in timestamp handling
updated the parameter documentation for sorting by clauses in ApacheHttpClientMediaWikiApi . java to clarify the purpose of the sorting property and improve code readability
replaced multiple calls to ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in multiple classes to improve code clarity and maintain consistent transaction handling
[ iotdb - 6061 ] pipe : fix deadlock in case of deadlock in pipetaskcoordinator thread ( # 6073 )
added conditional logic to determine the version of the dependency jar based on the " usePreinstrumentedJars " system property to improve flexibility in dependency resolution based on user - defined preference
changed the condition from " isSilent " to " isSilent " in ExecDriver . java to ensure consistent behavior when silent logging is enabled
added checks for default and required fields in IndexSchema . java and a corresponding test case in BadIndexSchemaTest . java to ensure that unsupported attributes are handled correctly and to prevent runtime errors
rr repair : do n ' t randomly repair read if random replication fails
replaced ImmutableSortedSet with Iterables for adding system include roots and added a test for it to improve code readability and ensure correct behavior when including directories
refactor ` AdaptableX509CertSelector ` to initialize start and end dates without default values and introduce flags for sensitivity handling to enhance clarity and control over sensitive key identifiers and serial numbers
log4j2 - 1343 use new nosqlappender api to parse the buffer size
added @ Deprecated annotation to GuiScreenEvent . java to indicate that the class is no longer recommended for removal in 1.16
added methods to manage adding and removing categories in the CategoryEditSearchRecyclerViewAdapter to improve category management functionality for better user experience
# 1335 - enh : add cache factory to support entity cache ( not include collection - id )
added a loop to set mass , CGOverriddenBy , and CDOverriddenBy properties using an iterator to improve the handling of overridden properties for rocket components
replaced the ` ReusableCompiler ` instance with a ` ReusableCompiler ` instance and added resource cleanup in the ` synchronizedTask ` method to improve thread safety and resource management during compilation operations
refactor Task implementation to use a Supplier for improved readability and safety to enhance code maintainability and ensure proper handling of tasks without exceptions
let wanreplicationserviceimpl thread safe by synchronize access to the wrapped executor
modified Partition . java and DDLSemanticAnalyzer . java to handle null pointer exceptions and set user name in Driver instantiation to improve error handling and ensure proper user context initialization
refactor code to remove unnecessary complexity in the LocalServiceRegistryClientImpl and RemoteServiceRegistry classes to improve code readability and maintainability
added unit tests for file deletion functionality to ensure correct behavior of file operations with null or empty files
removed exception handling around socket closure in ServerSocketAdaptor to simplify resource management and improve code clarity
update SSL logger class name check from a hardcoded class name to a dynamic class name to improve clarity and maintainability of the SSL logger implementation
replace currentWorkingDirectoryList clear / add functionality with a dedicated method to add a working directory to improve code clarity and separation of concerns in the handling of working directories
added a null check in ItemInfo and set insets in Workspace to ensure proper handling of null references and update insets
changed access modifier of the static String variable from public to private to restrict access and encapsulate the string value within the class
updated the Java - Durl configuration in SimplePostTool . java to correct the endpoint for processing JSON jar files
apps - 2373 : do n ' t allow symbolic toggle if it ' s not a symbolic toggle
refactor client container initialization to ensure proper shutdown handling to improve stability and error handling during the lifecycle of the client container
updated conditional check for type to use a logical OR operator to enhance readability and maintainability of the code
ensure we clean the webapplicationcontext after each test
added a new method to retrieve a search string and updated DLNAResource initialization to enhance user experience by allowing dynamic search functionality based on query parameters
remove visibility setting for neutralButton in SetupEncryptionDialogFragment to ensure neutralButton is displayed without hiding it
# 879 itemdao do n ' t count distinct item in the archive . ( # 880 )
updated SQL syntax for creating tables in DDLTask . java to ensure proper handling of SQL syntax for table names
refactor CheckTokenEndpoint to handle OAuth2 exceptions more gracefully to improve error handling and logging for better debugging
refactor multiple Java classes to enhance code organization and maintainability to streamline the codebase for better maintainability
updated the IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use a more generic ID zone API to enhance test accuracy and ensure correct identity zone identification based on the provided subdomain
change tooltip delay from 20000 to 10000 in multiple classes to improve user experience by providing more responsive feedback during variable substitution
added support for running single test methods with Surefire 2.22 . 0 and JUnit 5 to enhance testing capabilities with accurate version reporting
change exception handling from HumanReadableException to RuntimeException in WorkerShellStep . java to improve error handling specificity and provide more informative error messages
[ flink - 21954 ] [ table ] add flink annotation annotation to indicate they should be @ experimental
[ hotfix ] fix typo in streamcepstrumsource . java
add a check to ensure index does not exceed the size of items to prevent index out of bounds errors
updated type assertions in CloneHelperTest from OrExpression to Parenthesis to ensure type safety in expression evaluation
updated the DebugPaste class to add confirmation and required type information to enhance user experience by providing confirmation for users
[ type : bug ] fix log ` ` no route find ' ' exception
ticket # 4810 : make sure the ggb focus work again
updated imports and class definitions in GoBinaryDescription . java and related classes to reflect new structure to improve maintainability and consistency in the codebase
added conditional retrieval of the application environment configuration to enhance configuration management by dynamically retrieving the logback configuration
in progress - batch - 825 : replace retrylistenersupport with retrylistener in test
restore precision when write counter to index ( fixes # 498 )
changed the email and author variables to final in the Contribution class to enforce immutability and prevent accidental modification of the contributor data
[ log4j2 - 1125 ] fix formatting of duration in junitoutputstream .
refactor elements initialization logic to handle ClassCastException to ensure proper instantiation of LinkedList when the class is not a LinkedList
improve error message for missing input
* fixed typo in testmultireader target , which fail often in eclipse
updated client retrieval logic to handle null currentProfile case to improve robustness by avoiding potential null pointer exceptions during client logout
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
added BigInteger constants and imports for various keystores in KeyStoreManager . java to enhance security by supporting additional keystores in the application
updated IndexBuffer retrieval methods in GImpactCollisionShape and MeshCollisionShape classes to improve efficiency by using getIndicesAsList ( ) method instead of getIndexBuffer ( )
set engine version of process definition when it ' s already present ( # 1358 )
updated property names for resource loader properties in SpecificCompiler . java to improve clarity and consistency in naming conventions
updated thread verification logic and introduced new methods in VMThreads and CEntryPointSnippets to improve thread management and ensure proper handling of attachment threads
modified GenericUDFMapValues to handle null maps gracefully in GenericUDFMapValues . java and added a corresponding test class TestGenericUDFMapValues . java to enhance robustness by ensuring proper handling of null maps and verify functionality through unit testing
corrected the casing of the method name from " interceptors " to " handlerInterceptors . " to ensure consistency with naming conventions for handler interceptors
added oil generation and spouts configuration properties in BCEnergyConfig . java and OilGenerator . java to allow configurable control over oil generation and spouts generation
improve import context clean - me directory ( # 2148 )
add a translation key to the message receive in memoryrealm . readxml .
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and reduce clutter
replaced multiple static final constants with a single constant in ZipConstants64 . java to standardize constant names for improved readability and maintainability
refactor the newFileSystem method to enhance file existence checks and error handling to improve robustness and clarity of file existence checks in the filesystem implementation
[ netbeans - 4294 ] fix ifcontroller condition panel width
added an @ Override annotation on the connection initialization to ensure proper connection handling in the test case
added Gson @ SerializedName annotations for various fields in ServiceOsSpecific . java to enable proper serialization and deserialization of JSON data for the service
fix : remove database entry only if the book deletion be successful
refactor multiple Java files to improve code structure and organization to enhance maintainability and readability of the codebase
fix off by one error ( findbugs report )
fixed admin console context not be clean up upon shutdown .
refactor WebSocket handling by replacing the unregisterHandlers ( ) method with a direct assignment for binaryConsumer and textConsumer to improve code clarity and encapsulation while maintaining thread safety
added configuration properties for device ID transformation method , enable ID table , and log file path in IoTDBDescriptor . java to ensure proper configuration for device management operations
solr - 11343 : increase number of documents in test and add a new delayedsearchcomponent class .
updated the condition for mockTsp to check if the access error is not null to ensure the test correctly verifies the validity of the access error
transaction : fix a bug in save transaction . hashforwitness signature
updated the expression string to include fieldType to support additional schema type handling in the index schema
updated the Completer logic to check for a null completer instance to ensure that a null completer is only used when it is not null
fixed checkstyle issue due to commit 0b6e0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
[ iotdb - 5663 ] change the data type of sourcepeerid from string to int ( # 6042 )
modified file handling logic in FtpHelper . java to support multiple files to enhance file management and error handling during the upload process
added alpha transparency for the reply button in TweetFragment . java to enhance the visual appearance of the reply button
camel - accesslog fixed unit test which randomly fail on slow ci server .
test : use tmp directory for delete test file for marycachetest
remove null check in settingimpl . subscribers , make the internal implementation a not null
added a check for a non - null marshaller in AbstractSamlObjectBuilder and removed the initialization logic in AbstractSaml10ResponseView to ensure proper error handling when the marshaller is not available for object creation
replace printStackTrace ( ) method with LogUtil . warn ( ) in DataBrowser . java to improve error logging by using a more informative utility method
added a check for the existence of the static directory in dev mode and modified the AssetsController to handle this case to ensure that static directory paths are correctly handled when the directory is in a production environment
[ hotfix ] [ checkpointing ] fix rocksdbkeyedstatebackend to use writeoptions
updated the default format constant from " value - tag - index " to " value - index " to ensure consistent formatting for better text representation
fix dijkstrabi hint and use request hint
use native bitcoin to reduce flakiness in the system
rename duclsSandboxtest to sandboxtest because it be not a test class .
( chore ) camel - cxf : avoid use logger for warn message
make method public so it can be use by testng
updated SQL query to specify spacing for better readability to improve clarity and maintainability of the query
add well error message for missing file location in profile activation
refactor Style class to improve code structure to enhance maintainability and readability of the code
added zoom handling functionality to ShareActivity to enhance user interaction by allowing users to zoom out when exiting the activity
added logic to ignore deprecated fields in Json . java to improve handling of deprecated fields during JSON processing
added animation listeners for sending layout visibility and animations in LauncherFragment to enhance user experience by improving visual feedback during floating compose animations
[ hotfix ] fix checkstyle violation in yarn module
hive - 26426 : add progressable parameter to fail compression task ( krisztian kasa , review by stamatis zampetakis )
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove contribution from the contribution list and update panel order and color
refactored HyervisorTemplateAdapter to HypervisorTemplateAdapter and removed unnecessary imports to improve code clarity and maintainability by eliminating redundancy
added a default value for dPath if it is empty to ensure the application uses the user ' s current directory as a fallback
defaultaudiosink : use a minimum value of 48000 when no value be provide
log4j2 - 1343 bugfix : do n ' t filter mapmessage with data that do n ' t match
rename VerificationInOrderWithCallsTest . java file to improve clarity and consistency in test naming
bugfix : quaternion # setfromaxis return wrong value for x , y , and z
corrected the spelling of the constant name from " colelction . delim " to " collection . delim " to ensure consistency and accuracy in naming conventions
[ curator - 425 ] add curator - api test to validate listener be connect
do n ' t duplicate type in documentation for ` ` interface ' '
added support for one - handed mode in RecentsAnimationDeviceState . java to enhance user experience by ensuring correct handling of one - handed mode
added onDetachedFromWindow method to manage running tasks in AppsCustomizePagedView to ensure proper cleanup of running tasks to prevent memory leaks
added dictionary resource handling to MorfologikAnalyzer and MorfologikFilter classes to enhance functionality by allowing dictionary resource management for improved customization
removed redundant count checks in ResultSetTest . java to streamline test code by eliminating unnecessary complexity
change the project message format from " debug " to an empty string " " to improve clarity of project initialization messages
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` and updated exception handling logic to improve clarity and consistency in handling lock timeouts and isolation levels
refactor tooltip text handling in ComponentTree and ComponentTreeRenderer classes to improve code clarity and maintainability by consolidating tooltip logic
increased the timeout duration in the await statement from 5 seconds to 10 seconds to allow more time for the zipkin server to become available before proceeding
added username and password checks to the DeviantartRipper class to enhance security by allowing optional credentials before proceeding with the login process
updated ` PackageUtils ` to use constant keys for Google package signature checks to improve code readability and maintainability by reducing hardcoded values
update to late solutionBusiness api change in importdirsolveallturtletest
add a method to notify window state changes in WWindowPeer . java to improve event handling for window state transitions and enhance logging
[ te ] email - display email description in data model ( # 4640 )
updated the return statement to use data . remove ( sel ) instead of data . remove ( sel ) to ensure data is properly updated before removal
refactor language retrieval logic in Locale . java and add error handling in LocaleTest . java to improve code clarity and ensure proper language handling for different locales
refactor ChangeLogParser usage and updateVisitor instantiation to use a factory method to improve code readability and maintainability by centralizing the creation logic
added a check to return early if screen pinning is active to improve performance by avoiding unnecessary processing when the screen pinning is active
added description for no chart data available in mmm Chart . java to enhance user experience by providing meaningful information when no data is available
added synchronization to the checkHeadWritten method across multiple classes to ensure thread safety when accessing shared resources
refactor chunk handling logic to improve clarity and functionality to enhance the readability and maintainability of the code
added HTTP header ` : scheme ` to the list of headers and updated corresponding test cases to ensure proper handling of HTTP headers and improve test coverage for header limits
fixed - rlocalcachedmap . setvalues ( ) and rlocalcachedmap . setentry ( ) method do n ' t cache the value in localcache mode . # 4769
camel - 14284 : fix potential nullpointerexception in jpaendpoint
allow jump speed to be set without fall .
added a condition to check if reparsedFunction is null alongside the existing syntax extensions check to ensure the function is only processed when reparsedFunction is not set
updated logger variable names and refactored logging functionality in BitstampPusherService . java to enhance code readability and maintain consistency in logging practices
added deprecated methods to retrieve old upload segment URIs in FileUploadDownloadClient . java to enhance code maintainability and signal that the old segment path should no longer be used
updated the method call to retrieve the tracking object using a filter parameter to ensure that the tracking object is fetched based on the specific filter criteria
added test to ensure that $ { in . headers } be set correctly .
added alpha bound check using Utilities . boundToRange for better opacity handling to ensure the alpha value is consistently constrained across the RecentsView component
updated the string replacement syntax in the import package attribute key from " version " to " version " to ensure correct formatting of import package attributes
refactor DataSyncConfiguration class for better clarity to improve maintainability and readability of the code
added import and initialization for JavaSnippetRepository in JavaLanguageServer . java to ensure the JavaSnippetRepository is properly initialized for further processing
added a loop to update sums with a loop based on target dimensions and numTimeBuckets to improve efficiency by avoiding unnecessary updates during multiple attempts
chromedriver : move to storage , we can use an index . html for the html page
camel - 8205 : camel - pgjdbc should use prepared statement when send to the pgjdbc . thanks to joerg kessler for the patch .
fix for tika - 635 : upgrade rome to 1.5 . 2
fix file transfer completion to handle header that have a space
modified Dialog class to enhance user interface loading experience to improve user experience and performance
simplified the constructor of EnhancedRuntimeException by removing unnecessary parameters to enhance code clarity and maintainability by reducing complexity
refactor SocketAppenderTest to use CountDownLatch for better synchronization to improve thread safety and error handling during event processing
camel - 14263 : camel - admin should not use eventadminendpointbuilderfactory a it already have eventadminendpointbuilderfactory
fix and document exception in bytearray . compare
added a method to disable input proxy and log warnings for invalid touch events in RecentsAnimationWrapper . java to improve touch event handling and prevent UI issues during input interactions
[ camel - 6770 ] re - enable camel - restlet test ( it do not pass locally )
remove unused parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify the method signature and improve code readability
move modulepathtest from test to test modulepath ( # 1769 )
java server : expose source directory in the configuration
replaced the menu item for opening web pages with a menu mute hashtags to improve user experience by managing hashtags menu functionality
updated method names from " nodeIsAncestorOfItself " to " nodeIsNotAncestorOfIt self " and modified assertions accordingly to clarify the purpose of the method and ensure accurate assertions in tests
fix an issue where worldeditplayer would try to seek from the end of the search if the y - coordinate be negative .
[ iotdb - 2598 ] [ iotdb - 2598 ] fix npe in insertnode ( # 5663 )
removed extraneous quotation marks from the end of a method to correct syntax and ensure proper compilation
[ flink - 30513 ] [ streaming ] remove mailboxexecutor from operator factory that do not implement mailboxexecutor
hbase - 26016 master should call fixtablerestate ( ) with a tablestate field ( # 3607 )
updated method reference syntax in GatewayMetricFilterTests . java for clarity to enhance code readability and maintainability
theories , parentrunner , and junit runner should inherit from parent , fix # 16
rename variable ` remoteItems ` to ` lastTimeData ` in the delete handler to improve clarity by accurately reflecting the data being deleted
adjusted calculation for allAppsCellWidthPx by modifying padding to ensure proper layout spacing for app display
[ hotfix ] fix code style in coreoptions
lucene - 6271 : use ' this . doc ( ) ' instead of ' doc ( ) ' in booleanscorer2 . ( # 627 )
added a call to ` writer . forceMerge ( 1 ) ` in the ` TestMultiPhraseEnum ` class to optimize the merging process for improved performance
modified the ` Session ` interface to implement ` java . io . Closeable ` and changed the return type of ` close ( ) ` from ` Connection ` to ` void ` to improve resource management and simplify the interface ' s method semantics
updated GetLocations . java file to improve functionality to enhance location retrieval efficiency for better user experience
do not print stack trace on schema validation error
replaced ` IOException ` handling with ` ignore ` in the ` Contents . java ` file to improve error handling by focusing on specific input exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android features and support libraries
fix bug in ruby flavor : support repeat in snippet
updated logging level from warning to debug in DerbyDatabase and added null checks for username and password in BaseLiquibaseTask to improve logging granularity and avoid null pointer exceptions
remove unused usecaching a no longer necessary
refactor CasGeoLocationConfiguration to use CasConfigurationProperties and Resource for city and country database reading to improve dependency management and simplify database access logic
update instructor result page ui test to use new helper view name
fix hbase - 25876 optimize the query with qualifier list for raw scan
removed the ' public ' access modifier from multiple method declarations in the ApprovalStore class to enforce encapsulation as these methods are not meant to be public
added a check to prevent multiple downloads from being cancelled to improve user experience by notifying when a download is completed
updated methods in TaskbarDragLayerController to use getAnyView for opening views to improve view management by ensuring only valid views are opened
updated project version from 1.0 . 11 to 1.0 . 13 and corrected a typo in the project version string to ensure compatibility with project features and correct minor typo
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve thread safety and reduce potential blocking issues
updated GsonBuilder class to improve JSON handling to enhance performance and maintainability of JSON processing
theorem proving : fix bug for handle virtual center
add -- espresso . home a fallback to get language homes ( graal - 490 )
doc : fix javadoc issue in java 8
[ ds - 3952 ] fix sonar warning : make instance field private
rename ` InvalidDocumentStoreApiUageException ` class to ` InvalidDocumentStoreApiUsageException ` to improve clarity and consistency in exception class naming
updated ` resultList . size ( ) ` initialization and modified ` result ` initialization in ` SolrIndexSearcher . java ` , ` TestJoin . java ` , and ` TestJoin . java ` to handle edge cases with a zero - length result set to improve error handling and ensure consistent handling of empty result sets
updated triggerMediaScan method to include the file parameter to ensure that the media scan is triggered on the correct file object
simplified the test result printing logic by removing conditional checks to enhance code readability and simplify the test execution flow
added new settings for custom G - code settings in MainWindow . java to enhance the user interface by displaying additional custom G - code values
camel - 7314 fixed the test error of additionaljaxbmappingproducerimpl
updated JsonElement class to improve data handling to enhance data processing efficiency and maintainability
added SolrTestCaseJ4 imports and exception handling logic in TestBadConfig . java to enhance test configuration reliability and manage exceptions more effectively
added a method to remove fragments and action bar and hide the action bar to improve user experience by managing fragment management and action bar visibility
added parentheses around spanish tokens in TokenizerAnnotatorITest . java to ensure proper formatting of tokens for better token processing
updated parsing logic to handle cases with zero length values and improved range initialization to ensure proper handling of empty responses and avoid potential issues
updated the file path for gcode file and modified bounds checks in VisualizerCanvas . java and GcodeViewParse . java to enhance functionality and correctness of graphics rendering conditions
added new test cases for new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " in TestBackwardsCompatibility . java to ensure compatibility testing covers additional versions
removed extra whitespace in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency
added a null check and initialization of columns and data based on query state to ensure proper handling of results when the query is completed before proceeding
fix # 1489 : ` ` link should refer to the correct file path ' ' error
added import statement for SolrClient and declared a shardToClient map to facilitate the use of Solr clients in the ChaosMonkey class
check if fas be not null before attempt to use it .
reformatted the formatting of the ` populateItem ` method in ` NestedRepositoryTreePanel ` to improve code readability and maintainability
made the constructor of ` ExtensionTypeHeader ` public and added a validation check for the extension type to ensure the extension type is within a valid range of 127 to 127
pdfbox - 2852 : do n ' t throw ioexception , remove unneeded catch declaration
change default for pushonshutdown to true
added error handling and context management for trigger queue items in ReactiveStateMachineExecutor to improve error management and ensure proper handling of queued events
add a test for multiple Python executable on a path first is used in BuckConfigTest . java to ensure that the configuration correctly sets the first executable path for Python environments
added a default button to the InitialAccountRegistrationFrame to customize the signin button for better user experience
added a new configuration variable ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN ` in ` HiveConf . java ` and updated the condition in ` TezCompiler . java ` to allow for dynamic semi - join reduction while improving performance in map - joins
updated error logging messages to include exception details to improve error reporting for better debugging and error tracking
remove package - info . java and move reflection to util package
added a method to list claims in OidcIdTokenClaimCollector and created corresponding test cases to enhance functionality and ensure correct behavior of the OidcIdTokenClaimCollector and its tests
remove unused center variable in Circle , Ellipse , Polygonline , and Rectangle classes to streamline code and improve maintainability by eliminating unnecessary dependencies
simplify conditionals in RegisterAndProcessBundleOperation . java by removing unnecessary parentheses to improve code readability and maintainability
update SslContextFactory configuration parameters to enhance security and compatibility with latest SSL / TLS standards
ambari - 21195 . remove unnecessary ignore annotation and change max expectations to defaultmaxlogentries in configurationproperties . xml . ( mpapirkovskyy )
updated return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive name for errors related to access confirmation
[ 3.0 ] fix dubbo refer fail when classloader be not set ( # 9894 )
added functionality to the ` shiftRows ` method to handle row resizing based on new parameters to improve flexibility in modifying the row by allowing dynamic height adjustment based on user preferences
rename ` setRolloverIcon ` to ` setRolloverPressedIcon ` for clarity to improve code readability and better reflect the functionality of handling rollover icon
updated grid translation logic in TaskView and RecentsView to improve task rendering to enhance visual feedback by integrating grid translation for better user experience
assertion # bylessthan : fix javadoc warning
added currentDateTimeFunction checks to multiple database - related classes to ensure consistent retrieval of the current datetime function across database implementations
added an anonymousPath method to IOUtils and updated log message formatting in Log4jUtils to enhance file path handling and improve logging consistency
updated the ` call ` method signature and content description handling in ` DigitalWellBeingToast . java ` , ` TaskView . java ` , and ` TaskView . java ` to include a content description to enhance the functionality by providing additional context for task content when needed
fix intermittent test failure , increase wait time to 50
refactor LineNumberTagAggregator and TestDominance classes for better code organization to improve maintainability and readability of the codebase
fix genericitem ' s getstate ( ) method ( # 4414 )
hhh - 13653 - fix nplus one test to work with hibernate 5
added a call to remove extra empty screen from the workspace and updated startSearchPageIndex logic to handle cases where no workspace screens are available
replaced manual hashset and set initializations with size - based calculations in MarkBasePointersPhase and IndexedValueMap classes to optimize memory usage and improve performance by avoiding unnecessary additions
changed string formatting in formatting calls in GoogleLineChart and GooglePieChart classes to ensure consistent formatting of string values for better readability
fix possible deadlock in sendingaccountor ( # 1372 )
hbase - 27442 walprettyprinter add position to seek to in the file
updated the parameters of the NettyTransceiver constructor from 1 to 0 to enable automatic connection behavior when failure to connect
modified the ` generateReport ` method to sort events before generating the report to ensure that the report data is processed in a consistent order before generating the report
added a test for handling double quotes in CSV file formatting to ensure that the CSV line descriptions contains escaped quotes as expected
lucene - 8188 : chinese : fix test to work with new coref model .
allow to send iq message for remote server . jm - 215
removed the @ JniImpl annotation from the VM class to eliminate unnecessary JNI dependency for cleaner code
updated Fetcher2 . java to replace hardcoded values with constants for better readability to improve maintainability and clarity of configuration settings
added a condition to check if the media ' s HDR format is not null and removed multiple print statements in MediaInfoParser to ensure proper handling of video hDR format and clean up console output
fix test to match the name change
fix worldborder getradius to work properly with percentage .
hbase - 27491 getwalgroupsreplicationstatus ( ) should return empty map if master be not online or we be unable to connect to the master
ggb - 711 add the ability to remove the current user ' s view when open the login
updated the ` markDataResourceOnline ` method calls to use a new ` generateInstanceConfigs ` method to enhance code clarity and maintainability by centralizing instance configuration generation
changed the FieldAttributes class from final to public to allow access to FieldAttributes from other classes
add test to verify that readerroneousmavenproject contain reference
removed conditions for checking the oldProto variable in the PropertyMap class to simplify the logic for improved readability and maintainability
refactor getControllerId method to accept an optional controller ID instead of converting relay strings to a single string to enhance flexibility by allowing the retrieval of the controller ID based on an optional configuration ID
updated session closing method from sessionFactory . close ( ) to session . close ( ) to ensure proper resource management and avoid potential memory leaks
removed the refresh token check from the consent prompts in the OidcConsentApprovalViewResolver class to simplify the logic for handling consent prompts
removed the System . out . println statement from Http2SolrClient . java to clean up the code and reduce unnecessary output
updated propagation extractor to use a NoopGetter interface for null handling to improve clarity and maintainability of the code by providing a more explicit no - getter implementation
refactor conditional on enabled resource chain to improve resource management logic
updated condition in BarrowmanCalculator . java to include children check for treeRoot to ensure that the treeRoot is a valid child before proceeding with further logic
bug 66425 : jbig2filter . decode ( ) should call getfilteredstream ( ) instead of getfilteredstream ( )
updated log messages to use " CN1 " consistently across multiple classes to improve clarity and maintainability of log outputs
updated return values in ` ShadowICU . java ` and added new test cases in ` ShadowICUTest . java ` to ensure proper functionality of date picker functionality and improve test coverage
removed KeyguardManager reference in TouchInteractionService . java to simplify the condition for device lock checking
server : fix potential nullpointerexception in createvolume api ( # 4358 )
use asynchronousfilechannel instead of filechannel to reduce memory usage
refactor the SigInt and SigIntTest classes by removing unnecessary whitespace to improve code readability and maintainability
refactor method names and update logic related to bounding box resizing to improve code clarity and maintainability by clearly indicating the purpose of the method
change return value from - 1 to 0 to update logic to reflect new functionality
use static final variable for ites and map function to reduce memory footprint .
added onRefreshListener to UploadListFragment to notify listeners when the refresh state changes to ensure the UI reflects the updated data when the refresh occurs
fix file handle in user file ( # 3088 )
replaced direct access to emitters . items with a direct method call to retrieve emitters to simplify code and improve readability by reducing indirection
updated service retrieval logic to check for services without services and improved handling of services to enhance service management and avoid potential null pointer exceptions
updated error message formatting to include a period in BuildRuleFactoryParams . java and Console . java to improve clarity of error messages by ensuring consistent formatting
added a check to return early if mPlaybackState is not PLAYING to improve performance by avoiding unnecessary processing when playback state is not active
updated the method used to find the service component ' s desired state to use ` findById ( 0L ) ` instead of ` findByPK ` to improve accuracy in retrieving the service component ' s desired state
refactor inner class handling logic in Java2TypeScriptTranslator and add tests for InnerClassFieldClash to improve clarity and functionality of inner class declarations in the codebase
issue # 3494 - add option to configure docker follow - redirect - filter
replaced displayChanged method with awtUnlock and awtLock for better resource management to ensure thread safety and prevent potential deadlocks during display changes
hhh - 10183 skip test for sql server 2008 due to mssql 2008
make sure ziphelper close input even if an exception be throw . patch by jbellis ; review by brandonwilliams for cassandra - 1477
changed access modifier of storeClassFile method from private to public to allow external access to the method for better functionality
updated the error handling in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues to improve error reporting and ensure correct behavior of missing values without a check
updated error messages in CGIHandler and added a JavaVMCallbackHandler class for handling runnable tasks to improve clarity of error messages and support for potential null execution
add additional escape sequence for \ 033 and \ 033 [ 0m ( \ n \ 033 [ 0m ) ]
updated ` multiFetchSourceFiles ` method to return a ` Set < String > ` instead of ` List < String > ` for hash codes to improve data integrity by allowing multiple hash codes to be fetched
oglesshaderrenderer : fix for edge case with no vertex
enhanced verification error handling in order verification tests to provide clearer error messages and improved test reliability
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the deletion of the folder instead of a data directory
remove an import no longer need .
updated JsonObject class to improve data handling to enhance performance and maintainability of JSON processing
updated idle time comparison logic in SelectChannelEndPoint and modified idle time handling in HttpConnection to ensure correct idle time checks and improve resource management logic
fix farmland block not be able to block ( # 6177 )
added support for creating SALTEDTABLE with multi - TENANT and SALT _ BUCKETS to ensure proper database metadata handling and enable view index management
updated ` cDateFormats [ i ] ` initialization to include ` Locale . US ` and added ` B6791927 . java ` to ensure correct date formatting based on locale and provide a test for cookie settings
remove duplicate db . close ( ) code that be overwrite by call to db . close ( ) .
increased timeout duration in batch message listener tests from 1 second to 5 seconds to allow more time for processing tasks to complete successfully
[ gr - 27684 ] economy : align stage appends phase with tracing .
fix for save database key when hit escape key
refactor ObjectMapper initialization and add line separator setting to ensure proper line separator handling across the application
fix path handle in window and window environment repository .
refactored multiple test classes to utilize a single Application instance and added the prepare method for resource management to improve code organization and ensure proper resource management during tests
[ java ] remove validation for exist recording log when create a new record .
test : use errorgroupname instead of groupname for integration test ( # 50 )
remove random test that be never pass in travis
added a reverseImage boolean field and updated preference retrieval logic in CameraManager . java to improve handling of camera reverse images based on user preferences
refactor string equality checks to use ` . equals ( ) ` method consistently to improve readability and reduce potential null pointer exceptions
improve mdm match link functionality ( # 4335 )
updated test class imports and annotations to use JUnit 5 API to improve test structure and maintain compatibility with modern JUnit features
remove deprecated usage of new . arraylist ( ) and replace with simple arraylist ( )
refactored methods in TypeUtil for improved readability to enhance maintainability and reduce complexity in the codebase
update triggerTime to use LocalDateTime . ofInstant with TimeZone . getDefault ( ) to ensure correct conversion of alert date to timestamp
added support for creating an abstract method error with varargs in the MethodHandleResolver to improve error handling by ensuring the correct constructor is used for abstract methods
camel - 5714 fixed the issue that simple language can not handle ognl function call when use simple language .
removed a check for empty ` toExplore ` in the ` AbstractParser ` class to simplify the code by eliminating unnecessary checks
camel - jclouds : fix camel - jclouds payload to copy the original stream
camel - 10146 : camel - consul - should not run test if osgi be not release yet
updated the condition for checking ACC _ STRICT access flags in the class to ensure that all methods have the appropriate ACC _ STRICT access flags
[ java ] increase connect timeout for channel validation test .
added a new file ` FileExtensions . java ` containing multiple CLANG source and header entries to provide a centralized set of language source and headers for better compatibility
replace the custom ThreadLocal DateFormat class with a custom clone method for the DateFormat instance to improve date handling efficiency by cloning the DateFormat instance
8305628 : [ testbug ] remove deprecate option for the cgroup memory limit
added display name property to client properties and updated DelegatedClientIdentityProviderConfigurationFactory to utilize it to enable the use of a customizable display name for improved user experience
add earlyterminationexception a a common exception for combineoperator to throw it instead of thread interruption
removed extra whitespace in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
fix for http bind not work properly due to continuation attribute
[ 1.19 . x ] fix ` ` event not find ' ' exception in event factory ( # 9047 )
wallettool : do n ' t swallow keycrypterexception in catch block .
deprecate asynccompletionservice which have be remove in the next major release .
refactor Hyphenation creation to use the original length variable instead of the new one to ensure consistent handling of the length of the Hyphenation object
add a 200ms wait on the network to complete the registration process .
move resource management service out of simpleaccreg so it can be reuse by other plugins .
update the description of the constant in ParameterBinder . java for Java 8 to clarify the purpose of the parameter placeholder for better understanding of the usage of @ Param for method parameters
initialize providersChanged to false in ConfigurationManager . java to reset the state of providers for proper handling
added a method to quote tokens in the token rewriting stream to enhance compatibility with Hive ' s identifier handling in token processing
pdfbox - 4892 : handle miss ' name ' entry for postscript name , a suggest by michael klink
replaced the direct usage of ` AbstractAnalysisFactory ` with a direct type assignment for ` AnalysisSPILoader ` to improve type safety and reduce unnecessary type casting
updated condition in the Window class to include a loop for parent relationships to ensure proper handling of child views when retrieving the window
added a null check for appManifest before accessing its targetSdkVersion to avoid potential null pointer exceptions when appManifest is null
refactor ConfigurationMetadataGenerator to streamline the deserialization process and enhance code readability to improve maintainability and simplify the code structure for better understanding
added userName and setUserName fields to multiple classes to enable tracking and management of user names for Hive operations
camel - 7999 : add support for xslt component to work with spring 3.0 . x
hive - 23052 : run thread pool should utilize tez ' s shim ( daniel dai , review by thejas nair , vaibhav gumashta )
updated expectedFileSize and modified URI handling in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to ensure compatibility with updated legacy behavior and improve code clarity
fix nullpointerexception when log request with no context
[ log4j2 - 1125 ] fix bug in throughputlogger that be n ' t start , but do n ' t complete
updated VM option warning logic to use Platform . isDebugBuild ( ) instead of System . getProperty ( " java . vm . version " ) to ensure compatibility with debug builds and improve error messaging for VM options
meterstatististormanager : fix compile error ( # 7767 )
make it possible to override the default logback _ config _ file system property , for debug
added @ NotNull annotations to method parameters and updated class names for consistency to enhance null safety and improve code clarity
updated the Escaper references from BASH _ ESCAPER to SHELL _ ESCAPER across multiple classes to ensure compatibility with Windows shell commands
added try - with - resources for container initialization in AbstractWaitStrategyTest and HttpWaitStrategyTest to ensure proper resource management and avoid potential memory leaks
lucene - 6067 : make testlucene48fieldinfoformat a bit more stable
removed unnecessary lines in RelativeDateFormatTests . java to improve code clarity and maintainability
added a method to generate a shield address in the RpcApiService class to enhance the service ' s functionality by allowing shield address generation
changed return types of readConsoleInput methods from byte [ ] to String [ ] and updated encoding handling to UTF - 8 to improve output format and ensure consistent character encoding handling
updated regex patterns in TestStabilityRule . java for improved clarity and structure to enhance readability and maintainability of the test cases
added support for limiting fragment count and modified highlight parameters in DefaultSolrHighlighter and HighlighterTest to enhance highlight functionality and improve test coverage for multi - valued fields
refactor the tryToLogin method to accept an URI parameter for username and password to enhance security by ensuring credentials are correctly set during the login process
refactored entity management in HandlerSceneEntityDrownReq and PacketLifeStateChangeNotify classes to improve efficiency and reduce unnecessary entity broadcasting
( chore ) camel - jms : avoid use deprecated method in other class
removed the wrapCollection method call from the update method to simplify parameter handling by using the original parameter
added logging for unknown currency formats in BTCEAdapters . java to improve error handling and traceability of currency issues
refactor subscription creation logic to compare subscription names more accurately to improve clarity and maintainability of the subscription logic
pdfbox - 4892 : adjust default value , a suggest by valerybokov
updated startController method to accept a boolean parameter for tenant isolation and added new tenant methods for broker and server tenants to enhance flexibility in tenant management and improve testing capabilities for cluster tenant creation
simplified the return statement by directly returning the value of the response to improve code clarity and eliminate unnecessary complexity
added a check for non - empty attributes in ProjectWorkspace . java to ensure that the condition is only valid when there is more than 4096 elements
added methods for retrieving jdk names , type , and language level in various project configurations to improve code maintainability and streamline project configuration management
updated " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify that the optimization is not applicable for bucket count compatibility
added a new import and modified test method names in GrantedAuthorityEffectiveAclsResolverTests to enhance clarity in testing ACL resolution for different user roles
fix a bug where we incorrectly use the javaparser type solver when solve a method in a java class
added constants for the number of buttons and introduced a constant for maximum button support to improve control over the button count and ensure it does not exceed defined limits
replaced the import of assertEquals with com . oracle . java . testlibrary . Asserts . assertEquals to ensure compatibility with the Oracle JDK library version
added a new MessagePackFactory class for creating MessageUnpacker instances to improve flexibility and configurability of MessagePack processing
add is _ destroy and is _ cave tag to biomes ( # 1361 )
rename methods from ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
updated layout logic to check if the component is horizontal before setting the layout to ensure proper layout behavior based on the horizontal state of the component
fix url pattern match to match old url form
updated touch handling logic in AndroidInput and AndroidLocklessInput to use hasMultitouch instead of instanceof for multi - touch handling to improve clarity and maintainability of touch handling logic
[ java ] remove usage of commitposition counter and check if it be close in clusteredserviceagent .
# 2785 - enh : add usersite and recordid class for query user site management
added URL validation and port retrieval logic in HttpConverterRegistrar to ensure proper handling of invalid addresses and default ports
bug 9452 : listcapacity - when the host > 200 the host _ id and storage _ pool _ id start colliding , it should be accurate .
replaced file input handling with file length setting to improve clarity and functionality of file management
lucene - 6271 : make lucene compiler final and properly handle externals more efficiently .
removed synchronization from UISettings class synchronization to improve performance by reducing contention on the class scope
added native text input support and changed access modifier of fireDataChanged method to public to enhance text input handling and allow external access to data change notifications
fix ( spannerio ) : retry max on emulator only support one transaction ( # 167 )
replaced explicit generic types with the diamond operator in multiple classes to improve code readability and reduce redundancy in data structures
updated the array type check from double array to short array in ObjectInputStream and added a new class CloneArray to ensure correct handling of short arrays and facilitate serialization testing
refactor nonce handling in OIDCAuthenticationFilter to improve clarity and error logging to enhance the robustness of nonce claim validation and provide clearer error messages
added a conditional check for the relationship field in DCInputSet . java to ensure correct handling of relationship fields in the input set
added server slogan capability to the file data storage and updated related methods to accommodate new functionality for managing server slogan in the application
updated menu item tinting logic to use ' = = ' instead of ' ! = ' to correct logical flow and ensure proper functionality
updated SolrRequestParserTest to use Assume . assumeNoException instead of fail to improve test reliability by avoiding unnecessary failure checks
added a check to return early if the event ' s build ID is empty to improve performance by avoiding unnecessary processing when no required symbols are available
added a new table row for " Data 5 - 4 " in StringHelperTest . java to enhance the output structure for data handling in the application
added a warning log for empty data provider returns and adjusted the DataProviderHolder initialization to improve visibility of the data provider ' s behavior and ensure that the test is not executed anything
camel - 14284 : replace ` collections . empty _ list ` with ` Collections . empty ( ) ` in favor of ` Collections . empty ( ) `
update freeplane version to 1.9 . 8 and enhance map style support
physics - rigidbody : fix typo in setrestitution ( )
added a new file AutoFtpActivity . java that implements FTP test functionalities to facilitate FTP testing by providing a basic activity that manages progress indicators
refactor tab name handling to improve type checking to enhance clarity and maintainability of the code
added methods to retrieve and set component state in multiple classes to improve data handling and state management in the UI components
added a new class RemoteExecutionEnabled and its tests for enabling and disabling remote execution to enhance the system ' s ability to control remote execution behavior
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced FileReader with InputStreamReader with StandardCharsets . UTF _ 8 in ImportCsv . java to ensure proper handling of character encoding for file reading
test shadow variable be not staleness with the current state of the current score
updated the configuration key for semijoin conversion from " enable . semijoin . conversion " to " optimize . semijoin . conversion " to improve performance by optimizing semijoin optimization
[ java ] ignoring message content that be not an io . netty . buffer . ByteBuf .
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated related conditions in ` FileDisplayActivity . java ` to ensure proper removal of outdated data and enhance user feedback when the folder is removed
added assertions to verify transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly retrieved and validated
mark some schemaregion method a deprecate , fix # 757
add check for null sampleMimeType in MediaCodecRenderer to ensure that a valid mime type is provided before proceeding
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23PoolingDataSource . java ` to improve notification handling by using notifyAll ( ) method instead of notify ( )
updated @ AllArgsConstructor annotations to include @ JsonCreator with JsonCreator configuration to ensure proper JSON creation mode for generated JSON objects
added a SQLFeatureNotSupportedException for creating an index on a view to inform users that indexing functionality is not supported yet
add a new class ` Website ` and test its methods in ` PopulatorImplTest ` to facilitate the population of Java network types in the application
added locale setup in BSFormatterTest . java to ensure consistent locale settings for test execution
add a good error message if there be two badly downloaded jar file .
make test case insensitive by use matcher
modified parameter handling logic in SimpleExprGenerator . java to ensure proper handling of single and single parameter expressions in the analyzer
added a volatile boolean field ` createdVertx ` and modified the condition for checking ' vertx ' to ensure that the vertx is only created when it is not null
updated the method call to use the node variable instead of null to ensure the correct user object is used for attribute writing
updated logging messages in SynchronizeFolderOperation and enhanced null checks in FileDisplayActivity to improve clarity of log messages and prevent potential null pointer exceptions
added a new boolean field ` ignoredReadStatus ` and associated logic in ` Entries ` , ` CategoryREST ` , and ` FeedREST ` classes to control the behavior of unread status based on keywords and tags
updated resource handling in multiple classes and tests to use MavenPaths for resource resolution to improve consistency and ensure correct resource management across different environments
[ type : fix ] fix registerserver consumer executor null pointer bug ( # 4357 )
updated sound playback state condition from ` isPlaying ` to ` isPlaying ` to ensure correct handling of paused sound states
added a new permission ` PERMISSION _ ADMIN _ SUDO _ AREA ` to the ` MainCommand ` class to ensure administrators have the appropriate permissions for access
[ multistage ] add request . trace to server request ( # 10785 )
updated conditions in ReloadableJava parserInputFileObject to use path . getFileName ( ) instead of path . getPath ( ) to ensure accurate base name matching for file handling
updated assertions in ResourcesTest to use a single string for pure and mix emojis to improve code readability and maintainability by reducing repetition
8062541 : [ testbug ] test / hotspot / jtreg / serviceability / nmt / whitebox . java fail with runtimeexception : nmtwaitfordataMerge miss method
[ flink - 30613 ] [ serializer ] migrate javaeitherserializersnapshot to implement new wrapper class .
refactored AddressResolverOptions to utilize a new default pattern for NDotS and ROTATE _ OPTIONS to improve flexibility in configuring resolver options based on user configuration
added a call to ` __ associate ( context ) ` in ` RequestRockerTemplate ` and a test for ` DefaultRockerTemplate ` to ensure proper context association when creating and testing the ` RequestRockerTemplate ` class
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated return paths from " liquibase / parser / core / xml / dbchangelog / dbchangelog / " to " www . liquibase . org / xml / ns / dbchangelog / " to ensure accurate path resolution for XML namespaces
rename ` com . oracle . truffle . api . source ` to ` com . oracle . truffle . api . test . source ` a it be no longer part of the package .
updated ` repoState ` from ` INIT ` to ` NOT _ REQUIRED ` across multiple classes to ensure that the repository state is not mandatory by default
updated the ` compare ` method to include ` CompareControl . SchemaComparison ` with specific catalog and schema names to enhance the comparison functionality to support multiple catalog and schema comparisons
[ test ] use testng to avoid junit in this test
added a new file ProgressiveJPEGTest . java to implement a testing framework for progressive image rendering to provide a mechanism for testing progressive images in the LibGDX framework
* fixed npe when load multiple model due to change in the blender model .
make window native - toolchain target architecture error message more user - friendly
added a null and empty check before setting the size in the Label class to avoid potential NullPointerExceptions and ensure the size is only called when the text is not null or empty
updated readVarInt method to multiply with a specific value of 1 _ 000 _ 000 to ensure consistent handling of variable integer values across different operating systems
changed class visibility of PushUtils and ThumbnailsCacheManager constructors from public to private to prevent instantiation of PushUtils and ThumbnailsCacheManager
simplified the calculation of the length by directly using the current configuration ' s length to improve code clarity and reduce complexity
removed unnecessary cast from MockDirectoryWrapper when setting enableVirusScanner to false to simplify the code and improve readability
updated the file path format to use a wildcard character to ensure compatibility with SQL syntax for loading presets
added a conditional check for accessibility in TaskbarStashController and updated animation handling in FloatingIconView to ensure proper accessibility announcement and fix compatibility with newer Android versions
updated Node initialization in NodeManager . java to use RefreshTask to ensure node information is correctly associated with the refresh task context
add test to verify only one jdk ( 1.3 and 1.5 )
refactor tests to use MockitoJUnitRunner instead of PowerMockito for better mock management to improve test reliability and adhere to modern testing practices
added specific PrintStream and PrintStream instances to TestSchemaToolCatalogOps . java to enable control over standard output / error handling during tests
hbase - 23343 add dfsclient to the saslhelper in fansoutoneblockasyncdfsoutputsdiaslhelper ( # 4423 )
updated MongoQueryMethod and MongoRepositoryFactoryBean to accept RepositoryMetadata as a parameter to enhance functionality by allowing the metadata of query methods
update entityresolver in Digester . java for improved integration with gradle tooling
reorganized import statements and added new constants in MetaDataEndpointImpl . java and PhoenixDatabaseMetaData . java to improve code readability and maintainability by consolidating import statements
updated allowed _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry interval handling to improve transaction management and retry behavior
updated variable names for consistency and clarity in BarChartActivity . java and LineChartActivity1 . java to enhance code readability and maintainability by using a uniform naming convention
added utility methods to check if a string can be used in a readable format to ensure proper handling of Unicode characters in the file system names
rename ` ` in ' ' - > ` ` use ' '
added support for plugin configuration in the project building process to improve error handling and maintain consistency across the project build process
changed division division in ProxyConnectionManager and ServerTrafficCounter to use double quotes for calculations to ensure accurate representation of byte values in numerical calculations
test : fix integration test which fail on google cloud vision
updated connection handling to return null instead of " STUB " and added remote host retrieval in AuthenticatedUser to enhance connection stability and ensure consistent access to remote host information
( scott phillips ) add admin permission to community list
hbase - 25825 fix long / short compaction thread counter in Compactsplit
update package name retrieval from application context to resources to improve consistency with the application ' s resource management
updated the method for displaying plots in the Near class to include visible players to improve user experience by making the plot display visible ones
refactor multiple Java files including AndroidManifest , ResName , and ShadowMediaPlayer files to improve code organization and maintainability across the project
refactor MlibOpsTest to improve test clarity to enhance maintainability and readability of the test code
replaced string literals in ` JNIRegistrationManagementExt . java ` with a constant for the OperatingSystem implementation to improve code readability and maintainability by avoiding magic strings
updated the attribute key from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test in SchemeGeneratorTest . java to ensure correct property assignment for the referenced container and validate functionality through testing
updated key and iv handling in UploadFileOperation . java by simplifying encryption logic to streamline key and initialization vector generation for improved performance
added Stability annotation for LOCAL and PLATFORM _ POSTSUBMIT in WorkProfileTest . java to enable the test environment for local and postgresql compatibility
remove the check for bucketing version in TezCompiler . java to simplify the codebase by eliminating unnecessary checks
replaced the method call from ` setCursorPosition ( x , y ) ` to ` input . setCursorPosition ( x , y ) ` to utilize the input class for improved functionality and maintainability
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and created a new class with final fields to improve class organization and enhance functionality for better resource management
make it possible to print thread pool stats from jmx . patch by jbellis ; review by brandonwilliams for cassandra - 1715
updated max bitrate setting to use user preferences in ExternalPlayerActivity and PlaybackController to ensure compatibility with user settings for bitrate management
updated ZipkinHttpSpanExtractor to improve handling of trace and span IDs more effectively to enhance debugging capabilities and ensure correct handling of span debugging conditions
remove duplicate payment account logic and move to abstract method
fix an issue with right - aligned icon . ( # 1783 )
added a line to set the project name in the LauncherUtils class to ensure the application displays the correct project details
updated JsBundle and JsBundleBuilder classes to include ProjectFilesystem as a parameter to enhance root path management for the build process
updated multiple Java classes related to envelope and databinding functionality to enhance code organization and improve maintainability for future development
add MetricsDSLContext to the MetricsDSLContext class to enhance metrics functionality for better monitoring capabilities
removed the VersionConfig interface and modified the VersionBuckConfig class to use ImmutableSet for universes to simplify the code and improve performance by avoiding unnecessary method overrides
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException to improve stability by preventing application crashes due to unhandled exceptions
changed the access modifier of the validateTypes method from static to public to allow external access to the method from other classes
fix : update gapic - generator - java with mock service generation fix ( # 772 )
added SLF4J logging to the SimulationStatus class to enhance debugging capabilities by providing detailed logging information
update VERSION _ POSITION _ Y to 150 and set VERSION _ FONT to 14 to reflect the new font version for improved visual consistency
refactor notification handling to run in a Runnable to ensure thread safety during the notification registration process
updated the implementation of ReturnsElementsOf for improved clarity to enhance code readability and maintainability by removing unnecessary complexity
fix error message for non - string partition column
added a testLineFileDocs method to validate document handling in LineFileDocs to ensure that stored fields are correctly processed and validated in the indexing process
added a method to retrieve the version code in MainApp and updated references in FeatureList and WhatsNewActivity to ensure compatibility with the current package structure and improve code clarity
camel - 4442 : fixed issue with ambiguous value when use beaninfo . methodname in beaninfo . body .
updated assertions in MultiPartInputStreamTest to use getSubmittedFileName ( ) instead of getContentDispositionFilename ( ) to ensure the correct file name is tested for multipart inputs
[ add ] indexbufferobject , vertexbufferobjectwithvAO and indexbufferobject to have proper dispose ( ) call .
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through the login form
updated JerseyClientConfiguration . java with new configurations to enhance client performance and flexibility
int - 2642 fix the class path for charstreamreadingmessagesource and characterstreamoutboundchanneladapterparser
updated print statements in ` InstanceOfPatternMatchTest . java ` , ` RemoveRedundantTypeCastTest . java ` , and ` TypeUtils . java ` to correct a syntax error to ensure output accuracy and improve code readability
apply patch from josh from bug # 44634 - add copy / paste functionality for string dictionary
added a new ` AutoCloseable ` interface and customizable command hook functionality to the ` GenericContainer ` class to improve resource management and enable customization of command execution
[ pms ] fixed pmsconfiguration . testknownheaders ( ) and pmsconfiguration . testfordefault ( ) to throw an exception
added ` OPTION _ SCHEMAPATTERN ` to ` BundledDriverDatabaseConnector ` and ` PropertiesDataSourceDatabaseConnector ` classes to allow configuration of the SCHEMAPattern for database connections
bcjsse : fix nullpointerexception in ProvSSLSessionimpl . java
updated calculations for width and height , and corrected the ratio calculation in AndroidGraphics . java to ensure proper scaling and rendering of graphics based on dimensions
update Base64 class implementation to improve performance and address bugs in Base64 handling
[ gr - 46711 ] sulong : fix invalid fallback value when global container be miss .
simonstewart : re - enable a test for the iphone driver that do n ' t pass in .
modified FlowBuilder and FlowJobBuilderTests classes to improve test coverage and functionality for better job execution handling
changed the ` ResName ` field to ` int ` in the ` AttributeResource ` class and updated the constructor accordingly to improve clarity and simplify the representation of resource IDs
refactor docker context tls file resolution logic into a new method and simplify TLS file handling to enhance code clarity and maintainability by consolidating context and TLS file management
change test lifecycle method from After to Before in SimpleReactiveElasticsearchRepositoryTests to ensure proper setup and teardown behavior for tests
modified type variable handling in ` mmm Attr . java ` and added a new class ` ppp T6450290 . java ` to improve type safety and avoid incorrect assignment in javac
[ java ] allow configure the default log level with -- log - level option ( # 1358 )
added logging statements to track package removal and modified deleteItemsFromDatabase method to improve debugging capabilities and enhance item management in the database
added file option methods in FileActivity , FileDisplayActivity , and PreviewImageActivity to enhance functionality by allowing users to browse files easily
add backwards compatibility method for backwards compatibility
updated the calculation of numPredictiveAppCols to account for phone types to improve compatibility with device profiles on other devices
updated StringUtils to create a String instance with UTF - 8 encoding to ensure proper handling of special characters in content
added a new class ` RequestMatchers ` and its corresponding test class ` RequestMatchersTests ` to improve request matching logic and ensure correctness through unit testing
ggb - 2118 fix : click text in temporary mode should work for input box
adjust position calculations in the ProgressBar to account for a new height and width adjustments to ensure correct rendering of the position based on updated dimensions
[ native ] fix native query runner not find function definition
changed variable declarations to final in BruteArgumentMoverHandle . java and added a new native method permuteArgs to improve immutability and support for additional parameters in permuteArgs
added a condition to check if the state handler is invalidated during gesture state checks to ensure that gesture handling does not proceed when the state handler is invalidated
updated layout handling logic in DynamicGrid and Workspace classes to improve layout performance and accuracy based on screen orientation
added a check for " / robots . txt " in the redir condition to ensure that the redir is valid before proceeding with execution
fixed illegal import and refactored icon path
rename ` ` continue ' ' to ` ` createworld ' ' and ` ` return ' ' in advanced game setup screen
updated UDFOPDivide . java to handle zero values in null and added a new test class TestUDFOPDivide . java to ensure correct handling of zero values and validate functionality through unit testing
updated formatting and exception handling in FlowJob . java for consistency to improve code readability and maintainability
updated the filter bean definition to use a more specific bean definition for authentication filters to enhance the flexibility and clarity of the filter process URL handling
added onDestroy method to ShareActivity and ContributionsActivity to ensure proper cleanup of the upload service connection upon destruction
changed variable name from ` thumbNail ` to ` thumbnail ` for clarity to improve code readability by using a more descriptive variable name
refactor multiple Java classes for improved consistency and organization to enhance maintainability and readability of the codebase
added request timeout configuration using configuration in RaftServerConfigKeys to ensure proper handling of request timeouts for improved system stability
updated logging messages and removed runtime exceptions from TsFileResourceManager and ResourceManagerTest to improve clarity of error handling and enhance test reliability
added system properties to the model source in MavenModuleLoader to ensure proper initialization of system properties for the model source
added readiness metrics for OK and BAD readiness checks across multiple classes to enhance monitoring capabilities for readiness checks in the application
add animated torch model handler for the animated torch client
added a null check before closing the writer resource to prevent potential NullPointerException when writer is not initialized
added a method to retrieve Hive configuration from a specified directory to improve flexibility in managing Hive configuration paths
added a new link to " Muting Users " in the FeaturesActivity to enhance user management functionality
added initialization property for using direct method handle to disable direct method handle functionality in the application
hbase - 25836 make splitonLeadingvarcharcolumnspolicy steppedregionsplitpolicy ( # 3247 )
[ flink - 23454 ] [ yarn ] properly check the existence of the plugins and lib dir
refactor pronunciations retrieval to use a unified method for clarity to improve code readability and maintainability by standardizing method calls
removed unnecessary line breaks in JSON output to improve code readability and maintainability
added functionality to store tweet ID in Compose . java and set it in TimeLineCursorAdapter . java and TimelineArrayAdapter . java to ensure proper handling of user interface IDs during compose operations
add warn log when messagelistener be terminate
change exception type to nclassesfoundtostanalyzeexception to be more specific than ioexception
replaced the import statement for Key class to utilize PublicKey instead of Key to ensure compatibility with the use of the public key class
updated the isIncompatible variable initialization to true to ensure compatibility with updated features
updated the parameter type of createAccount method from Account to AccountCreateContract to utilize the specific contract type for account creation in the service
pdfbox - 4892 : avoid arrayindexoutofboundsexception when call function from a non - exist function , a suggest by valerybokov
resolve : http : / / issues . apache . org / activemq / browse / amq - 2840 - activemqmqredeliverytest fails due to a different cause than the original cause
changed the default star tree format version from " on _ heap " to " OFF _ heap " and improved version handling to ensure consistent version management and enhance code clarity
removed excessive length limit when setting the title in FeedUpdateService to ensure the title does not exceed a maximum length of 2048 characters
refactor preview panel initialization in JColorChooser and BasicColorChooserUI to enhance panel management to ensure consistent panel display behavior across different components
change log level from info to debug for extensions checks to reduce log verbosity and improve performance during critical operations
added a null check for the reusable bitmap before setting bitmapFactoryOptions . inMutable to avoid potential null pointer exceptions when decoding fails
added a method to retrieve layout parameters in FakeView to provide access to layout parameters for other components
added a check to throw an IllegalStateException when a cursor is already closed in DefaultCursor . java to ensure proper handling of illegal state exceptions when a session is closed
pdfbox - 3353 : avoid indexoutofboundsexception when search for page via / pages
ignore unit test till it get fix
added a timestamp field with getter and setter methods to the Message class to enable tracking and management of message timestamps for better traceability
add log to generic and ValidationException mapper to improve error handling
changed the class declaration of AbstractExecutor from package - private to public to allow access to AbstractExecutor from other packages
routeresource : fix bug where legacy parameter not be remove
remove public modifier from test class and fix import
refactor CSRF handling by introducing a separate method for setting CSRF attributes to improve code organization and reduce duplication in CSRF handling logic
add a bootstrap option to allow look up shadowclassloader from system classloader .
bug 56425 : add support for numeric disabled cell in rrl ( and rrl ( ) file )
changed log level from info to debug for default value logging in HiveConf . java to reduce log verbosity when debug mode is enabled
lwjgl3controller : fix a bug that the lwjgl3controller be not connect when all the component be in use .
updated ObjectFactory import statements in WeldFactory and WeldFactoryTest classes to align code with the latest Cucumber library structure
refactor code to ensure the savePortForward method is called only on the current instance to improve reliability by avoiding unnecessary object creation and ensure proper context is used
added functionality to control whether snapshot data is enabled in GlobalConfiguration to improve control over Liquibase ' s snapshot behavior by default
updated the handling of synced folder updates in SyncedFolderObserver . java to improve event logging and job scheduling logic for better clarity and performance
fix javadoc to not refer to deprecate method
simplify touch interaction conditions by replacing isTrackpadMotionEvent checks with a utility method to improve code readability and maintainability
hive - 15815 : remove unused interface from llap package ( sergey shelukhin , review by prasanth jayachandran )
replaced import of ArgumentMatchers with Matchers in multiple test files to standardize the usage of Matchers utility for improved code clarity and consistency
refactor ` getRelativePath ` methods and simplify path handling in multiple classes to improve code clarity and maintainability by removing unnecessary complexity
updated method signatures to use RecordReaderConfig instead of RecordReader to enhance flexibility by allowing different record reading configurations
fix argument extractor to only deal with specialized extractor , and fallback to original argument extractor
volume list : added method to find correct resource limit for account and domain ( # 4433 )
add guard for shift finger event , close # 5536
sizetieredcompactionstrategy : deprecate cold _ reads _ to _ omit , to avoid confusion
stop the leech service in ClientTest to ensure proper resource management during tests
[ issue # 5066 ] fix pop message process performance ( # 5067 )
move keyboard to the end , so the user can exit immediately if necessary .
updated ShadowDateUtilsTest to use JUnit ' s @ Ignore annotation to temporarily disable the test due to instability
polish ` ` replace EventLoopGroupMongoClientSettingsBuilderCustomizer with NettyDriverMongoClientSettingsBuilderCustomizer ' '
added upgrade request and response handling to the JettyTrackingSocket and UpgradeConnection classes to enhance the websocket connection functionality and ensure proper handling of upgrade requests
added timeout functionality to AndroidImplementation to enable automatic connection timeout handling
updated user and team access permissions methods to simplify permission retrieval by eliminating unnecessary exception handling
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL syntax is properly parsed and deparsed for handling quoted expressions
added root check to iswritable and isExecutable methods to ensure accurate validation of file accessibility based on the operating system
added logging functionality and refactored executor assignment logic in FixedThreadExecutor . java to improve thread management and provide configurable executor settings
added null checks for the field variable in AbstractChangeGenerator . java to ensure robustness by preventing potential NullPointerExceptions
updated event listener methods to use InitializingBean instead of CasEventListener to improve initialization flexibility and integration with the new event system
refactor animation handling in ShadowAnimation to a separate endAnimation method to improve code readability and maintainability by encapsulating animation end logic
fix resource leak in regionfile . close
added a new file ` gsp001 . java ` that implements Java system property retrieval to facilitate testing of system properties at early phase agent _ OnLoad
added ` concreteClassMetadata ` and ` isDeclaredBean ` fields to ` BeanDefinitionInjectProcessor ` and updated method checks accordingly to streamline type checking and enhance clarity in bean injection logic
- add support for jme3 camera ( default on jme3 - export )
updated the PopupNotificationPanel class to utilize a custom popup window title and simplified mouse event handling to enhance user experience by ensuring a consistent panel appearance and improving event handling
7129240 : inference cleanup : remove redundant exception class in infer . java
added a new method getFeatureValue to retrieve the feature value to provide access to the feature value for external use
changed the parameter type of the ' after ' method from int to long to improve flexibility for handling larger time values
added properties ` onBuild ` and ` executionDriver ` to ` ContainerConfig ` and ` Info ` classes to enable configuration of the on - build state and execution driver for the build process
updated icon setting logic in Toolbar . java and modified layout handling in FlowLayout . java to ensure correct icon display based on the target layout type
added support for enabling position increments in StopFilter to enhance filter flexibility based on configuration
added an InternetAddress object to EmailsTest . java and SystemErrorEmailReportTest . java to enable proper handling of internet addresses for test cases
added a boolean variable mTryShareAgain and initialized it to false to control the share process behavior during the file sharing process
improve jansi - native to allow jansi - native to build the native pty on jdk 8
refactor bandwidth estimation logic to use bytesSize instead of bytes to optimize memory usage based on the dynamic properties store
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to improve test stability and allow for asynchronous task completion
fix ( easee ) : update user interface url for bind
[ beam - 2734 ] harden kafka integration test with startup retry mechanism
changed the matcher method from ` allOf ` to ` hasJsonPath ` and added a check for the item name to improve the accuracy of JSON path matching in the application
added trust manager and SSL context management for SSL connections in OkHttp . java to enhance security by ensuring the application can manage SSL connections effectively
updated navigation button long click handling to use AssistUtils for type management to improve clarity and maintainability of button interaction logic
added a new file HyperlinkFormula . java and modified StringPtg . java to use int instead of byte to implement functionality for handling Hyperlink formula data in HSSFWorkbook
initialize stdout and stderr with an Optional < String > instead of null to ensure that the working directory is not null to avoid potential NullPointerExceptions
increase timeout for test to reduce false failure .
updated escapeDatabaseObject methods to include objectName parameter and adjusted related return statements to ensure proper escaping of database objects involving object names and improve code clarity
material renaming : do n ' t show glass if title change
added a test for handling display state changes in ShadowDisplayTest . java and implemented the setState method in ShadowDisplay . java to ensure correct behavior of display state changes across different devices
[ geos - 8082 ] add dispatcher . invokedirect ( ) and dispatch . invokeinternal ( ) to support direct service invocation
ggb - 315 keyboard shortcut for y / x key ( ctrl + y ) for y / x
updated SQL queries in PgDatabaseMetaData . java for handling PostgreSQL dependencies and constraints to ensure compatibility with PostgreSQL server version v9.0 and later
change the declaration of the message variable to be nullable to ensure message is always available to avoid null reference issues
updated method signatures to use ` pathUri ` instead of ` jarPath ` and modified URI creation to improve clarity and consistency in path handling within the code
added conditional logic to handle " Jenkins nodes " monitoring based on application name to improve flexibility in collecting applications based on their application context
refactor attribute resolution logic into a separate method for clarity and maintainability to enhance code readability and reduce duplication in attribute checks
avro - 2104 . java : fix flaky test in protobuflogreader ( # 768 )
nacos : shutdown nacos service on destroy ( )
camel - mybatis : fix switch / cases indentation see camel - 14540
added status code handling for SPDY versions and refactored status code processing in GoAwayGenerator , GoAwayBodyParser , and associated classes to ensure proper response processing based on versioning and state management
refactor ` AuditEventTests . java ` to improve code organization and readability to enhance maintainability by organizing imports into a single line
modify the interpolation logic to return 0 when the input is less than or equal to a valid value to ensure safe calculations by avoiding rounding errors
fix default world path for old build .
refactor the addition of the executable path to the builder in DxStep . java to improve code clarity and maintainability by reducing redundancy
added assertions in TestPointQueries for PointRangeQuery instances to ensure correctness of PointRangeQuery instances in tests
hbase - 23343 fix testhfilecleaner to pass on window
updated file label display logic to conditionally display the file name based on file transfer request size to improve user experience by displaying a more relevant label based on file size
throw jce on timeout to prevent jce from be trigger .
[ flink - 25958 ] [ table ] make rowtimeminibatchassgineroperator always chaining strategy to automatic
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to enhance filtering capabilities by properly utilizing path handling
add additional hashmap implementation and benchmark for random key .
initialize the G _ SCH _ B variable in HybridPlotWorld . java to ensure a new HashMap is initialized for the SCH plot world
added a check for empty fields and refactored method identifiers handling in GroovyEngine . java to improve robustness and maintainability of the code
ggb - 1396 make sure number . setdrawable ( false , false ) be stable
added TCP keepalive configuration to HiveConf and updated TServerSocket initialization in HiveServer to improve socket management and allow for better connection handling
corrected the method name from ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve method naming accuracy for better clarity
no effective change - remove useless code
remove joda - time dependency from realtimesegmentreocator ( # 1067 )
remove useless local variable ' success ' in createnetworkcmdbyadmin
updated interpolation method and condition checks in WindowTransformSwipeHandler . java and FloatingIconView . java to ensure consistent handling of progress values and improve logic clarity
updated schema requirement in SecurityNamespaceHandler . java from 3.0 to 4.0 to ensure compatibility with the latest Spring Security features and fixes
fix checkstyle issue in util / assertion / protosubject . java ( # 773 )
make instance variables final to ensure immutability for better immutability
added a new file TestConfigureUDF . java to implement a custom UDF test to verify the behavior of the configuration function in Hive
log4j2 - 1348 improve log message - wait - strategy regex . added test with parameterized style .
refactored logging method calls by removing unnecessary ' final ' modifiers to streamline code for better readability and maintainability
updated SQL batch updates and method names in SchemaDao , ShardDao , and ShardCleaner classes for clarity and consistency to improve code readability and align with updated API standards
[ netbeans - 4480 ] add java 17 - preview to list of supported language
make fileappenderresiliencetest more tolerant to reduce lossiness
fix potential npe in volatilereadnode . read ( )
added a method to retrieve steps and updated spacing for consistency to improve code readability and maintainability
removed fromBase58 and toBase58 fields from TronJsonRpc and TronJsonRpcImpl classes to simplify error handling and avoid unnecessary dependencies
refactor currency pair creation to assign a variable for clarity to improve readability and maintainability of the code
fix longtasktimer to use base time unit .
# ! [ euphoria - flink ] reducebykeytranslator partition custom operator only work with hashpartitioner
changed color value handling in HostEditorActivity to improve type safety to enhance code clarity and prevent potential ClassCastExceptions
refactor database version handling to use a new DatabaseVersionHandler class to enhance code clarity and maintainability by standardizing file handling methods
added a constant for maximum number of replies in the loop to optimize performance by limiting the number of replies processed
fix test break by previous commit
fix getpersistedbytecount to account for deleted tail page
fix an issue with the glowserver package . getimplementationtitle ( )
added a ` grow ` method to the ` DataIO ` class for resizing buffers to improve efficiency by encapsulating the grow operation within a dedicated method
removed the import of DataOutputStream from GdxSetup . java to streamline the code by eliminating unnecessary dependencies
camel - 8569 fixed the issue of filenotfoundexception in camel - attachment
added a call to ` markReadForLoad ( ) ` in ` LauncherFragment . java ` to ensure that the load mark is read for loading functionality
added exception handling for negative array size during instrumenting to improve error handling and provide clearer diagnostics for negative array sizes
added a method to check if a partition is spill before flushing it to improve error handling by throwing an OutOfMemoryException for insufficient partitions
replaced repeated calls to ` IndexWriter . segmentFileName ` with a single call to ` IndexFileNames . segmentFileName ` to improve code readability and efficiency by reducing redundant calls
added a default name ID format constant in the SamlProfileSamlNameIdBuilder class to ensure proper handling of name ID formats when no supported names are provided
added error handling to the ChangePasswordPage class to improve user experience by signaling when a password change is aborted
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent potential compilation issues
added a new method ` getMaxIdleTime ( ) ` to ` NioReceiverMBean ` to provide a mechanism for retrieving the maximum idle time for improved resource management
deleted the FontScalingTest . java file which contained a font size comparison between Metal and system look - and - feel to eliminate an obsolete test that is no longer relevant to the project ' s requirements
added checks for filter begin and end dates in RRD4jPersistenceService to ensure robust handling of filter boundaries for improved data integrity
added checks to return early if the number of vectors is less than zero to improve performance by avoiding unnecessary processing
test : migrate executablereftest to junit 5 ( # 4489 )
added null checks for ` view ` and ` glassPane ` before invoking ` setView ` and ` setGlassPane ` methods to avoid potential NullPointerExceptions when ` view ` and ` glassPane ` are not initialized
camel - 4496 : fixed issue with use of camel - core dsl with wiretap and other dsl . thanks to simon steiner .
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new option ' TOPN ' to the Planner settings and its functionality in PushLimitToTopN to enable an option for top - n management in the planner
[ java ] remove redundant aerondirectoryname assignment in test .
fixed - connection ping without queued message should be send to redis master node . # 3790
replaced InputStream with URL for configuration variable initialization and removed the LoopingByteArrayInputStream class to streamline resource management and improve resource handling efficiency
fix model creation with no default device ( # 2165 )
implemented onCreateOptionsMenu method in SimulationViewer . java to enhance menu interaction by ensuring options menu can be selected appropriately
doc : fix docstring formatting ( # 182 )
updated the home directory path retrieval to use a relative path to ensure the application uses the correct directory structure for Hawtio
added a check for empty comments and return a single space constant to handle cases where there are no comments and improve whitespace handling
changed mClosed variable to be volatile in multiple dictionary classes to ensure visibility of changes to these fields across different threads
added printStackTrace ( ) method to Throwable class to improve error handling by providing clearer stack trace information
bump common and fix customitemdroptest from 3.13 . 5 to 4.13 . 5
added a new boolean parameter ` ifNotExists ` to various classes and adjusted partition checks accordingly to enhance partition creation logic to allow conditional checks to avoid duplicates
refactor input handling and reading logic in NfsSecondaryStorageResource . java to improve readability and efficiency of byte reading operations
remove deprecate controlrequeststreamid in o . a . c . e . servicenode
[ geot - 7898 ] spatialoperators be not properly turn on by default ( wfs be miss )
added import for LuceneTestCase and annotated the BasicDistributedZkTest class to address issue SOLR - 2161 that is expected to be fixed later
modify conditional logic in Http11InputBuffer . java for better handling of request processing to improve processing logic and ensure proper request flow processing
[ java ] disable thegressExclusive flag by default in AeronCluster . java .
hbase - 24875 remove ` ` hbase . offheapcache . percentage ' ' and ` ` hbase . bucketcache . ioengine ' ' from htable ' ' job property ( # 2480 )
refactor JSONRecordReader to encapsulate running record count logic to improve code readability and maintainability by encapsulating logic in a separate method
added filtering out year items in CategorizationFragment to ensure all items are filtered out to maintain data integrity
updated drawing color values for CacheableTextView , CellLayout , and HolographicOutlineHelper to use 0x0 instead of 0x00000000 to improve visual consistency and aesthetics in the application
added OpenGL 2.0 render method checks to ensure proper rendering behavior when using OpenGL 2.0
added import statement and set context for ActionContext in BackgroundProcess . java to ensure proper context management during process execution
hive - 23790 : in case of database , name be already escape in a table ( ramesh kumar via ashutosh chauhan )
phoenix - 4490 increase connection timeout for perf test
added multiple assertQuerySucceeds for the approx _ percentile function in TestHiveAggregationQueries to enhance query accuracy by verifying correct aggregation results
updated default idle timeout value and refactored connection handling in WebSocketChannel to improve default stability and eliminate unnecessary checks for idle timeouts
use user . toplatformaccount ( ) instead of account . name for file sharing
updated InetAddress handling to use generics for better type safety to enhance code clarity and prevent potential type safety issues
refactor playback control view methods for clarity and consistency to improve maintainability and enhance code readability
updated session handling logic to use ` id ` instead of ` session ` to improve clarity and correctness in session management
updated classpaths from getTransitiveClasspaths ( ) to getImmediateClasspaths ( ) in DefaultJavaLibrary . java to ensure all relevant classes are included in the builder
make useexceptionprobability a synonym for good clarity
updated color handling based on icon state in PredictedAppIcon to ensure correct color application based on whether the icon is being themed or not
ticket # 263 : remove dependency injection for password and permission service .
added " centre " to the aliases array in the Middle class to support multiple centering algorithms in the application
added DirectUpload class import and injection method to CommonsApplicationComponent to facilitate dependency injection for managing direct uploads
added space for left and right axes in BarChartActivity , BarLineChartBase , and modified offset calculations in YAxisRenderer to improve visual spacing and ensure consistent spacing based on axis range
added checks for class and source ABI flavors in AndroidLibraryDescription to ensure proper handling of source ABI flavors in library descriptions
added operation event status type to requestParams in OnlineHubService and CompositeLogService to store the operation event status type for better tracking and management
added debug output for method parameter annotations and introduced visibility annotation handling to improve debugging capabilities and ensure only visible annotations are processed
( chore ) camel - jms : replace startbundle with setup and teardown
refactor the classpath creation process to use a variable for better clarity to improve code readability and maintainability by explicitly defining the classpath variable
updated documentLoader . load method to include a separator parameter for better path handling to improve clarity and maintain consistent file path usage across the application
[ flink - 26720 ] [ table ] minor code cleanup and refactored exception message in DataSet . java to improve readability and maintainability
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated error message formatting to escape percent in assertions to ensure proper formatting of stack traces in error messages
fixed - jcache . getresource ( ) method throw npe if close ( ) be call twice . # 3769
change commandcontext log level to info , because it be a technical exception
reordered the initialization of ALPNClientConnectionFactory for improved readability to enhance code clarity by isolating the creation of the connection factory
fixed property value write for < entity > instance ( # 1443 )
do n ' t play notification sound uri if thing be not initialize ( # 6748 )
fix flakiness in contextregisterlistenertest and springmvcclientbeanprocessortest
changed log level from info to debug in LightThingHandler . java to reduce log verbosity for better troubleshooting
in progress - batch - 825 : modify asyncjobmanager to handle rejected job from the db . properties file
updated import statements and method signatures in Reporter . java and ReturnsSmartNulls . java to improve code clarity and consistency by adding additional parameters to the smartNullPointerException method
changed the parameter type from ` Frame ` to ` DataFrame ` in the ` generate ` method signature to ensure type safety by removing unnecessary casting of DataFrame
update multiple package - info . java and module - info . java files files for consistency to improve maintainability and readability of the package configuration
added a check for non - empty physical column names before matching with the default column name to ensure that empty column names are handled correctly in the OrcPageSourceFactory
added support for mixing play parameters in the Engine class to enhance playback quality using method cla
refactor JComponent and SynthTextPaneUI classes for better organization to improve code readability and maintainability
updated calculations for calculated center and test durations in multiple test cases to improve accuracy of test cases for better visual accuracy
removed unnecessary checks for leadingIncludePaths in PreprocessorDelegate . java to simplify the code and improve readability
stringtemplate : fix nullpointerexception in isvectormultimapmultiplication ( )
add search by value for ` ` find ' ' , ` ` findbyvalue ' ' and ` ` findbyvalue ' '
defaultaudiosink : use a minimum value of 48000 when no value be provide
add getformula ( ) and setformula ( ) method to xssfname , to be able to support formula
updated the target value from 60000 to 90000 in HighDimensionsTest . java to adjust the scale factor for improved functionality
fix for stupid check ( wrong condition in simpletypegt ) . also add a test case .
added unit tests for ClassPathXmlJobRegistry ' s context to ensure proper functionality of job name retrieval in the job registry
motionpausedetector : use long instead of float for time
camel - 12320 : camel - restlet - restlet should not be use by default
camel - 14263 : camel - log should use source code generate configurer to avoid reflection configuration .
refactor ChromeTraceBuildListener to encapsulate the creation of ChromeTraceEvent to improve code organization and maintainability by separating event processing logic into a new method
added checks to ensure only non - canceled , non - rejected , and non - canceled limit orders are added to the limitOrders list to improve order management by filtering out irrelevant order statuses
added pixel offset calculations and validation to ensure correct image layout to improve image processing accuracy and handle potential layout errors
update timestamp handling in JrubyEvent and JrubyEventExtLibrary classes to improve compatibility with Ruby ' s timestamp library
added logic to handle paths ending with " / " and modified the return behavior for non - existent paths to ensure correct handling of resource paths in the application context
updated the constructor of ScriptFunctionImpl to remove the " name handle " parameter to streamline the function name for clarity and consistency
bug 62155 - jedittextfield : getscrollamount ( ) return wrong value for horizontal and vertical scroll event
only set guardsstage and stageflags when callerloopscope be not set
test : migrate sniperjavaprettyprinterjavaxtest to junit 5 ( # 4534 )
close URLOutputStream before creating it in tests to ensure proper resource management and avoid potential memory leaks
added entity annotations to Mail . java to enable entity injection for better data handling in the application
updated default values of ` includeTablespace ` from ` false ` to ` true ` and adjusted related command parameter logic to enable or disable the tablespace option based on user - defined settings
added getter methods for metaDataBuffer and valuesBuffer in CountersReader to enable retrieval of metadata and values buffer for improved data handling
added a check for empty files in ScanBatch . java and implemented clearing logic in ScanBatch . java to ensure that empty files are handled correctly during JSON processing
add a check for internalCustomName in failureStrategy when comparing strings to improve error messaging for better debugging and clarity
[ pytorch ] fix pytorch engine on window ( # 1358 )
changed exception handling from ClassNotFoundException and NoClassDefFoundError to a more general Exception and Error in PackageHelper to improve error handling specificity and provide more general error reporting
hbase - 8703 masterfilesystem . getfile ( ) should wait for thread _ safe _ modes to write it to disk ( ted yu )
updated error message formatting in TranslatingJavacPhaseTracer . java to improve clarity of error messages for better debugging
oops , do n ' t cache plugin descriptor in defaultplugincache ( fixes gh427 )
fix status change notification for parent contact .
fix # 455 remove the old withresourceandparams ( ) javadoc ( # 456 )
added integration test for fetching account information from BTCE exchange to ensure the PollingAccountService correctly retrieves account info from the BTCE exchange
added mouse wheel functionality to VDUInput and updated mouseWheel method in vt320 to enhance mouse interaction handling and improve user interaction handling
update librarypath system property in natives . java when needjinput = false
# 883 - remove @ columnhstore - no longer need
add pLAYER _ SKIN _ FLAGS to the metadata index and update related code accordingly to enhance player metadata handling by integrating skill - specific flags
updated the LoadBalancerWithServiceTests to utilize a master URL configuration instead of a request field matcher to improve test accuracy and logging clarity by utilizing the client ' s configuration for master URLs
bugfix : if no member , it could be null , due to miss member - related data
8278289 : j rsuiutils . osversion need to be update for mac o x
added a configuration constant for file suffix and updated the fileSuffix initialization to allow dynamic file suffix configuration and improve flexibility in file suffix management
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure correct computation of hash values and improve test coverage for message selection scenarios
updated the ToolbarPanel class to use an AnimationCallback for animations to improve UI responsiveness and responsiveness during layout animations
replace bindConditionally with bind method call in StyledTextAreaVisual to improve code clarity and maintainability by simplifying binding logic
added declaredPlatforms field and updated method signatures to incorporate CxxBuckConfig and CxxGenruleDescription to utilize the declared platforms configuration from CxxBuckConfig for better platform management
updated parameter accessors in JpaCountQueryCreator and related classes to use ParameterAccessor instead of SimpleParameterAccessor to improve parameter handling for query execution and method execution
added a null check for passwordAttribute before setting it to avoid potential NullPointerExceptions when passwordAttribute is not set
added support for default values of byte and string arrays in DataUtilities . java and corresponding test in DataUtilitiesTest . java to enhance functionality to handle different array types correctly
updated SSL engine creation logic to handle null addresses more robustly to ensure proper host name verification when the address is null
updated assertions in TestFSTableDescriptors to use assertTrue for cache hits to improve clarity and ensure cache hits are validated correctly
danielwagnerhall : delete all cookie , not just the current url , and use the name of the cookie to delete
added a boolean flag to indicate if the launcher transition has not been completed to ensure proper handling of the launcher transition state during gesture state evaluations
added UTF - 8 encoding to HTML tags in ` HTMLListWriter . java ` and ` HTMLWriter . java ` to ensure proper character encoding for title rendering
refactored IndexReader . java to improve code readability to enhance maintainability and simplify future updates
updated Hive stats key prefix maximum length from 200 to 150 and modified path handling in multiple operator classes to optimize performance and ensure consistent path formatting
added a new class ` bug6337518 ` that implements the ` createArrowButton ` method to test the behavior of the ` JComboBox ` with a custom arrow button
renamed TestRandomAccessBuffer class for clarity to improve code readability and maintainability
refactor UserInfoActivity to improve code structure to enhance maintainability and readability of the code
added HomeContentProvider import and updated broadcast notification to notify changes to ensure notifications receive the correct content URI for updates
added stay press functionality to BubbleTextView and Launcher classes to improve user experience by managing press states more effectively
updated ` getFallbackResponse ` method to include a ` Throwable ` parameter to enhance error handling by allowing broader error propagation behavior
8057551 : let the - d flag dump _ all _ generated class to disk and work outside -- compile - only mode
add null check for tags in ChannelUri . java to avoid potential NullPointerException when tags is null
updated JAVA _ REGEX _ SPECIALS string in RegexpUtil and modified test method names in TestSqlPatterns to improve matching accuracy and clarity in SQL pattern matching
add functionality to set and update the action bar title in FileActivity and FileDisplayActivity to improve user experience by ensuring the action bar title reflects the current file state
updated the method in PythonDslProjectBuildFileParser to use ` Iterables . last ( convertedElements ) ` instead of ` Iterables . getOnlyElement ( convertedElements ) ` and added a new test for selecting concatenation lists in ConfigSettingIntegrationTest to ensure correct element type handling and validate functionality of the concat list command
schedule should be schedule 0 per hour instead of minute for clean
added partition validation logic using Warehouse in TransactionalValidationListener . java to improve table structure validation handling for partitioned tables
updated ReplicationHandler and SnapPuller classes to enhance replication functionality and improve code clarity
changed the type of generatedKey from int to long and updated the SQL execution commands to accommodate return values of generated keys and ensure correct key generation in SQL statements
simplified reference retrieval in SimpleReferenceCache by removing redundant variable declarations to improve code readability and maintainability
8274398 : improve error message for shouldnotmatch test
camel - 17962 : camel - core - optimize webclient to reduce thread pool size
deleted the HttpTestAccount001 . java file to remove obsolete test cases that no longer exists
changed catch block from Exception to Throwable in Dispatcher . java and improved logging in DispatcherTest . java to enhance error handling and provide more informative logging for exceptions
camel - 8251 fixed the issue of camel - cxf dataformat do n ' t work in camel 2.0
added handling for ' ~ ' in ClientUtils . java to enhance functionality by allowing ~ permission operations
camel - slack : let use a standard slack delay with java . time . duration
blockutil . blockdrop now fire harvesting event , instead of return directly
updated FormLayout capacity from 4 to 5 * pref in TranscodingTab . java and added a newline for encodedAudioPassthrough to improve layout flexibility and enhance user interface readability
added a new file ` bug8057791 . java ` implementing a GUI with NimbusLookAndFeel to address and test the behavior of JList using NimbusLookAndFeel
updated conditions for setting flags in LambdaToMethod and introduced a new LambdaInterfaceStaticField class with interfaces and methods to improve code clarity and support static fields for lambda expressions
fix a bug where we do n ' t register a websocket method for the eth engine
updated null check for ' to ' variable in ComposeActivity . java to enhance code readability and prevent potential NullPointerException
drill - 2269 : parquet fix to correctly read dictionary field in parquet reader
updated padding logic and positioning in PortraitPagedViewHandler to support landscape orientation to ensure proper layout alignment for different screen orientations
add a new annotation interface ` Log ` and ` LogInterceptor ` for logging method calls to provide a mechanism for logging method invocations in the application
updated the string concatenation format in the QueuedThreadPool class to handle empty trace cases to ensure that empty trace messages are formatted correctly to avoid potential issues
modified CacheGenerator and CacheProvider classes to include Implementation in key and value filtering to enhance cache processing by incorporating cache implementations
added totalFrameSize parameter to the createReferenceMap method to specify the total frame size for the frame map
update TypesafeConfigurator . java for improved functionality to enhance type management capabilities in the application
add a karaf test for camel - graphql . itest karaf do n ' t support itest .
refactor methods in RFE2891944 . java to include new bug tests to improve test coverage for BigDecimal precision during testing
remove urlencoder . encode since it be now handle by urlencoder directly .
replaced the custom UnsupportedPlatformTool implementation with a new class UnsupportedPlatformTool to enhance code clarity and improve exception handling for unsupported platforms
changed loopCount variable type from double to int and added TimeUnit to recovery delay to improve handling of retry attempts and ensure proper time representation
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the map
[ flink - 23790 ] fix unstable test abstractaddressmanager ( # 23790 )
updated separator components and modified their position in VLCVideo . java to improve visual layout and usability for better user experience
update bisq - > bitsquare , fix some broken link
updated the AUTHORITY string reference from " com . klinker . android . talon . provider " to " com . klinker . android . twitter . provider " to align the project with the new project structure
make sure we have a . m2 file for user home and local repository
added buffer binding to VertexBufferObjectWithVAO . java to ensure proper buffer management during rendering
modified ServerHttpSecurity configuration methods to enhance security features and improve request handling
disable postgresstoredprocedureintegrationtests until fix
added default headers management in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration by allowing custom headers
fix : add more detail to ui for userpasswordnotvalidexception
deleted the NoOpConfigPathGetter . java file to remove unused code to streamline the codebase
updated the signingKey initialization to use Bytes . fromHexString instead of Codec . base16Decode to improve key encoding consistency and avoid potential issues with encoding issues
updated FloatUtil to handle FLOAT property and modified inline block logic to improve support for float values and ensure correct rendering of left and right styles
jbrules - 2398 : move the dependency org . optaplanner . core . api . solver into an external module
updated the default header retrieval methods in RestUtils and changed the return type of getDefaultHeaders to MultiMap to improve header handling consistency and encapsulation across the codebase
make encode property in realm configurable instead of a default
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test ` testJobId ` to ensure that ` StepExecution ` correctly returns the job ID for better context and validation
replaced compareTo method calls with Long . compare for consistency to improve code readability and leverage built - in comparison methods
change log level to debug for non error http client .
updated import statements in LegacyAuthenticationHandlerAdapter . java to streamline imports for better clarity and maintainability
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
added checks to ensure only valid filters are removed and log warnings for better clarity to improve error handling and debugging visibility for filter removal operations
added a ` wrap ` method to ` BCPGInputStream ` and removed it from other classes to streamline the code by centralizing the wrap method for better maintainability
replaced DataOutputStream with BufferedOutputStream and ensured flush / close operations with a try - finally block to improve performance and ensure proper resource management during output stream operations
added a new test method ` testSelectAllFromView ` and modified column qualifier handling in ` HiveBaseResultSet ` to improve test coverage and simplify column name handling in Hive data processing
refactor FocusTransitionTest to improve test coverage to ensure more robust validation of focus transition behavior
fix compile error due to wrong gwt dependency
hbase - 23351 avoid a nullpointerexception in counterstatAggregator when sourcetask be not a mapredtask ( # 421 )
replaced the duplicate assignment of the readListener variable to ensure consistent null checks for the readListener variable
added a change listener to the color component in the AppearancePanel to handle color changes when the component changes
updated the constructor call from ` false ` to ` hidden ` in ` TaskHelper . java ` to enable visibility control for the task execution option
http : / / issues . apache . org / jira / browse / amq - 4568 - failovertimeouttest test on slow machine should not use exponential back off
pdfbox - 2852 : fix file lock in ccittifffactory . fromfile ( ) , add test
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize the DefaultParameterHandler for improved parameter handling in the scripting framework
[ fix ] linear scan now respect top level loop depth .
feat : add micronaut parser to handle groovy script compilation ( # 2845 )
fix : improper handling of repeated call to closeconnection ( ) .
initialize serviceAdvisorType to PYTHON instead of null to ensure proper type handling for PYTHON services
avro - 2486 : reduce cache size and add threadlocal to resolvex
changed the type of the ` Path ` constructor to ` List < ? extends Subpath > ` and refactored related operations to use ` ArrayList < String > ` for better performance and readability to improve code clarity and efficiency by utilizing ` ArrayList < String > ` for better performance and maintainability
updated the SendCoinShieldTest to use a random byte array for assertions to improve test accuracy by using a random byte array for assertions
[ skein ] add builder method setpersonalisation ( ) , use in skeinparameterspec .
removed redundant code block from CodeGenerator to streamline logic to enhance code clarity
removed the progress parameter from the scroll method and adjusted related calls to simplify the scrolling functionality by removing unnecessary parameters
changed the pointer variable from private to public and added reset methods to FlatRecordReader to allow external access to the pointer value and allow for resetting the record data start byte position
rename ContentDigestHistory class to BdbContentDigestHistory across multiple files to clarify class purpose and improve logging consistency
use ternary expression to handle int32 and int256 in cast
replaced ` ArrayList ` with a boolean flag ` acceptsAll ` for better clarity to improve readability and maintainability of the code
removed a redundant import statement and added a default value of false to streamline the code for better clarity and functionality
added isAutoIncrement method to multiple data type classes to establish a default behavior for auto - increment columns in Liquibase
added default value for errorText in ExceptionResponse to ensure error messages are displayed to the user
add - xx : + useperfdata to localmanagementtest
replace ` toSimulate . add ( currentStatus ) ` and ` toSimulate . add ( boosterStatus ) ` with ` toSimulate . push ( boosterStatus ) ` to improve clarity and functionality of the simulation process
added ajp binding functionality to the GitBlitServer and updated permissions for AJP connections to ensure proper access to the root permissions for ports using Gitblit
added type coercion for intersection types in TransTypes . java and introduced a new Intersection03 . java class with assertions to ensure correct type handling and assertion logic in the code
rename embedningsetest to embedningsitest to match junit ' s naming convention
added a native method to start the toolkit thread to ensure the thread is only started if it is not already started
localizationfeature : use ForkJoinPool for bundle content storage to reduce cpu usage
update to surface . setvisible ( true ) on window for opengl
recordextractortest : use actual class name in temporary dir
added configuration options for enabling full and solidity nodes HTTP services to allow dynamic configuration of HTTP services based on user - defined settings
added a service property to the GoogleCloudFirestoreTicketDocument and updated the ticket registry to include it to support tracking of service - specific tickets within the ticket registry
modified the Generate class to enhance functionality to improve code maintainability and readability
updated the ScalarFunction class to remove nullable parameters and added new test cases for JSON format functionality to ensure proper handling of null values and improve test coverage for JSON format functionality
updated badge rendering logic to include DOTS _ ONLY for improved notification count handling to enhance notification rendering by allowing customizable width calculation based on specific conditions
changed the method modifier from ' final ' to ' public ' in FreemarkerManager . java to allow for configuration access outside the synchronized block
ww - 4188 add a test to verify that invalid package pattern be throw a configurationexception
refactor deviceUdid assignment to support both macOS and iphone environments to ensure compatibility with different Android SDKs
updated DefaultHttpClientFilter to log a warning instead of an error and modified response handling logic to improve error handling and enhance status management for forbidden requests
refactor the binding and execution logic for the root script and state saving operations to ensure scripts are correctly initialized and executed during the initialization process
added a boolean flag to control the shadow layer of the text paint based on the text turn flag to improve text appearance by adjusting shadow layers when the text is blank
added teardown methods to TestColumnAccess , TestReadEntityDirect , and TestReadEntityDirect classes to ensure proper resource management and cleanup after tests
added a line to retrieve the parser by its name in SecurityNamespaceHandler . java to improve efficiency by accessing the parsers directly
added a new test method ` fastpath ` to ` BoundedLocalCacheTest ` and modified the conditional logic in ` BoundedLocalCache . java ` to improve cache behavior testing and ensure correct behavior for different cache configurations
updated RawConnection interface to extend WebSocketConnection and added flushing functionality to improve data handling and ensure proper flushing behavior in WebSocket operations
added multiple assertions to the SoftAssertionsPerfTest class to enhance testing coverage for soft assertion scenarios
added test failure handling to PythonRunTestsStep and its associated classes to ensure that Python test binaries exit with expected error codes upon failure
refactor xAdvances handling in GlyphLayout . java to improve clarity and ensure correct processing of text rendering based on markup settings
refactor score handling in TestBooleanRewrites to use streams to improve readability and maintainability of score comparison logic
updated the method of obtaining the enclosing class in TypeHandlerRegistry to ensure correct class resolution for anonymous classes
remove playersocketconnection . flush ( ) call , since it be no longer need
added an initialization check and modified the removal of OnDrawListener in Launcher and LauncherAnimUtils to improve performance by ensuring listeners are only registered once and are removed correctly
refactor multiple classes related to index checks and term enumeration to improve code organization and maintainability
updated import statements and condition checks in ReplicaAssigner . java to include NOT _ APPLICABLE condition to improve clarity and prevent unnecessary processing of app liveness checks
updated the return condition to check for MEDIAPARSERV2 to enable compatibility with media parsing by default
include interceptor type in proxy in method bean ( # 7338 )
added assertions and verification for table and partition operations in FolderPermissionBase . java to ensure proper permission management and retrieval of tables and partitions
fix status update due to wrong provider state
updated the color calculation to use a base color value of 180 to ensure adequate a more vanilla color for better color customization
modified the ScriptEngineFactory class implementation to enhance performance and maintainability of the scripting engine
updated the handling of bitmaps in the HolographicViewHelper to include original and outline variants to enhance visual representation and visual feedback in the user interface
refactor request method handling to use ` HttpMethod . fromString ( ) ` and add null and empty checks for ` requestMethod ` to improve code clarity and handle unsupported request methods more effectively
infer last phrase of phrase before set up the tree to avoid unigraming .
added import statement for IOException in IOChannelUtilsTest . java to enable proper handling of IOException during tests
updated class loading logic to handle hive output formats correctly to ensure compatibility with Hive ' s output format management and improve class loading reliability
modified multiple classes related to ChunkListener , AfterChunk , and BeforeChunk to enhance performance and maintain consistency across chunk processing logic
updated condition to check for length adjustments to ensure correct handling of edge cases in the DOMBuilder class
updated methods to retrieve hierarchical undirected graphs and adjusted their names to improve clarity and consistency in the representation of the UI components
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , fixed
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing interfaces with static and default methods to provide a test class for handling static methods in interfaces
camel - 5353 : added support for password in default key selector . thanks to jens kleine - herzbruch for the patch .
removed unnecessary type check for Throwable when ThreadDeath is thrown to simplify error handling and improve readability
updated multiple Java classes related to key management and trust manager functionality to enhance functionality and improve code organization for better maintainability
update JGit version from " 201106090707 - r " to " 201109151100 - r " and modify jars to reverse to reflect the latest version and improve organization of jars
updated the client key assignment logic in HttpClientIntroductionAdvice . java to ensure the correct client key is used when the path is not provided
add transformercontexttests and transformerparser to make it easy to introspect the transformer ' s configuration .
updated BACK _ FACTOR to REWIND _ TIME and modified duration comparison logic to improve precision and accuracy of duration handling
fix a bug with scroll hiding , it do n ' t make the scroll hiding work
modified usage formatting in UtilityCommands and improved command usage handling in DocumentationPrinter to enhance clarity of command usage output and eliminate unnecessary permission checks
corrected the casing of the " collection . map " attribute in CommunityListServlet . java to ensure consistency with naming conventions and improve code readability
updated the setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to improve encapsulation and consolidate merge file handling
remove duplicate @ Override annotations in Observation . java to improve code clarity and maintainability by ensuring consistent annotation usage
polish ` ` update project ruleset ' ' to only rebuild when necessary ' '
fix a synchronization issue when two thread resolve sootfieldrefs with phantom field
make name and type convention consistent in elastic meter registry ( issue # 207 )
added methods for listener management and Gcode command creation in IController and its implementation to improve flexibility and functionality of the controller interface
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify the rendering of huge rules in the application
replace System . out . print statements with TTY . print statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to standardize output handling and improve code consistency
updated multiple Java files to improve code structure and organization to enhance maintainability and readability of the codebase
updated condition to check if frameLength is less than zero to ensure proper handling of frameLength values
added variable ` zeroValue ` and modified return statements in ` IntFloatMap ` , ` IntIntMap ` , and ` IntFloatMap ` classes to provide consistent return behavior for zero values and default values
refactor image handling in ImageDownloadService to use Display . INSTANCE for thread safety to ensure thread safety during image loading operations
added a null check for the registered object in HandlerRegistration . java to improve robustness by preventing null pointer exceptions
removed the native method ` hasNextSibling ( ) ` from multiple classes and simplified the return logic in ` IeNavigator . java ` to streamline the code for better readability and maintainability by reducing unnecessary complexity
add null check for results in RedisDistributedMapCacheClientService to prevent potential NullPointerException when results are null
hbase - 22385 log mobfilecache ' s initialization status if not enable or disable ( # 879 )
modified ColConvCCMTest . java file to enhance test coverage and fix existing test failures
replaced instance variable declarations with local variables for ` target ` and ` allowCovariantReturns ` , and updated method calls accordingly to enhance code clarity and maintainability by reducing instance variable usage and improving scope handling
pdfbox - 4892 : add a constructor that take a page separator , a suggest by michael klink ( mik )
replaced ` Float . toString ` with ` asString ` in ` Json . java ` and added a new class ` X ` with a ` toString ` method to improve string conversion accuracy and provide a structure for demonstrating JSON output
camel - 20297 fixed the unit test error of fileconsumer
added a new Runnable inside EventQueue . invokeLater for asynchronous execution to improve UI responsiveness by ensuring tasks are executed on the Event Dispatch Thread
updated the calculation of maxSize in CompressExtension . java to ensure the correct maximum size is used for text and binary messages
updated steeringValue calculation by removing the addition of - . 5 f to - . 5f in multiple test classes to simplify the calculations by removing unnecessary additions
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to improve compatibility and leverage security library functionality
updated date handling in JdbcSerDe to use LocalDate and LocalDateTime to ensure accurate conversion of dates and timestamps in the application
updated VERSION from 2 to 3 and modified metadata handling for read and write methods to ensure compatibility with version 3 and improve metadata processing efficiency
added JPA dependency configuration and test for Flyway with JPA to ensure proper initialization and integration with JPA for improved database integration
added sorted ( ) method to ClassesImpl . java to ensure class order is consistent and efficient
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and refactored the state comparison logic in ` AbstractLauncherUiTest ` to improve code clarity and encapsulate state management logic in a dedicated method
refactor SharedInformer class implementation to improve code readability and maintainability
refactor memory scope handling to support different Java versions to improve compatibility and maintainability across different Java versions
updated test method from 500 to 5000 in AdaptServerSocket . java to improve stability during testing
modified CaptchaChannelProcessorTests . java file to enhance test coverage and improve accuracy of Captcha channel processing
add conditional logic to update collection before adding an item to ensure that the item ' s own collection is updated correctly during updates
add retry logic for save registry cache file in case of failure to save
updated the parameter used for trackingCFSDir from ` mergeDirectory ` to ` directory ` to ensure the correct tracking directory is used for indexing operations
pmd ( build ) : fix # 107 unusedimports no long report a false positive
added bucket validation for insert overwrite operations in Hive Iceberg to ensure that insert overwrite queries are only performed on bucketed Iceberg tables
updated assertions in BootstrapTests . java to reflect changes in key management and default zone configuration to ensure accurate testing of SAML key availability based on the identity zone configuration
updated checks for anonymous and non - static fields in Excluder . java to ensure accurate identification of non - static fields in the codebase
changed the variable name from ` theAddressie ` to ` addressees ` and added a warning log for unexpected e - mail addresses to improve code clarity and enhance error handling during email sending
tika - 3223 : clean up unused wait comment from tika - eval - app ( # 3222 )
lucene - 2858 : fix nativefslock . release ( ) to throw ioexception instead of ioexception .
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to better organize test - related components within the batch testing context
added a conditional check for unary operators before transforming expressions to ensure only valid operators are processed in the transformation process
updated ByteBuddy initialization to include TypeValidation . DISABLED flag to ensure byte buddy is disabled for validation purposes
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` and add a new file ` ErroneousAnnotations ` to enhance type handling capabilities and improve code clarity
updated lock timeouts in LockModePessimisticReadWriteIntegrationTest and modified global innodb _ lock _ wait _ timeout values in MySQLTableLockTest and MySQLTableLockWithEmployeesInFirstDepartmentOnlyTest to increase lock timeout and ensure proper exception handling during lock operations
do n ' t use logfile for loggingapplicationlistener if it ' s already set
added a method to check if a request is redirected and modified the connection handling logic to improve handling of redirects and ensure proper connection management
added new constants for service and version mapping , and modified microservice configuration to use an EnvironmentConfiguration to enhance configuration flexibility and improve service management through configuration
update step name from proc . getName ( ) to proc . getBeanName ( ) to ensure the correct bean name is used for the process process
updated database path constants to use static constants and modified database deletion methods to improve code clarity and ensure database integrity during tests
updated return statement to use unread count from HomeDataSource to ensure accurate tracking of unread items for the current account
renamed the method ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a disabled test for JRE version to improve clarity of test purpose and ensure compatibility with JRE environment
added a limit parameter to the getAllOrder method and modified the market processing logic to limit the number of items processed and improve the handling of order limits
added a null check for the user before querying user settings to avoid potential null pointer exceptions when user is null
updated the file handling logic in LocalFileSystem and added a test for relative wildcard paths to ensure correct file resolution and validate functionality with relative wildcard handling
added width and height limits for instance bounds in ComponentBuilders to ensure compatibility with larger dimensions on the application
updated CommonsHttpSolrServer to replace BinaryResponseParser with a more generic request parser and added logging for connection manager timeouts to enhance connection management flexibility and improve debugging capabilities
added exception handling for document creation in PrintController to improve error handling and provide more informative feedback during document creation
refactor file path handling in CrateType . java and RustBinaryIntegrationTest . java to use mapping to improve readability and maintainability of file path generation logic
added validation to check if a word is a number and defined a test for it to ensure that only valid numbers are processed in the spell checker
no actual code changes were made to the message variable declaration to ensure consistency in message formatting
added methods to retrieve and show OCFileListFragment from a OCFileListFragment and replaced it with a call to onOverflowIconClicked to enhance user experience by providing quick access to file actions
added error handling in the logReplicationTimeAndConfFiles method call to improve robustness by logging exceptions that may occur during the replication process
updated the parameter order in the update method call to ensure consistency in parameter order
updated StreamerLoader constructor to use MaterialHolder instead of MaterialHolder and modified fileColumns handling to improve flexibility in loading materials from different file columns
updated dependencyBank . java file to include additional library names and utility classes , and modified method names for better clarity to enhance readability and maintainability of the code
added recycling of recyclerable views to AppsContainerRecyclerView to improve memory management and ensure proper view display
add a new test method ` testBuildingBinariesSeparately ` in ` AndroidBinaryCrossCellIntegrationTest . java ` to verify the functionality of building binaries on Android ' s SDK and NDK
add quickfix to path example for baritone . close # 289
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enable proper handling of parsed nodes and resources during procedure creation
added null value vector handling functionality in FilterOperatorUtils and a corresponding test in NullHandlingEnabledQueriesTest to enhance query performance and validate range filtering functionality
added validation for the bootstrap method ' s signature and argument types in JDynamicInvokeExpr . java to ensure correct argument types are used to prevent runtime errors
try to fix the test failure on the ci box
added a line to clear file names in CucumberInstrumentation to ensure consistent handling of file names during instrumentation
updated the type of the contacts list to DefaultRegisteredServiceContact and modified the return statements in the PrincipalAttributeRegisteredServiceUsernameProvider class to ensure type safety and improve the handling of username attributes
added workspace cell padding logic to adjust visibility based on icon size and padding to ensure workspace labels are only visible when it does not exceed defined padding
refactor assertions in ReplicationFactorTest to use a unified assertRf method to improve readability and maintainability of the test assertions
[ gr - 30854 ] llvm be pre - initialized by auxiliaryenginecache because it define llvm # patchcontext ( ) , but llvm do actually not support it .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to enable execution of tests that are not ready for execution
replace RuntimeException with JsonIOException in error handling to provide a more specific exception for JSON - related issues
fix build failure with jdk 9
updated error messages and modified file path handling in the Copy class to improve clarity of error messages and enhance file copying functionality
added a method to check if the segment name is not a high - level consumer segment name to improve validation for segment name types
added startActivity and startActivityForResult methods to ShadowFragment , and corresponding test cases in FragmentTest to ensure proper handling of activities and exceptions in the fragment lifecycle
updated the return statement to return a new DateTime instance from the clockReader ' s current time to ensure accurate date manipulation based on the current time context
add x86 _ 64 - none - linux - android cpu flag to the list of supported cpu type .
added a method to delete account files in the FileDataStorageManager to enhance user experience by allowing users to remove unwanted account files
updated command line option syntax in SchemaCrawlerCommandLine . java to improve clarity and consistency of help command output
add description constructor that take a unique id ; improve test
try to fix bitmap decoding in snapshotthread . patch by jbellis
removed the ` ImmutableList < String > ` from the constructor of ` BuckTarget ` and related methods to simplify constructor and eliminate unnecessary dependencies
[ geos - 9007 ] fixed incorrect range calculation in gwczoomcontextfinder when use a gridsetbroker
added a new constant ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` and modified configuration entry entries to enable dependency tracking functionality to enhance the script engine ' s configuration management by allowing control over dependency tracking
changed the condition from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure the correct request path is validated for authorization checks
gracefully handle already exist table while create a keyspace
improve splash screen background image size and cache size
tuner : resubmit buffer transfer to the tuner if the thread be run .
added HasTests interface to AbstractShBinaryDescription and added a test method for ShBinaryRuleIntegrationTest to enhance testing capabilities for ShBinary functionality in different environments
added conditional logic to set includeString to " db : hsqldb " based on the context to ensure compatibility with HSQLDB syntax in the filter logic
fix javabinloader . fastfill ( ) by remove unnecessary paren .
do n ' t materialize stack trace when it ' s empty .
fix jdk8 build after recent refactor
add test for aggregateannotationcommandhandler ' s duplicate resolution
[ flink - 20865 ] [ config ] add fine - grained . shuffle - mode . all - blocking config option to cluster
fixed fish hook and make it respect blockstate . close # 3853
camel - 14284 : add javadoc to model class for file and ftp component .
renamed method ` getCommandRunner ` to ` getStepRunner ` across multiple classes to improve clarity and consistency in naming conventions
rename boolean useshortnames to boolean compresspackagenames for clarity .
added a check to return early if the items collection is empty to improve performance by avoiding unnecessary processing when no items are available
added a conditional annotation for missing bean in ZipkinAutoConfiguration to ensure bean creation only if it does not already exist
- add support for mdc property in xmllayout a find in lbclassic - 22 contribution
added support for an omit header parameter in multiple response writer classes to control response header management based on request parameters
replaced the use of ` _ id ` with ` getPropertyNumber ( ) ` in ` EscherProperty . java ` and added a new test class ` TestEscherProperty . java ` to ensure correct retrieval of property properties and validate functionality through testing
updated return statement to use the new method call to ensure consistency in code structure and improve readability
modified hierarchy modification logic in FastHierarchy . java and SootClass . java to ensure modifications occur when modifying the hierarchy
replaced manual size checks with null checks for disputes per - trade and disputes per - depositTxIdItems to improve robustness and prevent potential NullPointerExceptions during testing
added an ` getObjectHash ` method and modified the ` retrieveColumns ` method signatures to include a ` boolean ` parameter to enhance object hashing functionality and improve column handling flexibility
wallet : fix test that be n ' t rely on transaction confidence .
fix handling of client - side request header ( # 1489 )
fix craftinghelper . checkcraftingforversions to also filter out ' conditions ' from the json return .
hbase - 26951 region # close should log warn when exception occur
refactor string length comparisons to use a local variable for better readability to improve code clarity and maintainability by reducing repetition
[ java ] do n ' t check for image in a subscription when check for image presence .
updated the destroy method to include an InterruptedException and improved process termination handling to enhance error handling during process destruction and ensure proper termination
added Oracle support to the conditional check in TestDefaults . java to ensure compatibility with Oracle database
camel - 3908 : do n ' t try to connect to the mail store if the store be n ' t connect to the mail store
added token handling logic in Parser . java to check if more tokens are consumed in a document to ensure compliance with token processing requirements and prevent parsing errors
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` en ' ' complete
added a method to retrieve the data file name in the Model class and modified the model initialization logic to improve model handling and ensure consistent usage of the data file format
added email domain property and corresponding getter / setter methods to LdapIdentityProviderDefinition , IdentityProviderDefinition , and IdentityProviderEndpointsMockMvcTests to allow flexible email domain configuration in the identity provider implementation
added new configuration constants for request timeouts and methods to retrieve them to improve configurability and allow for flexible timeout settings in the application
add condition to prevent processing of deferred concepts if they be empty or we have no concept link to saveLater
added import statements and category annotations to RedisServiceRegistryTests . java to categorize tests related to Redis functionality within the test class
updated test cases to use ParameterizedTest and added handling for null and empty patterns to improve test reliability and maintainability by ensuring proper handling of null or empty patterns
added a call to the superclass ' s paintComponent method in OverlayPanel and WaterfallPanel to ensure proper rendering of the component within the UI
removed unused import statements from multiple classes to clean up the code and improve maintainability
updated event handling methods in ContractEventTriggerCapsule and LogEventWrapper to include event signature details to enhance event logging accuracy by providing clearer information about the event being processed
modified filter condition to ensure the file name ends with " _ " to improve accuracy in identifying session names
mapview : use the original background color when clear a rectangle .
refactor error handling logic in PackageBuilder . java to improve clarity and structure to enhance readability and maintainability of the code
removed debug print statements from multiple Java files to clean up code and improve maintainability
updated score assertions in TestFieldCacheSort to check for NaN values to ensure correct handling of invalid score values during document retrieval
[ avmfritz ] fix npe when update deviceprofile entity key ( # 10356 )
added support for zero - time strings in ColumnSnapshotGenerator and created MySQL integration tests in MySQLIntegrationTest to ensure correct handling of zero time values and validate functionality through testing
rename private fields from offererMultiSigPubKey to offererBtcPubKey and takerBtcPubKey in multiple classes to improve clarity and accuracy in the representation of signature types
changed the type of ` vsContext ` and ` vsContext ` from a ` Map ` to a wildcard ` Map < ? , ? > ` in multiple classes to enable more flexible mapping types for context handling and improve code clarity
[ drools - 4762 ] avoid npe when edit a session model ( # 4793 )
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' this . ' to ensure proper configuration is used for the HiveMetaStoreClient instance
added a conditional check to prevent redundant processing when modalness matches mModalness to improve efficiency by avoiding unnecessary operations
added a test for creating a codec profile level and implemented native settings in ShadowMediaCodecList to ensure proper handling of profile levels in media codec configurations
fix # 5460 ( when enter key use , focus be wrong )
added validation for width and height , handled potential OutOfMemoryError , and ensured valid XRSurfaceData instance is used to improve robustness and error handling in image creation processes
updated the thousands separator format from " . " to " \ u00a0 " to ensure correct representation of the thousands in Unicode
replaced integer array with AtomicInteger for loops in AsyncStressTest and StressTest classes to improve thread safety and ensure thread safety during operations
added conditional visibility checks for beta flavors in AchievementsFragment and LeaderboardFragment to enhance user experience by informing users about unavailable achievements
added context properties for access , name , and desc in Search and SearchMethodVisitor classes to ensure proper initialization of the context for processing operations
added sleep calls and modified exception handling to include InterruptedException to improve test reliability and maintain proper exception management
refactor duration handling in DLNAResource . java to ensure correct processing of media duration
camel - 18484 : remove unnecessary mandatory attribute from resequencer xml element .
make tablereader transaction acquisition / reloading more robust , and handle exceptions more gracefully to ensure proper transaction management and error handling during transaction operations
replaced the static key manager type variable with a dynamic method for retrieving the key manager algorithm to enhance flexibility by allowing customization of key manager algorithms
replaced the JavaVisitor implementation with a TreeVisitor implementation for better readability to streamline code and improve maintainability by utilizing the Applicability framework
fix tabbing issue in modern blockmania
replace ` PACKAGE _ PRIVATE ` with ` NONE ` in multiple files to standardize access requirements for package - private access
refactor unhandled method names and improve error handling logic in Check . java and T6199153 . java to enhance code clarity and ensure proper management of unhandled types
update stripes and stripeStats assignment logic in OrcInputFormat . java to ensure correct handling of different data formats for improved data processing
added a null check for the exception before proceeding with further processing to avoid potential NullPointerExceptions when handling exceptions
[ myhentaicomics ] update url scheme from http to https
added command - line options for displaying the current jar version to enhance user experience by providing easy access to the jar version
fix list export for applet with space ( fixes # 3394 )
add rotation default value based on keyboard configuration and update input methods in ConsoleActivity and TerminalView to ensure consistent input rotation behavior across different keyboard configurations and enhance code readability
change the type of ` hq ` from ` PriorityQueue < ? extends ScoreDoc > ` to ` PriorityQueue < ? extends ScoreDoc > ` in ` ParallelMultiSearcher . java ` to ensure proper type handling and suppress unchecked warnings
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential null pointer exceptions during execution
camel - 5014 : added the option to set the headermapfactory class name .
added a missing quotation character to the end of a method in JavaCompiler . java to ensure proper syntax and prevent potential compilation errors
increase the maximum amount of time to configure the jms outbound gateway with a default connection factory or messagechannel .
updated the index passed to the expecting method call from ` i + 1 ` to ` i2 ` to correct the logic for handling array operations
reduce overhead of create the script engine module class loader . add some error check before attempt to register the engine .
added support for the PGStatement class in the PooledConnectionImpl class to enhance proxy functionality for PostgreSQL statements
[ beam - 2157 ] fix cassandraitortest memory flush bug .
reduce log level when there be no more memory .
fix race condition when aggressivefullyexpire be set to true . patch by jbellis ; review by stu hood for cassandra - 1040
fixed - rblockingdeque and rblockingqueue . poll ( ) method do n ' t work correctly . # 3704
remove unnecessary format string from jobinspectcommand output
chore : of - 2652 - clarify javadocs in engine . java ( # 183 )
fix : use entryset . map ( ) in child . getall ( ) for good readability
remove remoting since it ' s not support by the rocketmq api
change condition from numIndexDims to numDataDims in BKDWriter . java to ensure correct handling of data dimension parameters
[ zeppelin - 3241 ] do n ' t print stacktraces to stderr
fix typo : ' funn ' - > ' lt '
removed the ' public ' access modifier from the verifyIdsAreStable method and getNodeId method to enforce encapsulation within the NodeIdAccessor class
server : improve error message when volume can not be attach to a vm .
changed method visibility from public to package - private in ItemWriter . java to restrict access to these methods within the same package for better encapsulation
modified the object instantiation in RoombaHandlerTest from an empty string to " test " to ensure that the test object is recognized as a test scenario for further processing
added a ` toString ` method to the ` ImageNameSubstitutor ` class and created a test for the ` ImageNameSubstitutor ` to improve string representation and ensure proper testing of the ` ImageNameSubstitutor ` functionality
replace FSDirectory with RAMDirectory in TestNorms . java to improve directory management and performance during tests
added a static final float lineHeight based on its value to ensure lineHeight is set to a minimum value of 9999.0 f when it is too small
refactor walletAppKit class for better organization to improve code maintainability and readability
remove legacy hat js file , it be not need anymore .
fix remove of chat transport menu item when user click on it in the chat transport selector
added new methods ` resolve ` and ` replaceTokens ` to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl ` classes to enhance functionality for resolving and replacing tokens in various classes
add nullable check for bsqblockchainexplorer and use it to avoid npe . ( # 4186 )
added a map to manage session attributes and implemented getter / setter methods for attribute handling to enhance session management by allowing retrieval and removal of session attributes
updated assertions in TestDbJson _ List . java to verify the actual bean name and seal to ensure correctness of expected values in bean retrieval
fix npes in monotonicappendinglongbuffer by use initialpagecount instead of pageSize
updated the BatchCommandLineLauncher class implementation to improve batch processing efficiency
added embedded database and transaction manager beans to BatchMetricsApplication to enable support for HSQL database in batch metrics application
rename glowrootloghttpservice to httputilservice to match the new implementation
pdfbox - 2941 : improve relate to the stroke java component , a suggest by oliver schmidtmer
removed synchronization from the close method and added synchronization for segment updates in DocumentsWriter and IndexWriter classes to improve thread safety and ensure thread safety during closing operations
added methods for handling multipleChoiceOptions , validationConstraint , and client properties in UiBinding . java to enhance the functionality for managing multiple selection options and validation constraints
replaced instances of ` dexStore ` and ` owner ` with ` path . toString ( ) ` for consistency across multiple Java files to improve code clarity and reduce potential null pointer exceptions
save : only update the stored copy of the tree if full save
replaced the ` condition ` variable with a ` Pattern ` parameter and introduced a list of patterns to track unique patterns to enhance the flexibility of condition handling by allowing multiple patterns to be processed
replaced explicit generic type parameters with the diamond operator in KrakenAdaptersTest . java to simplify code and improve readability by using the diamond operator
removed import of CharTermAttribute and its associated method from DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
update NBJavacTrees . java file to improve functionality and maintainability of the code
removed unsupported encoding check from VectorizedPrimitiveColumnReader to simplify code by eliminating unnecessary operations
updated conditional checks and logging syntax in HttpSolrCall . java to ensure consistent handling of static admin UI files and improve logging clarity
added a call to destroyMetadataServiceProxy to ensure proper cleanup of the metadata service proxy
fix infinite recursion when maxlevel = 10
refactor message construction in HubChangeExecListener . java to improve clarity and handling of change log registration status to enhance user feedback by notifying when the changelog registration fails
add try harder to test for normal mode
updated CxxPreprocessAndCompileStep to use ProcessExecutor . Result instead of int for compilation result handling to improve code clarity and ensure consistent handling of compilation errors
updated event handling logic in ObjectStore . java to ensure events are set correctly based on the maximum number of events
removed unnecessary checks for validation constraints in ` ValidatedLocalValidatorFactoryBean . java ` to streamline the code for better readability and maintainability
fix issue with remove entity from world after remove them .
remove redundant code in IntrinsifyArrayCopyPhase . java to streamline the logic for handling exact types
enable debug log to investigate gump failure
remove ` WantedAnywhereAfterFollowingInteraction ` from ` Reporter ` and related classes to simplify exception handling by consolidating exception messaging
added checks for account and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that owner and key addresses are valid before proceeding to avoid errors
replaced the command sorting implementation with a sorted order of commands in the ScriptLauncher class to improve command sorting efficiency and provide better user feedback
chore : [ cloud ] update go namespace to match open source ( # 9366 )
replaced multiple ` addProperty ` calls with ` setProperty ` method for better readability to improve code clarity and maintainability by using a more concise setter method
updated AsmLoader initialization to use interfaceClass ' s getClassLoader to ensure proper loading behavior within the interface class loader
pdfbox - 5658 : avoid potential ` ` nullpointerexception : no initial moveTo ' ' exception , by axel howind
updated Java2TypeScriptTranslator to adjust formatting based on definition scope condition to improve code readability and maintain consistent formatting for different class declarations
updated HttpClientTest to use AbstractHandler instead of EmptyServerHandler and added a handler for handling input streams to improve resource management and ensure proper stream handling during HTTP requests
no logical change : remove unnecessary array creation
fix bug : we should use findroot ( ) instead of throw an npe
add apache license heders to the test project
modify image filtering logic to support different image types to enhance flexibility and performance when processing different image types
[ gr - 12901 ] avoid host the jvmci native library in libgraal if it be already in native .
[ beam - 8470 ] remove deprecate dataflow portability api test .
updated response handling in MockPhishingProtectionServiceV1Beta1Impl . java to improve clarity and handle potential null response more effectively
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
refactor CallStack class for improved readability to enhance maintainability and reduce complexity in the codebase
log warn when max - size per _ node config do not allow any data in map
improve error message to be more intuitive
lucene - 3990 : fix thread counting in threadedafusticscorer . getall ( ) ( # 740 )
make sure nethooks return null on error . relate to github # 1313
fix a flaky test due to window . title ( ) change
added default ` makeString ` methods across multipleIterable classes to provide flexible string initialization with a separator
updated the order setting logic in OidcServicesManagerRegisteredServiceLocator to use a default order constant to improve code clarity and ensure consistent ordering behavior
added a weak association rule to the WeakAssociationsAnalyzer and related classes to enhance the validation of weak associations and improve the handling of invalid weak associations
modified the Deflater class implementation to improve compression efficiency and performance
added error handling for IOException in Font . java to ensure proper resource management and prevent application crashes
added a null and empty check for the content parameter in VersionTypeBinding . java to ensure proper handling of empty or null content scenarios
refactor NearbyListFragment to directly return the places list and update related methods to improve code clarity and maintainability by reducing redundant variable and method calls
( chore ) camel - mail : avoid case - sensitive content - type checking
changed the visibility of the AUTH _ MAGIC constant from private to public and modified the return value formatting in the OpenSSHPrivateKeySpec class to allow external access to the AUTH _ MAGIC constant and enhance the format specification for SSH operations
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter and modified folder name handling logic to improve flexibility in updating folder names based on input conditions
replaced specific Hibernate annotations with a wildcard import and added entity retrieval and concurrency handling to improve code readability and maintainability while ensuring proper entity management
updated import statements for DefaultOAuth2RequestFactory and added user approval request handling in TofuUserApprovalHandler to ensure compatibility with the latest Spring Security OAuth2 library and enhance user approval request processing
fixfluxnamingconstrainthandler not apply to tag value ( fixes # 645 )
fix eclipse warn about possible nullpointerexception in quickfix test
6986400 : change cookie to cookie2 in 6980004 fix
fix # 1347 : better error message for unsupported operation
added functionality to display a clear all action in OverviewActionsView and set relevant click listeners to enhance user experience by providing clear all options through a controlled interface
ambari - 21190 . create new cluster stack version ( dsen )
remove memoryleaktest since that be a fragile way to check memory leak . we can detect memory leak in our stabilizer test
updated the return statement to include the localhost conditionally using ` InetAddress ` to improve the handling of local address retrieval for localhost
do n ' t register mvdwplaceholderapi in videobutton if mvdwapi be unavailable
fix partition assignment test by assert cluster size before terminate node
added a SingletonHolder class to manage FFI provider instances to improve resource management by ensuring the singleton provider is loaded only if not using JNA
tika - 2785 : added test for hierarchical file list in batchprocess ( # 2785 )
added null checks and collection handling for object saving in MongoTemplate and new test cases for handling null objects to enhance robustness and ensure proper handling of null objects during database operations
updated position initialization in NodeClass to use NODE _ LIST instead of 0 to improve handling of direct input and successor counts for better processing
added accTradeValue field and its getter method to BithumbTicker class to store trade value for better tracking and representation
add segment name to log for realtime indexing ( # 9187 )
changed the variable name from ` maxParallelThreads ` to ` MAX _ PARALLEL _ TASKS ` and updated the executor service implementation accordingly to improve clarity and maintainability by using a constant for maximum number of tasks
fix concurrent modification bug in fixedbytemvmutableforwardindex
changed the implementation of various dictionary classes from a generic class to a generic class to enhance functionality and maintain consistency across the codebase
added a null check for destBuffer in FlipTransition . java to avoid potential null pointer exceptions during execution
camel - 18151 : camel - jbang - use timed wait to avoid false fail in ci
updated conditional check from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` to correct the logic for determining if the current cycle is greater than the current cycle
increased the seed value for ` generator ` from 6 to 10 in ` JdbcExpiringCodeStore . java ` and modified assertions in ` CodeStoreEndpointsTests . java ` and ` AutologinIT . java ` to accommodate a larger seed for code generation and correctness in tests
added a check for UniqueConstraint in StandardObjectChangeFilter to enhance object change matching functionality for unique constraints
refactor MediaDetailFragment to initialize count and replaced string literals with arrays to improve code readability and maintainability by eliminating redundant checks
catch all exception , logcoverableexception instead of arrayindexoutofboundsexception .
api : add withreferencefilter api to listimages ( # 2887 )
camel - 14284 : camel - jms - use exclude property to disallow error handling on jms endpoint .
added logic to handle specific lines in OpExclusionUtils to ensure all operations are set correctly based on specific conditions
added return statements to the DatabaseCommand class to ensure proper execution flow by indicating a failure condition
[ te ] politician - remove honestpolitician . insert ( ) session variable , it ' s already exist in the session .
[ zeppelin - 3241 ] fix : empty file should be use in shell
camel - 7443 : camel - restlet should use a port , not a 0 port , for the restlet component
remove spurious case for blockid . wind _ sign , fix # 16
set query maximum length to 100Mb in QTestUtil and remove overridden configurations in SessionState to improve query performance and simplify configuration management
changed access modifiers from public to private and refactored related methods for better clarity to enhance encapsulation and improve code readability
updated processor names in Hadoop and Kafka controllers from " writeKafka " to " kafkaSink " to enhance clarity and consistency in processing processor functions
updated the condition for determining the Spark application name in HiveConf and HiveSparkClientFactory to ensure that the application name is validated correctly and to avoid potential null pointer exceptions
fix # 356 - wrong managementclass for included property when use manageclass ( # 356 )
alexeibarantsev : implementing window . maximize , and add maximisewindow handler to the remote server .
reapply : do n ' t ignore main cell ' s buck - out when create projectfilesystem
updated assertion in TestXMLEntityExpansion to check for specific error message to improve error handling by validating the absence of specific errors
update table offset and length calculations to mask out sign bits to ensure consistent handling of integer values within positive range
remove customizable method that never work for direct method handle .
improve boundary check for line render with port .
updated flavor handling logic to support multiple flavors in AndroidBinaryDescription and AndroidBinaryGraphEnhancer to improve flexibility and error messaging for unsupported flavors in build targets
updated buffer assignment from offset to i to ensure correct buffer generation for improved rendering
added new classes ` Property ` and ` PropertySuper ` , and modified ` TestClassResolutionFail ` to test class resolution errors to enhance functionality and ensure proper error handling during class resolution
do n ' t remove shutdown hook if completely _ shutdown be set to true
updated the filter proxy class name from " FilterChainProxy " to " FilterChjainProxy " and modified the constructor parameters accordingly to enhance clarity and consistency in the filter chain handling and logging
fix percentile function to work correctly in - memory array
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser classes to ensure that tables are loaded only if the schema is available before proceeding
updated baseType initialization in DatabaseInfoRetriever and added literalPrefix and localizedTypeName in MutableColumnDataType to initialize default values for improved clarity and functionality
updated link syntax in multiple Java files to use ` @ link ` annotations to improve code readability and maintainability by simplifying link formatting
replaced multiple instances of ` EvaluatorFactory . getInstance ( ) ` with ` ObjectEqualEvaluator . INSTANCE ` and ` ObjectNotEqualEvaluator . INSTANCE ` and ` BooleanNotEqualEvaluator . INSTANCE ` to simplify the instantiation process and reduce boilerplate code
updated target platform configurations from " osx _ x86 - 64 " to " osx _ x86 _ 64 " across multiple files to ensure consistency in naming conventions and improve clarity in target platform configurations
added sound effect handling in AllAppsView . java to enhance user experience by enabling sound feedback on interactions
pdfbox - 2852 : do n ' t throw exception , throw specific exception instead
set granularity for left - axis in the BarChartActivitySinus class to improve precision in chart representation
refactor version comparison logic by introducing a new method ` compareVersions ` to improve code readability and reuse by encapsulating version comparison logic
updated ContextHandlerGetResourceTest to use MavenTestingUtils for OS ALIAS support to ensure tests are only executed for supported operating systems , improving test accuracy
add connection . close ( ) method to Pinotclienttransport and add close ( ) method to the connection class to ensure proper resource management and prevent connection leaks
improve mockappender to reduce time sensitivity
[ beam - 4142 ] improve test failure message
isometrictiledmaprenderer . added license info , small cleanup
fixed itemservice memory leak when item be delete ( it ' s still in use instead of unbind )
refactor configuration and attribute classes for improved readability to enhance maintainability and reduce technical debt
simplified touch event handling logic in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated navigation button handling in NavbarButtonsViewController to dynamically set button dark mode based on user - defined settings
make PolyBenchLauncher more closely throw when the user can not determine the language
6996192 : 6984311 change forget to update vmstructs . cpp for new field _ operands
added BlockFormattingContext parameter to findBox methods in BasicPanel . java to utilize block formatting context for better layout management
added a method to retrieve standard error output from the WorkerProcess and improved the handling of stdout / stderr in WorkerShellStep to enhance process output management and error handling during job execution
added null checks for operators and improved error messaging in CheckedListReplaceAll . java to enhance robustness by handling null operators and provide clearer feedback to users
added unit tests for handling asynchronous write operations in SslConnectionTest to ensure reliable handling of write operations and improve performance during socket operations
added listener registration and initialization for device configuration changes in DeviceFlag and FeatureFlags classes to improve device configuration handling and ensure listeners are properly registered
added import statement for JUnit ' s Ignore annotation and annotated the GatewayRSocketIntegrationTests class to mark the test as ignored due to issue 2.2 . 0 gh - 1114
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and reduce unnecessary dependencies
[ 4502 ] instructorfeedbackeditpage page should focus on the end of the input box
remove unnecessary synchronization in krakenstreamingtradeservice . getsubscriptions ( )
changed print statement from err to out in ChangeableUrls . java to ensure standard output is displayed for Class - Path entries
mahout - 1267 , SparseRowMatrix , SparseRowMatrix . java change the constructor of SparseRowMatrix to include a boolean parameter for random access rows to enhance flexibility in handling random access rows through different vector implementations
usage : create a usage event only when the volume have a pool id
updated file input stream handling and added conditional path resolution based on JT configuration to ensure correct file path resolution based on the current configuration settings
[ beam - 7954 ] update beam test package to import guava - v26.0 jre module
# 1186 memorycallgraphbuilder reset internal state to avoid deadlock
fix npe when join muc by join muc .
add file save check to prevent illegal user action
added FolderSyncActivity to manage folder synchronization navigation to enhance user experience by allowing users to sync folder easily
[ flink - 23737 ] [ test ] fix potential resource leak in testsequentialchannelstatereaderimpltest .
well spanishtreenormalizer now correctly handle number for comma in the word ( well for spanishtreenormalizer ) .
replaced point value reading method with packed value slice retrieval in SimpleTextBKDWriter to improve efficiency by using packed value slices directly
added LocaleRandomizer and its test classes for testing Locale randomness to enhance the randomness functionality for different locales in the application
tika - 3111 -- add more test for mime - types via mime - metadata . xml
update version strings in Installer and AutoUpgrade classes to include " 10.0 " to ensure accurate representation of features and maintain consistent versioning
move the ` AccessController . doPrivileged ` call to encapsulate the ` run0 ( ) ` method execution to enhance security by ensuring ` run0 ( ) ` runs with elevated privileges
updated timeout handling in Http2AsyncParser to account for zero timeout to ensure proper read timeout when block is false by default
updated the default delay value from 120 to 600 in TimelineMetricConfiguration . java to increase the responsiveness for the timeline metrics
update error message to include the previous column name to improve clarity of error messages related to primary key restriction
added Joda - Time formatting to issue fields in ThirdEyeJiraClient . java to improve date handling consistency in processing requests
added a ` PriorityGenerator ` to the ` HeadersGenerator ` class and refactored priority generation methods to enhance header generation efficiency and maintain clarity by consolidating priority generation logic
added a constant for maximum allowable scalar replacement code size and updated the boolean condition to include it to ensure that scalar replacements do not exceed the defined length limit for improved performance
updated the projectionTest array to include Media . DATE _ TAKEN in addition to DATA to display files in the MediaProvider for better user experience
adjusted drawing dimensions in TexturePacker2 to account for image dimensions to ensure correct image rendering by accounting for image dimensions
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to utilize a lazy WebSocket upgrade filter to improve efficiency and reduce unnecessary processing of WebSocket connections
added shutdown method calls for validateSignService and trxHandlePool in multiple classes to ensure proper resource management and prevent potential memory leaks
added RawJsonRequestBody annotation processing to the JaxrsSwaggerGeneratorContext and implemented the RawJsonStringMethod annotation in Echo and TestJaxrs classes to enhance the processing of RawJson request parameters and ensure proper functionality through testing
added a new method ` newTarget ` to create a ` com . android . launcher3 . userevent . nano . Target ` instance to enhance target management by allowing customization of target types
changed the instantiation of ListBeanContainer from an ArrayList to a ListBeanContainer and added a new test class for its functionality to enhance functionality and ensure its functionality is verified through unit tests
hbase - 22752 fix flaky test in testmetricsregionserver
camel - 20225 : camel - core - optimize stream cache on completion to reduce lock contention
fix ( eltonik ) : position must set deviceid ( # 9090 )
fix : use charsource to read first line in Hybridprojectbuildfileparser
added a visitAssignop method to the Attr class and created a new Test class with a failing test to handle assignment operations and ensure proper handling of unknown class types
added a boolean flag ` enableAccountHandling ` to ` FirstRunActivity ` and modified the ` onCreate ` method to check its value to control account handling behavior based on application state
simplify import statements and encapsulate the logic for finding the main polygon component to enhance code readability and maintainability by reducing redundancy
added a path parameter to the DrillViewTable constructor and updated related methods to allow for dynamic path handling in the view handling process
log4j2 - 1343 add configuration for netty allocator and cache
updated the array type check from double array to short array in ObjectInputStream and added a new class CloneArray to ensure correct handling of short arrays and facilitate serialization testing
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE in HiveConf . java and updated LlapIoImpl . java to use this variable to allows for more flexible thread pool allocation for improved performance
disable security service substitutions for jdk 11 +
updated latitude and longitude range checks and added a test for growing polygons in the LatLonGrid class to improve bounds checking and enhance testing coverage for polygon creation functionality
alexeibarantsev : add expectedcondition to invisibility of a selenium element with text
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and modified its implementation to differentiate between insert and overwrite operations for improved file management management
added a test method for obtaining the enclosing object in ReflectorTest . java to ensure that the enclosing object behaves correctly in tests for inner classes
updated configuration value for auto - generated android facet sources from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources " to enable automatic generation of Android facet sources in the project
refactor message handling in HubChangeExecListener to use a formatted string to improve readability and maintainability of the code
[ quicklinks ] add support for override parent link property ( # 13832 )
replaced the @ EqualsAndHashCode annotation with @ ToString and added a toString method in YamlConfigFileDTO to standardize the string comparison and improve object representation for better readability
make use of parameterized type in a waitableserverclientcallconfiguration a it ' s not just java type
refactor ` forName ` methods to include ` CallerSensitiveAdapter ` as a fallback to enhance security by allowing caller - specific class loading behavior
[ ds - 3762 ] check authentication token and use it instead of emptyorempty ( # 3769 )
replaced the use of a generic ThreadPoolExecutor with a specific ThreadPoolExecutorEx class to utilize a more specific abstraction for thread pool execution
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow external access to the method for improved functionality
replaced the HumanTime class with Japanese Date for better date handling to improve code clarity and functionality by utilizing modern Java practices
fix broken link for ` ` spark _ recessive ' ' and ` ` spark _ recessive ' '
updated the RestProxyFactory calls to use ` getUri ( ) ` instead of ` exchangeSpecification ` across multiple services to ensure consistent retrieval of the URI for API requests
simplified output statements by removing unnecessary print statements to improve code readability and maintainability
camel - 17000 : camel - kafka - use autocommit by default
removed lock release logic from LoggingExecutor and updated output statement handling in LoggingExecutor to streamline logging process and ensure proper lock management
suppress compiler warning about rawtypes and deprecate
fix potential concurrency issue with database . closefiles ( )
polish ` ` allow nest type to be configure directly ' '
updated the method call from ` getVirtExTicker ( currencyPair . baseSymbol ) ` to ` getVirtExTicker ( currencyPair . counterSymbol ) ` in ` VirtExMarketDataService . java ` to use the correct ticker currency for better market data accuracy
fix checkstyle issue in camel - core / camel - messagehelpertest . java ( # 5363 )
replace UUID generation with system property retrieval for testId to ensure consistent retrieval of the test ID across different environments
added synchronization to date parsing and parsing processes to ensure thread safety during date parsing and parsing operations
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
updated the height scale setting in FractalHeightMapGrid to allow dynamic adjustment of the height scale based on user preferences
[ netbeans - 3870 ] fix classcastexception in equal ( )
changed default value of dump - partition - id to false to ensure partition ID dump is disabled by default for better debugging
added tests for handling TX outputs in the UTXOSetTest class to enhance testing capabilities for transaction outputs in the transaction system
[ java ] unusedassignment & unusedlocalvariable , add a test for ` ` unused ' '
pdfbox - 4892 : add null check to avoid a npe
ensure previous restart parameter be override in jsrjoboperator ( jsrjoboperator . java )
added a new boolean field ` disallowBatchOnCascade ` and a getter method for it to control batch flushing behavior in the database platform
removed redundant assignment of principal to null and streamlined the principal assignment logic to improve code clarity and maintainability
replaced the core closing process with a runnable thread pool for improved resource management to ensure proper handling of core termination and prevent potential memory leaks
added a null check and visibility setting for mActionsView in RecentsView . java to ensure mActionsView is visible only when fullscreen progress is zero
updated JobParameters initialization to improve handling of null parameters to ensure robustness by providing a default parameter when parameters are null
refactor BasicEntity and TestUtil classes for improved readability to enhance maintainability and reduce technical debt
[ flink - 22954 ] [ test ] add test for getMatcheddevices
fix the issue that log the error of metrictracker when exception be throw ( # 12427 )
add conditional check for max value before calculation mCentralities and create a new EigenvectorCentralityBuilder class to ensure accurate calculation of mCentralities when the max value is not zero
updated LookupIPv6 and LookupNameWithColon classes to use a dynamic port and improved registry creation to enhance flexibility and avoid port conflicts during testing
[ geot - 4677 ] fixed cast to byte when create geometry
fix beacon not be craftable ( # 1878 )
refactor TubeCalc class for improved readability to enhance maintainability and ease of understanding for future developers
disable health check by default and fix health check handler ( # 4027 )
change the type of ` groups ` from ` Class < ? > ` to ` List < Class < ? > ` in ` DefaultValidator . java ` and add validation methods in ` DefaultValidator . java ` to improve type safety and ensure proper validation of group types
added a key headful annotation and modified the selection in JList to address issue 8163161 and improve UI rendering stability
runtime - core : allow speedment application to exit via main method
fix parsing of lexicon version , close # 406
added a call to ReflectionCheckLinker . checkReflectionAccess in JavaAdapterFactory to enhance security by ensuring proper access control
try to fix the unit test error of camel - tc
hive - 2594 : fix regression in spark api for complex input format ( krisztian kasa , review by jesus camacho rodriguez )
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused classes to simplify the codebase
[ netbeans - 1471 ] configuration file should not be modify when workspace be update .
added exception handling around session callback registration and unregistration to improve stability by preventing application crashes due to potential issues
updated index creation commands in TestBackwardsCompatibility . java to ensure compatibility with the latest index formats
[ flink - 27373 ] [ test ] add warmup apis to akkarpcserviceutils
added a retry configuration option for mapreduce max attempts in TestExportSnapshot . java to increase retry behavior for improved performance during export operations
pdfbox - 2852 : fix typo , by axel howind
added a new test class ` SslConnectionTest ` to verify SSL connection behavior to ensure proper handling of closed connections and prevent potential memory leaks
added validation for IPv4 and IPv6 addresses in InetAddress class to ensure that invalid address types throw appropriate exceptions
added test for date serialization in collection using Gson to ensure proper handling of date types with different timezone and locale
updated message handling logic in Message . java to improve efficiency and maintainability of message processing
nifi - 259 : added debug log for generated sql in putdatabaserecord
adjusted maxWidth calculation to correctly account for running width to ensure proper alignment of table output for better readability
pdfbox - 4892 : avoid classcastexception , by axel howind
change the priority of the FormatStringChecker to HIGH _ PRIORITY to ensure consistent handling of formatting string arguments based on user - defined priority
add property to ignore non - final loop variable in a for - each statement .
added PDF export version and full compression settings to PDFExporter and updated sample file paths to improve PDF export functionality and ensure compatibility with the latest preview features
added unit tests for ` LdapUserDetailsMapper ` to verify correct mapping of roles and attributes to ensure correct functionality and behavior of role attribute mapping
add ldap . read . timeout configuration for cloudstack 2 . x
updated TestDescription . java and TestDescription . java files to ensure consistency in code structure and maintainability
refactor ` Pixmap ` , ` ManifoldPoint ` , and ` TextureRegion ` classes to improve code organization and maintainability
replaced ` shouldCacheIterator ` with ` shouldAvoidAllocation ` across multiple classes to improve memory efficiency by allowing for allocation checks
added a condition to check if the state handler is invalidated during gesture state checks to ensure that gesture handling does not proceed when the state handler is invalidated
updated folder creation distance and old rotation parameters in Workspace . java to improve folder creation responsiveness and align with new screen design
[ ci ] use spi to resolve unconfigured oci config
modified Testjsig . java file to improve test coverage and fix existing issues
fix mana be unable to be pick up on terra , close # 3105
doc : generate sample code in the java microgenerator ( # 419 )
add @ suppresswarnings ( ` ` serial ' ' ) to p11tlsprfgenerator
replaced ` tsFileNotValid ` with ` isEmptyFile ` and refactored validation logic to improve handling of empty ts files and ensure correct cleanup of resources
added new classes Switch21 and Switch19 to handle different object formats to enhance type safety and support for different object types in the application
updated error messages in ComparableSubjectTest . java to remove unnecessary clarity to improve readability and maintainability of the test failure messages
fix : compatible behaviour for standalone stream in ooxml , see bugzilla 47792
updated capacity validation logic and improved error messaging in Int2ObjectCache . java to enhance clarity and maintainability of code while ensuring correct capacity constraints
replaced the security filter chain sorting logic with a new configuration and tests for handling filter chain order to ensure that the filter chain order is consistent and validated in the security context
removed ` TimeInForce . GTC ` from the order type in ` BinanceTradeService . java ` to simplify the order type handling by using default time zone
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and simplify the FloatRangeRandomizer implementation to enhance functionality and maintainability by ensuring minimum and maximum values are validated correctly
updated KEY _ SEP value from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to improve the accuracy of key spacing in the build info store
camel - 14284 : camel - core - optimize to json schema generation for activemq component
added error handling for retrieving the bound type in SourceUtils and created a test class for it to ensure robustness against potential null pointer exceptions and verify the functionality through testing
refactor filtering logic by extracting it into a separate method and adding a switch statement to improve code readability and maintainability by reducing duplication
modified artifact name handling and added setup and teardown methods in various classes to ensure proper artifact name processing and cleanup after use
add more logging to track the readability of the ssl cert
modify the default value retrieval logic in mmm Config . java and add a new DnsFallback . java class to enhance flexibility in handling " true " and " dns _ fallback " configurations
add additional logging to defaulttheme to help debug issue
changed the type of the ' success ' property from a boolean to a String for URL and asset in the DepositAddress class to improve data representation and simplify the data structure for better usability
refactor the return statement in WindowsSecurity to use a try - finally block for resource management to ensure proper resource cleanup to prevent potential memory leaks
removed " address " and " phone " from scope settings in CommonOAuth2Provider . java and CommonOAuth2ProviderTests . java to simplify scope management by only including email address
fix # 1430 - wait for thread pool to be close before submit operation .
added new constants for BIG _ DECIMAL _ 182 _ 04 and modified related logic in WLedHandler to dynamically compute hue and saturation values based on the primary color configuration
refactor VectorizationProvider to use a set of valid CALLERS forCaller validation to improve clarity and maintainability of VectorUtil functionality
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to handle JSR instance case handling
subscriptionactivatingsubscriber need to be transaction - aware , but not transaction - aware .
updated SQL query construction logic for data entries in DBMSProcessor . java to improve efficiency and handling of database operations
remove elevation attribute from contactview in api 22 .
renamed the ` typeInformation ` variable to ` identifier ` and updated related method calls accordingly to improve clarity and consistency in variable naming
added a privileged action for file operations in SandboxFileManager . java to ensure that file operations are executed in a privileged context to enhance security and stability during operations
updated Groovy parser and printer to handle binary operations with spacing and initialization to improve the handling of binary operations and ensure proper initialization consistency
updated warning log message in MetaDataFetcher . java to include the class name of the exception to improve clarity of warning for better debugging
fix bug # 55716 - fix reading of unicode string with ' / ' in the javadoc
added a test for downloading a file containing Norway characters in a name to ensure proper handling of file names containing Norway characters
modified AsyncResource and FingerprintScannerSample to use CancellationException for cancellation checks to improve error handling by distinguishing between cancellation scenarios and provide clearer feedback
added a null check for statistics before processing the cache call to avoid potential NullPointerExceptions when statistics is null
added a new test method to remove objects from explicit collections in MongoTemplateTests to improve test coverage for object removal functionality in the template
update copyright year to 2022 ( bug # 2023 )
[ beam - 10670 ] fix minor typo in coder ' s string representation
added functionality to handle the scroll end and force finish based on action in RecentsView to improve user experience by ensuring proper scrolling behavior based on the state of the Clear All button
refactor HiveIcebergMetaHook to use a common map for HBase properties to improve code clarity and maintainability by centralizing property management
updated error handling logic to include a method to check if a address is already in use to improve code clarity and maintainability by centralizing error checking logic
add the classpath parameter to the argument list in TestNestmateAttr . java to ensure proper execution of tests using the specified class path
updated logging mechanism in Grep to use a more consistent verbose schema type to improve clarity and maintainability of schema detail logging
fix some javadoc warning and remove an unused import .
# 1883 - enh : add support for nested use savepoint ( # 1883 )
changed ` fetchSize ` from an ` int ` to a ` ThreadLocal < Integer > ` in ` QueryProcessExecutor . java ` to improve thread safety and reduce memory usage when fetching parameters
fix : do n ' t use backoffidlestrategy for ping pong
refactor handleBlockingCall calls to use a lambda expression for better readability to improve code maintainability and reduce duplication in the handling logic
added logic to set the HDP _ VERSION system property if it is not empty to ensure the application has a valid HDP version for better compatibility
make sure service loader be close when call reload in case of error .
added a DeepCloner class and modified the parameters in ParameterizedRobolectricTestRunner and RobolectricTestRunner to utilize it to improve object cloning capabilities for test executions
added a Boolean annotation annotated with JETTY _ SHOW _ STACKTRACE to ResourceBase . java to disable stack trace functionality in the application
8025595 : object . getprototypeof should return null for host object rather than throw typeerror
refactor class fields to utilize new imports and simplify the creation of well - known klass fields to improve code maintainability and reduce potential errors in class definitions
updated ` JwkKeyListView ` to use ` PublicKey ` instead of ` RSAPublicKey ` and added base64 encoding for mod and exponent in the ` serialize ` method to enhance the data type compatibility and ensure compatibility with base64 format for key management
[ gr - 37684 ] do n ' t spawn isolates for native image if use - only - writable heap
modified MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean functionality
removed import of OrderClassLoaders from MavenPluginCollector . java to eliminate unused dependencies in the project
changed method names from ` validator ( ) ` to ` getOwnerAddress ( ) ` across multiple classes to reflect the functionality of handling owner addresses for better contract validation
http : / / issues . apache . org / activemq / browse / amq - 2840 - activemq main thread should not use block thread
send rangebySCORE command with min and max value as well a min and max to avoid error in binary
fix protobuf issue where sentenceindex and target . index be ignore if use an empty index .
[ java ] handle removal of correlationid in the async command id set more efficiently .
added saveConflict calls to FileDataStorageManager , FileDownloader , and FileUploader classes to ensure file integrity during file operations
[ drools - 7 ] fix raw and unchecked warning in executioncontext
replaced usage of ` StrUtils . splitFileNames ` with ` lucene . analysis . core . splitFileNames ` across multiple filter and related classes to unify file naming for consistency and leverage Lucene ' s functionality
configure remarksreport and useInformationSchema for Oracle and MySQL databases to ensure proper handling of information schemas for Oracle databases
updated the MethodInterceptor constructor to include a handler and added a serialVersionUID to the MockMethodInterceptor to ensure compatibility with the proxy ' s method handling and maintain compatibility during serialization
camel - 20225 : use currenttimemillis instead of new Date ( ) . gettime ( ) in filechangedexclusivereadlockstrategy . java
[ flink - 27654 ] [ sql - client ] fix classloading issue in local executor
added buffer change handling in TerminalView and TerminalTextViewOverlay classes to improve responsiveness of the terminal view when buffer changes
- fix service pid in config file processing , when process config file
refactor freeze operation logic to handle both allowTvmV2 and allowTvmFreezeV2 calls to simplify the logic and ensure proper handling of frozen states when using TVM v2
added an insecure option to the TlsConfig class and updated TlsUtils to handle trust manager creation to allow configuration of insecure connections for improved security protocols
refactor code to use a conditional expression for determining the source path and search subpackages to improve code readability and reduce complexity in package search logic
changed the handling of edge columns from nodeColumns to edgeColumns and added a new edgeIdColumn class to improve the functionality of the EdgeColumnsGDF class for better data representation
added cascade attribute to @ OneToOne annotation in DefaultUserInfo . java to ensure all related entities are persisted in the database
modified the equals method in Message class to improve data comparison logic to ensure proper functioning of equality checks for Message objects
updated JSON body encoding from Unicode to Unicode in AsyncProvidersBasicTest . java to ensure correct encoding of ISO - 8859 - 1 for proper handling of special characters
[ hotfix ] [ test ] remove unused method and field in rocksdbSerializedcompositekeybuilder
added static permissions field handling in ProtectionDomain and its access classes to enhance security protection domain access management by differentiating between static and static fields
fix check for null item in special flower . close # 259
fix for intellij . io . ioexception : last parse index out of bound .
added a connection error popup to the UploadMediaDetailFragment and updated related methods in UploadMediaDetailsContract and UploadMediaPresenter to improve error handling by providing user feedback on connection issues
added a new file ` Issue596 . java ` and modified ` Status . java ` to check for unsupported media types to ensure proper handling of unsupported media types and improve error handling
bitmap : use long bitwise operation to prevent overflow
updated import statements in ImportLayoutStyle . java to improve code organization and maintainability
replaced gitBashConfigValue handling with useStdIn for console input configuration to enhance user experience by allowing standard input from stdin instead of gitBash configuration
replaced mocking for AccountManagerCallback with a more generic TestAccountManagerCallback class to enhance clarity and flexibility of the test implementation
do n ' t cache the enclosing type , just get the one from the universe
renamed methods from ` getProperty0 ( ) ` and ` getEntries ( ) ` to ` property0 ( ) ` and ` concatSeparator ( ) ` in multiple classes to improve consistency and clarity in method naming
removed timeout parameter from the set method call in PutAllCallable to simplify the method call and improve readability
[ issue # 3796 ] fix npe in mqclientinstance ( # 3807 )
[ java ] separate out the generated sourceidentity method so that it be easy to be reuse .
added a new class ` TopTabAction ` that implements a custom toolbar interface to facilitate the display of the top tab in the user interface
camel - 3490 : fixed dubbo - dynamicrouter eip to use reactive / exchange again
updated import statements and annotations in AggregateItemReaderTests . java to improve code clarity and ensure compatibility with JUnit 4 features
[ flink - 23454 ] [ table - common ] add miss generic for procedure in abstractobjecttypetypemap
added functionality to display the number of edits in AchievementsActivity and updated associated URLs in NetworkingModule to enhance user experience by providing a clearer interface for managing edits count
throw illegalargumentexception instead of illegalargumentexception for string . max _ value
refactor DumbMethods to use an absolute value accumulator for better handling ofaccumulated bugs to improve code clarity and maintainability by explicitly managing the accumulation and reporting of accumulated bugs
updated multiple dataset classes to improve naming consistency to enhance code readability and maintainability by standardizing class names
updated exception message format in ProvisionClusterRequest and improved test expectations in ProvisionClusterRequestTest to enhance clarity of credential type validation and ensure proper exception handling
updated the random number generation method in TestVectorUtil . java to ensure consistent random number generation and improve performance
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and updated the time comparison logic to improve precision of date comparison and simplify time comparison logic
add ssl property to testutil , and harden test to verify it
added safebrowsing preferences for downloading files in Chrome and related tests to enhance user experience by enabling safe browsing functionality for file downloads
added null check before setting flight configuration in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when updating flight configuration
added a condition to check if the renderer uses disable transcoding to ensure proper handling of transcoding when the renderer is disabled
modify table comparison logic to handle empty lists gracefully to improve robustness by avoiding null pointer exceptions when diffing empty lists
added a static string for custom ignore tags and adjusted the removal of elements from the iterator to enhance code readability and prevent processing of ignored elements
camel - 17962 : camel - jdbc - optimize lock to handle optimisticlockexception a well .
fix bean definition injection with parent configuration property . fix # 2843 ( # 2844 )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and replaced IDEPreferencesFragment with LimitlessIDEActivity to enhance UI consistency and utilize new UI components for better visual performance
deleted the ClusterNodeInfo . java file which contained Serializable interface for cluster node information to the class is no longer needed for the current implementation
modified return statement formatting in ShieldedTransferActuator . java to improve code readability and maintain consistency
add debug output for standard and legacy ciphersuite in ServerHandshaker . java to improve debugging visibility for server handshakes
added handling for template change in ` ChooseRichDocumentsTemplateDialogFragment ` to manage visibility based on template list size to improve user experience by showing appropriate views when a template is selected
added nodeLabelMap to ImportContainerImpl and implemented label duplicate logic in ImportContainerParameters to enhance validation and error handling for duplicate nodes
created a new file R2303044ListSelection . java for list selection functionality to implement a simple GUI that tests item selection in a list
[ java ] do n ' t need to check keep - alive timeout already in use .
added a null check for mWorkspace in Launcher . java to prevent potential null pointer exceptions
added a new test method ` testCompoundPropertyTwice ` to validate the functionality of compound properties in the execution context
hive - 21130 : add rowcount to the statsrulesprocfactory ' s method ( jesus camacho rodriguez , review by ashutosh chauhan )
fix ( * ) : handle multiple path parameter for curl example
fix warning and minor cleanup . no functional change . clean up a few unneeded code .
replace DistBuildCachingEngineDelegate with CachingBuildEngineDelegate and conditional logic based on remote configuration to enhance caching behavior based on remote configuration settings
updated RuntimeException message to include JSON parsing details to improve error reporting for better debugging
added a debug flag to the logging statement in WidgetsModel . java to enable conditional logging only when debug mode is enabled
updated Console and Scanner classes to improve code readability and maintainability
lucene - 5604 : fix bug that wrong disjunction behavior when setDiscountoverlaps ( )
added conditional method calls to ` mailSender . send ( ) ` using reflection to ensure that the ` send ` method is only called when it ' s valid , improving test reliability
added new exit and quit methods with corresponding properties to Global . java and removed the duplicate quit method from ScriptingFunctions . java to standardize exit functionality and eliminate redundancy in the codebase
[ type : refactor ] fix bug in loan broker sharkdetector demo ( # 5748 )
renamed methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple classes to improve clarity and consistency in method naming
server : fix potential npe in vmware web service ( # 4414 )
corrected spacing in assertions within ResinAcegiAuthenticatorTests . java to improve code readability and maintain consistency
eckey : fix ` bigintegertobytes ` to use fixed value
fix typo : fml . disabledmods - > fml . modstates
refactor account selection logic into a separate method for clarity to improve code readability and maintainability by reducing redundancy
improve error message when get a back to stream fails .
throw an exception if the call fails due to empty result from validator smart contract call ( # 2383 )
updated texture packing logic to handle empty files gracefully to improve robustness by preventing crashes due to empty files
remove unnecessary check if the jndi be not null
updated TARGET _ MB and WINDOW values from 10 billion to 1 billion and adjusted the calculation of the window size to optimize allocation efficiency and ensure proper handling of buffer sizes
fix for ioexceptions that occur during console . write ( )
added a new credentials refresh delay setting in KinesisConfigUtil to improve reliability during credential management
replaced multiple instances of ` AlertDialog . Builder ( ) ` with ` showInfoAlert ( ) ` for title and description information to improve code readability and maintainability by using a dedicated method for showing alert objects
modified the parameter name from " package " to " pack " in the test method signatures to improve clarity and functionality regarding package handling
updated module version from 1.7 . 0 _ 31 to 1.8 . 0 _ 31 in multiple test files to ensure compatibility with newer Jetty versions
added a method to check if a dependency is not provided and modified dependency resolution logic accordingly to improve dependency handling by ensuring only valid dependencies are processed
added a set of streams to prevent leaks when closing the zipfile input stream to improve resource management and prevent potential memory leaks
renamed the ` DATAMATRIX ` to ` DATA _ MATRIX ` and updated related references to improve clarity and consistency in naming conventions
added methods to run an active context and an idle context differently to improve handling of idle events and ensure proper thread management during execution
[ java ] fix typo in method name
replaced ` findAny ( ) ` method with ` findFirst ( ) ` and ` getAnnotations ( ) ` methods in ` AnnotatedDelegate ` and ` SyntheticAnnotated ` classes to improve code clarity and reduce redundancy in method overrides
added support for " ppc64le " architecture in multiple classes to ensure compatibility with ppc64 architecture requirements
updated the error message thrown in RoboMonitoringInstrumentation . java to include a link to improve user awareness of the issue related to activity resolution
increase transaction timeout to long . max _ value for waitwithdead ( )
replaced date instantiation methods with Instant for better time zone handling to improve test reliability and performance by using Instant for date instantiation
refactor BytesRef class for better performance to improve efficiency of BytesRef operations
added a toast message to inform users that the YouTube Player does not work on Lollipop yet to ensure users are aware that the video player is still up to date
fix ( griffin ) : improve error message for unterminated dollar quote , named , and termination .
deploy - canary : fixing npe when use vibration without vibration
updated table border and color settings in DotRenderer . java for better visual clarity and consistency to enhance the visual representation of the table based on foreign and primary key conditions
added a new static final array ` ENCODED _ CONF ` and a method to check if a string is encoded in ` HiveConf ` to improve configuration handling and ensure correct processing of encoded strings
pdfbox - 4892 : catch more stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve certificate validation logic to enhance security and reliability of certificate handling
support use proxy uri in wavefront config ( # 3903 )
added image loading functionality to NetworkedCacheableImageView and updated related classes to enhance image loading efficiency and improve code organization with new features
updated ValueAnimator usage across multiple classes to remove unnecessary parameters to simplify the animation logic and improve code clarity
added a static string for the Gdx controllers version and updated the version string in DependencyBank . java to support dynamic controller versioning and ensure compatibility with iOS
updated theLaunchedURLClassLoader class implementation to improve URL loading efficiency and maintainability
use dataaccessutils . requiresingleresult to check the count of column in a query
[ ds - 3952 ] add no - cache header to login page
updated the string format in warnMsg to use Locale . ENGLISH to ensure consistent formatting of warning messages across different locales
updated the constructor of SolrQueryParser to accept a default analyzer instead of using a default parser to improve flexibility in query parsing by allowing custom analyzer instances
updated copyright year in multiple Java files to 2014 to ensure compliance with licensing requirements and improve code clarity
added a semicolon to the MainTest class to ensure proper execution of the code
refactor TypeContributions class to improve code readability to enhance maintainability and simplify future updates
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of the default size for void column vectors
updated the parameter from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct request name is used for better alignment
remove unnecessary static method ` isTypeMatch ` in ` AbstractConfig . java ` to streamline type matching logic for better readability and maintainability
[ java ] reset timestamp before offering message to avoid unnecessary allocation .
rename method names from ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` and ` maxTrustedIndex ` to improve clarity and consistency in method naming
add a new annotation ` @ nobootstrap ` to handle the case where there be no ` @ bootstrap ` annotation .
hbase - 17492 fix npe in tabledescriptorchecker ( ted yu )
updated commit handling logic in BranchGraphServlet . java to use requestedCommits instead of maxCommits to improve clarity and accuracy of commit management based on requested commits
8024931 : [ test bug ] test javax / swing / jslider / 6794831 / bug6794831 . java do not wait long enough for test result
added a new constant ` BUILD _ ID ` and refactored the caching logic in ` CachingBuildEngine ` to use it to improve code clarity and ensure consistency in build metadata handling
removed unused import of TxInputUtil and TxOutputUtil from TransactionCapsule . java to clean up the code and reduce unnecessary dependencies
removed duplicate markAsDone method calls in HttpProtocol . java to streamline code by eliminating redundancy
added import for TezConfiguration and modified copyInto method to use the default configuration to enhance configuration capabilities for improved data processing
added null check for keyPurposes in TimestampedSigner . java to ensure proper handling when keyPurposes is not initialized
simplified the conditional logic for handling visibility states to improve code readability and maintainability
added a forget method to the OpenALAudio class to manage recent sounds to ensure that the most recent sound is stopped only if it is already in use
fix ` ` positiondiscontinuity ' ' incorrectly report when a new state be close
added new decimal formats and units for number tick units in NumberAxis to improve precision and visual representation of number tick values
refactor the ` TargetsCommand ` class to streamline the construction of ` TargetGraphAndBuildTargets ` to improve code readability and maintainability by reducing redundancy
lucene - 2898 : do n ' t use the filenamefilter in the indexfiledeleter
add hook to check the entity ' s collision bounding box for ladders instead of the texture stitcher .
added a compression level parameter to the ApkBuilder and related classes to allow customizable compression levels for certificate processing
added a test for including static fields in the compiled JAR to ensure that static fields are correctly included in the static context of the compiled JAR
added support for BYTES data type in MetricFieldSpec and related classes to enhance functionality for handling byte arrays in the MetricFieldSpec
update error message formatting to use a formatted string to improve readability and maintain consistency in error message assertions
replaced custom hashCode method with Objects . hashCode for id in Trade . java and KucoinDealOrder . java to ensure consistent hashCode implementation and improve readability
added cache management functionality and additional test cases in SpringDataJPAJoinFetchPaginationTest and ForumService classes to enhance cache management capabilities and ensure proper test coverage for cache updates
pronunciation : fix for pronunciation in non - english locale .
updated FormBody handling in SimpleHttp . java and added new test cases in TestHttpPlugin . java to enhance form processing logic and ensure proper handling of null post bodies
added dispatchers and executor service shutdown for the ping client in ClientSideSlb and ClientSideSlbTest classes to ensure proper resource management and prevent potential memory leaks
modify texture positioning logic in TextureRegion to handle flipping behavior to ensure proper rendering of text areas when flipping or oversized
throw invalidconfigurationexception when there be no discovery strategy factory to create
changed contextPath initialization from final to non - final in MetricsPublisher . java to ensure context path is set to avoid null pointer exceptions
[ bz - 1062501 ] fix projectclassloader . reinittypes ( ) to return a list of class name
added a new BTreeMap root header value in BTreeMap . java and defined a constant in SerializationHeader . java to ensure proper handling of the BTree map root header value
added precompiled header handling and validation checks in AbstractCxxSourceRuleFactory to ensure compatibility with PCH ' s configuration and improve error handling
replaced WeakReference with a custom AccWeakReference to incorporate security context handling to enhance security by ensuring privileged actions are executed with the correct access control context
updated method visibility and added logic in ObjectMap and OrderedSet classes to enhance encapsulation and improve code readability
[ fix ] bug in isdirect flag , it appear to be false .
fix checkstyle issue in unit test / maryclient . java ( # 773 )
updated method signatures to return the local coordinates instead of void to improve method usability by allowing access to the local coordinates
pdfbox -5764 : use limit instead of capacity to reduce memory usage
added a null check before removing the close hook context to avoid potential NullPointerExceptions when context is null
updated border spacing logic in CellLayout and DeviceProfile classes to support different container types to improve layout flexibility based on layout behavior for different folder types
refactor valueNumeric initialization to use a new ValueNumeric class for better abstraction to improve code maintainability and encapsulate value parsing logic
modified the condition to return a deferred response instead of a checked authentication status to ensure that deferred responses are handled correctly in the login process
updated argument checks in StartArgs . java to replace " -- module - start - ini = " with " -- add - to - start " to simplify argument parsing for better clarity and usability
added default partition value handling in DynamicPartitionFileRecordWriterContainer to ensure default partition values are used consistently across the application
[ hotfix ] [ stream ] add null check and assertion for operatorfactory in streamnode
fix : always include classifier in defaultartifact # tostring ( )
camel - 9440 : kafkaproducer should call staterepository . getstate ( topic ) after rebalance ( # 9441 )
[ log4j2 - 3153 ] improve error message when a dep be miss in the classpath
change property name from Gmail _ NOTIFICATIONS _ ENABLED to ENABLE _ GMAIL _ NOTIFICATIONS in the JabberAccountRegistrationWizard class to improve clarity regarding the configuration option
doc : change relative url to absolute url to fix broken link . ( # 118 )
updated the expected message count and iteration logic in LumberjackMultiThreadTest to improve test flexibility by adjusting concurrency based on available processors
fix player - dead state bug ( # 511 )
updated the implementation of the Exchange class to improve performance and maintainability of the code
change @ api / secret _ key parameter description to be consistent with api / secret _ key
refactor switch - case statements to use ' if ' instead of ' switch ' for better readability to improves code clarity and conciseness
polish ` ` remove redundant code ' '
added SQL integrity constraint violation handling and a check for " MV _ TABLES _ USED " in exception handling to ensure that a table is removed if materialized views are used , improving error handling
changed the property key from " githubAccessToken " to " gitHubAccessToken " to maintain consistent casing for property naming
added a new file ` RoboExecutorService . java ` in the ` org . robolectric . android . util . concurrent ` package to mark the class as deprecated for future removal or replacement
add ` ` subgroup ' ' to ` ` subgroup ' ' menu item only when the group be a root
fix service and span name building when use brave . ipa .
8076995 : gc / ergonomics / testdynamicnumberofgcthreads . java fail with java . lang . runtimeexception : ' new _ active _ workers ' miss from stdout / stderr
changed the return type of ` getHostFlavorMap ` and related methods from ` ImmutableList < ImmutableFlavor > ` to ` ImmutableSet < Flavor > ` to improve type safety and simplify the retrieval of host flavors
updated SQL creation command to support different operation strings to enhance flexibility in handling different table creation options
change the background color of the chat view to match the alpha value of 64 .
test : migrate ctiteratortest to junit 5 ( # 4564 )
lucene - 6271 : fix wrongly link the next ( token ) method to the standardtokenizer ' s clear ( ) method .
add a test to demonstrate bug 1312702 .
replaced the generic type of ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` with a generic type ` StateMachineConfigurerAdapter ` to enhance flexibility and error handling when configurers are missing
simonstewart : applying patch from james strachen add a new test class for selenium - backed selenium
ww - 4871 add support for ' % . 0 ' format of double and float
fix aggregatereplica ( ) to always return the current scope
updated touchable insets settings from content to region to improve visual consistency with other UI components
ignore ~ from fencedcodetblock parser , until we can parse it
added socket timeout configuration to manage socket read operations to enhance flexibility and control over socket timeout behavior
added a sleep delay of 500 milliseconds in ElementAttributeTest . java to ensure proper handling of interrupted exceptions
fix 2 findbugs encode warning in httputils
refactor List class for improved efficiency to enhance performance and reduce memory usage
refactored AsyncFileImpl to accept a URI parameter and modified the file handling logic to improve error handling and provide clearer context during file operations
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to enforce stability for better API documentation and usage clarity
nuage vsp : fix npe when there be no vsp device configure on the physical network
rename ` retryUploads ` method and related logic to ` retryFailedUploads ` to improve clarity and consistency in handling failed uploads in the application
updated class version constants from ` classFileVersionJava8 ` and ` classFileVersionJava9 ` to ` classFileVersionJava9 ` to align versioning with the latest Java version requirements
fix for openjdk 1.5 + ( bug # 1583231 )
add removeallheaders method to clear the client header map
replace Vector with ArrayList for adding elements to improve performance and simplify the handling of input and output filenames
updated the default grid column value from 4.0 f to 3.0 f to improve precision in grid column representation
Updated the condition in ` CalcitePlanner . java ` to include a check for ` ! forViewCreation ` to ensure that the logic correctly handles the presence of a defined table within the view creation process
fix regression in test to accommodate japanese date format
[ gr - 21142 ] avoid classnotfoundexception when look up the snippet for a class .
simonstewart : fix the build and make it pass on firefox
updated byteOffset calculation in ByteBlockPool and added a test for maximum allocation size in TestByteBlockPool to improve byte offset handling and ensure proper functionality of allocation methods
changed the ` firstEncoder ` and ` secondEncoder ` fields from static to instance variables and modified the string formatting to use Locale . ENGLISH to ensure consistent handling of locale - specific data and improve string formatting across different locales
do n ' t spin the thread if an unexpected exception occur .
add @ suppresswarnings ( ` ` serial ' ' ) to fix a permission issue
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify the class structure by removing unnecessary dependency on SourcePathResolver
add change save dialog to save and discard change
added checks and error handling for response types in OAuth - related classes to ensure proper access control and provide clearer error messages for unsupported responses
added a chk method call with an index parameter in DrillBuf . java to ensure proper validation before processing data
hive - 13052 : tablemapreduceutil should accept inputformatclass a parameter ( gopal v , review by jesus camacho rodriguez )
updated the append method call in AbstractJRubyMojo . java to maintain consistency in classpath handling
[ gr - 21131 ] sulong : throw proper exception when call llvm . eval ( ) with internal language be miss .
added deprecation checks and updated reserve commit duration logging in ReplicationHandler . java to ensure compatibility with Solr 7.1 and improve clarity of reserve commit settings
rename ` cacheVariableName ` to ` cacheForeignKey ` and update related references and tests accordingly to improve clarity and consistency in cache key management
change the return type of the ` generateECKeyPair ` method from ` long [ ] ` to ` Object [ ] ` and update the method signature of ` generateECKeyPair ` to improve data handling by using ` keyBytes ` instead of a long array
[ flink - 21651 ] [ runtime ] fix the status of suspend in statewithexecutiongraph ' s suspend method
replaced singleton instance of ` RotationTouchHelper ` with a constructor that initializes it to improve flexibility and simplify object creation
[ unifi ] fixed handling of unifiproxyports with third party port
rename ' lwp _ id ' to ' unique _ thread _ id ' across multiple classes to improve clarity and consistency in method naming
remove duplicate entry from offer book list when add / remove offer
update tl version to 1.3 . 2
updated MockitoMethodInvocationControl to handle Class instances and simplified import statements in SystemClassUserTest and SystemClassUserCases to enhance mock handling accuracy and improve code readability
replaced instances of NotLoadedException with a reference to this object in multiple classes to improve exception handling by providing context for not loaded exceptions
replaced the import of DisplayUtils with a direct call to intent . putExtra for file data handling to streamline file data handling by eliminating an unused import
added error handling for file renaming and compaction operations in StoreDirect . java and StoreWAL . java to ensure proper resource management and provide clearer warnings during file operations
added task snapshot retrieval and refactored the stopSwipePipToHome method to use a execute to improve task management and ensure proper handling of task transitions
added hidden functionality to CommandArgumentDefinition and LiquibaseCommandLine to enhance command execution control control based on user preferences
[ hotfix ] [ test ] fix the unstable loggingkafkaprogetest
[ geos - 8125 ] improve support for geoserver . styleinfo and geoserver . geometry . catalog
added permission checks for malicious intents in InstallShortcutReceiver and Launcher classes to ensure proper handling of malicious intents to prevent potential errors
added IDs functionality to TiledMapLoader , AnimatedTiledMapTile , and StaticTiledMapTile classes to enable tile identification within the map loader
refactor Manager class for improved functionality to enhance code maintainability and readability
updated JDBC connection string to include version information in Session . Builder to ensure compatibility with version 0.13 . 0
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance the diff output processing by allowing specification of schema inclusion
camel - 14263 : camel - jmx should use putifabsent instead of putifabsent to avoid concurrency issue .
[ multistage ] improve log for singlebenchmarkrunner warm error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to allow subclassing of the method for enhanced functionality
fix ` ` can not move game ' ' error in some case
added tests for HTTP response content handling in FastCGIProxyServletTest to enhance test coverage for large and slow client configurations
added a start service for reading actions to enable users to interact with the read interactions service
added a conditional check for ' lintClassfile ' before logging warnings for missing annotation methods to improve clarity and control over when to log warnings based on linting preferences
if no port be provide , default to 25
added retry logic for reloading SSLFactory in TlsUtils to improve reliability during SSLFactory renewal and handle potential exceptions
camel - 17962 : fix camel - json - dsl to use : ss instead of : mm
update assertion message in SpyingOnRealObjectsTest to clarify the reason for mocking a private class
added functionality to handle line ending with a specified br tag in InlineBoxing and LineBox classes to ensure proper line end handling consistently across different platforms
fix a nullpointerexception in the unpackcontent class when the file path be null .
added import statement for DocCollection in TopicStream . java to utilize DocCollection functionalities within the TopicStream class
refactor servlet input stream initialization and add a new test method for handling Windows 1250 parameters to improve code clarity and functionality while ensuring correct behavior for multipart form data handling
add property to specify inclusion of all exposure .
added validation to ensure the current graph is a dynamic graph to prevent runtime errors caused by invalid graph types
prevent test from work due to eager bean creation ( # 6404 )
camel - 7999 : add option to suppress exception from jsonpath when use it
fix bug where controllerleaderlocator be n ' t be initialize before start .
updated usage messages in CLHSDB and HSDB to reflect command - line syntax changes to clarify command usage for improved user understanding
updated the configureChunkProvider method implementation in FaultTolerantStepFactoryBean and SimpleStepFactoryBean to enhance fault handling capabilities and improve code organization
[ beam - 8470 ] remove deprecate class write
refactor ` ShadowAccessibilityManagerTest ` to use ` accessibilityManagerInstance ` instead of ` getAccessibilityManager ( ) ` to improve clarity and functionality of the test cases
show sticky bar in group display ( # 6373 )
removed SourcePathResolver and updated JavaSourceJar class to directly extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify class structure and eliminate unnecessary dependencies
refactor enum data type helper to a new class for improved organization and clarity to enhance maintainability and organization of the codebase
updated log path assertion to use File . separatorChar for consistency to ensure compatibility with different file path formats
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency and clarity in naming conventions regarding mapred local work
added support for dropping index tables in HiveMetaStoreClient to enhance functionality by ensuring unsupported operations are properly managed
added a conditional check to update disabled flags for visibility when the visibility is visible to ensure that the overview actions view is disabled when the visibility is not visible
added a conditional to set a specific highlighter for Windows in the Repl class to ensure compatibility with Windows systems and improve syntax highlighting
improve name of xss _ request _ parameter _ to _ http and add optional local variable .
fix bug in hadooppinotfs . listfilepaths ( ) which return null for file path with space
updated the method call to removeCaptureListener in SelectBox . java to ensure proper listener removal during stage processing
change the value of _ metaDataComplete from true to false to ensure proper handling of metadata completion status
refactor ` removeTaskTarget ` method to return void and modify bitmap creation logic to improve performance and ensure proper bitmap handling when removing tasks
added support for specifying release flavor environment variables in JsBundleGenrule to enhance the build process by providing additional configuration options
6500701 : enhance for loop with generic generates faulty bytecode
added tests for handling new line formatting in Javadoc files to ensure proper formatting of new lines in import statements
added functionality to set Liquibase Hub mode in AbstractLiquibaseChangeLogMojo to enhance the flexibility of Liquibase Hub configuration for better user experience
remove unnecessary null check in jsrchunkprocessor and stepbuilder
added a check for the existence of linkDb before adding it to ensure that linkDb is available before adding it to avoid potential errors during indexing
replaced manual method access for setting IndexWriterConfig ' s index thread pool to simplify code and improve maintainability by reducing repetition
modified the SMS address construction to remove the " 5000 " character to simplify the email sending process by removing unnecessary character
added serialization utility for JobExecution in MapJobExecutionDao and created a copy method in MapJobExecutionDaoTests to ensure executions are serialized correctly and maintain the integrity of job execution data
added a new file ` DownloadTest . java ` to implement badlogic tests for image uploads to facilitate testing of image processing via Sprite batch and texture packing
fix track selector language for open source track
updated exception handling in GenericUDFRound to use UDFArgumentTypeException to improve clarity and specificity of error handling for ROUND function arguments
updated managedependencies to use ` versionTag ` instead of ` version ` for managed dependency tags to ensure proper handling of version tags during dependency management checks
add antpathrequestmatcher for web to work around http : / / issues . apache . org / activemq / browse / camel - 220
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
do n ' t generate bean definition for interface that be not part of the interface . fix # 2404 ( # 2404 )
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to instability
changed the access modifiers of SUPPORTED _ THING _ TYPES and ENERGY _ SUBSCRIPTION _ PERIOD in OpenWebNetEnergyHandler . java and OpenWebNetThermoregulationHandler . java to improve code readability and align with new naming conventions
simplify aprendpoint code by remove unnecessary code .
deleted the SunToolkitSubclass . java file , which contained a method to flush pending events to the functionality was deemed unnecessary or redundant in the current codebase
added rotation handling functionality to the DefaultRenderableSorter and Matrix4 classes to enhance the rendering logic by ensuring correct transformation and scaling options
updated import statements and added a new test method for registering wrapper handlers before primitive to improve test coverage and address issue # 165
pdfbox - 2852 : add torgbimage2 ( ) method that convert the raster to a rgbimage
updated URLs in CommonsApplication , PageTitle , and Utils to use BuildConfig instead of CommonsApplication to improve consistency and centralize configuration management across the application
camel - 19033 : camel - platform - http - add health check for platform health test
added a null check for the block position before accessing its state to avoid potential NullPointerExceptions during block processing
added a test method for altering a table with indexes extend primary keys in AlterTableWithViewsIT . java to ensure that the table alterations extend primary keys correctly in the database
replaced the ` offset ` variable initialization with a ` docBase ` value in ` FileFloatSource . java ` and modified assertions in ` TestFunctionQuery . java ` to ensure consistent handling of document offset and enhance test reliability
removed the ID from the fields in MongoRecordReader to ensure the data is cleanly removed before processing
added disconnect method to YeelightHandlerBase and updated connection handling in WiFiConnection to improve connection management and ensure proper termination of the connection
fix auto _ increment support for postgresql compatibility
fix # 4844 : increase synchronization period for sharedindexInformer
cloudstack - 2120 : saving private template detail only when the user vm be not null
shadowbitmapfactory : fix resource leak in image processing
removed deprecated items from LauncherProvider and LauncherSettings to clean up code and remove obsolete constants
move to / org / drools / examples for clarity and consistency
added legendTop and legendTop variables to PieChart . java and modifiedOffsetTop calculations accordingly to improve legend positioning and ensure proper rendering in the PieChart
added a condition to return early if the world transform det value is zero to optimize performance by avoiding unnecessary processing when the world transformation is not detected
added a new file MaryScriptCreator . java to create and print mary scripts for database selection to enable users to read and print mary files from specified paths
added a flow file attribute for the remote source host from the request to facilitate access to the remote host configuration for HTTP requests
fix and delete compaction log file if they already exist
[ netbeans - 4294 ] fix link to component description and license .
aws s3 stream upload : make timeout checker configurable
hbase - 23351 log ` ` no matching procedure find for transition to closed regionserver ' ' warning
updated logging initialization and improved null check in Slf4jSpanLogger and DefaultTracer classes to enhance code clarity and prevent potential NullPointerExceptions
added trimming of whitespace before adding an active option to ensure clean options before processing
added depth effect preference handling to the DepthController class to enable dynamic wallpaper zoom out based on user preferences
updated assertion in OverseerTest . java to check the success count of the overseer ' s stats to ensure accurate reporting of successful overseer actions in test cases
8176542 : remove long - standing test code for osx attribute
refactor ExecConstants to improve code readability to enhance maintainability and simplify future updates
removed the import of ScreenRecordRule and the ScreenRecord annotation from ThemeIconsTest . java to eliminate unused dependencies related to screen recording functionality
added setScanAttributeForPaging method to ScanUtil and updated its usage in TableSnapshotResultIterator to improve scan attribute management for paging based on database connection
fix a bug in request . lowrange , it be unlikely to be large than request . lowrange .
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected and modified cache size estimation logic in AsyncWriteCache to enhance accessibility for subclasses and improve cache size estimation accuracy
update zone ID from uuid to zone uuid to ensure consistency in zone data retrieval
[ zeppelin - 2326 ] fixed encode issue in python interpreter
updated the removal logic in ZipFileSystemProvider to use zfs directly instead of checking for equality to improve efficiency by avoiding redundant checks when removing filesystems
changed the variable name from ` obj ` to ` json ` and updated the ` toJson ` method implementation to improve clarity and consistency in JSON output handling
updated the timeout duration in the soft poll method from 2 seconds to 3 seconds to allow more time for soft operations to complete successfully
fix flaky test : remove listener before / after event
updated classes related to the dial package to improve consistency in naming and structure to enhance maintainability and clarity of the dial - related components
fix indent and add thompsontyler to make it easy to debug
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to incorporate the latest features and improvements in the container
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a new ` TestHook . java ` file to enhance bootstrap class handling and provide testing functionality for loading libraries
fix client launch for patchy . jar not find error when load .
[ hotfix ] [ yarn - tests ] deduplicate yarnclusterdescriptor construction in yarnitcase
add stats per map for no dataIncluded map ( # 15679 )
deleted the AllTests . java file to the test suite is no longer needed for the current implementation
fix for w3c not be able to escape non - ascii character . close # 2373
added a new test class shouldnotStarveMemoryOnLargeStackTraceInvocationsTest to verify memory starvation behavior for large stack trace invocations
updated the method call to use getResultMappingsForRowKey for creating a row key to improve code clarity and maintainability by using a dedicated method for mapping retrieval
added an eventHandled flag to the UIText class to enable event handling in the application
deleted the ` Controller . java ` file and changed the class name from ` Weldby ` to ` WeldModule ` to streamline the codebase by removing unnecessary or misleading class names
tregex : disable capturing of zero width quantifier for empty group
changed the visibility of the ` liquibaseProLicenseKey ` variable from private to protected to allow access to the ` liquibaseProLicenseKey ` variable directly from subclasses
[ mondrian - 1471 ] avoid duplication of measurehierarchy memberreaders in rolapcube .
add a new debug info value update handler for easy debugging
mondrian : fix for bug # 1742230 , document mondrianproperties . jdbcfactoryclass
added support for customizable source paths in Kotlin configurations to enhance the flexibility and flexibility of Kotlin build configurations
added additional alias mappings for BATK , BRAH , and MANDAIC in Character . java and refactored file reading logic in CheckScript . java to enhance functionality and improve readability of scripts and aliases handling
simplified equality checks in ExecutionCommand class and added a method to parse JSON to enhance code readability and provide functionality for processing execution commands
updated Mockito library usage in the project to improve testing reliability and maintainability
refactor OCFile class for improved readability to enhance maintainability and ease of understanding for future developers
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope object
update CSSParser to handle CSS _ NUMBER and CSS _ PERCENTAGE types more robustly to improve type handling and ensure valid parameters are processed correctly
added a new test method ` testLocalIndexReverseScan ` to validate the behavior of local indexing in a physical table to ensure that the LocalIndex functionality correctly returns all rows for the specified table and its physical index
updated imports and method names in BaseAndroidTestCase , BackupHelperTest , LanguageHelperTest , and LanguageHelperTest to improve clarity and consistency in naming conventions
updated toast messages to use localized strings and improved message formatting to enhance user experience by providing more concise and descriptive error messages
refactor loops in RendererUtilities and add a new test method in RendererUtilitiesTests to improve code clarity and ensure correctness of unit tests
replaced iterators with ArrayNode for ask and bid data handling in KrakenStreamingAdapters . java to improve type safety and handle potential null pointer exceptions
filecontentprovider : ignore duplicate column addition during upgrade from 24 - > 30
remove system . err . println flood that break travis ci
added online data size computation and improved handling of data sizes in ConvertJoinMapJoin to optimize the process of processing online and online data sizes for improved performance
updated the ` buildView ` method to use ` Context ` instead of ` LayoutInflater ` and added background resource handling to improve context handling and ensure proper background resource management for UI components
added authentication handling to the SecurityMockMvcResultMatchers class and corresponding tests to enhance authentication flexibility and validate behavior in tests
vpc : set vpcid to null instead of long to support none
[ beam - 10955 ] skip flaky test in 1.11 .
fix the position of intdef annotation on field in the ui module
modified loop condition to ensure actions are only executed when actions are valid to optimize performance by avoiding unnecessary operations
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to utilize the Bitmex streaming API for better compatibility and flexibility
[ task 70475 ] add parent and child orgunits metadata to the relationship endpoint .
* lodcontrol : avoid npe in getnumtris ( ) when spatial be null
lucene - 10266 : fix potential tokenstream stall issue in conditionaltokenfilter
make unsafestorenode unique to avoid graph . unique ( graal - 490 )
replaced the call to ` super . putAddress ( base + offset , value ) ` with ` io . putAddress ( base + offset , value ) ` in ` BoundedMemoryIO . java ` to ensure proper handling of the address writing process
added an assertion to verify that the presence of any matching event in the CasEventRepository to ensure that the event loading mechanism behaves correctly in tests
removed unused parameters ` attributeTemplateName ` , ` attributeLine ` , and ` attributeCol ` from ` AuthenticationAttrProcessor . java ` to streamline the code by eliminating unnecessary complexity
added null key check in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that a null key is provided to prevent runtime exceptions
added a method to set the typeface in the CodenameOneTextPaint class to ensure proper exception handling when the typeface is not set in the runtime
implemented the ` open ` method in multiple pinotfs classes to retrieve input streams to enhance functionality for improved file handling capabilities in the PinotFS framework
simonstewart : remove the deprecated fail ( ) method from the webdriverrunner
modified the conditional structure in SolrRequestParsers . java to improve readability by simplifying the conditional structure
refactor DefaultResultSetHandler to simplify constructor mapping handling and improve readability to enhance maintainability and clarity of mapping logic
updated SQL string format in the assertion to include quotes around the table name to ensure compatibility with SQL syntax for proper compatibility
added filtering logic to the VectorizationContext class to ensure proper handling of filtering behavior based on type information
add miss generic to prevent unchecked cast
updated the constructor of ReorganizeTableStatement to use modifyDataTypeStatement to simplify the code structure and improve maintainability
updated cluster name handling to use a constant and improved retry logic to enhance code clarity and ensure consistent default cluster name usage
improve logging and connection handling in peergroup . do not swallow interrupted exception . resolve issue 284 .
nano : convert stylestring array to style object ( # 867 )
fix block entity data type for binary nbt conversion ( # 1849 )
updated return statement to use " No # toString ( ) " instead of " Use ` String ` to clarify the purpose of the method
8274234 : [ testbug ] shenandoah : make testthreadfailure more resilient
change return type of retryFailed method and add DataProviderRetryAnalyzer and DataProviderRetryTest classes to improve error handling and facilitate testing of failed scenarios
change token return value from 0 to bandwidth in BucketStateIEEE754 . java to ensure accurate retrieval of token data based on the specified bandwidth
simonstewart : make it clear that the webdriver backed selenium interface now implement more method
updated the ` doPrintEntry ` method to remove unnecessary parameter and streamline the warning logic for non - Windows keystore store types to enhance clarity and reduce redundancy in certificate version information processing
[ hotfix ] fix checkstyle violation in taskasynccalltest
added validation for dialog properties and shape and background color in Dialog and Frame classes to ensure proper handling of dialog state states and prevent illegal component state exceptions
changed the ` state ` field to be ` final ` in ` DefaultProjectFilesystem . java ` to ensure immutability of the state field after initialization
refactor Redis connection factory to use RedisStandaloneConfiguration and LettuceConnectionFactory to improve redis connection handling and configuration reliability
add a jabber timestamp to track if a chat room be already in use .
replaced the usage of Callback . Adapter with Callback . NOOP in notifyContent calls to ensure the callback is no longer required for handling cases where no operations are needed
refactor share operation handling by replacing CreateShareOperation with OperationService to improve code organization and simplify share operation management
fix fieldpropertyinject not work if @ inject be not inject ( # 10448 )
updated loop boundaries to use a calculated value of yStart instead of getMinBuildHeight to improve accuracy of height calculations based on user preferences
modify exception handling to return a specific NullPointerException to ensure proper type conversion for NullPointerExceptions
tmi - tiff : add support for interop sub directory ( regression in openjdk 7 ) .
added support for enabling version target graph features in VersionTargetGraphMode and VersionTargetGraphCache to improve flexibility in handling different version target graphs
modified conditional checks for video format in DLNAResource . java to ensure proper handling of video formats during parsing
chore : integrate new gapic - generator - java and rules _ gapic ( # 177 )
added loading functionality to LwjglNativesLoader and modified LwjglApplet to load native native libraries to improve compatibility with the latest JNLP library management
updated CSVStrategy to support customizable escaping and encodings to enhance flexibility in CSV handling by allowing customizable escape formats
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure support for only the Authorization Code grant type and improve test coverage for related scenarios
enhanced error messages in Throwable and SuppressedExceptions to include the current cause and suppresion context to improve debugging capabilities and provide more informative error messages during cause management
added a new SQL query and updated the iterator parameters in DerivedTableIT . java and ClientAggregatePlan . java to improve query functionality and ensure proper iteration behavior
added rSquare mapping and corresponding test in RegressionEvaluator and StreamExpressionTest to enhance the accuracy of rSquare handling in the regression evaluation logic
add new context attribute to mdc when load a servlet context ( # 4465 )
replaced type casting of ` mapWork ` with a local variable ` mapWork ` for better readability and consistency to improve code clarity and maintainability by removing unnecessary type casting
refactor methods in PdfJndiReport , PdfSessionInformationsReport , and PdfSessionInformationsReport to improve image loading logic to enhance code readability and ensure consistent handling of folder and country images
updated caching strategy in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer handling to improve cache management and ensure proper handling of trusted issuers in the authentication manager
check if the resource is readable instead of the existence of the resource in AbstractScriptDatabaseInitializer . java to ensure proper validation of resource validity and provide a failure message when the database initialization fails
sulong : do n ' t cache type for function ' s internal method , a these do n ' t cache the type for the interop
remove unnecessary sleep ( ) from test to fix intermittent failure
added a new file KernCrash . java that implements font rendering with kerning attributes to demonstrate the use of kerning for improved text presentation in the application
added a fail ( ) method call to LinkedHashTreeMapTest . java to ensure proper failure handling during test execution
added a method to retrieve network interface addresses with a prefix to enhance network functionality by allowing specific interface IP addresses
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48928 . ensure that hikaripool can be shut down after shutdown .
updated syncStateSet condition in GroupTransferService . java to use getSlaveAddress ( ) instead of getClientAddress ( ) to ensure correct sync state checks for network connections
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
added a new test class ` Issue247Test ` to validate database operations to ensure correct functionality of the ` getTreeMap ` methods in the database interface
changed the type of the ` results ` variable from ` Set < CategoryItem > ` to ` Set < String > ` and updated the ` doInBackground ` method to return an ArrayList < String > to improve type safety and handle potential interruptions during asynchronous operations
modify max age validation logic to check for today and birth year to ensure accuracy in validating max age scenarios between today and current year
added GrblLookups for alarm and error codes in the GrblController class to enhance error handling capabilities for improved user feedback
updated the scrolling format return logic to handle cases with zero screens to ensure proper label display when there are no screens available
removed the count parameter from the getTrades method in BittrexTrades method and its implementation to simplify the method signature and eliminate unnecessary complexity
removed unnecessary stripAnsi method and modified flush logic in ConsoleReader . java and MemoryHistory . java to improve code clarity and correctness by handling null values more effectively
updated the jdkPath construction to remove the " . jdk " suffix to simplify the file path construction for better clarity and consistency
refactor code to replace direct calls to ` getDescription ( ) ` with ` getType ( ) ` for consistency to improve code readability and maintainability by using a more descriptive method name
8258394 : jfcmodel : use log warn message when configuration fails
check that tolerance be positive to prevent illegalargumentexception
added createView and dropView methods to TestUtil for creating and dropping views to facilitate testing of view privileges in the database
added conditional checks for stable float and double tests based on platform flags to enhance test reliability by skipping unnecessary tests on unsupported platforms
added a new file ` DesktopTaskbarUIController . java ` and modified ` TaskbarManager . java ` to utilize it to implement a custom taskbar UI controller for improved visual effects
added ProgressKeeper functionality to manage task counts in SearchModFragment and ModItemAdapter to enhance UI responsiveness by ensuring tasks are properly updated and removed during UI updates
updated file handling logic in Files . java to improve file management efficiency and maintainability
refactored ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration ` to use ` GrpcServerFactory ` instead of ` GrpcServerLifecycle grpc ` to improve clarity and reduce potential errors related to interceptor handling
refactor DomainAwareServicesManager to extend ServicesManager instead of using @ FunctionalInterface and ChainingServicesManager to enable functional programming capabilities for better service management
fix name resolution for resourceloader and add log
chore : update gapic - generator - java version to 2.1 . 0 ( # 657 )
added grow methods to the Cell class in mmm Cell . java to improve flexibility for customizing cell positioning
replaced ` currentBindings ` with ` bindings ` in ` DefaultInputHandler . java ` to streamline key binding management and improve code clarity
catch exception to prevent test from fail
8220689 : [ testbug ] metricsmemorytester failcount test in docker container only work with debug jvms
deleted the JobParametersPrototype . java file to remove unused or redundant code as it is no longer needed
added a securityEnabled flag to the MappingsTable class and updated related methods to handle security settings to enhance security checks during data connection handling in the MappingsTable implementation
rename constants from APPLE _ SWIFT _ OBJC _ C _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJC _ C _ HEADERS to clarify the purpose of the constant related to object header handling
disable the dump _ to _ file test a it be not need anymore .
continue playback of aws videorenderer if the device be in use eos
[ java ] : do n ' t always set limit in network publication if it ' s already connect .
added a condition to check if output options are no information to improve handling of output options when no database information is available
[ native po ] fix default value for secure connection use 443 ( # 16388 )
updated the DOMOutputOptions class to enhance error handling capabilities to improve debugging capabilities by utilizing XHTML output options
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
publish will now include the retained flag for the event , this be useful for user who want to see the request .
updated JSON serialization keys in EventSerializationTest to include testCaseName to ensure accurate serialization of test cases for better error handling
[ flink - 23454 ] [ table ] fix udf window function name for non - udf system
replaced the import of ` fastparse . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java ` to ensure compatibility with the latest fastparse library structure
make abstractsessioncontext . settimeout volatile to prevent concurrent modification
updated condition check from ` cp . size ( ) = = 0 ` to ` cp . isEmpty ( ) ` and modified the constructor of ` Watcher ` to use a new ` Watcher ` instance to improve readability and encapsulate the logic for handling empty directories
[ multistage ] use AnsiSqlDialect instead of CalciteSqlDialect in sqlnodeconvertcontext
changed log level from debug to trace in FirmwareUpdateService . java to provide more detailed logging for unavailable firmware handlers
added tests for handling null dates and timestamps in ObjectTest . java to ensure that null values are correctly handled and throw appropriate exceptions
refactor string concatenation in StringSubject and update related tests for consistency to improve readability and maintainability of the code
added a test for multiple teams in the UserModelTest class to ensure correct access permissions are used for roles in repository
added a new file ` Test7088020 . java ` implementing a test class ` Test7088020 . java ` to verify the behavior of method invocations with different stack frames
refactor Saml2ResponseValidator to use a HashSet for audience URIs to improve clarity and maintainability of the audience restriction validation logic
updated cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener to ensure local cache is updated correctly during data change events
updated the initialization of ` _ stderr ` to check for null before printing messages to avoid potential NullPointerExceptions when attempting to print to ` _ stderr `
added a new warning constant for stage ordering in BasicEventSimulationEngine to enhance the severity management of stage activities based on their active state
updated the query optimization parameter name from offlineTableConfig to realtimeTableConfig to improve clarity regarding the query optimization process
ambari - 15183 . skip alter table for hbase normalizer when split point be not present ( rlevas )
renamed SavepointV2 and FileStateHandle classes for clarity to improve code readability and maintainability
added BluetoothClass support in ShadowBluetoothDevice and ShadowBluetoothDeviceTest to allow setting and getting the Bluetooth class dynamically
change naming of ` contains ` method to ` containsProfile ` across multiple classes to enhance clarity and consistency in method naming
drools - 2338 ` ` sum ( ) ' ' function should return an error for empty string ( # 2338 )
remove unnecessary graphModel reference and replace it with graph . readUnlockAll ( ) to simplify code and improve readability by reducing unnecessary calls
updated coreNodeName construction to use coreName from nodeProps to ensure correct core name is used for node retrieval
chat activity : add backpressure update to fix miss message
fix TaggerParserPosTagCompatibilityITest . java for improved test coverage to ensure correct functionality of tag parsing functionality
added suppression for the SimpleText codec in BaseVectorSimilarityQueryTestCase to avoid issues with codec compatibility during tests
updated element type checks in mmm Types . java and added a new class T7005671 . java with multiple test methods to enhance type safety and test functionality for different data types
updated superTriangle calculations in DelaunayTriangulator from EarClippingTriangulator to DelaunayTriangulatorTest to improve triangle rendering by using a more appropriate triangle algorithm
added @ Override annotation to multiple classes in the project to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet creation to use builder pattern and improve clarity to enhance readability and maintainability of the test code
fix performance regression for stack overflow ( un ) protection .
Refactored Shadow classes to utilize ShadowSQLiteDatabase and ContentValues for improved code clarity to enhance maintainability and simplify code by removing deprecated methods
replaced initiateGLInstances ( ) with initiateGL ( ) in LwjglGraphics . java and LwjglCanvas . java to standardize the initialization process for better compatibility across different graphics implementations
replaced the bytesPerDim variable with a ByteArrayComparator for better data handling to improve code clarity and maintainability by using a unsigned comparator
added script property to the default locale and modified the instantiation logic for default locale to enhance security by allowing script retrieval and ensure default locale is correctly initialized
updated the method to return the last set text alpha instead of the current text alpha to ensure the view reflects the most recently set text alpha value
corrected a typo in the warning message from " Confimap " to " ConfigMap " to improve clarity and accuracy of the warning message
replaced TestMockMvcTests imports with UaaJunitSuiteRunner ' s allSuiteClasses method to streamline test suite setup for improved maintainability
added trimming of whitespace to various patterns in GzipFilter and GzipFilterDefaultTest classes to ensure clean data and avoid issues caused by leading or trailing spaces
updated the assignment of _ outputType to ensure consistent output type handling
updated regex implementation property from JDK to JONI to use the preferred regex implementation for improved performance and compatibility
replaced LooperExecutor with Executor and FutureTask for asynchronous processing to improve thread safety and efficiency in handling view properties
bug fix , and add a getstyles method in the voice interface .
fix : throw an exception if fail to create a folder
change default bind ip from 0.0 . 0.0 to 127.0 . 0.1
fix typo in handler name ( inoutcamelWorkItemhandler )
pdfbox - 4892 : remove unused import , a suggest by valerybokov
updated text view in AllAppsGridAdapter and renamed WorkModeToggleContainer to WorkFooterContainer to improve UI consistency and clarity in handling UI components
fix some javadoc warning ( use @ deprecate tag )
refactor : handle inheritance properly in defaultjavaprettyprinter ( # 1897 )
[ flink - 17654 ] [ runtime ] fix memory leak in operatoregioncontext
updated format string in QueryByExamplePredicateBuilder and modified replacement logic in StringQuery to enhance clarity in path handling and simplify string replacement logic
replaced evictionCounter with AtomicLong and refactored statistics handling in ConcurrentLRUCache and FastLRUCache classes to improve thread safety and simplify cache statistics management
fix race condition in sourcetab . run ( ) , thanks to ryan gustafson for the suggestion !
update check for destination type to improve clarity in determining if the destination is an instance of Inet4Address
added RuntimeEnvironment initialization for data and source root in MainFrame . java to ensure proper environment setup for the application
add ` ` marketclientenabled ' ' ( for good logging )
[ hotfix ] fix checkstyle violation in tableenvironment
updated timeout handling in MapperBuilderAssistant and MappedStatement classes to ensure consistent timeout settings across classes
refactor method signatures to remove unnecessary parameters to simplify method signatures for improved readability and maintainability
added serializable class for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable the serialization of GeoLocationRequest and GeoLocationResponse for improved data handling
updated Preconditions checks to use BuildArtifact instead of ImmutableSourceArtifactImpl for better clarity to improve code readability and ensure correctness in handling build artifacts
tika - 2278 -- add unit test for xls and fix bug in tika - tika - tika - module
wly - 220 do n ' t trigger concurrent modification on ggbscript
do n ' t write data to the pipe if there be no data
added assertions to check for equality with same toStrings in GuavaOptionalSubject to improve error handling and provide clearer feedback when assertions fail
added a new flag to exclude VERTICAL _ SWIPE _ INDICATOR in BackgroundAppState and modified mid progress logic in ShelfScrimView to improve UI responsiveness when the all apps header is visible
fix a npe in the shader node editor when the navigator panel be collapse
remove feature . mow _ pin _ image and use it for label / classic bbox / label
improve error reporting on exception route , a this be useful for test purpose .
astro : schedule new discovery result at fixed delay to avoid deadlock
simplified the increment logic for ` irrUnit ` and ` pemUnit ` to improve code readability and maintainability by reducing redundant checks
disable hang test until it get fix
fix Guicefactorytest dependency issue . ( # 2365 )
added system feature management functionality to the RobolectricPackageManager to enable checking and setting of system features for testing purposes
added support for augmenting the path property in RCAFrameworkLoader and created a corresponding test class to enhance the functionality of path handling and ensure proper functionality through testing
remove unnecessary log on task . startcancelwatchdog ( )
added a null and empty check for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values
renamed variable ` needInline ` to ` needStartText ` and ` needEndText ` for clarity to improve readability and maintainability of the code logic
fix hang when tel service be down . add public ip to trace server .
updated the database schema change logic for the UPGRADE _ ITEM _ TABLE column type to ensure compatibility with MySQL database type requirements
update error messages in BaseTableDataManager to specify space and write permissions to ensure users have appropriate permissions for index and temporary resources directories
refactor DatasetUtilities class for improved readability to enhance maintainability and reduce complexity in the codebase
added selector ID to the key in the Matcher . java file to enhance the functionality of the matcher by providing more context
updated debug log statement format and corrected transformation logic in GouraudShadingContext . java to improve logging clarity and ensure proper color transformation functionality
updated taskbar visibility logic and added alpha control for smoother transitions to enhance user experience by improving the animation behavior and visibility of the taskbar while interacting with different states
reorganize the order of the parameters in KeyExchange . java for better readability to improve code maintainability and clarity for future developers
added a null check for the JdbcConnection before querying version ( ) in CockroachDatabase . java to avoid potential NullPointerExceptions when interacting with the database
updated file index calculations for improved readability and consistency to enhance clarity and maintainability of the test assertions
added getMediaRecorderingMimeType method to CodenameOneImplementation , MediaManager , and ImageIO classes to standardize the mime type handling across the application components
fix wrong use of shader for enchanter and pylon
changed the bindable filter condition from ' AND ' to ' OR ' in DruidAdapterIT . java to allow logical grouping of bindable filters for improved data accuracy
updated the instantiation of ZkStateReader in CloudSolrServer . java to ensure proper initialization of the ZkStateReader instance
fix break xmp parsing ( external entity , misconfiguration )
added a new interface ClientRegistrationIdentifierStrategy to the OAuth2 client registration package to provide a mechanism for retrieving client registration identifiers in the application
refactor conditional check from ' if ' to ' while ' in UrlHelper . java to improve clarity and ensure all script elements are handled correctly
refactor ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and introduce a new test class ` VarargsAndWildcardParameterizedTypeTest ` to enhance varargs access logic and ensure correct type inference in generic operations
refactor border property handling to use a helper method to improve code readability and maintainability by encapsulating logic
changed reconnect backoff log level from info to debug in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during shutdown
updated import statements and modified project attaching logic to handle HubRegisterResponse to improve clarity and functionality of project registration handling
replace byte manipulation with Byte . toUnsignedInt for byte conversion in various classes to improve code readability and consistency by using a more suitable unsigned integer method
[ issue # 5489 ] fix checkstyle violation ( # 5489 )
updated cachingBuildEngineBuckConfig to use caching instead of ENABLED to enable caching functionality based on build engine settings
changed the rangePannable property from true to false in CategoryPlot to disable range pannable functionality for better user experience
fix work mode switch not appear in all apps view
changed access modifiers of variables from static to private for GLCaps and GcodeRenderer variables to improve encapsulation and ensure proper access within the class
added handling for CancellationException in FunctionTest . java to improve error handling for cancellation issues
change the constructor visibility of JarFileResource and JarResource constructors from private to protected to allow subclasses to access and override constructors for better flexibility
fix documentation for track selection .
added a loop to wait for unseq merging in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseq merging operations
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to reflect the correct currency representation for user trades
added @ Table annotation to the Post class and modified test methods for Hibernate DTO projections and JPAD results to improve data handling consistency and clarity in data retrieval testing
refactor Unicode class to improve data handling to enhance readability and maintainability of the code
refactor ` installAutoInstance ` method to utilize ` Service ` for improved service handling to enhance the integration of Hive server components and ensure proper handling of interactive features
fix a syntax error in the SendHeadersFirstPublisher class to ensure proper execution of the delegate method
camel - SSE - changed key method to return a nullable string instead of a nullable string to support flexible handling of sensitive data in SSECustomerKey
added support for BIG _ DECIMAL value in RangePredicateEvaluatorFactory to enhance the functionality to support more precise numeric values
update inner methods to use ` javacProcessingEnvironment ` instead of ` inner ` to ensure correct handling of processing environment parameters for improved functionality
remove debug code that slip through
added support for APK3 in the playback control and streamlined playback state transitions to enhance compatibility and improve code clarity during playback transitions
[ localnode ] fix the json output of the response
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement , DiskFileItem , and FileUpload classes to address deprecation warnings for these classes
added a test method ` testSelectInto ` to validate SQL statements and SELECT statements in ` IoTDBExtendTemplateIT . java ` to ensure correct functionality of SELECT statements and enhance test coverage for different data types
refactor RTimerTree class to improve code readability to enhance maintainability and simplify future updates
updated package declarations for various classes from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graphbuilder ` to better organize the code structure and maintain consistency across the codebase
[ fix # 3358 ] fix width calculation in jme3 gui
updated client thread pool and scheduler initialization in ClientConnector . java to improve thread naming and configuration clarity for better debugging
changed visibility of JScrollPane and resultPane from protected to private and added error checkbox functionality to enhance encapsulation and improve user interface flexibility
add phone number to user doc in / docs / scimuser
changed class access modifiers to public for DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes to enhance encapsulation and prevent singleton methods
added null checks for responseMap and error handling in JsonHttpPropertyRequest and URLStreamProvider to improve error handling and ensure proper status code handling
refactor SolrRequestHandler class structure to improve code readability and maintainability
fix : testng - 475 : ignore non - default parallelism option
add a maven module , and fix some javadoc warning
add handling for SCARD _ E _ NO _ SMARTCARD in the error check to improve error reporting related to smart card presence
added @ SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary sysout checks for improved debugging
camel - 6295 : fix the issue of bindyvaluesPairfactory to be more conservative with the spring framework
disable preference now that it ' s useless and it ' s useless .
updated the parameters of ` runAndCheckException ` to accept a ` ThrowingRunnable ` instead of a ` Runnable ` to improve flexibility by allowing the use of a ThrowingRunnable as a parameter
updated hash calculation to handle null values in CrawlURI to avoid potential NullPointerExceptions when parameters are null
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws sdb
updated version from " 4.1 . 1 " to " 4.2 " and refactored related methods in LiquibaseXMLTransformer and Jailer classes to improve versioning clarity and enhance type handling in data processing
bug 60614 - http ( s ) test script recorder : add good default cert expiration time
threadhandler change frame time to be more accurately reflective
drill - 8092 : fix pagination for table that have non - default pagination .
added null check for IMetaStoreClient and created a test for handling compaction failures to ensure proper error handling and behavior when the FindNextCompactRequest client is null
updated ` ShadowFragmentActivity ` to call ` onSaveInstanceState ` on fragments to ensure proper handling of fragment state updates during fragment operations
removed unnecessary line breaks in BatchResourceFactoryBean . java to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure correct color references are parsed for Android users
added handling for NoResultException in AbstractJPAQuery and created a test for null behavior in AbstractStandardTest to improve robustness by logging exceptions and ensuring unique results are correctly retrieved
add parent to the communities collection on add ( )
updated depth preference retrieval to use LawnchairApp to ensure depth effect is accurately retrieved from the Lawnchair application
removed unnecessary import of ProcessTools in LocalManagementTest . java to clean up the code and improve readability
removed parameter from the updateTotalEnergyAverageUsage method and its calls to simplify the method interface by eliminating unused parameters
fix the tostring ( ) method of extensionstack to handle null values
2 . x : remove the subscriber from the flatmap when it be cancel ( # 6245 )
added connection manager timeout handling to MultiGetRequest and ControllerStarter classes to improve request timeout management and provide better logging for connection timeouts
reformatted the initialization of AndroidPlatformTarget for better readability to improve code clarity and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to use the more appropriate test class for model testing
removed redundant fetchers from EdgeSyncCursor and TenantResourcesEdgeEventFetcher to streamline event handling by eliminating redundant code
added a test to ensure output hash is not calculated when cache is not writable to improve cache behavior and ensure output hash is correctly generated when not using cache
camel - 14284 : camel - netty - allow to configure use bytebuf a the default value
updated the method call to use Warehouse for altering partitions to ensure accurate handling of table schema changes
updated the IllegalArgumentException message to specify that the Vertx instance must be created with the preferNativeTransport option set to true to improve clarity and accuracy of error handling during domain sockets creation
add a new test class for color type handler ( # 588 )
refactor StreamEx class for better performance to improve streaming efficiency and reduce execution time
removed query timeout settings from SessionImpl . java to streamline timeout handling by eliminating redundant settings
added a new file ` StaticLoggerBinder . java ` that implements logger factory binding to provide a structured way to register static logger factories in the application
hbase - 10651 remove cellutil . clonefamily call , it do n ' t work well with put / update
added dynamic orientation handling in TaskbarManager based on window configuration orientation to ensure proper layout updates when orientation changes
fix bug : xmpp . occupant . getick ( ) return null when try to remove non - xml character .
updated the longStackPut method signature in StoreDirect . java and added two new tests in Issue265Test . java to ensure correct handling of transactions and validate functionality under version 0.9 . 7
added @ SuppressWarnings ( " mutable " ) annotations to multiple classes to suppress warnings related to mutable usage in the code
jbrules - 2842 : fixing unit test that break the build
updated audio and subtitle track checks in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability and maintain consistency in audio and subtitle handling
refactor NBWriteServlet to accept an unlimited boolean parameter and update related constructors to enhance flexibility in handling write limits during asynchronous operations
replaced the method ` updateTotalDifficulty ( block ) ` with ` updateTotalDifficulty ( block ) ` in ` BlockchainImpl . java ` , and added a test for invalid block total difficulty to ensure accurate total difficulty handling in the block import process
simplified action handling for playback actions based on player ' s current window seekability to improve code clarity and maintainability by removing unnecessary conditional checks
fix synchronization issue with jcesecurity class .
be b0dfe80 : be b0dfe80 : be b0dfe80 : be b0dfe80 : be b0dfe80 : fix an offset bug in allappsview .
added a check for the presence of a colon in the key alongside the existing index check to enhance the validation logic for processing headers in HttpURLConnection
added PrincipalResolver dependency to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration class to enable support for principal resolution in multifactor authentication
updated DelegationTokenResponse to use Noggit ' s JSONParser for parsing JSON body to improve consistency and support for character encoding handling
added a method to remove trailing slashes from a StringBuilder in IoUtil to improve handling of trailing slashes in buffer operations
added methods ` matchesAny ` to ` PatternsMatcher ` for pattern matching functionality to enhance functionality and testing of pattern matching behavior
hbase - 26643 addendum improve readability of loadincrementalhfiles
added blockfading event handle for water potion ( # 1687 )
updated the order of parameters in the beginOrAdjustReorderPreviewAnimations method call to ensure consistent animation behavior during drag operations
refactor calculations in ContractStateCapsule and ResourceProcessor for improved readability to enhance code clarity and maintainability
added read unready handling to AsyncContentProducer and BlockingContentProducer to ensure proper handling of asynchronous requests and improve logging clarity
added a null check for the weight field in DocumentDictionaryFactory to ensure that a mandatory parameter is provided for weight field functionality
added binary name variable substitution and test for Info . plist variable in AppleBundle . java and AppleTestIntegrationTest . java to enhance the build process to support dynamic plist variable expansion and ensure it works correctly on macOS environments
fix the laser bullets not be able to render up , also fix the laser bullets not show up sometimes .
cast the adaptOrder method to Object and adjust casting accordingly to ensure proper type handling and avoid potential ClassCastException
added a new file ` PreParseGrammarTest . java ` to test XML grammar parsing to ensure proper functionality of XML schema grammars by using the XMLGrammarPreparser
8025289 : include ` ` doclint : missing ' ' warn in com . sun . tools and package
added FontManager import and font overriding logic to ExtendedEditText to ensure custom font rendering for the text input field
added a null check for the user in AuthorizeTag and implemented a test for unauthorized access to ensure proper handling of unauthorized requests when a user is not found
camel - 8241 fixed the issue of camel - cxf with supplementary uri
add a new method ` setUpData ( ) ` in ` JDBCGeometryTestSetup . java ` to ensure proper setup sequence for data setup processes
removed the import of DumpHandler from MultipartFilterTest . java to eliminate unnecessary dependencies and streamline the test code
added a check to prevent restoring attempts when the backend is closed to ensure proper error handling and state management when a task is interrupted
tidy up remotejmeterenginecache , and remove main ( it ' s only use for testing ) .
use string . join to avoid potential npe
added display metrics to the QualifiersTest and updated related test cases to ensure accurate testing of default qualifiers and improve test coverage
[ java ] add cluster memberid to service heartbeat counter and add it to consensus module .
updated the calculation of numAttributes based on the version check to 19 to ensure compatibility with version 21 and higher
modified the return statement to handle negative and positive infinity cases and updated the hash function to ensure proper handling of edge cases and improve hash function accuracy
( chore ) camel - ajax : avoid spamming log output for initial continuation
add a new route ` / authenticate ` to the ` AuthenticityController ` for handling authentication requests to enable users to access the authentication token through the application
make loweringphase work even if the node be already remove by loweringphase . assert that the node be still alive .
updated the logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for the HttpClient request implementation
update track selection to prefer content over technical preference .
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the serialization process
geot - 4353 : crop image with bound box on screen ( # 4353 )
[ log4j2 - 1348 ] fix javadoc for unitofworkfactory
added a new variable ` allAppsCellWidthPx ` and updated its usage across multiple classes to improve clarity and consistency in handling app icon and icon sizes
update tika - mail to use content - disposition : name from the body if it ' s not blank
updated the URI generation in ThumbnailsCacheManager to use local ID instead of remote path to improve clarity and accuracy of thumbnail generation process
added support for setting and resetting the input stream in the Source class to ensure proper handling of input stream operations when supported
fix fail test with ` ` jdk ' ' build .
ambari - 20774 . provide option to disable show error stack on the error page ( oleewere )
server : fix the issue that domain deletion fail on shutdown
remove unnecessary null check for frem / drem call in sparcarithmeticlirgenerator
[ drools - 6272 ] restore compatibility with kie 5. x api
refactor onRequestPurchaseResponse to use a Runnable for better asynchronous handling to improve responsiveness and responsiveness of the purchase error handling process
[ beam - 2157 ] increase default timeout of unboundedsourcesystemtest to 1 second .
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and ensure proper handling of resource names
deleted two files and added classes MrefStat and MrefStat1 with relevant methods to introduced new class implementations for improved lambda method reference statistics
added a StringUtils import and modified scope handling in DependencyInsight . java to ensure valid scope values are formatted correctly
added error handling constants for no trades and bad status in BTCETradeServiceRaw . java to improve robustness by handling specific error messages more effectively
( chore ) camel - core : replace junit with hamcrest assertion
payment protocol : add a method to retrieve all the payment protocol request url .
[ optaplanner - 383 ] improve error message for invalid collection element type .
removed redundant line setting folder info in FolderPagedView . java to streamline code by eliminating unnecessary duplication
do n ' t free buffer when write to jfr .
refactor null value handling in BasicAbstractTuple to improve clarity and enforce type safety to enhance code maintainability and enforce type safety for null values
replaced nio file handling with input resource management for linter configurations to improve compatibility and flexibility when reading linter configurations
refactor updateBackgrounds ( ) and updatePaddings ( ) to a post with a Runnable to ensure background updates are executed on the UI thread
fix incorrect number of call to oninventorytick . close # 2593
added a new case OCELOT _ BABY to the PlayerEvents class to handle OCELOT _ BABY event handling in the application
[ flink - 23454 ] [ state ] add the public evolving annotation to the statettlconfig
added null check for prepared statements and adjusted index handling in Array and PreparedStatement classes to ensure proper handling of null values and maintain index consistency
[ java ] clarify description command for java archive recording .
replace double quotes with single quotes in string concatenation to ensure consistency in string formatting
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class to verify JSON serialization functionality for snapshot functionality
add a new method ` removeTheTxAndBlock ` to encapsulate transaction invalidation and invalidate logic within a test class to improve code organization and facilitate testing of transaction management
[ cbo ] add the ability to turn on / off to the ipcamera ( # 8047 )
removed the ` NoSuchBuildTargetException ` import and related method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify the code by eliminating unnecessary exceptions
refactor ChangeLogIterator to accept separate ChangeSetFilters as parameters to enhance flexibility in handling change sets during initialization
make sure we do n ' t exit with non - guest exception .
use system property ` ` OPT _ OUT _ TRACKING ' ' instead of env var
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
updated the logic to handle spacing in annotations within the SpacesVisitor class to improve readability and maintainability of the code
# 2727 - enh : add copy method to ebean . cache . servercacheoptions ( # 2274 )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to ensure the border is not visible on floated elements with overflow
updated the handling of ActionGraph to TargetGraph in WorkspaceAndProjectGenerator and ProjectCommand to ensure compatibility with the new project structure and improve graph management
updated the variable name from " LIVE _ URI " to " PROD _ URI " and added logging for the error message to enhance clarity of the URI and improve error handling during host exceptions
updated resource path handling and improved exception messages in SpringResourceAccessor . java to enhance clarity and consistency in resource path resolution and error reporting
[ smart ] fix Smarthomeunits ' s tostring ( ) method and add new unit test .
updated vertexMask retrieval to use getMaskWithSizePacked ( ) method to ensure compatibility with size packed mesh attributes
deleted the Tls12SocketFactory . java file to remove unused or redundant functionality from the project
improve performance of teex ` ` teh ' ' entry resolution ( # 3949 )
added a check for Robolectric compatibility mode in ResourcesTest . java to ensure compatibility with Robolectric testing framework
fix for double precision on firebird
added null checks for dataSource and transactionManager initialization in DefaultBatchConfigurer to improve robustness by preventing null pointer exceptions
test : add mockito - mock module to integration test ( # 588 )
chore : update randomness and add timeout to integration test
no effective change - refactor to use try syntax
updated TermScorer instantiation to conditionally set scores based on scoreMode to ensure compatibility with score requirements when scoring is not needed
dataflowmetrics : initialize jobmetrics with null metricupdates ( # 13052 )
server : fix listvirtualmachine api to support listvirtualmachine api ( # 4441 )
updated the object inspector initialization to use a target object for improved handling of expression nodes to enhance the efficiency and clarity of object inspectors in partitioned operations
added a method to remove build artifacts and corresponding test cases to ensure proper cleanup of outdated build artifacts before execution
added logic to update the selected row selection interval if it is greater than zero to ensure the selection of the selected row is consistently applied to the user interface
replace assertthrows arraystoreexception . class with assertarraystoreexception in our integration test .
refactor PropertySource class for better organization to enhance maintainability and readability of the code
add user - agent parameter to http builder ( # 4027 )
refactor session creation and creation logic to use a computeIfAbsent method to improve thread safety and reduce redundancy in session management logic
modified assertions in IssueTest . java to include an additional error message and changed the results set implementation from a HashSet to an IdentityHashMap to improve clarity of tests and ensure consistent data provider behavior for better performance
fix bdc . read ( ) when file have no content - type specify .
add event to prevent dtests from be delay due to incorrect activation request
remove unnecessary space , and add miss @ override annotation
added updateTaskViewsSnapshotRadius method to RecentsView and TaskView classes to ensure correct handling of snapshot radius updates for the task view
add logging functionality for generating Swagger for 3rd party services to improve traceability and debugging during swagger generation
changed return type of the put method from void to int in ArrayMap . java to enable method chaining for better functionality
[ flink - 26550 ] [ connectors / kafka ] increase default kafkaproducer wait timeout
mq push consumer should send back a normal message when retry fails
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy by preventing duplicate header additions
added package access check in EventListenerList . java to enhance security by ensuring package access is properly validated
added a new ` CustomAdapter ` class and modified ` onCreateView ` method to include application list and image lists to enhance the user interface by integrating application data and image views
updated the applyIcon method to handle nullable Task parameters to improve flexibility in applying icons when a task is not provided
fixed potential resource leak in downloadmanager . getdownloadstates
fix sqlexecastconverter to properly push the inserted statement to the stack
added JUnit test annotations and refactored execution context handling in HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to enhance test coverage and simplify the execution context management process
refactored DataInputStreamWithTimeout to improve poller handling and error handling to enhance code readability and prevent potential thread interruptions during the polling process
added a new ENABLED _ TS case to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable tracking of thread execution based on the number of threads
updated UpgradeCatalog150 . java file to enhance database upgrade functionality
rename testnet3 ( ) to createoldtestnet ( ) to make it more generic .
desktop : do n ' t update selection state ( fix npe )
updated onboarding preferences handling and added null safety in AppsDividerView to improve code reliability by ensuring onboarding preferences are checked for null before use
updated HdfsIndexOutput to extend BufferedIndexOutput and modified related methods for flushing and writing to improve resource management and simplify the write logic
pdfbox - 2184 : avoid call to setclip ( ) if the path iterator be complete , a suggest by oliver schmidtmer
removed synchronization check for localAddress in SocketChannelImpl . java to improve performance by avoiding unnecessary method calls when the channel is open
refactor TemplateTransformer to use a separate method for adding multiple values to improve code readability and maintainability by reducing duplication
added a method to check if the operating system is Windows and simplified rename handling in the Wallet class to improve code clarity and maintainability by encapsulating the rename logic in a dedicated method
replaced the usage of ` ALPHABET ` with a constant ` CHECK _ DIGIT _ STRING ` and updated related references to streamline the string handling and improve code readability
refactor code to introduce a boolean flag for execution type handling to improve type safety and ensure correct execution type handling
removed unnecessary field storage check in IndexingChain . java to streamline the code for better readability and performance
fix ( sql ) : fix timestamp _ sequence when use within where clause
simplify stack trace handling by removing unnecessary condition checks to improve code readability and maintainability
doc : fix ignore host header in the abstractgcsprocessor ( # 4366 )
replace assertInitialized with waitUntilInitialized in ConnectionPoolTest to improve responsiveness by waiting for initialization state
changed default directory context from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistent retrieval of directory locations without using null values
replaced size method with filterCount and updated data handling in FaultTolerantChunkProcessor and related tests to enhance clarity and functionality of filter count management
added tabbing support for files and improved error handling in T4994049 to ensure proper formatting and reporting of file descriptors during Javadoc execution
replaced multiple instances of checking for WindowsTerminal with a single assumeTrue method to enhance code readability and maintainability by reducing redundancy
[ # 8042 ] remove useless check ( # 8043 )
adjusted calculations for newSelection and movement factors in AllAppsView . java to improve accuracy of selection criteria and message positioning
bugfix # 243777 , do not initialize threadinfo if not track result availability
added data model loading and updating logic in DataModelManagerDialog and ExportPanel classes to enhance data model management and improve handling of database connections
replaced writeBufferSize with a static final WRITE _ BUFFER _ SIZE and simplified string conversion methods to improve code maintainability and readability by using a consistent constant for buffer size
lucene - 2633 : fix indexwriter to be more careful about file length when there be no document index
validate bone data only if we have a pointer . validate
refactor FileDisplayActivity class for better readability to improve maintainability and ease of understanding for future developers
avoid warning about unsupportedoperationexception while fill in stack trace .
fix : label height calculation should be average to 0 ( # 3640 )
replaced singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing display configurations
optimize the processing of quoted strings in ` valStr ` to improve code clarity and efficiency by eliminating redundant checks
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ` for converting string values and added new test cases in ` ServletHandlerInterceptorTest ` to improve handling of trace IDs and ensure that the preHandle method does not assume the parent span ID is present
updated ` ServerDatagramConnectorTest ` to use ` testSmall ` and ` testBig ` methods instead of ` name ` to enhance test coverage for HTTP / 0.9 and improve connection handling
refactor assertion statement in TestSqlEntityProcessorDelta . java to correct substring calculation to ensure accurate extraction of the COUNTRY _ CODE _ s response
modified caching logic in Cache . java to improve performance and efficiency of data retrieval
updated variable names and changed scopes in ResourceSetRegistrationEndpoint to improve code clarity and ensure proper scope management
modified the ` doBefore ` method to remove unnecessary exception declaration and updated the searcher initialization logic to improve code clarity and ensure consistent handling of searcher messes up its counting logic
added persistent JTable functionality to the GcodeTable class and implemented a data button to enhance user interaction by allowing dynamic row addition in the table
use config . getconnecttimeout ( ) instead of hardcoded value
updated error handling and modified path length checks in various classes to enhance code clarity and ensure proper handling of certificate path lengths
updated TestMediaService class for improved functionality to enhance media service testing capabilities
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK to the messages class to provide a link to the help help help
added new file MarketsPrintTool . java to filter and print market currency data to enhance the application ' s functionality for currency sorting
validate component name to only contain alphanumeric or dash
added methods to register security key start and complete methods in AccountProxy and HttpAccount classes to enhance functionality by allowing user authentication handling through a unified method
modified the ServerSpanThreadBinder class implementation to enhance thread safety and improve performance
updated the user pointer retrieval method and modified the bounds in BulletPhysics and BlockItemSystem classes to improve consistency in referencing user pointers and adjust the bounds for better functionality
[ netbeans - 4294 ] fixed number format in csv2shape format
replaced callGasWord with gasCost in VM . java and removed unused imports in Program . java to improve code clarity and reduce unnecessary dependencies
refactor parameters handling in the Parameters class to improve code readability and maintainability
added a method to ignore null values in the PiePlot class to improve handling of null values during pie plots
refactor resource loading logic to streamline the loading process to enhance readability and maintainability of the code
updated the character value from ' _ ' to ' - ' in the TaggedPdfReaderTool class to correct the character representation for better readability and functionality
bug fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48737
added a userModified variable to the LoginSamlAuthenticationProvider class to track user modification status during authentication
added a new file TestSealedObjectNull . java for testing SealedObject equality to ensure that unseal objects are correctly comparing with null values to maintain expected behavior
renamed the onOpen method to succeeded in ConnectPromise . java and updated its usage in WebSocketClientConnection . java to improve method clarity and better reflect the operation of handling WebSocket responses
fix for 1.17 regression ( 1.17 regression ) on v1.17 . 5
added a lastTradeId tracking mechanism for trades and updated the Trade class to include an ID to ensure trades are processed in order and maintain consistent data representation
added error handling when closing the HMS connection to ensure proper resource management and logging when closing the HMS connection
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 45528 . resolve bug in glowserver
updated device profiles in DynamicGrid . java for Nexus 5 to ensure accurate representation of the ICON size in the application
2 . x : fix npe when call count . disconnect ( ) twice .
replace type ' s newInstance method with ReflectUtil ' s newInstance method to improve instantiation handling for SynthContext
fix bug # 4635 _ 01 and # 4635 _ droptexture _ operator handling
savetask : do n ' t delete empty project file on cancel
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during concurrent access to these methods
make sure mutablelogevent be not lost when add them tomtpmanager
replaced LengthLike with NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure proper handling of negative length values
remove unnecessary user parameter from createContext ( ) in multiple resource classes to simplify code and improve readability by reducing unnecessary calls
fix the issue that methodirbuilder never throw caughtexceptionref in jimple body .
updated JUnitRunner and AndroidPlatformTarget to improve string handling and include Android SDK directory details to enhance clarity and maintainability of test execution messages and SDK management
change cache size calculation from 16 to 8 to optimize memory usage for improved performance
[ java ] fix invocationstagetrace ' s finish / start logic and add more comprehensive unit test
added work around for npe issue with fips keystore and empty stream .
replaced a fixed port allocation in the UpstreamCheckUtilsTest class with a dynamic port retrieval from the server socket to ensure the test operates correctly with a specified local port and improves resource management
ticket # 3703 : another part of the fix for netbeans - 4359 , the fix for http : / / github . com / codenameone / codenameone / issues / 2106
reduce tessellation block buffer for old opengl version
refactor PopulatorContext class to improve code readability to enhance maintainability and simplify future updates
do n ' t save all notification for project that do n ' t need it
write the job file in utf - 8 to a utf - 8 encode by default
added a check for non - empty arguments before checking if it is an instance of Table to avoid potential ArrayIndexOutOfBoundsException when processing arguments
replaced string literals in FakeOSSOHeaderDecoder with a static final String PREFIX to enhance maintainability and reduce hardcoding of header values
camel - 17274 : camel - jbang - allow to use custom strategy without extension , deprecate by camel - maven - plugin
removed detailed debug log messages related to Derby driver class and sysinfo to improve visibility for troubleshooting issues related to version checks
[ rhdm - 297 ] add timeout to flaky test ( # 298 )
fix : use stream instead of parallelstream in PersonNameSuggestionProvider
updated HubUpdater to conditionally set ` liquibase . hub . api ` and improved messaging to ensure consistency and clarity when updating the hub mode and API key properties
added constants for Java VM version success and failure keys in Constants . java and TestDDRExtensionGeneral . java to enhance compatibility checks for Java VM versions in the Java environment
updated font logging message to be more informative based on font type to enhance debugging clarity for font management requests
removed SSL import and added HTTP version handling in NegotiatingServerConnectionFactory to enable proper handling of HTTP versions in the negotiation process
added rate control settings to MaxConcurrentStreamsTest to enhance HTTP request performance control
added a new Java file ` Test6741426 . java ` implementing a JComboBox with a size and painting of a ` JTextField ` to ensure that the JComboBox correctly displays a text in a Swing context
update assertion message in CsrfAwareEntryPointAndDeniedHandlerTest to include exception message to improve clarity of error reporting related to CSRF token verification
added null checks for ` dbMgdPath ` and ` dbExtPath ` in conditional statements to ensure managed directories are only processed when they are not null
added package declaration for S3CopyObjectRequest to organize code under a more appropriate package structure
updated category setup methods to remove theme color dependency to simplify category setup and improve readability by using the view theme utility
updated the exception message to include the fileAtRoot variable to improve clarity of error reporting for folder path validation
refactor MappingMongoConverter to use ClassTypeInformation for map and collection types to simplify type handling and improve code clarity
add check for empty or null address in clientconnection . addaddress ( )
added keynectisrootca " keynectisrootca [ jdk ] to the VerifyCACerts class to enhance certificate verification capabilities
change return type of compute method in CompiledPipeline from void to int for output batch size to enable asynchronous processing of output batches for better performance
added a condition to disable the menu ' s mode based on context menu state to improve user experience by preventing interactions when the menu is not visible
pdfbox - 2852 : avoid arrayindexoutofboundsexception , add test to avoid eof problem
add a new test class ` FinalizerInfoTest ` to verify the finalization of objects during the garbage collection process to ensure proper functionality and object state management during the finalization process
camel - 14263 : camel - core - optimize rout engine to reduce stack frame in use during rout . work in progress .
refactor compensation request handling in BurningManService to improve clarity and logic for determining the receiver address of compensation requests
refactor StringSubject class to improve readability to enhance maintainability and ease of understanding for future developers
updated byte array initialization in BatchValidateSignContractTest . java to disable tests that are not ready for execution
corrected the spelling of " setmaxInboundMetadataSize " to " setMaxInboundMetadataSize " to ensure consistency and accuracy in method naming
updated query saving to replace " @ " with " from : " in RetweetActivity and Search classes to ensure correct query formatting for better user experience
removed a conditional check for forRebalance in SimulatorDiscoverer . java to streamline the logic for determining balance status
added an importAccount method to the YubiKeyAccountRegistryEndpoint and its tests to enable account management functionality within the YubiKeyRegistry endpoint
updated shader - related program implementations and texture handling in multiple classes to improve shader performance and maintain consistency in asset resolution
updated paintOnTopLoop condition checks in Container . java and added safe area setting in SideMenuBar . java to improve null handling and ensure proper spacing for menu items
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future development
added a null check for subName before setting the caption to ensure the caption is set correctly when subName is not provided
change data flag from IMMOBILE to GRAVITY in EntityItem . java to enable improved content display for improved user experience
modified conditions in CustomExpression . java to check for existence before processing custom expressions to enhance robustness by avoiding potential NullPointerExceptions during execution
refactored requestBlindVoteListFromNetwork method to use missingDataRequestService ' s sendRepublishRequest method to improve clarity and maintainability of the request handling logic
add a new test case ` testCase4 ` to the ` PostgresTest . java ` class for database interactions to improve testing capabilities for HikariDataSource and ensure reliable synchronization during database operations
updated string index references from double quotes to single quotes in SubtitleUtils . java and RemoteUtil . java to ensure consistency in string processing and improve readability
fix : properly handle multiple line issue in comment class .
singleimplementor : use atomicreferencefieldupdater to avoid concurrentmodificationexception .
added null check before adding queries to the qlist in SimpleFacets . java and introduced a test case in SimpleFacetsTest . java to enhance robustness by avoiding null pointer exceptions and ensure correct query matching in tests
add child to thing handle when create a merged thing ( # 4486 )
updated error handling for unknown commands in Ktab . java to improve clarity and user feedback when invalid commands are provided
added a check for the existence of the outFile before retrieving it to ensure the outFile is available before proceeding with operations
added date parsing logic to the DateConverter class to correctly handle date strings with time formatting
added assertions to verify the persistence of a post by its slug in SpringDataJPALockTest . java and implemented a query in PostRepository . java to ensure that the PostRepository correctly retrieves its posts based on a specific slug , enhancing data integrity
changed the ` canAccessDbaRecycleBin ` variable from ` boolean ` to ` Boolean ` and added checks for its value to ensure correct handling of access permissions and avoid potential null pointer exceptions
added a static request factory to the ClientRegistrations class using SimpleClientHttpRequestFactory to configure connection timeouts and read timeout for API requests
added assertions to verify the integrity of a non - Cannonical file path to ensure that the source correctly identifies and returns the correct file paths
remove graalvm . version system property , it be never use ( use defaultgraalvmlocator instead )
added validity handling for access and refresh token validity in ClientAdminBootstrap . java to ensure a default value is set when the token validity is invalid
update androidAPIVersion return value to use android _ api _ version ( ) conditional to ensure compatibility with different Android API versions
updated references from ` this ` to ` this . placeholderPrefix ` and ` valueSeparator ` in ` PropertyPlaceholderHelper . java ` to improve code clarity and consistency in referencing placeholder prefixes and suffixes
removed unnecessary ` ` number , # } ' ' from the ` Owner : { 0 } ` resource doc
refactor ZkSolrClientTest to use CountDownLatch and manage collections in synchronization to improve thread safety and responsiveness during collection processing
add BigInteger type to simpleTypes in MongoMappingContext . java to support BigInteger functionality in the application
updated the condition to check if the button text equals the string before displaying to improve user experience by allowing direct interaction with the text view
added a condition to check if MEncoder is disabled out of sync to optimize performance by avoiding unnecessary synchronization when Mencoder is disabled out
reduce event loop size down to 15 by default
changed the visibility of CountMin4 class from abstract to protected and updated access modifiers in multiple classes to allow subclasses to access CountMin4 and improve encapsulation for better maintainability
added sorting functionality for FileFloatSource in ExternalFileField . java and created a new test class ExternalFileFieldSortTest . java to improve file sorting functionality and ensure proper unit testing for external file operations
change invalid url to connection error , improve i18n
[ fix # 3260 ] add data field ' source ' for flight event
change visibility of the check method from private to protected final to allow subclasses to access and override the method
added synchronization handling logic in FileActivity for file synchronization to improve user experience by managing file synchronization and other errors
updated the URI generation in ThumbnailsCacheManager to use URLEncoder for encoding images and modified request headers to enhance security and ensure correct icon rendering in the application
added a null check for the " cn1 . infinite " property in the InfiniteContainer class to prevent potential NullPointerExceptions when the client is not initialized
update the total value calculation in IntHashSet to multiply value by 31 to improve accuracy of value incrementing
added a lock timeout check before updating entries in FeedRefreshUpdater to ensure that entries are only updated if the lock is enabled , improving error handling
refactor conditional checks for ACE permissions in SolarisAclFileAttributeView . java to streamline code for better readability and maintainability
remove the use of list and replace with array to make the algorithm a little easy to understand
hive - 23080 : fix resource leak in zkcli ( alexander pivovarov via jason dere )
add [ 0x0d and \ x0a ] to comment format for bibtex
added support for strict property processing in Main . java and corresponding tests in MainTest . java to enhance argument parsing functionality to handle cases where strict mode is false
add alwaysinvalidconstraint annotation to custom constraint factory ( # 6372 )
camel - 14284 : camel - http should use http4 a the default provider ( # 3358 )
add waitForThingsToLevelOut ( 30000 ) to TestCloudPivotFacet . java to implement a wait mechanism for the wait condition
refactor conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability by removing unnecessary complexity
updated ApplicationTest . java to improve test coverage to ensure more robust validation of application functionality
replaced String concatenation with StringBuffer for details concatenation to improve performance and readability of the code
refactor : rename ` Type ` to ` RoboType ` across multiple files to improve code clarity and consistency across the codebase
[ java ] abort action . abort for complete dispatch in a recording descriptor poller that have already be complete .
added cache key and lookup attribute handling in EntityProcessorBase and updated test cases in TestCachedSqlEntityProcessor to improve cache management and ensure correct handling of ' where ' parameters
added a new file PutfieldError . java that demonstrates the throwing of IncompatibleClassChangeError to validate that the expected error is thrown during runtime exceptions handling
fix npe in aws _ * domain when private address be in use ( # 4569 )
add log to memtable flush process if cf have not be reset . patch by jbellis ; review by brandonwilliams for cassandra - 1844
replaced instances of ` Space . build ( ) ` with ` Space . SINGLE _ SPACE ` across multiple files to standardize spacing and improve code readability
replaced the existing method ` encodedLength ( ) ` with a new implementation to maintain consistency in method usage across the codebase
updated TestMethodResultMapBuilder class for improved functionality to enhance test coverage and maintainability of the code
added handling for method invocations in FindNullDeref . java to improve error handling by addressing potential issues with method execution ranges
[ hotfix ] remove unused parameter in tasklocalstatestoreimpl
updated return values in mmm Utils . java and ppp Utils . java to include hours , minutes , and day time representations to improve accuracy of time representation in the application
updated handling of DeepShortcutView in Utilities and FloatingIconView classes to support deep shortcuts and background icons more accurately
changed the type of the ` JwtClaimValidator ` from ` String ` to ` Object ` and updated the validation logic accordingly to enhance flexibility in validating JWT claims and improve validation logic
updated method names from " buyQuickRate " and " sellQuickRate " to " getSellQuickRate " across multiple classes to improve clarity and consistency in method naming conventions
added a new configuration class ` CoverageConfig ` and updated ` CoverageController ` to use it for loading cobertura project data to enable dynamic loading of project data and improve code maintainability
added a check to ensure the EventBus is registered before registering it to avoid unnecessary registration and improve performance by avoiding unnecessary notifications
added ASCII - only check to normalize method in NormalizerBase . java to optimize normalization process by skipping unnecessary operations for ASCII strings
[ flink - 23402 ] [ coordination ] fix the permission check for migration task in the partition service
added error handling for SQL update in SpillableGroupByIT and created NeedsOwnMiniClusterTest to ensure that update statistics SQL fails correctly and verify expected outcomes
camel - 8257 : upgrade camel - cometd and camel - ssl to 4.7 . 6 and avoid use @ after
update style attributes in HtmlTag . java to use ' OK ' instead of ' USE _ CSS ' to ensure compatibility with styles in 4.01
add a new line to the HTML structure in HtmlCoreReport . java to improve readability and structure of the report output
updated the method to correctly calculate the memory usage based on scores to ensure accurate memory usage estimation when scores are not null
added StringHolder class and a custom adapter implementation for collection elements to improve serialization and deserialization handling for collection elements in JSON format
add extra data from mining parameters in MergeCoordinator to ensure correct handling of extra data for transactions
added a static map for number of arguments and modified the argument conversion to support multiple arguments in the dependency parsing process
make changesetserviceendpointconfig default to version 2.4 . 0
[ issue # 6842 ] shutdown rule manage executor after migration ( # 6843 )
corrected the spelling of " part " to " partOrList " in the method signature to enhance code clarity and ensure consistency in variable naming
jasonleyba : fix broken twitterbootstrap statistic directory ( # 1342 )
remove spanishtreenodepack . basiccategory , it be never use
refactor ` load ` method in ` AbstractEntityLoader ` and ` UniqueEntityLoader ` to use the new ` load ` method instead of ` loadByUniqueKey ` to enhance flexibility and maintain consistency across the codebase
hbase - 24836 fix deadlock in regionserverflushtableproceduremanager and regionserversnapshotmanager ( # 2043 )
set the size to the original buffer if it be empty to ensure that buffer does not exceed when necessary
removed duplicate calls to fillPool ( ) in HikariPool . java to improve code efficiency by eliminating redundancy
removed the assureMatchVersion method from multiple FilterFactory and related classes to streamline the handling of Lucene match version configuration for better maintainability
fix proxy generation for executable method with non - abstract interface . fix # 3553
tighten parser to avoid regex for lexica botania space
refactor multiple subject classes for improved consistency to enhance maintainability and readability of the codebase
add a check for negative payload length in the WebSocket frame handling to ensure proper error handling and prevent potential errors due to invalid payload length
move publishsubscribechannel from ' channel ' to ' dispatcher ' to have the same package name a ' channel ' and .
hive - 24094 : fix potential npe in replication metastore ( krisztian kasa , review by jesus camacho rodriguez )
- fix for issue 284 : incorrect height and width be not convert to byte in image
added new import statements for various parameters and class , and modified logging in SolrConfig to enhance the configuration handling and improve logging clarity for overlay versions
updated delayUntil value from a fixed delay to a dynamic delay based on the current time to improve synchronization responsiveness by adjusting timing based on the current time
updated the initialization of afterConversionTime in SegmentV1V2ToV3FormatConverterTest . java to ensure proper handling of file modifications during conversion tests
[ iotdb - 2151 ] fix timeseries query process executor cost bug ( # 4186 )
[ netbeans - 4294 ] added support for search package in jar url with + char
[ flink - 30613 ] [ table ] migrate flink - table - planner to flink - core
added a new class SpringSecurityAuthenticationSource to handle LDAP authentication sources to streamline authentication handling and logging for improved debugging
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
update minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer SDK versions
updated the custom file name dialog implementation to use a cached list to improve user experience by providing a more modern dialog interface
added a new test method ` testNewPut ( ) ` to ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest . java ` to ensure testing of new put functionality and correct expected behavior in tests
updated the parameter name in the stream method for ReadDbObjectCallback to enhance clarity by using a more concise parameter name
[ geos - 7008 ] fixed zoom of map view on mouse down
added similarity parameter to KNearestNeighborClassifier and updated related tests to use LMDirichletSimilarity to enable custom similarity calculations for improved classification accuracy
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query performance and accuracy by utilizing a constant score range query
replace ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity by using a more descriptive method for retrieving reasons
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
added MTU request handling methods and tests in ShadowBluetoothGattTest . java to ensure proper MTU request behavior across different SDK versions
fix the unit test so it still work with the jetty wrapper .
set default log level to WARNINGS if a vosk failure be detect .
channelprocessingmanager : fix a thread safety issue
updated resource strings in Japanese localization files to improve clarity and accuracy of user interface messages
corrected the condition for size in JDBCTypeMapping and modified the corresponding test case to ensure proper handling of sizes and correctness in the test case
fix : fix concurrentmodificationexception in GenshinScene . java ( # 666 )
added custom control codes and state tester classes for improved accessibility handling to enhance user experience by managing accessibility states more effectively
added support for SIDE navigation functionality in the command behavior checks to enhance user experience by improving navigation options in the menu
removed unnecessary Disposable import and added connection state handling in WampStreamingService to improve code clarity and handle potential disconnection issues
added validation for energy limit in UpdateSettingForEnergyLimitContractActuator to ensure correct energy limit type is validated and improve error messaging
updated URL handling in PostmanJsonBuilder and UrlBean classes to improve clarity and consistency when assigning the port and protocol
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat to enable flexible configuration of the namespacePrefixRef value
updated assertions in TestRange to use a static method for comparing dates to improve code readability and maintainability by using a dedicated method for comparison dates
added JettySolrRunner support in BasicAuthIntegrationTest and initialized securityData in ZkStateReader to improve functionality and ensure proper security handling during server restarts
added PriceFeed as a parameter to the TradesChartsViewModel constructor to enable handling of sticky market price in the trade statistics view
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to ensure consistent use of configuration settings for replication settings
8015349 : ` ` abc ' ' . lastindexof ( ` ` a ' ' , - 1 ) should evaluate to 0 and not - 1
added file download functionality using FileDataStorageManager to enable file download functionality when a file is downloaded
[ java ] create a random file channel and truncate it to avoid a race condition .
added a method to check if the registry is running and a retry mechanism for file deletion to improve reliability in managing registry operations and enhance file deletion reliability
removed unused import statements and added startLoading method calls in multiple classes to improve code cleanliness and ensure proper loading sequence during tests
remove several unnecessary variable and improve type safety across multiple classes to enhance code maintainability and prevent unchecked cast warnings
added a null check for instances in TraceFeignContext to prevent potential NullPointerExceptions when no instances are available
phoenix - 4953 allow set transaction isolation level to transactional _ read _ committed or transaction _ serIALIZable if transaction be disable ( # 1084 )
added transaction attribute handling in AbstractStepFactoryBean and ItemOrientedStep to ensure proper transaction management and handle exceptions during processing
refactor CasManagementSecurityInterceptor to use DirectCasClient instead of CasClient and update related methods to improve abstraction and enhance client security management
added functionality to display a category in the navigation drawer to enhance user experience by providing a relevant menu option
renamed ` cancel ` method to ` cancelMatchingOperation ` and modified the method name from ` observeDownloadWorkerState ` to ` observeWorkerState ` to better reflect functionality related to operation cancellation and enhance clarity in method naming
pdfbox - 2852 : avoid potential classcastexception , by axel howind
updated font size handling and text size retrieval in TerminalView and TerminalBridge classes to improve accuracy of font size and text size retrieval in the application
bugfix : do n ' t modify a constant frame if the fact be invalid
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
replace return statement in ArrayListSpanAccumulator to return a new ArrayList instance to ensure that the returned list is immutable after creation
removed the lockService usage and adjusted method calls in Liquibase . java to simplify the code and improve readability by using direct method calls
added a method to set the revision in MicroserviceVersions and updated the test case to set the revision to null to ensure proper initialization of the microserviceVersions and validate the test behavior
updated foreign key and index handling logic in TableRetriever . java to improve consistency and clarity in foreign key and index management
camel - 15836 - camel - aws2 - s3 : enable minimal configuration for the aws2 - s3 component
removed unnecessary import of TradeHistoryParamCurrencyPair in BitstampAccountService . java and added a new method getBitstampUserTransactions in BitstampAccountServiceRaw . java to streamline the code and enhance transaction retrieval functionality
added a try - catch block around the component retrieval to handle potential NoSuchComponentException to improve robustness by preventing application crashes due to missing component
change return type of push ( ) from void to boolean . fix pushtoken .
updated LegacyAddressTest to use BufferedReader for reading legacy address data to improve test reliability and reduce memory usage by avoiding hardcoded strings
changed the access modifier of the findDropTargetAt method from private to public to allow access to the method from other classes
refactor push notification handling into a new method in NotificationsActivity to improve code organization and enhance user feedback during push notifications
improve handling of close channel to avoid swallow exception
replace null checks with non - empty checks for warning and valid days attributes to enhance code robustness and readability by avoiding potential NullPointerExceptions
refactor DefaultAnnotationEngine and Stubber classes for better organization to improve code maintainability and readability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840
nifi - 3742 - add timezone information to aboutdto class .
modified the boundary handling logic in the Splitter class and added a boolean flag to control the splitting of ranges to improve clarity and control over the range splitting behavior
no effective change - code cleanup - remove useless catch
remove the extra sync block when register a circuit .
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing more specific exception type
- fix a bug i introduce by mondrian - 1244 .
updated logging behavior in FastBindLdapAuthenticationHandler to use info level logging instead of error to improve log clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal handling to enhance the performance of container order focus traversal
make sure getpointlength return int instead of double . ( # 3395 )
removed unnecessary whitespace from the constructor parameter in CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor database connection handling in SchemaCrawlerMain and Executable classes to ensure proper logging and closure to improve resource management and error handling during database execution
bump default tl version to 1.2 with a fallback for old jdks
updated exception messages in CountersManager . java to reflect correct buffer full state to ensure accurate error reporting for counter allocation failures
fix bug where we do n ' t start the audio when the queue be empty .
removed unnecessary debug log statement in HttpConnection . java to simplify log output and improve readability
added a transient property implementation to JpaPersistentPropertyImpl and its corresponding unit tests to ensure proper handling of transient properties in JPA entity
updated stack version assertions in UpgradeResourceProviderTest to reflect the correct stack version to ensure compatibility with the latest stack versions and improve test accuracy
avoid hide hide field , and allow method to return object .
changed access modifier of ` isBinaryType ` method from private to public and modified output stream initialization logic to allow access to ` isBinaryType ` from other classes and enhance logging clarity
corrected the property name from " hive . tez . dynamic . parition . pruning . max . data . size " to " hive . tez . dynamic . partition . pruning . max . data . size " to ensure consistency with naming conventions and improve clarity in the configuration
comment out findproblem ( ) because it be never implement .
remove the deprecated default _ offHEAP constant from dictionaryindextype ( # 1771 )
replaced hardcoded newline characters with a constant LINE _ SEPARATOR in TableWriterTest . java to enhance readability and maintainability of the string representation
updated DebugHelper . java file to improve debugging capabilities for better debugging
added texture ownership check in ParticleEffect class to ensure it only processes when the texture is available
added LDAP authentication properties to Hive configuration in HiveConf . java to enhance security by improving LDAP authentication capabilities
add javadoc to datacatalog api ( # 456 )
replaced direct call to ` getSystemService ( ) ` with a call to ` Context . INPUT _ METHOD _ SERVICE ` to improve context handling and ensure consistent soft input behavior
added unit tests for converting primitive types to maps and objects in DataTableTypeRegistryTableConverter to ensure correct functionality of data type conversion in the application
reduce size of test so it do not fail on slow machine
update error message for better clarity in ContentTypeManager . java to enhance user understanding of potential issues related to file operations
added abstract method ` dropSequences ` to multiple database classes and overridden it with migration exception handling to enhance code maintainability and ensure proper exception handling during sequences migration
added a null check for the status variable in MainWindow . java to prevent potential null pointer exceptions during execution
added a variable ' f ' to the createField method call in DocumentBuilder . java to store the result of the field creation process
bug fix : check for map and parent style before add the icon
add a test for the upsert method in MongoTemplateTests to ensure that the upsert method returns the expected value when not already present
hbase - 16625 fix int overflow bug introduce by hbase - 16637 ( addendum to fix compilation error )
added functionality to record and log launches in the launcher to improve tracking of app launches and ensure proper handling of null shortcuts
fixed an issue that cause the simulator to not use the shaper ' s graphic component .
[ # 7170 ] instructorfeedbackresultspage : when a result have no team , clear previous section and team member
added id generation logic for player ' s inventory IDs and created a test for those IDs to ensure that player ' s inventory IDs are unique and to validate that the ID is valid
log4j2 - 2262 : should not exit early if a configuration be not find .
update return type handling in ReloadableJava parser visitors and method declarations to ensure consistent return type usage and improve code clarity
modified the initialization logic for blended tiles in TileMapRenderer . java to handle different types of blended tiles more robustly
8274234 : remove unused annotation java . util . concurrent . Futuretask from probe
fix for bug with area tool ( pathiterator bug )
improve logic to set lockOnSync and throttleRate to a key variable to enhance clarity and correctness in handling throttle rate updates
made the ` addActions ` method in ` PipeEventBus ` inheritors and overridden methods in ` PipeBehaviourEmzuli ` to enhance event handling logic and ensure proper method overriding in the base class
test : raise timeout for zkcontroller creation
added a test for the passcode functionality using client parameters in the TokenMvcMockTests to ensure correct handling of client parameters in the OAuth2 token service
added LengthFilter and KeepWordFilter constructors to brokenOffsetsConstructors to address bug reports related to token processing parameters
removed the JUnit Ignore import from RandomPlaneTest . java to enable execution of tests that are not ready for execution
fix ( griffin ) :64 bitVA start should always return unsigned long .
replaced the upcast method with the getInstance method for btCollisionObject to simplify the code and improve readability
added copyright year retrieval and updated openrocket URL format in AboutDialog to ensure accurate copyright information and updaterocket library references for users
getdistributedobjects return a list < objectinfo > in jetclientinstanceimpl . getdistributedobjects ( ) ( # 18443 )
[ netbeans - 5480 ] fix masscalculatortest bug ( # 4587 )
changed the memory reference from ` TOTAL _ MEMORY ` to ` MAX _ MEMORY ` in SmartDexingStep . java to ensure the correct maximum memory is used for better resource management
[ iotdb - 2376 ] fix checkstyle violation ( # 4344 )
remove validation for delayed payout tx + fix typo
test : fix jsonloadertest to work on window
updated the constraint for tableSize in ObjectSet . java from 1 < 30 to 0x40000000 to ensure that the capacity requirement is within the valid range for data integrity
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to enhance functionality to support different data scaling scenarios
remove @ addtorulekey annotation because it be buggy
added error handling for SecurityException in FileHelper . java and updated content truncation logic in TextHelper . java to enhance robustness by preventing application crashes due to security exceptions
added tests for ` resolveAttributes ` method in ` ShadowThemeTest ` to verify behavior with multiple attributes in the theme
updated HSSFWorkbook to check the size of sheets instead of - 1 to ensure proper handling of sheets based on the actual size
updated the method to retrieve the element color instead of primary color to ensure the correct color is applied for the activity
updated the handler initialization to handle null replyHandler and modified path resolution in DefaultPlatformManager to improve null safety and simplify path resolution logic
added binary collation functionality to MariaDbType and its classes to support proper SQL generation for binary data types in the database
added a method ` whenType ` to return an ` Optional < T extends Tree > ` instance to enhance type safety by avoiding potential ` ClassCastException ` in the ` Tree ` class
refactor the navigate logic to return the destination fragment for better clarity to improve maintainability and simplify the handling of user view destination retrieval
replaced a JSON response with a temporary redirect for application settings to improve user experience by providing a temporary redirect mechanism
[ flink - 24955 ] [ kinesis ] check that the deserializer be not serializable to avoid illegalargumentexception
updated several Java classes related to DNS and data formats to improve consistency and maintainability across the codebase
added a check to ensure the zkClient is closed properly after instantiation to improve resource management and prevent potential memory leaks
rename methods and classes related to icon transitions from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` to improve clarity and consistency in handling icon transitions across different states
added a new method ` read ` to the ` ProxyHandler ` class to streamline the reading process by using a unified read method for end point handling
replaced instances of ` BufferUtil . allocate ( ) ` with ` ByteBuffer . allocate ( length ) ` in ` ABCase1 _ 2 . java ` to simplify buffer allocation logic and improve code clarity
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success and simplified the return logic to enhance code readability and maintainability by simplifying the condition checks
[ scb - 2716 ] bugfix : xmlconfigloader order - limit should be integer compare not integer
add new class PicOfDayAppWidget to handle widget updates in the application to provide a mechanism for updating app widgets in the application
initialize internallbvmserviceofferingid to 0 instead of long and set it to 0 to ensure default offering can be use instead of long
updated import statements and modified join condition handling in HiveParserCalcitePlanner to enhance query optimization and support non - equality conditions
[ flink - 23795 ] [ javadoc ] deprecate basic operator from flink - streaming
added user and password options for remote jmx to enable secure access to remote jmx
removed unnecessary initialization of BytesRef scratch in Stemmer . java to streamline code by eliminating unnecessary variable declarations
fix issue where we be only call widget . getappwidgetproviderinfo ( ) if there be more widget to preview .
ggbapplet . getviewforthumbnail ( ) fix for 3d view ( when there be no active view )
modified rotation logic in GcodeRenderer . java to ensure proper rotation positioning to improve visual alignment by preventing negative rotation values
added workspace directory option to the daemon daemon implementation and updated the workspace directory setting to enhance user experience by allowing customizable workspace directory configuration
updated file path in CLIManagerTest from " target / test - classes / options . apt " to " target / test - classes / options . html " to ensure compatibility with the updated HTML format for test options
updated ScimUtilsTest to use JUnit 5 annotations and assertions to enhance test readability and maintainability by utilizing JUnit 5 features
refactor OAuthConfirmationController to use a model for managing authorization requests to simplify the model management and improve code clarity by removing unnecessary attributes
hhh - 16955 add test to reproduce bug in hibernate
rename EventBusHook . java file to improve clarity and consistency in event handling
refactor MultiPaintEventTest to improve test structure to enhance maintainability and readability of the test code
changed mNewScale variable from final to non - final to allow for dynamic modification of the new scale value
refactor SyncFactory class methods for better performance to improve efficiency of data processing operations
added functionality to track and store unique key fields in LukeRequestHandler to improve schema handling and tracking for unique keys in the application
added round border color functionality to the BorderEditor classes and updated color method calls in EditableResources to enable customizable color options for improved visual distinctions
fix bug where neverpartofcompilation be call with never _ partially _ compilation = true .
[ hotfix ] [ test ] remove deprecate slotpoolimpl in defaultschedulerbatchschedulestest
make pingpongapp more robust by wait for the pending request
added a toolbar menu item click listener in RecentChatFragment to inform users of recent chats functionality
changed ` InfoDropTarget ` from ` ButtonDropTarget ` to ` UninstallDropTarget ` and modified method implementations in ` InfoDropTarget ` to enhance functionality by handling uninstall actions more effectively
updated method names from ` add ` to ` push ` and ` pop ` in multiple classes to improve clarity and consistency in scope management
update URLs in CommonsApplication from " test . wikimedia . org / test " to " commons . wikimedia . org / wiki " to align with the new project structure and focus on the Commons application
refactored index handling logic into separate methods for better code organization to improve maintainability and readability of index increment and decrement processes
replaced usage of ` Collections . sort ` with ` sort ` for multiple classes to simplify sorting code and improve readability by using direct method calls
added a new array of date and time patterns to the HR data format to enhance date formatting capabilities for better readability
added a call to clear focus on the clicked view to ensure the clicked view is properly cleaned up after changes
fix # 282 # 283 # 283 # 283 # 283 # 283 fix language code not update when drop down
updated time zone identifiers from " WSST " to " WSDT " across multiple files to ensure accurate representation of time zone functionalities in the application
added native methods to register global and weak fields in FastGetField to enhance functionality and maintainability of the code
avro - 2815 . java : fix reflect to work with union and null type
added a timeout parameter for the blocking bar in SedaBlockWhenFullTest . java to increase the timeout duration for operations in the blocking queue
added a null check before remapping the R class in ResourceMerger . java to avoid potential NullPointerExceptions when invoking remapRClass
expose dialect constructor in order to support sql server
camel - 3440 : http producer should add the connection : close header for http
updated socket timeout from 60000 ms to 120000 ms to improve stability during network operations
fix a test , add a query to check if final _ price _ cts be zero
refactor Parser class implementation to improve code readability and maintainability
refactor CasProcessingFilter class structure to improve code readability and maintainability
replace casting to nestablenode with getfirstelementchild in legacy and xhtml
simplify the look up logic for an enum to make it easy to understand and test the behavior
[ java ] wait for cluster node to shutdown to reduce flakiness .
improve warn whenelcontextcleaner fail to clean cached bean
added a content type set for mContentType in WebdavEntry . java to ensure the application uses the correct content type for data transfer
added a method to retrieve the queue size in LazyTraceThreadPoolTaskExecutor and created unit tests for it to ensure accurate queue size retrieval and validate the expected behavior through unit testing
add distance comparison between envelope and line ( # 783 )
ww - 3906 renames require attribute into requiredlabel to match ui doc
[ flink - 21190 ] [ network ] fix removal of next ( ) method in purgingpartitioniterator
added a method ` getAsUnescapedPath ` to ` SchemaPath ` and replaced ` toExpr ` with ` getAsUnescapedPath ` in ` VectorUtil ` to enhance path handling by ensuring proper handling of top - level arrays in drill queries
added abstract methods getHeight ( ) and getWidth ( ) to BaseMonochromeBitmapSource to provide functionality for retrieving height and width of the bitmap source
added validation to ensure polygons have at least three points to improve error handling and prevent potential ArrayIndexOutOfBoundsException
replaced custom ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) across multiple files to improve flexibility and consistency in object mapping handling
ggb - 2118 fixed potential null pointer exception in ca
fix # 47384 - use utf - 8 encoding for name field
camel - 14263 : fix typo in spring boot configuration description
added logic to exclude specific prompts based on login prompts in LoginInfoEndpoint to improve flexibility in managing authentication states
replace listener removal method with a removeIf method to improve clarity and ensure listeners are removed only if they are the same
added a case for actionToggleSpin in PieChartActivity to enable spinning the chart with specified rotation options
kill vhd copy process in case of failure
hbase - 27451 avoid normalization of table since it have a namespace ( # 8452 )
removed unused import statements and added a resize method to manage memory allocation to improve code cleanliness and ensure proper resource management during resize operations
refactored the PropertySupport class to include a new method for accessing property values to improve code organization and enhance flexibility in accessing property values
ignore a test that will never fail and blocking PRs
fix the hopperhock not connect to the hopperhock as well a the hopperhock ' s getentitieswithinaabb method .
added authentication dialog implementation in SsoWebViewClient . java to enhance user experience by providing contextual authentication options
added methods for document deletion and query removal in TestStressIndexing2 . java to enhance indexing capabilities and improve resource management during document operations
[ flink - 22559 ] [ connectors / kafka ] disable flink - 22559 unit test
replaced ` types . get ( j ) ` with ` types . computeIfAbsent ( j ) ` and simplified variable assignments in ` ResTable . java ` to improve code readability and reduce potential errors in type retrieval
camel - 7999 : allow to turn off single value as array by default in camel - json
updated the localized update message in VersionChangeLogs . java to reflect changes in the latest localization features
updated SHORTCUT _ CATEGORIES array initialization to use resourceUtils for splitting categories to enhance functionality by dynamically extracting application categories from resources
changed method name from ` visitExpressionInstanceOf ` to ` visitRelExpressionInstanceOf ` and added new tests for various expression types to improve clarity and functionality of expression parsing in the parser
nifi - 3744 : add the content - type header to flowfile in gethttp
fix exception when delete and partial update on same resource ( # 4499 )
replaced ` exitButton ` with ` doneButton ` and updated its click listener to improve clarity and functionality in the user interface
camel - 12427 : camel - nats should use source code generate configurer to avoid reflection configuration .
updated the ` invalidateStalePartition ` method to include a ` metastoreContext ` parameter and modified its implementation to improve partition invalidation handling by utilizing a context for better context management
use more memory buffer for result tree visualizer . fix # 418
updated icon resources from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to better reflect the context of the chat display in the user interface
[ java ] use long volatile to avoid concurrency issue in broadcast receiver
updated test method names to use underscores instead of camel case to improve readability and consistency with naming conventions
[ te ] datasource - add datasource name to avoid name clash ( # 3640 )
updated awaiter timeouts from 10 seconds to 30 seconds in multiple locations to allow for a longer processing time during phaser synchronization
removed the BuildSlaveFinishedStatusEvent class and replaced it with a direct call to publishBuildSlaveFinishedEvent to simplify event handling by eliminating unnecessary complexity
fix findbugs encode issue in vmwarestoragemanagerimpl . java template uuid name should be utf - 8 encoding
add test for deposit workspaceitem without a workflow
fix : do n ' t add a duplicate to the list of jar to load
added a method to check if a string is a boxed primitive to improve the functionality of the Unbox class
updated argument handling in SpecificCompilerTool to use indexOf for better clarity and performance to improve code readability and maintainability while ensuring correct execution order
modified HiveMetaStore to ensure temporary tables are deleted only if they are external to optimize file management by avoiding unnecessary directory deletion
updated configuration options for asynchronous threads and thread pool sizes in HiveServer2 to improve handling of async operations and enhance thread management
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
ambari - 23785 . ambari upgrade upgrade component should support role name ( dlysnichenko )
add a new field ` diff ` that holds the current configuration information in the ` OperationSetTelephonyConferencingSipImpl ` class to store the contribution information related to the current configuration
clear log entry only when the view be update ( # 6283 )
updated return logic to check for input and output shutdown states to ensure proper handling of socket states during shutdown operations
update SetNullableGenerator . java file to improve code clarity and maintainability
camel - 3490 fixed the unit test error of reportincident
simplified import statements and updated content type handling in FormIntegrationTests . java to improve code readability and maintainability while ensuring proper content type compatibility
add the apioperation nickname , value , and use it for the hello method ( # 1561 )
refactor lifecycle listener handling in Lwjgl3Application and Lwjgl3Window to improve lifecycle management and ensure proper lifecycle lifecycle handling
updated FG _ FK color value from 90 to 200 to improve the visual aesthetics of the foreground color
mute mp3 support , since it require mp3 .
fix secondaryindexmanagertest to pass locally .
pmd ( build ) : update about section to include bundle version in about text
[ hotfix ] [ test ] use optional instead of throwable in customserializationitcase
refactor MediaFormatUtil to improve code readability to enhance maintainability and simplify future modifications
added isCellEditable method to GeneralTab class to handle cell editing behavior for better user experience
added a method ` isOnlyPrintCommands ( ) ` and modified the message formatting based on its value to allow toggling of printing unused dependencies based on user configuration
updated the VocalTractModifier class to include a temporary count and adjusted the vscales value to improve performance and adjust the VocalTract scaling behavior
updated import statements in BaseScalarUdfTest and TestGenericUDFConcat classes to ensure consistent usage of the new BaseScalarUdfTest class across test classes
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper object comparison and hashing functionality for better object integrity
updated imports and changed variable names in TestSkeletonControlRefresh . java for better clarity and functionality to enhance code readability and align with Jme3 anim framework standards
avoid use deprecated nodefilter in nodeutil . countnodes ( )
updated the condition to check for a size of sync block from - 1 to - 1 to ensure that the fetch block size does not exceed the defined limit
updated the state value and float type values in DebugExpressionParser . java and DebugExpressionParser . java to correct the values and improve accuracy of debug expression parsing
fix : excludedependency should consider in - classpath of transitive dependency
replaced the temporary method with dst2 method and updated the lerp constructor parameters to improve vector functionality and enhance method functionality
initialize the ' args ' array to an empty object to avoid potential null pointer exceptions when ' args ' is null
updated RustBinaryDescription to initialize linker flags as an immutable list and changed rustcFlags to ImmutableList to improve flexibility in handling linker flags and ensure proper initialization of rustcFlags
[ # 10635 ] make test work on travis ( # 10636 )
added support for dynamic dag name in Hive configuration and task executor service to enhance app name management based on query parameters
removed the import of ` java . io . File ` from ` TileAtlas . java ` to streamline dependencies and reduce unnecessary imports
gh - 3558 : do not throw exception when build be fail ( # 3559 )
updated the ` validateQuery ` method to accept an additional parameter for error handling to improve error messaging by allowing variable arguments to be passed during query validation
updated the INDEX _ VERSION from 1 to 2 and refactored the getTree method for better clarity and consistency to improve code maintainability and simplify the tree retrieval logic
[ flink - 11323 ] add test for kryoserializerregistrations .
added null check before removing configuration property and updated test cases accordingly to ensure safe removal of property and improve test coverage for configuration updates
updated boolean handling in MetaStoreDirectSql . java to utilize BooleanUtils for conversion between ' Y ' and ' N ' to improve compatibility and maintainability of boolean conversion logic
added a method to hide the customization drawer to improve user experience by managing customization drawer visibility
replaced the use of a static final string for warning handling and updated the handling of term vectors to improve clarity and maintainability of warning handling in the code
8059231 : verify that octane raytrace now work with optimistic type turn off . add well log for optimistic type at build time
updated expectations handling in Expect . java to enhance clarity and maintainability of the code
add unix socket configuration support to docker ( # 2889 )
[ calcite - 3539 ] fix unstable iop rate high rate test ( jesus camacho rodriguez )
camel - 13636 : camel - reactive - streams do not throw illegalstateexception when stream have no active subscription
refactor Vectorizer to utilize TezWork instead of MapRedTask for better task validation to improve type safety and error handling in the vectorization process
added a boolean parameter to the superclass constructor in StringAppender and LogDivertAppender classes to enable configuration of logging behavior based on the new parameter
fixed npe due to null pointer in tree model .
[ gr - 38684 ] make sulong deal with weak function more robust .
6716626 : implement consistent process for quarantine of test
test for http : / / code . google . com / p / mybatis / issues / detail ? id = 561 - no need to reproduce it
added validation for invalid OperationHandle responses in HiveStatement . java to improve error handling and provide clearer logging for invalid operation handles
updated command type from ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL in multiple files to implement a new command type for dropping not null values
camel - 17836 - camel - aws : create secret manager endpoint with minimal configuration
refactor SimpleTree class to improve code readability to enhance maintainability and facilitate future development
removed exception message formatting from the return statement in UserREST . java to streamline error reporting for better clarity and maintainability
updated the ` fromContent ` method to accept a ` boolean subTree ` parameter to enable handling of sub - tree structures in content processing
update column width calculation to use a fixed width value from the default column width to ensure proper column width handling for Excel sheets
added a new parameter ` configPath ` to the ` less ` command command to specify the path to specify the execution path for command execution
replaced Set with Collection for tables and weakAssociations in DotWriter . java and GraphExecutable . java to improve immutability and performance of collections
use 1.0 . 0 ssh a default for testcontainers ' s sshd image
bug 12702 : remove unessesary assertion cause intermittent test failure
refactored handling of multi - valued columns in DefaultGroupKeyGenerator to improve clarity and support for multi - valued columns in raw key generation
lucene - 8189 : fix false - positives in testmultimap seek ( )
replaced inline stack creation with a more concise builder pattern in BCSiliconRecipes . java to improve code readability and maintainability
fix typo : put ( ) - > putobject ( )
updated visibility logic in CellLayout and refactored drag exit methods in Workspace to improve code readability and maintainability by consolidating drag - and - drop event handling
updated ModifyRequestBodyGatewayFilterFactory to apply the rewrite function with original body and added a test for handling empty request bodies to ensure that the request body is correctly empty when processing the modify request
added package - accessibility checks to ConstructorFinder , FieldFinder , and MethodFinder to enhance accessibility checks for specific types
changed log level from warn to trace in LoggingHandler . java to reduce log verbosity and improve performance during debugging
fix wildcard handling ( # 3348 )
added functionality to handle gallery images through menu items to enhance user experience by allowing users to navigate to a specific gallery image directly
refactor MongoDBServiceFactory to use a singleton instance and service variable to improve service management and avoid unnecessary object creation
patch from stefan penndorf to describe the behaviour of inline constant mutator with booleans
added a black hole parameter to the decode method in RecordTest . java to enhance handling of blackhole data during decoding operations
fix : update gapic - generator - java with mock service generation fix ( # 349 )
[ knx ] skip knx channel without unit ( # 13560 )
removed the witnesses collection from the ManagerTest class to optimize the test by eliminating unnecessary witnesses
do n ' t throw jdbc _ error when abort in case of sqlallexception
removed the stack property from script objects and replaced it with getter and setter methods to improve encapsulation and control over stack management
removed a condition that checks if a path name starts with " . " to simplify the path validation logic
correct typo onboard - > auto - load
added a clearIndex ( ) method to BasicFunctionalityTest . java to ensure a clean state for index updates during functional tests
updated BOLDWEIGHT _ NORMAL value from 190 to 0x190 to improve compatibility with new format requirements
modified the field ` fLookForStuckThread ` to be ` volatile ` and made it final in multiple classes to ensure thread safety and improve timeout functionality
[ api ] fix checkstyle violation in api
updated hash code and equality check in FuzzyQuery to ensure proper object comparison and improve performance
removed unnecessary print statement for target assignment in PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed method signatures from non - nullable to void in SharedOpenFilesCache . java to simplify method usage and improve code clarity
updated JDBC driver version from 2.5 . 1 to 2.6 . 0 in tests to reflect the latest version of the database engine for improved accuracy
updated the ` retrievePersonAttributes ` method to include an empty hashmap parameter and modified the return statement to use ` buildResolvedPrincipal ` to improve attribute handling and enhance the clarity of the principal creation process
[ openwebnet ] adjust log level when we ca n ' t connect to bridge
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency in method naming
added a constructor to ThumbnailGenerationTask to initialize ThumbnailsCacheManager to ensure that it handles null storageManager and image view references effectively
updated the condition in GroupSelectionQuery to check if ` nrFound ` is less than zero and attempts < 5 to ensure proper handling of size ( ) attempts and avoid potential errors
added a new file ` Bug1933922 . java ` implementing a recursive compilation process to handle and identify the program in a file efficiently
simplified comparison syntax in multiple classes to enhance code readability and maintainability
update character check from 33 to 32 in FileResolver . java to ensure control characters 0 - 31 are invalid for space characters 32
added requestFocus ( ) method in Display . java to ensure the component receives focus when necessary
rename test data and simplify data path usage in uitest . java
renamed ` JsonParserAsync ` to ` JsonStreamParser ` and updated related class names to improve clarity and consistency in naming conventions across the codebase
updated DetailFragment to handle specific message before canceling Crouton to improve user feedback by displaying a specific message when the message is empty
added a test for schema query and fetching with an unrelated template in IoTDBSchemaTemplateIT . java to ensure correct handling of schema queries and related templates in the database
modified Dialog class to enhance user interface loading experience to improve user experience and performance
replaced direct execution of command - line arguments with a ProcessBuilder to manage Java TOOL options to improve command - line execution handling and ensure proper environmental execution
fix test to pass on window by default
refactor subsystem assignment logic to use a loop for splitting names to improve code readability and maintainability by reducing redundancy
skip some test when apple sdk be not available
refactor JVMCIVersionCheck to use a new method for missing properties and simplify validation to enhance code readability and maintainability by encapsulating property validation logic
updated Mockito library usage in the project to improve testing reliability and maintainability
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor BinaryParser and PlainTextParser to improve handling of input stream encoding to enhance code clarity and ensure consistent character encoding handling
added MultiPartFormDataCompliance enum and updated HttpConfiguration to utilize it to provide a default value for multi - part form data compliance based on request configuration
added GradleVersion to the GradleDistributionManager to support JDK - 17 features in the project
added a method to check if a database object is added to the snapshot control to improve the efficiency of handling database object types during snapshot processing
refactor Term class for improved clarity to enhance maintainability and readability of the code
modify return statement to handle null or empty runWith values to ensure safe execution and prevent potential NullPointerExceptions
add test case which show the difference between rm and rm connection .
updated multiple Java classes related to audio and audio handling to improve code consistency and maintainability across the project
sampler : improve image bandarization performance .
updated tinting properties in TaskView to use mTintAmount instead of amount to improve clarity and consistency in tinting effect
added a new file SumZeroAggr . java for aggregation functions to implement the SumZero aggregation function using Drill ' s built - in aggregation framework
[ flink - 24409 ] [ table - planner - blink ] fix the type of the id INTEGER not null , page _ id unsigned _ long not null
hbase - 23351 bucketcache . getallocationfailwarningsmessage will append stack trace to log when we get a recent fail allocation
added a null check before putting the propValue in the roleObject to avoid potential NullPointerExceptions when propName is null
made several variables in StatusBarTouchController private and added @ VisibleForTesting annotation to enhance visibility for test methods and ensure proper handling of touch events in the application
added methods to log container streams and handle them in DockerClient to improve flexibility in container logging by allowing control over stream operations
mvstore : add performance test for mvstore . writes .
change long value from L to J in PrimitiveType . java to ensure consistency in data representation representation
changed the access modifier of the delegatingApplicationListener method from instance to static to allow the method to be called without an instance of WebSecurityConfiguration
camel - 9440 fixed the issue of camel - test - infra - http - rest
added a new file ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` to implement tasklet functionality and integration tests for directory management
g3d - 310 : do n ' t recreate view more than once ( bugfix : updatestable ` ` size ' ' )
refactor operations in BitUtil , Int2IntCounterMap , Int2IntHashMap , and Integer2IntHashMap to use more descriptive variable names to improve code readability and maintainability by clearly indicating the purpose of the operations
updated the ` sendEventToTest ` method to accept an ` int stateOrdinal ` parameter across multiple classes to enhance event handling to support different states during accessibility tests
added support for video thumbnail requests in various classes to enhance user experience by allowing users to request video thumbnails efficiently
disable error checker if we do n ' t have a line .
added conditional logic to adjust titleArea based on UI theme settings to improve button layout responsiveness based on the user ' s theme settings
* add ` ` libskia ' ' preload property to presets for skia
add unit test to networkparameters . getnetwork ( ) ( # 688 )
added validation to ensure format arguments are not specify without a format string to enforce valid format arguments and prevent runtime errors
replaced the capacity variable with a length variable for better clarity to improve code readability and maintainability by using a more descriptive variable name
updated the ` walkRuleAndAdd ` method to include ` srcTarget ` parameter to ensure proper handling of dependencies based on project configuration
[ netbeans - 4.0 ] fix module file not load in netbeans 4.3 . 0 .
[ java ] only check candidate term id that do not exceed the minimum protocol version .
updated the default policy logic for single session and SAML authentication in MainApp . java to ensure proper client management based on authentication status
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to improve robustness by providing clearer error messaging when a mappedTableResource is missing
remove unnecessary try - catch block when close subscription
refactor ` AnonymousAuthenticationFilter ` to use ` Supplier < SecurityContext > ` for handling deferred security contexts to streamline the authentication process and improve code readability
updated actor removal methods to include an unfocus parameter to enhance control over actor removal within the grouping functionality
updated the prompt method calls for cloudConfig to use a consistent format for valid configurations to improve code maintainability and ensure consistency in configuration handling
camel - 13313 : fix netty - http - server to respect netty log level . ( # 13313 )
refactor DatumAliases , AbstractParser , Formattable , and Parser classes to improve code organization and maintainability
replaced the call to update ( ) with SwingUtilities . invokeLater for updating UI components to ensure UI updates occur on the Event Dispatch Thread for thread safety
camel - 8147 : camel - groovy - should use language . getscriptcache ( ) to create the groovy script class .
[ mng - 4515 ] do n ' t track already resolve plugin artifact
[ hotfix ] make clifrontend . programoptions public again
updated the ShadowSharedPreferencesEditor class to TestSharedPreferencesEditor and added a commit method to improve test functionality and ensure proper commit behavior
remove debug code that slip into last commit .
jasonleyba : fix http command execution on window .
change visibility of updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access the updateImage method
add miss hook to block . dropResources ( # 6240 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality for spatial location calculator handling in the application
renamed multiple classes related to communication to improve clarity and consistency in naming conventions
replaced the method ` isEmpty ( ) ` in ` TreeTrie ` to use a new helper method ` isEmpty ( Node < V > ) ` to improve code readability and maintainability by encapsulating the isEmpty logic in a separate method
updated foreground and background methods in AttributedStringBuilder for better positioning to improve text rendering accuracy by using additional dimensions
solr - 14284 : peersync should not disable fingerprint if system property solr . disablefingerprint be true
simplified the visibility of the moveFunds method by making it public to enhance accessibility and maintainability of the code
added BeforeConvertEvent handling and improved collection management in MongoTemplate and its tests to enhance event management and ensure proper ID management for UUIDs in the MongoDB template
refactor collectionitem object serialization method and test class for hazelcastinstance ( # 18888 )
make sure to close input stream if it be close . patch by jbellis
solr - 13401 : fix testcollectionapis to catch more apiexceptions
removed unnecessary whitespace in loading configuration to improve code readability and maintain consistency
[ # 8042 ] instructorfeedbackcopyactiontest : remove misleading name ( # 8043 )
[ beam - 2734 ] fix minor code issue ( # 2734 )
update step handling and metadata utilities for improved clarity and consistency to enhance the maintainability and readability of the code
enhanced logging statements and added shared lock acquisition and exclusive locking processes to improve debugging capabilities and ensure proper resource management during document operations
removed duplicate scheduleJobs ( ) method call to eliminate redundancy in scheduling logic
simonstewart : fix the flaky testgettextcontent . testsimonstewart run on a slow box
refactor logger implementation to use ThreadLocal for improved logging functionality to enhance logging performance and maintainability by utilizing a dedicated logger instance
made the functioninitializer method public and replaced JMockit with MockitoJUnitRunner for mocking functionality to enhance testability and improve compatibility with newer Mockito features
modified type handling and boxing behavior for better handling of primitive types to ensure type compatibility and prevent errors related to unboxed primitive types
updated focus handling in RecentsView and TaskView classes to improve task view orientation management and ensure consistent behavior during updates
hbase - 25819 fix flaky testflushfromclient . testflushfromclient ( ) .
cache clean up when a new contract be add . fix # 269
updated balance calculations in TokenIssueProcessor to use dynamic fee values instead of a fixed constant to ensure accurate fee representation for asset issues
updated RealisticRenderStrategy to use URI for texture management and improved cache management to enhance texture management efficiency and resource management efficiency
7049339 : java . awt . image . blit constructor throw new class bug7049339 ( regression )
added support for unselected text styling and refactored string width retrieval methods to improve font handling and ensure consistent width retrieval based on selected style
updated ArrayList and ArrayList implementations in multiple classes to optimize memory allocation to improve performance and reduce memory overhead by pre - allocating lists with specific sizes
removed the flags parameter from multiple methods in ShadowApplicationPackageManager to simplify method signatures and improve code readability
updated PingRequestHandler class to improve ping handling logic to enhance reliability and performance of the ping request handling
fix test that require mp4 injection to work on device
[ tradfri ] remove todos about old firmware
simonstewart : add a comment about how to comment out the code
updated layout logic to use DefaultLayout instead of InlineLayout and modified display condition in the conditional check to improve layout handling by supporting additional display types
refactor JsonDecoder to handle start and end arrays differently and add a test for reordering fields to improve JSON parsing functionality and ensure correctness of field ordering in the schema
fix blockcache clean up uncovered removal cause ( # 3890 )
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added @ Test annotations to DroolsMvelParserTest . java to ensure proper test execution and validation of the parser functionality
changed fields from non - final to final in ContextRegisterListener . java to ensure immutability of fields to prevent unintended modifications
updated the ObjectHashSet and related test classes to use an instance of ObjectHashSetIterator to improve iterator management and ensure consistent behavior with caching behavior
introduced a constant for batch byte and updated existing logic in multiple classes to enhance code readability and maintainability by centralizing batch byte handling
changed context . MODE _ WORLD _ READABLE and Context . MODE _ WORLD _ WRITEABLE from MODE _ WORLD _ READABLE to MODE _ PRIVATE in AppSettings . java and UpdateUtils . java to ensure that the application defaults to a private context for better encapsulation
updated logging messages and added handling for " abort ( ) " method in JdbcProxyGenerator . java to enhance clarity of connection closure behavior and ensure proper logging during the abort operation
updated animation logic to use mState instead of mState and added important for accessibility to enhance accessibility support and ensure correct behavior during state transitions
avro - 2373 . increase log level of malformed edit in protobuf reader from warn to debug .
updated scope substring handling and added a test for persisting revocable tokens to ensure that scope is longer than 1000 characters for proper functionality and validation
updated import statements and modified the ` AvailableJDBCDrivers ` class to include a ` toString ` method to enhance readability and provide a meaningful representation of the ` AvailableJDBCDrivers ` object
[ drools - 7 ] expose executablecommand to kie - api in order to support executable
tidy up the test - it be already unstable
added padding getter methods to CellLayout and modified bitmap creation logic in Launcher to improve readability and accuracy of padding calculations for different orientations
added a conditional check for non - empty sb before processing to avoid unnecessary processing when the string is empty
refactor ` SamlMetadataUIParserAction ` to ` Action ` and update related imports and methods to improve flexibility and consistency in handling SAML metadata UI parsing actions
added a method to check open ports using a specified port to enhance port validation for LDAP processes
log4j2 - 1343 fix wrong usage of shutdownhookregistry in loggercontext
updated URL handling and logging levels in Fetcher and HTMLMetaProcessor classes to enhance clarity of URL redirection and ensure proper handling of content redirects
updated SolrQuery to reference " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse . java to ensure accuracy in query results and improve test accuracy
updated Console API usage and logging for improved clarity and functionality to ensure compatibility with Karaf ' s Console API and enhance error tracking
changed the visibility of the ` getVerticesColors ` method from public to private and updated the handling of ` mCol ` data based on the mesh compatibility status to improve encapsulation and ensure proper color retrieval based on the current mesh compatibility
added regex filtering to exclude time report directories and updated file copying logic to improve performance by avoiding unnecessary file operations and enhancing code clarity
renamed test methods and updated email validation logic in DataValidatorTest . java to improve clarity and consistency in test naming and functionality
pdfbox - 2576 : remove unused method , a suggest by valerybokov
adequate context should throw exception when a form bind error occur within the adequate context ( e . g . a < form > ) .
removed debug print statements from JoglInput . java to clean up the code and reduce unnecessary output
added a method to allow extraction private fields and updated the method calls to enhance the flexibility of field values and improve test coverage for private fields
[ hueemulation ] fix display device name in web interface ( # 13514 )
refactor Lookup class initialization to handle Java 8 types more robustly to improve compatibility and maintainability by ensuring proper constructor access while creating instances
[ flink - 23454 ] [ core ] deprecate ` weights ` parameter and add it to zparams
refactor ` writeCustomHTML ` method to accept ` Database ` as a parameter to enable database integration for writing custom HTML files
updated key deserialization logic and added assertions in BTreeMap . java to ensure correct handling of null values and improve code clarity
added specific exception handling for BalanceInsufficientException and InvalidProtocolBufferException in cancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to improve error management and provide clearer feedback when transactions fail
netbeans : add a configuration property to disable zerofile allocation
replaced error logging with messaging for Liquibase Pro license key verification to improve user feedback and streamline license validation process
updated the buffer size from 14 to 13 byte in HortonworksEncodedSchemaReferenceStrategy . java and removed an unused field in HortonworksEncodedSchemaReferenceWriter . java to optimize memory usage and ensure proper handling of generic records
added imports for ` ChunkListener ` and ` ItemProcessListener ` across multiple classes to enhance the batch processing capabilities and ensure proper functionality with item processing
refactor AbstractProviderModule . java for improved readability and functionality to enhance code clarity and maintainability
updated method calls to use liveDocs variable directly to streamline code and improve readability by reducing unnecessary method calls
updated Test7005594 . java file to improve test coverage and ensure functionality is verified
fix name in exception message ( report by huy damian )
renamed TopKRollupPhaseOneJob class for clarity to improve code readability and maintainability
bug cs - 15825 : do n ' t map ip to a virtual network if it be n ' t available
added support for analog triggering in the Gamepad class to enhance user experience by allowing more flexible control over analog input behavior
updated the ` iteratesOverSequence ` method to accept a ` Iterable < T > ` parameter and marked the old method as deprecated to improve method flexibility and clarify the purpose of the API
camel - 9053 fixed the issue of camel - http filter
added tests for native query counts in ActivityHistorySQLServerStoredProcedureTest to ensure that the database correctly returns the expected count values for different entities
added a new ` LargeValueFormatter ` class and modified label retrieval logic across multiple classes to enhance value formatting and improve label accuracy in the chart
fix parsing of null character ( \ \ ) in a string state
remove @ suppresswarnings ( ` ` argument . type . incompatible ' ' )
adjusted string concatenation syntax in TraceLinearScanLifetimeAnalysisPhase . java to ensure consistent formatting and improve readability of the code
added a TODO comment to the NullAssertionValidator class to prepare for future implementation of stubbing
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enhance rule key handling for better build efficiency
added system profile directory creation and improved test setup / teardown methods in various test classes to ensure proper system profile management and enhance test reliability
refactor thread factory creation in TestcontainersDockerCmdExecFactory to streamline thread factory instantiation to improve code readability and maintainability by removing redundant lines
refactor HttpChannelOverHTTP to encapsulate inMessages and implement getMessagesIn method to improve code organization and readability by consolidating message incrementing logic
add image / * to accept for image file input dialog ( accept by default )
refactor ElasticIndexWriter to use PreBuiltTransportClient and replace headers with direct node creation to simplify client creation and improve code clarity
added additional details about the witnesses and witness class details in ForkController . java to enhance debugging by providing more detailed context about the witnesses and class names
added a new file ` NullPointerAndEmptyArrayTest . java ` to test handling of null pointer and empty arrays to ensure that the application correctly handles null URLs during runtime
removed the method ` findConfiguredGeneratedSourcePathsUsingDeps ` and directly used ` getDepToGeneratedSourcesMap ` in multiple classes to streamline the handling of generated source paths and eliminate unnecessary code
updated UaaStringUtils to accept a function for constructing wildcard patterns and added a new method to construct wildcard patterns to enhance flexibility in handling wildcard strings and improve pattern formatting
hive - 23790 : fail validation when map work have more than one table scan operator ( navis via ashutosh chauhan )
updated MockitoJUnitRunner import and modified exception handling in WeatherQueryTest . java to ensure compatibility with the latest Mockito features and improve error handling
added error handling for setting firmware settings in TinyGFirmwareSettings . java to ensure stability by logging warnings when setting a firmware fails
simplified import statements and refactored methods in RemoteUtil . java for better readability to enhance code maintainability and streamline language handling
refactor imports and improve assertion method in LazyTraceScheduledThreadPoolExecutorTests . java to enhance code readability and maintainability while ensuring accurate test expectation
hbase - 25801 prepare the table lock before take / load snapshot to avoid concurrentmodificationexception
add a method to create a ` @ platformisnull ` expression and update the exit statement handling to improve the handling of null references and enhance code clarity
remove test that never pass since the new feature be available in okhttp 3.0
added a suspended flag and modified the return logic in the Thread class to ensure proper handling of thread suspension and improve exception handling
change Javadoc constructors to return more specific fields and update method names for clarity to enhance code readability and ensure consistent naming conventions for better understanding
[ camel - 8257 ] fixed potential nullpointerexception when export a template with multiple camel context .
removed duplicate @ Override annotations in security - related classes to streamline code and improve readability by ensuring consistent annotation usage
added module import handling and updated eval method to use ModuleKind ' s commonjs to improve module management and ensure accurate test expectations
update language string to point to " http : / / www . w3 . org / 2001 / XMLSchema " to improve cross - domain support for XML schema export
added content description handling in BubbleTextView to ensure proper display of notification counts based on badge availability
added a MouseWheelListener to the scroll pane to handle mouse wheel events more effectively
added resource management and a new test method for positioning absolute in the VisualTester class to ensure proper resource management and validate behavior of the positioning feature
updated currency pair references from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to reflect the new currency pair naming convention for better clarity and consistency
kristianrosenvold : fix classcastexception in vacuumcontroller . getlocations ( )
simplified the currency return value by removing unnecessary checks for DSH , QTM , and QTUM to improve code readability and maintainability
replaced imports and updated field handling logic in JsonFormat . java to improve code clarity and ensure default values are printed correctly in different message types
updated JacksonXmlFormatMapper to handle both isArray and Byte [ ] types explicitly to improve type safety and functionality for JSON serialization
updated VirtualThread . java to use new constant values and introduced PARKED _ SUSPENDED constants to improve clarity and functionality of thread management in the VirtualThread class
updated DirectoryTaxonomyWriter to use catTerm instead of a NoOpCache class to improve clarity and consistency in cache handling
refactor VetoableChangeSupport class for better code organization to enhance maintainability and readability of the code
adjusted height calculation in BrowserContentPane to account for - 1 height to ensure proper vertical alignment of the browser content pane
pdfbox - 2853 : remove throw unused exception , use ioexception instead
added unit tests for handling short and long support messages in ` ShadowDevicePolicyManager ` to ensure correct security behavior between admin and long admins in the device policy management
ggb - 2118 fix forexam . close help button have double - click .
renamed LambdaBeanPropertyMemberAccessor and MemberAccessorFactory files to improve clarity and consistency in naming conventions
refactor sleep logic to use ThreadHelper for better readability and introduce new test cases for G - 28 and G - 28 axes to improve code maintainability and ensure proper handling of axes in command processing
updated the version check logic in SwingStartup . java to ensure proper handling of release status and avoid unnecessary updates
add option to include comment for generated file in db migration
updated player permission syntax from " < player > " to " < player | * > " across multiple files to ensure compatibility with updated plot permission conventions
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused components to streamline the codebase
rename method calls from ` nameVariableName ` to ` optionName ` for clarity to improve code readability and maintain consistency in naming conventions
fix ( test ) : do n ' t run testng with a parallel class
http : / / issues . apache . org / jira / browse / amq - 4568 - avoid npe when shut down amq broker
refactor : remove static import of enums in ctmethodimpl . java ( # 2564 )
added serialVersionUID fields to multiple Java classes to ensure proper serialization compatibility for these classes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the shaBase64 method to accept a custom separator parameter and added a real test for its value retrieval to enhance flexibility in generating cryptographic IDs and ensure correctness through testing
updated parameter handling in ` Parameters . java ` and modified the conditional check in ` TestAction . java ` to enhance null safety and clarity in the logic for determining system actions
add a new file ` Person . java ` containing a class ` Person ` with a private field name to establish a structure for managing Person objects in the Maven framework
simonstewart : start node - ring gathering directly from fbutil . getlocaladdress ( )
updated time string comparison to be case - insensitive to ensure consistent behavior regardless of input case
added assertions to verify the metadata fields for timeColumn , timeUnit , and totalDocs to ensure the metadata reflects the expected metadata for better data integrity
updated color import and changed the foreground color used in simPlotPanelDesc to ensure consistent color usage across the application
added a call to disconnectEmitters . onNext ( new Object ( ) ) in the NettyStreamingService class to notify subscribers of a new object when the service is no longer active
fix @ defaultbeancontext to work with spring 4 . x
danielwagnerhall : click on the hidden page should work as expect
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added JNDI location handling in JtaTransactionManager to enable dynamic JNDI location configuration for better transaction management
changed the access modifier of the ` pickUri ` method from public to private to restrict access and encapsulate functionality within the class
removed the hasFunction method from the Library class to simplify the class as it no longer needed
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48737
fix : bigquery with timestamp data type should not use millisecond precision ( # 28232 )
replaced multiple null checks with a single requireNonNull method for buffer and userCredentials to simplify code and improve readability by reducing redundant checks
fix name coercion with default value if input be map
added row and column checks to the FlightConfigurablePanel class to ensure data integrity by validating row and column positions
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure the selection panel displays correctly in the user interface
[ java ] unnecessarylocalbeforereturn - fix false positive with a null member
refactor script engine initialization by removing unnecessary checks to streamline code and improve clarity
mahout - 1343 - remove check for NaN a this can lead to a rare corner case .
make maybeincrementalbackup only call if sstables be not null
refactor relativize method to include checks for path equality and add tests for relativize behavior to ensure that the relativize method does not add extra ` . ` dot ` suffix to paths
update column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values and include decimal digits
fix unit test which randomly fail on window
replace ` toHexString ` with ` toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure proper conversion of byte data to hex format
refactored error handling controllers to extend from AbstractController and Error403Controller to improve organization and accessibility of error handling components
replaced calls to ` TerminalFactory . resetTerminal ` with ` TerminalFactory . resetIf ` in UnixTerminal and WindowsTerminal classes to ensure proper handling of terminal state changes
updated import statements and modified trigger patterns in Tiny . java for improved clarity and functionality to enhance code maintainability and ensure proper handling of method invocation and array conversions
fixed - concurrentmodificationexception occasionally cause by concurrentmodificationexception
changed method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` for consistency to improve clarity and maintainability regarding the converter ' s purpose
pdfbox - 4892 : improve javadoc , a suggest by valerybokov
improve error message when fail to create classpath
added reader and writer exception fields and updated thread join logic in LargeStreamletTest . java to improve error handling and ensure proper thread synchronization during tests
update handling of extra pages in HomeFragment to accommodate additional page types to ensure accurate page navigation based on user settings for improved user experience
added a brokenGaussian flag and modified image processing logic to handle exceptions to ensure proper handling of GIF processing and improve robustness
remove suppressnodes from SequenceMatcher and label conversion in BaseParser to streamline code by eliminating unnecessary method overhead
pdfbox - 2852 : use try - with - resources to prevent resource leak
deleted the file TestDocInverterPerFieldErrorInfo . java to the test file is no longer needed for the current project
added keyboard event execution in AbstractLauncherUiTest and modified the assertion in LauncherInstrumentation to verify the event ' s state and improve test reliability
added JSON serialization logic for filenames to URL in FileDumper to enable proper handling of filenames during JSON output for better interoperability
bugfix # 200252 , reset profilerserver ' s resultnotifiedflag correctly
refactored texture loading logic into a separate method and updated memory address handling to improve code readability and maintainability while ensuring correct texture management
update assertion in test cases to remove " application : " prefix to ensure correct context ID validation in tests
isbn test updated due to late change in randomizer name
refactor notification sound handling in AlarmReceiver . java to improve clarity and maintainability of notification sound configuration
add a method ` reportLoopCount ` to the ` RootNode ` class to enable reporting of loop counts for improved performance
add finalization of stack version after finalization of cluster
update listregions api call to use regionid instead of regionid to ensure correct retrieval of region information for better functionality
modified the open method call in ItemOrientedStep . java to ensure consistent execution context is used during stream management operations
added a new file ` CountedLoopProblem . java ` that demonstrates the use of ` math . abs ` and ` equals ` methods to implement a test case for counting loop results to ensure that the methods correctly handle negative results to prevent runtime errors
replaced ` long ` parameters with ` long ` parameters in ` executeCompiledMethod ` and ` executeCompiledMethodVarargs ` methods to allow for more flexible handling of method arguments
[ gr - 21256 ] graalvmconfig . pendingfailedspeculationoffset need to be late to use jlong only .
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities and return value in the transformation process
[ # 8452 ] feedbacksessionlogictest : fix classcastexception in constantsum question ( # 8598 )
removed the call to applyToActivitiesIfAvailable in BaseApplication . java to streamline the application ' s lifecycle management logic
added thread management and stack dumping functionality in CloseRace . java to improve error handling for child threads that do not finish gracefully
replaced ` return val ` with ` intValue ( ) ` in ` IntPointField . java ` and added multiple assertions in ` TestPointFields . java ` to ensure correct handling of integer values and validate the functionality of the query
fix for issue 294 : arc size in component can be rounded by width
tweak image size for wider resizing . report by emil ivov .
replaced the ` setMinifySqlEnabled ` boolean with ` shrinkWhitespacesInSql ` in multiple files to allow for more flexible control over SQL shrinkming settings
refactor waitForStateTransitionToEnd method to improve consistency and clarity in state transition handling to enhance code maintainability and readability by consolidating state transition logic into a single method
added CasCoreConfiguration . class imports and updated class references across multiple test classes to enhance configuration management and ensure consistency across test classes
replaced long conversion methods with DataIO method for reading volume data to improve performance and performance by using a more efficient data structure
camel - 8461 fixed the unit test error of camel - http
refactor proxy class path creation in DeclarativeHintsParser . java to improve readability and maintainability of the code
add medium scope to script for set audio and voice ( # 4299 )
added methods to get and set layer manager in AnimComposer and AnimEvent classes to improve layer management management and prevent potential conflicts during animation creation
added a check to return early if the queue is empty and removed the showDefaultScreen method to improve performance by avoiding unnecessary processing when no queue is available
added null checks in MapRecordProcessor and updated exception handling in TezProcessor to improve robustness by handling potential null values and providing clearer error logging
replaced ` center2D ` with ` center . toVector2D ` and introduced a new method ` setCenter ` to improve the handling of center calculations and ensure proper minimum and maximum size handling
replaced JUnit assertion logic with JUnit ' s ExpectedException rule to improve exception handling clarity and consistency in test code
modified the sendOneQuery method to use a null parameter list for subqueries and added a test for multi - execution in StatementTest to enhance robustness of query execution and ensure correctness through testing
customize security environment only if not null .
added a new API endpoint for Android editing in the ReviewInterface class to enhance user experience by allowing access to Android features
updated test cases in Test . java to improve test coverage for critical functionality
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in the key generation process
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
added a method ` writeSectionDefinition ( ) ` to the ` RtfDocumentHeader ` class to enable writing of section definitions in the document
log a warning if a large jump can be detect due to a large location
removed unnecessary print statements from TableCellLayout and TableLayout2 classes to streamline code and improve performance by eliminating unnecessary output
doc : generate sample code in the java microgenerator ( # 419 )
replace boolean rootNameFn and sourceFilterFn with WeakReference for improved memory management to enhance memory efficiency and prevent potential memory leaks by using reference methods
simplified the addition of elements to the ` data ` and ` added ` lists by removing binary search to improve performance and reduce code complexity
refactor SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and replace it with PreferenceActivity to simplify theme management and improve code maintainability
updated the field name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of the field in the tests
fix for fst ( ) to actually test the root arity
added an assertion to verify the security policy existence and file type to ensure that the security policy is correctly configured for validation
camel - 14284 : camel - olingo2 should use source code generate configurer to avoid reflection configuration .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest to allow additional time for thread synchronization during tests
removed the exception logging from the info log statement to simplify logging to reduce noise in the logs
added file upload support for image publishing via HTTP . smack - 148
camel - 9594 : fixed npe in camel - netty when use netty producer without a channel .
updated the URL _ TEMPLATE regex pattern in BalancedClickhouseDataSource . java and added new test cases in BalancedClickhouseDataSourceTest . java to ensure proper parsing and validation of the database URL format
jetty - 1378 remove unneeded / unused code in fragmentactivator
added configuration for null value strings in CSVRecordReader and its configuration to enhance flexibility in handling null values during CSV processing
added LiquibaseService annotation and LiquibaseService annotation to multiple connection classes to streamline service management and ensure consistent behavior with LiquibaseService
updated the type of ` aggregatedScope ` from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` addImportedStaticFieldNames ` method to ensure compatibility with Java source code handling and improve code clarity
add default topic for item ( itemstate , itemcommand ) ( # 3251 )
updated exception handling imports from BeanCurrentlyInCreationException to BeanCreationException to resolve issues related to bean creation errors in the application
updated case names from " zkCredientialsProvider " to " zkCredentialsProvider " and removed redundant validation lines in SolrXmlConfig . java and TestSolrXml . java to improve clarity of case statements and ensure proper functionality through validation
fixed mana tablet not be able to display mana . close # 32
set the identifier collection in mCurrentCallEvent using the copyOf method to ensure the current call event has the correct identifier collection
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter to streamline code and improve maintainability
updated the thread pool executor method name in ScryptUtil . java from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to simplify the key generation process by removing unnecessary identifier
refactor methods in GeneratedCode . java to improve code readability and maintainability
updated assertion to include an additional parameter in the assertion check to improve clarity and intent of the assertion failure message
added a new import statement for display utils and set the visibility of shareWithMeIcon to GONE to enhance user interface by hiding the share icon when it is disabled
added HTTPS links to Bootstrap CSS links in multiple filters to enhance security by using secure protocol
added null and empty checks to RouterFilter and RouterServerListFilter classes to enforce data integrity and improve code consistency
updated assertion message in TestIndexWriterMergePolicy . java to include details about documentCount and segmentCount to improve debugging by providing more context on assertion failures
mark multiple Java classes as deprecated to indicate that these classes are outdated and should not be used in new development
add null check to cxrawlingsessionmanagervalve . add test
change to use a privileged action for jspapplicationcontext when security be enable .
updated RocketComponentConfig to use minimum and maximum values for length calculations to ensure consistent handling of component lengths across different axes
guacamole - 290 : ensure session timeout do n ' t overlap .
rewrite filewrapper . updatelocklink to use parent . updatechildlinks ( .. )
removed unnecessary import and simplified method calls in SpringCloudPlugin . java to improve code readability and maintainability by reducing redundancy
increase publish delay to allow for slow ci build
add always - override functionality for r . attr . shiftcodes
updated heartbeat logic to check for active cluster coordinator and enhanced leader election management to improve accuracy in determining if a node is leader , enhancing the accuracy of heartbeat monitoring
removed unnecessary white space in NearbyActivity . java to improve code readability and maintain consistent formatting
updated the filter condition in AbstractKerberosDescriptorContainer to use isReference ( ) instead of getName ( ) to improve clarity and correctness in identifying identity references
updated method signatures to accept a boolean parameter for noop caching to improve flexibility in different command options by allowing noop behavior
added a sleep delay of 3000 milliseconds in the exception handling to ensure proper timing between exceptions during TCP record processing
copy original arguments before modification in PatchExtensionMethod . java to ensure original arguments remain unchanged during method calls
replaced ` Map ` with ` Set ` for managing raw native libraries to improve thread safety and performance when managing raw native libraries
added sequence attribute support and related functionality to the router parser to enhance sequence processing capabilities for better message handling
remove x509 view from jwk view mapping , since they be now standard
updated the assignment of readers to use the first element of the reader to ensure correct handling of the first reader in the query component
updated ValueSourceParser to use Double2Parser for max and min values to enhance functionality to support additional numeric values
removed unnecessary focusable check and pointer event return logic in Container . java to simplify code logic for better readability and maintainability
removed unused variables and simplified the next ( ) method signature in TokenSources . java to improve code clarity and reduce unnecessary dependencies
cloudstack - 2120 - fix sql insert to use uuid a primary key
updated the dependency injection for flowBuilderServices in CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to enhance the configuration flexibility and ensure proper bean retrieval when the flowBuilderServices is available
[ flink - 23454 ] [ test ] add test for terminate backend and postgresql
remove ` ` editor . laf ' ' preference a it be now enable by default
refactor methods in ServiceComponentHostImpl to use local variables for state retrieval to improve code readability and reduce redundancy in accessing state entities
adjusted margin calculation logic in FloatingTaskView . java to simplify margin handling based on device orientation
added a condition to break the loop and updated the status line message in the NavigationShareTab to improve control flow and provide clearer user feedback
bugfix # 163994 , do not increment thread number in cpucallgraphbuilder
ggb - 2323 use deftoolbar for all perspective ( 3d )
added NetworkAddressChangeListener interface to HomeKitImpl and updated logging messages to enhance network address management and improve clarity of warning messages
replace leaseManager retrieval with leaseRenewalTime retrieval in TestHDFSEventSinkOnMiniCluster . java to improve accuracy of lease expiration handling
replaced ` prefixHeader ` and linkStyle with ` Optional . absent ( ) ` in ` CxxLibraryDescription . java ` to provide more flexibility in handling optional properties
add null check for exception message in exceptionhandlerregistryfactory ( # 2841 )
changed ` nextID ` variable to be ` volatile ` and modified its retrieval methods to ensure thread safety and improve ordinal validation in the taxonomy writer
fix test which randomly fail on slow ci server
implemented HasSourcePath interface in AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to provide a way to retrieve source paths for better compatibility with Buck rules
replace StringBuffer with direct string concatenation in IllegalArgumentException to improve performance by avoiding unnecessary string manipulation
added a custom index field name to ` OrdinalMappingAtomicReader ` and updated tests accordingly to support custom index names and enhance test coverage for ID - related functionality
8074032 : instant . ofepochmilli ( millis ) . toepochmilli ( ) can throw arithmetic overflow in toepochmilli ( )
updated attribute retrieval in OGLESShaderRenderer and LwjglRenderer to use getName ( ) method instead of getAttribute ( ) to ensure consistent retrieval of buffer type attributes for rendering
make copypastables block only when necessary
8274234 : c2 : charbuffer . grow could potentially cause data loss ( improper performance )
removed redundant calls to ` getMutableMetadata ( ) . resetTemporalAttributes ( ) ` and refactored audio packet processing logic to improve code clarity and efficiency in handling audio packets
camel - 5490 : added support for scale option on camel - sql which be not well know .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current ownership of the Sun microsystems system
refactor Console initialization into a separate method for better encapsulation to enhance maintainability and readability of the console code
replaced token validation logic in InputStreamBinder and NextcloudRequest with a new method in NextcloudRequest to enhance security by utilizing EncryptionUtils for token validation
added handling for EOFException in Http11InputBuffer . java to ensure proper error handling for eof scenarios
add unit tests for ` deleteMember ` method in ` DefaultGroupProvider ` to ensure correct behavior of member deletion under non - existent groups
camel - 6056 : cleanup unnecessary object array creation in camel - ftp component
deleted the V2ReplicationProtocol . java file which contained obsolete replication protocol functionality to remove unused code to streamline the project
updated references from ` compileTimeClasspathDeps ` to ` compileTimeClasspathSourcePaths ` across multiple classes to improve clarity and consistency in handling source paths within the library
added new classes ConstructorArgsDemo . java and StrictDemo . java , and updated StupidFinal . java to include new demo classes to provide flexibility and demonstrate the handling of constructor and secret arguments in generated classes
fix memory leak in directtemplatefeaturecollectionfactory ( try to closing iterators more than once )
fix writeresponsethandler check to avoid it check for 2 * itself
added a null check for item index before comparing dates to avoid potential NullPointerExceptions when accessing item indices
do n ' t show node in ancestor view only if it ' s child of the node
add width check to return early if it is below 12 to ensure proper layout handling when the application is too small
updated equality check in ChangeLogParameters to use ` equals ` method instead of ` = = ` to ensure correct equality comparison for change log parameters
changed the ` loggers ` variable from static to instance ' final ' to ensure immutability of the ` loggers ` map across the application
modify return statement to return the base plot instance to ensure the correct base plot is returned for better functionality
updated the ` createUploadDir ` method to include an ` initialCreation ` parameter to improve logging clarity during directory creation
added a boolean parameter ` sendStatus200 ` to multiple classes and updated related classes accordingly to support HTTP status codes accurately
added a check for empty comment length in the Space class to ensure that comments are not processed as empty strings
added file type management functionality to BuckModule to ensure all related file types are removed from the system
replaced specific imports with wildcard imports and changed method return types for multiply methods in ComposedUtil . java to streamline imports and improve type safety in the code
updated error message handling and improved validation for unsupported CPU options to enhance clarity and accuracy of error messages related to unsupported CPU versions
removed unnecessary whitespace in AccountsActivityTest . java to improve code readability and maintain consistency
updated Player . java file with new methods and variable adjustments to enhance player functionality and improve performance
added a mockito package import method for ChannelTypeUID to facilitate testing of ChannelTypeUID using Mockito
fix index out of bound exception ( guest can not be determine ) .
added context management for FontsContract in AndroidTestEnvironment and ShadowFontsContract to ensure proper context management during testing and tests
added timezone handling for milliseconds and milliseconds in TimeGranularity . java and PinotDataSourceMaxTime . java to ensure accurate time calculations with specified time zones
refactor control flow analysis logic to improve handling of try - finally statements and exit flow conditions to enhance the correctness and functionality of the try - finally structure
replaced assertEquals with assertAssertNoEqual and improved error messaging for arrays to enhance clarity of assertions by ensuring arrays do not have the same size and provide clearer error feedback
add default case to prevent unintended behavior
changed the bitwise operation syntax for index ( ) in MeshBuilder . java to ensure correct handling of index values beyond the specified offset
nifi - 1742 : remove unused controllerserviceprovider from standardprocessscheduler
added support for dynamic processor names in KotlincToJarStepFactory to enhance flexibility in processing Javac plugins by allowing dynamic class paths
updated RESCROLL _ DELAY value and simplified page snapping logic in DragController and PagedView classes to improve code readability and maintainability by consolidating functionality
reload workspace when the shortcut permission change be : 95f3a6ba2c
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support navigation through history search functionality
added null check for the core name before checking its existence in CoreAdminHandler . java and implemented a test case in CoreAdminHandlerTest . java to ensure that null core names are handled correctly and to validate the reload operation behaves as expected
added marker selection functionality to the NearbyMapFragment to improve user interaction by managing marker display and bottom sheet behavior
added exception handling for Throwable in FileSyncAdapter . java to improve error handling and trace debugging for troubleshooting purposes
refactor output handling in TestMemoryAwareness to use OutputAnalyzer for better error handling to improve reliability and maintainability of the test code
refactor FeedQueues to improve handling of ungarbage loading based on application settings to ensure that ungarbage loading occurs only when the application settings apply for ungarbage loading
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
updated AndroidBinaryDescription to use Locale . US for packageType and resourceCompressionMode to ensure consistent behavior across different locales when processing Android binaries
changed XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure correct content type is used for XML processing
updated file instantiation and configuration retrieval in Args . java to ensure consistent usage of the singleton instance variable for configuration file handling
modified the waitUntilReadyAndTimeout method from " sleep 5 ; exit 1 " to " exit 1 " to allow for a longer wait time before handling timeout scenarios
updated GroupingIdValue calculation to use long instead of int for group count checks to improve handling of larger data values and prevent potential overflow issues
added multiple checks to throw HeadlessException for headless graphics environments to ensure proper exception handling for headless graphics scenarios
added matching logic for furnace transactions in ExoflameFurnaceHandler to ensure furnace can be smelt when they are not matching the world
add a config to explain the thread count when solver be move .
[ ds - 3762 ] fix wrong path when use revinclude with wrong spname .
added a new test class ` Issue582Test ` to validate feature sorting and key serializers to ensure the integrity of data processing and error handling in the application
[ native ] add test for bigdecimal to avoid overflow
refactor LoadingCache class to improve cache loading logic to enhance performance and reduce load times
add a new rule for avoidnonconstructormethodswithclassname to NamingRulesTest to enhance test coverage for non - constructor method handling
alexeibarantsev : handling foraleelementreferenceexception in expectedconditions . getselected ( ) .
added a new method ` hasView ` and improved error handling in database snapshot generation to enhance functionality and provide clearer error messages when views do not exist
modified the implementation of DOMUtil . java to enhance performance and maintainability of the code
added translation effects using full screen scale in TaskViewUtils and a new log method in Utilities to enhance visual responsiveness and improve matrix logging capabilities
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper . java to disable the dynamic rendering transformation feature based on user preferences
added a method to walk a fst and modified the TempFSTTermsReader and TempTermOutputs classes to handle arc processing and write correct document frequency to enhance functionality for processing fsts and ensure correct processing of document frequency values
added SolrQueryRequest parameter to the DocTransformer create method signatures across multiple classes to support handling of query requests for enhanced functionality
added test cases for post content insertion and announcement validation in SingleTableMySQLTriggerTest . java to ensure proper handling of null values and update operations in the database
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a setter method to improve code clarity and maintainability by centralizing comparator assignment logic
updated SQL string formatting in PhoenixQueryBuilderTest . java for consistency to ensure correct formatting of SQL queries across different operating systems
[ java ] bring back spark initialization to fix flakiness in test .
added support for retrieving and saving total storage pool properties in DynamicPropertiesStore to enhance functionality for managing storage properties in the system
added support for determining the base path of the Java source directory in AssetsController and updated references in AssetsControllerTest to improve resource loading behavior for development mode and enhance code clarity
updated MapMarkManager to use getMapMarkKey for checking map mark position to improve clarity and maintainability of map mark key validation
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to process default values to improve handling of token modifications during semantic analysis
removed ` throws IOException ` from method signatures and replaced it with ` JavacProcessingEnvironment ` to simplify method signatures and manage exceptions differently
updated JxBrowserManager to use ` fullPath ` for loading JxBrowser files and improved error handling to enhance clarity and robustness of file loading process and ensure robust error management
updated image format comparison to use ` equals ( ) ` method instead of ` format = = ` to ensure compatibility with different application version formats
[ somfytahoma ] fixed mislead exception message ( # 10685 )
( chore ) camel - aggregator : disabled flaky test on github
added configuration properties for key store types and password in OpenWireConnectionTimeoutTest . java to enhance SSL configuration flexibility for testing connections
replaced ` warnThenDebugLogger ` with ` stackTraceWarnThenDebugLogger ` and modified metric handling logic to include ` nanGaugeWarnThenDebugLogger ` to improve logging clarity and handle NaN values gracefully during metrics export
remove the session id from session info when it is no longer needed
added logic to set the hostname from all alerts in HeartBeatHandler and adjusted the formatting of the AlertReceivedListener to ensure that the system correctly sets the hostname when alert states are merged
modified buffer flushing logic in ChannelEndPoint . java to streamline the return statements for better readability and efficiency
[ kie - 2439 ] move kmodlistratortest . java from kmodlistratortest to kie - api
added a test for seeking to the MediaPlayer using different SDK versions and modified the seekTo method to accept an integer parameter to ensure proper functionality of media player seeking behavior and align with updated SDK requirements
renamed ` createTask ` methods to ` createThrowingTask ` across multiple classes to clarify the purpose of the task ' s purpose in handling exceptions
fix close button in aqua look and feel . close button have a border of the wrong size .
add request timeout settings and update test assertions in TSPTimeStampService and TestSignatureInfo classes to improve session management and ensure accurate test outcomes
added ClassLoader reference and updated XStream creation methods to accept it to enhance flexibility and security handling during XStream creation
added error handling for diamond method and created a new class DiamondRaw to improve type safety checks and demonstrate the use of the diamond functionality
[ hotfix ] [ table - common ] fix minor typo in reloptutil
updated unsigned bit requirement checks in Http2Settings . java to use ' && ' instead of ' | | ' to ensure correct values are validated for unsigned values
deleted the file mapInterfaceTest . java to the test file is no longer needed for the current implementation
[ flink - 23454 ] [ test ] remove illegalstateexception from sessionstypooltest
start object and end object for the featurecollection object in geojsonwmsbuilder . object ( )
updated the method setIndex to use intValue ( ) for setting the selected index to ensure proper handling of integer values when setting the index
added a check for manual unstashing in TaskbarStashController to ensure proper handling of unstashing based on app state
camel route coverage : do n ' t dump route a a custom id or not
modified the getEventMismatchMessage method to accept a boolean parameter for waitForExpectedCount to enhance flexibility in event mismatch detection based on wait time constraints
added a new class HeaderFixer to handle header file processing to streamline header file processing and ensure proper handling of package - specific headers
added first load broadcast functionality to the Launcher class and updated widget binding logic to improve user experience by notifying users about loading completion
deleted the SuperJumperAndroid . java file to remove unused components to streamline the codebase
changed return value from true to true in SystemTableScan . java and improved query string formatting in TestStarQueries . java to ensure correct behavior when the system table is distributed and enhance query clarity
remove unused interface ( no longer use )
include some item in the miss item list so they remain in place when they go offline .
updated return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index ` i ` to a long to ensure correct calculations with potential large index values
added caching functionality for format records in HSSFCellStyle to improve performance by reducing redundant computations
updated the query in RemoteAuthenticationEndpointTests to include a filter for user names to ensure the filter is correctly applied for user authentication requests
changed the condition from checking if the def is needsInput ( ) to checking if it has a finished ( ) method to ensure the compression process executes regardless of the input state
updated the logging mechanism in Launcher . java to use LauncherAtom for logging all apps events to improve clarity and maintainability of the logging output
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
deleted the DeadlockTest . java file to remove unused test class to clean up the codebase
do n ' t recreate content if input be null ; add more verbose message
added a JMenuItem to open URLs in the browser and adjusted related functionality to improve user experience by allowing users to open URLs when the server is down
added handling for inconsistent multi - time outputs in the ErrorMsg and SemanticAnalyzer classes to improve semantic error management and prevent unnecessary processing of duplicate outputs
remove null check from addentrylistener , since it be never null .
fix geometry . reverse ( ) for array and vector
fix setopen ( ) so it work for mac o x
added a boolean variable ` first ` to the ` TestPayloads ` class to ensure the field is initialized correctly during processing
replaced the exit condition with a call to showOverviewMode to simplify the mode handling logic for better readability
fix networkroutetest failure , ensure destination be set before dispatch the message
camel - 7999 : fix the issue that messagehandlerinterceptordefinition can not handle a message with thanks to ivan
simplify variable declarations and suppress warning in NestedArithmeticTest . java to improve code readability and maintainability by removing unnecessary parameters
refactor pending and buff handling in HttpClientRequestImpl and add tests in HttpTest to improve performance and ensure correctness of buffer writing operations
updated verboseLevel assignment and modified artifact replacement for analysis - to - analyzers - to ensure proper handling of dependencies with Solr and improve artifact processing
pdfbox - 4892 : use getter / setter instead of getter / setter to avoid classcastexception a suggest by valerybokov
removed unnecessary debug print statement in ReferenceUtil . java to clean up the code and improve readability
add query type name to fieldvisiblevisitor in order to support complex query type .
added configurable solidity JSON RPC port configuration to CommonParameter and related classes to enable flexible port management for JSON - RPC communications
added a type check for ` folder ` before removing it as a drop target to ensure type safety and prevent potential ClassCastException
refactor the creation of the stub jar in StubJarTest to a separate method for improved code organization to enhance readability and maintainability of the test code
added setup wizard and workflow helper features to StartPageTopComponent . java to enhance user experience by providing setup wizard and management of complex projects
schedule a metered flusher before stop node to avoid deadlock .
remove unnecessary typecasts to fix java 6 build
updated return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure compatibility with user - specific authentication requirements
refactor HttpChannelState to streamline timeout handling logic to improve clarity and maintainability of timeout handling logic
allow non - blocking createendpoint to work in a multi - threading environment
updated the TABLE _ HEADER _ SEPARATOR regex and modified the matching logic in TableBlockParser . java and TableTest . java to improve header parsing accuracy and ensure correct behavior with multiple columns
changed camera rotation from 32.0 f to 31.5 f to improve camera precision and performance
added a preference for starting on boot up and disabled it in GpsSettingsActivity to improve user experience by hiding the start on boot setup and clean up outdated information
updated the BigInteger size from 128 to 512 for the client secret in DefaultOAuth2ClientDetailsEntityService . java to improve security and reduce the size of the client secret
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to specify the correct method for enabling non - null parameters to improve clarity and accuracy of exceptions related to parameter registration
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest to mark the test as ignored due to potential race conditions
updated PinotFS input and output URI handling methods to return only LOCAL _ PINOT _ FS and added exception handling to improve consistency and functionality of file URI handling in the segment generation process
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting for users based on their locale preferences
added MetalLookAndFeel support to UIManager to enhance user experience with improved visual design
refactor ping task handling to manage exceptions more effectively to ensure proper cleanup and error management during WebSocket session ping
[ type : fix ] fix global error handler report ( # 3342 )
renamed variable ` module ` to ` from ` in ` ModuleTable . java ` and ` PackageTable . java ` to improve clarity and consistency in method naming
fix the pinot admin to print any exception that occur while run the command line ( # 709 )
replaced deprecated equals ( ) method calls with hashCode ( ) and added hashCode ( ) implementation in Subject . java to ensure compatibility and eliminate obsolete usage of equals ( ) and hashCode ( )
updated variable names and logic for clarity and consistency in the CustomPlaybackOverlayFragment and ImageButton classes to improve code readability and maintainability by using consistent boolean types
mapview : fix zoom in basicmapviewer . setmapzoomcontrols ( ) .
refactor admin user and group handling to utilize impersonation utilities for improved clarity to enhance code maintainability and reduce duplication in user and group validation logic
8028270 : files . readsymboliclink call accesscontroller directly so security manager ca n ' t grant the permission
added argument extraction functionality to DelegatedClientAuthenticationAction and updated related classes to enhance functionality by allowing argument extraction for better session handling
added ' final ' modifier to the defaultGroup variable in NacosServerRegisterRepository . java to ensure immutability of the defaultGroup variable after initialization
replaced the destroy method with destroyTileCaches method and create tile caches to improve resource management and ensure proper cleanup of tile cache
updated the addInfoRow method and removed all views in the InfoLayoutHelper class to streamline the code for better readability and maintainability
refactor ` cleanFeedsWithoutSubscriptions ` method to improve structure and structure to enhance clarity and maintainability of the method ' s purpose
refactor authentication variable names in ImmutableAssertionTests to improve code readability and maintainability
nifi - 2892 : remove file deletion from test to fix a test failure .
make conicive point 1 / 2 non - zero more consistent
pdfbox - 4892 : move eof check to the top level to avoid race condition
added @ SuppressWarnings ( " vararg " ) annotations to fields . java and MockitoBeforeTestNGMethod . java files to suppress unchecked and vararg warnings during testing
refactor CImage class to improve image creation logic and memory management to enhance performance and ensure proper handling of image dimensions
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to improve data handling by utilizing the more suitable data type
changed variable and variable names related to runtimeVisibleAnnotations from runtimeVisibleMethodOfFieldAnnotations to runtimeVisibleFieldOrMethodAnnotations to improve clarity and consistency in handling method annotations
replace null checks with Objects . equals for better readability and performance to improve code maintainability and leverage built - in utility for null - safe equality checks
updated method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` across multiple classes to improve clarity and consistency in handling binary names in class resolution
added verification for HTML error and not found properties in NinjaDefaultTest to improve error handling and test coverage for HTML view properties
renamed ` updateAllAppsWidth ` method to ` updateAllAppsContainerWidth ` and modified related calculations to improve clarity and consistency in handling all apps display parameters
updated padding and list view position offsets in DetailFragment and ListFragment to improve UI responsiveness and visual consistency in view handling
updated exception handling logic in ZkStateReader . java for better clarity and consistency to ensure proper interruption handling during cluster properties reading and improve maintainability
added null checks for field values in HttpFields . java and implemented tests for handling empty headers in RequestTest . java to ensure that fields are only processed when they are not null , improving robustness and stability
server : check static nat service in network if static nat be not support ( # 5956 )
added multiple calls to resetHeaderScrollingState ( ) to OCFileListFragment . java to ensure proper state management during header scrolling operations
fix issue where extra page hang around ( issue 11634172 )
added fixed width handling to BitmapFont based on glyph ' s fixed width state to improve layout responsiveness when the font is fixed
refactor ChangeLogFragment to simplify title handling by removing title parameter to enhance code readability and simplify title display logic
added preEvent and postTransition methods to AbstractStateMachineFactory to enhance event handling and state management capabilities
rename ConfigDescriptionProvider . java to align with new naming conventions to improve code readability and maintainability
updated role creation and improved Hive configuration handling in tests to enhance role management and ensure compatibility with Windows environments
added sorting logic for facets by count in FacetComponent . java to improve efficiency by bypassing out of loop when sorting by count
refactor checkstyle configuration to use the build directory for the cache file path to ensure consistent configuration for the cache file location based on the build configuration
added logic to stop Jetty instances in DeleteInactiveReplicaTest . java to improve test clarity and tracking of active replicas
added a file name parameter to the FileActionsDialogFragment for better user experience to enhance user experience by allowing a customizable file name for better navigation
updated condition checks in CellLayout to use a constant for invalid direction values to improve code clarity and maintainability by using a defined constant instead of a magic number
changed fields for currency and from , and updated the path annotations in InnerTransferRequest . java and AccountAPI . java to improve data handling consistency and clarity in API endpoints
fix job execution id retrieval during test [ hz - 2194 ] ( # 24232 )
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` file to implement functionality for enabling the admin client in the application
simplified import statements and added new visitIdentifier methods in FindTypes . java to enhance code readability and improve type handling in identifiers
added action text color setting in AuthenticatorActivity to improve user interface by using a darker color for action text
added a new method ` find ` to the ` Manager ` , ` StreamSupplierComponent ` , ` AbstractManager ` , and ` MockManager ` classes to support sorting entities based on a specified field to enhance the flexibility and usability of the Speedment framework
renamed methods to ` createTestStepsForPickleSteps ` for clarity and consistency to improve code readability and maintainability
renamed test methods from " noArgMethodIsNotValid " to " validMethod " and updated its usage in StaticHandlerMethodResolverTests to improve clarity of test purpose and ensure consistency in naming conventions
added a method to cancel a client and updated the startDriver method to handle it to ensure that child processes terminate before attempting to connect back
added getImplicitPreCoercionValue method to SkylarkParamInfo and related classes to handle default values to enhance parameter information management and ensure default values are correctly retrieved
initialize lastDisplayedUser with an empty Optional to avoid potential null pointer exceptions when accessing lastDisplayedUser
added a method ` findAll ( OrderSpecifier < ? > orders ) ` to ` QueryDslMongoRepository ` and updated method signatures in ` AbstractPersonRepositoryIntegrationTests ` and ` QuerydslRepositorySupportUnitTests ` to improve query handling capabilities and ensure proper test coverage for querydsl order specifications
[ iotdb - 3667 ] fix npe when restart datanode ( # 6017 )
exit the warm - up loop in case of a failure
feature : add xread support for redis and redis ( # 4104 )
removed ` @ FIXME ` comment and updated ` incrReadByteCount ` method calls in ` LinkedBufferInput ` and ` StreamInput ` classes to streamline code by eliminating unnecessary comment and improving clarity
refactor ` CasWebSecurityConfiguration ` and ` CasWebSecurityConfigurerAdapter ` to use a new bean for web security configuration to improve modularity and separation of concerns in security configuration
added a new test class for JDBC with DB token store functionality to ensure that the DB token store functionality works correctly without delegation
added a method to register content providers in ShadowContentResolver and modified ContentProviderController to handle ProviderInfo during creation to enhance the functionality and maintainability of content provider management in the application
updated the constructor parameters from ` Version ` to ` ClassFile . Version ` in the ` AttributeReader ` class to ensure compatibility with the ClassFile API
fixed - set keep - alive to false in singleconnectionmanager ( # 10708 )
[ java ] : consolidate conductor and conductor creation code into a supplier .
fix for npe in 3d locus with no point in 2d
added error handling for reading endpoint data and improved flush logic in WebSocket classes to enhance stability and prevent data loss during asynchronous endpoint operations
simonstewart : start to add a screenshot take . start to act like firefox and firefox
replaced assertEquals statements with assertJ for better readability and consistency to enhance code maintainability and leverage AssertJ for assertion methods
remove trufflelanguage . getcontextreference , no longer use .
modified exception handling in StubberImpl to reset mocking progress to improve stability and prevent potential null pointer exceptions
updated actor handling and exception messages in Actor and Group classes to improve clarity and accuracy of error handling for non - ascendant actors
use new location permission api in locationpickeractivity
http : / / issues . apache . org / activemq / browse / amq - 2840 - jmeter should support counter message via jmx
added import for CookieSpecs and set it to requestConfigBuilder to standardize cookie handling for HTTP requests
replaced boundary checks in the Intersector class with a more concise method to improve readability and maintainability of the intersection logic
replaced DeemphasisFilter with NonClippingGain in P25AudioModule and removed unnecessary logging in AirspyTunerController to enhance audio processing efficiency and simplify logging output
added monitoringUrl parameter to the ScrollingPanel and SystemInformationsButtonsPanel classes and updated ScrollingPanel to utilize it to enable dynamic monitoring functionality based on the provided URL
[ flink - 26016 ] [ k8s ] remove the deprecated service . create - timeout config option
added conditional logic to set the icon resource based on the place description to improve user interface by displaying appropriate icons based on location description
add null check for class with no package ( eg - http : / / search . maven . org / # search | ga | 1 | luaj - jse ) . this be a problem when packaging liquibase in a particular package .
added a new file PrintInlining . java that prints " Passed " to provide a simple example for running the inlining feature
fix : fix parsing of nested brace in javadoc tag ( # 4804 )
[ java ] deleting unused field in archivetest .
updated the edge model initialization to use edgesAndMetaEdges instead of edges to enhance functionality by associating edge data with the data model ' s edges
remove unused import ( classpathresource be no longer need )
updated Timber logging to use formatted output instead of formatted output to improve visibility of playback speed for better debugging
make sure to remove room from cache if cluster be start .
updated the property ' minimize ' from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure more accurate testing of resource management in the test
added key clipping and generation options to the TextureHelper class to enhance texture management capabilities for improved accessibility
updated ProjectBuildFileParser to utilize EventReportingProjectBuildFileParser instead of PythonDslProjectBuildFileParser to improve event handling consistency and streamline parser management
pass normalizationpass to j2cl instead of j2cl for transform
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and added tests in ` Java8OptionalConverterFactoryTest ` to streamline response converter handling and ensure proper functionality through testing
[ hotfix ] remove segment . isFreed ( ) from memorymanager
mysql : add timestamps annotation to consolesessionvo ( # 2453 )
added new files Hbs . java and HbsTest . java to implement template engine for rendering model and views to provide a framework for building and testing handlebars in the application
added visibility logic for messages and improved null or empty checks for hints to ensure appropriate user interface visibility during message display
changed iteration from keySet to values in ImportCsv . java to allow for multiple values in the header map
# 2114 fix confuse dialog behavior on firefox
added a conditional check for distinct column indices in ReduceSinkDeDuplication . java to optimize processing when there are more than two column indices
- fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46125
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 657 )
updated dependencies in TestOSGiUtil . java from " websocket - server " and " jetty - websocket - client " to " jetty - websocket - server " and " jetty - websocket - client " to align with the correct package structure for Jetty WebSocket communication
updated the return statement to return an unmodifiable map instead of an unmodifiable map to improve immutability and ensure consistency in data handling
added code to repaint header when modifications to the code are modified to ensure that modifications do not occur during code updates
replaced instances of ` new Double ` and ` new Float ` and ` new Integer ` with direct return statements to simplify code and improve performance by avoiding unnecessary object creation
updated the method to use getTimestamp instead of getDate for data retrieval to ensure accurate timestamp handling for data retrieval in the JdbcDataSource
updated class name resolution logic in HtmlJndiTreeReport . java to ensure correct class resolution for context instances
modify default database options handling and log output for block generation to enhance database configuration flexibility and improve log clarity
changed edgeType check from " double " to " mutual " in ImporterGEXF . java to ensure proper handling of mutual edge types
add allow _ slippery _ touches to make statusbartouchcontroller slippery be : 918776ee51
fix problem with array dimension retrieval in truffleconstantfieldprovider .
added Google Drive folder path preference handling and updated related classes to use this constant to improve maintainability and consistency in folder path management across the application
slight improvement for ticket # 2015 ( order of work )
added @ Nullable annotation to method signatures in Truth . java for better type safety to improve code clarity by indicating that certain parameters may be null
updated bitwise operations for resize operations in ArrayUtil to improve clarity and correctness of resize behavior
added a new test class ApiExceptionTest and modified constructor instrumenting logic in ClassInstrumentor to ensure proper handling of API exceptions during constructor instrumenting
added a waiting mechanism for anti - aliasing in StreamIn and StreamOut classes to monitor and manage anti - aliasing operations effectively
added keyguardSecure property and related methods in ShadowKeyguardManager and ShadowKeyguardManagerTest to enable secure keyguard functionality for API level 23 and above
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization
modify GrblUtils to trim whitespace before processing status and introduce a conditional check for override parts to ensure correct parsing of override strings and avoid potential ArrayIndexOutOfBoundsException
rename the method from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables ` to clarify the method ' s purpose and improve code readability
fix bug : file be not be check during the close ( ) method of a file system be call after the drain handler be call
updated LIGHTS _ NUM and LIGHT _ INTESITY values , modified light shader configurations , and modified synchronization behavior in HybridLightTest . java to improve light management and adjust synchronization behavior for better performance
updated filesystem initialization methods and tests to use the workspace ' s project filesystem to improve consistency and ensure proper filesystem handling during testing
updated the type of ` loadRerunFile ` method and its usage to ` PathWithLines ` instead of ` String ` to improve code clarity and ensure type consistency when handling rerun files
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
remove @ notnull annotation to fix build .
added a call to Shadow . directlyOn to close ParcelFileDescriptor to ensure proper resource management and prevent memory leaks
added thread - local support for managing prefix indices in ` BasisLibrary ` to improve thread safety and isolate prefix index states across different threads
added debug logging capability to TestDistributedStatsComponentCardinality to improve troubleshooting and monitoring of HTTP connection issues
added calls to throwIfImmutable ( ) method in IntList . java to ensure that exceptions are properly handled when using immutable types
added @ NotNull annotation to method parameters and updated ManagedChannelBuilder configuration to enhance null safety and ensure proper URI handling for gRPC connections
add simple graal example ( fixes # 406 )
fix keyunchanged must be synchronize to avoid invalid key .
fix generatemanifeststep on window .
findbugs : avoid redundant nullcheck of nonnull value , see rfe - 3531161
added null checks for ConfigDescription URI and improved null checks in ThingResource to enhance code robustness and prevent potential NullPointerExceptions
fixed - cancellationexception be not properly throw in masterjobcontext # dostop ( # 15288 )
pdfbox - 2852 : fix initialization of cropbox when no cropbox be select
refactor ManagerBase class methods for better organization to improve code maintainability and readability
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to allows accessing All Apps from the system taskbar
refactor FragmentActivity initialization to use Robolectric ' s ActivityController for better modularity to improve test reliability and simplify activity lifecycle handling
refactor methods to replace ` getFileCoordinates ` with ` processFileCoordinates ` and add ` getDecimalCoords ` to improve clarity and functionality of coordinate processing in the application
rename classes ABCase1 _ 1 , ABCase2 _ 3 , ABCase4 _ 3 and ABCase7 _ 3 from ABCase1 _ 1 to TestABCase1 to better reflect the purpose of the test class for consistency
updated parameter name from ' num ' to ' value ' in the saveEnergyPriceHistoryDone method and added a null check for the getBlackholeAddress to enhance code clarity and prevent potential NullPointerException
modified the handler setup in OpenRocketViewer to call doSimsChanged ( ) before setting the current rocket handler to ensure that the rocket ' sSimsChanged ( ) method is called when the current rocket changes
add a new class ChangeDependencyGroupIdAndArtifactId to manage Maven dependency groupId and artifact IDs to improve project structure by allowing users to update Maven dependencies dynamically
updated file system handling and added a check for indexable paths in IndexingJob . java and SegmentChecker . java to ensure correct handling of input paths and maintain compatibility with new segment checks
updated conditional check for GCObjectHeapIteratorAddressOrderedList _ V1 to use ' lte ' method instead of ' gte ' to ensure correct address comparison for object heap optimization
refactor PreprocessorDelegate to use Supplier for replacement paths and path mapping to improve performance and simplify path resolution logic
rename ` JsonExamples ` class to ` Examples ` to improve clarity and consistency in class naming
added debug logging statements in ViewExtractor . java for better traceability to improve traceability of input and output streams during the extraction process
for # 401 , apply a consistent copyright notice to the java / tree .
added a new Main class for Java oop entry point handling to facilitate testing of the behavior of the OOP entry point on Java
fix xcap server uri summary table name ( sip plugin . smack - 409 )
removed duplicate ` continue ` statements in ` NativeScanner . java ` to improve code clarity and eliminate redundancy
changed package from ` net . pms . test ` to ` net . pms . configuration ` in ` RendererConfigurationTest . java ` to better organize test classes and maintain consistent naming conventions
replaced the handling of queried and exported dependencies with a memoized supplier to improve performance by reducing redundant calculations
replace stream ( ) . count ( ) with size ( ) for remoteContainsResults to improve performance by using a more efficient data structure
added content encoding handling in ExtractingDocumentLoader to ensure correct character encoding is used for document extraction
updated SQL statements in DatabaseConfig . java to use placeholder syntax for database entries to enhance flexibility and prevent potential SQL injection vulnerabilities
fix shift - clicking issue when drop a player and a window leave the player .
added support for ignoring transitive repositories in Maven execution requests to enhance flexibility in managing remote repositories within Maven
removed the duplicate ` @ Inject BackgroundJobManager ` annotation from ` ContactsPreferenceActivity . java ` to eliminate redundancy and improve code clarity
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features and support libraries
fix a possible npe when close an already close netty server .
added a conditional check to break if the index matches the length of the string to improve efficiency by avoiding unnecessary iterations when the index matches the string length
mondrian : disable the mockito server until the ci server be implement .
added a new user - defined function ( UDF ) for reverse operations to enable users to reverse the order of elements in query strings
issue # 10493 - fix getcontextpath to return actual context path
updated Tracer class to improve performance to enhance the efficiency of tracing functionality
[ flink - 22894 ] [ test ] disable flaky rocksdbstatebackendreaderkeyedstateitcase . testreadystatedatest ( )
consolidated multiple import statements into a wildcard import in XMLChangeLogParserTest . java to improve code readability and reduce redundancy
added synchronization and a clear method to the StarTreeRecordStoreCircularBufferImpl class to ensure thread safety while updating buffer states during concurrent operations
updated date values for forecast minutes and forecast days in OpenWeatherMapOneCallHandler to improve the accuracy of forecasting data for better user experience
automatically generate a page with a fetch time , include a timeout of 10 second
add logging to RemoteTargetGluer and implement all apps content animation in FloatingHeaderView to improve debugging capabilities and enhance user experience with animations
updated CucumberPropertiesParser to use ` splitAndThenFlatMap ` and ` parseRerunFile ` return types instead of ` Collection < FeatureWithLines > ` to improve the handling of feature files by utilizing ` Stream .of ` for better readability and performance
add additional item to the botania creative tab for the vanilla game .
updated assertions in TestRadioButtons to use consistent variable names to improve code readability and maintainability
added support for file size options in RCFileCat and RCFile classes to enhance the functionality and flexibility of file size management
refactor and rename various classes related to clustering to improve clarity and consistency in naming conventions
fix a bug in the jnautils class when try to add a pointer to a jna array
[ hotfix ] fix checkstyle violation in blobserver
fixed bug 1384619 - unusedprivatemethod no long report false positive for private method .
fix documentation and assertion issue in lexicalcontext
int - 1614 add test to verify that sftpautostartup be correctly enable or disable .
- add some internal constructor to the spatial index constructor to make use of the spatial index constructor with a leaf node .
updated version parsing logic to handle the minor version number correctly to ensure accurate extraction of version number components and improve code reliability
log a debug when there be no managedmetadataprovider available for a plugin .
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and its usage in ` DateTimeFunctions ` to facilitate parsing timestamps toEpochMillis for better date - time handling and conversion functions
hhh - 17100 fix null pointer exception in stringwrappertype and customtype
jetty - 9 move log4j2configuratorservlet to core module , since it be not part of the jetty - spring context .
replaced multiple instances of HiveException and AuthorizationException with a single instance returned to simplify exception handling and improve code readability
updated CGoCompileStep to stringify the CC string representation and added a new test for C++ prebuilt dependencies to improve string handling and ensure compatibility with updated prebuilt C++ libraries
fix # 436 : add @ buildable annotation to customresource
added an @ Override annotation in the Only class to ensure proper method overriding behavior and improve code clarity
added a static timeout constant for network connections in HttpClientFactory to improve connection stability by preventing hardcoded timeout values
added pipeline names to PerBuildStateFactoryWithConfigurableAttributes and updated event scope in RawTargetNodeToTargetNodeParsePipeline to enhance clarity and maintain consistency in pipeline naming naming
[ java ] fix bug in enable / disable trace constraint in seleniumserver .
remove @ Singleton annotation from ApplicationController . java to improve application state management
refactor username retrieval logic in ShareActivity to handle OwnCloudAccount instances to improve account handling by dynamically retrieving usernames based on display names
added a new test method ` testResumePausedInstance ` to ` SimpleJobLauncherTests ` to verify the behavior of paused instances in batch processing
added a null check for cacheConfig before concatenating values to avoid potential NullPointerExceptions when cacheConfig is null
[ grid ] refactored dockersession to be public so it can be use by other protocol .
fix invalid package name resolution for executable unit
pdfbox - 2576 : avoid potential deadlock by use nonsequentialdfparser in nonsequentialdfparser
mondrian : fix checkstyle violation that slip through
updated HttpServerTestBase . java with new test cases to enhance test coverage for HTTP server functionality
update test to accommodate change in http : / / issues . apache . org / activemq / browse / amq - 2840
added test cases for handling nested beans with null values in the BeanTableSchema to ensure correct handling of null values in bean data processing
feature - redissonautoconfiguration be a functional interface for spring starter ( # 13513 )
refactor Indicator to use a starting index variable for index and add a new test class IndicatorTest to improve indexing logic and ensure correctness of the ` toDouble ` method
added methods to execInContainerWithUser and execInContainerWithUser using a charset parameter to enhance command execution flexibility by allowing customizable character encoding
improve the logic for interested in byte and text listener to be a bit more flexible
add a few more test for the semgrex parser , which be very fragile to make jjs more robust .
added a broadcast intent for CLEAR _ PULL _ UNREAD in HomeFragment . java to improve user experience by notifying users about unread content
fix pregingerbread flickering when use pregingerbread .
add flush ( ) method to jpa - 20config and use it for jpa - 2 . x
camel - 15126 : camel3 - abstractcamelcontext should throw a runtimeexception when vetoing fails .
added FloatingActionButton and updated related functionality for handling map entries in ShareActivity to enhance user experience by allowing users to open map entries easily
added InlineParslet class and updated ToDateTokenizer to utilize it for parsing formatted strings to improve handling of inline date strings and enhance cache management
renamed TestAnonymousClassUnloading . java for clarity to improve code readability and maintainability
corrected the spelling of " tecken " to " toppniv " in error messages and resource files to improve clarity and accuracy in user interface messages
added a check to ensure the server is checked before binding operations service connections to improve service stability by preventing unnecessary operations service binding
fix bug in position # getnodeat ( # 2088 )
added waitFor method to CxxPreprocessAndCompileStep and managedThread for process termination to ensure proper handling of process termination and manage thread interruptions
added a new ` requireAllRepositorySources ` flag and implemented the ` mergePersonAttributes ` method in ` CoreAuthenticationUtils ` to enhance attribute merging capabilities for repository sources in the authentication process
fix for issue # 1796 : ensure max size per node be not take into account map eviction policy
added support for enabling SSL protocols in the NettyWebServer and related classes to enhance security by allowing customization of SSL protocols based on configuration
replaced AtomicBoolean with AtomicReference for atomic operations to improve thread safety and encapsulation of set handling
updated QueryDslMongoRepository to return an empty string based on the path expression and added a new test for empty string handling in SpringDataMongodbSerializerUnitTests to enhance robustness by returning an empty string when the path expression is not provided , ensuring correct behavior in path handling
updated assertions in RoundRectBorderTest to clarify the assertion ' s purpose and assertion state to improve test clarity and maintainability by using more descriptive assertions
added checks for empty genesis configurations and changed related class names for consistency to ensure proper handling of empty cluster configurations and improve clarity of test names
remove parallel test because it be unstable and buggy
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' , added a validation check for the ' sign ' array length , and improved error logging to ensure proper thread management and enhance error information clarity for debugging
changed the condition from " windows " to " ! windows " in ProcessInformationsPanel . java to ensure proper handling of non - Windows environments
add empty ( ) method to make morecollectors usable
added null checks and WebSocket client extension handling to the BitmexStreamingMarketDataService to enhance robustness and prevent potential null pointer exceptions
lucene - 6271 : improve error message for invalid lat and lon field .
renamed methods and variables related to workflow file handling for clarity to improve code readability and better reflect the functionality of handling workflow file names
refactor ResponderId class for improved clarity to enhance maintainability and readability of the codebase
updated the ` getTableDocument ` method to accept a boolean parameter for withDependents to enhance flexibility in document retrieval based on dependency requirements
added handling for cases where consecutive uploads without coordinates are present to improve user experience by informing users about potential issues related to consecutive uploads
added caching functionality for profile data retrieval and modified request handling in ProfileResources . java to improve performance by reducing redundant calls and enhance user experience with profile data
update JpaMetamodelEntityInformation to ensure proper handling of property values to improve property management and support nested entity information
phoenix - 1122 add index and table unique name for bootstrap last ddl timestamp
fix bug where default exception mappers be not be register .
added a boolean parameter to the EntryEditor constructor to modify the behavior of the component
updated the parameter name from ` nativeCreateNSWindow ` to ` ownerPtr ` and modified the pointer initialization to improve clarity and ensure consistent handling of the owner pointer
replaced FILE _ REMOTE _ ID with FILE _ TABLE _ NAME in the SQL command to ensure the database schema matches the database schema for file operations
added a new " STOCK " option and modified event handling in the Tile class to improve visual effects and integration with the Stock skin
fixed - commandasync . readandwrite ( ) method throw classcastexception . # 3079
improve debug output for complex generic signature detection .
fix launcher back animation issue
changed the visibility of ` _ initialPageNo ` from final to non - final and added logic for adding content limits to ensure proper handling of initial page number and avoid potential NullPointerExceptions
fix crc16 ( ) calculation and increase total operation count ( # 2118 )
added comment handling functionality to the FormattedSqlChangeLogParser to enhance SQL comment parsing capabilities in change logs
refactored JarArchiver initialization in MavenArchiver and updated AbstractJarMojo to use it to improve clarity and encapsulation of the archiver object
replace HumanReadableException with BuckUncheckedExecutionException in class usage file loading to improve error handling by using a more appropriate exception type
added null and empty checks for aggregations in TSServiceImpl . java and introduced a multiAggregationTest method in DaemonTest . java to enhance robustness of the code and implement a test for multi - aggregation functionality
[ add ] pixel buffer support for gwt backend . close # 2594
added a new test method ` testDebugInfo ` and modified methods in multiple classes to use ` invokeMethod ` to improve debug information handling and enhance method invocation reliability
improve error message when byte buddy fail to instrument all class
[ gr - 39944 ] report trace for class initialization trace .
http : / / issues . apache . org / jira / browse / amq - 4568 - fix typo in previous commit
updated TopicRouteService to use Caffeine caching and improved topic route loading logic to enhance performance and efficiency when loading messages from the topic service
added readOnly parameter to the createDataSource method and modified the connection pool initialization to allow users to enable read - only data access while maintaining security
updated the regex pattern for invalid target release in FindBuildToolFailures . java and added a fatal error handling test in FailureLogAnalyzerTest . java to improve error handling accuracy and clarify error context for invalid target releases
updated the URI construction and added a location intent check in DetailFragment . java to enhance user experience by ensuring the location intent is available when applicable
nifi - 2593 : fix npe in case of empty injected parameter context
refactor ClassLoader class methods for improved efficiency to enhance performance and reduce memory usage
addedOriginResponseHeader handling to ProxyRequestHelper and its corresponding test to ensure proper setting of response headers for HTTP requests
added a new instance of ProfileSettingDrawerItem in GpsMainActivity to enhance user interface functionality related to profile settings
update ` ` org . apache . jasper . xml _ VALIDATION ' ' to make it configurable
simonstewart : fix the issue that javascript string processing should work a expect in the firefox driver .
[ iotdb - 2151 ] fix the issue that iotdbconnection . setmaxrow ( ) be n ' t check the result of setrow ( ) ( # 4534 )
refactor methods related to optimized filters in SqlStreamTerminator to improve clarity and maintainability of the optimization logic
add node and mouse event handlers to the StandardVizEventManager for handling node and mouse click events to enable interaction with node and mouse interaction in the visualization engine
[ java ] zero out the buffer when it fail to allocate .
refactor xorGroup assignment and activation handling in TerminalNode . java to use a memory instance to improve code consistency and reduce redundancy in managing xor group properties
remove getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource to streamline code by eliminating unnecessary methods
refactor SourcePathResolver to utilize getPathPrivateImpl for better path resolution logic to improve code clarity and maintainability by consolidating path resolution logic
fix # 2269 xmlparser encode and parse identifier ' s to string ( # 2278 )
updated the WebsocketRoutingFilter to change the scheme based on the encoding of the WebSocket request URI to ensure the websocket request URL is correctly formatted and validated during the upgrade process
[ gr - 42504 ] gcc - compile and nwcc test can be share with external test suite .
added a new method ` getCxxPlatform ` to retrieve the CxxPlatform based on flavor and argument , respectively to improve flexibility in retrieving the CxxPlatform based on specified flavors and arguments
added imports for documentation generation of IndexReader , IndexReader , and Similarity classes to enhance Javadoc documentation clarity and maintain consistency across the codebase
updated ConcurrentLinkedStack methods to improve handling of elements and added test cases for popping and iterator functionality to enhance robustness and ensure correct behavior of the concurrent linked stack operations
add ismatched and setMatched methods to BinaryHeapQueueTest and BaseQueueable classes to provide functionality for validating and setting theMatched state of the queue
added a null check for mDirectories before accessing its items to prevent potential NullPointerExceptions when mDirectories is null
added a condition to check if mOverviewStateEnabled is not and first layout is not active to improve gesture handling logic based on overview state conditions
added multiple package - info . java files for various lucene packages to enhance documentation and organization for the Lucene package management
added a text setting for the visible auto - leveler component in AutoLevelerTopComponent to improve user interface localization by using a customizable text
added post - optimize callback functionality to DirectUpdateHandler and UpdateHandler classes to enable more granular control over the optimization process
updated compressor initialization to use a padding mechanism for compressed byte arrays to ensure proper handling of compressed byte arrays by setting a dummy byte to 0 for padded length
remove useless check ( user _ data ) from shaderc
fix the retry logic when in local metastore mode ( # 11869 )
improve error handle for helios solo log ( # 4065 )
updated import statements to use OutputUtil instead of LogUtil to standardize utility naming for better clarity and consistency
add weak and strong reference type to abstractserializationservice ( # 2767 )
fix bug # 494 - incorrect min color calculation when use hssfPalette
fix : correct javadoc for new client class
danielwagnerhall : re - enable elementfindingbyid test , and fix issue in android ' s xpath library .
added flags parameter to the registerReceiver method across multiple classes to enable customizable receiver flags for improved functionality
fix compilation error on ffmpeg - test
modified Ogg and OpenALMusic classes to manage input streams more effectively to improve resource management by ensuring streams are properly released when they are no longer needed
replaced string literal " Response was null " with a constant value of " RESPONSE _ WAS _ NULL " to improve maintainability and readability of the code
polish ` ` do not migration anomaly when there be no warning ' '
refactor BaseActivity to use a dedicated Toast method for displaying messages to improve code readability and maintainability by centralizing toast functionality
updated the Request creation method to use the request template from the delegate to improve request template management by utilizing the request template for HTTP requests
added new imports and modified exception handling for LDAP operations to improve error handling and ensure valid names are processed correctly
protect against race condition in retain ( payload , rSockets ) .
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for triggering item click events to improve clarity and ensure that item click functionality is correctly handled in tests
[ hotfix ] [ test ] replace manual cluster setup in checkpointfailuremanageritcase
remove genericitemuiprovider since it be now replace by smarthome ui . items
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue # 250
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to enable the access to the FileSystemPool method in a isolated environment
added a server connection host using HTTP _ INFO . bindAddress to improve network support for HTTP connections
updated access token validity settings based on heart mode and specified Grant types to ensure proper handling of token validity for heart requests and improve clarity in token management
added CloverInstrumentationFilter to handle class candidates and updated checks for AtomicLong to improve class validation and ensure proper handling of synthetic properties
added a new constant ZHIMI _ HUMIDIFIER _ CB2 in MiIoDevices . java and updated the string in ReadmeHelper . java to support the Smartmi Evaporative Humidifier functionality and improve code readability
fix bug with always - break movement
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow external access to the method for scrolling functionality
ambari - 20744 . warn log if ambari do n ' t have baseurls for install package step before eu / ru ( dili )
replaced a conditional expression with a logical OR operator to improve readability and correctness of the logic
added Serializable interface to RuleAdministratorImpl to enable serialization support for the RuleAdministrator class
fix allowed origin with wildcard in crossoriginfilter ( # 4187 )
updated G3D hud tests in BaseG3dHudTest . java to use " g3d / knight . g3db " instead of " g3d / cube _ anim . g3dj " to ensure compatibility with the new model and improvements in the project
added error logging for updating solidified block position to improve debugging and ensure valid data is used during updates
hbase - 17444 null pointer exception in htable . ping ( ) lead to npe ( ted yu )
added a method to check access control for the administration page to enhance security by enforcing access control when unauthorized users are denied
refactor ClassMirror and StubJar classes to enhance functionality and improve file handling to enhance code maintainability and streamline the creation of stub classes for better performance
added internalLinkText TextView to display folder and file status in the FileDetailSharingFragment to enhance user experience by providing clearer context for internal links
updated assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting of accuracy string
fix test that fail on a non - seamless environment
removed keyboard hiding functionality from AllAppsContainerView to streamline user experience by removing unused keyboard hiding functionality
add miss dependency on inmemoryeventstorageengine in test
refactor BsdFileStore and BsdNativeDispatcher to streamline path handling and add new getmntonname method to improve code readability and functionality by consolidating directory - related methods
add test case for issue # 1599 illegalargumentexception while solve inner class
added support for x , y and z parameters to the SpawnCommand class to enhance command functionality and improve usability with customizable coordinate values
updated content area width calculation to use a constant for better readability to improve code clarity and maintainability by centralizing content area width logic
move code installation in hotspot test to core to avoid o ( n ^ 2 ) warning
updated directory instantiation from newDirectory ( ) to newMockDirectory ( ) to reliably on Windows semantics
added plugin check classes to the upgrade check registry and simplified the database column addition in the upgrade catalog to ensure proper handling of plugin checks and improve code readability
fix minor javadoc typo in environment . java
added import for LuceneTestCase and annotated the test case for bug tracking to address issues related to SOLR - 7421 and improve test coverage
updated file system path handling in CodenameOneImplementation . java and removed unnecessary check in HashtableContent . java to improve file system compatibility and enhance code clarity
change defaulttspayloadreaderfactory flag to enable AUDIO stream instead of ignore
updated import statements and modified resource handling in LiquibaseEntityResolver and XMLChangeLogSAXParser classes to simplify resource access and improve code clarity
added Security configuration to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to improve security by eliminating unnecessary TLS algorithms
removed the ` EMPTY ` field from the ` @ Value . Immutable ` annotation and replaced it with the ` CxxDeps . of ( ) ` method in ` CxxLibraryDescription . java ` to streamline the dependency management by eliminating an unnecessary constant
rename expected and actual directory variables in StubJarTest . java for clarity to improve readability and maintainability of the test code
change the access modifier of the resizeThreshold variable from private to private to ensure consistency in visibility across the class
updated folder name hint logic to check for empty title before setting hint to improve user experience by providing clearer hints when folder name is empty
added a new client ID " uaa " to the client loading process in UaaResetPasswordServiceTests . java to include the UAA client for better security and functionality
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to methods for better encapsulation
updated string concatenations in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to use a conditional value of - 1 to improve clarity and correctness of state representation
fix javadoc warn - @ see with tika - site
refactor method names to improve consistency in support views to enhance code readability and maintainability
added a new test method ` negatedInstanceOf ` to ` UnnecessaryParentheses ` to address issue # 3904 and improve type checking in the code
added teleport method to the Location class and modified the instantiation of the teleport method to enhance the functionality of the Location class and improve object handling during teleportation
replaced Base64 encoding of modulus and exponent with URL - safe encoding in TokenKeyEndpoint and associated tests to ensure compatibility and adhere to URL - safe encoding for JWT keys
generator - standard : report generation statistic for translate manager
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and intent of the annotation ' s purpose
added null check for the ID method in ObjectIdentityImpl to ensure that the ID is returned as a valid value to avoid potential NullPointerExceptions
add ` ` muffled ' ' flag to timecolumncursoradapter so tweet can be muffled
update verified text based on the settings for the addon theme to enhance user interface by displaying appropriate verification text based on the theme settings
updated the AbucoinsDigest class to remove the instance variable and improved the timeDiffFromServer variable declaration to enhance encapsulation and simplify the object creation process
camel - 14284 : camel - mongo - only need to configure the mongo client if it ' s available
added an ` sourceIndex ` parameter to the ` AttributeMapping ` class and updated related methods to allow for dynamic indexing of the last accessed attribute based on its source index
improve error message when hive corruption occur during alteration
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to enable security features when security is enabled
refactor ConnectivityReceiver , TerminalKeyListener , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 5037 ] escape html for the contact email in the geoserver home page
feat ( terasology - core ) : avoid eager init of subsystems for module ( # 4495 )
update joinmodeller to reflect the number of feature it expect
apps - 2184 avoid stringindexoutofboundsexception on empty string
( chore ) camel - kafka : avoid use deprecated debug log
updated references from ` ACTION _ SET _ PLAYBACK _ SPEED ` to ` PlaybackStateCompat . ACTION _ SET _ PLAYBACK _ SPEED ` to ensure consistency with the use of the new constants for playback state management
[ fix ] deprecate ' automatic ' separation due to the refactoring
tika - 2278 -- make sure ascii name length be the same length with unicode
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest to temporarily disable the test due to compatibility issues on JDK 1.7 and 1.8
refactor lock file creation in MavenDependencyResolver and implement it in MavenDependencyResolverTest to enhance code maintainability and facilitate temporary file creation in tests
updated shared preferences keys in UpdateUtils . java from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added new statistics for synchronization interval to ensure compatibility with new features and maintain data integrity during updates
added a check to return null if the username equals the FEDERATION _ USER constant to prevent potential issues with the FEDERATION _ USER constant being used
make executemethodnode only return a truffleobject parameter , not a truffleobject instance .
refactor filtering logic in JakartaClientShutdownWithServerWebAppTest to use . toList ( ) method to simplify the code and improve readability by eliminating unnecessary imports
fix ( logback ) : do n ' t log search for non - existent filename
7057785 : add note about optional support of recursive method for self - referential collection / map
removed the import of Version from CreateIndexTask . java to eliminate unused dependencies and streamline the code
added handling for missing primary key changes in Oracle database and updated schema references accordingly to ensure proper schema management and fix missing primary keys in the database
added MetastoreException to the execute method and modified exception handling in MsckOperation . java to improve error handling and provide more specific feedback for invalid partition names
[ flink - 23737 ] [ connectors / kafka ] retry commit transaction if error occur
update lq activity to remove receipt handle if it ' s in lq
added a service list to DockerComposeContainer and modified DockerComposeContainer to handle up - d requests more robustly to improve service management and allow for better service handling during Docker compose operations
fix : avoid concurrent modification in export and structcontextdecorator
removed unused imports and simplified the return statement in FeedParser . java to improve code clarity and maintainability by reducing unnecessary dependencies
be b0f8e1c2 : be b0f8e1a : be b0f8e1a : fix custom content in landscape ( issue 10994971 )
changed data types of ` energyReactiveVArACSumConsumed ` and ` energyRealWACMinusAbsolute ` from ` int ` to ` double ` in ` MeterRealtimeBodyDataDTO ` and ` MeterRealtimeBodyDataDTO ` to improve precision for handling energy values in numerical calculations
added a new file ` bug4150029 . java ` implementing ` JApplet ` for file dialog behavior to address backspace keyboard issues related to temporary directory management
added a boolean flag ` isSparkConfigUpdated ` and updated Spark client management in multiple classes to ensure proper handling of Spark configuration updates and prevent memory leaks
added long press indicator functionality to AppIcon , AppIconMenuItem , and Workspace classes to enhance user experience by providing a customizable long press indicator
wkbwriter : do not write empty polygon to polygon empty ( # 2326 )
replaced the ` UnflavoredBuildTarget ` builder method with a custom ` UnflavoredBuildTarget ` factory method to improve memory efficiency and encapsulate the builder pattern
added a new class MultiplyByMaxInt that tests multiplication with a specific integer to implement functionality for multiplication with a maximum integer value
removed the call to ` searchView . onActionViewCollapsed ( ) ` and set the drawer indicator indicator for the current file to streamline the user interface and ensure the drawer indicator reflects the current file context
changed package declaration from ` org . apache . lucene . index . store ` to ` org . apache . lucene . store ` in ` TestRAMDirectory . java ` to streamline the package structure and reduce unnecessary dependencies
replaced FixedBitSet with BitSet in Automaton . java and Operations . java to simplify code and improve performance by using a more efficient data structure
drools - 2338 dmnevaluatorcompiler . error message should use message type constant ( # 1656 )
replaced occurrences of ` @ ContainedBy ` and ` @ ContainerFor ` with ` @ Repeatable ` in multiple test files to improve clarity and maintainability of test cases
updated console message format in AbstractController to include a formatted duration to enhance user feedback by providing more context on file transmission timing
updated class name handling in OpenMBeanAttributeInfoSupport . java for consistent access checking to ensure proper package access validation by using a safe class name method
fix quorum response count check backport from 5.0 . 2 . patch by jbellis
updated freeSize calculation to account for a new value to ensure freeSize accurately reflects the size of the store
modified touch event handling in AnyKeyboardView and AnyKeyboardViewBase classes to improve touch event processing to ensure correct behavior when touch events are not processed
replaced the instantiation of SslContextFactory with SslContextFactory . Server across multiple files to enhance SSL context configuration for improved server support
replaced the private static class PrivilegedSocket with a direct instantiation of a Socket instance to simplify code and improve encapsulation by eliminating privileged socket creation
updated InputTest . java file to improve test coverage and fix existing issues
added functionality to pause blurs on a Quickstep Launcher and modified animation handling to improve user experience by controlling blur visibility and ensuring correct behavior during animations
updated NearbyMapFragment to improve location marker handling and remove current location marker to enhance user experience by ensuring current location marker is only removed when not null
updated the method calls in ClientAdminEndpoints to use clientDetailsService for client ID retrieval to ensure accurate client management and improve test accuracy
updated SQL source test setup to use @ BeforeEach instead of @ BeforeAll and modified SQL query construction to ensure consistent test execution by removing unnecessary XML configuration parsing
fix intermittent ci failure
added unit tests for key handling in SlidingGanttCategoryDataset to ensure proper exception handling and message generation for unknown key keys
[ issue # 2373 ] fix shenyutrierulelistener npe ( # 2373 )
* lightcontrol now have a custom control directory and light a copy from jme3
added ` @ SuppressWarnings ( " UnusedAssignment " ) ` and modified stack name handling in ` StdErrLog . java ` to improve code clarity and reduce redundancy in variable naming
added logging for received ServletContextEvent and refactored context handling in HttpSessionEventPublisher to improve debugging capabilities and ensure context is not null
added a null check for the context . FOR ( ) in the ASTVisitor class to ensure compatibility with the CREATE CQ syntax in version 0.14
[ hotfix ] [ table ] fix typo in flinkiotdbsink
add a counter for custom simplification contributions and improve performance
updated the context parameter used for setting fileIcon in ActivityListAdapter . java to ensure the correct context is used for file icon rendering
mondrian : fix drop index / constraint name error in mssql and postgresql
add support for timestamp field in bigqueryio . ( # 2564 )
implemented ` findViewWithTag ` method in ` ShadowView ` , ` ShadowViewGroup ` , and ` ViewTest ` classes to enable view retrieval with specific tags in tests
[ ci ] use generic for java 8 compatibility
removed unused import of PColumnFamily from IndexTool . java to clean up the code and improve maintainability
added JSON value and JSON creation constants to DocAnnotationConstants and updated method name extraction logic to enhance annotation handling and improve method name resolution accuracy
fix : only check jar file for resource import
updated CUDA _ R _ constants in cublas . java to remove complex int types to simplify the definition and improve code clarity
refactored ResourceLoader class to utilize FileFilter for resource handling to improve resource loading flexibility by allowing layout directories to be processed
fix redstone torch not work correctly ( # 1097 )
added support for VARBINARY type in RelToStageConverter to enhance type handling for VARBINARY operations
added import statement for DateHelper in NoteAdapter . java to utilize date utilities for date handling in the application
updated backup message handling and validation logic in the Backup . java file to provide clearer feedback on backup creation and save success
mow - 169 fix move element in simple panel on android
simplified the file creation process in ShadowParcelFileDescriptor . java to improve code readability and reduce unnecessary error handling
replaced ` poll ( ) ` method calls with ` removeFirst ( ) ` method calls in ` StackBasedSecurityContextHolderStrategy . java ` and removed unnecessary imports in ` SecurityContextPropagatingChannelInterceptorTests . java ` to improve efficiency and clarity in context management during thread operations
rename rule from " optimizations " to " controversial " to clarify the purpose of the rule related to BooleanInversion
fix : fix canonicalization of x ^ x to x ^ y in integerequalsnode
removed the static final Type STRING _ ARRAY from TypeFactory . java to streamline code by eliminating unnecessary complexity
updated keyboard hiding methods and refactored logging events in the AllApps keyboard to improve user experience by ensuring keyboard closes when exiting the keyboard
fix not be able to resize and resize within the world ( # 4215 )
updated assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest for clarity and consistency to enhance readability and maintainability of the test code
add a mechanism to calculate the maximum texture size on the minecraft for faster texture management .
[ java ] fully qualify the stop log recording when stop the consensus module .
added a conditional check to reset startPosn to zero when transformation is active to ensure correct positioning of transformations during the analysis process
add back querycontext . isskipstartree ( ) method for back compatibility
added a lockNearbyView variable and updated the refreshView method to handle progress bar behavior to improve user experience by managing nearby places more effectively
added methods for creating and manipulating maps in the MapTransformer class to enhance data handling capabilities for map operations
refactor EmeddedObjects and EmbeddedObjects classes for improved readability to enhance maintainability and reduce technical debt
added launcher widget span information to LauncherPreviewRenderer and PreviewSurfaceRenderer classes to enhance widget management capabilities within the launcher
updated ` StageSelector ` and ` StageAction ` classes to implement ` StateChangeListener ` instead of ChangeListener to improve responsiveness to event handling in the UI
added methods to retrieve and set calling UID and reset the ShadowBinder instance to improve testing capabilities for calling UID management in the application
refactor ExpectationFailure class to use private fields instead of static instances to improve encapsulation and ensure message and cause can be null
bitcoinserializer : remove log warn for unsupported command .
imagereplacedelement : adjust new size calculation to prevent divide by 0 .
added handling for backslashes and backslashes in Markdown rendering logic to ensure proper formatting of special characters in Markdown files
added a warning dialog button and refactored password handling logic to improve user experience by clearly differentiating between share and deletion actions
refactor filechannel method retrieval to use a new static MappingMethods class to improve flexibility and maintainability by allowing different mapping methods
removed ' public ' access modifier from methods in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to enforce encapsulation by restricting access to internal functionality
added slider option options for keytab directory and principal in LlapOptionsProcessor . java to enhance configuration options for Slider AM keytab functionality
updated the ` tearOutGraphViewContainer ` method to accept an ` JFrame ` parameter and modified animation control logic to enhance the flexibility and control behavior of graph view animations
added delayed execution and assert for loader completion in LauncherModel to ensure smoother execution of tasks after loader has completed
updated NodeManageMemoryMergeOperator , NodePathsCountOperator , and NodePathsConvertOperator to use final fields and replaced isFinished checks with nodePaths to improve code clarity and enforce immutability for better thread safety
modified the ` add ` methods in ` IssueInterface ` to include ` messageType ` as a parameter and introduced a new ` JsonValidationReport ` class to enhance functionality for better handling of validation results and improve data structure management
added a safe method for retrieving the provider name and improved exception handling in the RSAClientKeyExchange class to enhance error reporting for better debugging and clarity when the provider name is unavailable
[ flink ] rename containerspec . getdynamicconfiguration ( ) to containerspec . getlinkconfiguration ( )
changed log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging for better clarity and performance
no need to add a space at the end , because there be no
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public static final in DefaultMapScaleBar . java to allow broader access to bitmap dimensions for other classes
removed the @ Ignore annotation from CovariantOverrideTest . java to indicate that the test is no longer valid for covariant overrides
fix pattern # getbrackets ( ) to correctly handle special case
camel - 3037 : fix xml model reloadstrategy not work on window .
added space minimum and maximum settings to the X - axis of the ScatterChart to improve visual spacing of the ScatterChart
fix syntax error in ExpressionStringBuilder . java to ensure proper syntax and prevent potential compilation errors
added a default method ` shouldPreserveDataStateOnReapply ( ) ` to multiple classes and adjusted import statements to standardize data state preservation behavior across classes
check for missing ` UTF8 ` key in ` CheckEncodingPropertiesFile . java ` to ensure that the system correctly handles missing encoding keys
lucene - 3995 : add seeddecorators to testreproducemessage and make it easy to debug
added long - press logging for AllApps items in the StatsLogManager to enable logging of user interactions for analytics and performance tracking
added null check for log in StoreWAL . java and created a new test class Issue112Test . java with a test for double commit functionality to ensure proper handling of null log and validate data integrity during commits
fix # 168 , only showectorLandinfo when there be any sector define in the ruleset
[ flink - 2635 ] [ type ] fix all raw type usage warning in types .
refactor Enum class to improve code readability to enhance maintainability and facilitate future development
throw illegalargumentexception if a nearby selection do n ' t have a nearby random
temporarily remove item from temporarycache - remove from minecraftserver
disable webMarkup container until it ' s implement by wmtl
initialize Availability _ availability to UNAVAILABLE to ensure default availability is set to avoid potential null pointer exceptions
updated PBFT commit message processing to include synchronization state checks and modified related method parameters to improve data consistency and ensure accurate synchronization handling during sync operations
feat : migrate retry setting to v1beta1 ( # 144 )
changed ` _ freeSpaceReclaimDisabled ` to ` _ freeSpaceReclaimQ ` and modified its method to allow for a specific Q value instead of a boolean to enable more flexible control over the free space reclaim settings
changed access modifiers of KDC options from public to private static final and added a new class KdcDefaultOptions to enhance encapsulation and provide a demonstration of KDC option settings
refactor JsonWriter instantiation and reset writer instance to null to ensure proper resource management and prevent potential null pointer exceptions
updated formatting of chipCloud calls and corrected spacing in ProfilePager . java to improve code readability and maintain consistent formatting style
changed method names from ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in background painting
added a method to convert values from class constants to objects to improve property handling and ensure proper formatting of property values
add more logging to kafkaservice initialization error
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use ImmutableSet instead of Set to improve resource requirements for the build process
messagebus auto - create ' auto - create ' channel now configurable for the outputchannelname .
added support for index keywords in HTML document and implemented a test for it in TestDemo to enhance document indexing functionality and ensure correctness through testing
update SDK version check from S to R to ensure compatibility with recent Android versions
modified the initialization of the _ addresses list logic in MemcachedSessionDataMapFactory . java to ensure that only valid addresses are added to the list
create a new instance of CorrespondenceSubclassToFactoryCall to ensure correct instantiation of CorrespondenceSubclassToFactoryCall
updated builder methods for improved functionality to enhance performance and maintainability of the builder class
update isbntobibTexfetcher to work with new error handling
[ gr - 36921 ] do n ' t kill the Polyglot thread if the engine can not be enter .
added null check for text before firing data change events to avoid potential NullPointerExceptions when the text is null
fill in some blank , such a by reuse code from the dvparser project
added a line trimming in SuffixURLFilter . java to ensure the line endings without leading or trailing spaces
added a guard clause to prevent invocation in godmode to improve user experience by avoiding unnecessary invocation in godmode
ggb - 2118 fixed ; when a checkbox be create with the wrapped popup , it ' s unregister from the wrapped popup .
refactor constructors of LinkedHashMapCache and TCache to remove unnecessary parameters to simplify constructor parameters and improve code readability
replaced ` _ channel . close ( ) ` with ` close ( ) ` and adjusted buffer length calculation to ensure proper resource management and correct buffer length calculation
hive - 27373 : fix keyindex validation in fixacidkeyindex to handle null keyindex
updated exception handling to throw a more specific SolrException instead of a general RuntimeException to improve error handling clarity and maintain consistent exception formatting across the application
truffle - dsl : remove unnecessary guard creation code and add a new method to set the store check guard
[ fix ] remove dependency on economicset in jsr shouldfollowedge
do n ' t show ' high variance ' when view be close
removed the use of BuildTarget . copyOf ( ) in multiple classes to simplify the code and improve readability by using a more concise approach
refactor SqlRunner class for better performance to improve execution speed and resource efficiency
updated the date type from ` String ` to ` long ` in ` getInstantUploadFilePath ` method and modified its usage in ` FileStorageUtils . java ` to accommodate larger date values and improve code clarity
refactor DefaultSdkProvider to use a set of known SDKs instead of a single knownApis map to improve organization and support multiple SDKs in the system
replace ` ProgressIndicator ` with ` ConfidenceProgressIndicator ` in ` CreateOfferView . java ` to enhance user experience by providing a more modern progress indicator
change header name from " Cling / " to " UMS / " in multiple classes to standardize terminology and improve clarity in request handling
fix iterate bpt for non - parallel build . close # 1564
added message type to crowdfundingchatadapter for message in noflex
replaced UTF - 16 encoding with ASCII encoding in LinuxLibrary and MacOSXLibraryDL classes to ensure proper encoding of names for ASCII standards
separate out local pattern match for conj to eliminate conflict with advcl
updated the insert method to remove the canvas parameter and adjusted related image handling to simplify the insert method signature and improve image processing logic
replaced the ` getVisitors ` method implementation with a new ` apply ` method in ` RefactorModule ` to streamline the processing of refactored refactored code for better readability and efficiency
added methods to retrieve child elements by name in the Xml class to improve functionality for child element retrieval in XML parsing
set the " Content - Charset " header to " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest to ensure correct content encoding handling for HTTP requests
added SystemUiControllerFlags annotation to manage UI state updates to enhance code maintainability and facilitate easier UI state management
removed the private ClientConfigurationService variable from IntrospectingTokenService . java to streamline the service management and reduce unnecessary dependencies
improve error message when hive split can not be create
[ java ] remove dead code in nodeentry . getmemberid .
cloudstack - 2120 : fix typo in config method name
added score calculation in the merge method of TextFragment to ensure proper scoring for merging text fragments
replaced the private Digester digester with a new instance to enhance encapsulation and improve data handling
added validation to ensure ` maximumUnimprovedStepCount ` is non - negative to prevent runtime errors due to invalid property configurations
added a check to return early if the current open editors are empty to improve efficiency by avoiding unnecessary processing when no active editors are available
refactor the ` verify ` method to use Mockito ' s unified verification methods to enhance code readability and maintainability by centralizing verification logic
updated ClassLoader initialization in PathScanner . java to improve class loading mechanism for better resource management
[ netbeans - 4701 ] fix classcastexception in firstpojo . sayhi2 ( # 4448 )
fix minor checkstyle issue in abstractsplitbrainprotectiontest
updated logout page configuration to check for a valid logout configuration before applying the filter to ensure that the logout page is only applied when enabled or disabled , improving security and functionality
[ giac ] use [ { 1 , 2 , 3 , 4 , 5 } ] to compute the degree of the ideal variable
Docker - compose : log container instance instance during log operation to enhance logging functionality by allowing multiple consumers to be logs
updated the parameter type in the testMapping method signature to ensure proper type safety in the method signature
replaced IOException and FileUtils with FileUtils in AmbariMetaInfoTest . java to improve compatibility with Apache Commons IO and FileUtils
add a static method ` fromSupplier ` to ` ThrowingSupplier ` to enhance the flexibility of the ` ThrowingSupplier ` implementation
replaced ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to improve the flow control flow
camel - 17826 : camel - platform - http - vertx - fix content - type header issue .
added methods to convert paths to use platform - specific separators in MorePaths to ensure consistent handling of file paths across different operating systems
added a null check for authorizationContext ' s parameters before processing to avoid potential NullPointerExceptions when the authorization context ' s parameters are null
added a new method ` throwExceptionIfFail ( ) ` and modified the ` load ` method to include a ` throwExceptionIfFail ( ) ` to improve error handling during library loading by ensuring the exception is properly managed
update SDK version from " 4511349 " to " 4514284 " and add new test cases in ShadowTextToSpeechTest to ensure compatibility with the latest SDK versions and enhance test coverage for speak and stop functionality
store transactionlogkey in a dedicated class , make it a transactionlogkey . java easy to query transaction log
added SQL without profile functionality to JdbcEnvironmentProperties and JdbcEnvironmentRepository to enhance configuration options for SQL without profiling
added a try - finally block around the write method call to ensure that the data is properly released after writing to the server
fix compiler warn about nested generic in modloadingstage . create _ registry
tika - 3221 : fix bug in parser to work with jdk 1.6 .
updated thread info retrieval methods in CachedThreadStatesGaugeSet and ThreadStatesGaugeSet classes to include stack trace depth to enhance traceability and accuracy in thread information retrieval
added a protected TransactionLog field and modified commit logic in the UpdateLog class to ensure proper transaction management during precommit operations
updated version file for FastAsyncWorldEdit from P2 - V6 to 1.17 to utilize the latest features and improvements in the application
updated file existence checks and added null check for path in SegmentGeneratorConfig . java to ensure proper directory handling and prevent potential NullPointerExceptions
added methods to calculate normal vectors in ObjUtils and refactored vertex extraction in TriangulationHelper to improve code clarity and reduce duplication by encapsulating vertex calculations in a single method
updated SQL query to use identity zone ID instead of principal ID to ensure accurate retrieval of identity zone information for audit events
updated the SpanCollector class to improve performance to enhance the efficiency of span collection functionality
added a null check for the session information retrieved from the session manager to ensure that the code only proceeds when the session information is available
updated TransactionIsolationLevel . java file to improve transaction isolation handling functionality
corrected the spelling of " printLVgroups " to " printLogicalVolumegroups " in OshiController . java to ensure consistency and accuracy in method naming regarding volume groups
set the current thread name to " forwarding to " in TestSession . java to improve clarity of thread identification during testing
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
replaced the manual creation of a ArrayList with a direct return of an empty ArrayList to simplify code and improve readability by avoiding unnecessary iteration
added a new OverviewToAllAppsTouchController instance to the list to enhance touch handling functionality in the RecentsUiFactory
replaced the ` scaleHotseatWithWorkspace ` method with a new ` getHotseatScaleAndTranslation ` method in ` LauncherState ` and ` WorkspaceStateTransitionAnimation ` to streamline hotseat scaling functionality based on workspace scaling
do not filter elements outside the JUnitRule in DefaultStackTraceCleaner to ensure that only relevant classes are processed in tests
[ java ] consolidate null - checking logic into a single method for good readability .
balancelistener : remove balance listener before add / remove it , because it ' s already in the walletservice
added conditional color adjustments based on edge mode in RealisticRenderer to ensure correct color output for different edge modes during visual rendering
added null check for httpClientResponse and refactored logging initialization in multiple test classes to improve error handling and maintain consistent log style across test cases
remove unnecessary patternutil . checkpattern call in protocol decoder
modified playback event timing logic in FullDetailsActivity . java to ensure accurate timing checks for episodes and improve reliability of playback tracking
added a method to check if a node is an elliptic node and modified the tree normalization logic to improve handling of elliptic nodes and ensure correct token normalization
clear iso language when it be empty ( e . g . ' iso ' )
updated ReactiveLoadBalancerClientFilter to adjust theScheme based on the secure status of the retrieved instance to ensure the correct scheme is used depending on the server ' s security status
fix bytebuffer npe in batchdispatchrequest ( # 1747 )
[ gr - 30617 ] fix compile error in mxnet .
replaced the custom Correspondence implementation with a lambda expression for comparison to improve readability and simplify the code
updated locale data references from " # USLocales " to " # ENLocales " in multiple files to ensure consistency in localization representation and improve code clarity
remove redundant null check ( localtransactionsigner # getredeemdata )
use tessellator for forge render instead of tessellator in some case
added a return statement to the TxCacheDB class to improve function exit point clarity
updated import statements to use jdk . internal . org . objectweb . asm instead of com . sun . xml . internal . ws . org . objectweb . asm to ensure compatibility with the latest JDK version
renamed FastDictionary class to improve clarity to enhance code readability and maintainability
make sure the nio session get close when close an already close connection . jm - 1022
fix flight test due to epsilon change
[ beam - 7954 ] import protobuf - v1.26 . 0 package to fix import issue .
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
update instructorfeedbackresults : page data for instructor and result page when link to student
updated DefaultPasswordValidator to initialize rules as a list of short rules and added a validation test for alphabetic and numeric sequences to enhance validation flexibility and ensure that only valid passwords are processed
rename ` ` retrievelastremotecontrollogs ' ' to ` ` retrievelastremotecontrollogs ' ' and ` ` capturescreenshottostring ' '
removed JUnit ' s @ Test annotation from ProxyClassSerializationTest . java to enable the test method for execution and maintainability
updated the argument format in scale calculations in DLNAMediaInfo . java to improve clarity and consistency in format specification
[ gr - 16731 ] avoid use the speculative guard movement phase directly .
added checks to ensure the AUTHENTICATION _ MANAGER bean is not already present in the registry to prevent potential exceptions when multiple authentication managers are overridden
updated the handling of forwarded requests to support both host and server ports to ensure proper request formatting and authority management for forwarded requests
added a StringBuilder variable and initialized it to zero in ConsoleReader . java to ensure that the StringBuilder is empty for proper resource management
changed access modifiers of allowedRoles and disallowedRoles variables from private to protected to allow subclasses to access these variables for subclasses
update OpenIDE - Module - Specification - Version from 1.54 to 1.26 and 1.26 for versioning to ensure compatibility with the latest OpenID - Module specifications
hbase - 27180 increase netty ssl buffer size for ssl handler ( # 4804 )
refactor multiple Java classes to improve code structure and organization to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to remove JUnit ' s TestCase and added new test cases for tokenization to enhance test coverage and ensure correct exception handling in tokenizer functionality
refactor protocol binding configuration in OpenSamlAuthenticationRequestFactory to use constants to enhance flexibility and maintainability of protocol binding management
modified the implementation of SurfaceControl to incorporate an AttachedSurfaceControl for transaction execution to ensure proper rendering of graphics when the transaction is executed
updated version return value in AsciidoctorConventions . java to correct version representation for SNAPSHOT version
hbase - 24975 addendum set table name to create for operation initiate for bulkload operation
adjusted the range of unSeqMergeList and measurementSchemas to the correct index to ensure accurate processing of unSeqMergeList and align measurement schemas with the intended data structure
camel - 14284 : file : / / target should convert inputstream to a fileinputstream . thanks to jeremy gosling for patch .
added a login method to the DefaultShardManager and modified DefaultShardManagerBuilder to conditionally login to improve database authentication handling and handle exceptions more effectively
[ java ] deleting of global reference when function be cancel due to timeout .
renamed the join table from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve clarity regarding the purpose of the table
updated response completion handling in HttpSender . java to check for marked responses to improve response termination logic based on the mark state of the response
add a condition to check if the user student is a user student before comparing giver values to ensure correct handling of user student feedback in the logic logic
added support for disable a linked profile on Windows in BMPImageReader to enhance security by allowing users to disable linked profiles on specific devices
updated plotblock positioning logic by correcting the formula to ensure proper rendering of blocks in plot worlds
pmd - eclipse : fix # 1082 pmd - eclipse be not visible on macosx
refactor grid presentation setup to support new poster sizes to enhance flexibility in displaying grid sizes based on user preferences
changed return values from false to true in ContributionsListFragment . java to enable the functionality to reflect updated requirements
added a test for skipping a range query in DistinctPrefixFilterIT and modified control flow in BaseResultIterators to improve test coverage and ensure proper handling of aggregation limits during query execution
pdfbox - 2852 : add test for acrobatcheckboxgroup property , a suggest by valerybokov
added a method to retrieve the last modified timestamp of a file to enable users to check the last modification date of files easily
added a condition to check if the table has a metadata table before proceeding to ensure that the system correctly handles the case where the metadata table is not valid
update cashdeposit form to use combobox for currency selection
change exception handling from IOException to Throwable in WriteFlusher . java to improve error handling to capture broader range of issues
added a new boolean variable ` mStartedEnterAnimation ` and modified animation handling logic to improve handling of task item ranges and ensure animations are correctly handled during transitions
added a new private field ` activeKeyId ` in ` UaaConfiguration . java ` to store the active key ID for better tracking and management
updated action names and their descriptions in SendMailActions . java and SendMailActions . java to improve clarity and consistency in action functionality regarding email sending actions
make isactive volatile for socketserver to avoid npe .
replaced the ` isDesc ( ) ` method with ` isAsc ( ) ` in multiple classes to correct the logic and ensure the correctness of the query ordering logic
unified the type casting of character sequences in buildImplicitEquation and buildImplicitVarPart methods to ensure type safety by explicitly converting to CharSequence
added a check for the OWNCLOUD _ APP _ NAME variable in the DisplayUtils class to ensure the application name is valid before proceeding with further logic
hbase - 1748 masterfilesystem should create the root directory if kerberos be enable ( jesus camacho rodriguez )
change the method call from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in ` JakartaServletWebExchange . java ` and ` JavaxServletWebExchange . java ` to ensure the correct locale is returned for HTTP responses
8196609 : improve javadoc for java . time . instant . getepochsecond
updated state format handling from int to String in multiple classes to ensure consistent state format representation and improve code clarity
updated logging statements in CentralAuthenticationServiceImpl . java to correct the type determination to ensure accurate logging of ticket granting and improve code readability
added IllegalArgumentException to the condition for exception handling to enhance error handling by addressing potential issues with illegal arguments
fix file name check for resource set only when file be a file
added PathTranslator as a parameter and updated directory alignment logic to ensure consistent handling of file paths across different plugins
[ beam - 13454 ] only register protobuf coder for protobuf runner ( # 16788 )
updated JpaQueryParsingToken instantiation and added a new test for query with signed numeric literal to ensure correct token handling and validate query functionality with signed numeric literals
updated LaunchLugHandler and RailGuideHandler to use dynamic variable names and added instance count and separation properties to enhance flexibility in launching and rotation handling based on the specified length
updated getNonceFactory method to return a synchronized value factory to provide a default nonce factory implementation for the exchange
( chore ) camel - mail : use parameterized logging
[ java ] defensively set default timeout and MTU length for test .
changed ` initializeLoadedClasses ` from ` true ` to ` false ` in ` ScanSpec . java ` to disable initialization during class loading during classpath scanning
gracefully focus search field when fulltext search be enable .
refactor nio parameter initialization in TlsConnectionLogging . java to improve code readability and maintainability by organizing parameters into a dedicated variable
updated assertions in StatementTest to include a comment to clarify the test purpose and ensure it verifies its functionality
updated assertion messages in TestSolrConfigHandler to include additional context to improve clarity of error messages for better debugging
replaced HttpMethod and related mock objects with ServerHttpRequest and ServerWebExchange mocks in CsrfWebFilterTests to enhance test reliability by using the appropriate reactive types for server requests
updated how the target density is formatted and changed how it is formatted to ensure accurate representation of the density in the drawable format
added a buttonUIID variable and updated component ID handling in ComponentGroup . java to improve UIID updates for different component types
removed dependency on DisplayMetrics for device orientation checks to simplify the condition for better readability and maintainability
8315265 : c2 : assert ( ! fail ) fail : wrong semantics of copy . copy ( ) in c2 .
added import for LuceneTestCase and annotated the ReplicationFactorTest class with @ AwaitsFix to address issue SOLR - 6157 that is expected to be fixed later
fixed - start schedule method may throw a nullpointerexception . # 5604
simplified the logic for updating credentials related to download and upload operations to enhance code readability and maintainability by reducing complexity
modified the handling of StoreFileScanner to ensure proper resource management when the scanner is null to prevent potential NullPointerExceptions when closing the scanner
[ beam - 13437 ] fix npe when check connection num ( # 13434 )
added test case for nonce claims in TokenMvcMockTests to ensure correct nonce handling for token claims
updated multiple chart editor classes and their implementations to improve code consistency and maintainability across the chart editor components
added width and height settings to formLayeredPane in Form . java to ensure proper layout behavior for the form layered pane
updated import statements and added maxY method implementation in BrowserContentPane to ensure proper height adjustment based on the owner ' s height
added a boolean check before opening the database and refactored related methods to return a boolean to improve handling of database connection status and avoid multiple attempts to open the database
refactor DockerTestUtils to use Platform . DOCKER _ COMMAND instead of a private static final string to enhance code clarity and maintain consistency across the codebase
add a null check to the testisartorvalidationfromclasspath . testparameters ( ) method , to avoid a npe when there be no input file
updated the drawLeaveBehind method to accept a color parameter for folder leave behind to enhance flexibility by allowing customization of the folder leave behind appearance
report proper error dialog for canary studio ( # 4731 )
bug 10725 : check for null identityproxy table name before look up uuid
removed modulePersistEnable and modulePersistDisable lists from StartArgs . java to streamline module management functionality by eliminating unused features
corrected the argument length check in GeminiMarketDataService . java to ensure proper handling of the last trade time argument
replace HashSet with LinkedHashSet in VerifyPasswordResetRequestAction to ensure predictable iteration order of the questions in the flow scope
add test response base on user forum issue
updated removeExclude entries for various JSP files in AuthCheckFilter . java to enhance security and streamline exclusion logic for JSP processing
refactor scheduling logic to introduce a new method ` runOrQueueRunnable ` to improve code readability and maintainability by consolidating runnable execution logic
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of String [ ] to improve method flexibility for handling command arguments
updated XMLParser to handle end - of - stream condition while reading characters to ensure robustness by preventing potential false positives in reading input stream
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to ensure that text is cause overflow pages in contraces of overflow scenarios
added pivot settings for the arrow in DeepShortcutsContainer to ensure proper placement of the arrow based on its icon state
clean up exception handle to reduce noise in the log .
refactor thumbnail updates to include an additional ` refreshView ` parameter to improve user experience by differentiating between home and new tasks during animations
pdfbox - 2576 : improve usage message , a suggest by ralf hauser
fix host name validation in eco - email and improve exception message
updated method references from ` this ` to ` this ` in multiple activities to ensure consistency and correct usage of the current activity context
refactor SizeBasedDocIdSet and related classes to use a consistent maximum document ID instead of a counter to improve clarity and maintainability of document ID management logic
added methods to prompt to open a file based on existing file types to enhance user experience by allowing the file dialog to open dynamically based on file types
removed unused widget span variables and refactored updatePageCounts method for better readability to streamline code and enhance maintainability by consolidating functionality
added transform logic for active components and updated component bounds in FlightConfiguration to improve component processing accuracy and accuracy in flight configurations
update unit test to use ' direct : ' instead of ' seda : '
updated DateTimeFormatter instantiation to include Locale . ROOT to ensure consistent date formatting across different locales
fix permission check when convert object to dspaceresource .
added a test method ` testMissingRequired ` to ` StarTreeConfig . java ` to ensure that ` dimensionNames ` and ` metricNames ` are correctly set when the collection is missing
fix camel - spring - route builder to support static and dynamic recipient list
refactor InlineLayoutBox ' s parent method for improved style handling and update HoverListener ' s targeted repaint logic to enhance UI responsiveness and prevent potential null pointer exceptions
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsServiceConnection ` and updated the service implementation to improve authentication handling and enable better service communication
