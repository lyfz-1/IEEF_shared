fix deprecation warn for socketappender convenience constructor
clean up duplicate code and add documentation for clarity
simplified the retrieval of the message length by removing the unnecessary RecordDescriptor reference to improve code clarity and reduce potential errors by directly accessing the message length offset
cloudstack - 4436 : fix npe when vm . overcommit . factor be not specify for vm . cpu . overcommit . factor
added a flags field and a constructor to the ShadowPaint class , and modified the PaintTest class to check anti - aliasing status to enhance functionality for anti - aliasing handling in paint objects
updated the title of the MassSetFieldsDialog to use a localization string to improve internationalization support for the field name display
fix the detector test so that eclipse be n ' t run if the detector be n ' t run .
fix # 1489 - digestauth should not use a scheme for password if it be an empty string .
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` class to introduce connection handling with callbacks to enhance input responsiveness by notifying when the server is connected and disconnected
refactor conditional statement formatting in OrcEncodedDataReader . java to improve code readability and maintainability
updated filtering condition to ensure only enabled items are processed in HomeConnectBridgeHandler . java to improve validation of interactions related to the home connect functionality
sec - 295 : fix npe in authorizationadminservlet ( report by marta kuczora ) .
updated assertions in DefaultTypeAdaptersTest and ObjectTest to use a more comprehensive check for Java 9 or later to simplify test assertions and ensure compatibility with JSON formatting
added JSON JSONObject for additional context and description in TezTask . java to enhance the functionality to include detailed DAG information for better debugging
bugfix # 294044 , extend heap dump result time calculation to account for tag
replaced RxJava2Tasks with CommonsApplication for retrieving upload count and updated ApacheHttpHttpMediaWikiApi dependency to improve code maintainability and utilize a unified API for setting upload counts
removed unnecessary multi - threaded check from the lock condition in MVTable . java to simplify code logic for better readability and performance
[ issue # 5998 ] optimize the max offset check when create the commit log ( # 5998 )
updated folder handling logic in Launcher . java to ensure open folders are correctly marked as open when associated folders are not open
added a test method to verify the sorting order of PGProperty values to ensure that PGProperty names are sorted correctly for accurate processing
remove unused constant and document the cause of the problem with incorrect point
updated method signatures and type checks from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget . java ` to improve code clarity and maintainability by using a more specific data structure
fix requestbuildertest for unsupported http method ( # 2102 )
updated nearby fragment management by renaming retained fragment tags and consolidating fragment transactions to improve code clarity and maintainability by using more descriptive identifiers for fragments
update parameter name from ' status ' to ' sessionStatus ' in FlatProfileContainerFree constructor to improve code clarity by using a more descriptive parameter name
[ te ] filter out zero anomaly email ( # 4014 )
[ flink - 24636 ] [ kafka ] fix flinkkafkaconsumerbase # open ( ) to always call restorestate
remove unused method ( user and geofence )
added constructor to BlockingResponseListener that accepts a configurable maximum length to enhance flexibility for handling larger request sizes
refactor the ` memberBroadcastsReceived ` method to accept a byte array instead of a byte array to improve handling of message packaging and processing efficiency
test ( core ) : fix potential resource leak on backup
remove trail slash in a test link ( # 1850 )
[ hotfix ] [ test ] fix typo in configmetadatabletest
updated import statements and method parameter names in ListFragment and SnoozeActivity classes to improve code clarity and maintainability by using more descriptive parameter names
added a private static inner class AcceptAllFilter to simplify the instantiation of the AcceptAllFilter class and updated the directory stream construction logic to improve code readability and maintainability by reusing the AcceptAllFilter class
updated JdbcTestDataSet . java file to improve functionality and maintainability of the test data set implementation
improve hotspotresolvedobjecttypeimpl to throw classnotfoundexception when no class be find
refactor ` GenericContainer ` to use ` DockerImageName ` for validation instead of ` Preconditions ` to improve validation logic for Docker image names and enhance error reporting clarity
updated the error message for authentication failures to be more specific to improve user feedback by providing a more descriptive error message
automatically autofocus all field of the form to allow it to work with html5 .
added tests for SAML properties in SamlIDPRefreshMockMvcTests . java to ensure correct behavior of zone - specific configurations in the SAML refresh process
fix version comparison issue ( # 7644 ) ( # 7644 )
updated bottom mode settings and adjusted return statements in Sheet . java , along with applying padding and margin properties in UIManager . java to ensure proper placement of sheets and improve layout handling based on screen dimensions
refactor package structure by moving ParallelUniverse and related imports from the Android package to the internal package to improve code organization and clarity by organizing the classes under a more appropriate internal namespace
refactor the constructor invocation in LocalCacheFactory and NodeFactory to directly use the factory method to simplify the code and improve readability by reducing unnecessary type modifications
changed the style fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve rendering quality by using a more optimal fill style
show self loop when display preview ( e . g . in the visualizer )
updated the variable and method names from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059 across multiple files to reflect the correctness of the variable name and improve code readability
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to adhere to Java naming conventions for method names
reset the translation Y position of the drag handle indicator to the top to ensure the drag handle is visible during transitions
fixed header view when there be no item and collection .
update description for filter pushdown configuration in HiveConf . java to clarify that filters are only pushed down in the operator tree to improve configurability and maintainability of the code
added an assumption to skip tests when the build server has issues with finding itself to address potential build issues caused by finding itself
added Maven bundles for Jetty ALPN client libraries and a debug option for diagnosing OSGi bundles to enhance compatibility with Jetty and facilitate debugging in OSGi environments
fix for http : / / issues . apache . org / activiti / browse / amq - 4219 - make use of commandexecutor for retryasynctask more robust .
refactor Transaction class for improved error handling to enhance reliability and maintainability of transaction operations
replaced @ CustomFieldBehavior with @ ExcludeFromRuleKey in GenruleBuildable . java to clarify that Genrule execution is not relevant to artifact caching
simonstewart : try make firefox binaries if available . fix issue 646 .
added a check to ensure ` colFamToDynamicColumnsMapping ` contains the existence of a key before adding it to ` colFamToDynamicColumnsMapping ` to prevent duplicate entries while maintaining the integrity of the mapping
[ hotfix ] [ core ] remove suppressed warning in hadoopoutputcollector
phoenix - 4957 improve performance for drop view by cache row metadata ( addendum )
added updateStudentCascade call to updateStudentCascade for student objects to ensure that student records are updated directly from the system
updated import statement for TestCellReference in AllXSSFTests . java to ensure compatibility with the updated Apache POI library structure
fix # 4414 - check for the harvest block ' s hardness like other block piston
fixed long pointer press issue with android . http : / / github . com / codenameone / codenameone / issues / 3748
truffle : do not inline call when no inlining in the graph .
refactor null checks to use ternary operator for null checks in multiple classes to improve code readability and maintainability by reducing redundancy
remove unnecessary indent check when parse deeply nest list
added AbstractOptionalAssert class with methods for checking Optional values to improve assertion capabilities for Optional values in the API
added an import statement for JUnit ' s Ignore annotation and annotated WebfluxNotIncludedTests class to mark the test as ignored due to a known issue tracked in GitHub issue # 1070
remove a need to convert to JavaScript string when save a message .
fix checkstyle violation of camel - example - spring - boot
added a condition to check if the media format is video before executing the web subtitle check to ensure that web subtitle configurations are validated correctly for video formats
8052863 : disable tl algorithm for java . security . verification . com ( java . net )
cloudstack - 2120 : update vm state when add a secondary storagepool of type ' local ' ( # 2597 )
[ java ] add cache entry to log output of queryresultscache .
added a method ` maybeUpdateModel ( ) ` to the ` AddManagedDependency ` class and modified the conditional logic in the ` maybeUpdateModel ( ) ` method to avoid unnecessary updates to the POM when dependencies are managed
added unit test for sending a PendingIntent and modified related method signatures in ShadowActivity and ShadowPendingIntent to ensure proper functionality of intent handling in activity lifecycle
updated RocketFigure3d . java to use GLJPanel and GraphicsConfiguration for rendering to improve rendering performance and enable FBO features while ensuring proper rendering quality
added synchronization to the controllerListeners list and improved the disposal method in HydrawiseAccountHandler to ensure thread safety during listener operations and prevent potential memory leaks
added a ` @ BeforeClass ` method to the ` TestCoreAdminApis ` class that skips tests on Java 9 to ensure compatibility with Java 9 and avoid issues with mocking on Java 9
[ flink - 32454 ] [ stream ] fix invalid year calculation in timestamputils when test
fix possible deadlock when shut down jabber account ( report by michael )
fix build after move of ws _ commit into txnhandler
refactor the buffer handling in BufferedInputFilter to use ByteBuffer instead of ByteChunk to improve performance and reduce memory usage when dealing with buffer overflow
added a method ` toSync ` to ` AsyncUtils ` for converting CompletableFuture to a CompletableFuture and created a test class for it to improve async handling and ensure error recovery through unit testing
added ActionGraphBuilder as a parameter to various compiler factory classes and updated related method calls to enhance the flexibility and functionality of the compiler configuration
update the body of the hidden file element when send a file ' s upload be hide . add a test for this .
removed unnecessary import of Date and adjusted exception handling syntax to streamline code for better readability and maintainability
issue 344 : the build now support a custom maven repository location .
make sure hidden label be not visible in web [ need backport ]
fix : fix npe in ctelementimpl . getmetadata ( ) ( # 2654 )
replaced ` setFlags ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` addFlag ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` in ` DefaultTrackOutput . java ` to ensure the correct flag is added to the buffer
fix removeiterable do n ' t force reorder when cached be not sorted by id
updated error message for missing method call for verify ( mock ) in Reporter . java to clarify the error context for the missing method call
added null check for backupFolder before logging expiration information to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating a void array using reflection to explore and handle the behavior of Java reflection when attempting to instantiate an array of void type
added @ AddToRuleKey annotation to toolType in ClangCompiler and GccCompiler classes to ensure toolType is accessible for serialization
replaced hardcoded timeout value with a static variable PINCODE _ TIMEOUT to improve code readability and maintainability by using a named constant instead of a magic number
make prometheus exemplarsampled and meter registry test sampled by default
removed the @ Ignore annotation from multiple test classes to clean up redundant test failures to streamline the server requirements for tests
fix ( freezev2 ) : consumeuncompressedcompressedmessagetest failure
updated condition to check if the table is not a artifical table to improve accuracy in identifying artifical tables
updated file status checks from ` isFile ( ) ` to ` isDirectory ( ) ` in FileOutputCommitterContainer . java and LaunchMapper . java to improve clarity and handle directory - related errors more accurately
updated session handling logic to ensure empty attributes are handled correctly to improve robustness and prevent unnecessary operations when no attributes are available
replaced setFixedSize method with setSizeFromLayout method for surfaceHolder to improve flexibility in setting the size of the surface holder
replaced direct use of ` _ stopping ` with ` CountDownLatch ` to improve thread safety and prevent potential NullPointerExceptions
removed unnecessary whitespace in method parameter declarations to improve code readability and maintain consistency
camel - 6537 : message history eip with thanks to stephan sianoas for the patch .
[ 3.0 ] fix test which randomly fail on slow ci server
replace assertions with assertions for error handling to ensure proper validation of the WebSocketHandshakeException to improve test reliability and clarity
added View . OnLayoutChangeListener implementation to AllAppsTransitionController for improved layout change handling to enhance the responsiveness of the all apps transition feature
refactor variable names from ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability by standardizing variable names
camel - 8843 : xpath router now support ' default - output - channel ' attribute on < xpath - router >
change default cache seconds from an integer to a DurationCapable String to enhance flexibility in handling different time formats
update openapi version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to ensure compatibility with the latest version of OpenAPI and simplify component references
remove redundant append call from the ByteBufferPool class to streamline the code and improve performance by reducing unnecessary operations
added a check for the existence of " alt - rt . jar " in the boot class path and created a warning message for it to ensure the test is skipped if alternative - rt jars are detected during testing
update ScimUser and associated tests to include upper case for user names to ensure consistency in user identification and improve test reliability
updated the imports and modified the method for configuring options in FlightRecorderProfiler . java to improve compatibility with different Java versions and ensure proper compilation of the FlightRecorderProfiler
apps - 199 fix the npe on file upload from webcam
added a condition to check if the content view has a content in HttpParser . java and implemented a test for chunked put requests in ProxyServletTest . java to ensure proper handling of chunked transfer scenarios and validate the put functionality
add javadoc to remove reference to a deprecated attribute
added support for " printf " and " print " target methods in Java2TypeScriptAdapter to enhance functionality to allow printing output from either " println " or " print " methods
added a new test class TestCapacityUntilGCWrapAround and methods to increment metaspace capacity until GC is implemented to ensure correct behavior of metaspace capacity calculations on 32 - bit platforms
update package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
simplify starttime setting ; document badly name method
added unit test base on user forum issue .
tmi - 99 : fix for failure in parse icc chunk with invalid sequence .
move terra shattererra pick , it can cause terra pick to itself , fix placement bug
added conditional binding for Config and Environment classes in JoobyModule and added a check for entry type in SpringModule to ensure that only Config and Environment instances are registered , preventing potential registration errors
do n ' t use thread . getparentclassloader ( ) when configure a context class loader
bug 57922 - fetch nameupdater . properties from classpath ; add additional logging
fix javadocs of ellipsoidregionselector . onstart ( ) ( # 12358 )
updated URLs and protocol from HTTP to HTTPS in JavaSEPort . java to enhance security by using secure protocol for data connections
[ geos - 8044 ] getfeature request sortby attribute must be valid ( not invalid )
swapped the null check for grantTuple [ 0 ] to improve code readability and reduce unnecessary method calls
added GraphicsConfiguration integration and updated image handling in DiagramGenerationTest . java to ensure compatibility of images while validating dimensions
add a runtime exception in case sideddelegate be null and sideddelegate do n ' t install fml correctly .
add warning that javadoc of databuffers be not thread - safe .
make locktest . testlocked ( ) more robust , make it eventuallyable .
added methods to format and join strings using a list of Strings to improve string manipulation capabilities for better user experience
when an exception occur , log 404 message and return true
updated command handling logic and improved substring indices in SystemHighlighter . java to enhance code readability and maintainability by using more descriptive variable names
updated version and version date constants in the Constants class to reflect the current development state with a snapshot version
updated position setting from ` idx ` to ` idx dimensionSize ` to ensure correct handling of buffer dimensions for circular data
added support for handling drag and drop states in QuickstepTestInformationHandler and SystemUiProxy to enhance the functionality of the drag - and - drop interaction by integrating drag and drop features
[ java ] add skip test for java 7 compatibility .
additional hack to address gump failure until tl 1.2 be final
replaced direct call to getText ( ) with getLongDescription ( ) in NearbyMapFragment to improve code readability and maintainability by using a more descriptive method name
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization of ScimGroupMember values
refactor HqlQueryRenderer to use a list of tokens for reserved words and enhance schema scoping support to improve code readability and maintainability while ensuring proper handling of reserved words
fix null argument in objecthelper . checknotnull ( ) .
refactor Parser class for improved readability to enhance maintainability and ease of understanding
modified the ` offsetStreamIndex ` method to include a new parameter ` indexStartsAtOne ` and adjusted related calls to improve stream index handling to account for a new condition for track selection
tika - 697 - add mime magic for . cpio file , and tweak magic detection so that it also recognize them a binary
[ flink - 18737 ] [ table - planner - blink ] remove the unnecessary implementation of getmonotonicity for sqloperatortable
added inheritance annotations and overridden methods for equals and hashCode in OneTimeTokenAccount and OneTimeToken classes to improve object comparison and hashing functionality for better data integrity
added a condition to check if mLaunchedAssistant is false before processing fling to improve responsiveness by preventing fling when the assistant is not launched
8274807 : small speedup for solaris short signature test
added a call to toggleSearchLabel with a value of false to disable the search label in the ListFragment
bug 9453 : do n ' t execute create snapshot on primary storage if volume can not be create ( # 3037 )
refactor ServiceConnection implementation in FileDetailActivity to use DetailsServiceConnection to improve connection handling and ensure proper unbinding of the service
replaced the failure handling logic in HttpClientTLSTest with an AtomicReference for better clarity to improve readability and maintainability of error handling related to SSLPeerUnverifiedException
remove duplicate equals ( ) method in conjunctionscorer since they be n ' t use
added null check for item before binding items in Launcher . java to log errors when the item binding fails due to null pointer exceptions
make cpmemberaddremovaltest # testwaitforleaderelection more reliable ( # 22019 )
shrink cache file to 90 % in case of full cache size .
updated API endpoints and variables from v2 to v3 in CryptoFacilities and CryptoFacilitiesAdapters classes to align with the latest API version and improve data handling consistency
fix freenect2 . empty ( ) for non - empty input
added handling for optional page data to AsyncPageReader and created a new test for empty dictionary pages in TestDrillParquetReader to ensure proper resource management and validate the functionality of page data retrieval
updated the argument validation and naming conventions in SerumStreamingService . java and added specific error handling for invalid arguments to improve robustness and ensure correct argument types for better error reporting
add a config option to disable charging . close # 288
[ java ] provide more information about timeout in cluster client .
log error when interruptedexception be throw ( patch by jonathanhurley )
make test more reliable on less filesystems
reordered the injection of dialog styles in ResourcesInjectorFull . java to improve code readability and maintain consistent style injection
changed fields from String to FileResource for changeLogFile and outputFile in BaseLiquibaseTask and DBDocTask classes to enhance flexibility in handling file resources instead of strings
fixed worldvector equality check to be more accurate .
updated LongConcurrentLRUMap . java to remove unnecessary comments and made fields final to improve code clarity and enforce immutability for better maintainability
camel - 7999 : fix php reflection processor should escape the literal in the resource name
8008274 : krb5ccname system property ` ` krb5ccname ' ' do n ' t exist in the environment variable environment
updated the database path in ValidateMultiSignContractTest . java to ensure the test runs with the correct database output for validation
require a required peer even if there be insufficient peer ( # 1115 )
alexeibarantsev : fix race condition when webdriver session start
do n ' t expand equality [ segment [ x , y ] , w ] ] when use in expressionnode . isequal ( )
added a conditional check to clear pending rendering operations if the impl is minimized to optimize rendering performance by reducing unnecessary rendering operations
fix test failure by explicitly check system . currenttimemillis ( ) .
fix writebehind queue write delay when key value already store ( # 15288 )
set the icon of the JLabel to null in GroupTreeCellRenderer to improve user interface clarity by removing unnecessary space
updated test methods in TestBlacklistAwareRedirectResolver to use " strict " instead of " default " to improve clarity and accuracy of redirect matching tests
added Jetty IO imports and modified shutdown test methods in ShutdownMonitor and ShutdownMonitorTest classes to improve resource management and enhance test coverage for shutdown behavior
give writelimit to zero and adjust writelimit for ephemeral store .
updated field retrieval and serialization error messages in Json . java and added a readFields method in Json . java to improve code clarity and functionality for handling object fields
[ hotfix ] [ util ] move componentclosingutils to a more appropriate package
bug 8215 : delete all volume when vm be expunge from state transition to error state
server : fix npe when unplug the ip address be miss ( # 4944 )
remove unused reference to userDetailsbeannames in initializeauthenticationproviderbeanmanagerconfigurer
increased the retry limit for halfdeletedcollection2 from 15000 to 30000 to improve stability by allowing longer retries before failing the collection deletion
replaced the handling of input parameters with a more general error message method across multiple classes to streamline error message generation and improve clarity of error messages
adjust position of drawimage ( ) to prevent zoom - on
updated field name comparison in SolrTestCaseJ4 . java from solrDocument1 to solrDocument2 to ensure consistency in field validation logic
mondrian : fix arrayindexoutofboundsexception in setFundef .
[ hotfix ] [ stream ] add cause when streamtaskexception throw an exception
refactor character handling in Preprocess . java by replacing StringBuilder initialization and character checks with StringBuilder instantiation to improve efficiency and readability of hashtags processing
modified the formatting of the ` read ` method in ` MessagePack . java ` to enhance code readability and maintain consistent formatting
added a new annotation interface named Mapper in the org . apache . ibatis . annotation package to provide a mechanism for customizable annotation types in the application
fix # 526 - don \ ' t output empty extension list in jsonparser ( # 5271 )
fix dependency resolution on external jar with no internal name .
added a new alias for " node _ popup / node _ popup _ scripting " in the ScriptingMenuEntryVisitor to enhance user navigation by providing a dedicated alias for scripting actions
updated constants and methods in OverviewActionsView and RecentsView to enhance task visibility and interaction based on device profile to improve user experience by refining the behavior of action views in different device contexts
camel - 9569 : fix potential classcastexception when get the jmsmessage from camel - jms
remove spurious ` ` throw ' ' warning find by findbugs
deleted deprecated files AbstractDelegVerb . java and FailureContext . java to streamline the codebase and eliminate unused components
changed the scope of ` __ content ` to ` static final ` and added a ` MicroServlet ` to handle gzip compression tests to improve code clarity and ensure the correct handling of gzip responses
fix distinct observable to ensure it receive first ack when repeat be enable
added logging functionality and improved logging for component stopping in SpeedmentImpl . java to enhance debugging capabilities and ensure accurate reporting of component registration status
added check to see if we can load dspace - config in oai . xml .
hbase - 5696 optimize storescanner for small row ( improved performance )
camel - 9754 enable jmx for the camel test , and make it easy to run it when ci box run on ci system .
on behalf of georgeklinich : use canonICAL package separator instead of hardcoded slash
hive - 14167 : show application id and hadoop bin path in spark job info [ spark branch ] ( krisztian kasa , review by jesus camacho rodriguez )
added support for Maria database in the database connection manager to enhance compatibility with additional database types
fix masterwalmanager log wrong when start time 0 ( # 1084 )
fixed executeandreturnstring issue due to change in api change . http : / / github . com / codenameone / codenameone / issues / 2147
added a new file ` InvokespecialInterface . java ` implementing an interface with default methods and dynamic invocation to demonstrate the use of ` invokespecial ` and ` invokeinterface ` in Java along with a lambda expression
[ hotfix ] fix checkstyle violation in evictingboundedlist . java
make turncosts = true the default encodingmanager even if not turncosts enable .
added a null check for backgroundDisabled and threw an exception for negative selection values to ensure that no background is selected when disabled , preventing potential errors
hbase - 15410 throw npe incase of wrongly provide error message in javadoc of rpcserver
updated hotseat icon calculation to include border spacing to ensure correct sizing of hotseat icons based on available width and padding
updated the method of generating a key string in ExpressionTree . java to improve clarity and maintainability of key comparison logic
remove version check from NamedTaskDecorator and implement versioned interface to ensure compatibility with older versions of Hazelcast serialization
update index directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is used for the new index directory
change the equal variable from false to true and update the comparison logic to ensure accurate display mode comparison
updated UnicodeToLatexFormatter to handle character encoding and modified HTMLUnicodeConversionMaps to include epsilon to enhance character processing accuracy and improve compatibility with mathematical standards
ds - 2407 : remove \ n from iso control character set in item value .
alexeibarantsev : fix handling of back window with selenium - backed selenium
updated StringSearchPanel to set a border for the plug - in panel and modified bookmark handling in BookmarksPanel to exclude the BOOKMARKFILE _ EXTENSION to improve UI clarity and ensure that only the necessary extensions are processed
replaced the port check with URL building for the OAuth2AuthorizationRequestRedirectFilter to simplify the base URL generation process and improve code maintainability
fix false positive failure when run softassertionstest in window
updated the adaptOrders method to include a reverse parameter and adjusted the limit orders list accordingly to enhance order adaptation functionality by allowing reverse order order processing
delombok do not print type information for type variable with no type information .
[ java ] clean up code and enable test recently fail in last commit .
changed the instantiation of ` Configuration ` from ` Configuration ` to ` Configuration ( false ) ` and removed unnecessary conditional logging to improve configuration flexibility and eliminate unnecessary logging when overriding Hadoop conf properties
replaced ` super . drawChildren ` with ` super . draw ` in ` WidgetGroup . java ` to ensure proper rendering method is used for child elements
added unit test base on user forum issue
add some comment , remove some unnecessary usage of system . getproperty ( )
added tests for retrieving the best datetime pattern for different locales in ShadowICUTest . java to ensure accurate date time formatting based on the specified locale
update PlotSquared . java to initialize the object with a wider set of color codes to ensure it retains only 16 color codes for better visual aesthetics
added ZuulProperties support to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance the functionality of the TraceRestClientRibbonCommandFactory for better zuul management
tika - 2175 -- fix unit test for tika - 1615
added two new classes , SampleApplication , and modified BuildInfoMojo to use a build time parameter to improve code organization and ensure consistent build time handling
modify the calculation of xDist to use the absolute value of mScroller ' s position to ensure that xDist is consistent with the current screen ' s positioning logic
remove test that will be speed up .
updated the constructor and method signatures in LazyMessage and removed null checks for ' format ' parameter to improve flexibility in handling null values and enhance code clarity
[ java ] include string in the exception message when the processing time advance parameter be not correct .
changed package name of template parser classes from ` org . thymeleaf . templateparser ` to ` org . thymeleaf . templateparser . markup ` to improve organization and clarity of template parsing components
added a new XPath test method for validating XML string output in XPathTest . java to ensure that the XPath functionality works correctly with various input formats
added @ Nullable annotation import to FutureUtils . java to indicate that certain variables may hold null values , improving code clarity and safety
bugfix : warn about dynamic invoke not resolve while call - graph construction
change gmail . com ' ' to ' example . com ' for email test case .
updated the HTTP connection encoding test to expect a 200 status instead of a 400 status to ensure the test correctly reflects the expected status of the HTTP connection
added ` getColumnDataType ` method implementation in ` AbstractResultSet ` and ` ResultTableResultSet ` , respectively to standardize column data type retrieval across different result set implementations
add default implementation to client interface for improved flexibility
fix javadoc warning from r1715839 bug 58365
replaced the use of ` long ` with ` Instant ` for time tracking to improve clarity and precision of time representation
added versioning functionality to LibMediaInfoParser and updated related logging messages to improve compatibility with various media options and enhance logging clarity
added proxy creation logic for IdeaDependency objects based on invocationHandler type to improve handling of IDE dependencies by allowing for better proxy management
added a new class SerialHeap and updated references in collectedHeapName and Universe files to introduce the serial heap implementation and improve code clarity
suppress warning on non - serializable non - transient instance field in gson $ types
added position to mousewheelevent for consistent mouse positioning
datamongo - 1608 - fix npe in kubernetesquerycreator . findbyfirstnameignorecase when null parameter be provided .
[ flink - 29807 ] [ table - common ] fix the bug that MultisetTypeInfo . equals do n ' t extend maptypeinfo to improve the equality and hashcode contract
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` to retrieve multiple identity providers by an issuer to enhance error handling and provide clearer feedback for missing or duplicate providers
pdfbox - 2852 : add support for miss delimiter character , a suggest by michael klink
refactor ContactsBackupJob to use a new OperationsService and improve service management to enhance code maintainability and ensure proper handling of service disconnections
refactored type constraints and introduced new classes T6938454a and T6938454b with generics implementations to improve type handling and provide examples of bounded type parameters
make account hidden account configurable , and default to true .
added logic to log incorrect number of displays in DisplayController . java to ensure consistency between display states and supported bounds during updates
updated schema removal method in PMetaDataImpl and added a test for schema validation in PMetaDataImplTest to ensure correct schema removal and validate that schema metadata is accurately managed
ggb - 2334 do n ' t dispatch passive login event ( except the firefox ) .
added a new Box2DTest class and integrated it into the GDXTester to facilitate the testing of Box2D content throughout the application
fix ` ` - deleted - ' ' to ` ` < anonymous > ' ' when apply mutation
fix : decrease default buffer request timeout to 5 minute .
chore ( regen ) : update gapic - generator - java version for generated code ( # 29 )
added help text to the openoffice / lib directory link
fix : make the code readable by add the ' child ' keyword to the field .
updated method signatures in BinanceAuthenticated and BinanceFundingHistoryParams to use wildcard generics to improve type safety and flexibility in handling user data streams
[ issue # 4266 ] fix transient field warning ( # 4267 )
fix resource leak on bad image loading
datajpa - 611 - adapt to new querydsl api for null - handling .
added null check for actor in ParallelAction and SequenceAction classes to ensure proper handling of actions based on their actor state
fix : fix type test after jdk - 8289799 ( # 8283 )
added synchronization to the sfWriters access in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` with default methods for ` JJ ` , ` JK ` , and ` MK ` implementations to test the behavior of different Java implementations starting from ` Issue888 `
added functionality to revoke existing CA certificates and updated script arguments in CertificateManager . java to enhance security by verifying the revocation of existing CA certificates before proceeding
added handling for empty response codes in AbstractHttpTest and a corresponding test in HttpServerTestBase to ensure proper response handling and validation for HTTP / 1.1 requests
move script engine init to next release ; improve error message
updated connection pooling type in HiveConf and modified assertions in TxnHandler and TestTxnHandlerNegative to enhance connection management and ensure clearer error reporting for Hikari
replaced references to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to standardize the method used for pressing the home button across the launcher functionality
added lock and hide functionality for file locking in the FileMenuFilter and OCFileListFragment classes to enhance user experience by providing better control over file locking actions
fix : lucene : core : spotlessapply failure due to 8.8 . 1 version update
improve efficiency of incremental update by clear the replication strategy
introduced a private method ` waitForState ` to encapsulate waiting state logic to improve code readability and maintainability by reducing duplication in waiting operations
refactor ` SkylarkDescription ` and ` SkylarkDescriptionArg ` to accept ` ImmutableMap < BuildTarget , ProviderInfoCollection > ` instead of ` Map < String , Object > ` to improve dependency management and maintainability of code
extract common storage interface to interface to make it easy for user to manage localstorage and sessionstorage .
fix npe when unnecessary or replace option in view
changed exception handling from catching ` Exception ` to catching ` Throwable ` and updated the message format to improve error handling specificity and provide clearer error messages
update query string retrieval logic in SpellCheckComponent . java to ensure correct query string is used for better spell checking accuracy
added validation for header values to check for illegal characters and whitespace patterns to ensure that header values conform to HTTP specification and prevent potential errors in processing
[ gr - 3998 ] fix instance size computation for hybrid layout .
change apexcommentcontainer to be abstractapexcommentcontainernode since some package relying odd .
hhh - 16970 - warn if ` @ fetch ( lazy = true ) ` and ` fetchmode . lazy ` be true
replaced implementation of SwaggerSpecFilter with AbstractSpecFilter in NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to simplify the filter hierarchy and improve code maintainability
added assertions for database name and table name in TestCompactionTxnHandler . java to ensure correct retrieval of database and table names during compaction operations
camel - 681 : added support for graceful shutdown of timer component .
stop update worklist when a block be process ( # 1100 )
updated the ProviderManager class to use CollectionUtils for checking null elements to improve null safety and avoid NullPointerExceptions in the provider list initialization
simplified the database compatibility check for Postgres to improve code readability and maintainability
added new query and query functionality to LocalIndexIT and modified scan behavior to support a new local index limit attribute to enhance scan efficiency and ensure proper handling of pagination based on the specified limit
fix ( sql ) : prevent add collection with the same name but different type
update resource calculations in VDUBuffer . java and replace cursor handling in vt320 . java to ensure correct rendering of views and improve cursor state management
removed the static final string USE _ RETRIES from HttpShardHandlerFactory to simplify the shard handler configuration for retry attempts
fix : properly parse java 17.0 . 7.0 . 4 version
added a check for an empty inputGates array in StreamTask . java to ensure that processing only occurs when there are inputs to avoid unnecessary processing
int - 1818 add empty @ test method to enable unit test to pass
add null check for properties before retrieving it to avoid potential NullPointerException when properties is null
[ hotfix ] [ runtime ] filesystemblobstrategy should wrap the ioe into ioexception
ambari - 24813 . add note about support for pre - upgrade stack version ( dsen )
fix issue with transaction confidence not update when receive new transaction .
bugfix # 128 , add g1 perm space to the list of known perm space name
removed unused imports and simplified the return statement in NearbyController . java to improve code clarity and maintainability by eliminating unnecessary dependencies
pdfbox - 4892 : make class public again , a suggest by valerybokov
added checks to ensure a task is not of home activity type during gesture state validation to improve the accuracy of gesture handling by excluding home activities from swipe - up interactions
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated corresponding constants and methods to improve clarity and organization of header management in the edge client filter
updated method names and logic in ShadowTelephonyManagerTest and ShadowTelephonyManager to support lowercase language handling to ensure accurate testing and representation of language representation in the application
set the unfreeze amount in the UnfreezeBalanceV2Actuator to ensure the correct handling of unfreeze balances
[ xep - 3560 ] fix output of ` ` match ' ' instead of ` ` minute ' '
simonstewart : fix break build on window .
refactor assertion classes in the project structure to improve code maintainability and readability
adjust javadocs for new sumfoo ( ) / averagefoo ( ) method name
updated the method for adding push all fields in MongoDB and added tests for multiple documents to enhance functionality and ensure proper handling of pushall operations in MongoDB
modified UUID handling in MockHubService to set a default UUID if it is null to ensure a valid UUID is always set before setting the hubChangeLog
added support for hover events in InputConsumer classes to enhance user interaction by allowing hovered input events
added a sleep delay when the ` boostrapConf ` variable is set to ` false ` and initialized it with a default value if ` confDir ` is ` null ` to improve responsiveness by ensuring a wait time when the Zookeeper server is configured before proceeding with operations
camel - 14553 : camel - netty - http consumer option - add label to property and rename maxheaderssize to maxheadersize .
hbase - 25942 increase client retries from 5 to 15 and downgrade from 5 to 15
fix file path in sourcesnippethelper ( # 2763 )
[ gr - 39692 ] make test more robust by check the graph cache .
updated the query command from " customer _ count " to " all _ tables " and modified the query syntax in SchemaCrawlerTextCommandsOutputTest . java to enhance SQL query functionality and improve test coverage for the new query syntax
added logic to adapt Kraken assets into currency pairs to ensure accurate currency information is stored for each asset type
added a ` toString ` method to the ` anyOf ` class and created a test class ` AnyOf _ toString _ Test ` to improve the string representation of conditions for better debugging and logging
[ te ] fix group - name for auxiliary email when no dimension define ( # 4148 )
[ influxdb ] publish influxdb measurement without property ( # 23232 )
fix ( sql ) : fix minor typo in method name ' dtransform '
netutils : filter duplicate local address on window
fix data - text metadata when column name be a special character ( # 5320 )
added methods to set system properties and properties in WrapSystem , modified StrUtils , and CompileMethodEntity to support reflection - based property handling , enhancing code clarity and functionality
added a constructor to the UpdateRequest class that accepts a URL string to enable POST requests by specifying the URL for updates
changed enum declaration from static to instance for EnumSerialization to align with Java conventions and improve encapsulation
added a method to display a warning message for experimental response formats in RequestHandlerUtils to improve user awareness by informing developers of experimental format changes
fix : jmsutil print wrong module name ( # 6373 )
bug fix : change row height accord to new font size
[ issue # 5040 ] fix the null pointer exception when the broker be delete
added meanPartitionSize and partitionCount variables to CqlInputFormat . java to improve handling of partition size calculations for better data processing
polish a bit and enable test assertion for old junit . tests
[ drools - 7 ] avoid npe in rule terminal leave tuple .
added import for StageIDsRearranger and resolution logic in TezCompiler . java to enable dynamic handling of stage IDs during the query optimization process
fix jmx registration for messagingservice . patch by jbellis
added memory consumption logging to LotsOfOutput . java to improve debugging by providing more detailed memory consumption metrics
added documentation imports for Document and Document in multiple classes to enhance documentation clarity and ensure proper handling of document structures
polish ` ` allow ldap anonymous property to be set on property source ' ' .
refactor DatabaseMetaData class and associated methods to improve code readability and maintainability
camel - 19189 : fix test that fail on junit4 due to access modifier
added a method ` finishMocking ` to handle mock failures in ` MockitoSession ` and updated ` DefaultMockitoSession ` to utilize it to improve mocking behavior by properly handling failures during mocking
refactor dependency handling in GoTestDescription and add tests for genrule functionality to improve dependency management and ensure correctness of dependencies in Go tests
refactor buffer handling and write logic in SPDYAsyncConnection and SPDYAsyncConnectionTest to improve clarity and efficiency to enhance performance by reducing unnecessary flushing operations and ensure proper handling of write operations
fix the fluid be able to place blockliquid ( # 4609 )
updated intent data to use Uri for background URL and modified LocationListener initialization to use data string to enable proper URL handling and improve data processing consistency
fix apr unit test to align with apr
[ flink - 21212 ] [ client ] fix json dump for streamingplan in clifrontend
fix craft recipe lookup : they should n ' t be repeatable
flume - 2089 : [ test ] fix flaky test by retry forcibly force the checkpoint
tabsandindentsvisitor simplify whitespace conditionals ( fixes # 824 )
added a pattern for temporary file names in the NeuteredLinesFilter class to enhance the matching functionality for temporary files in the code
chore : integrate new gapic - generator - java and rules _ gapic ( # 666 )
modify data type handling to differentiate between " INTERVAL " and " NCLOB " types to ensure consistent type representation and accommodate additional data types
register wavefront timer in order to provide more metric
[ type : refactor ] add warmup to flink - shenyu plugin ( # 3344 )
added a new method ` registerListener ` to ` ShadowSensorManager ` for registering events with specified parameters to enhance the functionality of the ` registerListener ` method for better event handling
added exception handling for SocketException in HttpServerTestBase and SelectChannelServerSslTest to log warnings for invalid responses during SSL connection tests
camel - 9457 : upgrade commons - lang to 1.7 . 0 and camel - ignite - osgi - karaf to 1.8 . 0
modified output handling in AbstractClient . java to check for empty values to improve clarity of output when the count is zero or one is present
pdfbox - 2576 : catch only ioexception and return false instead of throw an exception , a suggest by michael klink
added tests for HDR capabilities functionality and updated method implementations to ensure proper handling of HDR capabilities and validate supported operations
added a finally block to release the classLoader to ensure resources are released even when an exception occurs
enhanced error messages in SemanticAnalyzer for better clarity and debugging to provide more context for debugging related issues related to bloom filter entries
add empty constructor in order to avoid npe
make serializormanagedidiom low priority for java . awt . component
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and adjusted decimal object creation logic to ensure consistent handling of decimal values and improve precision scale enforcement
modified output stream handling to differentiate between GZIP and another output streams to ensure consistent output stream usage based on response commitment state
pull out http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49448 from 2.0 . x to 3.0 . x
removed unnecessary conditions in DCD . java to streamline the code and improve readability by eliminating redundancy
added a method to retrieve the thread group name for handling null threads to ensure the thread ' s group name is set to " stop " when the thread is no longer available
sec - 291 : remove printstacktrace ( ) call from afterpropertiesset method .
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` to better reflect the purpose of the class in the nutch . tools environment
removed unused Lombok import from ChainingRegisteredServiceDelegAuthenticationPolicy . java to improve code clarity and reduce unnecessary dependencies
server : fix migratevm - get iso path from vm ' s disk when migrate vm to iso
refactored signal handling logic by removing unnecessary handling of exceptions to simplify the code and improve clarity in error handling during signal processing
replaced static import of ` isEmpty ` with ` ArrayUtils . isEmpty ` for better clarity to improve code readability and reduce dependency on the standard library
fix test failure when run on springcloud
* fixed colorRGBA javadoc warning ( issue 43 )
planning should not be disable by default , remove uninitialization
added build time parameters to the TwoLevelArtifactCacheDecorator and related classes to ensure accurate build time tracking for artifact caching
updated methods in GroupByOperator to use getFields ( ) instead of getFields ( ) and modified the condition in check for fixedRowSize to improve accuracy in row size calculation and ensure correct handling of varLenFields
wallet : fix npe in addblockappearance when use a disabled transaction .
added CNC _ BTC currency pair and updated ticker retrieval logic to include it to support trading functionality involving the CNC currency in the application
update skewAllowance from 5 to 15 and modify related classes to handle its value to increase allowance dynamically for SAML configurations based on service settings
added sorting functionality for songs and updated its usage in the query to allow for better organization of song data and ensure proper sorting behavior
remove retrofit . client . request . readbodytobytesifneeded because it ' s only use
add a new class for backwards compatibility ( # 1588 )
hive - 27194 : ignore non - existent tag in branch creation ( # 3450 ) ( adam szita , review by ayush saxena )
replace ` newArrayList ` with ` Collections . singletonList ` for setting external groups whitelist to improve performance and reduce memory overhead by using a singleton list
modified bounce count handling and added resource index retrieval in PhotonMappingDemo and PhotonMappingDemo to improve code clarity and ensure accurate high bounce count logging
updated the password change validation logic and added debug logging in the IdentityProviderEndpoints to ensure proper handling of unsupported operations and improve error reporting for unsupported operations
remove assumption about reflective fields from the notInitializedInConstructors collection to ensure uninitialized fields are retained during construction
added a check for closed connections and updated the SQL error handling to ensure proper URL resolution for closed connections and provide clearer error messages
added a test method for verifying required user data and user name in SpringmvcClient . java to ensure proper handling of missing user data and enhance test coverage for application functionality
updated regex patterns for user and password patterns in CredentialInjector . java and corresponding test in CredentialInjectorTest . java to ensure accurate matching of user credentials by allowing for additional characters
added a new menu item " Item4 " and a key binding for the ' ENTER ' key in ActionListenerCalledTwiceTest . java to enhance functionality by providing additional options for user interaction
updated print statements in TestCoreParser . java for improved clarity and correctness to ensure that results are only produced when a query is present , improving debug output
performance improvement : string - compare be usually cheap than array - comparison , so compare the string field first to fail more quickly
removed the public access modifier from the PopulatorContextStackItem class to restrict visibility to the class for better encapsulation
updated the method for retrieving the document count and added a test for small sample from corpus to improve performance and ensure correctness of document indexing when multiple documents are present
reformatted code for better readability in QuestManager . java to improve maintainability and clarity of the event firing logic
[ hotfix ] [ test ] change networkbufferpooltest to extend testlogger and make it static
modified query appending logic in MongoSessionDataStore to use a consistent approach for appending results to improve code readability and maintainability by standardizing the object instantiation
add stub for unsafegetlong in favour of unsafedoader .
updated time zone name for Asia / Amman from ARAST to EET across multiple language files to correct time zone representation for better accuracy in time zone representation
update DeprecationLogger id from 90000010 to 90000011 to ensure compatibility with the latest logging framework
hhh - 14316 handle jdbcexception while perform lock without acquire a lock
remove debug output , fix arrayindexoutofboundsexception
fix : use screen menu bar for macosx
apps - 438 add integration test for piecewise function ( wen )
fix recent animation not get complete sometimes when use 3p launcher be : fcad20bad9
added modWhiteListPattern to HiveConf and implemented a test for modifying Hive metastore SQL parameters to ensure proper modification of configuration parameters and validate behavior with additional error handling
camel - 12727 : remove java cache usage of invalid class during entryloader . loadentryasreference ( )
fix ghost input detection for sharded player ( # 6015 )
apply patch from jboynes to improve test coverage .
use validatenullable condition in pinot - client patch ( # 2937 )
refactor multiple Java classes in the security token service implementation to improve code organization and enhance maintainability
added a test for document retrieval and made the separator constants static final to enhance code reliability and enforce immutability for fields
added snapshot handling for PostgreSQL commands and updated related logic in ` ExecutablePreparedStatementBase . java ` to improve snapshot management and ensure compatibility with PostgreSQL features
modified conditional checks for cache and cache size in DefaultServlet . java to ensure proper handling of specific cache configurations and improve code readability
add drag - and - drop support ( # 4065 )
refactor ExecutionUnitRunner and CucumberTest to use the new Description class and update expected child counts to ensure consistency in description handling and improve test validation
replace string checks for myVersion and buildTimeString with StringUtils checks to improve readability and maintainability of the code
changed access modifiers of methods from public to package - private in TimeUtils . java and added corresponding imports in TimeUtilsTest . java to enhance encapsulation by restricting access to utility methods and ensure proper organization of test classes
modified the class name comparison logic in ` RefectionMHTests . java ` to utilize a new method for determining if the class is expected to enhance compatibility with different Java versions and improve code clarity
updated file extension checks to include " . jpg " and " . jpeg " suffix to ensure compatibility with different file naming conventions
[ gr - 28854 ] fix jvmci test with -- jvm - info compile for native image .
added icon retrieval methods and updated class displayed value in DataTableTopComponent to enhance UI icons and improve component behavior for display nodes
refactor the substring calculation in CounterRequestAggregation . java to handle potential null values to improve code robustness by preventing potential StringIndexOutOfBoundsException
updated the replacement logic in FindAndReplace to handle dollar signs tolerate in dynamic expressions to ensure correct handling of dynamic expressions when the regex is not met
change to allow to use different port for remote address ( or port ) .
refactor SchemaExtractionProcessor for improved code clarity to enhance maintainability and readability of the code
added copyDir method to copy source and destination directories into specified directories to improve file management by ensuring the destination directory is valid before attempting to copy files
added exception handling for unknown datum classes in JacksonUtils . java to improve error reporting for unexpected datum types during JSON processing
updated the handling of ABI targets in DefaultJavaLibraryBuilder to ensure proper dependency injection for library targets to improve modularity and maintainability of ABI building logic
adjusted height calculation for item height by removing background padding to simplify height adjustment logic for better UI consistency
added normalization for database and table names in ObjectStore . java to ensure consistent identifier formatting across different database systems
updated database schema handling for Oracle databases and adjusted table metadata retrieval to ensure correct schema is used for Oracle databases and improve table metadata retrieval accuracy
removed the logout functionality for the API client and directly closed the activity to streamline the app ' s operation by eliminating unnecessary logout steps
[ hotfix ] [ test ] fix the flaky test case of some task ( # 1337 )
added null check for the candidate list before retrieving it from the fast import to ensure safe access to the default toolkit when no element is available
updated the logic for determining if a bean is managed and modified assertions in the test cases to improve accuracy of lifecycle state validation and ensure correctness of lifecycle states
rename iexecutionattributepagesdialect to iexecutionattributepore to match other dialect class name
clear the metadata in AlterTest . java to ensure the metadata is cleared before processing new data
fix npe in cmdgettime when loc be null
added null check in TabletInsertionDataContainer and refactored DisruptorQueue exception handling into a new exception handler to improve robustness and clarity of error handling in the disruptor process
deleted the Session2Token . java file to the class is no longer needed in the project
bug cs - 15403 : if volume fail , destroy the destination volume and expunge
added a new Install shortcut and implemented functionality to handle install actions in the SystemShortcut to enhance user experience by allowing quick access to install components in the launcher
added a constructor to LdapAuthenticationProvider that returns a default GrantedAuthority array when no authorities are provided to improve flexibility in handling null authorities during authentication
fixed issue with build tool not find retrolambda jar in classpath of cn1 - build .
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to improve code readability and maintain consistency in method usage
replaced the fixed bit set implementation with a dynamic retrieval of liveDocs in the sortLiveDocs method to improve flexibility and performance of live document sorting
fix a bug in the extractor which detect a nullpointerexception when match number be not specify and the default value be null
added null and length checks for user authorities in AuthorizeTag . java to ensure all authorities are validated before proceeding with further operations
refactor assertions to use constructor syntax and improve readability to enhance code clarity and maintainability by using consistent style
server : improve error message when vm snapshot with memory be not support ( # 6035 )
updated configuration handling to accommodate new annotation logic and changed ArrayList to HashSet for shadows to improve flexibility in configuring tests by accommodating different class annotations and ensure that the correct configuration merging behavior
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to improve performance by using a more appropriate socket connector implementation
updated partition key comparison logic in HiveAlterHandler . java to use a new method to improve code readability and maintainability when comparing partition keys
added a new BooleanFlag named ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to allow showing the icon in text header for debug purposes
updated formatting of the conditional statement in SimulationStatus . java to improve code readability and maintain consistency in formatting
replaced SharedBlockingCallback with Callback in StandardDeployer and StandardUndeployer to improve callback handling and simplify code
added workspace listener to PreviewControllerImpl for managing workspace state changes to ensure that the preview graph is built correctly based on the update flag
updated conditions in ReflectionFactory . java to check for VM anonymous classes and modified class name check in ReflectUtil . java to enhance security checks and improve accuracy in class identification
rename TransportHelper class for consistency to improve code maintainability and readability
remove the lead slash character from the file path a we ca n ' t use on window a it have
ambari - 24927 . log server initialization time when ambari be start ( yurii shylov via ncole )
added null checks for initialization and modification nodes in JSONWriter . java to ensure robustness by preventing potential NullPointerExceptions
updated method signatures and user handling for Hadoop configurations in SliderAppsViewControllerImpl . java to improve code clarity and ensure proper user configuration is used for the slider user
added a check to ensure backgroundManager is not attached before attaching it to prevent potential NullPointerExceptions when the background manager is not attached
added functionality to manage the current tab and adjust child width calculations in the launcher to improve user experience by ensuring correct page display and visual consistency
added null check for URL in BaseDataSource and created a test for PGSimpleDataSource to ensure valid URL handling and validate exception behavior for invalid URLs
refactor PebbleModuleTest to use JUnit 5 annotations to improve compatibility with newer Java versions
added name dialog functionality to create a directory when the directory is dismissed to enhance user experience by allowing customization of directory creation
added bar border width toggle functionality to multiple chart activities to enhance visual responsiveness by allowing dynamic adjustment of bar border width in chart data
updated OkCoinExchange to point to the new Okex API endpoints to ensure compatibility with the latest Okex services
jbrules - 3708 : use the comparator in naturalscorecomparator instead of separate fix from each test
replaced FileChannel with SeekableByteChannel for input stream creation to improve performance and memory usage in file reading operations
refactor the ` getFlattenFieldTransferPair ` method to use ` FieldReference ` for better clarity and efficiency to improve code readability and maintainability by reducing repetitive calls to ` getFlattenFieldTransferPair `
updated MockHandler references to MockHandlerImpl in the new implementation files to unify the distinction between mock handlers and their implementations for better encapsulation and maintainability
simplify conditional checks for serialization configurations to enhance code readability by eliminating unnecessary complexity
added heap limit configuration for ActivityManager in QuickstepProcessInitializer to enhance process management on debugging devices
refactor lambda expressions to store results in a variable before processing to improve readability and maintainability of the code
change ignore due to change in logic in abstractloadbundletest . testfatalerror ( )
swapped the order of operations and exception handling in PrecompactedRow . java to improve clarity and ensure proper resource management during the compaction process
updated the rendering intent return value and simplified color conversion logic to enhance reliability and readability of color conversion operations
stop meterregistry ( fixes # 515 )
[ 3.0 ] reduce log level when there be no config center ( # 9396 )
added tests to validate the certificate generation with a specific byte array to ensure that the certificate generation process fails correctly with expected exceptions
camel - 19937 : simple language - simple to check if the operator be ambiguous . also add a test for this
removed redundant onTabUnselected method implementation in EditorActivity and added onFocusChanged method in IDEEditor to simplify code structure and ensure windows are dismissed when the tab is unselected
fix bz 65703 - log message at openfail should include user name
updated color model and scaling parameters in SkeletonModelGpuSkinningTest . java and adjusted animation time calculation in OgreXmlLoader . java to improve color accuracy in rendering and ensure animation timing accuracy
removed the InterruptedException declaration from the createOrThrow method signature to simplify the method signature for better readability and usability
added @ Deprecated annotation to UpgradeResponse . java to indicate that the UpgradeResponse class is no longer recommended for use
added new configuration for generating JavaScript declarations in the JSweet transpiler to allow users to specify the location of generated d . ts files upon the specified option
added a test for Kinesis fetch timeout in StreamConfigTest . java and updated the fetch timeout logic in StreamConfig . java to ensure correct behavior of kinesis fetch timeouts for different consumer factories
include complete html tag in ` streamingdataflowworker ` for good interoperability
hive - 27113 : increase hive metastore server ' s maximum thread limit ( jesus camacho rodriguez , review by gopal v )
changed the return type of onTaskSnapshotChanged from void to boolean to enable the method to indicate whether the task snapshot has changed
update shadow radius parameter from mMaxShadowRadius to shadowRadius to ensure proper shadow radius is used for animations
int - 752 added integration test for chain nesting and aggregation .
updated loop condition from ' limit ' to ' end ' and added error handling in MarketSellAssetActuatorTest . java to improve code clarity and ensure proper error management during testing
[ gr - 24678 ] do not compile processor context on interop thread .
amend hbase - 27194 - fix npe in createkeytabfilesserveraction
updated LauncherPreviewRenderer to include DisplayController in the WindowManagerProxy instantiation to enable better management of display properties within the launcher
8182402 : tooltip for desktop button be in english when non - english locale be set
updated screen size retrieval to use getDefaultToolkit ( ) instead of getToolkit ( ) to ensure consistency with the default toolkit for screen size retrieval
tweak the type argument to make the caption compile
added methods for inserting , removing entities and querying results in JPASQLBase . java to enhance test functionality for fetching results with dynamic expressions using QueryDSL
removed unnecessary debug print statement from FreeformFinSetConfig . java to streamline code for better readability and maintainability
update moe version to 1.2 . 0 ( # 4868 )
fix ( core ) : miss program . spendallGas ( ) when set call value
standardize the error format in ElementsShouldSatisfy . java and ZippedElementsShouldSatisfy . java to improve readability and consistency of error messages
added a @ Deprecated annotation to Weights . java to indicate that the class is outdated and should not be used in future development
make unsafe . getandsetprimitiveplugins not require jdk 8
added Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and created Sample class for testing blacklisted modules when not visible to improve code clarity and ensure correct behavior when attempting to hide blacklisted modules
changed the vertical flag of mCenterPages from true to false to align the component behavior with updated center page layout
fix a race condition during migration finalization on master node . also fixes # 859
updated variable names and configuration keys from HOST to baseUrl for clarity to enhance code readability and maintain consistency in naming conventions
updated the type of attributeValue from Object to List < Object > and modified its usage in mapSingleAttributeDefinition to improve type safety and ensure the correct retrieval of resolved attributes
updated test table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to include additional database references and query parameters to improve clarity and functionality of test table management and query processing
added a new test case for parsing SQL statements with escape sequences in CaseExpressionTest . java to ensure correct handling of special characters in SQL syntax within the application
added handling for copy mode based on input devices and refactored the copy mode initialization to improve user experience by ensuring copy mode starts seamlessly after specific device events
replaced the XML writer method with a static method that utilizes XML parsing to improve flexibility and enable XML output generation using XML standards
camel - 5590 : avoid potential npe when use empty aggregation strategy .
avoid use internal api to create exception message .
move basicconfigurator to . class and use it in each other .
avoid infinite loop when the voltage of the typeQualifier dataflow be not there
bug 59822 : remove unused import ( sharestringsource )
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate the invocation of method invocations with detailed trace information
renamed multiple classes related to box and whisker calculations and histograms for clarity to improve code readability and maintainability by standardizing class naming conventions
[ flink - 26552 ] [ test ] migrate readableconfigurationtest to junit5
changed the ` NormUpdate ` class to static and modified string comparisons in various classes to improve performance and correctness in string comparison and enhance code readability
changed the access modifiers of the IndexFileNameFilter singleton and constructor from public to private to restrict instantiation and improve encapsulation
fix ifstatementtest by add test expression and de - synching test
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` to ensure accurate retrieval of table header row data
refactor TypeAdapter methods to simplify null handling and improve read / write method clarity to enhance code maintainability and reduce redundancy in the serialization process
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected output of the distribution tests
add a new class EXIFReader for processing EXIF metadata files to facilitate the reading and processing of Exif image metadata files at runtime
change default value of tostandardunit from unknown _ to _ sdk _ version to none ( # 3973 )
[ drools - 3762 ] fix classcastexception when use pmml extension ( # 4203 )
improve log message when we receive partial message at each startup
added a check for the visibility of the bubble bar to ensure the bubble bar is visible before proceeding with further operations
[ gr - 37891 ] fix strateaarch64 backend when the branchtargetoutofboundsexception be throw .
added a try - finally block to ensure initialization of ` initPending ` in ` JDKXRLogger . java ` and introduced a concurrent log test in ` XRLogTest . java ` to ensure proper resource management and verify concurrent initialization of logging functionality
added a find method for finding tickets by class and improved logging format to enhance ticket retrieval efficiency and provide clearer debug messages
refactor SSL connection string concatenation and conditional checks in TestSSL . java to improve code readability and maintainability
[ flink - 25727 ] [ network ] fix the closing issue of sort Mergeresultpartition ( # 25723 )
[ beam - 10670 ] define maxnumrecords default value to long . max _ value in jmsio
[ soul admin ] add type parameter to query plugin handle ( # 5370 )
added ` start ( ) ` method call to the span creation in ` DefaultSpanCreator . java ` and ` SleuthAdvisorConfig . java ` to ensure the span starts correctly after the creation of the span
added configuration options for drawable color , depth , and multisample in IOSApplicationConfiguration . java and updated IOSGraphics . java to use these constants to enhance flexibility and configurability of drawable settings in the application
[ test ] attempt to lock up after failed login
add check on the transform handle in jniutils ( # 2678 )
removed interruption check for thread interruption and adjusted lock name retrieval logic to ensure all lock names are retrieved regardless of interruption status
refactor implementations and shadow classes for improved clarity to enhance maintainability and readability of the codebase
refactor HttpClientOptions creation and add methods to retrieve properties for HTTP2 connection properties to improve code organization and enhance flexibility in managing HTTP2 client options
added support for DynamicArray in DynamicStruct and refactored type handling in SolidityFunctionWrapper to enhance type handling and improve code clarity for better debugging
updated method calls to include a boolean parameter for true in InlineLayout and FontUtil classes to ensure consistent behavior with CSS property settings
added a copyStep constructor to copy files with options for recursive copying to enhance flexibility in handling paths during copying operations
fixed - redissonsemaphorexception . acquire ( ) and release ( ) method of rsemaphorexception . ( regression since 3.18 . 1 ) # 3994
camel - 15726 : camel - core - optimize unit test for camel - core
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` to use it for parsing flavors to improve code readability and maintainability by encapsulating parsing logic in a dedicated class
updated the type of ` witnessesAddressList ` from ` List < String > ` to ` List < ByteString > ` in ` WitnessScheduleStore . java ` to improve data handling and accommodate larger keys in witness addresses
modified print statement to conditionally display results if not empty to enhance output clarity by avoiding printing empty results
refactor ConcurrentLinkedQueue to improve null checks and traversal logic to enhance robustness and prevent potential NullPointerExceptions
fix compilation error with new huggingfacesetokenizer api
[ hotfix ] [ runtime ] replace arraylist with collections . ncopy in taskmanagers
updated chunk data handling in LoadSingleTsFileNode . java to ensure correct data size is used for chunk data processing
added a new constant for session storage context and updated the session state handling in the DuoSecurityMultifactorWebflowConfigurer to enhance session management and improve state management in the application
add test to validate schema validation with a valid jspdocument
added a default constructor to TypeAdapter and updated the Ignore annotation in Java17RecordTest and ReflectionAccessTest to ensure compatibility with Java 17 and clarify the reason of ignore warnings related to record support
added safeguard for killing event . also make it a bit more responsive .
refactor AntPathRequestMatcher to improve matching logic to enhance accuracy and maintainability of path matching functionality
[ ds - 3952 ] fix authorization issue when check for resource
added null check before releasing the deflater entry in GzipHttpOutputInterceptor and modified imports in BlockingTest to improve stability by preventing potential NullPointerExceptions and streamline code for better readability
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup and resource management after tests
fix checksum normalization to normalize un - ascii character
refactor command handling to improve command validation and separation logic to enhance reliability and maintainability of the code
javadocs : fix warning and add miss @ override annotation in basestate
datamongo - 751 - fixed potential classcastexception when save json string .
[ scb - 2161 ] fix npe when extract remote ip ( # 2283 )
changed the return type of getJobArgs methods from String to ObjectBuilder and updated relevant method calls to improve compatibility with JSON utilities and align with updated API standards
8277463 : make cookiemanagertest more robust by use the fake address
updated whitespace handling in GlyphLayout and added test cases in BitmapFontTest to ensure correct execution of wrapped runs and improve test coverage
[ hotfix ] [ connector / pulsar ] add support for pause / resumepolicy on pulsar partition split reader
added configuration for the Hive script operator ID in HiveConf . java and updated ScriptOperator . java to use it to allow dynamic assignment of the Hive script operator ID from the environment variable
replaced the implementation of ` getListedTermCounts ` to utilize an input stream for sorting terms to improve code readability and maintainability by simplifying the stream processing and enhancing the sorting mechanism
added a new file ` UseSeparateStepSizeAction . java ` to implement a menu for enabling separator step size functionality in the application
update FileMenuFilter to use final modifiers and modify unlock action logic based on file state to enhance code clarity and ensure proper handling of unlock actions based on user data
hbase - 27566 avoid npe in roundrointableinputformat . getsplit ( ) when the region location be empty
updated sample data in HttpClientRequestAdapter and HttpClientRequestAdapterTest to replace " false " with " 0 " and " true " as a valid value to ensure thatampled data is properly represented as " 1 " for proper functionality
pdfbox - 4892 : avoid dead code , a suggest by valerybokov ; remove unneeded null check
added fullscreen functionality by modifying display modes in GwtGraphics and GwtApplication to improve rendering consistency with fullscreen mode
[ log4j2 - 2387 ] updated webfingerissuerservice to use uri instead of string .
add unit tests for SoulApacheDubboClientConfiguration to ensure that the Dubbo configuration properties are correctly initialized
replaced calls to Gdx . files . internal ( ) with the resolve method for loading asset descriptors to improve code maintainability and reduce external dependencies
added logging of attributes after the merge with attribute policy results and changed log level from warn to info in multiple files to improve logging granularity and clarify log severity for better debugging
replaced calls to ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple files to improve efficiency by allowing for interruption handling when locking
updated package declaration for consistency in Compiler . java to improve maintainability and readability of the code
added a new import for CodeException and modified the handling of redundant branches in NullDerefAndRedundantComparisonFinder . java to improve error reporting by ignoring specific exception cases based on the position of methods
make manifestfetcher compatible with android ' s defaulthttpdatasource .
fix for http : / / issues . apache . org / jira / browse / amq - 6373 - make the maxstatementperconnection configurable
changed the return type of the set methods from WritableConfig to Configuration in multiple classes to provide a more general and consistent return type for configuration handling
added error handling in the checkErr method to throw a BAD _ REQUEST exception for invalid command payloads to improve robustness by capturing and capturing errors in command payload validation
renamed CombinedDataset class files for consistency to improve code readability and maintainability
replaced the byte array allocation with a direct byte array reference in the InflateIn _ DeflateOut class to improve performance by reducing unnecessary memory allocation
added a method to remove cryptography restrictions and a corresponding check for its availability to enhance security by ensuring only necessary security permissions are considered in the application
fix teleportation of level 1.5 chunk , now even if event cancel .
added a new test method ` testPageMarginsLongTextTransform ` to validate the functionality of page margins with long text transformations
updated vectorization context handling to check for null before adding it to vectorizationContexts to avoid potential null pointer exceptions when accessing vectorization contexts
convert wialon speed to positive number a propose by juraj lonc
hbase - 30525 be disable by default , this be disable by default . ( # 305 )
added ` isEmpty ( ) ` method to ` JsonObject ` and corresponding test in ` JsonObjectTest ` to provide a way to check if the JSON object is empty and ensure it behaves correctly through unit tests
added new boolean flags for user presence , visibility , and attached state in Launcher . java to manage receiver lifecycle management and ensure proper cleanup of the receiver
renamed multiple HttpClient - related classes for clarity to improve code readability and maintainability by using a more descriptive class name
fix zadd ( ) bug : params be not pass to the zadd method
[ ds - 3852 ] fix checkstyle issue after update
enable a couple of test for now .
added a method ` getNodeOptional ` to retrieve an optional TargetNode for ` VersionedTargetGraphBuilder ` and modified the handling of target nodes in ` VersionPropagatorBuilder ` to improve code clarity and ensure proper handling of optional target nodes in the build process
updated EPOCH _ SECONDS _ HIGH and EPOCH _ LOW constants for better readability and maintainability to improve clarity and consistency in time zone comparison logic
patch from johan from bug # 44063 - fix arrayindexoutofboundsexception when embed xls file
change initialization variables for row and column in JSONParser . java to ensure correct starting values for correct JSON parsing
replaced the use of ` FullyQualified ` with a ` Pattern ` for better pattern matching in the ` FindTypes ` and ` JavaType ` classes to improve the efficiency and maintainability of type matching by utilizing regular expressions
updated DETAIL _ THUMB _ HEIGHT and added functionality for handling multiple trails in BaseItemDetailsFragment to enhance user experience with improved trailer management and error handling
added a method to remove glyph information and refactored conditional checks in CStrike . java to improve memory management by ensuring unused cache is cleared before freeing long pointers
fix for http : / / issues . apache . org / activiti / browse / amq - 4213 - terminate end event on process termination
camel - 7009 : fix issue with miss xmlelement for type parameter . thanks to tracy snell for the patch .
update HTTP endpoint in SimpleHttpClientTests from " http : / / apereo . org / scottb . html " to " https : / / www . abc1234 . org " to ensure proper client configuration for testing
added option to clear all preferences to default value ( fixes # 440 )
hbase - 27194 thriftmetric ` ` subclass ' ' can be reuse by a subclass
[ danfossairunit ] remove deprecated channel from the channel
use hamcrest assertion instead of junit in tests / integration / mp - backport main ( # 1749 ) ( # 6202 )
removed redundant check for expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null check and hashcode methods to PartitionPanel and PartitionFactory classes to ensure proper handling of null indices and improve object comparison functionality
api : allow to specify disk size , min / max iop for vm in customization
added preference handling to visibility logic in PredictionRowView to enable prediction based on user settings
[ geot - 4646 ] add bbox and cr parsing test for invalid bbox and return 400 instead of 500 error
added validation methods for value and position parameters in LibrustzcashParam . java to ensure values are valid to prevent runtime errors
deprecate ithrowableentity in favour of the simpler and efficient version
updated the calculation of node position in NodeDataImpl . java to introduce randomness to ensure consistent positioning across node nodes
fix # 1396 - make validation test case for refresh token optional .
refactor the initialization of ` declaredDepsBuildResult ` , ` firstOrderStdout ` , and ` returnedStderr ` to use a try - with - resources statement for cleaner resource management to improve code clarity and ensure proper initialization of the invocation object
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to prepare for the release of version 0.9 . 2
added a condition to check for the DEEP _ SHORTCUT item type in LoaderCursor to enhance support for deep shortcut items in the loader
added a hashCode ( ) method to the TimeGranularitySpec class to ensure proper hash generation for instances of TimeGranularitySpec
change visibility of weights and BooleanWeight and DisjunctionMaxWeight from private to protected in BooleanQuery and DisjunctionMaxQuery classes to allow subclasses to access these members for better extensibility
added a boolean flag to control proxy response code behavior in HttpURLConnection to ensure proper handling of NTLM proxy when the response code is used
[ gr - 8569 ] aarch64 : use . sp - register to allocate stack slot address .
bug 9195 : fix the logic to calculate the used capacity of a host on behalf of another host .
updated the condition to include score in JSONResponseWriter . java and added a new query test in TestDistributedSearch . java to ensure proper handling of score when includeScore is true and improve test coverage for distributed search functionality
updated audio recorder version from 22050 to 44100 to utilize the latest audio quality and improved audio quality
adjust the calculation of newOriginX to account for scaling to ensure accurate alignment of subject boundaries in the rocketfigure
[ calcite - 2175 ] fix nullpointerexception in druidquerybasedinputformat ( marta kuczora via szehon )
added ORIGINAL _ TYPE property and updated regex pattern matching to support new fields to enhance functionality and ensure proper validation of property values
added a static method ` create ` to create an instance of ` Index ` using a parent and data map to facilitate the creation of ` Index ` objects using specified parent and data structures
simplified the boolean assignment for clarity to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility . java and added test cases in TestSchemaCompatibilityTypeMismatch . java to ensure correct behavior of schema compatibility checks with writer types
metamodel - 644 : improve handling of collection / association for @ collection / @ join
added synchronization to the spans list for thread safety to ensure thread safety when accessing spans across multiple threads
remove type parameter for gettext method to avoid type pollution .
updated exception handling in ViewContextImpl . java to catch InvocationTargetException and modified logging behavior to improve error handling and provide more informative logging during authentication failures
refactor OAuth2AccessTokenEntity class to improve code readability to enhance maintainability and facilitate future updates
[ scb - 2372 ] stop the rest of the main request if the service be reject ( # 2373 )
added new project file entries for Default - 1024w - 1366h @ 2x and @ ipad . png to the project setup to enhance image loading capabilities for the application
updated imports and changed MockAnalyzer to use ConcurrentMergeScheduler in TestSearcherManager . java to improve thread safety and performance in concurrent operations
added null checks for SessionState and improved list handling in GenericUDTFInline to enhance code robustness and prevent potential NullPointerExceptions
changed implementations of MapIterable , FJIterate , and ParallelIterate classes to enhance performance and readability of the code
ticket # 3174 : make sure spreadsheet key validation do n ' t fail if the function be cancel
hhh - 13067 clean up osgibundleactivator and remove wrong classloader
fix # 870 improve accuracy of elapsed time calculation
create non - packaged resources folder and generate component . xml file if they do n ' t exist
replaced backslashes with forward slashes and updated file name handling to ensure compatibility across different operating systems and improve code clarity
changed the return type of the row ( ) method from returning a Cell < T > to void to simplify the method interface and improve usability by providing a void return type
better error message when there be multiple port assign ( # 3373 )
added a null mask feature to the WebSocketClient class and modified the WebSocketConnectionD12 initialization to enable dynamic mask generation based on a null mask setting to enhance flexibility in mask handling
modified return type and return type in genUDTFPlan method to return a Pair < RelNode , RowResolver > to improve code clarity and maintain consistency in return types
[ flink - 18552 ] [ runtime ] track the selection stats of bucketed preferred and non - preferred node
add a simple example to illustrate how to change a person ' s name
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to enhance code clarity and ensure proper handling of the owner pointer ' s existence
added a clock feature to the PlaybackOverlayFragment for smoother transitions to enhance user experience by providing a smoother transition effect with animation transitions
remove unnecessary call to world . markdirty ( ) , fixes # 4971
changed the access modifier of the IMPL variable and improved exception handling in SegmentReader . java to enhance thread safety and clarity in error reporting for loading SegmentReader classes
try to fix not on fx thread for sudoku grid event
removed the DefaultInetAddressAdapter and updated related classes to use a Class parameter instead of TypeToken for type adapters to streamline the adapter initialization and enhance type handling capabilities
added methods to check for null values and values in the Series class , along with corresponding unit tests to enhance functionality and error handling for null values in the Series class
change audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to ensure proper audio compression for the video manager
updated boundary conditions in GeoRelationUtils and GeoUtils to use strict less than or equal to improve comparison correctness and performance
cloudstack - 2120 : fix npe while delete a disk offering which be delete from the secondary storage ( # 2502 )
close instance in before after test . attempt to fix # 3673
add some extra check on getinstance ( ) trigger nosuchalgorithmexception
nutch - 2729 - improve error message when there ' s an operation log file
allow aop advice to inject type information . fix # 2751
fix issue # 882 : a nullpointerexception thrown when close ( ) be call before the connect ( ) .
replaced Math . addExact with MathUtils . cappedAdd in WebSocketConnection . java to improve code clarity and leverage MathUtils for addition operations
modify the image output stream handling to use try - with - resources syntax to ensure proper resource management and avoid potential NullPointerExceptions
refactor search handling by removing TvApp ' s showSearch method to streamline search functionality and improve code clarity
removed the ` this . ` keyword from ` schemaCrawlerOptions ` and adjusted the ` toString ` method in ` GrepOptions ` to streamline code for better readability and maintainability by reducing duplication
http : / / issues . apache . org / jira / browse / amq - 3135 - add osgi support to web console
added an Autowired annotation to the RepositoryIndexCreationIntegrationTests class to enable the integration test with a PersonRepository instance for better test management
update the exception type in uiservice . stop ( ) method from Exception to InterruptedException to improve handling of thread interruptions during shutdown
fix the cactus not be able to delete from the cactus map ( # 1668 )
refactor mouse handling in ThemeSelector to use a MouseMotionAdapter for update state management to improve code clarity and maintainability by separating mouse event processing logic
[ java ] add rhs padding to multicast flow control constant so that they can be reuse by dns provider when possible .
added alignment and vertical alignment parameters to the EditStringAt method in IOSImplementation and IOSNative to enhance text editing capabilities by allowing customizable alignment and vertical alignment
explicitly throw an exception if the tokenization model be null instead of throw an illegalargumentexception .
added a check for distinct queries in the ClusterIntegrationTestUtils and QueryGenerator classes to ensure that the having clause behaves correctly under different scenarios involving distinct queries
fix bug in jni string simulation and add more information to native linkage .
add comment to aid future maintenance
added null check for children before iterating to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition fields to MessagePackParser and updated token handling logic to support new parsing methods and improve token management functionality
added locale management and cleanup after tests in AbstractSolrMorphlineTestBase to ensure consistent test locale and prevent test failures across different environments
removed conditional logic for determining the size of the launcher in LauncherFragment . java to simplify the size calculation for different SDK versions
add a new test class for the MetricsReporterTest for testing metrics registration functionality to ensure correctness of the MetricsReporter registration methods
camel - osgi : remove unused field such a ' typecachecache ' in osgiserviceregistry
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class to ensure proper comparison and hashing functionality for instances of the class
test : fix flaky test [ streamkafkatest ] [ streamkafkatest ] [ test ] test _ nonexistenttopic use case - insensitive name for sink list
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in the use of BigInteger type
hive - 13158 : llap : allow for use of fqdn in work submission ( sergey shelukhin , review by prasanth jayachandran )
fix assert in clientoutmemoryhandlertest by wait for event to shutdown
added a new method ` getCmoObjectId ` to multiple shape - related classes and updated the usage of ` setObjectId ` in the subclasses to standardize the handling of object IDs across shape - related classes by centralizing the retrieval of special object IDs
hhh - 11847 : add test case for query distinct with distinctScalarquery .
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve code organization and maintainability
remove kubernetes client extension adapter bind / unbinding from managedkubernetesclient
updated the method to retrieve title and info for episodes and videos using a new utility function to improve code organization and enhance readability by encapsulating info extraction logic
update JUnit imports and annotations from version 4 to version 5 in TestAuthHandlerBoot and TestRSAProviderTokenManager to migrate to newer JUnit 5 features and improve code clarity
do n ' t generate summary . html when create , just write the summary a html
lucene - 6278 : remove redundant reset call with reset ( ) in termshash .
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
update ShadowWindowManagerGlobal to use TIRAMISU API level and introduce a new WindowSessionDelegateU class to enhance compatibility with newer Android versions and improve window management functionality
issue # 5704 - urlhelper always append ` ` http : / / ' ' scheme and port if scheme be not specify
updated foreign key constraint logic to accommodate MSSQLDatabase to ensure proper handling of foreign key constraints for MSSQL databases
hbase - 23790 fix checkstyle violation in hstore ( # 4266 )
pipe : fix a bug where pipe filter do n ' t activate properly , but keep from run out of order
simonstewart : make the htmlidentifier ' s logging configurable
[ flink - 26799 ] [ hive ] fix wrong join bound type in hivelookuptablesource ( # 26799 )
improve thread listener when use wrong thread
updated schema name handling in SequenceSnapshotGenerator . java to utilize CatalogAndSchema to improve schema filtering by integrating custom schema names
updated color calculations in SpriteBatch and SpriteCache , modified rendering in AlphaTest , and improved logging in LwjglDebugStarter to enhance color transparency and performance during rendering operations
fixed - redissonconnection . joinasync ( ) and redissonconnection . oncomplete ( ) method of spring data redis module do n ' t join the promise . # 1500
added base URL normalization and statistics collection logic to ensure only unique base URLs are processed from the statistic year cores
updated task launch methods to include non - null parameters and improved task handling to enhance code robustness and maintainability when launching tasks
fix npe with miss dictionary in morfologik . dictionary ( # 567 )
updated sorting options in GridFragment to change their order and labels to enhance user experience by providing more relevant sorting criteria
added imports for ViewKt and ListRow , and modified visibility logic for ListRowPresenter to ensure proper visibility based on the presence of headers items in the list
encapsulate switch - case blocks in a try - finally block for resource cleanup to ensure proper closure of resources to prevent resource leaks
clarify the header behavior for the httpclient redirect handler in the javadoc
refactor database case sensitivity checks to use instanceof for DB2Database in multiple files to enhance type safety and reduce potential errors related to case sensitivity checks
configure jackson in addition to the default java version in the ` com . fasterxml . jackson . datatype ` module
updated import statement from org . apache . log4j . MDC to org . slf4j . MDC to utilize slf4j ' s MDC for logging functionality
replaced TypeBearer with Type to simplify type handling in PhiTypeResolver . java
modified CoinbaseTransaction . java code to fix formatting issues to improve code readability and maintainability
added a method to retrieve build targets from a specified list and modified ProjectCommand to conditionally force building based on pass - in targets to improve build efficiency by allowing for forced target building based on specified sets
replaced the instantiation of IdleStrategy in Ping . java to utilize a more efficient idle strategy for improved resource management
replaced ` ContentProvider ` with ` ContentResolver ` in the ` OCFile ` class and updated related method references to improve compatibility with modern content handling and enhance code clarity
remove useless check for itemevent . selected .
[ hotfix ] [ test ] make testinglogicalslot # setslotowner null check
added a new file ` RemoveCallsToSystemGc . java ` to remove ` System . gc ( ) ` calls to ` Runtime . gc ( ) ` to implement garbage collection invocation removal feature in the Rewrite application
removed super ( ) calls from multiple exception classes to streamline code structure by eliminating unnecessary super ( ) calls
added a method to set the UIID for the ScaleImageLabel to ensure proper icon application during image rendering
updated the variable used for updating entries from ` foundEntry ` to ` update ` to enhance clarity and maintain consistency in naming conventions
8009843 : sjavac should accept - cp a synonym for - classpath
[ ci ] correct option name in javac help
added an initialization check for the ' initialized ' variable in StorageService . java to ensure proper setup before state management
update Test7196045 . java for improved test coverage to ensure more reliable functionality through comprehensive testing
updated the density and decay values from 1.5 f to 1.0 f and 0.95 f in ShaderParametersLightShaft . java to improve lighting effects and ensure consistent light behavior
added state management features to OidcConfiguration , updated stateData handling in OidcRedirectActionBuilder , and modified existing tests to accommodate new state configuration features and improve state management
# 1686 - postgres - always use unique constraint for null constraint instead of inlining unique one to unique column ( no effective change )
added federated sharing checks to the user query and updated sharing conditions to ensure access control for federated files based on federated status
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class that always returns true to provide a default behavior when document values are needed
refactor BufferAlignmentInterceptor for improved error handling and clarity to enhance code readability and maintainability by providing clearer error messages
added a method ` intForEach ` to ` Int2ObjectHashMap ` for processing elements until a null value is found to enhance the functionality of the consumer by allowing null values to be processed
fixed potential issue where scoreboard would n ' t be save once .
change return type of count methods from Long to long in QueryDslMongoRepository and QueryDslPredicateExecutor to improve performance by using long instead of Long for count operations
[ beam - 10356 ] move mtree snapshot generation from log file to debug level ( # 2323 )
lucene - 6372 : vectorutil # dotproductscore ( byte [ ] a , byte [ ] b ) should always return a dot same a 0.5 dot
added methods to manage and retrieve the last confirmed block number in the DynamicPropertiesStore to enhance control over the state of the lastConfirmed block in the system
refactor locale handling by consolidating locale - specific logic into a single method ` Systems ` to improve code maintainability and ensure locale context is correctly utilized across the application
added a condition to check if a new database was created in the LauncherProvider class to ensure that the correct activity state is returned when a new database is created
sec - 1032 : improve performance of basicaclentryafterinvocationcollectionfilteringprovider . removecollection ( )
[ mondrian - 2625 ] only set 32 - bit jvm if the datamodel be not null , this be the default one .
added a thread check to ensure it is the current thread before proceeding to improve code robustness by preventing unnecessary execution of code
changed method visibility of closeDatabase from private to protected to allow subclasses to access and override the closeDatabase method
updated imports and method calls to use ` ModelCompat . asSdk ( ) ` instead of ` apiclient . model . dto ` to ensure compatibility with the new API structure
batik - svg : fix problem with attributes not be save , fixes # 543
added a try - catch block to handle potential IllegalArgumentException when parsing user configurations to improve error handling and logging clarity for user configuration issues
added logic to handle " WaitForResult " in intent and updated waiting logic in CodenameOneActivity to ensure proper handling of waiting results based on intent extras
refactor HitQueue and PriorityQueue to use a Supplier for handling sentinel objects to improve readability and flexibility in the scoring logic
added functionality to manage widget descriptions and visibility control for specific UI elements to improve widget display experience and accommodate new features
added a maximum attribute count limit for types in the Attribute class to prevent registering too many attributes that could lead to runtime errors
move new predicatetest to impl package for test purpose
camel - 7999 : header filter should be case insensitive . this close # 879
updated InlineLayout and Breaker classes to improve alignment logic and ensure proper boundary handling to enhance code clarity and maintainability while fixing edge cases
added nullability annotations and improved view handling in ShareUserListAdapter . java to enhance code clarity and ensure default values are set when no view is available
refactor instrumenting logic and remove unused imports in Setup . java to improve clarity and maintainability of the code
added a condition to return the size of columns minus one if the association ' s insert destination is before the source to ensure correct column indexing based on insertion logic
updated memory limit handling in CmdModifierTest . java by replacing hardcoded path with dynamic retrieval using a dedicated method to improve code maintainability and ensure compatibility with different Docker client versions
replaced instances of CxxDeps . of ( ) with a new EMPTY _ INSTANCE constant in AbstractCxxDeps . java and added EMPTY _ INSTANCE for empty states in CxxLibraryDescription . java to improve code readability and maintainability by centralizing empty instance logic
updated error handling in JavaTestRule to throw a humanReadableException for null rules to improve clarity of error reporting when specifying source under test dependencies
fix compatibility with 1.8 . x and above
remove redundant check for negative atIndex in StringUtils . java to simplify code by eliminating unnecessary validation logic
increase wait time in timeouttest to reduce flakiness .
added AssistContentRequester to TaskOverlayFactoryGo for better request handling to enhance security by ensuring assist content is accurately retrieved
updated the method for generating a readable witness address and improved the account check condition to ensure correct encoding of the witness address before checking the account state
refactor DefaultMethodRegressionTests for improved test coverage to enhance reliability and accuracy of method regression tests
[ ci ] correct javadoc / checkstyle error in workloadmanagermxbean
replaced KafkaProducerException with KafkaException in test cases to ensure compatibility with the latest Kafka library changes
added a call to close the loader in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a method ` clear ( ) ` in ` ExceptionThrowingTaskletStub ` and corresponding test cases in ` FaultTolerantExceptionClassesTests ` to improve exception handling capabilities and ensure proper status reporting during batch processing
[ beam - 10670 ] improve logging of config error ( # 7097 )
added extraProperties parameter to multiple tuner configuration methods to enhance flexibility in configuring tuner configurations
added logic to track instances of a realtime segment in progress to ensure only active segments are processed in progress to maintain unique naming conventions
added a conditional check for the touchable state to prevent potential null pointer exceptions when the touchable is disabled
added a test for using precompiled headers in another cell to ensure compatibility with precompiled headers for build targets
throw a retryable hazelcastexception when cache config do not exist ( # 2592 )
refactor module installation checks and introduce a new method in ProcessUtil for node package installation to improve code organization and enhance clarity in module installation process
added ManagedObject annotation and ManagedOperation annotation to MBeanContainer and Destroyable classes to enable monitoring of component lifecycle events for better observability
change the condition from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in LongClickableSpan . java to disable in - app browser functionality temporarily for testing purposes
refactor string comparisons in EspMilightHubDiscoveryService and EspMilightHubHandler to use equals method for better readability to improve code clarity and reduce potential NullPointerExceptions
updated isReifiable check logic and added new classes T6558559a and T6558559b to improve type safety and handle unchecked conversions more effectively
added detection of player and last position to distinguish between player and session .
camel - 17131 : camel - kafka - avoid block until end of kafka consumer .
removed the default method ` examples ( ) ` from the Schema class to simplify the schema example generation process
modified thread interruption logic to ensure proper termination of the agent process to avoid premature termination of the agent process
[ te ] datasource - ignore date column dimension by default ( # 2590 )
corrected a single ampersand operator to a logical AND operator in FacetComponent . java to enhance code readability and maintain consistency in logic
replaced linker references with CxxPlatforms methods in RustBinaryDescription and RustLibraryDescription to streamline dependency retrieval by leveraging CxxPlatforms
added ' name ' property with getter and setter methods in multiple classes to enhance object - oriented design by allowing easy access to the name attribute
added debugging information to CFGPrinterObserver and modified printer handling in IdealGraphPrinterHandler to improve error reporting and ensure proper printer state management
phoenix - 4813 fix small scan threshold ( small scan threshold can not be hit )
add routeid to retry filter ' s tostring ( ) output .
fix : color binding be not update properly in LineReaderImpl . readline ( ) .
replaced the onOverviewShown method with showForHomeIfNeeded and modified its implementation across multiple classes to streamline the code structure and improve readability by consolidating functionality
lucene - 1751 : fix illegalargumentexception on deleteallpointdocs ( # 1751 )
replaced the ` true ` argument with ` updateLastState ` in the ` publish ` method call to ensure the correct state is updated based on the last state
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper syntax for string literals in SQL queries
removed an element from the exp collection in SpliteratorCollisions . java to streamline the collection process by eliminating unnecessary entries
danielwagnerhall : add condition to match all text on case - sensitive element ( # 1503 )
replaced ' do ' with ' while ( true ) ' to improve code clarity to enhances loop structure for better readability and maintainability
# 1613 - enh : add backonlyfetchsize ( ) to manytomanyquery ... for mysql
fixed channel close exception due to closedchannelexception .
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated window radius initialization to use rounded corners support to ensure compatibility with devices that support window rounding
refactor background handling in DesktopTaskView to use a View instead of a ShapeDrawable to improve flexibility in rendering various tasks based on their orientation
added a call to the UpstreamCheckService constructor and modified the IS _ CHECKED property setting to ensure proper initialization of the UpstreamCheckService during tests
changed log level from warn to debug for session immortal messages to improve log granularity for better debugging without overwhelming logs
refactor ZooKeeperHiveLockManager to return locks instead of throwing exceptions to improve error handling by returning locks directly instead of throwing exceptions
[ hotfix ] [ javadoc ] fix typo in code comment
add a condition to check for ` containsCustomData ` before generating the mipmap mipmap to ensure mipmap generation only occurs when ` containsCustomData ` is false
camel - 612 : fix a unit test which fail when use a different encoding
added methods for managing selection of an element in the list to improve event handling and ensure proper selection behavior when not selectable
added a check for an empty value count in LlapArrowBatchRecordReader . java to simplify the validation logic when no values are present
added a constructor to PolicyContext and modified string processing for better handling of file separator to enhance code clarity and maintainability by allowing dynamic file path resolution
replaced Set < Query > with ArrayList < Query > for flatQueries and expandQueries to improve performance and flexibility in handling queries
updated TLSRestrictions . java file to enhance security features and address potential vulnerabilities
replaced direct producer close call with a Runnable to manage closing tasks to ensure tasks are executed on the main thread and handle potential exceptions gracefully
updated the assertNodeStateProvider method to include an additional parameter for ignoring node values to enhance the functionality of the assertNodeStateProvider by allowing more flexible state checks for node states
added a lock mechanism to delete existing files in RocksdbMavenPomCache . java to ensure that unwanted files are deleted to maintain data integrity
hbase - 10510 allow mini zk standalone to bind to different port ( james kinley via ashutosh chauhan )
move restclient . getresponse ( ) to next point ( fixes # 6561 )
replaced direct conversion of segmentTarURIs with a toArray method call to improve code readability and maintainability
update loginStudent method to use test passwords instead of fixed account names to improve test accuracy by using the correct password for the student login
added null check for mCurrentItem ID in EnhancedBrowseFragment and StdBrowseFragment to ensure stability by avoiding potential null pointer exceptions
increase the number of string in testspecialoperations to reduce false failure on slow machine
remove custom hextobytes function and replace with inputstream .
changed method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity by specifying that the method now takes a key for message header
added a check for direct substates in AbstractStateMachine and updated related tests to ensure proper state entry and exit handling based on submachine states
add equality check for multimapsubject and improve test coverage
added joinoperation marker to the postjoinoperation to reduce false alarm log while joining / merging
added a new test method for verifying data issue 258 in the PostgreSQL test class to ensure correctness of schema crawling functionality under various database conditions
no - jira - fix intermittent test failure when delete a durable subscription
[ calcite - 2852 ] document the meaning of the ` ` temporary ' ' property in avaticadatabasemetadata class
updated connection pool properties to use DurationCapable instead of int values for lifeTime , idleTime , and maxWaitTime to enhance configurability and improve connection duration handling
fix an npe in sdputils . createaudiomediaformat when the local configuration be miss .
refactor FacetProcessor to return boolean values for filter evaluation and filtering to improve clarity and efficiency in handling filter changes
make shufflehandler . enabletimeout configurable and add it to the pipeline
update mQuickStepStartingRotation initialization and comparison to use a constant for better readability to improve code clarity and maintainability by using a descriptive constant instead of a magic number
camel - 19824 : xpath component should log more info about language we be use
- remove hard - coded reference to data resource in order to avoid tangle .
test : add integration test for escape backslashes ( # 1751 )
added a check for the presence of the " atlas " property in the map and threw an exception if it ' s missing to ensure that the map does not encounter errors when the atlas property is missing
camel - 13634 : remove camel property placeholder functionality a it be no longer need .
remove extra debug output and fix db close in blockchaintest .
refactor the line processing logic in CoreMarkdownNodeRenderer to use a helper method for better readability and maintainability to improve code clarity and handle multiple lines more effectively
int - 229 fix checkstyle violation in webserviceinboundgatewayparsertests
replaced ` ImmutableList . Builder < Object > ` with ` List < Object > ` and added deprecation warnings to improve flexibility in handling SQL bindings and enhance code clarity
added a check for both Apple and OpenJDK vendor in the VirtualMachine class to ensure compatibility with OpenJDK applications in the application
added a keepAlive call with a value of true in the ReactorClient . java file to ensure that the original URL is preserved and managed with keep - alive settings
updated VertexAttribute instances in MD5Renderer and ObjLoader to use ShaderProgram constants instead of hardcoded strings to improve attribute management and flexibility by using constants instead of string literals
camel - 8125 : optimize to avoid potential npe with propertycomponent multiple time
replace null check with accountCapsule initialization for better clarity to improve readability and ensure account existence is validated correctly
prepare for the 3.8 . 1 release : updated version number and add changelog .
refactor WildcardType handling to use unannotatedType method to ensure proper handling of unannotated types in the type handling logic
updated the order of assertions and refactored the flush manager initialization in StorageGroupProcessorTest . java to improve code clarity and maintain consistent naming conventions
update environment dump to include all jetty ee10 class name .
added a waitbeforestart parameter to FFMpegVideo . java with a value of 2500 to ensure proper handling of video playback timing
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related calls to streamline the code by eliminating unnecessary state management
add accessors . listindex ( ) test , even though it be not dependent .
expose framemap in lirgenerator , and allow compilation of compile method that need it .
updated test classes to use ConditionalIgnore and ConditionalSpringRunner for conditional execution to enhance test flexibility and allow conditional execution of tests
fix boat placement on water in the creative client
updated return statements in Directory . java and added getLockID method in RAMDirectory . java to improve lock representation and provide unique lock identifier for better debugging
removed the method ` allowExperimentalOptions ( ) ` and adjusted the conditional check to streamline the code by eliminating unnecessary method call
added methods for asserting different types of AssertProviders in BDDAssertions . java to enhance the flexibility and readability of path assertions in the assertion framework
refactor HostPort initialization to use hostField instead of variable to improve code clarity and ensure consistent handling of host ports
updated logging statements to provide a warning for missing Kubernetes config files and improved log message formatting to provide clearer guidance on config file selection for Kubernetes integration
added functionality to manage file uploads in UploadListActivity . java to improve user experience by allowing easy handling of different upload statuses
added a new ProviderLoader class to handle provider installation success and failure events to streamline provider loading process and improve error handling during provider installation
replaced ` Span ` references with ` TraceMessageHeaders ` in the ` StreamEnvironmentPostProcessor ` and its tests to ensure consistency in using the new tracing mechanism throughout the code
updated the SQL query in StandardChangeLogHistoryService to use a ColumnConfig for computed values instead of hardcoded values to enhance the flexibility of data retrieval operations for better performance and flexibility
hhh - 9444 - fix name qualifier for postgresql 10 and 11
fix possible divide by zero when partition count be zero .
added checks for scheduler start state before starting the scheduler to ensure proper scheduling behavior and handle potential exceptions when the scheduler is not started
removed unnecessary ` toString ( ) ` method call in ` InlineBox ` and improved conditional logic for ` blockParent ` to enhance code readability and prevent potential null pointer exceptions
updated error messages in checkArgument calls to use consistent formatting to improve code readability and maintainability
fix default split - to - confirm timeout to 500
fix [ workflow ] : use i18n resource for workflow button
updated condition to check for both plot area and own plot absolute in BukkitMain . java to ensure road icons are managed correctly according to the specified plot area
added a test for ` setTouchExplorationEnabled ` and modified the listener handling in ` ShadowAccessibilityManager ` to ensure ` setTouchExplorationEnabled ` behaves correctly and improve listener management for touch exploration states
pdfbox - 5328 : fix issue where subsetting a cmap may miss the first character of the charactercode ( # 5328 )
simplify and avoid use of stringproperty to avoid testelement . getpropertysstring ( )
tika - 3971 -- clean up the code and use npoifsfilesystem . create ( ) instead of create new npoifsfilesystem ( )
added imports for PlotArea and PlotArea , and modified the way plot areas are retrieved in the Move class to enhance code reliability by ensuring valid plot area is used for movement
update regex pattern for version validation in TestWebHCatE2e . java to ensure compatibility with properties format formatting
updated the lower bound check for ` count ` to allow zero to ensure valid range for ` count ` when processing ` pickleEvents `
ensure kafka clientid be unique even when there be only one consumer
added error handling for non - successful execution of the javac compiler to improve robustness by throwing an exception when the compilation fails
ggb - 2118 avoid double - close of draw option when need
camel - 10396 fixed the c error of springbatchproducer
added a method ` isAnimationFinished ` to check if the animation has finished based on the state time and frame duration
updated imports and added a test for custom favicon handling with line breaks to improve test coverage for branding functionality and ensure correct favicon rendering
added null check for otherUrl before comparing it with an empty string to improve robustness by preventing potential NullPointerExceptions
ticket # 4810 : space should be remove when right click on double - click ( space only )
refactor ObjectHashSet to improve performance and readability to enhance efficiency for larger datasets
refactor null checks and equality checks in DataUtilities . java for improved readability and efficiency to simplify code and enhance equality validation logic
fix comparison of itemstack tag for creative inventory , should prevent deletion of enchanted books . ( mc - 12770 )
add test for shadow endpoint with async get / put method . ( # 1588 )
rename header map suffix from target - flat to target - user to improve clarity and consistency in naming conventions
improve error handle of send fails ( smack - 401 ) .
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce ` EMPTY _ LABEL ` to improve clarity of the method ' s purpose and ensure UI resets to a defined empty state
added unit tests for retrieving partitions with single and multiple equal size batches in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct functionality of partition retrieval based on different batch types
added a closing brace to the FileListListAdapter class to ensure proper class structure and functionality
changed the type of the ' sharees ' field from ` ArrayList ` to ` List ` in OCFile and OCFileListAdapter classes to improve data structure usage by using the List interface directly instead of the ArrayList
adjusted the index used for removing a view from the BubbleBarView to ensure the correct child element is removed during layout management
removed unnecessary exclusion of " org . eclipse . jetty . websocket . util . server . internal . " from JettyWebSocketConfiguration . java and module - info . java to simplify code by removing unnecessary internal class references
removed the ' true ' argument from the S3Request constructor to set the ' expiresSeconds ' parameter to false to enable encryption and decryption of S3 requests for enhanced security
added null check and updated animation when the timeline is null to improve stability by avoiding potential null pointer exceptions during component initialization
reject invalid split when first one be empty
added a static string for categorySet and modified return statement to format categorySetString to enhance the clarity of category set information by removing " Category : "
updated assert statements to use the correct close code format in WebSocketClientTest . java to ensure accurate validation of close status codes during WebSocket closure
do n ' t crash the virtual web application loader when load class .
hhh - 7666 - improve performance of persistentattributetransformer by apply the patch
pdfbox - 4896 : avoid classcastexception if page label be miss
added a new test class ` TestPorterStemFilter ` to verify the stemming of a Porter filter to ensure correct functionality of the PorterStemFilter for improved token processing
updated the postBatchMutate method to include a success parameter for handling mutation success to improve clarity and control over the batch operation ' s execution success
updated package names from ` exlore . support ` to ` explore . support ` in several test files to align the code with the correct organizational structure for better maintainability
add some synchronization when iterate over chat window .
removed instances of Sys . touch ( ) from multiple Java files to streamline system interaction by removing unnecessary touch calls
added a new command for " - mardu " and updated untrackedFiles methods in HgCmdLineInterface and HgCmdLineInterface classes to enhance file tracking capabilities and improve command consistency
camel - 8293 : camel - netty : use it own timer instead of create a new one internally to avoid classnotfoundexception
replaced public fields with final fields for direction , position , and color in multiple light classes to enhance immutability and clarify intent in the code
added width and height calculations with minimum values of 1 to ensure proper rendering when dimensions are not set to avoid rendering issues
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a string representation of the delegate for better debugging and logging
improve inner class search capability by look up inner class .
hive - 24391 : increase the size of the buffer in bytescolumnvector ( prasanth jayachandran , review by gopal v )
fix testwritebehindmapstorewithevictionstest flakiness ( # 22879 )
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in MotifScrollPaneUI and XTextAreaPeer classes to enhance method flexibility to support a broader range of components
apps - 2177 make sure polygonfunction . isqual take care of polynomial expression in 180 degree
added null check before retrieving column class in SynthTableUI to ensure safe access to column class when table is not initialized
added error handling for Class . forName invocation in CustomChangeWrapper . java to ensure compatibility with Ant in particular class loading scenarios
replaced ` ConfigPathGetter ` with ` DistBuildConfig ` and added ` getOptionalPathWhitelist ` methods to enhance flexibility in managing dist build configurations
fix # 6334 : double entry export warn dialog show .
added JUnit ` @ Ignore ` annotation to ` BasicDistributedZkTest . java ` to mark the test as ignored until it is resolved
changed the return type of doJoin methods from void to boolean and added validation in JoinTemplate and JoinWorker classes to improve error handling by indicating whether the operation was successful or not
removed the Optional < Boolean > getAutodeps ( ) method from JavaLibraryDescription . java to streamline the interface and avoid unnecessary type declarations
added FLAG _ ACTIVITY _ NEW _ TASK to the intent in LauncherTimelineCursorAdapter . java to ensure the activity launches in a new task as intended
added a method checkPagingOrderBy to SpiQuery class to enhance query pagination capabilities for improved query results
adjusted assertions in RepositoryConventionPluginTests to correct the indices of the repositories to ensure the correct repository URL is tested for the MavenArtifactRepository
added tasks for when a node be affiliate . issue # 505 .
port http : / / svn . apache . org / viewvc ? rev = 67818 . add additional error message for invalid uri .
make the method public to allow access from other class from profilehelper .
added array handling and refactored the update logic in CacheKey . java to improve performance and readability of the code
updated the file type detection logic to utilize a FileSystemProvider for improved compatibility to enhance the accuracy of file type detection across different operating systems
fix fail websocket unit test after session closure refactoring
refactor VirtualSensorCallback handling in ShadowVirtualDeviceManagerTest and ShadowVirtualDeviceManager to improve parameter extraction and enhance interoperability with direct channel callbacks
add a conditional check to prevent the session from being removed from the session if the context is already set to ` contextBeforeExecution ` to ensure that security context is only processed once based on the execution context
improve link validation that only come from ` ` loopback ' ' when they be valid
refactor Zlib . java to replace BUF _ SIZE with DEFAULT _ BUF _ SIZE and manage deflate data more effectively to improve code readability and maintainability by clarifying buffer initialization
added secure validation checks and improved error messages in multiple classes to enhance security and provide clearer error reporting during XML operations
added logic to handle the registration and action of icon listeners based on whether the icon change listener is currently active to ensure that listeners are only added when the icon has not been previously initialized
added Russian language support in the application to enhance localization capabilities for Russian users
change duration to nanotime ( rather than second ) so that it can handle time
disable frame state verification for manually generate graph
added logic to reset system properties and reset them in the Robolectric test runner to ensure consistent test behavior after tests run
added support for SLF4J logger classes in ViewClassLoader and its test to ensure proper loading and functionality of SLF4J logging functionalities
add a null check for " jar " in the ChangePackaging class and implement a test case to verify the removal of default packaging to enhance functionality by allowing the change packaging to only proceed when the default is " jar " to avoid null references
# 2278 use filedownload . download ( ) instead of . download ( ) in test
fix ( demo ) : clear unused command buffer
updated the JogService and Settings classes to replace the defaultUnits functionality with preferredUnits to improve clarity and allow for more flexible unit handling in the application
fix test which fail on a slow ci server
removed unnecessary whitespace in return statement to improve code readability and maintain consistency
improved error messages in FileSystem and LocalFileSystem to clarify URI handling to provide clearer feedback on invalid URIs and ensure correct file path resolution
fix # 4128 : change time of show tracking notification to be periodic
change ftp reconnectattemptserverstoppedit to avoid use sleep and add a wait for the result of service . countconnections ( ) .
replaced ConcurrentHashMap with ConcurrentSkipListMap in KeyedProperties class to improve thread safety and performance in concurrent operations
added ' ignore ' method to multiple logging classes and implemented a static method to check if the logging is ignored to enhance error handling and provide a clearer indication of ignored Throwable during logging
added a null check for runningTaskView before proceeding with operations to prevent potential null pointer exceptions during execution
removed unnecessary type casting of item and contents in BukkitWorld . java to improve code clarity and reduce casting overhead
added image cleaning functionality to the PanelManager class to enhance image quality and performance during image processing
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing MMapDirectory and SimpleFSDirectory to enable efficient unmapping of data storage in Solr using Lucene ' s MMapDirectory mechanism
fix npe in case of no valid base color ( for pdf file processing )
updated the query in the assertion to use " f = field1 _ s maxDocFreq " instead of " f = field1 " to ensure correct formatting for the term comparison in the test case
updated ExtendedOperatingSystemMXBeanImpl to enhance performance monitoring capabilities to improve system management and resource management
added methods to install left commands and updated the layout management for components in SideMenuBar . java to enhance component organization and ensure proper button rendering based on BorderLayout and Container relationships
allow advance window to be disable by setting
add SybaseDatabase support to the DropPrimaryKeyGenerator to enhance compatibility with Sybase database operations
updated the Client class for improved functionality to enhance performance and error handling in the application
[ java ] send leader message after wait for the response of the leader to be ready .
replace ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java ` and implement ` shouldDelayChildPressedState ( ) ` in ` CellLayout . java ` and ` CellLayoutChildren . java ` to improve functionality by ensuring icon updates are correctly handled during child layout transitions
added a return statement to the NearCachedClientMapProxy class to improve method flow control by terminating execution under certain conditions
update package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
added error handling to the server startup by using a shutdown method to ensure that exceptions during server shutdown are properly managed and handled
camel - 16965 - camel - aws2 - s3 : work around bug in camel - aws2 - s3
[ hotfix ] remove duplicate call to taskmanagershandler . tmid
bug 10733 : fixed / added incorrect / missing key in 228 to 229 upgrade
added a new test class ` TestThriftCLIServiceSecurity ` and modified password handling in ` TOpenSessionReq ` to ensure proper logging of password changes and enhance clarity in session creation
added maxEnergyLimit variable and updated its assignment for energy limit handling to improve energy limit management based on dynamic properties of energy limits
added a maxInMemorySize property and corresponding getter / setter methods to HttpClientProperties to enable configuration of memory size limits for WebClient instances
modified caching logic in Cache . java to improve performance and efficiency of data retrieval
added multiple test files for Cucumber with Cucumber annotations and package definitions to establish a structure for testing Cucumber test execution and categorization
updated TypeJsonUtils to handle JSON parsing exceptions when writing double values to ensure accurate value representation and avoid parsing errors during JSON processing
added byte array initialization and appending logic for a specific input string to ensure correct handling of binary data format in the Utf8StringBuilderTest
added a check for whether parameters are set in the ` Params ` class and modified ` RestInvocationHandlerTest ` to verify this behavior to ensure that only valid parameters are processed and improve test coverage for API functionality
camel - 2287 : camel - core - circuit breaker - invalid do not fail on loadbalance with max number of output .
updated the maximum buffered docs setting and corrected the expected value in the assertion to ensure proper configuration and validation of buffered documents during tests
refactor hash handling by utilizing Sha1HashCode instead of String to improve hash efficiency and reduce string encoding overhead
remove enumvalue , enumtype , int / long ( jdk bug ) method from asmruntime
add new tag for new biome structure ( # 8105 )
change to use a fixed thread pool instead of a global one
refactor BaseTableUpsertMetadataManager to protected variables and extract preloading logic into dedicated methods to improve code readability and maintainability by centralizing preloading logic and method visibility
replaced occurrences of " ن " with " أ ي ر " and updated " ح ر " in specific Arabic data files to ensure accurate representation of data for months in Arabic locale settings
replaced image equality checks with hasImageEqualTo method to improve clarity and accuracy in image comparison logic
camel - 18497 : camel - jbang - allow to specify a custom repos when run command .
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding potential errors during score processing
added cleanup method to delete temporary files after tests to ensure a clean state for tests to avoid conflicts
updated focus handling in FilterConditionEditor and FindAction to utilize SwingUtilities for better focus management to improve code maintainability and ensure proper handling of window focus events
[ flink - 23732 ] [ runtime ] make checkpointcleaner a async way to clean up the checkpoint
added a new file ` XPathWhiteSpaceTest . java ` for testing XML schema validation to ensure proper handling of whitespace characters in XML input files
do n ' t persist a trie log layer if it ' s already there ( # 6266 )
updated FilledNewArrayInstruction . java with new array initialization logic to enhance performance and maintainability of array operations
added time out to simplenetworktest to avoid occasional failure
update the method to check if the parentPath ends with a slash instead of substring length to improve readability and correctness in determining the path ' s path
added error handling for skin file loading issues to improve debugging by providing visibility into skin loading failures
added dirty state management for LgoGroupedLevel2Update and modified skip logic to enhance data validation checks for better efficiency
added a new constant ` UNDEFINED ` for the ` Result ` class and updated the instantiation in ` TestStep ` to use it to improve code clarity and provide a consistent representation of the result type
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper error handling when the registration method fails
refactor uploadjobmultipartoperation to use operation class instead of async
[ flink - 2595 ] [ runtime ] fix for case of an exception during recovery from the scheduler
create summary level object with only the node ( this be the case when the associated node be a child )
added a sizeMask variable and modified the ensureAvail method to use it to improve efficiency by introducing sizeMask for better control over the size of the buffer
ignore this test a it be a fragile way to avoid crash on slow machine .
reduce overhead of rehandshake by one thread on the same pool
[ hotfix ] fix checkstyle violation in filemanager
updated TransformFunctionType to include additional delimiters for calculations and method implementations to enhance functionality by providing more flexibility in data manipulation
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement class to improve element handling capabilities in the application
8037550 : update rfc reference in javadoc to rfc 5280
fix : recaf recipe match version 2.17 . 4 + # 619
refactor the loading of selected items in ListActivity and NoteAdapter to use a sparse approach for managing selected items to improve performance and memory efficiency during item retrieval
removed unnecessary ' else if ' statements in DirectUpdateHandler2 . java to streamline the conditional logic for soft commit tracking
make spring config absolute path default to ` ` file : ' ' instead of ` ` file : ' '
modified the PreviewPositionHelper instantiation to accept a Context parameter and adjusted thumbnail scaling based on split - screen mode to enhance flexibility in managing the preview position based on the provided context
[ java ] simplify logic in election by always respond to record log .
drools - 506 - raise meaningful error message if ' exception ' be not find in stdout
modified the skipping logic in ByteArrayInputStream and added a new Skip class for testing to improve accuracy in skipping bytes and ensure comprehensive testing of skipped bytes
refactor the condition for prompt updating in UpdaterTask . java to improve readability to enhance code clarity by consolidating the update check logic
disable download in case we do n ' t have any header on the first page .
add rt . jar to library list ( # 4714 )
remove redundant code and improve readability
updated method signatures to improve error handling and parameter access to enhance maintainability and reduce potential errors in configuration retrieval
added a conditional check for response error handling based on whether the response is committed to ensure that only errors related to committed responses are sent to the server
http : / / issues . apache . org / activemq / browse / amq - 2670 - remove infinite loop on connection queue . jm - 1084
modified fade - out behavior in gesture tutorial controllers based on feature flags to enhance user experience by allowing dynamic adjustment of gesture navigation tinting behavior
fix ( prefsab ) : print prefab name instead of let user know what it ' s about
updated ScimExternalGroupMembershipManager initialization and added external group mappings to enhance clarity and functionality by explicitly defining external group relationships
added a validation check for non - existent accounts in the TransferActuator class to ensure that transactions are only executed with a minimum amount of 1 TRX
update path separator usage in FileResolverTestBase . java to ensure consistent path separator usage across different operating systems
ggb - 2331 make sure undo & redo not interfere with input help
updated GpsMainActivity to use session description instead of an empty string and replaced GpsLoggingService with EventBus in AnnotationViewFragment to enhance description accuracy and improve event handling for GPS logging
try to fix ci test failure on macos ( # 6217 )
* fixed bufferallocator so that it can be use directly on android .
updated flag processing logic to handle cases where flags start with " ! " to ensure correct parsing and handling of flags in the application
add null - checkstyle rule for empty resultset in jdbchistorycache
fix string comparison by use = = instead of = in battle PassManager . java ( # 2564 )
fix possible race condition in queuelrioritytest . testpriority ( ) .
fixed unit test due to wrong injection
added a null check for the main command and modified the argument validation logic to include the HELP option to enhance robustness by handling null commands and improve command - line option handling
[ java ] increase output buffer size for long and property binding .
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
modified ClassWriter . java to introduce a boolean variable ` showBlank ` and updated conditional logic in ` showDisassembled ` to improve code readability and maintainability by simplifying conditional checks
remove assertion checking the length of a string in Person . java to improve code clarity and reduce potential errors
add null check for file extension before verifying if it ' s valid
fix display contact address in contact menu when use contact bottom menu
[ hotfix ] remove redundant slot - related check in slotsharinggroupassignment
modified the loop logic in InstallShortcutReceiver . java to simplify screen count calculations to enhance code readability and maintainability by reducing complexity
refactor PlainSocketImpl to improve handling of socket operations to ensure proper resource management and clarity of the socket ' s file descriptor
add functionality to clear and manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve memory management by managing removed media items effectively
clarify the message when offset be from the element ' s in - view center point
added a new file ` bug4865918 . java ` implementing a GUI test for scrollbar functionality to verify that the scrollbar block increment is correctly responsive and does not exceed the expected value
replaced the usage of ` VelocityEngine ` with a direct import of ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code by directly using the ` Velocity ` object instead of its instance
updated import statements and added message sending for group triggers in QuestCommand . java to improve code readability and enhance user feedback for quest triggers
make the gnucash account file chooser ( a preference dialog )
added @ ToString annotation to partitionchangeevent and tbapplicationevent classes for clarity
[ cloud ] add a configuration uri constant to avoid name conflict
removed setViewportComponent and setJScrollPane methods from the BrowserPanel class to streamline the scrolling functionality for improved user experience
added support for a new key constant ` KEYCODE _ FORWARD _ DEL ` and updated related key handling to improve key input management and enhance modularity
updated the MoreIndexingFilter to conditionally retrieve MIME type parts based on a configuration flag to enhance flexibility in handling MIME types based on configuration settings
added author pattern matching for constructor member declarations and adjusted conditional checks to ensure proper handling of comments for methods within JSDoc
ambari - 22705 . update metastore metric name ( mahadev ) - add create _ total _ tables and delete _ total _ partitions ( mahadev )
updated HiveDatabaseSchema to include DrillHiveMetaStoreClient and SchemaConfig for improved schema handling to enhance error handling when retrieving tables and ensure robust data retrieval from HiveDatabase
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap ` for query parameters to enhance flexibility in handling error responses during OAuth2 login
updated Hijrah calendar name and modified DateTimeFormatter locale specifications to ensure clarity in calendar representation and improve locale consistency in date formatting
updated the supported condition in WebAudioWrapper to exclude Firefox to ensure compatibility with Firefox ' s content type handling
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` and removed the private constructor ` InterceptorConstants ` in ` InterceptorConstants ` to enhance server interceptor handling in gRPC server configuration
added support for default character encoding in the database schema and modified the engine creation command to ensure compatibility with default behavior in database operations
fix regression in batch mode of streamingaggbatch which be cause by the query just do n ' t call allocateoutgoing ( ) .
[ hotfix ] fix typo in executiongraph # deploy
added a ` hasHasFrom ` property and corresponding getter / setter methods in the ` Delete ` class , and modified SQL statement handling in ` DeleteDeParser ` to allow flexible deletion options and improve SQL statement parsing flexibility
refactor synchronization logic to differentiate between multi - status and unauthorized status responses to improve code clarity and ensure proper handling of multi - status synchronization
refactor test applicable checks in RecipeScheduler to use a new utility method to improve code readability and maintainability by centralizing applicable test logic
fixed log analyer ' s handling of time zone information in log message .
make integration test conditional and it can be run locally
fixed - redissonsearch . eval ( ) and search ( ) method do n ' t handle exclusive or minimum parameter correctly . # 1811
added type parameter for the iterator and updated cclicense selection options to improve type safety and enhance license handling functionality
null check : do n ' t fail the creation if the global id be null
replace ` equals ` method with ` areEqual ` for comparison logic in ` OptionalAssert . java ` to improve comparison accuracy and maintain consistency with comparison strategy
updated ` NoNewLineParagraphCssApplier ` and ` ParagraphCssApplier ` to conditionally put the last margin value based on the ` mb ` state to improve memory management by avoiding unnecessary updates to the configuration memory
added a new file TestArrayCopyToFromObject . java that tests the behavior of arraycopy with an expected ArrayStoreException
refactor Python path insertions and handling within BuckPythonProgram . java to improve code readability and ensure proper formatting of Python paths
fix regression in async close handling . patch provide by oliver schmidt .
make foundfiles method return a boolean , deprecate findfiles ( ) and replace it with findfiles ( ) .
added an import statement for JUnit Ignore in TestLlapSignerImpl . java to mark the test as unstable due to known issue HIVE - 22621
updated the request handling in TestInternalInputBuffer to check for null exceptions before asserting the response status to improve error handling and avoid potential null pointer exceptions
splclassloader should check lock before call autoload ( )
added server version comparison and modified audio support checks in CustomPlaybackOverlayFragment and PlaybackController to ensure compatibility with server versions and improve user preference management
updated the handling of localhost in various KDC and OneKDC classes to ensure consistent resolution of local host names when retrieving the local address
updated Jsr250Voter to handle multiple roles more gracefully to ensure correct access privileges based on the specified attribute in the security configuration
improve mp4parser to show custom box ( # 605 )
added a static final string for HS2 _ PROXY _ USER and modified session handling in ConnectionFactory . java to ensure proper authentication information is included in session parameters
camel - 8282 : camel - hdfs - added snappycodec codec and fix codec for bzip2
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper timing between asynchronous operations in the HttpClientTest
fix bug # 45646 - make xssfcell . setcelltype ( string ) and xssfcell . setcellvalue ( string ) consistent across implementation
corrected the glyph offset calculation in GlyphLayout and improved buffer appending functionality to ensure proper rendering of glyphs in the text output
[ beam - 8189 ] fix broken test when istio - cli be use without k3
replaced ` ReportPlaybackStartAsync ` and ` ReportPlaybackProgressAsync ` with ` getPlaybackManager ( ) . reportPlaybackStart ` and ` reportPlaybackProgress ` in ` PlaybackController . java ` and ` Utils . java ` to standardize playback reporting method calls throughout the application
optimize : read all information from stream to avoid oome
skip eviction hitting of initial load operation ( # 15299 )
replaced bitwise operation with bitwise OR operator for length bit handling to ensure correct bit manipulation for error handling
[ ds - 4382 ] implement read policy check and fix for anonymous policy when no policy exist
7019441 : no lookup cache for internal composite font creation lead to java heap growth
change preference height calculation by removing height adjustment to ensure it defaults to zero for better UI consistency
drools - 2910 dmn fix feel error message ( # 291 )
removed unused imports and updated a list initialization syntax across multiple Java files to improve code clarity and maintainability by eliminating unnecessary dependencies
changed method visibility of finishRunningRecentsAnimation from private to public and replaced Runnable post with MAIN _ EXECUTOR post to allow access to finishRunningRecentsAnimation from other classes and improve threading handling
added null checks for node id and type , and improved edge type handling in ImportContainerImpl and ImporterGDF to enhance code robustness and prevent runtime exceptions when node ID is null
[ beam - 10670 ] add warning log for dropped unknown response
nifi - 228 : fix handling of large bin file when exact size exceeds bin limit
slightly improve team hierarchy algorithm to find suitable core .
added a check to skip copying the content length in the RestTemplateCopyHeaderFilter to avoid unnecessary request processing for the Content - length header
updated Java2TypeScriptTranslator to handle character and class literals more accurately to improve type conversion accuracy and ensure accurate transformation of literal values
# 1846 resolve issue with tuner filter result channel off - by - one
hbase - 26238 canary should stop shut down for - allregions option ( jerry he )
added NodeModule import and modified ImmutableMap usage in TestCassandraConnector to streamline configuration by eliminating unnecessary dependencies and simplify test data setup
added a call to reset the cursor position in the order index to ensure the order index is reset before processing new data
added minimum size constraints for the new frame in CallDialog and OneToOneCallPanel to ensure new frame dimensions adheres to specified minimum sizes for proper rendering
fixed potential vanilla loss of state information during world generation ( # 4335 )
add some refactoring to make test more consistent
added dependency injection for KerberosPrincipalHostDAO in KerberosPrincipalDAO to ensure proper removal of Kerberos principal entities to avoid memory leaks
modified the call to AcidUtils . getTableSnapshot to remove the boolean parameter to streamline the call by directly using the result from the getTableSnapshot method
fix the timeout issue . log warning when shut down the poller .
update an error message for android . licenseKey in the build hint to clarify the guidance of using the Monetization setup and RSA public key
updated the virtual folder initialization to use child . getDisplayName ( ) instead of child . getName ( ) and removed unnecessary isInsideTranscodeFolder method implementation to ensure correct display folder representation and simplify the code structure
[ drools - 7 ] distinguish briding - package and package name for executable model ( # 2187 )
skip checkindextest . testdeleteonrollback due to jdk 19
removed the context parameter from the assignTargetsForSplitScreen method and adjusted related logic to simplify target assignment by directly assigning targets for split tasks
correct javadoc / spell issue in leaderlatch . java ( # 4209 )
added methods to initialize zk - SNARK parameters and retrieve them from resources using librustzcash to improve code maintainability and ensure necessary parameters are properly set
transaction : fix a regression cause by change the confidence system .
added a method to create a media recorder and updated variable names for clarity to improve code readability and maintainability by improving naming conventions and ensuring consistency across the classes
added default value for the platformName variable to ensure consistent initialization across different operating systems
fix typo in javadoc to avoid java . lang . illegalstateexception
fix antialiasing issue with mozDash and webkitLineDash in graphics2d .
pdfbox - 4071 : fix typo in javadoc
catch exception on outgoing frame processing in abstractextension . invoke ( ) .
replaced the try - catch block with a privileged action for retrieving the class loader to improve security by utilizing AccessController for enhanced security
added logic to update child categories to null if they do not match the ID to ensure proper categorization of child categories during the feed category update process
tweak contrib dialog title to make the title of the new contrib manager configurable
added a new private field ` vwap ` to the ` Ticker ` class and updated the constructor accordingly to enhance the data model for better price management in the ticker
added functionality to display a " no widgets " view and updated related views in the Search and Recommendations feature to improve user experience by providing feedback when no widgets are available
add rendergraphapi for easy implementation ( # 4446 )
[ type : fix ] apply primary color to nCFirebase service message
refactor ShadowUsbManagerTest for improved readability to enhance maintainability of the test cases
add some logging to help track down failed test
added a call to update the selected configuration to ensure the selected configuration reflects the latest settings
updated bitmap scaling logic to ensure dimensions are at least 1 to prevent rendering issues caused by invalid dimensions
[ ci ] use linkedhashmap instead of hashmap to maintain the order of the option in the symbolizer .
replaced native closure management with closures pooling to improve resource management by utilizing a more robust closure handling mechanism
camel - test : migrate camel - main to junit5 ( # 5429 )
[ issue # 5852 ] add test for websocket client and server ingress ( # 5893 )
added comment to clarify import behavior of the abstractimportmetadatasourceservice
refactored authentication comparison to use a dedicated method for better readability to improve code clarity and maintainability by consolidating repeated logic into a dedicated method
added a conditional check for the " jnr . ffi . compile . x86asm " system property to ensure compatibility with certain JVM settings when executing code
replaced calls to ` callNode . getType ( ) ` with a local variable `NodeType ` for better readability to improve code clarity and reduce repeated method calls
added a new annotation ` @ Insecure ` and modified the constructor visibility in ` MessageBuffer ` to improve code clarity and accessibility within the tests
added various configuration variables to HiveConf . java to enhance the configuration options for Hive integration
fix nullpointerexception when update the resource set
made ` decrefOnClose ` field final and updated the constructor of ` MultiReader ` to accept a ` readerFinishedListeners ` array to ensure immutability of the ` decrefOnClose ` field and improve flexibility in handling reader lifecycle events
8258259 : [ testbug ] java / nio / channels / asynchronoussocketchannel / asynchronoussocketchannel . java need @ run tag for test
alexeibarantsev : address 2.49 issue in inputfieldtest
remove $ gson $ types . getfirsttypeargument ( ) method , since this be no longer need .
changed method return types for keySet ( ) and values ( ) from Set and Collection < Integer > to KeySet and Values ( ) to improve clarity and consistency in key management and value retrieval
added duration parameter and methods to the FlipTransition class for better control over the background color and duration of the fade - in animation
removed logging for unavailable subs areValidForStreaming in DLNAResource . java to simplify the logic and improve traceability of validation checks
bump version to 9.10 . 0 to mark 1.7 .
use java version - specific warning in ` stacklocator ` ( # 1760 )
add new validators for java 16 and java 14
update padding settings for the status view in ExpansionViewHelper . java to improve the visual layout by adjusting padding based on the number of replies
[ iotdb - 2955 ] optimize the process of partition backup / anticluster when cluster version less than 9
add support for load user metadata from seed url - close # 652
oopath actually do n ' t fail the build when there be an oopath binding .
hbase - 27276 addendum align the test implementation with the code review comment ( # 4884 )
use the package name from the proxy config , if available . otherwise , the proxyname be the package name of the validator component
remove compiler warning and add a test for null handling in iterable .
added stream and parallelStream methods to MapIterable and PrimitiveObjectMap classes to enhance collection capabilities for map operations
return copy of notifinfo instead of returning it directly to ensure that the original instance of notifInfo is not modified externally
fix file not find exception when compare command by command ( # 2977 )
refactor AEADBlockCipher class to improve code readability to enhance maintainability and ease of understanding
push down isvariablelocal ( ) from webvariablesmap to ilocalvariableawarevariablesmap .
added a condition to handle null resource IDs in PackageResourceTable . java and changed the default ResourcesMode from best to legacy in RobolectricTestRunner . java to ensure proper resource retrieval and maintain consistency in resource management
6753173 : no need to read all the truetype ' post ' table to get underline info
refactor SignPlugin to accept a List of HttpMessageReaders instead of a static list to improve flexibility and allow for dynamic configuration of message readers
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
nifi - 559 : remove validation requirement that the local repository be deployer before try to use it
fixed javadoc of audionode . getaudiotime ( ) and audionode . setaudiotime ( ) when the device be disconnect .
[ enhancement ] fix ssl context init bug ( # 1866 )
added imports for OracleSqlOperatorTable and refactored method signatures in HiveFunctionRegistry to improve code readability and leverage Java Stream API for better performance
http : / / issues . apache . org / jira / browse / amq - 4568 - fix and test
modify the ` getBuildTargetForAlias ` method to include possiblyFlavored alias processing to enhance the functionality by ensuring proper alias formatting in build targets
camel - olingo2 : fix poll return for empty odata2 feed ( # 8336 )
hive - 23955 : add equivalent schema support to thrift ( zoltan haindrich review by ashutosh chauhan )
bug 9729 : remove redundant expunge code at the end of vm expunge process
added @ Deprecated annotations to multiple methods in AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
updated the method to use aAlternative title for notifications and improved note title handling to enhance code clarity and maintainability by consolidating note title retrieval logic
changed the database column type from " varchar " to " nvarchar / varchar " in GoogleAuthUserConfigTable . java and updated the corresponding assertion in TotpEndpointIntegrationTests . java to improve data handling and ensure compatibility with database schema changes
replaced ` commit ( ) ` method with ` apply ( ) ` method for SharedPreferences in multiple Java files to improve performance by applying changes to shared preferences only
added an IdleListener interface and modified the session initialization in AsyncTimeoutTest . java to enhance session management by implementing an idle listener for tests
[ beam - 10670 ] add test _ id to the failure message when run bigquerytable integration test
added background resource setting and reset method for icons in HotseatPredictionController and BubbleTextView to improve visual appearance and manage background resources effectively
mondrian : fix for mondrian - 1113 . correct typo in property name .
abstracttestnativeworker : move some native query framework test to runtime
make sure we return all feature ( e . g . import ) when there be no feature
added arguments to the commandBuilder in AppleSimulatorController and InstallCommand for flexibility to allow users to specify run arguments when running with - r
refactor code to use a GenericStyledArea for obtaining current line boundaries to improve code readability and maintainability by reducing redundant calls to getArea ( )
- do n ' t try and process the lifecycle manager if no such lifecycle be available .
added background clipping to the QsbWidgetHostView to enhance the visual appearance of the QSB widget background
added performance tracking and logging for flag conversion processes in SQLManager and PlotArea to improve performance monitoring and ensure accurate flag processing time
enable depth test if floatingtextcomponent should be occlude
rename libffi ' s libffi context to libffi _ libffi _ libffi _ context _ linux to follow naming convention .
jdbcaggregationrepository : make propagation _ override configurable , and document it
ensure that validation code for l1 and l2 layer do n ' t set regularization when a layer do n ' t have one
added exception handling for reading and writing operations in AbstractChecker . java to improve error logging and handle potential exceptions more effectively
changed the visibility of the colorStack array from static to instance level and updated its assignment to improve flexibility in managing the colorStack instance within the GlyphLayout class
change connection flag from false to true for statement mapping and hasstatement method calls to ensure that both methods are recognized as mapped , statement existence , and statements are recognized as valid
[ btc - e ] fix trade data retrieval by convert currency to lowercase ( # 2325 )
fix the mqttpublishvalue assertion to account for the new timestamp format
added a versionedHashes field and updated related methods to accept it to improve the handling of versioned hashes in the EnginePayloadParameter
fix triggerprice text field reset when updating offer
[ # 8550 ] instructorfeedbacksubmissioneditsaveaction : improve error message ( # 8553 )
removed debug print statements in I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 10311 . fix a typo in hbase . isstoreenabled ( )
# 2744 - fix : set manyproperty ( ) and getloadedproperty ( ) should consider state _ new rather than state _ saved
added a boolean flag ` _ alwaysSaveUri ` and modified the condition for handling the URI attribute to allow control over the URI saving behavior based on the configuration
added methods nSetLayerType and nSetLayerPaint in ShadowRenderNode class to provide utility functions for setting layer type and paint in rendering contexts
replaced specific imports with wildcard imports and added a method to retrieve the popup menu ' s visibility and visibility to simplify import statements and enhance the popup menu functionality for better user experience
modified the initialization of the HashMap to ensure that a non - null HashMap is always used for storing values to improve code clarity and reduce redundancy in object creation
replaced instances of ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple test wrapper files to unify the use of the new static method for converting Java conversions
added additional logging to help debug issue with miss or invalid http request .
hhh - 14332 log a warning message if defaultenvironment can not be load
close sessiondataset in clientmain ( # 5688 )
updated conditional check in SetOutgoingIf to include multicast support and NIC status to ensure outgoing connections are only established on valid and capable network interfaces
updated the constructor of String to accept a length parameter to optimize memory usage by specifying the length for the SQL command
updated energy and consumption time methods in multiple classes to streamline code by removing redundant calls to setLatestConsumeTimeForEnergy and setLatestConsumeTimeForEnergy
added a method to set the invalid session strategy and improved session strategy validation to ensure that the invalid session strategy is not null and enhance session management functionality
include label on unknown token in protobuf annotation serializer ( # 2451 )
add a new test class MapAssert _ containsKeys _ Test for testing map assertions to ensure that the assertion functions correctly throughout the code
updated JDBCProxyGenerator to use a temporary prepared statement and added JDBC4TemporaryPreparedStatementMethods interface to enhance support for various prepared statements and provide flexibility in managing JDBC4 prepared statements
added an ` ensure ` method to ` ServerWebSocketContainer ` and modified method names for clarity to improve code readability and ensure proper initialization of WebSocket components
changed the import and usage of ImmutableMultimap to ImmutableListMultimap in CxxFlags . java to ensure consistency with the use of the ImmutableListMultimap class
pdfbox - 4767 : use public interface instead of return value to avoid npe if no moveto be need
replaced instances of MethodHook and Field . StableBoolean with a static final empty array and updated hooks initialization to simplify code and improve consistency across hook instances
added a grantAccess flag and modified the authentication retrieval logic in MockAuthenticationManager to enable flexible access control for mock authentication management
updated the afterJob method to accept JobExecution parameter across multiple classes to enhance job processing capabilities by allowing specific job execution context
added a check for ` file . canExecute ( ) ` in the ` SharedLibraryLoader ` class to ensure that only writable files are checked for executability
feat : update protoc to 1.15 . 3 ( # 1188 )
rename variable ` ` res ' ' to ` ` event ' ' for consistency
added new constants for BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , and PROFILE _ NAME in BundleConstants . java and updated CustomUrlManager . java to put these constants in the BundleConstants to enhance the code readability and maintainability by storing additional configuration values
fix compilation error due to interface change
mow - 433 fix classcastexception after move object , so it do n ' t crash on rotation
update the resize listener implementation and texture filter configurations in JoglGraphics and ProjectiveTextureTest to improve rendering responsiveness and enhance texture filtering options
modified the method signature of ` setResourceToDelegate ` to return a ` File ` object instead of void and updated file handling accordingly to improve code clarity and ensure that output files are only created if they are writable
camel - 13554 : property component - intercept from property should support property placeholder . thanks to marco bergsma for the patch .
change the condition from ' > ' to ' > = ' in ActionScheduler and modify the expected value in TestActionScheduler to allow for equal to the last attempt time comparison instead of exact match
updated dbg _ zip assignment to include a fallback path and a null check for debug _ log to ensure proper file handling and avoid potential null pointer exceptions
improve debug for overlay ( # 5588 )
implement pipe . resetgate ( ) to reset the gate state and not mark it a null .
encapsulate TestSupplementary execution in a try - finally block to ensure locale is reset to maintain consistent locale settings and prevent side effects in subsequent tests
change team color value to be more random ( 0.4 , 0.8 ) instead of 0.8 , increase randomness
use arraylist instead of set in sequencematcher . match ( ) , in order to avoid create huge collection
invert the condition to check if the annotation is null or empty in SoftAsserts . java to simplify the logic for determining if the annotation is empty
updated error message formatting and added logging for InvalidTypeIdException and UnrecognizedPropertyException to improve error reporting clarity and enhance error handling during plugin saving
[ gr - 32213 ] add call tree csv link for easy import into graph db .
added null checks and modified how notes are assigned in DetailFragment . java to improve code robustness and prevent potential null pointer exceptions
added peakTasks variable and adjusted related logic in AssetManager . java to improve tracking of loaded tasks and ensure accurate loading calculations
eranmes : make the driver actually support native event on window . this should make it possible to run firefox on window .
added methods to parse and store custom score and fetch interval in the Injector class to enhance the functionality of the Injector by allowing metadata to be injected based on the provided metadata
updated import statements to use org . apache . commons . collections4 instead of org . apache . commons . collections to ensure compatibility with the newer version of the Apache Commons Collections library
solr - 3496 : added schema sharing option to corecontainer , a this be to be able to easily share the schema .
updated sizeInBytes method calls to accept a boolean parameter and adjusted related size formatting to ensure accurate size representation by distinguishing between regular and new segment sizes
replaced multiple assertions for JSON parsing and asserting with a single assertion in the VersioningTest class to improve code readability and ensure the test verifies handling of null values
updated SQL queries to include a type filter and modified the domain creation logic to ensure correct handling of non - null values in domain records
[ java ] move handling of newleadershipterm event up , so that it can be handle by client .
removed the import of MediaType and modified the buildMediaType method to return a JSON content type to streamline the code and eliminate unnecessary content type handling for HTTP requests
replaced ` fillUsingLengthPrefix ` methods with ` fillSlice ` and ` fillAndGetIndex ` methods across multiple files to improve clarity and consistency in method naming
fix ( system ) : fix not only compact base directory when use visibilitytxnid
updated the initialization of immutableschema and qualifierEncodingScheme to handle null cases to ensure immutability and prevent potential null pointer exceptions
added three new Java files , PojoProducersCustomized . java and RestProducers , to establish a framework for customizing and extending producers in the application
update cache access string to use CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability and clarity by using a more descriptive constant name
[ aescm ] register sivprotoserialization before re - registration to ensure proper serialization be create for aes / gcm
add ` ` slabwood ' ' recipe for wooden slab in ore dictionary . close # 3525
refactor multiple session management and session handling classes to improve code organization and maintainability by standardizing naming conventions
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from the ` UndefinedSymbolsLinkerScript ` class to simplify the code structure by removing unnecessary dependencies on ` SourcePathResolver `
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14553 fix oracle test failure on oracle
corrected sprite positioning in the draw method to correctly position the texture based on its width and height
updated the player function ' s Y - coordinate handling and modified the region naming conventions in the WorldGuardListener class to ensure proper coordinateing and improve readability of plot region representation
added a deprecated static final Version constant for Lucene 8.5 . 0 to signal that this version is outdated and may be removed in future releases
modified string concatenation in the logging statement for clarity to enhance readability of the debug output in the closeSocket method
add a test case for SQL parsing and deparsing of CAST statements with a signed integer to ensure that SQL queries with CAST can be correctly handled as signed integers
change the dependency type of conlludoutputter to be a semanticgraphcoreannotations . dependenciestype enum
removed redundant ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods in ` NoSuchBuildTargetException ` and streamlined the usage of ` ParseContext ` in ` ParseContext ` to improve code clarity and reduce redundancy in handling missing build targets
modified the test method used in MyChild initialization from ` testFromMain ( ) ` to ` test ( ) ` to streamline the test execution for better clarity and maintainability
reduced the size of the configBlocks array from Block . blocksList to a 256 - bit array to optimize memory usage and improve performance for block configuration
tweak title check to support git - spigot
updated SQL statement generation for PostgreSQL databases to handle escaped SQL operators to ensure compatibility with PostgreSQL ' s updated SQL syntax requirements
add miss factory method for mutablebag ( # 792 )
pdfbox - 3017 : fix error message in case of mismatched adoc file
nhc : fix high cpu usage on mqtt
update ChangeSet retrieval logic to check for a valid DatabaseChangeLog instance to improve robustness by ensuring a valid ChangeSet is retrieved from the change log
remove redundant new instance of ` MethodResult ( ) ` in ` StaticMethodInterceptor ` and use a local variable for response body to improve code readability and reduce redundancy in logging
added database drop functionality to TestHiveMetaStorePartitionSpecs and logging in TestObjectStore to improve database management and enhance visibility of database operations during testing
added a new parameter for order _ currency in the BithumbAuthenticated class and updated the BithumbAccountServiceRaw class to include this parameter to enhance functionality by allowing the API to specify currency parameters for BTC requests
remove SSEfluxwebconfig . java since it be not part of the sandbox configuration
updated JsonBuildHelper to use getReturns ( ) for checking void return types and simplified JSON formatting in IDocBuildTemplate to enhance code clarity and ensure consistent JSON response formatting
[ te ] add a new endpoint for list yamls ( # 5452 )
removed the public access modifier from the equals and hashCode methods in the Marker class to enhance encapsulation by restricting access to these methods
8238542 : increase timeout for awaittermination to 20 second
add tests for adding lists with simple and mapping converters in MongoTemplateTests . java and create a new class PersonWithAList . java for document retrieval to ensure proper functionality of adding lists and enhance test coverage for various data structures
mow - 473 fix applet size when ev2d view get out of bound
updated toolbar visibility handling in DrawerActivity to use a delayed execution to improve UI responsiveness by ensuring the toolbar is visible after a delay
[ iotdb - 2461 ] fix overlap data issue ( # 4906 )
fix # 9391 : password be not save when vm be run ( # 9392 )
added new boolean variables ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` to manage output stream handling and character encoding settings effectively
added a conditional check for assignment side effects in the GroupDialog to ensure compliance with UI conditions before proceeding with rendering results
refactor JSON and JSONObjectConvertor classes for improved consistency to enhance code maintainability and readability
fix checkstyle issue with fileuploadapicontroller . java ( # 783 )
modified the fetchPublicKey method to include a base64 string representation of the public key to improve output formatting and reduce dependencies on encoding for JSON serialization
8132488 : [ testbug ] update java / nio / file / basic . java check content type for window
feat : of - 2559 - add compression for inbound and outbound traffic for incoming c2s and s2s connection
added a new method ` doesClassLoaderDescendFrom ` in Util . java and removed its previous logic in ` MethodHandles . java ` to improve class loading checks and maintain consistency across the codebase
changed method visibility from package - private to public for connection handling in ChannelProvider and ProxyChannelProvider classes to improve clarity and separation of concerns in connection handling
drill - 3876 : fix a bug in csv header when final column be empty .
added compass gravity and compass margins in NearbyMapFragment . java to improve UI appearance by ensuring proper margins are applied
add testcase for geot - 4314 add testcase for geotools - 5414
added exception handling to methods in LeafFilterFactory and ParquetFilterPredicateConverter to improve error management and ensure proper exception propagation
added a check for the language of the current audio track when handling video streams to ensure correct language assignment for video tracks based on specified language values
add warn on microservice version conflict ( # 2594 )
refactor code to consolidate array copy operations into a single addAll method across multiple array classes to improve code readability and reduce redundancy in array size management
in progress - issue batch - 340 : create a jdbc connection even if there be an error
added constructors to InMemoryClientRegistrationRepository and updated InMemoryReactiveClientRegistrationRepository to accept registrations as a Map to improve flexibility and ensure proper handling of null or empty registrations
added a method to reset the UI state in SchemaUpgradeHelper to ensure the UI state is correctly reset during the upgrade process
added failedStep handling and updated related logic in JUnitReporter and JUnitReporterTest to improve error reporting accuracy and ensure correct behavior for pending and non - strict exceptions
allow dot in custom player command ( # 4224 )
implement Closeable interface in Selector class to enable proper resource management and allow for closing the Selector class
updated MaxConcurrentStreamsTest . java to include a MultiplexConnectionPool for testing to improve connection management and ensure proper parallelism configuration
added stringType ( ) method calls to CoreOptions . java to enhance clarity and maintainability of CoreOptions handling
updated the escaping logic in HqlQueryRenderer to handle character and parameter contexts more effectively to ensure correct handling of special characters and parameters in the ESCAPE clause
updated HTTP status checks and method names for clarity and consistency to improve code readability and maintainability by using enum constants instead of magic numbers
pdfbox - 4892 : simplify / style check , a suggest by valerybokov
fix # 210 by make sure the test be run faster
refactor ParquetFormatPlugin and ParquetGroupScan to improve handling of metadata file selection and caching to enhance efficiency and maintainability of the metadata processing logic
updated the success variable initialization and improved error handling in Jsr199Javac . java to enhance compilation logic and ensure proper error reporting during compilation
added TableModelListener interface and implemented table change handling in DefaultSortedTableModel to enable responsive table change notifications when the table changes
[ java ] allow server identification to be less than 65535 ( # 10624 )
added support for constructing and notifying root URIs based on the Android SDK version to ensure compatibility with devices running KitKat and later versions
removed the line that started logging in MainApp . java to streamline logging process by eliminating unnecessary log steps
modified error handling in FilterChainProxy to properly analyze and handle wrapped RequestRejectedExceptions to enhance robustness in exception handling to ensure the correct response to blocked requests
update the length handling in StringBuilder to use ' this . length ' directly instead of modifying it directly to improve code clarity and ensure consistent updates to StringBuilder ' s length logic
added validation for empty filterList and a corresponding test case to ensure that an IllegalArgumentException is thrown when no filterList is provided to prevent runtime exceptions
added class tbstopwatch to allow implementation of new stop method
pdfbox - 2852 : set initialized = true only after set an initialized flag on the liststore
deprecate servlet in favor of servlet 3.0 asynccontext
[ zeppelin - 2287 ] fix the context classloader leak in remoteinterpreterserver
fix incorrect type in instanceof check for commandsourcestack
updated minimum SDK versions in ShadowRttCallTest and ShadowCall to ensure compatibility with newer Android API levels
updated parameter names and variable names in DeadlineTimerWheel . java for clarity to improve code readability and maintainability by using more descriptive parameter names
# 1618 - enh : add simple name to beandescriptor ( for ebean query )
updated JavaScript and CSS header to use static paths instead of hardcoded paths and added a new WroSassProvider class to enhance resource processing capabilities and flexibility in the application
[ iotdb - 4258 ] fix nullpointerexception when show late timeseries ( # 4258 )
updated the initialization parameters and method names from " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency and accuracy in naming conventions for better code readability
6894461 : ocsp checker should not wrap all exception a ` ` unable to send ocsp request . ` ` ( introduce by # 6885667 )
benchmarker : add the writeoutputsolutionenabled config option to the benchmarker ( # 2625 )
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` that tests the SortedTableMap ' s slice size functionality to verify the functionality of the SortedTableMap sink with a specified node size
added shapeless recipe for the pipe waterproof in BuildCraftTransport . java to enhance the player ' s experience with a slime effect
hive - 22877 : vector . iterator ( ) should check exact match ( panagiotis garefalakis , review by ashutosh chauhan )
added owner plot management logic using Shulker entity handling in BukkitMain and EntitySpawnListener to ensure proper management of entities and their metadata within the spawning process
added a method ` getDebugLogger ( ) ` to ` SolrWriter ` and imported ` DebugLogger ` to provide access to the logger for debugging purposes
hhh - 14776 add maximumfilenamelength system property and override iohelper methods
added a check for the presence of a tag in the UpToTagChangeSetFilter to improve error handling and provide feedback when the tag does not match
[ beam - 6565 ] use standard arraylist instead of guava list .
refactor BrokerRoutingManager to improve code readability to enhance maintainability and simplify future updates
changed volumePaint and upPaint color values from gray and green to GRAY and green to improve color consistency for better readability and usability
be be25822f : add insettableframelayout layout params to easily ignore inset
added duration parameter to BuildTargetDurationListener and updated related test cases to enhance functionality by providing additional duration information for build targets
replaced the use of ` @ Profile ` annotation with static import for better readability and control over profile checks in multiple test classes to improve code clarity and ensure tests are only executed if the expected profile is active
added a null check for the user object before processing claims to avoid potential NullPointerExceptions when the user is null
camel - 3492 : added replacewhen to camel test support . thanks to benjamin graf for the patch .
replace concurrenthashmapset with nonblockinghashset because of high - scale cpu
added search by networkid for listpublicipaddresses command
added functionality to check if battery optimization are ignored in ShadowPowerManager and its test to improve power management functionality by allowing retrieval of battery optimization settings
updated the version retrieval method to ensure compatibility with the default Jetty version configuration
added tests to verify number of invocations in order with verification modes to ensure correct handling of invocation order and error reporting
[ tregex ] always print ` ` no match instance ' ' if not match
added " - foreground " parameter to the process ' s startProfile method to enable foreground process settings for better application stability
replaced the executor service naming with constants for improved clarity and consistency to enhance code readability and maintainability by using standard naming conventions
changed parseFieldnames from a Map to a String array and simplified its iteration method to improve performance and simplify the handling of parsed field names
updated logging statement to include the file name in CodeEditorView and added null check for the parent view in EditorTextActionWindow to improve logging accuracy and ensure proper view cleanup when the editor is shown
modified warning messages in ClassFileReader and JdepsTask to include the exception message and the name to improve clarity of skipped entries and provide more context for warnings
nutch - 298 fetcher : use lucene storage for every fetch task - level
modified the populateBubble method to accept an additional parameter for handling existing bubbles to improve bubble management by ensuring existing bubbles are not duplicated and properly retained
resolved - issue batch - 1240 : jobexecutor should throw exception if trigger not set on scheduledexecutor .
updated method signatures and logic to simplify the handling of RPC extensions and tars clients to improve code readability and maintainability by eliminating unnecessary loops
[ java ] : make sure we generate a delay for multicast .
updated the Gson initialization and added properties for client details in ClientInformationResponseView . java to enhance the handling of client information and their associated properties for better JSON processing
added a conditional check to set the average price only if the order ' s field amount is greater than zero to ensure accurate calculation of average price in order data
polish ` ` remove redundant rawexecutionreports ( ) ' ' method
added a ` fail ` method to handle exceptions and updated the failure logic in ` LdapTimeoutTest . java ` to improve error handling by providing a more informative exception message and adjusting the timeout threshold
modify for ticket : 279 - if the userdict and the locale do n ' t exist , just warn the user .
update password handling logic in AmbariServerConfigurationHandler to properly fetch and store the alias / file name to ensure that the password type configuration is only applied when necessary , improving security and functionality
added a check for duplicate segment parsing in ParseSegment . java and defined the isParsed method in SegmentChecker . java to enhance code efficiency by avoiding duplicate parsing of segments
[ flink - 12342 ] [ yarn ] make application - attempt - failures - validity - interval configurable
avoid unload the h2 driver when there be no driver
hbase - 20856 introduce default readtype for scan for snapshot - based input format ( liang xie )
add fixed height and width option to login screen ( support for set login width / height )
added cornerRadius parameter and adjusted related method signatures in multiple classes to allow for dynamic corner radius adjustments during animations
updated COMMANDS _ TO _ REMOVE to include additional SQL formats and added a warning filter for cross product queries to enhance functionality and ensure compatibility with RIBE and improve warning handling
hive - 4370 add retry to txnhandler if connection pool can not be recover ( sergey shelukhin , review by gopal v )
updated method names and signatures for transaction handling in multiple classes to improve clarity and functionality of backup reserve operations
add a new field ' strings ' of type char [ ] in firstofstringsmatcher to facilitate storing multiple string instances for the same character
phoenix - 4957 fix delete statement with client statement ( addendum )
add more test and add more detail to baseexception , handle insufficient data write
added support for rapid installation types in the AdbHelper and RealAndroidDevice classes to enhance functionality by allowing dynamic tracking of APK installation types
fix random seed to work on window
refactor MultimapSubject to improve clarity and maintainability of string representation handling to enhance code readability and ensure proper handling of null values
update return statement to reflect correct vertical positioning to ensure proper layout behavior for devices with Natural orientation
handle when some mediaitems require transcoding but others require transcoding
added localization functionality for array elements in Picker . java to ensure the displayed text is consistent with the user interface
camel - 8253 fixed the cxfrsconsumer fail to start if the customer do n ' t exist
hhh - 6716 - postgresql dialect should return lockacquisitionexceptions when call to convert sqlstate to lockacquisitionexception
added null check for queryId and modified visibility annotations in HiveStatement to enhance robustness by ensuring queryId is correctly validated and modified visibility annotations for better visibility management
[ beam - 11028 ] exclude usesunboundedpcollections from spark runner test to avoid false test failure .
modified the HTML output for the file name by removing unnecessary em characters and styles to standardize the output format for better readability and consistency
[ java ] remove unused leadershiptermid from log join operation .
updated HttpSender to use a class - level exchange variable to improve encapsulation and maintainability of the code
[ flink - 23552 ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the method ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` and updated its implementation in ` AppOpticsPropertiesConfigAdapter ` to improves clarity and maintain consistency with naming conventions
added null check for the tree object before processing markers and modified marker retrieval logic to improve code robustness and avoid potential NullPointerExceptions
patch from daniel zucchetto - 753 - improve font size error message for xwpf
remove superfluous method call to maybewrap .
introduced exclusions list and updated logic for handling dependencies in RawMavenResolver . java to improve dependency management by ensuring only relevant dependencies are processed
added validation and currency handling for DSX exchange information in DSXAdapters . java and modified DSXPairInfo constructor to include baseCurrency and quotedCurrency in DSXPairInfo to improve error handling and provide additional currency information details for better currency management
[ flink - 3067 ] [ table - api ] fix some javadoc warning introduce by namespaces
[ drools - 90 ] fix build when project contain an old kbase
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` to ensure proper handling of the object when ` sobj ` does not contain the key ` k `
camel - 8195 : add javadoc to model class so we have eip documentation out of the box
make hostfielddesc . getfieldgetter and hostfielddesc . getter more efficient by avoiding call to static getter and setter .
add a method parameter for the CompletableFuture annotation in DefaultNullnessAnnotations . java to support the completion stage functionality in the database
updated the calculation of mFreezeCheckPoint in PlaybackController . java to adjust the frozen checkpoint effect based on the mp ' s duration
removed unused import statements and updated internal state setting in AbstractCommonPowerMockRunner and PowerMockRunner to streamline code and enhance internal state management for better maintainability
updated the parameter used in TCUtility . unmarshalIn from typeCode to realType ( ) to ensure the correct type is referenced for the input stream
update indentation logic in TabsAndIndentsVisitor to handle method invocations correctly to ensure correct indentation behavior for varying method calls in the code
updated the TestSingleTokenTokenFilter class to extend TestCase instead of LuceneTestCase to improve compatibility with JUnit testing framework
fix for bug 62175 : process report column width be not show in the html report
updated execution context management in JdbcStepExecutionDao and MapStepExecutionDao classes to improve integration with LobHandler for better job execution management
added a conditional check before adding a mon item based on the configuration to ensure that the child folder is only added when the new media folder is hidden
added null checks and logic for handling actor in SplitPane to ensure robust handling of null actor arguments to prevent runtime exceptions
add support for remove unused imports for parameterized that can be garbage collected by remove unused imports
fix an npe in the uniquemodlistbuilder when run without mod . json ( # 4690 )
changed the logger declaration from ' this . getClass ( ) ' to ' static final ' for TicketGrantingTicketImpl to improve thread safety and ensure consistent logging practices
updated the SQL string to include a new version " 81 + 12 " in the timeseries creation command to include a specific data type for accurate timeseries creation
added a method to check if a value is found in AttrData and modified Converter to handle it to improve value retrieval logic and provide customizable values for Converter instances
modified the condition for handling character inputs in a specific locale within CPlatformResponder . java and added utility methods in LWCToolkit . java to enhance support for US International PC keyboard layout inputs and improve locale handling
[ java ] set aeron _ publication _ connection _ timeout environment variable in test to prevent spurious test failure .
added validation to check for specific request URIs in GTVGFilter . java to prevent processing of CSS , images , and favicon requests
add assertion to verify that we be able to install wellbeing test apk
# 2716 - refactor oracle test - no effective change - delete useless oracleanddlrowle
chore : fix checkstyle issue in net / protocol / vertx / src / main / java / org / apache / incubator / vertx / protocol / tests . java ( # 799 )
updated JavaLib paths in DiffRuleKeysScriptIntegrationTest . java for consistency to ensure accurate references to the JavaLib1 . java files
added a check for whether to dismiss the haptic running during touch events to improve user experience by ensuring the haptic gestures do not interfere with touch events
bump common to fix explosion with no block .
removed unused import and implemented getItemId method in SymbolInputAdapter . java to enhance code clarity and ensure stable ID retrieval
updated the method to use ` QueryParam ` instead of ` Path ` for ` limit _ bids ` and ` limit _ asks ` to standardize query parameters for better compatibility and flexibility
add logic to replace single quotes in the result string to ensure proper handling of escaped quotes in string processing
[ java ] add tostring ( ) method to kubernetesleaderelectiondriver and zookeeperleaderelectiondriver .
refactor SqlSessionFactoryBean for improved session management to enhance maintainability and readability of the code
fix 3.0 . x , 3.0 . x : remove generic check ( # 8006 )
replaced error handling in PolygonRegionLoader to throw a RuntimeException instead of throwing the exception directly to improve error reporting by providing a more specific exception context
added a method to check if a deadline is started and updated timer registration logic to ensure proper management of deadlines and improve timer registration handling
added handling for ClosedChannelException in NettyRequestExecutor to improve error messaging for closed channel operations
add null check for genres before setting textView to avoid potential null pointer exceptions when genres is null
[ flink - 25958 ] [ checkpointing ] restorestate should n ' t call reset in region recovery .
fix nullpointerexception when use prefab with collectionofmappedcontainers
[ iotdb - 6296 ] fix walnode destroy ( ) logic when there be no previous memtable
fix # 8275 - http client retry same host on callback failure .
fix some wording and grammar issue in the tutorial sample file
add a new test class SQLServerEscapeQuestionCharacterTest for testing SQL Server escape functionality to ensure proper handling of special characters in SQL queries and responses
updated constructors of CamelModule and JoobyBeanRepository to enforce non - null parameters and to improve code robustness by ensuring required arguments are not null
fixed potential deadlock issue with simulator
changed import statements to reference ParameterFlags from the provider package to ensure ParameterFlags is accessible under the provider context for better code organization
fix classcastexception on object take into account .
simplified the InputRC class methods by removing the appName parameter to streamline the configuration process by eliminating unnecessary parameters
[ gr - 26711 ] fixed error handling of ignore and broken dependency .
[ java ] switch headless mode of chrome to make chrome less likely to not be headless .
[ flink - 15606 ] versionedvalue . value should be intern to ensure it be stable across vm execution
added support for " MOVE " status in the connection status checks to handle additional data types related to the connection
updated date format parameters for US _ MONTH _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME to ensure consistency in date formatting across the application
updated import statements for Lists from Shaded to a direct package to simplify dependencies and improve code clarity
[ flink - 22697 ] [ runtime ] fix the npe problem cause by double release buffer
added additional permission checks for untrusted visit functionality in the Visit class to ensure proper handling of untrusted visit requests for the plot admin user
disables jabber telephony until it ' s actually ready
updated BasicURLNormalizer to handle curly curly characters correctly to ensure proper normalization of URLs with curly brace characters
change visibility of methods related to remote animations and transitions from protected to private to enhance encapsulation and restrict access to these methods for better code maintenance
pdfbox - 4892 : fix lock rate difference between 0 and 1 / 2
added a method to retrieve the project path and modified the return type of generateProjects to improve project management by returning the generated project paths instead of void
modify the handling of zero digits in HostLocaleProviderAdapterImpl . java to ensure that the zero digits are set correctly and improve type checking for calID to avoid potential errors
added a new file MSwingUtilities . java that implements a Swing utility for displaying error messages to facilitate error handling and maintainability of the code
camel - 6377 : fix mailproducer to use defaultasync producer instead of defaultproducer .
added @ RefreshScope annotations to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure proper refresh state management during configuration updates
added unit test base on user forum issue
added Main and ScriptRenderer classes for the scripting engine functionality to facilitate the execution and rendering of JavaScript templates within the SchemaCrawler application
added a new test method and modified the condition to check if the input state is __ NONE in the Request class to ensure proper handling of form submissions after reading in the request
added touch focus handling and improved boundary checks in several classes to ensure proper touch focus behavior and prevent potential errors when child actors are accessed
updated DeploymentManager to use runCloseHooks for handling failure callbacks to improve shutdown hook reporting and ensure proper failure reporting during context shutdown
make shift - clicking filter out of the inventory in the lexicon .
try to fix the test failure on slow ci server
fix stringindexoutofboundsexception when the short name be the short name
remove the relaxed url handler and add a fallback for url . getresource ( )
added a new file ` FieldUtils . java ` with utility methods for reflection - based field access methods to enhance code modularity and encapsulation for field access operations
removed unnecessary assertion check in DeferredAttr . java and added a new class DoubleStaticImport . java to simplify the validation logic and introduce a test method to validate lock behavior
updated layout inflation from ` custom _ content ` to ` workspace _ screen ` and added padding adjustments for widgets to ensure correct layout is inflated and improve widget layout consistency
added method to update account settings with save last account and handle error cases to improve error handling during account loading and ensure proper state management on invalid tokens
added a new method ` setvar ` to set multiple variables in the command line to improve usability by providing a convenient way to manage variable assignments in command - line arguments
make catentity animal tildevent ( # 7030 )
fix handling of unsigned range in windowframe ( # 3552 )
pdfbox - 3017 : get the most recent font name from / contents , a suggest by michael klink
added functionality to set the application mode to ensure the application uses the current application mode for better user experience
allow passing dockerfile build args to imagefromdockerfile ( # 2165 )
add null check to threadinfos . getthreadinfo ( ) to avoid array allocation
fix incorrect mod - circle angle calculation ( issue # 650 ) .
[ flink - 21104 ] [ network ] improve debug information for unaligned checkpoint
added new schema constants to the Schema . java file to enhance schema management capabilities for better database interactions
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors to allow specification of minimum similarity in fuzzy queries and improve query validity checks
rename the method from addActionsView ( ) to setActionsView ( ) to improve clarity by indicating that the method sets the action view
[ log4j2 - 449 ] layoutwrappers now honor an outputstreamappender , default to true
updated AutoConfigureAfter annotations to include additional auto - configuration dependencies to ensure compatibility with additional auto - configuration options in the application
modified the JLayer class to handle null values before removing a component to ensure proper removal behavior when the component is null
updated import statements to use the non - shaded version of Google common libraries to resolve dependency issues caused by shaded imports
refactor : movewind block handling in blockmapping to a more efficient approach to improve performance
added getter and setter for legacyRenderer and modified icon mask handling to improve flexibility in rendering options and ensure consistent legacy renderer behavior
abstractjweencrypter / decrypter : replace inttofourbytes ( int ) method with ints . tobytearray ( int ) .
added a null check for mObserver before accessing its methods to avoid potential NullPointerExceptions when mObserver is null
updated the ` thenComparing ` method signature and added a new ` Department ` class with corresponding unit tests to enhance the comparison functionality and ensure correctness of test cases
modified the implementation of DocIdSet . java to improve code readability and maintainability
allow user rule anomaly to specify end time for point - in - time ( # 1588 )
catch numberformatexception so that it be consistent in the test .
added a class loader to the MockFactory configuration in MockFactoryTest . java to ensure proper class loading for mock objects during testing
add a new class ` OriginalFormat ` for formatting strings in ` ConverterWithEnumFormat ` to provide a standardized format for handling enums in the application
replaced hardcoded date format strings with a static final pattern constant to improve maintainability and reduce code duplication
7998235 : jawtrenderer : add a timeout for window to jawtrenderer . paint ( )
camel - 15836 - camel - aws2 - lambda : enable autowire on the sn client , regen catalog
validate vm address before replace it in the network ( # 5287 )
removed condition checking for " Authorization " header in ProxyServlet . java to simplify authorization logic when handling headers
change method from submit to execute in TraceableExecutorService class to improve task execution handling in context - aware scenarios
added ` getDetails ( ) ` method and related getter / setter methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` AuthenticationProcessingFilter ` classes to provide retrieval of additional details for authentication requests
updated the random use logic in SolrTestCaseJ4 . java to set it to 0 instead of generating a new boolean value to improve variability in test cases by using a random number generator
apps - 1990 rename string . appendDot ( ) to string . endtoken ( ) to be consistent with endtoken ( )
updated ` formatForConsole ` method to include ` Locale . US ` as a parameter for standard locale handling to ensure consistent formatting of time outputs across different locales
groovy parser - well handle the case where the lastname and lastcolumn number be very small than the first argument .
added bounds checking for top and right inset pixels in Border . java to ensure they are within valid bounds to prevent rendering issues
refactor GestureState initialization to use DEFAULT _ STATE instead of a new instance to improve code readability and maintainability by centralizing state management
replaced DateTime with DateTimeFormatter for version formatting to improve compatibility with Java Date - Time API
feat ( openblas ) : improve code format
use close ( ) method instead of ioutils to avoid exception .
added synchronized modifier to the initTxnMgr method in SessionState . java to ensure thread safety when initializing the transaction manager
increase recovery wait time from 120 to 480 and increase socket timeout from 15000 to 400000 to improve stability and allow for longer recovery times
added a new class ` SearchResults ` to handle search results to provide functionality for managing and retrieving search results in a Lucene framework
if there be a cpu in the threadcpu , do not create a new refresher to avoid npes .
initialize body if null to avoid race condition in bytecodes .
lucene - 9777 : fix out of date version on release 8.10 . 0 ( # 2377 )
updated the feature flag for the two - line label in all apps from DISABLED to TEAMFOOD to enable the two - line label within all apps instead of being disabled
add TenantPool API endpoint to InstanceResource for retrieving current instance pools to improve API usability and error handling for tenant pools
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods for clarity and maintainability to improve readability and functionality of the code
fix # 1186 : fix inlinebytecodegenerator to allow to mock object on object .
added logging statements for compilation and processing processes in CxxCompileStep and CxxPreprocessStep to improve debuggability and traceability of command processing operations
improve stringutil # removecharacters to remove char ( # 9373 )
fix issue of metadata service export port ( # 9372 )
[ drools - 7 ] add a datatransformer interface for transform ( ) expression to the compile ( ) api
changed the type of the values collection and casting from Object [ ] to Number [ ] to ensure proper handling of different types of arrays in the distribution graph
code cleanup : remove useless condition in formatstringchecker
removed redundant initialization of SolrCore to improve code clarity and maintainability
refactor ITestDbTxnManager for improved clarity and organization to enhance maintainability and readability of test cases
refactor database connection handling to use try - with - resources syntax to ensure proper resource management and automatic closure of the database connection
added a test method for testing MapModel instances in both CodeFirstPojoClient and CodeFirstPojo classes to ensure that the model and userMap functions correctly within the code
pdfbox - 2576 : simplify / fix a bug report by valerybokov
[ fix ] [ multitask ] fixed initial selection of scale offset .
return null on sash because the step height attribute can be null
pdfbox - 3353 : do n ' t throw exception if no appearance stream available , log warn
change the type of ' keys ' from SortedSet to LinkedHashSet to maintain the order of keys in the generated SQL command
updated the time threshold in CancelEventTimer and modified method overrides in PageListInterface and PagePreviewCard classes to improve touch responsiveness and enhance code clarity by removing unnecessary complexity
fix ( demo ) : update presets for libdc1394
added a conditional check for agent support and created two new test classes for mocking static methods with private constructors to ensure the agent support is correctly configured and verify functionality of mock static methods in the test suite
pdfbox - 3998 : use the same object for decryption and add object to dictionary if they be different from cosstring and cosdictionary
initialize the default window title and add a method to set the window title to improve flexibility in setting the window title for different AWT classes
updated depth calculation based on pixel size for better transparency handling to ensure correct depth value is assigned when using a 32 - bit color model
added error response body handling in OkHttpDataSource to improve error management by throwing specific exceptions for unsuccessful responses
added a static method ` exit ` in ` TopLogging ` and updated ` TopThreadGroup ` to utilize this new method to improve exit handling by providing a unified exception handling mechanism
updated the calculation of the start index for regex matching to correctly handle cases where the regex is not global
planner - 468 ignore optaplanner 6.3 . 1 test until fix
fix the wrong allocation location in defaultallocator # processtoallocation ( )
added a method to clean entries without feeds in DatabaseCleaner and implemented it in FeedEntryDAO to ensure no feeds are deleted during the deletion process
modified the return type of the ` appendToLabel ` method in ` AtomicCounter ` from void to ` this ` to enable method chaining within the ` AtomicCounter ` class
[ java ] add a noopidlestrategy to idle strategy in unified idle strategy for spin .
do n ' t cache header for not - modified response ( # 6140 )
truffle / instrumentation : test some renaming and cleanup .
added a method to paint the tab area in SynthTabbedPaneUI to correctly render the tab area with appropriate dimensions and insets
updated the KrakenMarketDataService and KrakenMarketDataServiceRaw classes to allow variable arguments for the Kraken depth and trading data retrieval to enhance flexibility in handling input arguments for improved usability
camel - 14538 : fixed the issue that file endpoint always use unix path separator when look at the file name .
added a new method ` build ` to ` JavaProvenance ` that accepts a ` Iterable < Path > ` for classpath information to enable proper handling of Java types during the build process for better dependency management
added tracing for registered Hive and non - deterministic UDFs in HiveFunctionRegistry and updated tests in TestInbuiltHiveUDFs to improve debugging and ensure correct behavior of UDFs with different data types
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve testing accuracy and performance
catch and log unknown columnfamilyexception during hint delivery
added a check for writable output files to handle root permissions to avoid errors during test execution when files are writable due to root access
added package information retrieval and error handling in LauncherModel . java to ensure that the application does not proceed if the package information is unavailable
fix ntwk _ offering service map nullpointerexception on upgrade path
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and related tests in FaultTolerantChunkOrientedTaskletTests to ensure consistent skip policy checks and improve exception throwing clarity
replace method calls from ` startsWith ` to ` regionMatches ` for better accuracy to ensure case - insensitive completion checks for the completion state
added imports for SourcesFileResults and SourcesFileErrors , and modified data table handling in Recipe . java to improve handling of multiple data tables efficiently
added a check to dismiss all tasks in the overview after task changes to ensure that all tasks are dismissed when a new task is selected
cloudstack - 7268 : add dbupgradesystemvmtemplate interface for db upgrade
removed unnecessary null checks and improved connection handling in LdapClient . java to simplify the code and enhance readability while maintaining functionality
update index handling by introducing a current variable for index tracking to improve code readability and maintainability by reducing redundancy
wait for user to connect to the keyspace before proceed so that they do n ' t get orphan .
added a check to skip synthetic fields in ReflectUtils to improve performance by avoiding unnecessary processing of synthetic fields
added a new LoggerProvider class and integrated it into the application interface to enhance logging capabilities for better application monitoring
changed the type of the ` builder ` and its values from ` ImmutableMap < String , String > ` to ` ImmutableMap < String , Object > ` and modified the type of ` port ` to ` int ` to improve type safety and simplify the handling of nullable ports
log a warning when there be more than one glue class that configure the spring context
added a method ` deepStart ` to iterate over startables from a list of startables to enhance the functionality of the Startables class for better resource management
6 . x : remove shape . reserveprimitiveshapearray deprecate because of the removal in 20.2 .
fix laser target support for all client . close # 3914
refactor object name validation to use a conditional structure to improve readability and maintainability of the code
removed unused imports related to CachingTokenFilter and TokenStream in TestSolr4Spatial2 . java to streamline the code by eliminating unnecessary dependencies
added a line to set the expiration messages period of policyEntry to zero to ensure that the test properly handles memory consumption when it is triggered
removed redundant null checks and improved handler name validation logic to enhance code clarity and ensure proper handler identification
updated the logging mechanism to replace hyphens and dots in the servlet name to ensure the logger name is clean and conforms to naming conventions
updated imports and modified the way Python environment variables are handled in ProjectBuildFileParser . java to improve the accuracy of Python environment management and avoid null pointer exceptions
modified audio format checks and memory allocation in DirectAudioDevice . java and Toolkit . java to ensure correct audio data handling and improve error handling
fix npe in elasticsearchsearchstringlookupservice when enums be null
updated error message format in CommitLogReader to include both the end of a segment and the error context to improve clarity of error reporting for better debugging
added policy assignment from containerScope in WebSocketSession . java to ensure proper configuration of WebSocket session policy
simplified the condition for setting static fields in the Java2TypeScriptTranslator to improve code clarity by removing unnecessary checks for static fields
updated the WebRoot parameter handling in the UserService class to allow users to specify a custom webroot path for the application context
test : migrate camel - spring - validator module to junit5 ( # 4460 )
# 207904 : use reflection to access monitoredvmutil to determine if a vm can be attach .
updated method names from ` createHeader ` to ` createHeader ` across multiple formatter classes to enhance clarity and consistency in header creation logic
replaced multiple specific imports with a wildcard import and added a method for placing stop orders to simplify import statements and indicate a placeholder for future implementation of stop order functionality
added buffer reset calls to ReduceRecordProcessor to ensure buffer is cleared before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mSourceView is null
updated comparison in FloatingDecimal . java to use a strict less than operator to correct the range check for decimal exponent values
updated property type comparison logic in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure correct handling of property definitions and validate functionality through testing
removed the maxVersion parameter from the getVersions method call to simplify version retrieval by directly using the existing version information
added conditional logic to set the ORIGIN header based on the security settings to ensure the origin URL is correctly set based on the security context and secure HTTP
update animation logic in RecentsView and TaskView to use alpha and translation for animations to enhance user experience by providing smoother transitions and visual feedback during task management
updated error messages and method calls in ORCRecordReader to include the ' field ' parameter for better context to enhance debugging by providing clearer context about the fields used in validation
added sample files for clearing GPS data on DemoUtil . java to enhance video processing capabilities for Google Play services
use interface instead of version in persistenceprovider for hibernate 5 and later
updated log initialization to use the class name instead of the class reference to improve log clarity by specifying the context of the logging used in the classes
added diagnostic logging functionality to TestSpecificCompiler and tested union types with fixed fields to enhance error handling and ensure correct warning messages during compilation
fix race condition when create a websocket session .
fix delay in sec due to sequencing issue
add miss language key to xmlconfigurationprovider mappings
added conditional logic to handle stream stop operations to ensure proper handling of video tracks when the stream is stopped
modified BittrexChartDataResponse to return an ArrayList instead of a List and added a new periodType enum to improve flexibility in chart data management and implement a period type - based approach
update dependency and example for featurebuilder / gml to 1.0 . 0 - rc1
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` g ` method call to correct the method ' s behavior for skipping lines
hhh - 10956 fix test failure on oracle
rename findfulltextaction to downloadfulltextaction and correct spelling
refactor URI registration handling by replacing ` registerURIDefault ` with ` registerURI ` and adding host and port information to improve clarity and functionality of the URI registration process
refactor WebSocket mapping and upgrade filter classes for improved clarity and maintainability to enhance code maintainability and readability for future developers
added a check for a blank OSDB hash before retrieving the API result and changed list types to ArrayList < String > for parameters to improve robustness by handling cases where the OSDB hash is blank and enhance type safety for collection types
added transferToken method and modified transfer logic for token values in RuntimeImpl . java and MUtil . java to enhance token transfer functionality and ensure compliance with contract transactions
camel - 15836 : camel - ftp - fix delete file from the current directory when use stepwise mode .
fix ( jackson ) : wrong default search bind password ( # 2905 )
added validation for join result and modified hybrid hash table loading conditions to ensure correct handling of join results and optimize bloom filter integration
modified ` ServerHTTPSPDYAsyncEndPoint ` to accept an ` AsyncEndPoint ` parameter and updated related methods to utilize these methods to improve flexibility in handling async endpoint configuration
added an extra " id " to the intent in multiple classes to ensure the correct tweet identifier is referenced in the intent
added proxy handling and refactored the disconnect logic in HttpURLConnection to improve connection management and ensure proper handling of proxy connections
replaced ` int ` with ` AtomicInteger ` for thread - safe incrementing of the ` _ numChildren ` variable to ensure accurate counting of trace IDs in a concurrent environment
updated various Java files related to JWT handling and restructuring for improved readability to enhance code maintainability and clarity by organizing the code structure
changed the test annotation to be enabled during the test execution to prevent the test from running due to known issues or issues
( chore ) camel - kie - api : replace resourcefactoryservice with resource
change predicate type from IN to NOT _ IN in multiple predicate classes to improve clarity and consistency in predicate checks
use the new owncloudaccount class to create dialog item in case of account not available
added null check for witnessService before accessing its method to prevent potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to use getExprString ( ) to improve clarity and maintainability of the code
added a check to ensure the item ' s Javadoc is not only set if it is not present to avoid potential null pointer exceptions when accessing the Javadoc
renamed ` holderMethod ` to ` holderMetadata ` and updated related methods in ` CompiledICHolder . java ` to clarify the purpose of the metadata field in the code
fix potential npe with animation . revalidate ( )
[ flink - 30613 ] [ kafka ] use new registrationcontext to create metricgroups in bulkformat
updated the calculation of the y - coordinate by introducing an old variable for accurate positioning to ensure the y - coordinate is accurately represented as old and accurate during calculations
# 2206 - jcache now support javax . cache . configuration . instance ( )
fix for sourceforge bug 2974855 - avoid npe from url . geturl ( )
refactor ShadowCookieManager class for improved code organization to enhance maintainability and readability of cookie management functionality
added a configuration option for dropping external tables in Hive to ensure proper authorization checks before dropping external tables to maintain data integrity
added a closing brace to the if statement in Stage . java and modified the drawing position in ProgressBar . java to correct the positioning of rendered backgrounds and ensure proper rendering of backgrounds
sulong : cache byte order in llvmlanguage , so it can be change in platform dependent code
updated the property name from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to align with the new naming conventions for WindowsClientProviderStrategy
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and adjusted the WebView login process to allow dynamic URL handling for web views based on the availability of the baseURL
corrected a typo in the exception message in CallableStatementHandler . java to ensure clarity in error reporting for JDBC type requirements
Updated the ` after ` date parameter in the ` AuditEventsMvcEndpoint ` to be optional to allow for partial date formatting for the date parameter
[ ci ] rename ` xxx ` to ` xxx ` for clarity
added functionality to remove a soft body and reset it to null to ensure proper resource management and prevent memory leaks
updated interface declarations to be public for provider classes to allow access to these interfaces from other packages
[ zeppelinhub ] fixed minor logging in zeppelinhub
add test for empty ` < jingle > ` without the ` < jingle > ` namespace .
fix npe from redplasma / mana pool , close # 397
more change to pipeline to support http / 2 . simple greet sample work now .
replaced multiple lines of code for improved readability in Remove . java to enhance code clarity and maintain consistency in formatting
fix indexoutofboundsexception when some xml report contain ' \ n '
removed the option to ignore symbol files in the JavapTask and updated related classes accordingly to streamline code and improve consistency in handling symbol file preferences
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class to clarify that the class is specifically related to streaming ticker data
restructure contract initalization logic and add contract address validation to improve error handling and ensure contract creation is not null
ggb - 2118 fix : create 3d input for applet that do n ' t have it
temporarily ignore this test while investigate failure in release build
flv : ignore invalid scriptdata name type , rather than fail playback
change method name from getRepositoryFactoryClassName to getRepositoryFactoryBeanClassName to improve clarity and consistency with repository factory bean naming
changed the return type of getExecutableCommand methods from String to List < String > across multiple classes to enable more flexible handling of executable command strings
changed instance variable assignments from ' this ' to ' this ' for consistency to improve readability and maintainability of the code
removed UploadPathActivity and integrated it into ComponentsModule and FilePickerActivity to streamline the codebase and eliminate unused components
modify return statements to conditionally return total term frequency or sum total term frequency based on index options to ensure correct handling of term frequency when indexing is in DOCS _ ONLY mode
fix : support implicit constructor in ctclass ( # 1358 )
added database parameter and adjusted method signatures for ` populateValidateNullableIfNeeded ` , ` populateValidateUniqueIfNeeded ` , and ` populateValidateForeignKeyIfNeeded ` to ensure compatibility with Oracle database for validation operations
refactor Database class to improve code structure to enhance maintainability and readability of the code
update springapplicationbuilder javadoc to reflect api change
updated iterator assignment in PointInSetQuery to use the current instance variable to ensure correct reference to the iterator used in the PointInSetQuery class
removed substring operation for extracting rawName in SchematicHandler . java to improve efficiency by eliminating unnecessary substring extraction
fix inspection violation : java . util . collections be expect to be unmodifiable
changed the enum Option from static to instance - specific in ProcessExecutor . java to allow usage of an enum without creating an instance of the same class
added an AlertDialog for handling cases with a length of zero and updated completion logic in Compose . java and ComposeActivity . java to improve user experience by enabling a confirmation dialog when the character has not been processed
refactor toggleKeepInSync method to utilize CheckBox for better state management to improve code maintainability and reduce duplication in sync handling
replaced ` DatatypeConverter . parseBase64Binary ( b64encoded ) ` with ` Base64 . getMimeDecoder ( b64encoded ) ` and added unit tests for the ` ImageUtil ` class to improve base64 decoding functionality and ensure proper functionality through unit testing
added new classes ControllerCounter and DBCallback for MongoDB document handling to provide a structured way to manage MongoDB data access within the application
added final modifier to the ticketId parameter in deleteTicket method to improve code clarity and enforce immutability of the parameter
added a new file FlywayMigrationRunner . java that contains a main method for running the Flyway migration application to facilitate the testing of database migration by including the Flyway database configuration
replaced the use of ` isEmpty ( ) ` with ` size = = 0 ` in the ` HashMap ` and added a new ` NotEmptyHashMap ` class with a custom ` size ` implementation to enhance the clarity and functionality of the ` HashMap ` when checking for an empty state
update the version number from 0.6 . 0 to 0.7 . 0 to reflect the new release and include recent updates or bug fixes
hive - 23790 : fix npe throw by zlibcodec and miss orc compression modifier ( # 4375 )
added null check for mainAttrs and improved resource management in jar creation to enhance error handling and ensure proper resource management for jar files
updated test class names by adding an ' s ' suffix to adhere to naming conventions for better readability and consistency
[ gr - 34937 ] fix jvmci profile info for hotspot .
bug 66425 : make cellcopypolicy independent copy policy from object - oriented pr # 53369
added a static method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and invoked it to reset the icon load result properly after the icon loading action
[ cap ] use the raw character sequence when serialize the form field value .
updated IconRecentsView to handle landscape orientation and adjusted margins based on resource to improve layout consistency and ensure items are invalidated on configuration changes
deleted the AddAdapter . java file to remove unused code to streamline the project
added empty check for constructorCodeList and streamlined loop structure in NonStaticLifter . java to improve code robustness by preventing potential NoSuchElementException
hive - 24937 : cut - n - paste error in hive view ( gopal v , review by siddharth seth )
updated LogWatcher test to improve message registration checks to enhance reliability of message handling during new watcher operations
added a print statement containing an HTML tag in Java2TypeScriptTranslator . java to improve the readability of the generated TypeScript code
update the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the latest stable release version
set SPRING _ AOP _ PROXY _ TARGET _ CLASS to true in TraceEnvironmentPostProcessor to ensure the proxy is enabled by default for tracing purposes
removed singletonLock logic and related code in TypeCachingBytecodeGenerator . java to simplify the logic for determining singleton lock behavior
# 2272 added documentation for callbackaction ( # 2273 )
fix test report bug : if a test fail , append xml file to the output directory , it be silently delete
updated the handling of Maven settings and improved mirror retrieval logic in MavenRepositoryMirror . java , and added a corresponding test in MavenRepositoryMirrorTest . java to enhance functionality and ensure correct behavior when the Maven settings are unchanged
added support for a name parameter in source path constructors and updated related classes to enhance path functionality by allowing the name to be passed throughout the code
updated the OAuth callback URI matching logic in ` OAuth20CallbackAuthorizeEndpointController . java ` and added a test case in ` OAuth20CallbackAuthorizeEndpointTests . java ` to ensure accurate matching of the redirect URI and verify functionality through unit testing
replace the handling of empty annotations and introduced a new ` AnnotationParser ` class for better encapsulation to improve code readability and maintainability by centralizing the conversion logic
updated method calls to use methods that use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawableForUser to ensure compatibility with the latest API changes and improve code clarity
add doc for line separator ( windows or lf ) for output default
fix bug introduce by previous commit that break configuration management
add sanity check for typical data before save and recover file .
chore : update java and python dependency ( # 538 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` throws IOException ` declaration to improve error handling and enable testing of file content retrieval from different project workspaces
updated CountersReader . java with changes in method implementations to enhance performance and maintainability of the code
updated the methods in AllAppsRecyclerView to directly set containerType values for SEARCHRESULT , PREDICTION , and ALLAPPS to improve code clarity and ensure consistent logging of container types
hbase - 24936 : the config key should not be duplicate in the reservoir and hbase - ipc ( # 2495 )
[ native ] fix window native query assertion to account for userid
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types correctly to improve the accuracy of obtaining parameter types in the presence of synthetic or implicit parameters
update TestFSTs . java file to reflect new utility functions to enhance code readability and maintainability
make sure enter label be visible even if there be no description
hbase - 7765 avoid extra flush . flush . size calculation during lowering of region split when require
removed unnecessary model loader initialization in LauncherClings . java to streamline the loading process and improve code readability
initialize keys and updates as lists without null assignments and set them to null to improve code clarity and ensure consistent initialization of date handling
camel - 5294 : added support for excluded spring datasource . thanks to stephan siano for the patch .
apps - 2177 fix latex bug on desktop
[ flink - 33543 ] [ kinesis ] proxy should honor client configuration property for aws client
fix # 4994 - only trigger channel on single channel ( # 4998 )
add disable to local cache test due to unfavorable benchmarks
[ iotdb - 4896 ] fix npe when path be null ( # 6682 )
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly cleared during the garbage collection process
updated margin calculations to use horizontalMargin instead of desiredWorkspaceLeftRightMarginPx to improve layout responsiveness for different screen orientations
refactor character normalization logic and improve readability in CharTokenizer . java to enhance code clarity and maintainability by standardizing character handling
chore : update gapic - generator - java version to 2.1 . 0 ( # 523 )
cloudstack - 8190 : fix xenserver traffic label for backward compatiblity
fix up dependency bank for next release
added a private Set of metric names and a getter method for it in SolrCore . java to enhance metric management functionality within the SolrCore class
changed URI handling to Path for working directory and path creation to improve type safety and clarity in path handling
refactor mac OS detection code by introducing a static final boolean field to improve code readability and maintainability by avoiding repeated method calls
[ ci ] correct javadoc / fix typo
clear the slotList and addAll the other ' s slotList in the Frame class to ensure that the slotList is properly updated from another instance
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count for accurate testing
added properties merging functionality in ConfigurationSpringInitializer to merge and retrieve configuration properties effectively
fix error message when logback be not on the classpath .
changed HashMap to LinkedHashMap for aliasToWork and updated related method signatures and references to maintain the order of operations in the code
added logic to retrieve the underlying JDBC handler map if it is null and the type is a Class to ensure proper handling of nested class structures in the type handler registry
added debug logging for writing items in Hibernate , Jpa , and Jms item writers to improve traceability and debugging of item writing processes
updated the parsing logic to handle the substring of the wellformed string before parsing to ensure accurate range parsing by removing unnecessary characters
modified the handling of the closeHandler to use the handler context in VertxHttp2Handler . java to ensure proper execution context is used when starting the server
optimize xssfevaluationworkbook . gettableregion ( ) so that it cache for xssfevaluationworkbook where it ' s only ever need
updated schema text detail type checks and simplified conditional statements in BaseSchemaTextFormatter . java to improve clarity and functionality for handling basic schema text details
updated MongoFactoryBean references to MongoClientFactoryBean and MongoClient to align with the new data type for better compatibility and functionality
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order while maintaining insertion integrity
hive - 10334 : skewjoinoptimizer throw npe if the join operator tree be not properly cloned ( gopal v , review by jesus camacho rodriguez )
added a null check for the client ID before processing the registration client to avoid potential NullPointerExceptions when the client ID is not provided
clear the AchievementList ' s exception state to ensure proper tracking of achievement data during the event processing
initialized variables productName , productVersion , driverClassName , and connectionUrl to empty strings in MutableDatabaseInfo and MutableJdbcDriverInfo classes to avoid uninitialized variables and ensure consistent default values
[ badge badge ] rename share _ read _ only to link _ share _ view _ only for clarity
added a LongBuffer for handling long data reads and updated the readLongs method to utilize it to improve performance and handle long buffer allocation more efficiently
refactor UnixFileAttributes to include separate timestamp and sec parameters for improved readability to enhance code clarity and maintainability by consolidating related time - related operations
8247777 : c2 : incorrect reference count in humongous region when no eager reclaiming of humongous region
added functionality to toggle the visibility of the app search bar based on user preferences to enhance user experience by allowing users to hide or show the search bar according to their preferences
fix env router feature ( # 2214 )
added a null check for cur and next in LineChartRenderer . java to avoid NullPointerExceptions during execution
added a new action for reloading the current display in the Eeze application to enhance user experience by allowing dynamic page reloading based on the current display context
changed logging level from info to warn for missing entries in ` plot _ statistics ` to better reflect the severity of missing entries in the system
update the minimum required Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest security features and fixes
added a null check for currentClusterConfigForService and threw an exception if it ' s null to ensure that the current cluster configuration type is not available before proceeding
[ geos - 8088 ] use serviceloader instead of factoryregistry to lookup extension provider
added a method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent potential memory leaks during object finalization
hive - 23799 : jdbc connector should restart the query executor before try to send out the row ( jesus camacho rodriguez , review by prasanth jayachandran )
updated feature settings and generic type usage in several classes to improve code clarity and ensure consistent use of generic collections
replaced the command waiting for application exit with a output analyzer to improve test reliability by ensuring the exit status is accurately checked during the process
added a method ` getType ` to ` ShadowContentResolver ` that retrieves the type from a URI and returns ` null ` if it ' s available to enhance functionality by allowing retrieval of type information from URIs using the ` ContentProvider `
updated type casting and runnable handling in ExpressionThreadPoolManager . java to improve type safety and clarity in the removal of tasks
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure compatibility with the Vert . x environment
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to streamline listener registration for improved readability and maintainability
[ java ] reduce the default batch size for newsessionqueue . from 10 to 3 processor .
[ flink - 33946 ] [ runtime ] log exception when establish resource manager connection in taskexecutor
fix # 12652 - npe in lambdarewriter when class file be not find
updated the exception message to include the min and max values to provide clearer context for the validation of the input parameter
updated the onMessage method signatures to include an entity parameter for better state management to enhance the logging capabilities and ensure accurate message handling in the state machine
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` , and created a new file ` com . codename1 . db ` for managing database operations to provide a structured approach for managing database operations and their data
refactor multiple assertion classes in the project structure to improve code maintainability and readability
# 467 - enh : add setbeanid ( object ) method ... that accept an id on ebeanserver
update to late xslt 6.0 . 4 , and fix a wrong parameter in rulesettodocs
replaced the direct initialization of ` requestMatcher ` with a separate list of ` matchers ` to improve efficiency by avoiding duplicate matching of request matchers
implement hashcode and equal in contactresource . this fixes lbclassic - 22 issue .
refactor to silence some findbugs warning
updated log messages and error handling in FileManager . java to improve clarity and consistency of persistable state messages
added a tearDown method to TestIndexSearcher and reset mock control in TestJdbcDataSource to ensure proper resource management and cleanup during tests
updated method calls and assertions in SyntaxTests . java for consistency and correctness to ensure correct functionality and improve code readability
improve the javadoc for connection model and the connection group ( # 1738 )
pull back to old parserdecorator for good performance
use fml security manager instead of hardcoding it to determine what they should call .
removed redundant declarations of variables in AccountUtils and IndexedForest classes to streamline code for improved readability and maintainability
corrected the parameter used for the " rename " method from " swap " to " rename " in the CoreAdminAction . RENAME function to ensure proper functionality by allowing the renaming of core admins
added a test for JavaScript comment handling and modified variable checks in the parser to improve parsing accuracy and maintainability of jsx comment handling
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording during the test execution for better debugging
added error handling to ` BuildEndToEndTest ` and ` CxxEndToEndTest ` for missing Buck configuration messages to improve test feedback and ensure appropriate error reporting when the Buck project configuration is missing
added physical memory checks and logging in TestStringBufferAndBuilderGrowth . java to ensure tests do not run if the physical memory is below expected limits
doc : update custom converter doc to use conversionservice bean ( # 8638 )
added a success flag to indicate whether the HiveMetaStoreClient has been successful execution to indicate a successful execution of the operation
updated string comparison in ResourceReferenceInfo and modified BundleInclusionRule in Dstu2BundleFactoryTest to ensure consistent string comparison for string inclusion
added support for a new video version " amp . twimg . com " in the TimeLineCursorAdapter and TweetActivity classes to enhance the user experience by allowing video links to be processed alongside existingvements
add deprecation to AreaReference class to indicate that the class is outdated and should not be used in future development
refactor ElementType and Target classes for improved code organization to enhance maintainability and readability of the codebase
updated assertions and added checks for reference kind in MemberName . java to ensure correct handling of method invocation based on reference kind
change the default value for submitKeyUpdates from " false " to " true " and improve thread safety when running the change
performance improvement : event will always be handle in touchup even if no touch event be available
camel - 6294 : bean component should detect static method and let it be grab from the registry .
updated multiple Java files related to benchmarking and protocol handling to improve test reliability and maintainability
updated the handling of ClosedByInterruptException in AgentRunnerTest . java to improve code clarity and ensure proper exception handling
added description methods to multiple classes for better clarity to enhance maintainability and readability by providing specific descriptions for plugins and properties
refactor faces handling in ObjLoader to directly add activeGroup faces based on length to improve clarity and ensure activeGroup has faces for all faces
refactor ProcessEngine class to improve code structure to enhance maintainability and readability of the code
fix findbugs warning ( reentrant lock )
updated the ` getBomReference ` method to include ` mavenPackaging ` parameter and adjusted related calls in ` PrintMavenAsCycloneDxBom . java ` and ` PrintMavenAsCycloneDxBomTest . java ` to enhance the handling of Maven packaging for better compatibility with Maven projects
updated back ( ) method call to use evt . getComponent ( ) instead of a direct call to improve component handling in the UI builder
do n ' t require a client ' s cert verification but just throw an exception if the one be unsuccessful .
change method signatures in ObjectArraySubject and its subclasses to improve type safety by enforcing type constraints on the actual array
replaced NutchConf with getConf for timeout retrieval to ensure consistency with configuration management across the application
bug fix on displayed board ( race condition between sheet )
added a method ` getSessionId ( ) ` to return the session ID to provide access to the session ID for other components
added null checks before setting time interval for nodes and edges to avoid potential NullPointerExceptions when time interval is not initialized
changed the server port command from " - loglevel - info - serverPort " to " - serverPort " in MockServerContainer . java to simplify logging by removing unnecessary logging output
updated error logging to include the exception message to improve error reporting for better debugging
fix for her - 2028 update default robots . txt for robots . txt output
added JUnit import and @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
fix windows issue in test for window
add alternative path to demo code ( issue # 121 )
fix unit test , use input . getfirstfilter ( ) to init input
[ java ] added protectiondomain to the bufferalignmentagent ' s constructor .
added dispose method to properly release resources of resources to ensure proper resource management and prevent memory leaks
added a new Hive configuration option to disable unsafe external table optimization to improve performance by avoiding unnecessary operations on external tables
updated the description of the authorization header in TokenKeyEndpointDocs . java to clarify the requirement for public keys in the API documentation
modified wallpaper offset settings in Workspace . java to set the vertical offset to zero to improve the aesthetic placement of the wallpaper during scrolling
changed return value from false to true and added specific SQL query for SequenceSnapshotGenerator to ensure correct behavior of sequence retrieval in SybaseASADatabase and improve query performance
nifi - 12362 : using autocommit = false should honor transaction setting
added directory creation checks for existing parent directories in SnapPuller . java and included assertions for master and slave directories in TestReplicationHandler . java to ensure that the directory can be created if it does not exist and verify the integrity of the master directory
change the AppTarget ID format in AppEventProducer . java from " id : launcher " to " launcher : launcher " to ensure consistency in naming conventions for better clarity
fix # 161 - remove unnecessary byte write from framer . frame ( ) .
updated OAuth2AuthorizationRequestRedirectFilter constructor parameters and formatting in multiple files to improve code readability and consistency across the authentication process
updated the map creation functionality to include an extended delimiter parameter to enhance clarity and usability by allowing split text into key - value pairs
added imports for ChronoUnit and TemporalUnit , and modified the formatting logic in PlainFormatter . java to improve precision handling and maintain consistency in time formatting
updated the timeout duration in the close method from 1000ms to 3000ms and added a retry mechanism for retrying operations to improve responsiveness by ensuring sufficient time for closing the agent
hhh - 14558 bytecode enhancement now use methodhandles . privatelookupin ( ) where applicable
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
updated logging message to indicate a new proto event file instead of clearing it to clarify the purpose of the logging message for better debugging
ignore this test until i can fix the issue find
updated the error message for IllegalArgumentException in GridLayout . java to clarify that row and column must be greater than zero to improve error reporting for better debugging
update to late bpmn 2.0 . 203 : downgrade to gradle 3.0 . 2 and gradle 3.0 . 2
added support for ordered sheet records and improved sorting functionality in XLS2CSVmra to enhance the organization and order of BoundSheetRecords for better data handling
fix a typo in the ThrustCurveMotor . java file and adjust avg impulse calculations to improve accuracy in avg impulse calculation for better performance
modified the instantiation of InputSystemJme to accept an InputSystemJme instance and set the input manager directly to improve flexibility by allowing the InputSystemJme input manager to be set directly
[ gr - 30913 ] avoid create unconditional assumption when use implicit identity hash code field .
remove deprecate block . getmesh ( ) and switch to block . getstandalonemesh ( )
[ flink - 27370 ] [ yarn ] move the keytab configuration option set to the correct place in the configuration file .
added an option to disable the empty word matching and modified matching logic accordingly to improve flexibility in handling cases where empty words are not defined
update ` pushViewReplicaUpdates ` method to include ` writeCommitLog ` parameter to ensure replica updates are pushed correctly based on the commit log state
added auto - open preference functionality and updated button ID handling in capture activities to enhance user experience by managing clipboard interactions and ensuring the correct button is open
hhh - 11337 fix entitybuilder . batchesize and hibernate . jdbc . batch _ size in batch mode
datajpa - 226 - only log at debug if entityexistsexception occur .
removed the deprecated format option from CucumberOptions and RuntimeOptions to indicate that the format option is no longer recommended for use
removed the save ( ) method from PMS . java to streamline the file saving process and avoid unnecessary data saving
simplified back key handling in ExtendedEditText to improve code readability and maintainability
updated the calculation of the new newCapacity in AbstractStringBuilder and added a new test class Capacity to improve code clarity and ensure proper capacity validation of StringBuilder instances
replaced goHome ( ) method with onNoteSaved ( noteTmp ) method to improve note saving handling in the DetailFragment
patch from tim allen from bug # 56799 - improve the xwpf web interface to handle endnote reference
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event details for better context in authentication events
add a new test method ` testVersion ` to verify the version of the OGR library to ensure compatibility and reliability of the version handling functionality
add a new Lifecycle class to handle network error events to enhance error handling capabilities for the application
fix deviantart ripper to handle 404s gracefully
removed unused imports and simplified the casting of components in RocketFigure . java to improve code clarity and reduce unnecessary dependencies
added scaling functionality for canvas awares in PJOGL based on success / failure conditions to improve rendering accuracy by allowing dynamic scaling of graphics based on the success of the operation
auto - select project name when create project ( # 5237 )
solr - 4855 : use block pack to optimize diskdocvalues consumption and write doc value a bit too much
camel - 15324 : fix camel - core - routing to only print the status code in the log .
removed unused data list and stream operations in GoAwayTest . java to simplify code and improve readability by eliminating unnecessary data management
added property introspection functionality for Fluent bean properties and created a test for it to ensure proper handling of fluent setter beans in the application
refactor BlockingHttpEndpoint to return a new HttpResponse class instead of using ByteStreams and ByteStreams to improve code readability and provide a more structured response handling
camel - 1744 : added unit test for file sorting of file by expression
updated the print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity by using a more descriptive method name
add the ability to control whether the pdf encoding should be constrained / uploaded ( smiklos gergely , review by thejas nair )
modified the aggregation function name handling in TSServiceImpl . java to conditionally include full path columns based on the aggregation parameter to enhance flexibility in querying the database schema by allowing dynamic aggregateing of paths
updated classes to extend WithNestedTests instead of LuceneTestCase to improve test structure and maintainability by utilizing a more suitable test class
deselect the xcap enable / server URI if register be successful .
ww - 3971 add exception handler option to hide the error page
fixed issue with stop text edit on android . http : / / github . com / codenameone / codenameone / issues / 2207
fix npe in group attribute handling when create a flowfile for a non - exist group attribute .
remove ` ` undo modify ' ' button from config dialog , add always open preset feature
add some logging to aid miss message from client .
added a condition in HTMLDataFlavorTest to check for Windows OS before executing the test to ensure the test is only run on Microsoft Windows , clarifying that it is considered passed on other operating systems
added SQL _ SERVER _ SNAPSHOT with a value of 0x1000 to the transaction isolation level serialization to enhance transaction management capabilities by implementing a SNAPSHOT format
replace direct addition of newRecids with a loop that retries when adding new recids to improve thread safety by ensuring recids are properly tracked and managed
remove use of jrecompat . getinstance ( ) and use java . util . zip instead
added a check for the command class before creating a RegexRegisteredService instance to ensure proper command class is used when creating a new RegisteredServiceImpl instance
use ignore disk failure policy by default and allow stop it
( chore ) camel - ripper : remove public method declaration
filter out inet address that we ' re not localhost . resolve issue 388 .
resolved - issue batch - 159 : remove jobidentifierfactory setter from simplecommandlinjobrunner
propagate clusterdatacache to avoid unnecessary call to computepartitionassignment
[ java ] remove the deletecontainer interface , it have be replace by ` ` auto - remove ' '
simonstewart : make the defaultselenesults command more robust by use split ( ) instead of manually split the command
add retry to glossary test ( # 718 )
fix noclassdeffounderror when use non - composite schema .
updated EntityDeletedEvent to use JsonUtils for serialization and conversion to string to improve data handling and consistency in audit record management
added a check for GOP matching in FormatConfiguration . java to ensure proper handling of specific GOP values during media extraction
added a new file TestProfileReturnTypePrinting . java with performance testing methods to evaluate the return type printing performance of different class instances
added concurrency control when refreshing configuration to ensure thread - safe access to configuration properties
added AcquireReleaseColumnsSegmentOperator to manage resource acquisition and release to ensure proper resource management and prevent potential memory leaks
do n ' t ignore test in firefox that require file
updated method signatures and added documentation for display density and system bar properties to improve clarity and functionality of the API
remove duplicate bug report from project stats . addbugs ( ) call .
bugfix # 232382 - change disabled text color for gtk laf
remove @ Override annotations from CacheControlImpl . java to streamline the code for better readability and maintainability
added a check to return a date when no days are specified in the Recurrence and created a test for this functionality to ensure that scheduled actions are only returned when a valid date is provided , enhancing functionality
replaced the upload button with a menu item for enabling the upload feature to improve user experience by allowing multiple uploads in a menu
refactor various classes related to message expression handling and security metadata processing to improve code organization and enhance maintainability by standardizing naming conventions
added the ` loadMetaData ` method implementation in ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading exchange metadata directly from the input stream for improved functionality
added a new ` WritableSerializer ` for serializing ` Writable ` objects in ` CrawlDbReader . java ` to enable JSON serialization for Hadoop Writable objects to enhance data interchange and support for JSON serialization
fix dependency issue with test due to change in jaspic client
added configuration annotation to mdnsdiscoveryservice to enable service discovery for camel - aws2 - mdns
chatviewer : fix crash when open message from close chat .
lucene - 7568 : improve testbindexreorderer so that it use a separate thread pool
removed assertions for validating dependencies for DATANODE and NAMENODE to ensure correct behavior in RoleCommandOrderTest regarding dependencies
added a method to restore local information and modified the writeObject method to include it to ensure local information is restored consistently and improve code clarity
standardized formatting of if - else statements across multiple files to improve code readability and maintain consistency
added transformations for transformations and changed the visibility of the logo image in BitmapFontTest . java to enable scaling effects and ensure the logo is rendered correctly in different screen sizes
[ flink - 23737 ] [ table - planner - blink ] disable aggregate condition for python group window .
fix problem with idle status change and response time out
add a method to retrieve unreachable token owners in Gossiper . java and update related checks in StorageProxy . java to enhance functionality by retrieving unreachable token owners and clarifying the checks for host ownership
apps - 4769 only use expressionnode . getleft ( ) . unwrap ( ) when check if it ' s a variable
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to ensure proper content type management and maintain consistency in content type settings
changed variable declarations to static final for X11GraphicsEnvironment and device and localEnv in XToolkit . java to improve code clarity and ensure proper initialization of graphics environment variables
fix javadoc warning introduce by the new recommenderjob
replaced the use of ` Object ` with ` ReentrantReadWriteLock ` and ` ReentrantReadWriteLock ` for thread safety to improve locking mechanism and prevent potential deadlocks
added a test for reading an identity provider in a different zone - based environment to ensure that the identity provider functionality works correctly for different identity zones
make pointintime trigger a schedule job on objecttypechange . use ExpireJob to schedule the job when possible .
removed unused import of Service from SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 5590 ] fix push version change problem ( # 5591 )
chore ( core ) : add option to create detached directory ( # 2555 )
[ java ] adding test to ensure that we be schedule the replay when a follower reply to a slow down .
fix : choose auth instead of authors3 [ year ] ( # 4727 )
updated extraDepsBuilder to use CxxPlatforms for dependency parsing across multiple classes to improve consistency and maintainability of dependency management in the codebase
refactor OAuth service initialization and disposal logic in GoogleCloudAPI and GoogleTTSService to improve resource management and avoid potential memory leaks
camel - 2366 : fixed file / ftp oncompletion not check file name if use dynamically - defined filename
added a boolean flag ` reopenReaders ` to ` SolrConfig ` and modified the condition in ` SolrCore ` to check its value to allow configurable reopening of readers during indexing operations
include freeplane dialect in the map ( map reader )
added methods to handle the ` currentDate ` and ` currentTimestamp ` fields in the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality for managing date and timestamp updates in MongoDB
added a new method ` dup ` in ` Attr . java ` and modified the argument handling in ` UnboundTypeInBoundForMethodRefTest . java ` to enhance functionality and ensure correct context resolution for method references
refactor Condition implementation and assertion for cleaner code to enhance readability and maintainability of the code
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector . java to improve query performance and enhance code clarity
removed several unused imports related to Java ' s invoke package from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability by eliminating unnecessary dependencies
added a method to provide SharedPreferences for direct nearby uploads and updated the uploads controller implementation to enhance the application ' s ability to manage shared preferences effectively
added support for handling " SYSIBM " and " SYSDUMMY1 " modes in the database compatibility handling to ensure proper functionality for compatibility with various database modes
refactor logging statements for better readability and add conditional configuration for the Sampler sling to enhance code clarity and allow for flexible tracing of tracing behavior
bug 66425 : add support for duplicate xwpf property ( patch from sebastian annies )
tiff : improve handling of - inf inf in no data for geoiff
hive - 13589 : remove debug code from clidriver . java ( lars francke via szehon )
replaced Executor with Scheduler for HTTP execution in MockRestAdapter to improve handling of asynchronous tasks and error handling
added a default implementation of the ` selectByRuleIdSet ` method and updated the method signature to use a list of ` List < String > ` to improve flexibility in handling different resource IDs related to rule condition queries
added a method ` addExitDescription ` to the ` ExitStatus ` class and updated its usage in ` AbstractJob ` and ` AbstractStep ` to improve exit description formatting by preserving stack trace information
fix the multiblock crash when try to sleep without an entityplayer
rename ` cf ` to ` cfColumn ` and update references accordingly to improve clarity and maintain consistency in naming conventions
updated the range length comparison in PlotConfiguration . java to ensure consistency in the range length validation logic
[ uitext ] fix code for superflous uialertcontroller and guialertview
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` to improve code clarity by using the correct method for retrieving the build target
add javadoc to clarify the purpose of the arrayvalue
remove assertion checking for null message in AdvServiceTest to improve test reliability by ensuring the message is correctly retrieved
refactor key handling in MappingMongoConverter to simplify escaping to improve readability and maintainability of the code
fix duplicate ` ` image desc ' ' - > ` ` image title ' '
camel - 15374 : fix camel spring xml schema to use correct property name for deprecated option
fix npe in fuzzylikethisquery when the field do n ' t exist ( # 1074 )
modified the method to parameterize the ` tabularList ` boolean and adjusted the link generation logic to improve readability and maintainability of the code by making the logic clearer
changed code to use getidentifierservice ( ) instead of getservicebyname ( null ) . resolve issue 495 .
hive - 24927 : vectorcolumnassignfactory should use the database writer for partial content assignment ( gopal v , review by jesus camacho rodriguez )
changed the method signature of getDisplayScript to return a String instead of being abstract to provide a default implementation that returns null for the method
simonstewart : work around findbugs warning in r15284 .
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
added synchronization for the network interface when no active interfaces are available and ensure proper synchronization when no interfaces are available
extend hssftestdataworkbook . getallobjects ( ) to read nested object from a list ( patch from bug # 45538 )
removed unused import of jogamp . common . os . elf . Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve maintainability
replaced hostParams with roleParams for clarity to improve code readability and maintainability by using more descriptive variable names
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure compatibility with symbols in the text rendering process
fix an issue with attribute not be set properly ( cause by the sound tint ) .
refactor LiveTvGuideActivity to track the current time using a local variable instead of a local variable to improve code readability and maintainability by centralizing the time local for better accuracy
updated method invocation in MockGateway and added new test classes for mocking capabilities in the PowerMock framework to improve method resolution accuracy and extend unit testing capabilities for mock objects
[ jvm launch ] pre - load libfreetype . so and libfontmanager . so , maybe fix rlcraft crash
refactor function parsing to use a dummy argument expression instead of a separate variable to improve code readability and maintainability by clarifying the purpose of the variables
[ gr - 36933 ] fix handling of float loop overflow .
do not duplicate instanceof check in typeframemodelingvisitor . getinstance ( )
added a new ` LocalizedString ` class and modified method calls to use it for formatting to improve string representation for better readability and maintainability
hhh - 10743 - provide database option to disable classpath search . thanks to john taylor for the patch .
change instance variables from non - final to final and simplify array manipulation to enhance immutability and improve code readability
updated the default retries value from 0 to 1 in the reference configuration to align the configuration with expected behavior of the reference bean
added settings handling and updated usage message to clarify usage to enhance user experience by allowing dynamic configuration of settings
added view bindings for uploaded images and wiki text views in AchievementsFragment . java to improve UI clarity by using dedicated text views for UI updates
added annotation processing tests in TranslatingJavacPhaseTracerTest . java to enhance traceability of annotation processing during testing
added categoryinfo getter / setter for mwquerypage and updated categoryinterface javadoc
updated username and password validation messages in AuthzAuthenticationRequest . java to improve clarity and consistency in error reporting
updated the timeout alarm to use the correct auto - hide duration based on accessibility flags to improve accessibility experience by ensuring the timeout value is accurately represented
added a check for the character ' ^ ' in the GenericSignatureParser to ensure proper handling of signature parsing to prevent exceptions when an invalid character is encountered
updated access flags and added tests for various generic interface signatures and enums in the StubJarTest to ensure correct handling of static methods and validate functionality of stubbed constructs
replace null checks with Objects . requireNonNull for input validation to ensure null safety and prevent potential NullPointerExceptions
added tests for the ` next ( ) ` methods in the ` MapInterfaceTest ` class for validating the behavior of the ` Iterator ` API to ensure that the ` next ( ) ` method behaves as expected when the iterator returns false
added a serialVersionUID field to the TreeMap class to ensure proper serialization and version control for the TreeMap class
fix imagedata # createdatime to use the correct epoch . ofepochsecond
improve singularws support ( use f2m ) by load the correct locus command
added import for EncryptionUtils and used private and public keys for account deletion to ensure proper key management for accounts by removing private and public keys
introduce a common utils method for override the keep - alive header value , close # 858
fix npe during post - join if there be no interceptor and no member join
hhh - 10432 remove template mode processor that be not need anymore for the standard inlining inlining
remove spillenabled from hybridhashtable ' s constructor and related exception handling
refactor environment variable retrieval to utilize Java process environment methods to enhance code readability and ensure consistent handling of environment variables
add miss dependency injection suggestion from previous commit
update mockito doc with new feature up to 1.10 . 19
datajpa - 1064 - improve bean configuration so that it be possible to set field value .
database compatibility : ` ` with ' ' clause be not parse correctly in select statement , ` ` with ' ' clause
added constants for Hive server two transport mode and HTTP path in HiveConnection . java to improve code readability and maintainability by reducing repetitive calls to HiveConf
added isCacheable method to GlobalOrdinalsWithScoreQuery class to disable caching for the GlobalOrdinalsWithScoreQuery implementation
8315373 : c2 compilation fail with assert ( mon _ info - > is _ locked ( ) ) fail : sanity check
update file extension references from " % s . json " to " % s . jsfile " and " % s . jslib " to improve file naming conventions for JavaScript and JavaScript files
added selectionStart and selectionEnd fields to ShadowEditText class with setSelection and getSelectionStart methods to enhance selection handling functionality in the application
[ flink - 28552 ] [ gcp ] properly close grpc server in grpcenrichment
added a path parameter to the use method and updated related classes to ensure path validation and improve routing functionality
added a null check for fst and threw an IllegalStateException if lookup is not supported to ensure proper error handling and prevent potential runtime exceptions
replaced usage of line separator to ensure consistent newline formatting in outputs to standardize line breaks across different operating systems
added ABIWriter class loading logic and initialization in JavacInMemoryStep . java to ensure proper instantiation of ABIWriter processors based on the provided class name
remove @ suppresswarnings because bazel do n ' t understand it .
[ issue # 3949 ] add warn log when pull message service be stop
refactor EnergyEndpointer class for better readability to improve maintainability and ease of understanding for future developers
refactor the way displayed columns and their indices are accessed in ComponentPresetChooserDialog to improve code readability and maintainability by consolidating logic for handling column keys
removed unused import statements from BazaarRepository , CVSRepository , and IndexDatabase classes to improve code clarity and reduce unnecessary dependencies
camel - google - sheets : fix switch / cases indentation see camel - 14540
added a method to get the exported header style and updated related class references to use it to allow dynamic configuration of the exported header style for better flexibility in the build process
deleted the files Constants . java and DistanceUtils . java to remove unused constants and utility functions
pdfbox - 4892 : remove unnecessary regexp , a suggest by valerybokov
[ gr - 39999 ] ensure @ fold be no longer require .
handle inline rolebindings in openshift client ( # 4745 )
added logging statements for session cookie configuration to improve debugging by providing detailed information about session cookie configurations
update file name generation to use the current year from the calendar to ensure the filename reflects the current year for accuracy in log identification
fix variable name typo that could lead to incorrect check
added error handling for invalid options in JavapTask and created a new class T8033711 for testing to improve robustness by providing clearer feedback when invalid options are encountered
replaced ` collect ( Collectors . toList ( ) ) ` with ` toList ( ) ` in multiple files to improve code readability by reducing redundant calls
[ flink - 19352 ] do not log an exception on shutdown in taskdriver
[ flink - 21943 ] [ network ] add toggle enable max required buffer for hybrid result partition .
mailgun , mailjet , and sendgrid : remove usage of constant for success code
added the useGL20 configuration to the Cuboc application and updated the LwjglApplication constructor to enable OpenGL 2.0 rendering and ensure proper rendering behavior
remove redundant check for voidtype in jimplebody . getreturntype ( )
refactor OutputMacroExpander to use a new Arg class for command line output generation to improve code structure and enhance error handling for command line inputs
do n ' t wait for all job to be start on shutdown since these test be light
added additional conditions to check for specific build paths in MergeWordsListTask . java to ensure that the input file paths do not contain " / build / " to avoid conflicts
[ # 7682 ] instructor : add comment to session result cache ( # 7863 )
removed redundant spacing in the ` return ` statement to improve code readability and maintainability
added a new file ` TestEscapeThroughInvoke . java ` that demonstrates object escape in Java to illustrate the concept of object escaping in memory management scenarios
replaced manual stream skipping with IOUtils utility methods to improve code readability and maintainability
fix bug where connection pool would fail when call simplesql ( ) .
change exception handling from catching Exception to catching Throwable to ensure all errors are captured , including errors that are not Exceptions
hbase - 16157 the incorrect block size cause by remove duplicate block key in the lrublockcache ( chiaping tsai )
removed unnecessary check for an empty task count in RecentsView . java to simplify the code for better readability and performance
added instance configuration listener for Helix routing table and adjusted sleep duration in HelixServerStarter from 1000ms to 5000ms to ensure proper routing table configuration and improve responsiveness in the application
added metadata retrieval functionality to CoinmateExchange and CoinmateMetadataServiceRaw classes to enable retrieval of exchange metadata for better integration with the Coinmate API
[ mng - 6292 ] warn about $ { basedir } or $ { project . basedir } be unresolvable
pdfbox - 5714 : reuse key of a cosobject instead of create a new one
add displaydata ( list < itemspec < ? > > ) method to ptransform so it can be use more flexible ptransform
replaced DefaultSubject usage with assertThat for null checks in tests to improve assertion clarity and maintain consistency in test code
disable sha2 algorithm a this be not compatible with openssl 1.1 . 2 on osx
add more check for makesubcommands ( ) and optiondata ( # 1817 )
updated module - info . java files for mmm and ppp modules to ensure proper module dependencies and organization
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49555 for ios
updated the assignment of mFinished in LogEventChecker and adjusted sCheckingEvents flag in LauncherInstrumentation to ensure proper event tracking and maintain consistent state management
modified exception handling and added methods for closing writers and record writers in FileSinkOperator . java to improve error logging and ensure proper resource management during file operations
updated the return statement in SchemaGenerator . java to include diagnostic information to enhance error visibility for diagnostics during task execution
replaced RuntimeException with OptiqSemanticException in the SemanticAnalyzer class to ensure proper exception handling for related errors during column reference validation
modified DataSourceMonitorTests . java for improved test coverage to enhance reliability of database monitoring functionality
added a HashSet to track loaded resource paths and modified the scanning logic to prevent duplicate scanning of resource paths to improve efficiency and maintainability of the scanning process
[ hotfix ] [ test ] do n ' t log failure if the test instance can not be initialize
add null check to routeinboundhandler to avoid error
add nat ip address to warn log ( # 4245 )
updated import statements to reflect new ArrowByteBufAllocator usage to ensure compatibility with recent codecs and improve code clarity
[ minor ] fix some typo and format issue in java doc .
added validation for header and body buffer length in HttpConnection and created a new test for unexpecting headers in RFC2616BaseTest to ensure proper state management and validate HTTP request handling with expected headers and heights
refactor the subscription handling in MultiTimeout to utilize an AtomicReference for requested initial states to improve clarity and ensure only one subscription is submitted at a time for better management of asynchronous operations
track which compaction can be skip if we do n ' t have all sstables
added a test annotation to the TestOrcTimezone1 class to ensure proper testing of the ORC timezone functionality
relax debug check for metrics / cassandra to allow more flexible debugging
handle jsonexception when get segment map ( # 11345 )
update JTable to handle null columnClass in its superclass retrieval and add a new test class for the JTable functionality to ensure robustness in rendering of JTable components and validate functionality through unit testing
alexeibarantsev : fallback to bin / shell if shell not available ( e . g . on window ) .
increase the subscription duration for feed deletion from 10 to 1 to reduce the frequency of operations that are no longer needed
replaced List with Set for testInstances and updated method signature accordingly to improve performance and eliminate unnecessary list operations for test instances
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
removed file deletion after closing in BTreeMapTest . java to ensure proper transaction management during map operations
modified the iterator initialization in SortedIntList and added a new Iterator constructor along with a test case to improve iterator allocation and ensure proper functionality through unit testing
added unregistering of the object name in DefaultRemoteProxy and changed catch block handling in JMXHelper to improve resource management and enhance error handling clarity
[ flink - 32220 ] [ test ] set default writebuffer size to 64mb for rocksdb
remove border transparency in favor of create the background color
fixed facebookShare to avoid string encode warning
[ beam - 10611 ] remove json graph log from samza runner ( # 10711 )
change position of audio _ nature and shoot to be opaque in java so it do n ' t translate
updated LoopRotateBadNodeBudget . java for code improvements to enhance maintainability and readability of the code
added a new method to convert objects to Mongo types and updated related classes to utilize the ` TypeInformation ` parameter for type handling to enhance flexibility in type conversion and ensure correct handling of null values
apps - 2937 : display italic ' i ' for imaginary part of geogebrabra + use unicode . replace ( # 2937 )
fix sendingkeys to active element now handle empty key correctly ( grid : 2 )
added functionality to generate and scale a scaled image with specified dimensions in AddAndScaleMultiImage . java to enhance image manipulation capabilities by ensuring required dimensions are validated and processed correctly
removed deprecated methods and refactored the engine handling in DBMaker . java to streamline code by eliminating unused functionality
on keyboard layout switch , re - query ic for shift state . issue # 383
removed the DETECTED _ ACTIVITY constant and related methods related to activity detection to streamline the management of activity detection and improve code clarity
move extensionconfig out of . extensions and into . protocol package for consistency
replaced import of Buildable in AaptPackageResources . java to streamline dependencies and improve code clarity
added comments to clarify usage of unused constants across multiple files to improve code readability and clarify the purpose of unused variables
improve error message to show status code of the websocket upgrade failure
fix a syntax error in parsemode ( ) in p11cipher .
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
removed duplicate permission check for plot ownership to streamline code to enhance readability and maintainability by eliminating redundancy
removed deprecated getConversationID method implementations across multiple classes to clean up code and improve maintainability by eliminating unused functionality
remove dependency on sun speech . freetts , fix the test
refactored stripQuotes method to use PlanUtils for better handling of quote stripping to improve code maintainability and reduce redundancy in string processing
refactor rendering methods and update variable names for clarity to improve code readability and maintainability by consolidating rendering logic
added a list of remote artifact repositories to the DefaultPluginManager to ensure all relevant repository are included in the plugin configuration
camel - 3656 fix the test failure on the ci - server .
doc : add javadoc since tag for physicsclient
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable frequent test failures due to frequent failures
added a new File object instantiation in the ZipFile class to enable file handling based on the provided name parameter
added a deprecated method ` handleAll ( ) ` in the ` TryType ` class to indicate that the method is outdated and should no longer be used
change the default channel ' s uid to not be a final field ( # 2184 )
added a utility method to log the stack trace and refactored existing code for better readability to improve debugging capabilities by providing clearer visibility into the call stack trace
added a test annotation to the FormLoginIntegrationTests class to ensure proper test execution for integration tests
fix ( griffin ) : unparselist inside fundefbase should not add parentheses
refactor the query to include cluster names in a Multimap and improve error logging for better clarity to enhance the handling of cluster configurations and ensure clearer error messages for better debugging
renamed ` supressWarnings ` to ` suppressWarnings ` and added conditional addition for specific Java versions to improve code clarity and ensure compatibility with Java versions below 11
lucene - 7416 : improve error message when jsontreereader throw illegalstateexception ( # 734 )
added a new option handler for additional arguments in TestCommand and implemented a test case to handle unexpected arguments after external runner usage to improve command execution clarity and ensure proper error handling when external runner is used
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to enhance Solr document management by allowing configurable parameters for URL and segments
[ flink - 31245 ] [ table ] add planner parameter to streamsqlexample ( # 11393 )
added a call to ` clearDatabase ( ) ` in ` MssqlIntegrationTest . java ` to ensure the database is cleared before tests run
fixed an issue with r reader and make it disposal of the progress button .
added a check to ensure the parent directory exists before proceeding to prevent potential null pointer exceptions when accessing the parent directory
add apis to ioutils that wo n ' t close a document .
change output formatting for runOptions and exportClassPath in JavaBuild . java to improve readability of output for better debugging
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for ` getDotsPerPoint ` to improve data encapsulation and provide access to the ` _ root ` and ` dotsPerPoint ` properties
added a new generic user search feature for LDAP authentication in CustomQueryFilterFactory to enhance the flexibility of user search operations and improve error handling during authentication
centralize default port to 2 ( the server can not determine one )
[ snmp ] update thing status to online after setup ( # 9336 )
[ # 8540 ] instructor : edit session : only show instructor with submit permission ( # 8541 )
added an @ Incubating annotation to the AvailableSettings class to indicate that the class is outdated and should no longer be used in future development
fileresolver should not resolve dotfiles end with ' . jar ' suffix ( # 1365 )
added include docstores to newflushedsize log message when flushing
fix libtorch . dirt print wrong value in mod . dirt .
fix imageprocessor blank screen when strip white space .
increased the number of locks used in FeedRefreshUpdater from 1 to 1000 to improve thread management by allowing for a longer wait time before the lock
fix ( sql ) : fix measurementchunkmetadatalistiterator miss some assertion ( # 2846 )
[ beam - 8470 ] remove useless parameter ` dateformat ` in csvsaveservice # makeresultfromdelegatedstring ( )
set the preferred size of the pane in the NavigationShareTab to ensure the pane displays the correct width and height of the pane
updated BeiderMorseFilter to replace OffsetAttribute with a State for better state management to enhance code clarity and ensure proper handling of custom token attributes
updated multiple UpnpHandler and UpnpAudioSinkReg classes to improve code consistency and clarity in naming conventions
fix block pass to burst . setcollidedat in forge , close # 3158
updated JsonTest and JsonTestFactory to use JUnit 5 annotations and improved test structure to enhance code readability and maintainability while ensuring proper exception handling during JSON serialization
[ hotfix ] [ core ] fix checkstyle violation in mutablecontextdatasupplier
change exception handling from catching Exception to catching Throwable and log warnings to improve error handling to capture a broader range of errors during log loading
updated KubernetesMockServer to use HTTPS instead of true in KubernetesServer . java to enhance security by enabling HTTPS for the Kubernetes server
[ gr - 34799 ] fix intrinsification of math . foreigncall ( ) .
updated HTTP method handling in DefaultServlet to support multiple OPTIONS requests and modified response status assertions in DefaultServletTest to enhance response functionality by enabling POST requests and ensure correct response status management
tika - 3226 -- fix locale - dependent tika lookup in tika - extractor .
updated error handling to return a response instead of throwing exceptions and added a new test for 404 scenarios to improve error reporting and ensure proper response behavior for non - existent files
added support for handling Java exceptions in ReflectorClassWriter and created a tryCatch class to enhance exception handling capabilities in the Reflector framework
added a clamp method to the Vector and Vector2 classes to enable clamping of vectors based on specified min and max values
added scope handling for incoming token in ChainedTokenGranter . java to ensure requested scopes are set correctly for improved access token management
updated the method name from BC _ instanceof to BC _ instanceof to improve clarity and maintainability of the code
remove setsaveflags ( ) and add log for EditorBottomSheetBehavior
updated UaaUrlUtilsTest to use JUnit 5 annotations and integrated PollutionPreventionExtension to enhance test structure and maintain compatibility with updated testing framework
hhh - 16333 : fix classcastexception that occur during query compilation when the return type be basicdomaintype
added caching mechanism for font anti - aliasing information using WeakHashMap to improve performance by avoiding redundant calculations for previously checked fonts
change TypedSet to use IntArrayList instead of IntBigArray for block position calculation to improve performance and memory efficiency when handling block sizes
simonstewart : fix for issue # 170 - jasonleyba : update the remote driver to the new version .
[ hotfix ] [ javadoc ] fix typo in brokerrequestutils javadoc
refactor InjectorBuilderImpl to use a map for instance creation and adjust instance mappings based on correct order to improve clarity and maintainability of the code when handling injectable objects in the order
updated the method for creating an RawTargetNode and BuildTargetToRawTargetNodeTransformer to use base paths instead of absolute paths to simplify path handling and improve code readability
make parse an empty message for a miss message optional , close # 851
fix possible memory leak . report by coverity
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to correct the initialization of the load factor for improved accuracy
added a method to retrieve all data types physical names and updated related classes to use this new method to improve the handling of data types for better clarity and maintainability
move stringsresourcetranslator and htmlassettranslator into zxing client module .
updated vertical bar layout condition in OverviewState . java to ensure correct button behavior when the shelf is removed from the overview
added JPA Entity annotation to BaseActivityEventEntity class to facilitate entity persistence and retrieval in the application
added TraceHelper imports and modified SYSTEM _ TRACE flag in NavBarSwipeInteractionHandler and TouchInteractionService classes to enhance debugging capabilities and manage system tracing more effectively
added a new file ` InvalidOptions . java ` with methods to test and verify error handling of invalid options to ensure proper functionality and error reporting for invalid options in the Java program
added logic to log incorrect number of displays in DisplayController . java to ensure consistency between display states and supported bounds during updates
refactor OAuth20UsernamePasswordAuthenticator to move the method ` getClientIdAndClientSecret ` to ` OAuth20Utils ` and update its usage throughout the class to streamline code structure and improve maintainability by centralizing client ID and secret extraction logic
fix test : set error handler to unwrap servlet exception by default
set status of shortcutinfo . default to shortcutinfo . default when none of the package be update
camel - 14263 : fixed seda endpoint error with default unbounded queue size .
make sure batch update be start / end before show batch ( fixes # 3756 )
add apache http client to ` scb - easyapplication ` ( # 4043 )
added sorting functionality to the JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enhance data retrieval capabilities by allowing dynamic sorting of job instances
modified CryptoFacilitiesTradeService to adaptCryptoFacilitiesOrder to currency pairs instead of throwing exceptions to improve order cancellation handling by allowing full order cancellation instead of throwing an exception when no currency pairs are available
make sure keyboard be close when click on algebraview web . ( # 4877 )
use functionhandle instead of direct access to memcopy in presets for aarch64
refactor the code formatting for the ` authenticateUsernamePasswordInternal ` method and its test execution to improve code readability and maintainability
try to fix # 2560 ( block tool tooltip )
updated DefaultDateTypeAdapter to accept configurable date style and time style in GsonBuilder to enhance flexibility in date formatting options and improve adapter flexibility
updated the playerSet string format from " < UID : " to " ( " to improve readability of the displayed identifier in the playerSet
added a check for empty lists in the List class to ensure safe handling of empty input scenarios
added exception handling for CommandException in ParametricCallable . java to improve error management by converting InvocationTargetException to CommandException
modified the ` getLikeExpression ` method to include a boolean parameter for different UDFRegExp types to enhance functionality to support regex expressions in the vector expressions
added start and stop methods to StreamSupplierComponent and NativeSupplierComponentImpl classes to provide a standardized way to start and stop stream suppliers in the application
refactor runChild method to include listener and locale handling to ensure locale consistency during child execution for tests
doc : replace < tt > tag ( # 1800 )
refactor context handler initialization into a separate method to improve code readability and ensure proper context handler retrieval
camel - 9274 add camel - test - blueprint to verify route builder be use and not only when use camel blueprint .
nifi - 8373 : fix jetty testexecutionerror attribute check .
refactored return type substitutability methods and updated logic for handling covariant return types to improve type safety and ensure correct handling of covariant return types
add throttletype enum to allow test to specify where char or byte be expect to be send
fix issue with spritebatch and colorbleedeffect that cause argb to not be set properly .
updated annotations in mmm Annotation . java and mmm AnnotatedElement . java to improve code consistency and maintainability
added a new interface ` Model ` and removed the ` extend ` of ` Sheet ` and ` Workbook ` classes to implement the ` Model ` interface for better functionality and flexibility in handling Excel files
camel - 8126 : optimize headerfilterstrategy to let the code apply the patch .
added a ` clearEntityManager ` feature to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` to allow configuration of the clearing of entities in the item writer
added null checks for shortcut information and toast messages in the InstallShortcutReceiver and Launcher classes to improve stability by preventing potential null pointer exceptions when handling shortcuts
fix for issue 62 : 2ddeddimensionalcollectionValuedmap initialization should be set to true
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange being used in the application
added null checks for column readers and readers in OrcEncodedDataConsumer and ensured safe buffer setting in EncodedTreeReaderFactory to avoid potential NullPointerExceptions during processing
added a null check for files in SegmentInfos and implemented a test for opening a reader after deletion in TestIndexReader to ensure that an appropriate exception is thrown when no segments are found and verify that the IndexReader can open without deletions
[ flink - 29892 ] [ test ] fix invalid configuration for hsearch endpoint and elasticsearch test
[ pytorch ] fix negative value when get density ( # 12490 )
- fix issue where rangereader . nextvalue ( ) and rangeinputstream . read ( ) return - 1 when the limit be less than or equal to 1
camel - 17000 : camel - jbang - should log timing when load route .
improve position calculation in hlchunksource for good accuracy .
updated test classes to use LuceneTestCase instead of TestCase and modified imports for NumericRangeFilterBuilderCase and NumericRangeQueryBuilder to improve test organization and align with LuceneTestCase structure
[ flink - 23737 ] [ stream ] fix statefulmapper so operator can be test in checkpoint
shader tiling : add tile to shaders for line ( thanks maki ) , remove unneeded null check
remove dbexists logic , a now rely on the dependency injection for blockdb
added trimming of whitespace from the matched string in SQLPlusSupport . java to ensure clean output without leading or trailing spaces
fix keep - alive break by connector refactoring
ticket # 3705 : right alignment of divider after resize , so it wo n ' t hide it
add health check response metric ( # 1846 )
hide the sharedavatars view from the local file list adapter to improve user interface by hiding unnecessary content
[ web ] scss instead of bundle in mebis resource ( work in progress )
[ java ] fix argument length check to be less than = = for archive .
add log level check to loginterceptor execute ( ) method
replaced CountDownLatch with assertWaitUntil in EventBusTracingTestBase . java to simplify span verification by directly checking for finished spans
added locale initialization and modified QueryParser constructor for locale handling to improve code clarity and ensure consistent locale handling throughout the parser
fix # 4267 : ` ` all entry type ' ' and ` ` map ' ' field for bibtexkey
jbrules - 384 : fixing bug in builder . addcolumn ( ) when use BetaNodeConstraint
pdfbox - 3017 : introduce ocsp responder to handle unauthorized response + improve javadoc
added serverState variable and modified control flow for server failure handling to ensure proper synchronization and error management during server state transitions
added a new counter for open connection count and associated methods in SourceCounter . java and AvroSource . java to track the number of active connections effectively within the application
added ability to set field definition in interface ( # 2906 )
refactor ` createDefaultJavaPackageFinder ` method to return a set of source root names instead of storing their paths to simplify code structure and improve readability by separating root retrieval logic
replaced the Writer initialization with a PrintWriter pattern to improve logging capabilities for better output management
[ flink - 22288 ] [ test ] do n ' t reuse the same file object in this test for other test
added support for DataTable in JRuby step definition to enhance the functionality of the JRuby step definition to include runtime data
updated visibility settings for the author field and modified the search API logic to utilize custom results from the new generator to enhance functionality and improve image processing capabilities
add some comment to readsentimentdataset to document that it ' s clear that it ' s a sample from the mail list
improve error message if a parse error occur near char of a formula
added socket address handling methods to WebSocketClient . java to improve connection management and allow for dynamic binding of socket addresses
[ java ] delete archive directory before delete cluster resource in consensusmoduleharness .
replaced manual width and height setting with a unified setSize method to simplify code and improve maintainability by reducing redundancy
changed sessionFixationAttribute comparison to use Boolean . valueOf for better null safety to improve code reliability by preventing potential NullPointerExceptions
add digital channel mode parameter to start one channelLA ( # 2241 )
danielwagnerhall : re - add the ability to clear the backoff when the chrome thread get close .
added HTTP route support to TraceExchangeFilterFunction and updated ClientResponseWrapper constructor to enhance traceability by allowing the use of specific HTTP methods and routes
fix potential npe in precompactedrow . compact ( )
updated the rendering intent return value and simplified color conversion logic to enhance reliability and readability of color conversion operations
add ` ` isnotsure ' ' option to contribution question ( # 3906 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ` and added multiple calls to ` PublicMethed . waitProduceNextBlock ` to ensure proper synchronization of block production and improve code readability
remove serializable and add findbugs suppression for kafka record
added support for PGConnection in PooledConnectionImpl and created a test for PGConnection in BaseDataSourceTest to enhance connection handling capabilities and ensure proper functionality of PGConnection
refactor PropertyTable and CloseIgnoringInputStream classes for improved readability to enhance maintainability and clarity of code structure
updated logging messages for missing token encryption secret and changed warning to info level to improve logging clarity and provide more informative messages for debugging purposes
remove deprecation in hazelcast . getinstance ( ) ( # 2595 )
added topology update event handling and improved error reporting in the Ambari management controller and server actions to enhance error reporting and ensure proper topology updates are sent during Kerberos deployment
lucene - 6379 : improve namedlistcodec to support reading over an iterable
assign lost partition owner to state if assignchangelisteners be call without exception
added InclusionRule import and configured schema in ApiExample . java to enable public schema inclusion for better documentation and usability
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to ensure accuracy of the comparison between mean and var values
fix for geot - 5236 : ensure valid ring when create sDO object
add methods to retrieve base name and dimension count from ConstantPool to improve functionality for managing resource management in the Constant Pool
patch from josh from bug # 44694 - add setter for debugevaluationoutputfornexteval ( )
test : migrate refactoringtest to junit 5 ( # 4731 )
do n ' t use the exoplayerprofile when open the video player .
added a return statement to the DynamicStyleBar class to improve function exit point clarity and prevent unnecessary processing
added logging statements for setting and resetting properties in Repl dump to enhance debugging capabilities by providing detailed context for database operations
refactor ReactiveAuthorizationManager to improve code structure to enhance maintainability and readability of the code
added handling for boolean types in MethodEmitter to ensure proper assignment of strings for boolean types in the method
[ gr - 38791 ] rename llvmobjectnuller to llvmaddressnuller to avoid nullify issue .
refactor multiple Java classes to improve code organization and readability to enhance maintainability and facilitate future development
add miss test for caffeine - cache proxy ( # 3944 )
[ add ] mesh . calculatebounding ( ) to create a bounding box from multiple vertex .
add -- target - hash - function option to determine hash
[ hotfix ] [ doc ] fix typo in defaultconfigurationproperties javadoc
added highlight color settings and modified highlight color in ListViewMultiChartActivity and BarChart to improve visual clarity and enhance highlight functionality
added a mapping for temporary pgSgPathPlanMap in the ClusterPlanRouter to enhance clarity and maintainability of the code
( chore ) camel - infinispan : adjust integration test due to supertype change
added file locking mechanism and modified artifact fetching logic in MavenArtifactFetcher and MavenDependencyResolver to ensure proper handling of file locking and improve artifact fetching reliability
added conditional compilation for fragment shaders in SpriteBatch . java to ensure compatibility with OpenGL ES by properly defining shader properties
hbase - 27566 rsgroup . getservers ( ) return SortedSet instead of set to avoid concurrentmodificationexception .
added a loading mechanism for the JspPage class and modified log level from warn to debug to enhance security and improve log readability during TLD processing
added a default match version handling and a test for version - aware token filtering in CustomAnalyzer to ensure consistent version analysis and improve test coverage for version - aware filters
added a test for retrieving application info from package archive info to ensure that the method correctly reads values from package archive information for testing purposes
replaced direct method invocation with MethodUtil . invoke for consistency and access control to enhance method access safety by utilizing ReflectUtil for package access checks
added imports for ProjectConfigurationStartEvent and TaskStartEvent , and modified the progress listener to include additional operation types to enhance functionality to track and manage progress updates based on operation types
removed synchronized block from AndroidWebDriver . java to improve performance by reducing unnecessary synchronization
move initializationfailtimeout check into first place ( # 1600 )
updated method signatures and added a new method ` error ` in the Net class to improve method clarity and enhance HTTP request handling
change the transient field of the ` isNative ` field and update its usage throughout the ` addEntry ` method to ensure the ` isNative ` field is transient and consistently used in the method signature processing
style : fix checkstyle violation in centrypointcallstubmethod . java
change ' rule enablehandler ' to ' ruleenablementactionhandler ' ( # 3588 )
fix javadoc warning that be find by checkstyle
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager for better clarity to improve debugging by providing more detailed context during authentication requests
[ flink - 24205 ] [ test ] fix name of option and source / sink options in test
added null check for repository before checking its ownership to improve error handling by logging failure when the repository is not found
added support for parsing font names with extensions . otf and . OTF in addition to . TTC to improve compatibility for various font file formats
findannotations support partial - path annotation matching ( fixes # 303 )
report 500 error a " SEVERE " rather than " OFF " for a failure response
changed debug logging from direct string concatenation to a conditional check before logging messages to improve performance by avoiding unnecessary string concatenation when debug logging is disabled
surefire : fix issue where exclude list can not be null
added a condition to check if the default screen should move to the default screen on the home intent to improve user experience by ensuring the default screen can be moved to the default screen
updated maximum bitrate from " 110 " to " 30 " in the configuration to enhance bitrate flexibility for better performance
remove the duplicate option retrieval from the CommandLineParser to simplify code and improve performance by eliminating the redundant method
trim whitespace from the description returned by the MutableDatabaseProperty to ensure consistent and clean representation of database descriptions
simplify the output filename assignment in XOMParserTest . java to improve readability by using a simpler filename format
remove redundant ` ` process . pid ' ' in processrunner error log message
added methods to retrieve music and sound in MusicLoader and SoundLoader classes to improve accessibility for music and sound loading functionality
updated type casting for ` value ` in ` OnBeanCondition . java ` to ensure proper type safety by removing unnecessary imports
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for test case reliability during tests
fixed an issue where cpufeatures would n ' t be select when select a pause button .
update theme : mention mention of add account in menu item , and fix style issue
fixed bug where presence packets lose due to roster be create too late .
updated StringBuilder initialization in ObjectInputStream to use a calculated initial capacity based on utflen to optimize memory usage by initializing StringBuilder with an appropriate capacity when possible
disable statsd integration test by default
refactor InterruptedException class to improve code readability to enhance maintainability and facilitate future development
updated ServiceTicket class to improve functionality to enhance service management efficiency and responsiveness
refactored connection handling in ConnectionCheckOperation . java to streamline SSL connection checks to improve code readability and maintainability by reducing redundancy
int - 1932 fix argumentarraymessagemapper to correctly support map input
[ ds - 3762 ] fix for can not add a parent object for collection itemfilter plugin
set the activity flag to recreate instead of adding it to the list to ensure that the activity is reused instead of relying on the previous activity
refactor : remove deprecation ` @ deprecate ` from patternparameterparameterconfigurator ( # 2638 )
fix crash when launch all apps which require widget to be load ( issue 6287069 )
updated TestPackedInts . java to include an import statement for LUCENE - 4488 to disable tests due to known issue LUCENE - 4488
added a null check for the root variable and collected components using collectComponents to ensure proper handling of null references and improve component collection efficiency
tagger : write confusion matrix in debug mode
bug 53782 - only display warn message when the ` ` no sampling be need ' '
added unit tests for Bluetooth headset connection states to ensure correct functionality of device states in the Bluetooth headset
camel - 7999 : fix typo in property bind support ( # autowired )
added " clone " to the list of objectMethods and introduced a final method constant to enhance functionality and control over the object methods during lazy loading
hbase - 27334 add guard for spurious test failure due to insufficient yarn configuration
reply with error code when no valid instance info can be resolve
updated the filter parameter in setRegisteredServiceFilter method to use serviceId instead of a registered service to enhance the flexibility of the service registration process
added a null check for getActivity ( ) before executing the UI runnable to avoid potential NullPointerException when accessing getActivity ( )
rename ` ` LOGGER ' ' to ` ` logger ' ' throughout the code .
added a stringType property and corresponding getter and setter methods to the DatabaseAdaptor class to allow subclasses to access string types for better flexibility in database interactions
updated the UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " and modified the test method to throw an ` Exception ` to improve test accuracy and ensure proper handling of exceptions during updates
refactor thread name handling by introducing updateThreadName and resetThreadName methods to improve code readability and maintainability by encapsulating thread name updates logic
refactor TaskletAdapter . java for improved code organization to enhance maintainability and readability of the code
drools - 22200 dmn : dmn can not handle ` ` - 1 ' ' output ( # 2469 )
[ fix ] texturemap : flush all texture map on macos ( # 4177 )
added tooltip text for the showCGCP checkbox to improve user experience by providing context - sensitive help
fix # 1489 : fix declaration created by factory method ( # 1489 )
add support for auto reload action ( # 4698 )
fix for spreadsheet column name ( use stringtemplate instead of label simple )
fix wrong bRIGHTNESS _ FACTOR due to integer division
fix # 2090 : strip ' add to branch ' from history entry ( # 2081 )
added an optional isAdmin parameter to the createUser method and implemented listUsers methods to enhance user management capabilities by allowing admin users to list users and users
added return type checks and improved type validation in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created a new test class to ensure correct handling of return types and validate functionality through testing
clean up extra logging in dynatraceexporterv2 ( # 2653 )
modified method signatures in Context . java and Response . java to improve clarity and consistency to enhance code readability and maintainability by using more descriptive parameter names
update spongecommon for the new setcapabilities method introduce in itemstack .
[ netbeans - 5958 ] fixed unit test that be fail on oracle .
added validation for contract types and modified contract retrieval logic in Wallet . java and GetContractServlet . java to ensure only valid smart contracts are created and processed correctly within the application
added multiple package - info . java files for Image , module - info . java , and com . ibm . dtfj . runtime to provide package metadata and module metadata for better encapsulation and organization
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to improve concurrency handling to ensure thread safety during the insertion of nodes in the tail queue
updated JavadocTool to handle duplicate JavaFileObjects using a HashSet to improve efficiency by preventing unnecessary parsing of duplicate files
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to ensure that IPv6 addressing is not interpreted as a valid host address
updated ` LoginServerTokenEndpointFilter ` to accept a list of parameter names and modified the constructor to handle multiple values for user parameters to enhance flexibility in user authentication handling within the login process
fix a bug in cpd ' s c / c++ parser so that it no longer fail on multi - line literal ; thx to tom judge for the nice patch .
replaced the existing ThreadPoolExecutor implementation with a new instance of MoreExecutors utility to simplify thread management and improve code maintainability
added cache control headers and expiration handling in FormAuthenticator . java and ConstraintTest . java to enhance caching behavior and ensure correctness of login responses
print the exception message to the console in case of an error
fix some spurious unit test failure when save an empty document
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
fix npe in testcommand when no output file be find
added access controller settings for the Java2D renderer to manage resource control more effectively during the rendering process
added exception handling for drawing graphics in TestTriggerCoverage . java to ensure tests are skipped on Windows fonts to avoid failures caused by JDK issues
modified variable and method visibility and introduced CPU time testing logic to improve thread CPU time validation and enhance error handling
tabsandindentsvisitor conditionally add space . getcomments ( ) to ensure that space do not contain comment .
updated logging statements in SimDistribStateManager and modified assertions in TestTriggerIntegration to improve logging clarity and ensure rate values are greater than expected
updated string comparisons to be case - insensitive in various classes to improve consistency and avoid potential issues with string comparisons
added a method ` getString ` to return a default string value from the map to improve flexibility in retrieving string values while providing a default fallback
updated date and time formatting in TweetActivity to support locale - specific date and time display to ensure consistent date and time display based on user preferences
nifi - 7262 : return an empty list if there be no connection to close before close the connection , otherwise the connection be re - opened .
fixed keyboard and note mention in notefragment ( fixes # 688 )
another attempt at fix the classpath issue on window for tools . jar # 718
add solve to coordmatrix , only create new matrix if need
moved genericmessage to a separate library to avoid circular dependency
mapreducejobhistoryupdater only fetch complete job when delete task on postgres
update file filtering logic in AquaFileChooserUI to ensure selected filter is valid to improve user experience by preventing invalid file filter selections
fix wrong synchronization ( wrapup be read - only )
correctly handle java . lang . boolean in arrayptg . toformtring , see bug 45380
fix : migrate to pgtokenizer 2.11 ( # 4568 )
refactor variable handling in Java2TypeScriptTranslator and add tests for anonymous class handling to improve type translation logic and ensure correct handling of anonymous classes
added support for auto - increment columns in PostgreSQL by introducing a sequence statement to ensure compatibility with PostgreSQL when automating auto - increment functionality
update byte reading logic to use bitwise operations on the byte value to ensure correct handling of byte values within the data input
tmi - core : fix unit test for metadata handling of height and horizontal physical pixel space .
updated the parent component retrieval to ensure the correct parent component is referenced in the component hierarchy
refactor import statements and improve code readability in various Liquibase classes to enhance maintainability and clarity of the code
fix ( core ) : use engine _ free instead of engine _ finish
[ java ] move iteration event handling to controller and invoke it listener when the controller loop should be stop .
fix connection leak relate to httpcontent ( # 4569 )
added a call to deleteLogs ( ) in TestRecovery . java to ensure no logs are deleted during the recovery process
added a check for " twitter : / / " URLs before loading the web view to enable navigation to other tweets and improve user experience
fix flaky test . wait for all client to shutdown before start the group test .
fix visibilitycontroller log - result ( true , false ) when
attempt to fix test failure on ci server .
remove debug system output from TranslatorSupportTest . java and add miss @ Override annotations in StandardTypeMapperComponent . java to improve code clarity and ensure proper method overriding
added support for parsing fraction values into resource resources and created a corresponding converter class to enable accurate representation of fraction values through resource management
8044486 : remove bogus confirm return value from filehelper . confirmwrite
respect tag groupId and artifactId from resolution result to ensure required arguments are not null before proceeding with dependency version resolution
hbase - 10213 namespacestatemanager # listtablesandoperator should check the table ' s max number of table to be valid after namespace check ( huaxiang sun )
refactor multiple attribute classes for consistency and clarity to enhance maintainability and readability of the codebase
8230813 : add jdk - 8010500 to compiler / loopopts / superword / testfuzzpreloop . java bug list
fix round error that raise vacuency for negative number
updated logging statements in SchemaRetriever and added null checks for pkColumn and fkColumn in TableRetriever to improve code robustness and prevent potential NullPointerExceptions during table retrieval
remove unnecessary clearencoders / clearencoders . put after add a charset listener to the inputbuffer .
added SharedPreferences functionality to manage empty pages based on user preferences to enhance user experience by allowing users to skip empty pages easily
add warn on deprecated cucumber - needle use with cucumber - cdi2
refactor theme handling in ShadowThemeTest and ShadowArscAssetManager to improve object management and style application to enhance code clarity and functionality by ensuring proper theme resolution and object management
updated error messages in VerifyFast . java to use ` Arrays . toString ( ) ` for converting arrays to strings to improve readability and clarity of error messages for better debugging
# 2604 - delete unused migration for ehistory2 . update ( # 2604 )
updated property handling and made getter and setter methods public for prototype functions to enhance flexibility and accessibility of prototype property functions in the scripting framework
added a randomness parameter to the shuffle method for readers to enhance variability in the randomness of the readers during testing
updated displayName assignment logic in UsersAndGroupsSearchProvider . java to handle user sharing scenarios to improve clarity and user experience by providing more relevant user notifications
updated the path formatting in CookieRetrievingCookieGenerator to handle null values and ensure a default path is used when blank to improve robustness of path handling in cookie retrieval
add miss javadocs to ` ` jvm jvmjvmscriptmodel ' ' and ` ` vmjvmjvmstatmodel ' ' ( # 13566 )
use total backup count to check backup count against actual backup
pdfbox - 4892 : take pageid into account when validate
added a condition to check if the focused widget is different from the highlighted index to ensure correct identification of the focused widget in the UIDropdown class
fix checkstyle issue in util / soundutil . java ( # 721 )
updated ` ApplePackageDescription . java ` and ` AbstractKnownBuildRule . java ` to enhance the handling of platform flavors and improve code clarity regarding the use of ` FlavorDomain ` and ` AppleCxxPlatformsProvider `
add test for highlighting of type name and type in sql statement
changed method names from onConnect to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory to improve clarity regarding session acceptance rather than connection handling
rename EnglishPTBTreebankCorrector class for clarity to improve code readability and maintainability
8029876 : add a test to verify that logger . getlogger & logmanager . getlogmanager do not throw npe when system . out = = null
added a data field in PathSharingContext and modified sharedMap initialization in ActionDirectory , ScriptedProcessor , and ScriptedDecideRule to improve data handling and eliminate redundant shared map instantiation
[ gr - 34299 ] modification to the test suite to support compilation during test .
added next value pattern support to the NextValExpression class and updated related methods to enhance expression parsing flexibility by allowing ' NEXTVAL FOR ' values based on the pattern
add link to graalvm documentation for non - pre - cached resource .
updated expiration handling in BoundedLocalCache and added a new test for pending writes in BoundedLocalCacheTest to improve cache efficiency and ensure correct cleanup of pending writes
added exchange - specific parameters for Leverage _ Level in QuoineExchange and implemented order direction handling in QuoineNewMarginOrderRequest to enable dynamic configuration of the order direction for improved user experience
added boundInitialization method and a new test class Test7192955 for property binding validation to ensure proper binding of properties in bean classes and validate functionality through unit testing
replaced ` failsafeWidth ` and ` failsafeHeight ` with ` SetDisplayModeCallback ` in ` LwjglGraphics ` to enhance display mode configuration flexibility and improve error handling
fix issue with release button in tabs
fix linecell height calculation when wrap be empty
cas - 1334 : fix typo in an exception message
updated the declaration of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper . java ` and ` CustomPreconditionWrapper . java ` to ensure the order of the parameter values is maintained
replace string concatenation with String . format for string concatenation in multiple classes to enhance code readability and maintain consistency in string representation
updated the method for retrieving the namespace URI by removing unnecessary namespace context retrieval to streamline the namespace retrieval process and improve code clarity
enable nested join option by default for now
cloudstack - 4987 : root admin should allow root admin user to change listall = true
added caching for JavacFileManager and updated CompletionTaskProcesor constructor to include a cursor parameter to optimize compilation performance by ensuring only necessary Java files are cached
added configuration for Hive metastore URIS and Hive authentication manager in TestMsgBusConnection to ensure proper setup of Hive security settings for the Hive application
[ beam - 4099 ] replace assertthat with assertthat for java 8 compatibility
made outputHandler nullable in MetadataRenderer and TextRenderer classes and updated their constructor calls to improve code clarity by explicitly indicating that outputHandler can be null
fix ( symbol _ map ) : offset bytes should be align with actual size ( # 1451 )
removed debug print statements from TermFilterTest . java to clean up the test output and improve readability
deleted the Reflection . java file and TypeConverters . java files to eliminate unused reflection - related code to streamline the codebase
added getter and setter methods for ` finished ` and ` waiting ` properties in ` ThreadlessExecutor ` , and updated the usage of ` ExecutorService ` in tests to improve encapsulation and simplify thread management
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter and added a test for a specific exception case in TestDateTimeParsing to improve error handling robustness and ensure proper exception throwing during date formatting
remove double conversion to string , add readability
added a WILDCARD case to avoid crashes and created a new class T7034495 with multiple interfaces to addresses issue 7034495 to enhance type safety and prevent runtime errors
fix event loop ( loop should not close on close )
hive - 10598 : include all response type in exclusiondecidetule ( jesus camacho rodriguez , review by gopal v )
do n ' t print micronaut version a we do n ' t want it
added assertions to verify that new _ sheet names are correctly retrieved and validated in TestBugs . java to ensure accuracy and correctness of name records in the HSSF formula implementation
update MindIcon to handle paths with leading slashes in names to ensure proper description formatting for MindIcon instances
updated the onHomeIntent method to accept a boolean parameter indicating the state handled to enhance the method ' s flexibility by allowing the invocation of onHomeIntent with specific intent parameters
replaced direct calls to ` getPreferDependencyTree ( ) ` with a boolean variable ` preferDependencyTree ` to improve code readability and reduce repeated logic
added functionality to show detailed file details across multiple activities to improve user experience by allowing dynamic tab management based on the active active tab
removed ` $ apply ` method from ` FinalVariables ` and ` SpecialFunctions ` to simplify function naming conventions and improve code readability
added randomization logic for byteal sizes and updated test assertions to accommodate larger data sizes and ensure correct test coverage
camel - source : add support for negate since / since value in header .
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure data updates are accurately reflected in the UI
removed the static method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to allow configuration of the WAL sync mode
update type checks in RemoveJavaDependenciesAdapter and add assertions in Collections to ensure correct type handling and validate the removal of elements from collections
remove unnecessary getter method from aws crt - based s3 client ( # 2763 )
fix test for incorrect stream - out of bound error message .
small fix in hazelcasttestsupport assertion to print the actual content
re - enable the branch creation if the branch creation succeed .
wly - 129 [ web ] fix npe at create external image in some case , but do n ' t create a new one
refactor SQLXML class to improve code readability to enhance maintainability and ease of understanding for future developers
added a limit parameter to the getOrderBook method and modified its implementation to allow retrieval of a limit of the order book based on a specified limit
replaced the exception class ` GotWrongOOMEException ` with ` HeapOOMEException ` and updated relevant imports to align the exception handling with the new heap organizational structure
nifi - 7266 : ensure that dataflow . stream ( ) . read ( ) constraints be not limit to integer . max _ value
modified the retrieval of the engines configuration by initializing it directly from the string to avoid potential null pointer exceptions when accessing the configuration
rename ` FullIterator ` to ` WheelIterator ` and update related method references in ` TimerWheelTest . java ` to improve clarity and consistency in naming conventions
do n ' t crash if a bug pattern can not be find in the doc .
increase timeout for localchunkprovidertest . testready ( )
changed the visibility of the uncomplete checklists menu item from true to false to disable the visibility for uncomplete checklists in the user interface
updated the handling of nested result sets in DefaultResultSetHandler and added a new Contract class to enhance functionality and ensure proper application of nested result sets with the appropriate constructor arguments
added null check for defaultHome and updated receiver unregistration logic to improve robustness against null pointers and ensure proper cleanup of receivers
added VertxGen annotation to PumpImpl . java to enable the use of Vert . x code generation for the PumpImpl class
removed unnecessary casting to FileDisplayActivity when calling sendDownloadedFile method to streamline code for better readability and performance
added trimming of whitespace to the token in ConfigAttributeEditor and created a test for trailing and leading spaces to ensure correct attribute retrieval by removing leading and trailing spaces
renamed classes and methods related to auxiliary to improve clarity and maintainability of the auxiliary class code
[ gr - 35611 ] make dynamicHub . singlemodulereference public .
modified the way database tables are determined by introducing a condition for " SYSTEM TABLE " to ensure correct identification of database tables based on the type of database
deprecated the old TIER _ ENTERPRISE _ PLUS _ VALUE constant and updated its usage in the AgentProto class to remove outdated references and maintain compatibility in the codebase
updated the default value of the RQST field DESC from - 1 to 1 and modified the corresponding cases in the ThriftHiveMetastore . java and HiveMetaStore . java classes to correct the case handling for RQST values and improve code clarity
added a new module - info . java file that defines and exports core components to establish modularization and encapsulation of the core class
modify flush state management and fill state conditions in SslConnection . java to enhance connection handling by ensuring proper flushing and filling state management
updated Log4j2LogDelegateFactory to improve logger initialization checks and introduced a new NoExceptionInInitializerErrorTest class to enhance error handling and ensure proper logging behavior in the application
updated ExecutionEnvironment to use boolean flags for server and client VM and modified test execution logic to ensure compatibility with Solaris and improve test reliability
refactor ExecutableFindOperation , MongoOperations , ReactiveMongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to the PGProperty class to support SSL driver functionality in the application
disable testinterprocesssemaphreads for now until fix
sort the theme keys before iterating over them to ensure consistent ordering of resource names for better user experience
added a new class ` OSvTerminal ` and updated ` TerminalFactory ` to handle OSV environments to enhance terminal support and support for new operating systems
added support for additional file extensions " . gr " or " . grs " in the ClassType validation to ensure compatibility with additional file naming conventions
replaced HashMap and ArrayList with TreeMap for combinedVectors and combinedVectors to ensure ordered iteration order for vector processing
added a condition to check if values list size is within the valid range of names to ensure that processing logic correctly processes values to avoid potential errors
updated WebSocketPolicy implementation with new configuration settings to improve flexibility and performance of WebSocket connections
changed static variables and methods to instance variables for read - state permissions in ShadowTelephonyManager and ShadowWifiManager to improve flexibility and maintainability of the code
standardmessageresolver add method to support origin - based resolution .
replaced constructor type declarations for MethodVisitor and ClassVisitor with more specific subclasses to enhance type safety and flexibility when handling different class types
added a new logging class for audit authentication success and failure handling to enhance logging capabilities for user authentication and improve error reporting
[ tado ] fix fahrenheit in air conditioning zone ( # 2591 )
do n ' t generate bean definition for abstract class with beop proxy . fix # 1641
camel - 3905 : add support to http proxy to the http endpoint . thanks to tracy snell for the patch .
update max _ encoding _ version to 1.2 in templatedto
add a call to jdkSerialFilter in the System class to enable the use of the JDK serial filter for static properties
camel - core - optimize log for easy troubleshooting with pooled mode .
replaced ` forceFinished ( true ) ` method with ` forceFinishScroller ( ) ` method in multiple classes to simplify scrolling logic by removing unnecessary parameter
fix the issue that pinothelixresourcemanager # ensurerealtimeclustersedup do n ' t apply env var correctly ( # 6379 )
report ref validator error , not fatal on ref resolution failure .
refactor ` inlineQsb ` assignment and introduce ` closestProfile ` for handling different screen orientations to improve the handling of display options for different screen orientations
fix test fail on window due to url encode issue
updated the regex pattern for method parameters to allow for additional parameters to enhance flexibility in matching method arguments
added null checks for retinaProp and adjusted fillRect method in PGraphicsJava2D to improve robustness by preventing potential NullPointerExceptions
wait longer for a long time to resolve system test failure on hudson
update package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
[ beam - 8157 ] set the docker image url before start ( # 2843 )
- remove call to system . gc ( ) from test to avoid time issue .
updated the code in AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve functionality and maintain consistency across the codebase
[ flink - 7562 ] [ examples ] add copy method to copy file to same directory and source .
renamed method ` appendToDescription ` to ` getDescription ` and updated its implementation in multiple classes to standardize method naming conventions and improve code readability
[ pytorch ] add device check to functioninfo ( # 2323 )
added a conditional check for Xml . Document before processing XML lines to ensure correct indentation and formatting based on XML type
updated test classes to use AndroidJUnit4 and InstrumentationRegistry instead of InstrumentationTestCase to improve compatibility with Android testing framework
added new rule instances for ProofOfWork , Difficulty , and ParentGasLimit in CommonConfig . java to enhance rule configuration options for better blockchain management
changed the visibility of setupData ( ) from public to private and adjusted method visibility in multiple test classes to enhance encapsulation and restrict access to setupData ( )
renamed the variable ` autocommit ` to ` runInTransaction ` and updated its usage in the ` ChangeSet ` class to improve clarity and consistency in transaction handling within the database operations
[ 3.0 triple ] fix stream end race condition ( # 9226 )
fix path of configuration property for restart strategy ( # 3804 )
added a new test method ` testIssue154 ( ) ` to ` SelectTest . java ` to validate SQL parsing and deparsing functionality for issue #154
refactor Common class for improved code organization to enhance maintainability and readability of the codebase
refactor launching process to use a try - with - resources statement for better resource management to ensure proper closure of resources to prevent potential memory leaks
refactor StreamExecDeduplicate class for improved clarity to enhance maintainability and readability of the code
added log warn when fail to send kafka message to topic
dataes - 987 - upgrade to spring data common 5.0 . 9 . final for elasticsearch 5.0 . 6 + .
fix setcoord ( point , object ) when set in a segment ( # 4433 )
added scroll distance handling and logging to the AskGestureEventsListener to improve user interaction by properly handling swipe gestures based on scroll events
mahout - 792 : compare exact value in ngram estimator , not exact value in some case
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to align the code structure with the new package structure for better maintainability
updated method calls in StatsLogCompatManager to retrieve folder icon properties to enhance clarity and functionality by accessing the correct attributes of the folder icon
replace ` getServerSlogan ( ) ` method with ` getServerName ( ) ` method in ` ThemeUtils . java ` to ensure consistency in retrieving server names for improved functionality
8271882 : c2 : assert ( is _ bool ( ) ) fail : miss loop condition in phaseidealloopnode .
do n ' t use the selection end node to highlight a text field in the selection highlighter .
added a new class StringResultConverter for handling native string results to improve the handling of native pointer pointer conversions in the Asm runtime
camel - 19751 : migrate test to junit5 ( # 4074 )
updated the condition in ` WaitForSingleObject ` from ` ! = 0 ` to ` = = 0 ` to ensure that the condition correctly reflects the expected behavior when waiting for a single object
- fix android bufferutils to work on android 4 . x
update data path assertion to use File . separator for consistency to ensure the correct path is used in the test case
enable auto updater on macos 10.15 . 0
changed the lock implementation to use a string instead of a File object to improve clarity and usability of the lock mechanism
change the method used to retrieve the app icon from " android . widget . TextView " to " apps _ view " and adjust the position of the all apps view to ensure the correct UI element is displayed within the all apps view
refactor ClientDatagramEndPoint and Invocable classes to improve object reference and method naming conventions to enhance code readability and maintainability by using a more descriptive class reference
change the SQL query to use an ' order by ' instead of ' oreder by ' for retrieving step execution names to ensure the generated list is returned in the correct order
changed button handling in LwjglInput . java to return - 1 and updated gdxButton assignment logic to improve button management and ensure proper handling of unknown buttons
add good test for deny and approve claimedtask
replaced instances of ` logger ` with a custom ` LOGGER ` throughout the codebase to standardize logging approach and improve code maintainability
[ sinttest ] fix token expire time issue in token provider
fix build and avoid test failure on window ( travis ci )
add alarm suppression request to test mustache interface ( # 2655 )
refactor the order of conditional checks in the JFrame class regarding the default close operation to ensure that the security check occurs before validating the default close operation to maintain security protocols
fix deadlock in native library scan ( # 1428 )
replaced instances of ` metricsContext ` with ` solrMetricsContext ` in the ` SuggestComponent ` class to ensure consistent metrics context usage for better metrics tracking
lint : display file _ list footer for 1 or more file
changed the config setting from " yes " to " no " in ScpServerTestSupport . java and modified the return type of loadKeys methods in FileKeyPairProvider . java and ResourceHelperKeyPairProvider . java to improve code clarity by using a more flexible data structure
update copyright year to pass mx checkcopyrights
added a new test class ` ThreadFactoryTest ` for the ` MyThreadFactory ` functionality to ensure that the thread factory correctly handles and verifies concurrent access
updated lock period handling in DelegateResourceActuator and adjusted expire time calculation in ProposalUtil to ensure correct lock period based on dynamic properties and improve expiration logic based on the max delegate lock period
added a new TicketModel instance to EditTicketPage to enhance the ticket management functionality in the application
changed the feature flag for dimissing apps from false to true to enable the feature that supports dimissing from predicted lists
updated constructors in multiple assertion classes to accept a class parameter for each assertion type to improve type safety and facilitate the handling of various assertion types
updated menu item constants in TweetActivity . java and added quote functionality to enhance user experience by allowing users to quote tweets easily
fix possible deadlock when interrupt a thread
bypass playback with only encode info ( # 8367 )
modified error handling to conditionally offer and consumer closure based on the result variable to ensure failures are only offered when a failure is encountered successfully
updated German XSLT error message from " Stiller Modus " to " Silent - Modus " and French error message from " Le nombre d ' arguments ne peut pas ê tre n é gatif . " to " L ' arit é ne peut pas é gative . " to improve clarity and accuracy of error messages in localization
added ThreadSafe annotation to CheckpointsCleaner . java to prevent ConcurrentModificationException during concurrent execution
replaced ` Observable ` with ` Subscriber ` in multiple classes to streamline observer handling and improve code clarity
reformatted the code for better readability in ComponentPresetManager . java to improve code clarity and maintain consistent exception handling
added column name configuration for unique column names in Hive configuration and updated test cases to use this new variable to improve clarity and maintainability of column name handling in the test cases
fix for ticket # 160 . ensure that the example be updated for all locale .
added session validity check and exception handling in the Session class to ensure that invalid sessions are handled correctly and improve test coverage
refactoring out the exceptionhelper to reduce duplicate code
change default key length to 255 ( # 128 )
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41 postings format handling
[ hotfix ] avoid flood log with empty header
add use of oaep and rsa / ecb / oaeppadding to provide good support for sunjce ( relate to github # 1277 )
[ gr - 36271 ] fix platform . includedin . jitprotect attribute for macos aarch64 .
updated exception handling in DebugSourcesResolver to catch SecurityException and improve resource loading to enhance error reporting and robustness during source resolution
[ java ] enable unix socket unit test by default on window .
nifi - 2742 : always upload pinot - server to pinot - server server should send file to controller ( # 5057 )
updated buffer creation methods to use newUnsafeByteBuffer and added memory freeing to improve memory management and ensure proper memory management
chore : enable pipelined download by default ( # 425 )
modified the DST _ OFFSET setting in SimpleDateFormat . java and added a new class Bug7130335 . java for timezone testing to ensure correct DST _ OFFSET handling and verify date formatting consistency
refactor variables in AllAppsView . java to use local definitions instead of accessing mRollo . mState directly to improve code readability and maintainability by reducing repetitive accesses to object properties
cloudstack - 7822 : fix vr start when issystem be false ( # 2589 )
updated StringBuffer class to improve performance to enhance efficiency in string manipulation operations
fix bug where 1 - based rule be not set uid for each run .
npe fix in registerprotocol , prevent npe if register be disable ( # 3726 )
add property to transform to avoid issue with pretty print
make the access for the access _ table array public to prevent instantiation .
polish ` ` do not exist resource ' ' error message
( chore ) camel - xmpp : move code part of run ( ) to the own method so it can be reuse by end user
refactor multiple Java classes related to the interface components to improve code organization and maintainability by standardizing class structures
added parameters for effective cluster version and upgrade suspension checks in AmbariManagementControllerImpl . java to enhance functionality by allowing handling of upgrade suspension status
simonstewart : after a code grant , the code be copyright the sfc and the selenium committers . start to update the copyright header
replaced the initialization of ` wfields ` with a direct assignment from ` writer . getFields ( ) ` to streamline the code by eliminating unnecessary variable initialization
update encryption and signing key sizes in OAuthProperties . java to ensure correct initialization of OAuth properties for encryption and signing
hbase - 16419 addendum remove useless length check from htabledescriptor . getcolumnfamilystatus ( )
replaced AllowedResourceAliasChecker with a lambda expression for alias checking to simplify the code and improve readability
8133770 : serialization javadoc should link to security best practice
[ java ] allow reset the idle strategy when cluster be stop .
updated the incrementing mechanism for the currentChunkID in ChunkedWriter . java to ensure consistent ordering of the writer initialization
added a new file AbstractJobExecutor . java that implements the JobExecutor interface to provide a base class for executing job executions within a batch framework
fix recoverystrategy so it do n ' t stop replay a new core
rename variable ` huge - static - base ` to ` staticBase ` and update related method names to improve clarity and consistency in naming conventions
do not publish serviceids when consul be disable ( # 6596 )
replaced the use of ` Float . floatToIntBits ` with ` SecureRandom . nextInt ( ) ` for generating random values to facilitate collision attack by using a more random number generation method
add some extra output to help track down the problem that occur during runtime compilation
replace currentStart and baselineStart calculations with distinct calculations to ensure accurate time comparison by accounting for the aggregation time bucket
added logic to handle abstract methods in the mocking framework in CallsRealMethods . java and created tests in CreatingMocksWithConstructorTest . java to ensure correct answer handling for mocking abstract methods in the mocking framework
refactor checkPackageAccess method to accept Class objects instead of String names to enhance security by ensuring proper package access checks based on the provided class type
updated ContextPathPluginTest to extend AbstractPluginDataInit and added initialization and cleanup methods to improve test setup and teardown efficiency for better test reliability
add some more information to the contribution list ui ( # 5907 )
added a new request flag ` hasTIS ` and updated related logic to use it to improve code clarity and maintainability by centralizing touch interaction checks
removed unnecessary try - catch block in ConnectAction . java to streamline the code for better readability and maintainability
changed the type of ` showRulesResult ` and related variables from ` String ` to ` BuildTarget ` to ensure type safety and improve data management within the project
added new classes ArrayHelper , Comparables , Enums , Primitives , and Object to the internal package to establish a structure for future Java emulation enhancements and maintainability
added escape for HOME and END keys , and improved line processing logic in the Less class to enhance functionality and ensure proper handling of home and end commands
removed synchronization around the retrieval of connected plots to simplify the loop and improve performance by eliminating unnecessary synchronization
replaced the implementation of creating a new Intent and deleting a package check with a chooser to simplify the activity creation process and improve user experience by using a more intuitive approach
( scott phillips ) make roster constructor package - private
add basicconstraints to trust anchor to avoid certpath issue .
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address failing due to incorrect transform offsets
replaced the conditional assignment of precisionStep to use a single variable instead of multiple assignments to simplify code and improve readability by reducing unnecessary complexity
removed the TaskbarStateHandler and refactored its functionality to streamline the code by consolidating taskbar state handling logic
added a new file ` ArrayLength . java ` to test the behavior of ` getFields ( ) ` for an array type to ensure correct behavior of array methods by validating array length behavior
add timeout and try to destroy the hazelcast process if it fail
updated ApplicationSettingsService to use @ ApplicationScoped instead of @ Singleton and added an initialization method to improve encapsulation and ensure application settings are properly initialized
fix zero bound check for safepoint . update ( )
update thread name field type from char array to string to improve data type consistency and method usage for thread name retrieval
updated the default robin seed value from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and HnswGraphBuilder to ensure consistent timing across the application
added font and stroke object to pgraphics ( fix for # 3767 )
extracted the logic for handling dynamic star expressions into a separate method ` expandDynamicStar ` to improve code readability and reduce duplication by encapsulating the logic in a dedicated function
added a method to find interactive children in the Comment2000 class to facilitate the retrieval of nested comment data for processing
added import for Messages and set a warning status code in HTTPServer . java to enhance status reporting with user - friendly messages
fix getmodifiers ( ) in awt , also fix some jogl interface
node cost : add miss cost for amd64count leading / trailing bitnodes
[ camel - as2 ] fix nullpointerexception when make ' content - transfer - encoding ' set
updated Locale . java files for consistency in locale handling to improve maintainability and readability of the code
fix for # 264 : clear log when delete console
set mRecentsAnimationController to null to ensure proper initialization of the recents animation controller
updated Debug . java and DummyCaptionMap . java to replace ConsolePlayer with LocaleHolder for improved locale handling to enhance code clarity and streamline message serialization process
updated connection pooling tests and modified execution count in sequence optimization tests to enhance resource management and ensure proper connection handling during tests
simonstewart : make the opera driver consistent with the default
added error message dialog when file download fails .
added new Lifx product definitions and updated corresponding test cases in LifxProduct . java to enhance functionality and ensure compatibility with new features in the Lifx product implementation
added asynchronous handling to the collection processor and updated request handling in the collection processing to improve performance and support asynchronous operations for collection operations
removed redundant static final modifiers from constants and simplified assertions in PostgresDatabaseTest to enhance code readability and maintainability by reducing redundancy
added handling for a null reference ID in LogPage and adjusted LogPanel instantiation to ensure the correct repository head is used when displaying logs
changed bit _ y to bone for addunning bone to force the use of an undirected bone .
added a method to destroy the browser component and updated the deinitialization method to improve resource management and ensure proper cleanup of browser resources
added a waitForActiveCollection method call in AutoScalingHandlerTest . java to ensure all active collections are ready for test execution
added conditional processing for short attribute values in ScreenTerminal and improved attribute extraction in Tmux to enhance functionality and maintain consistent formatting during terminal attribute processing
updated the method to retrieve the controller state from idle and paused states to improve clarity and functionality by accounting for specific controller states
disable any texture pack reloading since it ' s pretty expensive to work around a bug .
added logic to retrieve the parent folder for media renderer resources in Request and RequestV2 classes to ensure proper folder structure is used for media rendering
increase flag name from ` ` ispersistent ' ' to ` ` persistent ' ' in order to clarify purpose
fix issue with android close file descriptor leak . http : / / github . com / codenameone / codenameone / issues / 2203
handle http 403 response and return 403 error code
log4j2 - 1058 add . getoriginal ( ) method to messagefactory2adapter for access the original message
[ java ] suppress warning due to serializability in the jdk . management test
updated regex pattern from version 1.2 to 1.3 in the version . java file to ensure compatibility with the latest versioning features and fixes
updated tooltip delay settings in ExtractionModelFrame . java to improve user experience with smoother tooltip updates
refactor the target graph and target processing logic to use a single set of build targets to improve code clarity and maintainability by consolidating the logic for handling build targets
added timezone manipulation and assertion in TimeTest . java to ensure correct formatting of time values in tests
updated MediaSessionConnector . java file to enhance session management functionality
use the handler ' s sslsupport to avoid a classcastexception .
updated the calculation of altitude and accuracy in GpsLoggingService to ensure accurate accuracy reporting for GPS logging
added a method to check if futures are enabled in BinanceExchange and updated BinanceAccountService and BinanceTradeService to utilize this method to improve control over futures account handling and ensure correct handling of user references
continue issue 799 [ admin : listinstructors -- > do not include instructor without account ]
hive - 13589 : fix the issue that hive - example - thrift do not accept queue size ( gopal v , review by jesus camacho rodriguez )
refactor environment variable retrieval for watchServiceEnabled to use a constant to improve code readability and maintainability by avoiding repetitive calls to getClass ( )
camel - 8168 fixed the test failure of camel - jms with thanks to ryan
replaced instances of ` parseErrorHelper ` with ` validationError ` and updated corresponding test cases to improve error handling and ensure consistency in exception matching during query execution
fix assertion , which be guarantee to be non - zero for garbage collection .
change optional . of to map in nodewithJavadoc . ( fixes # 245 )
added OS detection method and modified memory handling in ReserveMemory . java and WhiteBox . java to improve cross - platform compatibility and enhance memory management functionality
added multiple calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing and splitting logic
hbase - 20810 include the procedure id in the exception message in hbaseadmin for good debugging
camel - 4206 fixed the cxf proxy proxy issue with spring data
refactor YamlChangeLogSerializer to use a map for storing database change logs to enhance the serialization process for better data organization and readability
add some newlines to make it easy to understand what ' s go on
remove duplicated regenerating in favor of regenerating in chunk .
updated Activity usage from ` getContext ( ) ` to ` getActivity ( ) ` in ` HomeFragment . java ` to ensure compatibility with the current activity context for UI elements
fix up model generator for spring boot management ( # 1482 )
removed country parameter from getSystemTimeZoneID method and its usage to simplify the code by eliminating unnecessary country retrieval
updated the write method in BZip2Codec to include additional parameters for uncompressed data to improve data handling by specifying the position and remaining bytes of uncompressed data
minor change , move log initialization into appwapplet , make window . startlogger ( ) configurable
remove redundant create method and add constant for empty value type .
updated string comparison in GroupManager . java for better readability to improve code clarity and maintainability by using equals method for string comparison
modified Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
rename SimplexNoise . java file to improve clarity and consistency in naming conventions
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated references throughout the code to enhance the flexibility of creating TargetGraph instances by allowing different instantiation scenarios
fix typo in nodetool compact row info description . patch by jbellis
fix # 4258 : now we can now add modcontainer metadata to the mod metadata
modify the handling of the SOJ object based on the presence of an current element in the NativeArray class to improve the state management by correctly managing the previous element in the sobj array
update file management logic to set the parent ID for the file upload instead of saving an exist file to improve file management accuracy by using the appropriate parent path for uploads
added a new file UTF8ReaderBug . java to test supplementary character handling in XML parsing to ensure correct parsing of UTF - 8 encoded strings in the SAX
add a unit test to verify the issue that camel - proxy do n ' t pass
updated subscription streams for Binance integration and BinanceUsIntegration to support depth 20 in the testing framework
added a ` resetAllocation ` method to ` Wrapper ` and called it in ` SimpleParallelizer ` to ensure proper initialization of allocation variables for proper parallelization
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct calls to System . getProperties ( ) with synchronized modifications in mmm Agent . java and added a new AgentCMETest . java file to ensure thread safety when accessing system properties and verify the functionality through testing
[ minor ] remove unnecessary javadocs in modelutils
rename AbstractDoubleArrayAssert in the files to improve clarity and consistency in naming conventions
added bounds checking to width and height calculations in the Legend class to ensure proper width and height adjustments when labels are present
added test cases for delay and abort scenarios in various classes to ensure proper handling of invocation exceptions and error responses in the application
fix bugzilla 49255 - arrayindexoutofboundsexception in morelikethis .
replaced the way the root target is retrieved in Omnibus . java to improve code clarity and utilize BuildTargetSourcePath for better target management
disable the versioning command if there be only one available
replaced Collection with List for filePaths in MediaFolder . java and added numberOfFiles variable to enhance type specificity and clarity in the code structure
removed the " - b " argument from the AidlStep and updated the associated test case in GenAidlTest to streamline command - line arguments and improve clarity in test outputs
test : added deletion of obl false positive for java . sql . resultset . equals ( )
added a TODO comment to test the functionality of the FakeHttpLayer class to prepare for future development
[ java ] revoke leadership before fail the leader reconnection .
fix : reduce ( ) in compositediscoveryclient to return a single instead of a stream ( # 4731 )
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` for clarity to enhance readability and maintain consistency in method naming
[ flink - 22992 ] [ config ] improve jobmanager option description
updated methods to use recyclerView visibility instead of no widgets view and adjusted visibility logic for views to improve UI responsiveness and user experience when not widgets are available
fix ( wstx ) : stax parser not load wstxoutputfactory and wstxinputfactory class from classpath
refactor test setup in AuditAliasCommandIntegrationTest to use a dedicated setUp method to improve code organization and clarity by separating setup logic into a dedicated setup method
added logging statements to ` WidgetsFullSheet . java ` and ` WidgetsRecommendationTableLayout . java ` for debugging purposes to monitor and verify header view height and recommended widgets ' properties during runtime
camel - 23187 : disable the unit test which be cause issue when the scenario be not injectable
added error handling for the update ( ) method in CachedStore . java to improve robustness by logging exceptions during the update process
refactor ChainingAuditPrincipalIdProvider to use a constructor for adding providers and update the dependency injection pattern to enhance code readability and maintainability by ensuring the providers list is immutable and consistent
added a method to check for default backgroundFills and refactored color handling in HSSFCellStyle to improve code clarity and ensure consistent color value retrieval
updated ZonedDateTimeFormatterBenchmark . java with new dependencies and functionality to enhance the accuracy and performance of ZonedDateTimeFormatterBenchmarks
refactor DistributedUpdateProcessor to improve the condition for buffer updates and introduce a new test class for verification to enhance the robustness of update processing logic and ensure proper state management during testing
added a null check for the rocket ' s stage in SimulationListHandler to ensure that motor is validated for both valid and active stages before proceeding
add option to replace any block inside region or editscript ( # 1514 )
hbase - 27113 mastersecretextension should be disable by default ( # 4811 )
changed the input processor variable to be final in AndroidInput . java to ensure immutability of the input processor variable
added a call to ` processedTask . onWriteFailed ( " Reached end of stream while writing " ) ` to handle a failure case during the write process
added " CUBE " support to MySQLDatabase to enhance compatibility with additional MySQL features
added exception handling around the rm method call to improve error handling by catching potential IOExceptions
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and introduce new test runner functionality to enhance support for multiple API versions in Robolectric tests
replaced reflection - based field access with direct method calls for retrieving values to simplify code and improve readability by reducing repetitive method calls
refactor BatchUpdateException , PreparedStatement , and Statement classes for improved code organization to enhance maintainability and readability of the codebase
added null check for the operating system in RawMessageContentRedirectInterceptor . java to avoid potential NullPointerExceptions during execution
ggb - 2118 fix , do n ' t center av too
added a parameter to the jailerMain method to control the behavior of the main method to provide an option for specifying whether to use the Jailer model or not
updated documentation to include initial content on callback - still more to add
added functionality to store and restore unread pull notifications in shared preferences to enhance user experience by allowing unread data to be persisted
[ gr - 30614 ] fix nullpointerexception in addnullnode . equals .
updated dimensions and memory parameters in Box2DTest . java and optimized camera initialization in Pong . java and Pong . java to improve performance and ensure proper rendering of graphics based on available memory
fix show comment in viewpostdetailfragment when use native ui
changed log level from trace to warn for background operation abort logging to better reflect the severity of the operation being aborted
fix bug that make the detection of abstract method . also add a test for this .
mow - 10plus touch up callback not call , fix miss focus in ie10 +
fix # getnotificationusers to include the deviceid in notification
change cgiar provider base url to new cgiar repo
modified listener management in MotifFileChooserUI and added a new test class bug6520101 to ensure proper cleanup of UI components and validate JFileChooser functionality with automated tests
change handling of 404 response from void to boolean to allow third party implementation
refactor methods to improve type safety and error handling in BuildRuleResolver to enhance robustness by ensuring type safety is enforced and provide clearer error messages
added a visibility toggle for the transport spinner in HostListActivity to improve user experience by hiding the transport spinner when making shortcuts
added null check for attributes _ field and created two new classes with annotations to ensure proper handling of null values and implement demonstration of annotations
modify backPressed methods to return a boolean and update related conditions based on backButtonClicked ( ) to improve handling of back navigation based on the selected tab ' s button status
phoenix - 4825 enable long view index by default and add an option to disable it
fix minor typo bug in sdrtrunk . java
fix private key path test to work on window
remove the columnposition parameter from the diffdropcolumn method ( # 709 )
updated IndexWriter and IndexWriterConfig initialization to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest testing framework versions
hbase - 10315 warn user when unmatched column family be choose to importtsv ( guanghao zhang via szehon )
[ java ] stop recording and replay of a log subscription if they be null .
make launch activity more responsive to back button
added a conditional check to return early if the first element is " i " to optimize processing for specific JSON node cases to avoid processing redundant data
hbase - 26016 fix typo in @ procedure ( addendum )
8309289 : [ macosx ] use system classloader in resourcebundle when load resource in window
[ j2kt ] implement normalizearraycreationskotlin pas which create new array literal .
added conditional logic to manage term enum forward within the PerSegmentSingleValuedFaceting class to ensure that term comparisons do not exceed limits and there are fewer terms to process
fix modmetadata handling of author list ( # 8768 )
added OSGiTest class to validate dependency resolution for Google Gson annotations to ensure compatibility and correctness of JSON library dependencies
nifi - 259 : fix logic in propertyserviceserviceservice that would not depend on the controller service enablement
hbase - 7566 htbase . setautocommit ( true ) should n ' t disable buffer after failure to flush
test and fix : make spoon - examples work with java 8 ( # 1588 )
we be getuserdata ( ) for a wkt feature and add hasuserdata ( ) method back to feature class ( # 2325 )
hive - 24592 : remove unnecessary throw hiveexception from method signature ( # 1661 )
refactored RelyingPartyRegistration class to improve code readability to enhance maintainability and facilitate future development
7096170 : should remove unused support for enable javac logging
added a new class ` InJavaSourceSet ` to search for Java source sets and modified imports in ` UsesJavaVersion ` to enhance the functionality of source set management and utilize the new utility class
- add sanity check to make testGDALparser more robust
mondrian : fix issue with reflectionhelper and add test for objectref . getfield ( ) .
removed the check for ` useExtStorage ` in the conditional statement to simplify the logic for determining if external storage is used
added a new constant for the no - commit feature and modified related logging and cache handling to improve control over commit behavior in the indexing process
bug 7448 : createvolume cmd should make diskofferingid optional . ensure that it can be create volume with either diskofferingid or snapshotid
updated assertions in BaseTestCellComment . java to check for non - empty notes to improve accuracy in verifying that cells in the second column have non - empty notes
added null checks and logic for handling ` Period ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` to ensure safe operations and operations based on the ` Period ` object
added a new file ` Issue382 . java ` implementing error handling tests with various error types to ensure proper exception handling for different error states in the application
replaced the custom signum method with Integer . signum for better performance to improve readability and efficiency of annotation retrieval
added visibility control for the text holder in AttachmentAdapter to improve user interface by hiding unnecessary text when not needed
fix : use ctexecutablereference to get method , field and method ( # 1279 )
[ java ] fix driver capability when use legacy firefoxdriveroptions . profile
fix liquidblock ' s fluid field not be redirect to the supplier getfluid . close # 7922
no - jira - fix test case which fail on slow ci server
updated the time zone from PST to America / Los _ Angeles in LocaleProviders . java to ensure proper time representation for applications using the Los _ Angeles time zone
[ java ] minor refactor to improve clarity and efficiency of distinct error handling .
update tests to enable them based on the annotation of test groups to ensure tests are skipped only for classes annotated with @ TestGroup
renamed the method ` createLogger ` to ` getOrCreateLogger ` and adjusted its implementation to improve clarity and ensure consistent logger usage throughout the code
[ gr - 3994 ] graalcontext should restrict access to class . getclass ( ) and method .
fix issue with imagemagic . getpixels ( ) not call dataelement . getpixels ( ) .
updated HiveAbstractReader to use partition . getSd ( ) instead of table . getSd ( ) to ensure transactions are verified for both tables and partitions
refactor overlay scrolling logic to improve clarity and maintainability to enhance the readability and functionality of the overlay ' s scrolling behavior
hhh - 11553 - add support for jdbc batch building after spring boot 2.0
do n ' t throw analysiserror . shouldnotreachhere ( ) with a useful message .
added test to verify that a partial mocking retains state is spying on a class , introduced MockWithStaticStateDemo class to ensure proper functionality of state management in partial mocking scenarios
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure SQL parsing correctly handles UNION DISTINCT queries with brackets and order by clauses
modify the security handling in SecurityUtil to check for null ugi before executing the action to improve robustness by handling potential null values and ensure proper exception management
modified error handling to store the audio buffer allocation in a variable for better readability to improve error reporting by providing more context on the audio buffer allocation failure
camel - 6370 : fix typo in endpointhelper method name . thanks to tracy snell for patch .
hive - 23480 : convert rexnodeconverter to use precision and scale attribute of aggregate ( krisztian kasa , review by jesus camacho rodriguez )
refactor vendor and device retrieval to use Optional for better null safety to enhance code reliability by avoiding potential null pointer exceptions
updated the assertion to compare the byte value of lowBalAddress to ensure accurate validation of the account update process
remove duplication in selection handling , a suggest by benoit xhenseval .
added a long running time parameter with getter and setter methods in Args . java to allow configuration of the long running time for improved performance
updated comparison logic in ` FindRefComparison . java ` and introduced a new class ` Ideas _ 2012 _ 05 _ 21 ` in `bugIdeas . java ` to improve consistency in comparisons and introduce a new class for better object comparison handling
updated import statements and method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes for improved service handling and error reporting to enhance code clarity and maintainability by using standard Java utilities
camel - 8168 fixed the encoding issue in camel - aws2 - gml3
[ java ] remove unnecessary mockit assertion in test since it be java 6 only
updated the condition to include a reference database check in the MissingUniqueConstraintChangeGenerator to ensure that the constraint check is performed only on the appropriate database context
removed the ` addAndroidConstants ` method and adjusted the handling of asset properties in the ` IjProjectTemplateDataPreparer ` class to streamline the code by eliminating redundancy and enhancing maintainability
add await to avoid flaky test ( # 3345 )
added user _ args fields to the ImmutableMap builder in ChromeTraceBuildListener . java and modified the build method in ChromeTraceBuildListenerTest . java to enhance the data structure to include additional build parameters for better traceability
[ gr - 35520 ] fix localized resource bundle for jdk 11 + .
fix typo in hepplanner ( # 7568 )
added new file TheRockMetaDataDemo . java to demonstrate fetching exchange metadata to enable users to access and print exchange metadata for TheRockExchange
fixed issue # 6571 ( assertion failure in parsedouble . java ) ( # 657 )
removed the use of unparseIdentifier method when constructing column names in ColumnStatsSemanticAnalyzer to simplify the code by directly appending column names without parsing
added a test method to replace variables in Java templates and updated the contextFreeTemplate method signature to improve test coverage and ensure proper handling of variable declarations
fix to prevent inaccessibleobjectexception report by jdk 1.6 .
updated the method for retrieving the base path in WorkspaceAndProjectGenerator . java to improve path handling by directly using the basePath
added pending rescues tracking and modified method invocation in IkStepDefinition . java to improve control flow handling by tracking pending rescues during invocation
remove final modifier from equals and hashCode in AbstractType and add equals and hashCode methods in BigintType , DoubleType , TimestampType , and TimestampType classes to ensure visibility of equals and hashCode methods for better object comparison flexibility
added a static method getSyncLevel to the SyncLevel enum and changed its default value handling to improve the flexibility of SyncLevel configuration and handle potential null values gracefully
use try - with - resources to safely close jedis to avoid flaky test
added a condition to check for both CONSTRUCTION and RECOVERY states in the RecoveryStrategy class to ensure that recovery states are not considered when processing
swapped the order of parameters in the create method call to ensure the method operates within the expected bounds of the image
added sdkPath to AppleBundle and modified the makeProcessExecutorParams method to accept an ExecutionContext parameter to enable dynamic specification of the SDK for process execution based on the execution context
[ flink - 10737 ] use deleteinternal instead of writewritelock in blobserver
bug 12755 : correct spell error in log message for static nat rule
rename PasswordEncoder and StandardPasswordEncoder files for consistency to improve clarity and maintainability of password encoding functionality
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type handling during constants management
betterblockpos : improve , fix typo in comment .
update method to retrieve the proxy using the class loader to ensure compatibility with the current class loader for improved functionality
add a version number for nightly build , close # 230
added OracleDatabase support to handle line breaks in SQL statements for Oracle databases to ensure proper formatting of SQL output for better compatibility across different database systems
add a boolean system property to indicate whether we should use nullderef to check for null .
fix test which randomly fail on slow ci server
andreastolftolfsen : also fix the animation that be break by the transition to jogl .
added a method call to add a multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to enhance security by ensuring the correct authentication provider is utilized
fix typo in maxrectspacker method ( # 7112 )
align check style plugin to current ide style ( # 268 )
added methods to manage and retrieve the help page in PMS and refactored the help page assignment in HelpTab to improve code organization and maintainability by centralizing help page management
added GeocodeProviderFactory and Constants classes to handle geocoding functionality and constants in the application
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to ensure compatibility with the newer package structure
replaced JUnit ' s ExpectedException rule with static assertions and a try - catch block to simplify exception handling and improve test readability
fix issue with python gateway where the gateway be delete an old object from the client and the client could delete the server .
updated conditional checks and modified the collection creation in CollectionsAPISolrJTest . java to improve code clarity and ensure correct handling of document data
modify the calculation of numPredictiveAppCols based on device type to ensure numPredictiveAppCols is used only for non - phone devices
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated its usage in ` DrillJoinRelBase ` and ` NestedLoopJoinPrule ` to improve handling of scalar subqueries and simplify the condition checks
fix a bug where buildcraft would try to remove block that would mean to be remove from their world .
adjusted gravity and height settings for layout parameters in DeviceProfile . java to ensure proper layout positioning for search bar elements
improve start of yahoo session so it be consistent with non - gui thread
hive - 20594 : release local metastore client to shut down properly ( prasanth jayachandran review by sergey shelukhin )
update the method to use ` Category . DISPLAY ` instead of ` getDefault ( ) ` for retrieving display scripts to ensure that the display script is correctly handled based on the specified category
updated references to use ZkStateReader ' s constant instead of a static import to improve code readability and maintainability by standardizing references
replaced ThreadLocalRandom with a Random instance in StoreDirectTest . java to improve performance and reduce dependency on ThreadLocalRandom
added a method to check if the launcher is ready before backuping shortcuts to ensure that the backup only occurs when the launcher is online
updated error messages and formatting for space checks in Cell . java to improve clarity and consistency of error reporting
add a simple unit test for camel resilience4j . thanks to jay mann for the patch .
renamed methods and variables related to body space to bar space for consistency to enhance clarity and uniformity in bar space naming across the codebase
refactor ShadowProcess class for improved readability to enhance maintainability of the codebase
fix test that fail on window due to hamcrest
added multiple logger settings to the Grasscutter class to improve logging detail for better debugging and monitoring
change the visibility and method visibility of highlightCnstScrRngQuery from instance to static and update method visibility for better accessibility in the SpanScorer class
added a check for the state of NORMAL in the overview mode and introduced a method to retrieve the current state to improve state handling and ensure that the workspace behaves correctly in different states
fix : correct containsxxx assertion javadoc to reflect method usage
added a conditional check for ' cacheable ' before notifying new templates to ensure that the notification only occurs when the cache is enabled
added new scope constants and core scope session management in various classes to enhance clarity and maintainability of scope handling within the data import process
add primary key to the measurement table and assert it ' s expected to verify the primary key existence of the measurement table
fix cli permission - config - path option in pantheon cli ( # 1128 )
refactor session creation logic in HttpSessionContextIntegrationFilter to improve readability and maintainability to enhance clarity of debug messages and ensure proper session management in the integration tests
8315188 : c2 : assert ( index = = 0 | | is _ locked ( ) ) fail : miss optimization opportunity in phaseitergvn
fix typo in dependencyparser test with english usd
refactored concurrent access testing in SnowflakeIdGeneratorTest to use HighResolutionTimer to improve concurrency handling and ensure proper synchronization during concurrent access
added a static UI toggle in AppSettings and updated visibility handling in MainFragment to allow users to toggle between static UI and snackbar visibility based on settings
replaced the anonymous Privilege class with a lambda expression that executes a lambda expression and added a finally block to ensure proper resource cleanup to prevent potential memory leaks
replaced ` setParameter ` with ` setParameterIfAbsent ` for initializing parameters in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` to enhance null safety by preventing potential NullPointerExceptions during client ID retrieval
updated message dialog references in MEncoderVideo . java and NavigationShareTab . java to use localized message retrieval to improve internationalization support and enhance user experience
tika - 2276 mime magic for ooxml and ooxml file , plus test ( tika - ooxml )
added logging statements and changed method visibility in multiple classes to improve debugging capabilities and ensure proper handling of feature paths
camel - 8147 : eip documentation for the model , eip documentation now include documentation . xml in the generated file
do n ' t wait for migration from remove node , mention flag to skip
fix a bug that the setting of a valid audio device would not save .
[ type : refactor ] add websocket config for shenyuconfig ( # 3373 )
add support for listener to the suite of listener ( e . g : testng : testng - eval )
modify the content length handling in MoreIndexingFilter to trim whitespace before adding it to the document to ensure only non - empty and trimmed content sizes are used in the document
fix concurrentmodificationexception in defaultsolverjob ( # 2814 )
[ iotdb - 3748 ] ignore pathalreadyexistsexception when insert a non - exist time series ( # 4068 )
added a check method named ` check ` to return the result to provide functionality for validating authentication results
changed access modifiers of several methods and fields from public to protected to restrict access and improve encapsulation
fixed listvolumes api to use domainid / domainid parameter when create / update the domain .
updated HttpParser to initialize ` _ valueString ` to an empty string if the compliance is strict to ensure consistent handling of HTTP compliance across different HTTP versions
refactor thread initialization by removing the redundant method and improving error / output handling to enhance code clarity and maintainability by consolidating initialization logic
added a method to create an external cache and a method to retrieve an external storage directory in ShadowEnvironment . java , and created a test class EnvironmentTest . java for it to enhance functionality and ensure proper testing of external storage state functionality
[ drools - 3762 ] avoid to create mvel type coercion in the rhdm ( # 3864 )
updated log file path initialization to use generics and corrected string concatenation to improve type safety and readability in logging configuration
added exception message to the log statement in ActionNode . java to improve error logging for better debugging
fix a problem where an tel : prefix be not strip from the number
updated visibility logic for shared file icon in FileListListAdapter to enhance user experience by showing shared file status accurately based on file type
deprecated the deprecated HIVEOPTSORTDYNAMICPARTITION setting in HiveConf . java and updated its usage in TestTxnCommands3 . java to encourage the use of the newer optimization settings
updated the ` ExecuteStatementOperation ` and ` Operation ` classes to utilize centralized configuration overlay handling to improve flexibility and maintainability of session management in operations
replaced ` Lists . newArrayList ` with ` Arrays . asList ` for efficiency and clarity to improve code readability and performance by using standard Java collections
fix geot - 6871 geot - 6871 failure in unit test ( ted yu )
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to the method was deemed unnecessary and redundant
remove nonsensical comment : shuffling input do not grant extra privacy .
camel - 8205 : camel - netty - http - should use http port if available .
change some of the test to use log instead of system . out . println for this test .
added a condition to check if the row index is within the bounds of the connection list to prevent potential index out of bounds errors when accessing database connections
implement rfe 9683391 - add fail - fast rule for method with the same name and enclosing class .
added ExtendedPlatformComponent class and updated ManagementFactory and ManageFactory to utilize it to improve management management support and enhance bean management flexibility
replaced double quotes in SQL query processing to ensure proper SQL syntax by normalizing quotes
updated Bleutrade request URLs to include the " org / knowm / xchange / bleutrade / dto / " prefix to ensure consistency in resource loading across test files
refactor TextEscapeUtils for improved readability to enhance maintainability and ease of understanding for future developers
added a filter parameter to the FilteredQuery and adjusted its instantiation in AbstractSpatialFieldType to improve query flexibility by allowing custom filtering behavior based on local parameters
added progress messaging and posting for update results email in GpsLoggingService and AutoEmailHelper to improve user experience by providing feedback during the auto - email feature
replaced ArrayList with HashSet for inlinks and updated methods for better performance to improve performance and prevent concurrent modification exceptions
[ tradfri ] only remove discovery result if the service be stop
hive - 23420 : fix filterhooks . get getPartitionsbynames ( ) to run at server side . ( denys kuzmenko , review by jesus camacho rodriguez )
added the ability to track the ' Abandoned ' status in the TicketModel and TicketsPage classes to enhance user experience by allowing access to approved tickets
make ` columnAliasPrefix ` uninitialized to ` null ` in multiple platform classes to improve flexibility in handling column alias prefixes across different database platforms
updated LlapRowRecordReader and LlapRowInputFormat to use BytesWritable instead of Text to improve data handling and compatibility with Hadoop ' s BytesWritable framework
add a non - native jvms detector to allow the user to run on a 32 - bit jvm .
fix name do n ' t belong in the page when convert a page to a parent
added a new daemon option ` DAEMON ` in the ` TerminalClient ` and updated the ` RESET _ ALARM ` to include it to allow users to control the display of a web pendant UI during daemon mode execution
added a new class FlushIndexTask for managing index writer flushing tasks to facilitate the flushing of the next buffer in the index benchmarking process
adjusts memtable and binarymemtable writer size estimation to cover change in memtable and binarymemtable
added support for SEASONS output in the MediaLibraryFolder class to ensure compatibility with additional audio formats handling
added a new file ` LocalSocketAddress . java ` to implement a DatagramSocket instance to test socket address compatibility with IPv6 loopback
updated grid size points in GridSizeMigrationTask . java to align grid size points with new configuration requirements
refactor methods to use ` ci . name ` directly instead of ` ci . getName ( ) ` and ` FieldInfo ` directly to improve code clarity and reduce redundancy in field retrieval
added support for reading - only context by introducing READ _ ONLY option and modifying commit / rollback logic to enhance control over read - only operations and improve error handling for unsupported states
refactor LookAndFeelCommand class for better readability to improve maintainability and ease of understanding for future developers
fix arrayindexoutofboundsexception in blockboxing . islastrun ( ) ( fixes # 511 )
added imports for EOFException and EofException , and modified the assertion check to ensure proper handling of specific exception types in the GracefulStopTest
removed unnecessary locking mechanism for listener operations in NetJavaImpl . java to improve performance and simplify listener management
networkparameters : remove obsolete reference to acceptableaddress in javadoc
replaced the conditional check for account asset optimization with a direct assignment to ensure that account asset optimization settings are consistently applied regardless of the configuration
added a new constant J9 _ GC _ POLICY _ NOGC and initialized it to 0 to control garbage collection behavior during garbage collection
remove the hack to catch invalidprotocolbufferexception in the case where the app should throw the proper error .
remove old , dead class to remove strictexception validation
add fallback to english for html - help fallback
added a new file ` ProcessorInfo . java ` containing functionality to retrieve available CPU processors from the system to provide a mechanism for managing CPU performance metrics in the application
add - html option to print bug reporter ( i hope )
fix null issue for logbackloggingsystem and deprecate it
refactored handling of service component recovery changes and made cluster variables final to improve code clarity and enforce immutability for better maintainability
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to include new test cases to ensure proper handler creation with user configuration and improve test coverage for tag propagation functionality
refactor the rust dependency type handling using a switch statement to improve readability and maintainability of the code
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap ` for query parameters to enhance flexibility in handling error responses during OAuth2 login
hbase - 4560 improve efficiency of seekbefore in hfilestorereader ( janos gub via kevinwilfong )
hhh - 6049 introduce new default timing timing . always for default value generation
add test and validation for layerNorm ( # 5678 )
refactor file sharing functionality by using a centralized method in FileOperationsHelper to improve code organization and maintainability by centralizing file operations operations
added a new file ` LiquibaseUpdateMojoExecutionTest . java ` for testing the LiquibaseUpdate plugin execution to ensure correct functionality of the ` LiquibaseUpdate ` plugin through automated testing
convert the proxy type to uppercase when setting it from a raw string to ensure consistency in handling proxy type format
add minecraftforge . dungeonlootretry to readme and update readme .
refactor JdbcDatabaseSnapshot to improve key handling and filtering logic to enhance efficiency by accurately querying the number of tables being fetched based on the database ' s configuration
added a new container implementation for adding a CSS border to enhance the layout by adding a label to the container
allow retryloadbalancerinterceptor to intercept the exception , and specify the status code
changed superclass initialization from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure consistent layout behavior across different screen sizes
updated the calculation of parentTaskName by removing the addition of nanoTime ( ) to correct the time unit for parent task naming
added error handling for invalid service request formats in ServiceResourceProvider . java to improve robustness by ensuring that invalid inputs are logged appropriately
simplified the return statement for version checking in IndexDatabase . java to improve code readability and efficiency by reducing unnecessary variable usage
make sure round [ - 4 , 2 ] be not account for 2 in ca
lint : fix typo in anoncipherwithwantclientauth comment
deprecate producertemplate in favor of the simpler and spring one
modified JLayer . java file to improve functionality and maintainability of the code
fix hiccup randomly fail evict entry test ( # 15831 )
modified the internal encode method to use ' saltedPass ' instead of ' input ' to enhance security by using a more descriptive variable name
fix nullpointerexception in removeGlobalLayoutListener ( )
updated Response class for improved error handling to enhance reliability of response processing
fix ( sstablemetadata ) : max timestamp must be long . max _ value
increase size of security window to ensure it do not exceed 200x45 space .
added null and empty checks for replies and compressReplies in multiple classes to ensure that replies are only returned when they are not null or empty
updated HitbtcBalance to use ` toString ( ) ` and ` hashCode ( ) ` methods instead of ` toString ( ) ` and removed unused imports to improve code clarity and leverage existing utility methods for better functionality
fix ( sql ) : fix order by clause handling for in statement
hbase - 26282 retrysexhaustwithdetailsexception . java should print the number of retriesexhaustedexception a string to show the failure message ( # 3623 )
bugfix : gcode editor open the cooky when the file be edit ( fixes # 618 )
replaced the HTTP connection manager instantiation with a customized connection manager using Hazelcast to enhance compatibility and support for HTTP / 2 features in the application
fix ( powerwood ) : avoid exception when receive energy > 0
added a check to delete the temporary output file if it exists to ensure the temporary output file is cleaned up before reuse
added a new parameter to the BitstampWebSocketTransaction constructor and modified the test cases for Trade retrieval in BitstampStreamingMarketDataServiceTest to ensure proper handling of trades and enhance test coverage for accurate market data retrieval
[ java ] ignore replay if the value be less than clause and the scheduler do not support it .
update citeproc dependency to 1.1 . 0
fix bug where videohdtformat be not apply to all column of media type ; patch by john sichel ; review by jbellis for cassandra - 630
show definition only for equation in exam , not in exam
fix a nullpointerexception report by antonio gomes rodrigues
hbase - 20901 optimize metascanner ' s scan for small table ( jesus camacho rodriguez , review by gopal v )
updated the initialization script name in CliConfigs . java to clarify the purpose of the SQL initialization for minimr tests
8273091 : doc of [ strict ] math . floordiv ( long , int ) erroneously document int in @ return tag
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable the enabling of a transient taskbar feature in debug mode
[ hotfix ] [ runtime ] fix checkstyle violation in accessedexecution and archivedexecutionvertex
added a condition to set density to 3f when scale is 3 to ensure proper density adjustment for different screen resolutions
replaced the ` optional ` boolean with ` vararg ` in the ` Parameter ` class to enhance clarity and better represent the purpose of the parameter
hbase - 22220 logging improvement in hbase - server ' s lifecycle of region state store ( addendum )
replace an anonymous inner class with a lambda expression for clarity in the assertion check to improve code readability and reduce boilerplate
updated logging messages and refactored connector initialization in AsyncHttpConnection . java , and added a new SelectChannelAsyncContextTest . java class to improve logging clarity and enhance test functionality for asynchronous context handling
[ ql - v2 ] use subtitle in search ui ( # 1938 )
added a break statement to handle read committed mode in the database and removed the testSetMode method to streamline lock mode handling and improve test reliability
[ gr - 21193 ] make sure we ' re only run test for linux and amd64 .
fix # 244 : support for integer - valued id field
update primary key validation logic to allow multiple primary keys to ensure that only one required primary keys are accepted to maintain data integrity
added conditional logic to set drawable resources based on LMP status in multiple classes to improve app visuals for devices running the LMP theme
add an exception to the ` ` no isolate to query for the flutter view ' ' . ( # 6376 )
added multiple header writer methods for X - Frame - Options and X - Frame - Options to improve code organization and readability by consolidating header creation logic
modified the ObjectEnumerableAssert class to improve its functionality to enhance the accuracy of enumerable assertions for better testing
[ java ] changing test package name to avoid conflict with grid grid .
added type attribute to @ aggregateroot to fis test failure
added prebuilt libraries directory resolution and updated related imports in PythonBinaryDescription and PythonInPlaceBinary to enhance the handling of prebuilt libraries and maintain correct dependency resolution
fix client auth support for camel - net
hive - 27370 : repl / functions should respect the system property for cmroot ( jesus camacho rodriguez , review by gopal v )
updated task view retrieval logic to handle primary and secondary tasks more efficiently to improve the accuracy of task visibility checks and reduce redundant code
add timeout to make test pas on slow machine
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the refresh process for better performance
[ netbeans - 4294 ] fixed break refactoring of controller variable name in processable
updated the context variable assignment and added a new test method in PipelineBuilderTest to ensure correct behavior of the pipeline when consumption all children in a full execution plan
added ClassLoaderHandler import in module - info . java to enable the use of ClassLoaderHandler for improved class loading support
planner - 410 add new method to solve solver and persistenceframe ( use it )
added JsonIgnore annotation to ApplicationSettings . java to exclude sensitive fields from JSON serialization
changed the condition from checking if throwable is null to checking if it is not null to ensure that the code executes the relevant logic only when throwable is available
refactor query information retrieval to avoid repeated null checks to improve code readability and maintainability
fix an issue with auto workbench where empty recipe can be perform in the wrong way .
fix the issue of gl200textprotocoldecoder throw an npe when the next token be null
replaced ` timeColumnName ` and ` timeFieldSpec ` with ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to improve clarity and consistency in handling time fields
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and reordered the call to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` to improve code efficiency and readability by eliminating redundancy
added initializables to prevent container from be inject with the external context .
add sample tag to timer for longtasktimer . fix # 499
changed the data type of ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and adjusted fetch time calculations to improve precision in calculations and ensure proper handling of fetch intervals
adapt abstractfragmentinsertiontagprocessor to clearer diagnostics about deprecation of fragment expression in thymeleaf
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when reading attributes
http : / / issues . apache . org / activemq / browse / amq - 2758 - fix and test
added new color constants and improved extractInto method to handle fallback color extraction to enhance color processing logic and support for dark text hints
test to see if the data folder be accessible and have add it to srcFolderPathList
removed the build type check and updated the appendContent method to includeTitle parameter to streamline title handling and enhance functionality by allowing content inclusion options
removed instantiation of SessionRegistryImpl from sessionRegistry to allow for easier session management
updated the connection scheduling to log connection complete and handle exceptions to improve error handling and provide clearer logging for reconnection issues
replaced instances of ` Factory ` with ` Proxy ` in several test files to unify the use of the internal Javassist proxying mechanism
replaced ConcurrentLinkedQueue with ConcurrentHashSet for thread storage to improve performance and reduce contention in concurrent collections
updated error message handling to include the port and host information to improve clarity of error messages for better debugging
added a check to validate if the view directory is under the repository directory to ensure that the view directory is within the repository directory for security and prevent errors
fix tab and remove reference to tabbedpane ( # 7125 )
added and modified the use of compressed object pointers in multiple Java files to ensure consistent usage of compressed object pointers during testing
peersync : remove error log ` ` not in active or replay state ' '
deleted the ConnectionHook . java file to the class is no longer needed for the current implementation
removed unnecessary ` waitForReplicasInSync ` field in multiple test files to streamline testing by ensuring it is still active during sync operations
camel - 13850 : fix swagger generator test that be fail on window due to the wrong type check
add namespace guard support to access evaluator ( # 1598 )
update license year to match last edit in jdk8 jaxp repository
refactor AggregateEngine to use a singleton instance and change the thread pool size to improve thread management and ensure better resource handling
modified WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve memory management and performance by utilizing the byte buffer pool
added scrollToPositionWithOffset calls for LinearLayoutManager to ensure proper positioning of thumbnail elements based on scroll position
fix ( sql ) : fix ( sql ) : fix select - columns with timestamp ( # 3342 )
refactored animation handling in LauncherAnimUtils and added transition animation methods in LauncherStateTransitionAnimation to improve animation performance and readability in the launcher transition animations
fix ( kubernetes - client - api ) : disable default user agent when request be over proxy
added pubsubhubbubbing functionality to the FeedRefreshUpdater and ApplicationSettings classes to conditionally handle pubsub connections based on a configurable setting
changed the access modifier of the finalize method from public to protected to enhance encapsulation and restrict overriding capabilities
updated the method to check for synthetic classes in addition to anonymous and local classes to ensure that synthetic classes are properly recognized during class analysis
add dummy web app to make it easy for test .
hive - 10315 : table cache fail with npe when some table contain a table with the same name ( jesus camacho rodriguez , review by sergey shelukhin )
change the identity triggering syntax in JobGenerator . java to include a space before the group name to improve clarity and consistency in key generation
updated logging messages and transaction broadcasting logic in Wallet . java and TransactionCapsule . java to improve error handling and provide more informative log messages for transaction issues
improve test to make it less flaky ( # 20528 )
format changes in HiveClientConfig . java and TestHiveClientConfig . java for consistency to improve code readability and maintainability by standardizing variable names
added a TlsClientCertPolicy enum and updated GitBlitServer to use it for client certificate policy checks to improve code readability and maintainability by centralizing client certificate policy management
removed a condition that verifies if the CHALLENGE has been saved in KrakenFuturesStreamingService . java to simplify the subscription process and improve logging clarity
added headers and subprotocols to the WebsocketRoutingFilter class to enhance the WebSocket handling to support custom protocols based on the request headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve visibility into query result set fetch requests for better debugging
updated the string formatting in HolidayEventFormatter to remove the dimension name and adjusted the label format to simplify the output by removing unnecessary colon for better readability
updated test methods and logic for handling inner class fields in FinalizePrivateFields . java to improve clarity in testing and ensure correct handling of inner class modifiers
updated UnexpectedJobExecutionException class to improve error handling to enhance reliability of job execution failures
8169050 : [ macosx ] remove aqua check for macosx sdk button
replace maxFreq with maxCost in DrillSidewaysQuery and DrillSidewaysScorer classes to ensure correct handling of document metrics and improve clarity in maximum cost logic
added classRegsitry mapping for GeoDegeneratePath in StandardObjects . java to facilitate the handling of degenerate paths in the application
added a pre - fill option to various pool classes in the object pool implementation to allow users to decide whether to initialize pool objects upon creation
added a condition to update the taskbar state and updated the existing flags for taskbar stashing to ensure taskbar behavior aligns with the new system UI settings
added null check for default style in CascadeDeleteVisitor to improve robustness by avoiding potential NullPointerException
fix the marqueelabel positioning issue with the main title and the status tab
refactor icon retrieval logic in FileTreeViewHolder . java to simplify the code and improve readability to enhance maintainability and clarity of icon display logic for different file types
updated assertions in ParallelUniverseTest to use ` contains ` instead of ` isEqualTo ` to allow for more flexible validation of resource qualifiers
fix concurrentmodificationexception in xmlreporter ( # 2211 )
[ native ] fix broken test nativeworker
added ShutdownThread deregistering to ClientContainer to ensure proper resource management and cleanup of the client container
hhh - 9550 add deprecation for drop temporary table after use
simonstewart : applying patch from jason deref to the htmlunit driver . the color functionality be now consistent with htmlunitdriver .
renamed multiple Java classes related to XML processing to improve code clarity and maintainability by standardizing class names
updated LinksIndexingFilter . java for consistency and functionality to improve code maintainability and readability
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability of memory allocation logs for better debugging
restore ad group count on resume after remove segment
added a null - check for the contract of ` actual ( ) ` in the ` MultimapSubject ` class to improve code safety by suppressing the warning for the contract of the method
fix ( # 5104 ) : display unit _ hz instead of deg _ text ( # 5234 )
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 873 )
replaced the method of populating the TreeMap in TestLabelOptions . java to improve code efficiency by reducing the number of method calls
correct race condition wrt format and output type inighter flat
fix : add miss trace for client and server interceptor
replaced ZoneId conversion with TimeZone conversion for better clarity to improve code readability and maintainability by using a standardized TimeZone instance
added AsyncBucket and InMemoryExtension classes and updated method signatures to throw exceptions to improve functionality and maintain compatibility with InMemoryExtension
modify the way class directories are retrieved from the test classpath in resexhausted003 . java to improve the error handling for missing test configurations by checking the presence of the classes directory
fix indent and add try catch block in abstractconnector . java
fixed typo in ongoingstubbing javadoc
added an Optional < WebServer > parameter and modified web server server logic to enable reuse of web servers based on new configuration to improve flexibility in managing web server instances
renamed variable ` productConstructor ` to ` constructor ` for clarity and consistency to improve code readability and maintainability by using a more descriptive variable name
add log to indicate miss allowlist
renamed the output source to the item writer in TransformerWriterItemProcessorTests . java to ensure consistency with the item writer ' s method naming conventions
[ dmn - 4247 ] ignore hitpolicy . collect when find overlap
add a test for sliding window combine with test coverage
added conditional check for ` allAppsDirty ` before binding all apps and improved logging message format to ensure apps are only bound when necessary and to provide clearer log output
camel - 7754 : camel - jmx - avoid flaky test due to race condition in jmx mbean server .
format modifications of the Solution class to improve readability and maintainability to enhance code clarity by applying consistent formatting and conditional checks
8048549 : [ macosx ] disable usage of system menu bar if awt be embed in fx
fix handling of fall damage base location ( # 543 )
refactor the query handling in SimpleJpaRepository to improve readability and efficiency to enhance code maintainability and efficiency when checking for example results
updated the builder to populate timestamp , parent hash , nonce , and number from the genesis block arguments to enhance the functionality by allowing dynamic values from the genesis block arguments
make safepointinsertionphase a more accurate class for hotspot with safepoints
hbase - 25875 avoid potential nullpointerexception when run rsgroupmanagerimpl # listchildrenandwatchfornewchildren ( )
make the artifactresolver public to allow wider access
fix race condition when player close the reactor .
added validation to ensure maxBufferedDocs is at least one to prevent illegal argument exceptions when modifying the buffer size
added handling for the current login state in LoginActivity to improve user experience during screen rotations during configuration changes
added null checks for input elements and enhanced value extraction logic in Pump . java and added a test for reversed UUIDs in PumpTest . java to improve robustness against null values and ensure correct functionality of UUID handling
refactor load balancer creation and access modifiers in HttpShardHandlerFactory and LBHttpSolrServer classes to improve code accessibility and allow subclasses to access these members
updated the order of the authentication service selection strategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added unit tests to align the service selection strategy with the new authentication strategy requirements
added server handler setup using Jetty ' s HandlerList to enhance the JNDI context handling by allowing handler registration
hive - 27324 : fix npe in sortedpartitionoptimizer ( # 4073 ) . ( ayush saxena , review by stamatis zampetakis , ayush saxena )
replace the check for NioEventLoop instance with a direct return statement to simplify the logic and ensure consistent behavior in event loop handling
[ iotdb - 6343 ] fix bug in statsutils when column be reorder ( # 7348 )
camel - 18151 : camel - jbang - export should honor kamelet location in export
updated OSMJob . java to utilize OpenStreetMapManager for managing access tokens and authorization error handling to enhance authorization checks and improve error reporting for granting access to OpenStreetMap
minor cleanup of compiler output and move test method into own module .
added client authentication configuration to the IoTDBRestServiceConfig and modified RestService to support it to enhance security by allowing client authentication features
removed unnecessary dependency on mock candidate injection in PropertyAndSetterInjection . java and added a new test class ChildWithSameParentFieldInjectionTest . java to simplify the code and ensure correct behavior when injecting mock candidates with different field types
update bloomuriuniqfilter javadocs and make default configuration dynamic
change cursor adapter from false to true and add a preference for refreshing to enable refresh functionality in the TweetPager
increase intermediated header height ratio from 1f to 75f to improve layout consistency and responsiveness
updated imports and class definitions to use the new RecompilationEvent class to enhance event tracking and maintain consistency across the codebase
ambari - 20752 . allow to configure ` ` host _ sys _ prepped ' ' property to skip upgrade ( dlysnichenko )
core - 3020 no warning when include file do n ' t exist ( miss extension ) . fix log for include , add test .
added logic to delete trailing slashes from the location string to ensure proper formatting of URLs for application data
added support for set the entity of static pipeline ( # 984 )
refactor file name handling and add configuration for the Whoops module to improve file path management and enable conditional logging of application errors
[ geos - 7258 ] catalogrepository . lookup ( name ) should return null if not find ( localpart )
fix issue # 134 ( wrong javadoc of assert )
added two test classes for multi - line and line - like text rendering in NavigationTests . java to ensure proper functionality and layout of multiline text in the user interface
tidy up the test case to avoid false failure on different topic
[ iotdb - 2143 ] fix write align timeseries with schema ( # 4131 )
update memory usage calculation in TestPromvivorToTenuredAfterMinorGC . java to ensure accurate measurement of memory during testing
update logging file name from slf4j - log4j12 - to slf4j - reload4j to ensure consistency in file naming conventions
[ hue ] resolve unit test race condition ( # 12370 )
changed package structure for multiple activities and updated import statements to organize activity - related classes more effectively within the project structure
disable fail test due to fixed issue ( drools - 1276 )
added a constructor to PullRequestMergedEventsStream that reads the Pinot schema from a file and updated the Pinot API caller to use this new parameter to improve handling of schema file read operations and facilitate better integration with external data sources
no effective change - add code inspection suppression comment
[ hotfix ] remove ' null if not allocate ' from taskslot comment
replaced instances of FIRE _ EXCEPTION _ ON _ FAILURE with CLOSE in NettyWebSocket and NettyWebSocketTest classes to standardize the listener naming and improve consistency across the codebase
updated lock release logic and logging for better error handling to improve reliability and clarity of lock management during output movement
replaced Properties loading with Resourcebundle retrieval for GEM _ PATH and RUBY _ VERSION in JRubyBackend . java to improve resource management by using a more robust method for loading properties
remove unnecessary constant and use byteutil . empty _ byte _ array instead
[ flink - 23799 ] [ runtime ] do n ' t call class . forname ( ) if the method be call from an uncached classloader
[ flink - 7772 ] [ runtime ] fix the failure in jobmanagerstartuptest when run on window
chore : [ cloud ] add new datastream resource for google / datastream ( # 96 )
added a Bundle as a Bundle and included it in the FileDisplayActivity to facilitate the handling of extras in the activity
change the control flow from break to continue when a particle is null to ensure the loop continues rather than terminating when a particle is not available
updated expect values for cluster tests in AmbariManagementControllerImplTest . java to reflect changes in cluster versioning to ensure tests reflect the correct number of attempts for cluster operations
changed the column name from nullable to non - nullable in TransientSessionTicketImpl . java and added exception handling for NoResultException in JpaTicketRegistry . java to simplify the database schema and enhance error logging for ticket retrieval issues
update Bug4823811 . java file to address identified issues in bug4823811
replace the direct argument addition with a function that uses the path relativizer for pattern deletion to improve code readability and maintainability by using a dedicated function for path relativization
[ deconz ] request full state without wait for discovery result ( # 14373 )
refactor ShibbolethCompatiblePersistentIdGenerator to allow attribute handling and serialization to enhance flexibility in attribute management for the principal
added an @ Inject annotation to the RequestValidationService class to ensure proper dependency injection for service methods
added logging for the visibility of the keyboard logger in UiThreadHelper to improve logging clarity by tracking and managing keyboard visibility effectively
removed redundant line of code in FileNodeProcessor . java and cleared MManager in MTreeTest . java to improve code readability and ensure proper cleanup of MManager instance
updated NavigableMap and NavigableSet classes to improve code clarity and maintainability
add test to verify that slurpfile ( ) be load correctly .
removed the ` protected ` access modifier from the ` client ` variable and added the ` @ FunctionalInterface ` annotation to enhance encapsulation and indicate that these classes are intended to be functional interfaces
refactor span retrieval and validation in TraceWebFluxTests to use a helper method to enhance code readability and maintainability by reducing redundant code
added support for the DateWritable type in Hive schema conversion and handling to enable the conversion of DateWritable objects to DateWritable objects in Hive serialization
fix stringindexoutofboundsexception when parse -- options [ 1 ]
apps - 187 use stringparser . positivedoubleconverter ( ) to convert value to number and return error message
updated column count validation logic in SemanticAnalyzer . java to ensure correct mapping of columns in row fields to improve accuracy of column mismatch error messages for better debugging
refactor WANDScorer to improve handling of document boundaries and maintain consistent scoring logic to enhance code clarity and ensure correct document processing
clarify the example of exception handling in correspondence . compare by use an explicitly cod correspondence create method
refactored import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to improve code clarity and reduce potential namespace conflicts
initialized ` curPixVal ` to a default value and created a new test class ` WhiteTextColorTest ` to ensure consistent pixel value handling and verify the proper rendering of white text on a black background
biomedictionary . getsupertypes ( ) return a whole collection and update related method to use a deque instead of a list .
rename variable ` withinTolerance ` to ` exceedsTolerance ` and adjust related logic for expiration threshold handling to improve clarity and correctness of cache expiration logic
added stability annotations and imports for test classes in TaplTestsLauncher3 . java to enable test stability for the application tests
update package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
enhanced log file suffix validation by adding a check for empty log file formats to improve robustness by avoiding potential errors when log file names are empty
refactor PythonBuckConfig to improve code readability to enhance maintainability and reduce complexity
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest . java to ensure correct functionality of system shared library names in the package manager
fix meiligao decoder ( fix # 737 )
fix npe in get total battery capacity calculation , fixes # 641
change cache handling to use an asynchronous approach and update cache summary display to improve user experience by providing clearer cache size and informative notifications
test : update dependency com . google . api : client - > com . google . common : collect
return 401 instead of 403 for access control response from basic authorization
increase code coverage and suppress warning in method signature
replace ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( storageManager call ) . onItemClicked ( operation . getRemotePath ( ) ) ` to improve functionality by directly notifying the selected file to the user
added conditional logic to close InputStream based on file path criteria to improve handling of multiple streams and provide clearer debugging information when files match the specified path
updated method signatures to remove EnvironmentContext parameter and simplified table creation logic to improve code clarity and reduce dependencies on environment context for better handling
added a volatile boolean flag ` aborted ` and modified ` start ( ) ` and ` abort ( ) ` methods to ensure proper handling of task abortion to prevent potential concurrency issues during execution
updated indentation logic in multiple parser classes to ensure correct indentation based on state index to improve accuracy in parsing behavior and prevent out - of - bounds errors
added wifi status change listener to the postfragment , and let it listen to it
remove redundant control frame check within the FrameGenerator class to simplify the validation logic for control frames
added visibility setting for the collapse handle view in WidgetsBottomSheet . java to ensure the collapse handle feature is visible for users
added two new files , Issue475 . java and XSS . java to implement HTML and JavaScript escape functionality to implement unit tests for handling special characters in JavaScript and HTML inputs
added a check for zero units in the StandardGraphIO class to prevent further processing when there are no units to scroll
updated the condition to check for non - empty contract lists instead of greater than one to ensure that only one contract list is processed for processing
added methods to add and put enums with null checks in JsonArray and JsonObject classes to enhance flexibility by allowing null values for enums while ensuring non - null keys are handled correctly
added hashCode method in IPPPrintService and created TestRaceCond class for validation to ensure consistent hashCode implementation for print services
remove getter and setter to avoid shadowing
do n ' t show ' connect ' button if there be no platform fee
refactor BatchUpdateException , PreparedStatement , and Statement classes for improved code organization to enhance maintainability and readability of the codebase
clear first subSample by default when buffer encryption be enable .
removed the ` public ` access modifier from multiple ` AsynchronousAntn ` , ` BulkheadAntn ` , ` CircuitBreakerAntn ` , and ` FallbackAntn ` classes to enforce package - private access within the same package for internal use
added Retrofit import to Part and PartMap classes to enable Retrofit functionality for better data handling
updated JsonBuildHelper and ParamsBuildHelper to enhance the handling of Java object full method parameters to improve code clarity and maintainability by consolidating conditional logic and enhancing parameter processing
added a new constant TYPE _ TASKBAR _ OVERLAY _ PROXY and updated related bitwise operations to include this feature to enhance functionality by integrating taskbar overlay functionality
fix : update gapic - generator - java with mock service generation fix ( # 50 )
update alpha calculation logic in ClipAnimationHelper and add hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on task states
updated the createRenderScript method call to remove the ' true ' parameter to simplify the render script initialization by removing unnecessary parameters
whitespace change to trigger full ci build ( incl . regression test )
cleanup , and reformat a couple of check to improve code readability and maintainability .
hbase - 8430 fix checkstyle violation in integrationtestsparkbulkload . java ( # 4438 )
add loew false positive test to keychaingrouptest ( # 688 )
refactor rocket configuration handling to use a new configuration object to improve code clarity and maintainability by consolidating configuration management
cloudstack - 5059 : fix npe in find attache ( hostid )
add null check to the entry when deserializing an object ( defaultrecordstore )
cloudstack - 7093 : propagate error message when host not find on kvm enable error
no _ name and no _ value in paramaction should be plural .
modified BaseStubbing constructor parameters and adjusted constructor calls to accept an Object parameter to enhance flexibility by allowing mock arguments to be passed directly
truffle : make method . getmethodline ( fileobject ) work for java 8
update version name and code for GreatVoyage to reflect changes to ensure users receive the latest updates and features
fix squid : arraylist - > set , to avoid duplicate
various tweak to style option to improve readability and reduce warning
popup wo n ' t hide the scrollbar when resize the web / all
8274258 : remove unused - source and - target flag from error message
replaced the implementation of StartingWindowListener with a dedicated interface to improve modularity and maintainability of the code
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code documentation and maintain consistency with inherited methods
updated exception messages in CheckPackageAccess . java to specify PackageAccess and PackageDefinition security exceptions to improve clarity and accuracy of error handling in package access security checks
increase wait time for thread safepoint test to reduce flakiness .
make loggingenabled default to false ( # 1092 )
added @ JsonIgnore ( true ) annotation to Schema . java to prevent serialization of sensitive data during JSON processing
testnontxindexbuilder : increase timeout on test
updated the train method to improve its functionality and variable naming conventions to enhance code readability and ensure correct scoring behavior in the classifier
renamed CheckHelperModule to CheckHelperAuditModule and updated injector setup to enable auditing functionality in the application
chore : update protoc to v3.15 . 3 ( # 370 )
added a check for the table is transactional and initialized it with the property of tableIsTransactional if it is null to ensure proper handling of transactional tables based on the configuration
[ java ] : change recordingwriter . writelayout to use onblock instead of write fragment .
fix 0 mean to be able to seek to the first subtitle
added alias metric to datastoremetricqueryimpl to avoid duplication in test
updated currency pairs in VaultOfSatoshiBaseService . java to replace new currency pairs with new ones and adjust currency pairs for future updates
hhh - 13091 fix multiple test failure that be fail on hibernate 6
update package imports for KafkaSender from ` zipkin2 . reporter . kafka11 ` to ` zipkin2 . reporter . kafka ` to ensure compatibility with the latest package structure
added two new test files , GwtBinaryIntegrationTest . java and A . java , for the GWT client integration testing to ensure the build process works correctly and adheres to expected output files
added a condition to hide the loading cause label and updated the handling of specific click events in BrowserContentPane . java ; improved error handling in SQLConsole . java to enhance user experience by disabling loading causes and ensuring robust handling of exceptions
change the way the enablerandomimpl getrandomizerbytype ( ) method return the expect value
added XMLSecurityPropertyManager as a static final variable and modified related methods to use it to improve code readability and maintainability by centralizing security property management
added default methods to interfaces and implemented them in subclasses to demonstrate inheritance and method overriding with default interface methods
updated SQL predicate methods to use " GLOB ( \ " * " ) " instead of " LIKE ( \ " % " ) in SqliteFieldPredicateView . java to enhance functionality by allowing for more flexible matching with private fields
[ kogito - 2562 ] add a compile test and small fix for compilation error ( # 425 )
fixed - redissonscript . load ( ) . getallentries ( ) and redissonclient ( ) method of rscript object throw moved error . # 1855
corrected string concatenation syntax and refactored the setWordFieldVolatile method to simplify parameter handling to improve code readability and ensure consistency in method implementation
[ flink - 30974 ] [ core ] fix some typo in verbose log message
retain and release the payload before send a proxy packet . hopefully fixes # 4569
added HTTP _ JETTY _ SERVER _ HANDLERS constant and updated WebServer to use it to improve configuration flexibility by allowing custom Jetty server handlers
replace the handling of shortcuts to manage removed shortcuts and bind updated shortcuts more efficiently to improve shortcut management and ensure proper deletion of unpinned shortcuts from the workspace
remove unnecessary type check for string in defaulthttpclientbinderregistry
removed the case handling for the home button in DetailFragment . java to streamline navigation functionality by eliminating redundant navigation logic
added a check for the Android market in the activity to ensure play services are included based on the availability of the Android market
refactor cell parsing logic in TableBlockParser and add a test for pipes after whitespace after headers in TablesTest to ensure correct parsing of tables with spaces after headers and validate functionality
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enable proper handling of bridging headers in the project configuration
updated methods handling in PotentiallyDeadCode . java by replacing declared paths with unused sets and improving source file processing to enhance code clarity and maintainability by utilizing more appropriate annotations and streamline source file processing
added support for diamond finder in type processing to enhance type inference capabilities to improve user experience
refactor invocation stage tracing method calls in HighwayClientFilter and RestClientSender filters to use onStartSendRequest to streamline code for better readability and maintainability
added logging of cachemetrics registration to SolrCacheHolder . java to improve visibility of cachemetrics registration for debugging purposes
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper propagation of authentication errors to the application
modify the condition checking for zero in the float comparison to ensure accurate detection of zero difference between two float values
update logback configuration to use " logback . dev . xml " to enable dynamic loading of logback configuration files for improved flexibility
added a new file JaasEventCheck . java to handle authentication events for failed and successful Jaas authentication to provide a structured way to handle authentication events within the application context
refactor animation logic in QuickstepTransitionManager to use a list of views to animate instead of individual views to improve code readability and maintainability by eliminating repetitive code
modified the string distance comparison in ConjunctionSolrSpellChecker to use ` equals ` instead of ` equals ` and added a test class for non - identical StringDistances to ensure consistency in string distance checks and validate functionality through unit testing
changed the type of fetchers from HashMap to Map to improve flexibility in data structure usage for managing fetchers
[ hotfix ] remove unnecessary log name in defaultleaderelectionservice
removed the ` public ` access modifier from the ` setAuthentication ` method to enforce encapsulation within the ` AuthenticationException ` class
cloudstack - 3741 : make the polling of the storage pool wait for 2 hour by default
http : / / issues . apache . org / jira / browse / amq - 4213 - jdbcconnectorprovider add jdbc _ schema into params when create jdbc connection
corrected the spelling of " SQLUpdate " in the JdbcAcceptableUsagePolicyProperties and JdbcAcceptableUsagePolicyRepository classes to ensure consistency and accuracy in SQL update naming
replace synchronized block with synchronized map for schemaTypeCache initialization to improve thread safety and simplify the retrieval of schema types
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve efficiency and avoid redundant header additions
add ignore annotation , since this test relies on files available only from a CMU , avoid test instability
add directory creation for storage in TestCollector to ensure storage directory is available for saving data
set chunked streaming mode to 1024MB in StarTreeJobUtils . java to optimize data transfer by preventing chunked transfer
refactor : add some basic and single type checker ( with test )
hbase - 22272 org . apache . protobuf : upgrading from 3.22 . 1 to 3.22 . 1 ( # 257 )
added a test for recursive structure to ensure stack overflow exceptions occur when populating beans with recursive structures
added IOException to the getRemoteName method signature to handle potential IO exceptions when retrieving the remote name
added a new exception for IllegalArgumentException and modified the client creation logic in multiple classes to improve error handling robustness and enhance client management capabilities
refactor WebSocketConnection and ExplicitDemandTest classes to improve code clarity and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration flexibility by allowing aspect - based method security interception
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by implementing proper hostname verification for SSL connections
modified the OHLCSeries class to allow removal of items by index and added a custom remove method to enhance functionality and ensure correct behavior when removing an integer
fix issue with serialization and deserialization of compact format
fix # 2611 : properly destroy joint when body be delete ( # 2611 )
fix a nullpointerexception in the searchfilter when there be no filter string .
[ flink - 20537 ] [ test ] [ test ] add miss license information to the test class
added exception handling for null document cases in DocumentsStorageProvider . java to improve error handling by providing clearer exceptions when documents are not found
added new interfaces ` HookDefinition ` and ` JavaHookDefinition ` , and created ` JavaHookTest ` class for hooks to enable registration and execution of hooks before Cucumber tests for improved functionality
add flushifdeadlock risk to queryexecutorimpl ( # 10671 )
updated the ` setExoOptions ` method to include a ` allowTs ` parameter and adjusted the corresponding usage in the ` setExoOptions ` method to allow for handling live TV profiles in ExoVideoVideoVideo
remove the user from the getIdentifier collection in DMRDecoderState . java to eliminate unnecessary user references during DMR decoding
added a static INVISIBLE color and improved toString method formatting in the Color class , modified RailButtonShapes for improved structure and clarity to enhance code readability and maintainability while introducing a predefined color constant
updated the logic for enabling null handling in CountAggregationFunction and added a new test case in NullHandlingIntegrationTest to ensure correct handling of null handling in aggregate queries and validate the functionality through testing
fix for possible deadlock on internaltransaction . clear ( )
escape the name in the buffer before appending it to ensure that the name is safely escaped for XML output
widen the work directory config so that benchmark can be use by eclipse .
[ doc ] introduce deprecation = ' ' true ' ' in the rulesetfactory
replace dummy label with direct call jmp in amd64directcallop .
peer should consider that the time interval be make to the min / max time ( # 1359 )
refactor BitDocIdSet class implementation to improve code readability and maintainability
refactor metric emission logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing duplication
refactor attachment checks and update GalleryActivity to include a new View Handler in the GalleryActivity to improve code readability and ensure proper handling of video attachments
fixed vanilla bug where the drain method of the tank would dip when a player be still in the wrong state .
update CsharpLibrary to handle different rule types and retrieve source paths accordingly to improve compatibility with new build rules and ensure proper source path resolution
modify to be able to process iq packet if a particular service can n ' t be find . jm - 825
add more null check to avoid npe
[ beam - 10670 ] only refresh metric tracking when there be active metric
pdfbox - 3906 : avoid outofmemoryerror after a brute force search
added a constructor to LwjglApplet that accepts a Canvas parameter and created a canvas to streamline the application initialization process and improve canvas management
ref # 29 : add dockerhost / registryname for environment variable log ( # 3997 )
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 39554 . apply password policy when the account state be not configure yet .
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
added a new private field ` resolveFromAttribute ` and utilized it in ` AbstractLdapAuthenticationProperties ` and ` LdapUtils ` to enable configuration of the resolve from attribute for LDAP authentication
refactor Readable class to improve readability to enhance maintainability and ease of understanding for future developers
pdfbox - 2576 : switch to ` ` testsupport ' ' by default for page break test
updated the icon for the share menu in CaptureActivity from a share menu item to a share menu item to ensure the share menu displays the correct icon for better user experience
fix compatibility issue with java 9 and java 8
check for not - jdbc41 compliant driver , and set it to false if not in jdbc41 mode .
genericcontainer : fix typo in javadoc ( # 2938 )
fix a bug concern arraylist . add doc and comment to enclosed javadoc
added multiple ` @ Override ` annotations to ` CentralAuthenticationServiceImpl ` , ` ImmutableAuthentication ` , and ` AbstractCasProtocolValidationSpecification ` classes to ensure proper method overriding and improve code clarity
removed unnecessary line breaks in ChartProvider . java to improve code readability and maintainability
fix # 4131 : move file dialog to the current folder when open file ( # 4184 )
modified JavacParser to return an empty list instead of a block statement to streamline the code by eliminating unnecessary empty block creation
added support for retrieving users by their created time in the UserRepository and related test cases to enhance user search capabilities by allowing users to retrieve users based on their creation time
modified Test15FloatJNIArgs . java file to improve functionality and maintainability of the test code
change versioning tag to use $ 1 for more flexibility . close # 43
nifi - 4619 mockprocesscontext now correctly decrypt the subject . this close # 1919 .
[ java ] ensure not reentrant call during archive callback to avoid nosuchmethodexception .
replaced direct dependency merging with a variable assignment for clarity to improve code readability and prevent potential null pointer exceptions
added @ Test ( timeout = 10000 ) annotation to SslBytesServerTest . java to ensure tests have sufficient time to complete successfully
peer : fix and clarify comment about put genesis hash into ` blocklocator `
add method to pinot - pinot - kinesis for backwards compatibility
modified FailureWatcher to check if exportedData is null before calling writeTo to improve null safety and prevent potential NullPointerException during data export
update popup positioning and positioning in RecyclerViewFastScroller . java to utilize dynamic radius calculations to improve responsiveness and maintainability of the scrolling functionality
updated method names and added tool window checks in multiple classes to improve clarity of code and ensure proper handling of tool window initialization
added a conditional check for Windows platform before creating a JCheckBox for preventing sleep settings to ensure that the checkbox only triggers when running on Windows to maintain platform compatibility
updated import statements from ` javax ` to ` jakarta ` in ` HttpConfigurationAuthorityOverrideTest . java ` to align with the latest Jakarta EE specifications
account for whether we be crop to top when compute the width / height of a dialog .
added fullscreenExclusiveModeState method and updated relevant methods in XWindow and XWindowPeer classes to improve state management for fullscreen exclusive mode functionality
fix wrong playedduration when url segment be > = 8
hive - 23706 : add credential to dag for map and reduce work ( krisztian kasa , review by jesus camacho rodriguez )
( chore ) camel - base - engine : replace keyset ( ) with entryset ( # 11493 )
trim whitespace from thread name when setting the thread ' s name to ensure consistent thread naming by removing leading and trailing spaces
updated error message in GpsMainActivity to indicate that the next point can be added to a file to provide clearer guidance on users regarding potential issues with logging
fix javadoc reference long when it should be double
added a test for unused types using the Unused class with specific abstract methods to ensure proper handling of unused types and improve code clarity
ambari - 22879 - master host should be show up for other host instead of master host . ( mpapirkovskyy )
deleted files EventReaderDeserializer . java and EventWriterSerializer . java to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of ` GenericRecord ` objects instead of a single ` GenericRecord ` to allow for multiple output records to be processed simultaneously
updated maxDelegateLockPeriod validation to allow greater than or equal to 10512000 and refactored related logic to increase delegation delay handling to allow greater than or equal to 10512000
[ springboot ] fix npe at startup if no network rate configure
removed initialization of services and updated the ` applySpecification ` method in ` CmcExchange ` to streamline the class initialization process and enhance flexibility in setting the exchange specification
updated the configuration handling in GossipLocalNode and changed the constant name from " config . json " to " config . conf " to improve clarity and consistency in configuration management
add an option to disable tpc client tpc - add test and fix # 2178
upgrade swagger - ui version for cve - 2019 - 17495 ( # 7902 )
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality of big integer operations and facilitate modular arithmetic
updated the key assignment logic in NamedObjectList . java to handle blank names more effectively to improve clarity and ensure a default key is used when the name is blank
hive - 23799 : cleanup empty data directory after query compaction ( # 29287 ) ( kiran velumuri , review by zoltan haindrich )
renamed AsyncCache and Cache classes for consistency to improve code maintainability and readability
added RCFileInputFormat registration to SerializationUtilities for compatibility with RCFileInputFormat to enable serialization support for RCFileInputFormat in Hive
added methods typeOf and categoryOf for retrieving Java types of a column in TypeMapperComponent to enhance type handling capabilities for column operations in the type mapper
added error handling for invalid host headers in the Request class and improved response validation to ensure proper server response and error reporting for invalid host headers
replaced ` libcore . util . TimeZoneFinder ` with ` org . robolectric . util . ReflectionHelpers ` for dynamic time zone lookup to enhance compatibility with Robolectric ' s features and improve test reliability
refactor methods for adding outgoing values and iterating over values in StandardOp . java to improve code efficiency and clarity by eliminating unnecessary complexity
changed instance variables in SegmentCoreReaders and SegmentReader to be private to enhance encapsulation and ensure the correct directory context used
improve log for if main thread profile exists , and rollup level can also be do
added a validation check to ensure annotations are not allowed in a Buck rule with required _ for _ source _ abi = True to improve error reporting for invalid annotation definitions during compilation
updated function names from " greekLowerCase " , " IrishLowerCase " , " Uax29URLEmailTokenizerFactory " , and " turkishLowerCase " to " turkishLowercase " to ensure consistency in naming conventions across the codebase
fix javadoc warning from r1715839 bug 58365
update autoregion to use discovery instead of lucene
8257777 : ( tz ) upgrade time - zone data to tzdata2020c
updated SurfaceSyncGroup initialization to include a specific identifier " TaskBarController " to improve clarity in group identification during taskbar drag operations
updated GridFsTemplate to use getId ( ) directly instead of BsonObjectId for file deletion to simplify code and improve consistency in file handling
added assertions for database column indices and enhanced data retrieval functionality in ShadowDownloadManager to improve test coverage and ensure accurate data retrieval from the DownloadManager
refactor character handling in TextField to improve clarity and maintainability to enhance code readability and conditional logic for character insertion
fix duplicate group hit npe ( # 6068 )
added a method to afterSetStatements in both Lower . java and BlockLexicalContext . java to improve terminal state handling for blocks during block execution
added hashCode method in IntervalXYDelegate and XYSeriesCollection classes using HashUtilities to improve hash computation accuracy and maintain consistency across instances
small cleanup fix to test to reduce false test failure .
refactored CloudWatchAppender to simplify formatting and updated test method names for clarity to enhance code readability and maintainability while ensuring correct method names are used
updated Gson serialization method from serializeSpecialDoubleValues ( ) to serializeSpecialFloatingPointValues ( ) to improve handling of float point values in JSON serialization
added multiple calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in several test files to ensure proper synchronization during block production operations
modified language tag canonicalization and added tests for language tags to improve accuracy in language tag processing and verification
cloudstack - 7267 : make sshtoagent configurable at runtime ( # 2529 )
removed the access modifier from the ScheduledAction class and its constructors and methods to enforce encapsulation and improve code readability
fix import path for emoji keyboard ( # 518 )
added a check to ensure the filter string does not contain " - " in SimpleSearchQueryConverter . java to avoid invalid query strings that may lead to runtime errors
updated text for sortColumnsLabel to use " Natural column order " instead of " natural order " to improve clarity and consistency of column ordering in the user interface
remove redundant array copy method in utils . java to improve code readability and performance
updated the method for writing the remote address in HtmlSessionInformationsReport . java to ensure proper encoding of the remote address before processing
fix item state trigger handler for late item ( # 5253 )
remove unnecessary sync identify by findbugs
refactor file moving logic to use a ThreadPool for improved concurrency handling to enhance performance and manageability of file operations in a concurrent environment
added methods to trigger and cancel timers with a specified period in WrapTimer . java to enhance timer functionality by allowing customizable timing behavior
fix : support localtimestamp and date type ( # 6321 )
added verbose option to error handling in AbstractStatusReporter to improve error reporting by allowing verbose error messages when enabled
ggb - 2118 menu item fix and close button fix .
cloudstack 3.0 api - protect vpn connection between same account and customer gateway
updated error handling in CursorReadingTask and added a new test case in CursorReadingTaskUnitTests to ensure proper exception throwing and improve test coverage for error scenarios
pdfbox / image / generateimage do n ' t throw exception if pdf be encrypt . patch by martin hausner , review by jbellis
fix the problem that the zk client executor could block the main thread if the zk client be shut down ( # 8905 )
refactor AnomalyDetectionResource and its test class to improve code readability and maintainability
updated the URL handling in the deleteItem method to use a unique ID and added a content resolver to ensure the URL is properly processed and to facilitate item deletion
updated assertion methods and conditions in Java6Assertions and Conditions classes to enhance functionality and maintain consistency across the codebase
changed the method signature and parameter type for replaceOrderBulk from Collection to List to improve method flexibility by allowing the order commands to be passed directly as a string
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and add ` enterFunctionNode ` method in ` Lower . java ` to enhance clarity and functionality by differentiating between default and function node handling
added a new class J9ConstantHelper to facilitate retrieving long values from reflection and updated ObjectHash to use it to improve accessibility and maintainability of the codebase
added a new test class for ConcurrentModificationExceptionOnMultiThreadedVerification to verify thread invocation behavior under multi - threaded verifications
[ gate - 27 ] added support for remove offline roster and all resource from transport .
updated properties retrieval from ` getProperties ( ) ` to ` getOverlayedProperties ( ) ` in ` MapOperator ` and ` PartitionDesc ` to utilize the overlayed properties for improved management of overlayed properties
updated the method call syntax by adding a space before the opening brace in FunctionObjectCreator . java to improve code readability and maintain consistent formatting
added null check for extTypeCustomDesers and improved test for copy method in MessagePackFactoryTest to ensure extTypeCustomDesers are only initialized when it is not null and validate the copy configuration in MessagePackFactoryTest
enable maven debug and switch to verbose
temporarily remove test to get build to pass
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to improve code clarity and reduce dependencies
changed scoreMap to String and introduced a new termScoreMap for improved scoring management to enhance type safety and clarity in scoring operations
updated comparison logic in U64 . java to use less than zero for data and added an equals method to improve accuracy in data comparison and enhance functionality for comparing parameter values
fix bad font size in entry editor ( # 773 )
updated notification logic to include support for dark text support to enhance user experience by ensuring dark text is consistent with dark themes
[ flink - 27992 ] [ checkpointing ] do n ' t override existing behavior for non - blocking schedule request
updated the maximum pool size for idle threads and modified the constant for the KEEP _ ALIITION _ TIME _ MILLISECONDS to improve resource management by allowing more time for idle threads
replaced filter and count with anyMatch for better readability in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java to improve code clarity and efficiency by using anyMatch instead of a filter
fix the test to pass on window
camel - 20638 : fix for http : / / issues . apache . org / activemq / browse / amq - 2298 - apply patch with thanks to adam gregory .
fix call to java . net . protocol . getreturnvalue ( ) . also throw an exception if the return value be a java exception .
add annotation to help make @ repeatable for issue # 300
updated userProps key from " hcat _ user " to " webhcat _ user " and improved test assertions in BlueprintConfigurationProcessorTest to ensure consistency with naming conventions and enhance test coverage for better validation
modify the socket connection to use an unresolved address when the socksProxyHost property is set to enhance flexibility in establishing a connection by using an unresolved address when available
[ hotfix ] [ runtime ] fix checkstyle violation in slotstatus
removed the import of ClassUtils from ReflectionUtils . java to eliminate unnecessary dependencies and improve code clarity
replaced instances of HashSet with LinkedHashSet in SslContextFactory . java to maintain the order of entries while managing protocols and cipher suites
added a static final Resources instance and logic to handle system resource retrieval to improve resource management and prevent potential null reference errors
set a constant for the size of the plaintext segment use by the buffer allocation operation .
added a test for circuit breaker fallback exceptions in ServerMvcIntegrationTests . java to ensure that circuit breaker fallback routes throw an exception when invalid
fix verifyhostname issue in http client
added a size limit setting for the buffer in PerformanceTest . java to optimize memory usage during testing
added a ` preferAES ` boolean property and corresponding getter / setter methods in ` ProtectionPolicy . java ` , while removing the existing ` preferAES ` getter and setter methods from ` StandardProtectionPolicy . java ` to streamline the code by consolidating similar functionality across the ` ProtectionPolicy ` class
( chore ) camel - opentelemetry : replace system . out . println statements with log
elb - 26182 : remove unstable test due to ec2 instance creation refactoring
fix classcastexception in alarmreceiver for ringtone device .
added exception handling for file creation in DiacriticTest . java to ensure graceful failure and inform users about file creation configuration issues
hhh - 16615 fix error handle for oracle ' s timeout test
modified file handling and error reporting in TextureUnpacker . java to improve code robustness by checking for the existence of the atlas file and providing clearer error messages
added concurrency handling around service configuration retrieval to ensure thread safety when accessing shared resources
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code clarity and maintainability
added a test method to verify that a ResultSet does not close it and ensured proper closure of resources to enhance resource management and prevent potential memory leaks
fix issue where test be fail on window due to buffer size issue .
refactor the retrieval of database schema to include pre - deleted databases to ensure that only relevant schema entries are removed from the schema map
removed the " chunkedWriter " header and modified the write method to handle it to ensure that the " chunkedWriter " is properly managed and consistent before writing the response
updated the comparison of item IDs in EnhancedBrowseFragment and added a deleteItem method in FullDetailsFragment to ensure proper item deletion and confirm functionality with a confirmation dialog
- add rulebank interface to allow multiple stylefinder to be use for cs parsing .
add try / catch block to protect against uncaught exception in jca tl
added new files TestMonomorphicObjectCall . java and Object . java to implement and test finalization methods for object operations to enhance testing capabilities for finalization and ensure correct behavior of the finalizeObject method
refactor the ` removeMetaDataSource ` method to use ` toFront ( ) ` for better readability and consistency in the code to improve clarity and maintainability by using more descriptive method names
hbase - 3052 properly handle overlap column in defaultmemstore ; fix hbase - 2333
[ flink - 6592 ] [ runtime ] simplify local state directory lookup by remove unused local state root directory reference
fix alter time series statement ( # 2539 )
matchtext condition : fix problem with space and asterisk
[ issue # 6057 ] add try catch around route tablebuilder lookup ( # 6057 )
replaced ` putAll ` with ` putIfAbsent ` for adding body entries to ` paramMap ` to ensure that duplicate keys are added to the map while avoiding null values
[ hotfix ] [ test ] let use char [ ] for password
bug 7190 : list domain from accessible domain be not return child domain of domain .
remove old apis for counter . equals and remove old apis for now .
refactor the ` initialize ` method to accept a ` original ` parameter and set warnings for the ` BasicTumbleStatus ` to enhance clarity and maintainability of the code by using a more descriptive parameter name
clarify that system . currentmillis ( ) can be use in truffle .
issue417 : correctly print the type of parameter / variable in javacpp
fix npe in lrubumedictionary . removeifindices ( ) .
8053963 : ( dc ) use datagramchannel . receive ( ) instead of read ( ) in connect ( )
test : migrate testquerydns to junit5 ( # 4433 )
added a new class NutchServerInfo with job information properties and properties to provide a structured way to manage and retrieve server - related properties for better service response management
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource and modified attributes handling in EdgeNGramTokenFilter to improve attribute management and facilitate easier updates to attributes
added a timestamp field to settings and modified timestamp handling in CQLInserter and ThriftInserter to allow users to specify that timestamp values are written correctly based on user settings
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in the use of BigInteger type
make numberutils work for long and float64 data type again
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and validate new test cases for accuracy
added checks for SQL exceptions related to constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to improve error handling by distinguishing between SQLException and DataIntegrityViolationException
[ issue # 5370 ] fix the checkstyle error of remotebrokeroffsetstore
added overloaded methods for creating and inserting tabs with specified indices and icon to improve flexibility and maintainability of the tab management functionality
use zero - length array to avoid unnecessary allocation .
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment builder
refactor conditional checks in MavenVisitor . java to use explicit braces for better readability to improve code clarity and maintainability by clearly defining return statements
updated test cases in ZookeeperDataChangedListenerTest to use updated update strings to ensure accurate test cases for various update scenarios and improve code readability
added a new file FormatCheckingTest . java to validate Java class format errors to ensure proper handling and reporting of ClassFormatError exceptions
updated line number assignment logic in CodeGenerator . java to improve clarity and maintainability of line number handling
added exception handling around property retrieval in ConfigHelper . java to improve robustness by catching potential exceptions during property retrieval
added overloaded methods for creating RadioButton instances with specified buttons to enhance flexibility in handling different button states for the RadioButton
updated cache initialization to use an adjusted cacheSize parameter to optimize memory usage based on dynamic cache size
int - 1187 change default _ capacity to public in simplechannel and update channelparser to use it
camel - 3400 fixed the npe issue of management name strategy when run in osgi bundle .
fix problem with external mode and add fallback to load
[ flink - 2745 ] [ test ] harden yarnsessionfifitcase and iomanager shutdown hook .
rename ` projectRoot ` to ` androidManifestPath ` throughout ` RobolectricTestRunner ` and related classes to improve clarity and better reflect the purpose of the data being handled
add npe check and use ! empty instead of length > 0 .
refactor CompareMode class for improved comparison logic to enhance code maintainability and readability
implemented HasTests interface in Arg class and added tests field to RustBinaryDescription and RustLibraryDescription classes to allow unit testing capabilities for Rust build targets
updated placeholder and error drawable resources in FileMessageVH . java to ensure consistent theming across the application
refactor OnExitTest class to improve exit handling to enhance reliability and maintainability of the code
added an onUserPreferenceChanged method to recreate the taskbar when the user preference changes
refactor heap dump methods to support IME VM versions to ensure compatibility with different JVM implementations and facilitate reflection access to heap dump functionality
camel - 19560 : make sure session be close only when use tx to prevent resource leak
simonstewart : fix the problem with the ie driver that start to run on window .
refactor IteratorToFor . java to improve syntax and clarity to enhance code readability and maintainability by ensuring proper syntax and reducing unnecessary variable declarations
added a call to set the application state to STATE _ UNAVAILABLE to handle unavailability states during application state transitions
updated position and limit handling in ByteBufferAs - X - Buffer and Heap - X - Buffer to improve code clarity and ensure consistent position validation across buffer implementations
simplified the way strings are extracted from the move path by removing the call to toUri ( ) to improve code readability and reduce unnecessary method calls
updated array handling logic to ensure correct deletion based on length and added multiple setEmpty methods for ArrayData and ObjectArrayFilter classes to improve array management consistency and maintain correct empty state management across different array implementations
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to the enum from other packages
replaced the creation of ` doc4 ` and ` doc5 ` fields with a new ` document6 ` variable and updated the assertion check in ` TestMultiPhraseQuery . java ` to ensure the correct document is added and validated after adding a field with the correct length
# 3746 - allow offline payment method to be send in the reservation process form
added a thread check for the onTimeout event in HttpChannelState . java and refactored exception handling to ensure proper timeout exception management and improve code clarity
updated logging behavior in SslBytesTest , SocketChannelEndPointTest , and TrackingSocket to use debug logging to improve log detail for debugging purposes and optimize stack trace printing
update package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
do n ' t use local _ quorum for local _ serial a we do n ' t use local _ quorum
added support for home model models in the HeosDiscoveryParticipant and HeosPlayerHandler to ensure proper handling of targets with home models during discovery
added a Wait class and related methods for handling wait time in PlainSelect and SelectDeParser classes to enhance SQL parsing capabilities by allowing wait time management in SQL queries
added attribute handling capabilities using AttributeController and AttributeTable in Neo4j . java to enhance data manipulation capabilities for node and edge attributes
added null check for serverName in SessionManager . java to ensure proper handling of null values before comparison
nifi - 10563 : move rocksdb metronome to nifi - controller module
changed the way isGrantable is retrieved by using a result object to improve code clarity and ensure consistent retrieval of boolean value
simonstewart : make the javascript context async by default . log a message about the javascript driver
camel - 2894 fixed the unit test error of camel - cxf
hbase - 10311 loadtesttool should also add a column to the table ( jerry he )
implemented the Disposable interface in the Texture class and added import for Disposable to enable the Texture class to utilize disposable functionalities for better resource management
updated conditions for handling tldBundleLocation and replaced WebappRegistrationHelper with WebBundleDeployerHelper to enhance code robustness and improve context handling
check goquorum genesis file before use it , even if genesis file be not specify
replaced IOException with Throwable in HttpInput . java to improve error handling by capturing a more general error cause
add miss license header and fix test
updated API operation annotations to use HostResponse and ViewPrivilegeResponseWrapper instead of ViewPrivilegeResponse . Wrapper to improve clarity and consistency in response handling within the service endpoints
added a check for the boost in the FilteredQuery class and modified the hashCode calculation to incorporate the boost value for better hash calculation accuracy
reformatted the constructor of FileMenuFilter for better readability to improve code clarity by enhancing the structure of the constructor parameters
fix for # 3396 : do n ' t show the text in applet
add a new Java file for testing CMS class unloading behavior in a garbage collection scenario to verify that the CMS class unloading is disabled and the full GC is triggered correctly under specified metaspace and young generation sizes
do n ' t create itemstos event when no entities exist
refactor ColumnMapKeyMappingPreparedStatementSetter to ColumnMapItemPreparedStatementSetter and update related imports and methods to improve code clarity and consistency with the current naming conventions
make sstablesstablescanner compatible with identityqueryfilter . patch by jbellis
added error handling for missing ' type ' attribute in MiniAapt . java to ensure robustness by throwing an exception when the expected type attribute is missing
add spel support to soul plugin ( # 1093 )
fix checkstyle issue in executionplanner . java ( # 770 )
bugfix # 220735 , handle anonymous class in profiler in swingutilities
remove spurious build failure and error - prone finding in comment .
added default values for ` start _ offset ` and ` length ` initialized with ` 0L ` to avoid ` NullPointerException ` during resource retrieval to enhance code clarity and ensure proper handling of long initialization values
updated source and target values in fullOptions from " 1.5 " to " 6 " to align with new project requirements and ensure compatibility
[ calcite - 2699 ] support insert into table with metadata only ( zoltan haindrich )
added sorting functionality for localized names in AboutActivity to improve user experience by ensuring consistent ordering of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 826 )
added a conditional check for live streaming before posting a delayed runnable to ensure that refresh is only triggered when the live streaming setting is active
[ grid ] add cause to exception when audit strategy can not be create
try to fix the test error of fileconsumerpollingstrategystoponrollbacktest
updated type parameters in AbstractType instances from raw types to use wildcards to enhance type safety and flexibility in handling different types
added a new method ` supportsTransport ` to ` GitClientApplication ` and updated its usage in ` RepositoryUrlPanel ` to enable transport support checks and improve URL management in the application
added delegation name retrieval and updated reason string format in TouchInteractionService to enhance clarity and traceability of input consumer functionalities
updated version handling logic in ChangeParentPom . java to include null checks and streamline availableVersions initialization to improve code robustness and maintainability by handling null cases explicitly
8307378 : gc / g1 / testlargepageuseforheap . java can fail on system w / o shenandoah
db upgrade : do n ' t perform event migration if the db do n ' t exist
fix the test error of brokerxmlconfigstarttest on window
implemented a new test class for ObjectStreamClass functionality to verify serialization and deserialization behavior with custom objects
removed redundant null checks in the ZoneAwareDiscoveryFilter class to simplify the code logic for better readability and efficiency
updated logging level from error to warn in OpenTracingTracer . java to improve the clarity of logging issues related to tracing issues
add tostring so that generator can be use by tool .
refactor URI handling by introducing a ` doquote ` variable and modifying its usage in the ` append ` method to improve code clarity and correctness when handling authority parsing
added a check for non - existent resources and exception handling for missing resources in ClusterControllerImpl . java to improve error handling and provide clearer feedback when resources do not exist
[ type : refactor ] simplify code by avoid npe if no response be available
modify vertex buffer allocation logic for Android version 5 and above to ensure compatibility with newer Android versions and improve memory management
applied patch from oliver jowett to clean up the javadoc warning
add forceprojection to hashjoininfo to force the projection of the join if possible
added a method ` getStringDistance ( ) ` to return the ` StringDistance ` object to provide access to the string distance for spell checking functionality
added new flags and modified PendingIntent creation methods in AndroidImplementation . java to ensure compatibility with newer Android versions and improve intent management
add methods to append read column IDs in HiveFileFormatUtils for improved configuration handling to enhance the efficiency and clarity of managing column IDs during operations
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` and updated related method references to improve clarity and consistency in multicast address handling
added a temporary toast message to the SavedExperiments class for user interaction to improve user experience by providing a toast message when the app is terminated
added version handling in ServiceModule and a corresponding test case in ServiceModuleTest to ensure correct version resolution when service module versions are not specified
added a new test class RawSerializationTest for testing JSON serialization behavior to ensure correct behavior of Gson with various collections and parameterized types
simonstewart : implementing sslcertificategenerator to allow the server to be use directly by the driver
refactor the iteration for displaying replies to use an index - based approach to improve readability and maintainability of the code
increased timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to allow more time for tests to complete successfully
added a test method for payload processing in TestNGramFilters . java to verify the decoding of payload attributes from the token stream
refactor AclImpl to improve code readability to enhance maintainability and simplify future updates
add a new test case for verifying the correctness of the array size generation in the EasyRandom implementation to ensure that different array sizes are generated with different sizes for accurate testing
bug 14529 : fix npe occurs on ssvm during reboot
added a ThreadLocal variable to manage concurrent execution of the runCompleteWrite method to improve handling of asynchronous operations in SSL connections
refactor actor visibility checks and update references in the Actor class to improve code readability and ensure proper visibility management of actors
added logging for failed deployment group updates in RollingUpdateOpFactory . java to improve error tracking and debugging by providing detailed context on deployment failures
[ flink - 30613 ] [ table ] correct the package path for provider class due to deprecation
added error handling for username not found exceptions in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve authentication failure reporting for incorrect password checks
refactor AtMostXVerificationTest class implementation to improve code readability and maintainability
updated default Q type assignment to use QParserPlugin and added new options in ConvertedLegacyTest to ensure compatibility with the new default Q type and improve query processing behavior
updated SimpleDateFormat instantiation to include Locale . US as a parameter to ensure consistent date formatting across different locales
added a new ` Main ` class and modified the ` isInitialized ` method in ` ILanguageServer ` and ` JavaLanguageServer ` , and added a new file ` LocalsCompletionTest _ template . java ` to improve code structure and implement functionality for testing language server initialization
updated the ClientAPITokenIntegrationTest to change the parameter name from ` idToken ` to ` shouldHaveIdToken ` to clarify the purpose of the parameter for better understanding of the test conditions
added transaction management methods to DatabaseAdapter and modified transaction handling in GncXmlHandler to ensure data integrity during transactions and improve error handling during account bulk insertion
replace byte array handling with ByteArrayOutputStream for improved efficiency to streamline byte reading and conversion processes
increase code readability by remove override annotation
add isacceptable override to allow sourcefile sourcelogment for j . compilationunit
added maxBufferedDocs and rAMBufferSizeMB settings to TestIndexWriterMergePolicy . java to optimize buffer size for better performance during testing
added a test method to update witnesses in ManagerTest . java and cleared WitnessCapsule . java to ensure witness updates are correctly implemented and verified in the system
fix insufficient size requirement when iterate over map in copyonwritemap
- remove logging of now - redundant level from flumenode . log ( )
added a reindex collection and updated authentication assertions in BasicAuthIntegrationTest . java , DaemonStream . java , and DaemonStream . java to enhance collection management and ensure proper authorization constraints are validated
changed the implementation of the ` nodes ` variable from ` HashMap ` to ` LinkedHashMap ` to maintain the order of insertion in the ` nodes ` map
[ beam - 8470 ] expose internalerrormapper to jersey ( # 9016 )
replaced direct string comparisons with a utility method to validate headers to improve code readability and maintainability by encapsulating header validation logic
added a switch statement to handle multiple property keys in System . java and modified the systemProperties map to use this key to enhance compatibility with different Java versions and avoid potential conflicts
change method parameters from String to CharSequence in StringSubject and add unit tests for char sequences to improve method flexibility by allowing the use of different character sequences
add jdk / jfr / internal / jvm . countertime ( ) and jdk / jfr / internal / jvm . eventwriter ( ) to the list of intrinsics
rename IntUtilsTest class to PrimUtilsTest to accurately reflect the purpose of the test being executed
updated the initialization of ` ds ` to use ` ds2 ` instead of ` ds ` to ensure correct reference to the ` ds ` for proper connection management
updated DeploymentOptions . java for improved configuration handling to enhance the reliability of deployment settings
updated the method signature and drawable handling in the updateTextButtonWithDrawable method to streamline the code and improve drawable manipulation for the market button
refactor try - with - resources in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve code readability and simplify stream handling
added functionality to rewrite coalesce values in RexNodeConverter to enhance the handling of coalesce expressions in Hive
camel - 15836 : camel - hl7 : fix test for unmarshal fail with the default unmarshall format
replace the instantiation of ` JavassistProxyFactoryFactory ` to use the current context class loader and ensure proper context class loading to enhance error handling and resource management during proxy factory generation
updated DefaultDateTypeAdapter constructor to accept only a formatted date instance and modified constructor visibility to improve date handling and ensure thread safety for date processing
updated method declarations and formatting in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to directly set the URI and query using the HttpUtils to simplify query handling and improve code clarity
added a method to filter old entries in FeedRefreshUpdater to improve efficiency by filtering outdated entries based on the number of entries
hbase - 14042 fix fatal level log in fshlog where log for non fatal exception
refactor NodeMap to improve iterator handling and add remove method to enhance functionality and ensure proper iteration over null values in the iterator
updated import statements and variable names from ' predicate ' to ' subPredicate ' for clarity to improve code readability and maintainability by using a more descriptive term
added a check for non - empty fields before adding them and updated the return value logic to ensure operations are only added when there are fields and validate SQL type validation
add default admin provider to the admin list , to ensure that only one instance of the manager have one
avoid use multifields for significant and textlogistic regression ( # 1243 )
updated the method to return the class name and identity hash code of the bean to improve clarity and debug information for better debugging
simplify the determination of the return statement in GroovyParserVisitor . java to improve code clarity and ensure the correct identifier is built for primitive types
remove hashcode ( ) and remove string . hashcode ( ) from frameinforesultbuffer
change default answer for blockwhenfull to not block indefinitely
added a new package - info . java file for the Lucene test resource package to provide package - level documentation and improve code organization
update read length calculation in MessageUnpacker . java to ensure correct read length handling based on position and buffer size
move httpclientTiminginstrumentationverificationtests to core module to fix the ci issue
updated SQL query to include user filter in IconDB to ensure icon retrieval is user - specific for data integrity
fix the issue that defaultmqproducer . getbackpressureforasyncsendsize ( ) do n ' t really work for the case where it be wrong .
do n ' t whitelist classpath element for module - info . class file
fix a bug on db upgrade for baremetal _ devices
removed the IJava2DRenderer interface and its associated interface from Java2DRenderer . java to simplify the codebase by eliminating an unused interface
clear buffer when a audio track be stop .
added scheduled task management for handling multiple upstreams in UpstreamCacheManager to enhance the management of scheduled tasks and improve code maintainability
refactor StreamType class to improve code readability to enhance maintainability and simplify future updates
updated assertion to include an additional message for clarity to improve debugging by providing more context on the execution duration of the assertion
removed redundant authentication checks and added role checks for admin users in FilestorePage . java and RootPage . java to streamline the code and ensure users are aware of their login status
camel - 16175 - ignore camelelasticsearchresttest when run on ci
fix for # 230 : check for class . getclassloading ( ) before use customizablethreadcreator
rename and update button text for better clarity in OfferBookChartView to improve user interface by indicating the state of the offer book
camel - 8205 : restlet component - restlet should detect invalid url and fail fast when route match error
remove final keyword from createlastblock method and replace it with non - null height .
removed Serializable interface from BTreeMapJava and updated related test cases to use NotSerializableException to enforce non - serializable behavior and ensure proper exception handling during serialization
improve error message if not null ( # 4017 )
reformatted conditional check for better readability in Main . java to improve code clarity and maintainability
changed method call from ` mFilesAll . indexOf ( file ) ` to ` mFiles . indexOf ( file ) ` to ensure correct retrieval of files from the local list
deleted the PlainVerifier . java file to the class is no longer needed in the project
added a condition to close the system windows when triggered from the AltTab tab to ensure proper handling of recent entries when a specific tab is triggered
updated dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog interaction and ensure proper state management
updated MimeUtil to parse UTF - 8 encoding when parsing body to ensure proper handling of character encoding in the application
added call to super . deinitialize ( ) in the TextField class to ensure proper deinitialization behavior for the TextField component
updated the ` testSerialization ` method to utilize ` TestUtilities ` for serialization to streamline the serialization process and improve code readability
fix ( sql ) : fix compile error for group by
updated array size validation logic and added handling for negative lengths in JAXWSExceptionBase . java to ensure proper exception throwing for negative array sizes and improve argument list management
test : migrate ctunresolvedimporttest to junit 5 ( # 4642 )
updated thread join duration from 10 seconds to 60 seconds to allow for a longer wait time before the thread execution completes
[ hotfix ] make miniclusteritcase use pipelinedregionschedulestrategy by default
added title handling methods in ShadowActivity and updated @ Implementation annotations to include i18nSafe = false to provide localization support for title retrieval and retrieval
replaced Apache Commons Logging with POILogger for improved logging functionality to enhance logging capabilities and maintain consistency with the Apache POIFS library
clean up for issue 5236 : change motion area data to 2p
fix map . delete ( ) latency issue ( # 18388 )
updated enum case handling and modified response status check to improve code clarity and ensure proper response status evaluation
modify CheckResourceKeys . java to use a unified findJavacLocation method to improve code readability and ensure correct location resolution for javac files
auto add project name to create additional settings ( # 1335 )
added a new test class DeprecatedStubbingTest for verifying stubbing behavior to ensure proper interaction behavior and behavior of stubbing methods in Mockito
updated import statement from org . eclipse . jetty . server . DispatcherType to javax . servlet . DispatcherType to align with the new servlet package structure
patch from jason bennett to match new nbt rule in english grammaticalconstraints
add boolean system property to allow rsa key exchange in fips mode
corrected variable name from ` output _ reader ` to ` BufferedReader ` and ensured proper resource management to improve code clarity and prevent resource leaks by ensuring proper resource handling
added support for managing OAuth and SDM service handles in PubSubAPI , SDMAPI , and SDMAccountHandler to ensure proper cleanup of resources when services are deleted
replaced the interpolator used in TaskbarEduView from AGGRESSIVE _ EASE to EMPHASIZED to enhance the animation responsiveness and visual consistency in animations
added updated logging for ConfigNode updates and updated log levels for better clarity to improve logging accuracy and provide better visibility into the migration process
added a new file ` FileDialogLeakTest . java ` to test the cleanup of ` FileDialog ` resources to ensure proper resource management and prevent memory leaks in the application
hbase - 13034 move testopentableincoprocessor to another package ( nick dimiduk )
[ gr - 10678 ] fix trufflefeature . isuninterruptible ( ) to . isuninterruptible ( ) .
[ flink - 25411 ] [ table - planner - blink ] remove duplicate split method logic in protobuf format
updated condition to check for non - null disi in DrillSidewaysScorer . java to ensure correct handling of non - null disi values for dimensions
avoid other test that pollute the timeline when go on android .
gh - 3954 : use java . specification . version a suggest by lgtm . com
updated the FileReporter initialization in FileReporterTest . java to explicitly cast null to String and ensure proper type handling for FileReporter
updated end - to - end encryption checks from ` isFalse ( ) ` to ` isTrue ( ) ` for better readability to improve the accuracy of end - to - end encryption status verification
added home button functionality to the DirectMessageConversation class to enhance user experience by allowing navigation via the home button
added user retrieval functionality and updated protocol version in multiple files to enhance security by restricting access to specific user data and improving code clarity
added a conditional check for the operating system architecture compatibility in TestJdbcPluginWithMSSQL . java to ensure compatibility and prevent tests on unsupported architectures
updated the handling of the start class in WhiteboxImpl . java to ensure that the original start class is properly referenced during the lookup process
added support for new parameter register . this fixes # 148
405427 fix unit test : call supportresponse ( ) on registeredresponse ( )
jbrules - 1633 : fix nimbus look and feel in example
fix translation of version string in godmode ( 22 ) .
fix 2274394 - launcher2 be stick with the wrong alpha when reset .
fix typo in exception message .
update to late proposal and add extra data for the new offer
refactor milestone parameter initialization to utilize conditional logic for handling open tickets and repositories to improve flexibility in parameter management based on whether the milestone is open or repository
fix ( wood ) : change the size of the stream to 80.0
added a method to retrieve the cluster key based on its blueprint name and revision to improve the cluster key management by associating cluster entries with specific blueprint names
initialized the downgradeAllowed variable to true and added a test case for its functionality to ensure proper handling of downgrade permissions during upgrades
updated the attribute type from ATTRIBUTE to ATTRIBUTENAME in multiple classes to improve clarity in the attribute processing behavior during XML parsing
allow emulate system load library from the classpath ( # 9040 )
refactor sorting and sorting logic in AppsCustomizePagedView and LauncherModel to use a dedicated comparator method to improve code readability and maintainability by reducing redundancy
add code to ensure output stream be close after create an entry on window .
modified the visibility of the ` doTest ` method and enhanced the assertion message format to improve readability and provide more informative output during testing
updated RouteBuilderFinder to use SpringCamelContext instead of ApplicationContextAware to simplify the instantiation process and improve consistency with Spring framework standards
[ flink - 30635 ] [ doc ] clarify the metric option description
hbase - 28007 fix testfulllogreconstruction failure ( # 5671 )
added support for reuseAddress in DatagramSocketOptions by introducing a boolean flag and modifying several methods to enhance flexibility in socket configuration for different network options
fix server shutdown message ( # 526 )
simonstewart : delete the deprecated locatable interface to fix the build
updated error messages for clarity and consistency in version management to enhance readability and maintainability of the error output for better debugging
rename variable ` equalPredicateColumns ` to ` predicateColumns ` and adjust related logic to improve clarity and consistency in the codebase
add some comment for the option that start the handshake
added missing closing brace for improved readability to enhance code clarity by ensuring proper formatting
changed access modifiers of constants in RecordReaderFactory . java from private to package - private and added a new test class for ParquetRecordReaderFactoryTest . java to enhance accessibility for constants and ensure proper registration of ParquetRecordReaderConfig
added query creator cases for handling GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator to enhance query creation capabilities for less than and greater than conditions
fix error when parse group by expression for window ( # 5968 )
added atomic buffer reference counting functionality to MappedByteBuffer and FileChannelLinesSpliterator classes to improve memory management and ensure proper cleanup of mapped byte buffers
refactor using a local variable for the validator object in LdapUtils . java to improve code readability and reduce repeated method calls
[ issue # 2287 ] Circuitbreaker should wait for the next run ( # 2287 )
removed the FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS flag from the intent flags in Launcher . java to simplify the intent flags for task launching activities
small ui fix : make bar upload configurable at build time
added a JUnit 5 @ Disabled annotation to the TableExtRetrieverTest class to temporarily disable the test due to a known issue with retrieving strategy for column privileges
fix nullpointerexception in entitygraph . get exportedcount ( ) with lock
updated import statement for IntRangeUtil from IntRangeUtil1 to IntRangeUtil to ensure compatibility with the required utility class for improved functionality
modified HttpParser to handle space characters and updated string appending logic for better accuracy to improve error handling and ensure correct encoding of encoded headers
updated the layout view from trends _ activity to configuration _ activity to ensure the correct activity is displayed for configuration functionality
improve the output message so that it be easy to see which sldwt be find
refactor the ForceLeaderTest class to utilize a TimeOut for checking Tlog replicas to improve responsiveness and efficiency of the test regarding leader index selection
modified Thread class to enhance thread management to improve performance and stability of multi - threaded operations
refactor template suffix constants into separate constants to improve code readability and maintainability by centralizing template name management
camel - 2604 fixed the cxf namespace issue of < soap : envelope > with cxf 2.0
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency in formatting
updated date formatting in ToChar . java and added a test in TestFunctions . java to ensure consistent formatting of date outputs in the output
added validation for transactions and write IDs in GenericUDTFGetSplits . java to ensure only valid transactions and tables are processed in transaction management
updated logging statements and improved handling of column names and types in JsonSerDe . java to enhance code clarity and ensure empty lists are used for empty values
added null check for book path before loading data to ensure proper loading behavior and avoid potential null pointer exceptions
corrected formatting of method declarations and restructured the SSTDeserializer class to enhance code readability and ensure proper handling of entries in the string map
added a static final default grid column in AppPreferencesImpl and updated grid column retrieval logic in ExtendedListFragment to improve code maintainability and ensure consistent default value handling
updated the description of the " diff " field in Platform . java and modified the test in ComparisonFailureWithFieldsTest . java to clarify the purpose of the diff field to provide clearer guidance on line contents matching but line - break characters differ
fix spurious test failure when run on bigquery
removed " / api " prefix from the @ Path annotations in OkexV3 . java files to simplify the API directory structure for better consistency and clarity
refactored conditional checks for distance comparisons in LineUtilitiesTests . java to simplify code readability and maintainability by reducing redundant statements
6569633 : new varargs and old array syntax be incompatible with javac
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
added support for the METHOD token in the VariableContext and updated related tests to enhance the functionality of method calls and ensure correctness through testing
[ zeppelin - 1052 ] add json test for invalid compilation unit and profile string .
fix a problem with copy the large message where message be not be write back into the buffer .
added HttpClientProperties as a parameter and related methods to NettyRoutingFilter for managing response timeouts to enhance configuration flexibility and error handling for HTTP client requests
refactor NativeLinkTarget usage and deprecate methods in CxxLibraryFactory and NativeLinkTargetGroup classes to improve code clarity and maintainability by ensuring proper target handling
camel - 15581 : camel - main - rest - add unit test base on user forum issue
added a method to visit field access in ASTConverter and updated RexNodeConverter to handle it to improve the handling of field access expressions in the query parsing process
[ hotfix ] querylogger : avoid costly allocation in querylogentry
webclient request uri relativize when no proxy be set ( # 6309 )
refactor PKCS12KeyStore and StoreSecretKeyTest to simplify certificate handling and improve readability to enhance code clarity and maintainability by simplifying the logic for determining certificates
refactor reflection access checks and rename method names in NativeObject and Bootstrap classes to improve access control and clarity in the codebase
removed the public access modifier from the CollisionMap constructor to enhance encapsulation by restricting instantiation access
fix npe in tradewalletservice . getrawinputfromtransactioninput ( )
fix sonar warning : use switch statement instead of if statement
cloudstack - 4011 : do n ' t clear ' region _ id ' when account be expunge
tika - 60284 -- add alternate exception throw for old excel file that do n ' t support encryption .
[ gr - 39982 ] add -- add - exports = all - unnamed for graalvm benchmark .
no actual changes were made to the code logic in TimeLineCursorAdapter . java to improve code readability and maintain consistency in visibility settings
reduce probability of sleep time in batchingstatechangestokeyertest
updated directory creation logic in ShadowContext . java and improved file handling in ContextTest . java to enhance directory management and ensure proper creation of named directories
refactor ExceptionFactory to use specific class loading methods for exception creation to improve code maintainability and readability by reducing boilerplate code
updated WAIT _ TIME _ MS from 10000 ms to 60000 ms to allow more time for loading features and improvements
replaced the import statement for CLAIMS with a wildcard import and added an AUD attribute to ConnectRequestParameters to streamline import statements and enhance audience handling in OAuth2 authentication
camel - 16175 - camel - kafka should break on first error by default
added a new constant selectableItemBackground for color selection to provide a visual representation of the selected item background
consolidated multiple import statements into a wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for future stop order functionality
fix for hibernate - 5042 : txnsetoperation set event type after update ( # 5042 )
update resumablerandomaccessfilelistener to be able to cancel download of file .
fix bz 66511 - avoid name clash with osgi
added code to resize format records in HSSFDataFormat and updated assertions in TestWorkbook to ensure correct data format handling and improve test reliability
[ flink - 26393 ] [ connector / kafka ] deprecate finkkafkaproducer in favor of kafka rout engine
fix bz 65703 - do n ' t compute compressed - length if the parameter be outside the defined maxcompressedlength .
camel - 11854 : camel - spring - data - redis should be use a spring - defined redis cluster by default
fix containerrepair . playerepairinmemory not work for vanilla client . close # 3898
[ mng - 5975 ] relax legacylocalrepositorymanager to work with local repository layout
[ flink - 14772 ] [ runtime ] localinstancemanager should exit if taskmanager creation fails
add more logging information about when an artifact resolution can not be resolve
updated the method for generating temporary paths to utilize a new internal method for better path management to improve code clarity and maintainability by centralizing the path generation logic
updated FeedEntryStatusDAO to use Google Commons Collections and Lists for better functionality to improve code maintainability and reduce dependencies on external libraries
added task execution start and end handling in ` ContextImpl . java ` and improved test cases in ` BlockedThreadCheckerTest . java ` to ensure proper execution of code when blocking is enabled and enhance test coverage for blocking execution
updated the ` instantiate ` method to accept a ` formatterString ` parameter and adjusted related method names for clarity to improve error handling by providing meaningful messages when no output arguments are provided for instantiation
modify LoadContactsTask to use Ezvcard . parse for file input streams based on Android version to ensure compatibility with devices running Android O and above
replaced calls to ` setRemoteAddress ` and ` setRemoteHostname ` with direct assignments to improve clarity and remove unnecessary setter methods
added a null check for realClass and threw an IllegalArgumentException if it is null to ensure that a valid shadowClass is provided to avoid runtime errors
fix tlmutualauthenticationcertificatechain = ' ' true ' ' do n ' t work when tlmutualauthenticationrequired = false
update imports and add a test for handling SSL exceptions in BasicHttpTest . java to ensure proper handling of SSL exceptions in HTTP requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to improve accessibility of consumer and producer functionalities
fix bug # 44656 - make the framerenderer extend runtimeexception if the sitemapwidget can not be find
fix wrong log message in case of wrongly specify email / text
# 513 - enh : add query optimization for live bean ( backport from 5.5 . 5 )
added handling for IOException in MultipartBody . java to improve error logging and retry logic for unavailable resources
refactor : remove redundant array declaration ( # 5571 )
doc : generate sample code in the java microgenerator ( # 419 )
attach file dialog : use current working directory if available ( # 4077 )
added LoadOptionsBuilder and updated SchemaCrawlerOptions to use a new LoadOptions to enhance schema crawling options for improved functionality
change package of TestLoadLegacyLibrary and rename test method to test _ load _ legacy _ library to improve test organization and clarify the purpose of the test
lucene - 3998 : do n ' t throw exception if testreader . lookup ( ) be call for an unknown operation
added property names and enabled settings for the prototype to enhance the configuration management of project properties
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ javadoc ] fix typo in datastreamjob class
do n ' t close fileoutputstream in case of system exception
camel - 8253 fixed the cxf osgi unit test error
nifi - 4875 : fixed possible issue with h2 - 14 protocol in http / 2 .
updated method symbol handling and lambda parameter checks in multiple classes to improve code clarity and maintainability by standardizing variable initialization and conditional checks
fixed dependency detection , a some minor change to the whNP relation
increase timeout for download file in dl4jinception v3 net
added a method to set the phrase slop in the mpq to enhance query parsing accuracy based on the specified phrase length
updated sleep durations in LongPressMouseListenerTest . java from 10ms to 100ms to improve responsiveness and reduce unnecessary waiting time
increased the default port for metrics server from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to improve compatibility and performance metrics collection
added an import for ThreadMonitor and reactive thread monitoring in GameScheduler , ScreenGrabber , and Terasology classes to enable concurrent task execution for better performance in multi - threaded environments
updated visibility condition for the compound view to include available edit options to ensure the compound view is only visible when there are currently editing options available
added a calculation for progress to ensure it stays within a valid range of 1 to prevent potential errors
remove the useless packetreceived interface . it be already inherit from the abstract class and a public interface .
added logging of authentication failures and refactored redirect handling in ` DelegatedAuthenticationGenerateClientsAction ` to improve debugging capabilities and streamline server redirection logic
added null checks for service before accessing its properties in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction classes to improve robustness by preventing potential NullPointerExceptions during service retrieval
add ` hidden ` property to pantheoncommand ( # 466 )
added doNotInstrumentClass for CoroutinesRoom $ Companion in AndroidConfigurer to avoid unnecessary instrumentation for specific Room classes
modified the ` isSupported ` method to synchronize it properly to ensure thread safety when checking the support of ` HttpCallerInfo `
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the code by eliminating unnecessary functionality
camel - 3756 : add the fix for http : / / issues . apache . org / activemq / browse / camel - 213 to make it easy to configure the camel context . thanks to jay mann for the patch .
updated AuthenticationProvider and TargetObject classes for improved functionality to enhance security and maintainability of the authentication process
pdfbox - 2516 : flush line and close mcblock when handle a tagged pdf
log4j2 - 2274 added test for pattern selector . ( # 1348 )
simonstewart : start the iehta test in an ide and use it in the browser . fix issue 469
updated the Thank method signature and created a new MwThankPostResponse class to enhance code clarity and provide a structured way to handle success and recipient results
implemented the SocketBased interface in the ChannelEndPoint class and adjusted the SSLConnection logic to use it to improve socket handling capabilities and enhance code clarity
removed duplicate revokingStore initialization and adjusted max size calculation to streamline the code by eliminating redundancy and enhancing readability
added unit tests for HQL collection implicit join functionality to ensure correctness of the query methods and responses
replace line normalization assertions with standard line separators in the NonVisualRegressionTest to ensure consistent comparison of output across different operating systems
lucene - 6271 : do n ' t use fileunreferencedfile during indexwriter . close ( )
fix final modifier of some method in baseerror from final to final
added validation for resource percent in ConsumeUserResourcePercentActuator to ensure that the consumption percent is within acceptable limits of 100
added a condition to check the boolean for showing the old login screen to enhance user experience by allowing the option to show legacy login options
renamed the test class for StreamNetworkThroughputBenchmarkTests to adhere to naming conventions for better readability and consistency
redirect to UsersPage when team edit occurs in response to improve user experience
updated debug log message for error initialization in PMS . java to improve clarity and error reporting for better debugging
modify shutdown logic to ensure server socket channel is properly closed to improve resource management and avoid potential memory leaks in shutdown processes
remove fixme since this be now fix
hive - 27113 dynamic partitioning should not be apply after hive table partitioning ( sergey shelukhin , review by ashutosh chauhan )
forbid round halting of scientific notation , use scientific notation
add support for visiting directory entries in JarDirectoryStep and create a corresponding test in JarDirectoryStepTest to improve directory management and ensure all jar entries are tracked correctly
added a new file JWKSetEditor . java that implements the JWKSetEditor interface to enable setting JSON text using JWKSet for improved data handling
refactor finish methods in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to handle pending terms more efficiently to improve code efficiency and reduce unnecessary BytesRef copying
cache invokeespressonode . resolveparameterklasses and add truffleboundary .
changed default value of byIP from true to false in Fetcher . java to improve performance by reducing unnecessary fetch times
updated query timeout validation logic in StatementUtil . java to ensure correct handling of null or negative timeout values
added target configuration hash handling in HaskellGhciRuleIntegrationTest to ensure generated paths include target configuration hash when specified
refactor ReplicaPosition class to enhance readability to improve maintainability and facilitate future updates
bug 10688 : fix network stats update task for the same network
updated the overview fade animation interpolator and modified the view alpha setting to FINAL _ FRAME to improve the visual feedback during animations by adjusting the fade - in animation behavior
adjusted swipe length calculation in the Background class to account for display density changes to ensure the navigation bar displays correctly within the visible area of the display
added a new module - info . java file and modified FillInterest initialization in multiple classes to enhance the modularization and clarity of the code structure
updated JsonType . java and JsonTest . java to use constants for JSON object names and improve code readability to enhance maintainability and consistency by using named constants instead of string literals
removed unnecessary parentheses in ResourceResolverBean . java to improve code readability and maintainability
[ flink - 27842 ] [ doc ] fix the usage of deprecated method
fix inner class reference reporting in package annotation ( # 567 )
updated the command string concatenation in TimestampCheck . java to include an additional space to improve clarity and formatting of the command line output
replaced FluentIterable with Stream API for file processing to improve code readability and performance by using modern Java features
[ 3.0 ] export service config to registry be single source ( # 9668 )
add onsettingschange to stop the session if security . otr . mode be disabled
added properties for outline size , outline color , and transparency in NodeLabelRenderer to enhance rendering flexibility by allowing customizable background sizes and colors
updated ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated boolean value from false to true in Win32FontManager . java to enable additional functionality for font rendering
added a null check for the variable before visiting the tree to prevent potential NullPointerExceptions when the view is not initialized
fix nullpointerexception when run jdtbatchcompiler in no classpath mode
added content alignment point and text anchor properties to LabelBlock class and updated drawing logic accordingly to enhance label rendering capabilities by allowing flexible positioning of text blocks
rename mmm and ppp classes for clarity to improve code readability and maintainability
modified the IndexReader class to enhance search functionality to improve the performance of document retrieval operations
change isloopback to boolean and handle null network interface to avoid npes .
added locale parameter to the ` fromRfc1123DateString ` method and updated its usage in tests to allow conversion of date strings to US - speaking formats
fix flaky test : allow a miss file after download
nifi - 9892 : add output _ no _ hits property to jsonqueryElasticsearch for skip query that have no hit .
remove unused aggregation ratio parameter ( # 5381 )
[ java ] move check for state to try block to reduce the scope where an exception can be raised .
clean up close on file reading ( # 18338 )
updated widget handling logic in PageChangeListener for better readability and functionality to enhance clarity and maintainability of the widget mapping process
added a method to check if the file sharing record is writable and improved username handling in multiple classes to enhance code reliability by ensuring proper username management during reading and writing operations
added error handling around the unregisterInvalidatedSessions ( ) method to log exceptions and handle potential exceptions gracefully
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
[ hue ] fix status message ( # 12370 )
add isloading method to the client handler and fix an issue where it would n ' t be trigger unnecessarily
fix mil / pitch range in inventory
added a switch statement to handle different types of byte and string in MessagePackParser . java and created a test case in MessagePackDataformatTestBase . java to improve type handling and ensure correct reading of binary data from MessagePack data
added parameterized test for retrieving users with reserved words as identifiers in HQLQueryTransformerTests to ensure compatibility with GH - 2864 and improve test coverage for query transformations
added unit tests for serialization and deserialization of nested maps in MapTest . java to ensure correct handling of JSON representation and deserialization of nested maps
added bounds checking for x2 and y2 in GeometryUtils . java to ensure coordinate offsets are within the valid range of the available coordinates
refactor sorting order handling and clean up code by removing unnecessary constants and using constants to improve code readability and maintainability
if no test plan can be find , just print a meaningful error message
changed method names from lowercase to more specific versions in ` GeneratedEntityTranslator ` and ` JdbcManagerSupportImpl ` to enhance code readability and ensure consistency with singleton instances
updated the argIdent assignment logic in the parser to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is only added to parameters when not null
update the default protocol setting in JettyHttpComponent9 to use the protocol from the SCF object instead of a hardcoded value to improve flexibility and maintainability of protocol handling
volumevo : default to true for display and add default value of displayvolume .
modified the version method to accept a boolean parameter and updated its implementation to improve flexibility in retrieving JavaH version based on both full and full status
reverse the found size check for multiple change logs and improve the logic for determining the result of change logs to enhance the accuracy of validation by ensuring correct handling of global change logs
hhh - 14129 log level in jtatransactionmanager should be debug
hhh - 11013 fix test failure on oracle
moved the startHandshake and setSoTimeout calls to maintain socket timeout settings before establishing SSL connection to ensure that the socket timeout is preserved during the handshake process
updated the status bar size calculation in multiple fragments to consider popup status bar height only to improve the accuracy of the status bar height calculation when not in popup mode
turn the cha option on by default for flink - 1037 .
http : / / issues . apache . org / jira / browse / amq - 4213 - fix up classloader setup for osgi
refactor JodaTimeRangeRandomizerTest to use assertJ assertion instead of manual assertions to improve test readability and maintainability by reducing duplication of test logic
allow schema generation / deletion for servlet 5.0 ( # 9144 )
fix readiness . isready to consider readiness . isready and use it in readiness . isready method .
replace liveEndpoints with handler ' s endpoints in the StorageProxy class to ensure proper access to the handler ' s endpoints
camel - 7999 : fixed npe during id creation if the table do n ' t have any creation statement
drill - 1585 : update user rpc version due to change in rpcfailure behavior .
added a null check for security manager before accessing reflection package access to enhance security by ensuring access control only occurs within a security context
added utility methods to format elapsed time and adjusted command count visibility to improve code clarity and encapsulation for managing command counts
replaced ImmutableMap with an unmodifiable map for tags and modified the method for sanitizing URL template to improve code clarity and ensure immutability of the tags map
fix : mockbrowser test be generate by java 8 , not by java 8
changed default logging level from OFF to ERROR in opt2 to improve error reporting by providing a more appropriate log message
change instance variables to final and simplify file initialization to enhance code clarity and prevent accidental modifications
ww - 4340 add new optional parameter preparedo to prepareinterceptor and improve documentation
remove overview mode behavior when in overview mode
added Singleton annotation to AuthWithStoreFeature and updated binding methods in Auth . java to ensure singleton instances are used throughout the authentication binding process
modified the incomingAssociations method to include a boolean parameter for ignoring invisible associations to allow more flexible control over in - flight associations during rendering
bug 10489 : remove the private ip when expunge a pod from the storage pool ( # 10419 )
add hint to help page for async profiler on linux 4.6 +
added a new ` RequiredRefFieldModel ` class and modified ` ModelResolver ` to handle optional properties correctly to improve code organization and functionality when managing required fields in the model
refactor and standardize naming conventions for configuration classes to enhance code readability and maintain consistency across the configuration classes
updated the implementation of feature flags to enhance functionality and improve performance of feature management
update string handling for UUIDs and enhance compatibility with larger HueID values to improve uniqueness and consistency in generated UUIDs for better user experience
added caching logic for image drawable in TimeLineCursorAdapter and TimelineArrayAdapter to ensure images are correctly loaded from memory for further processing
hive - 27113 : disable compaction for insert - only table regardless of the value of configuration ( krisztian kasa , review by jesus camacho rodriguez )
added a null check for the storage path before confirming that the down state is validated to prevent potential null pointer exceptions when the storage path is not available
updated resize condition checks and introduced a new method to ensure consistent size validation across multiple classes to improve reliability and maintainability of the resize logic
guacamole - 47 : correct typo in ldapconnectionservice comment .
camel - 7999 : remove mandatory requirement from xmlattribute annotation on aggregatedefinition ( # 7184 )
removed debug tracing logs from TouchInteractionService and RecentsAnimationDeviceState to streamline logging and reduce unnecessary console messages
added a condition to check if the class name starts with " com . intellij . rt . junit " to enable compatibility with IntelliJ IDEA build 193.2956 . 37
fix typo in test for testmultisearcher
added a new file LucenePackage . java containing a class definition for LucenePackage to facilitate the retrieval of the Lucene package for reflection
decrement sizeInBytes in the RAMDirectory class to correctly account for the previous sizeInBytes value
hive - 23799 : implement bloom filter estimate to estimate value of aggregate function ( jesus camacho rodriguez , review by gopal v )
added a null check for the getDrawerToggle ( ) before applying animations to avoid potential NullPointerExceptions when the drawable toggle is not initialized
added a @ SuppressWarnings annotation to the convertToAuthentication method parameter to suppress warnings about the unused parameter being used
added conditional logic to handle class loader scanning based on the ` overrideClassLoaders ` property to ensure proper configuration of module scanning based on the class loader type
fix export of multiple author in ms office ( # 5731 )
added core recovery cancellation logic and improved logging for shutting down CoreContainer to enhance stability and debugging during core recovery operations
refactor time measurement and position difference calculations to use a custom method for getting current time in milliseconds to improve precision of time measurements and clarify the output calculations for better readability
fix for # 152 - trigger ui . click ( ) when edit tab .
fix javadoc for boolean parameter and boolean parameter in pgproperty
added trust resolver , role validator , and permission validator to securityevaluationcontextextension to allow customization of security expression root
added a condition to set the exponentSize if it is 0 to ensure the exponentSize is always correctly defined based on primeSize
refactor file storage access by replacing ` getUsableSpace ( ) ` with a custom method ` getUsableSpace ( ) ` in multiple classes to improve code readability and reduce unnecessary file operations
[ flink - 6335 ] [ table - planner - blink ] combine should copy all of the value instead of just the delegate .
added a test method to verify the execution of post - login activities for users successfully created to ensure that users can successfully login activities after a successful authentication
fix extractorspanishstrippedverb memory leak . also add the default constructor which take a path to make it easy for test .
optimize chararrayset . contains ( charsequence ) so it be faster
fix error message when muxer try to set track count
refactor JsBundleGenrule and JsBundleDescriptionTest to improve handling of Android bundles to enhance code clarity and maintainability by standardizing packageable references and asset management
set character encoding to UTF - 8 in PinotClientRequestServlet and modify string lookup logic in StringDictionary to ensure proper handling of character encoding and improve efficiency in string conversion
refactored the handling of the " Logical Analyzer " case and removed an unused applications array to simplify the code and improve readability by using a dedicated drawable resource
updated vector class instantiation logic to use instanceClassName and instanceClass to improve efficiency and prevent unnecessary object creation
removed the syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unnecessary synchronization
added html support for contribution question ( # 3976 )
added TestLoggingExtension for logging in DiagramRendererTest to enhance test logging capabilities for better debugging
fix : map ` _ ` be now case sensitive for camel case .
added support for the viomi water heater E1 device to enhance compatibility with additional electric water heater models
refactor code to use a local variable for SSL session data to improve readability and maintainability of the code
added a new file ` CreateNewSpreadsheet . java ` for creating a new workbook with multiple sheets to facilitate easy testing of new spreadsheet creation functionality in a user - defined area
updated Redis properties to use a long time - to - live instead of Duration to improve clarity and flexibility in handling cache ttl and configuration
be c5fb59fb : fix loadworkspace be call multiple time use right intent when refresh shortcut icon
fix : upgrade pom . xml to 2.27 . 2 ( # 2285 )
updated synchronization syntax in SunFontManager . java to ensure proper synchronization without referencing the lucida font name
added a condition to check for the character type in the DocClassUtil . java file to ensure proper handling of specific character input
removed String . format method call from getString method for workspace scroll format to simplify string retrieval and improve code readability
added import for Scope and sendMessage if no validation errors are found to improve user feedback when validation fails
added methods to configure web resources and updated imports in IntegrationTestContextLoader . java to improve resource loading and validation for web application context configurations
updated scroll handling logic in Component . java and improved event response processing in Container . java to enhance component responsiveness and maintain correct behavior during drag interactions
adjusted formatting in the RamlType . java file to improve code readability and maintain consistency
add approvedsitecount field for client stats service ( # 1187 )
bug 53782 - cellcontentconverter - improve handling of new line in content expression .
mondrian : fix regex test so that it on window do n ' t cut off off - heap .
mondrian : fix for bug # 1743819 , document mondrianproperties . jdbcfactoryclass
8027163 : sun / management / jmxremote / bootstrap / customlaunchertest . java should be update for jdk8 removal of solaris - 32bit support
tumblrripper : remove test for embedded image .
added a conditional check for symbol slots before converting storeType to ensure that convert is only called when there is a slot for the store type
fix badly use of subrange ( byte ) in chunk processing
added UTF - 8 encoding support for IndexWriterConfig in BaseLockFactoryTestCase . java to improve compatibility with UTF - 8 encoding for better data handling
tika - 352 allow user to specify loaderrorhandler option in tikaconfig . xml
updated imports and added checks for package information in DocLint . java and DocLintTester . java , while creating new test classes for package compatibility to improve code clarity and ensure proper handling of package - related issues
added import command handling in DataImportHandler and defined a new constant IMPORT _ CMD in DataImporter to improve command processing logic for DELTA and DataImporter commands
added a test method to verify that inner classes are not modified when ignore definitions to ensure that inner classes are not modified when the ignorement flag is true
removed unused import of android . util . Log from JettyService . java to improve code cleanliness and reduce unnecessary dependencies
updated the ` checkItemPlacement ` method to include a ` workspaceScreens ` parameter and adjusted related logic to enhance item validation by incorporating workspace screens into the condition check
jaribakken : add a quitquitquit servlet to kill the jvm
do n ' t consume all row except those that do n ' t have the original data
added a check to skip processing for Windows environments in Tests . java to improve compatibility by avoiding issues with Teredo in Windows environments
added ` ` add contact ' ' dialog message when un - connected .
change bean registration method from ` registerBeanDefinition ` to ` registerBeanComponent ` to improve flexibility in bean registration for the user details service
be dee6975a : be 8a196351 : fixing issue where fastbitmapdrawable be not scale the draw into the correct bound . ( bug 9075810 )
fixed decoder for meitrack and totem protocols ( fix # 1598 )
changed method visibility and updated method calls in SunFontManager and X11FontManager classes to enhance encapsulation and improve font path retrieval logic
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods are outdated and should not be used in future development
fix flaky test : cleanup after exception handling
add an option to not strip empty sentence to avoid empty sentence .
added checks to create artifact subdirectory and improved error handling in MavenArtifactFetcher . java to ensure proper directory creation and provide clearer error messages for missing artifact directories
replaced the static final instance of LazyTreeLoader with a final instance of JavacTool in ReusableCompiler . java and updated JavaLanguageServer . java to return NO _ MODULE _ COMPILER and JavaCompilerService . NO _ MODULE _ COMPILER to simplify the code and ensure consistent compilation context handling
bug 10603 : fix npe in directagentattache when the resource return null answer
do n ' t log exception when an error occur send email . this protect against the jersey notification .
add api annotation and fix null pointer exception for pipeitemsobsidian .
updated DateMathParser to accept a custom locale parameter for parsing mathematical expressions to ensure consistent formatting regardless of the default locale settings
added a boolean field ` includeDecals ` and its getter / setter methods in ` StorageOptions ` , and implemented a checkbox for including decal options in ` StorageOptionChooser ` to enhance user control over decal display options within the storage options
updated the generateDocumentation method to include a null parameter and added a method to retrieve implemented databases to ensure documentation is generated consistently and clarify the method ' s intended functionality
hive - 19921 : fix perf duration and queue name in hiveprotologginghook ( harish jp , reviewd by anishek agarwal )
fix typo for ` ` start ' ' and ` ` doc ' '
updated class file version check to use the major version of the runtime to ensure compatibility with different runtime environments
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP password authentication tests to ensure proper functionality of LDAP password management in the application
replaced OrcInputFormat with BasicStatsNoJobTask and updated the condition for using footer scan to enhance functionality by integrating BasicStatsNoJobTask for determining footer scan capabilities
fix an npe on reload from save all action ( # 4073 )
updated VisibleAdvance class to improve functionality to enhance performance and maintainability of the code
fix # 6545 : handle informer . start without reconnect
fix bug when show sparklines for dynamic number
updated resolvedGroupArtifactVersion to use Objects . requireNonNull for null checks to improve code safety by ensuring required arguments are not null
updated API assignment to ensure fallback to the existing API when apiInfo is null to improve robustness by preventing null assignment to the API variable
refactor HeadersConfigurer and CacheControlHeadersWriter for improved code clarity to enhance maintainability and readability of the code
added lighting and shader disposal functionality in PhotoPanel and FlameRenderer classes to enhance lighting effects and improve resource management in the rendering pipeline
updated scene timeout from 460 to 520 and added context menu functionality in InsnListEditor to enhance window behavior and improve user interface interaction
modified CSS parsing logic to include length checks before processing characters to enhance robustness by preventing ArrayIndexOutOfBoundsException during string processing
set the default look and feel to ensure the frame and dialog wo n ' t be resize by default .
removed unnecessary " EXISTS " clause from COMPLETED _ REQUESTS _ SQL and simplified command retrieval in HostRoleCommandDAO to improve code clarity and eliminate unnecessary method calls
updated test cases in LJ1200Message . java to use different variable names for better clarity to enhance code readability and maintainability by using more descriptive constants
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for new tasks based on swipe direction and conditions
replaced HostDatabase with ColorStorage in ColorsActivity to utilize ColorStorage for better color management functionality
updated method signatures and documentation in String . java to improve clarity and maintainability of the code
removed unused SLF4J logger imports and standardized logger initialization across multiple classes to improve code maintainability and reduce potential conflicts with logging functionality
added a method ` getGlobals ( ) ` to return a ` Entry [ ] ` array from the map entries to facilitate easier retrieval of entries from multiple map contexts
added multiple assertions for the sendcoin method in MultiSign34 . java to ensure the transaction with expected witnesses before proceeding with transactions
test : migrate CUfiltertest to junit 5 ( # 4433 )
add systemproperty to facilitate the use of window path in the javadoc report
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow access to the augmentSuccessViewModelObjects method from other classes
fix junit test to verify presence of field in metamodel
remove unnecessary ` ` conf ' ' reference from Outlink instantiation in multiple classes to simplify code and improve readability by eliminating unnecessary configuration parameters
removed the ` LexicalContext ` parameter from multiple methods to simplify method signatures and improve code readability
updated the return statement to include modifiers and added a check for unused imports in the UseLambdaForFunctionalInterface class to ensure proper handling of unused imports and improve code clarity
removed the method ` appendClassSelector ` when adding a class file set to the class files to streamline the class selection process for improved performance
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to simplify the code by eliminating unnecessary input validation
[ 1.18 . x ] fix miss mapping event on registryloader ( # 8598 )
swapped the assignments of x3 and y3 in the Intersector class to correct the quaternion logic to ensure accurate intersection detection
add default sbe property ( fixes # 526 )
test : add a client - side cluster check for the elasticsearch container
fix bug : a large buffer be expect to be pass to peermessage . parse , so that the data be expect to be large than the buffer size .
added support for versioning in cluster definitions and refactored related methods to improve clarity and maintainability of cluster management code
camel - 4321 : remove useless method setconfiguration ( ) a it duplicate of setconfiguration ( ) in camel - ftp
[ zeppelin - 4732 ] fixed bug when ' dependency ' be not find in zeppelin .
modified local code handling in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest . java to ensure correct local variable assignment and validate behavior with dceed variables
added a check for target certificate constraints in ForwardBuilder and created a new class BuildEEBasicConstraints for testing to ensure correct handling of specific certificate constraints and facilitate the creation of PKIX basic constraints
added a method to initialize JDBC database connection in JdbcPostgresqlDAO . java to ensure compatibility with PostgreSQL versions prior to 9.5 and above to maintain data integrity
attempt to address intermittent test failure on osx ( # 3973 )
replaced boolean flags for undeleting multiple documents with assertions for pending deletes to improve code clarity and ensure consistent behavior in managing delete operations
added null checks for scopes and improved exception handling in ClientRegistration . java and updated corresponding test cases in ClientRegistrationTests . java to ensure robustness by preventing potential NullPointerExceptions during client registration
nifi - 10315 added null check for orderby parameter in CartesianProductStream . java to improve robustness by avoiding potential NullPointerException
[ hamcrest ] use matcherassert instead of junit assert in clusterentrypointtest
server : allow migration from kvm to iso when vm be in stopped state ( # 6536 )
replaced a direct call to ` LogUtils . initHiveLog4j ( ) ` with a temporary variable to store its return message and added a debug log statement to improve log visibility by capturing and logging the initialization message
added a check for empty tasks before processing and modified conditional checks for foundIndex to improve robustness by preventing potential NoSuchElementException when no tasks are available
return boolean from OpenPgppubsubmanager . deletepubsub ( ) to enable function in case of error .
[ digitalstrom ] fix bug when load device with non - boolean relation
check for empty code string and throw an exception if the image be no valid .
changed the type of the ' suites ' variable from TreeSet to LinkedHashSet in SSLContextImpl . java to maintain the order of ciphers when storing multiple CipherSuites
apps - 867 hide \ 0x80 and \ 0x9 when use escaper .
[ calcite - 2184 ] modify provider sqlsource code to support charsequence instead of string
updated aliasChildren handling to include null checks and ensured aliasChildren is always initialized to improve stability and prevent potential null pointer exceptions
be 3c178d4c : be 564a2c2 : fix custom content state for scroll in rtl ( issue 11068877 )
improve code to make it easy to understand what ' s go to autoformat .
add miss access to protect method in widgetinterceptor . setaccessible ( true )
added a conditional check to exclude the " database . server . id " raw name in field configuration to ensure the field defaults are only set for fields with the correct database type
update apple ripper to use win64 and safari
added a menu item to the popup with a server URI to enhance user accessibility by accessing the server ' s host
[ fix # 388 ] address review comment .
ignore arrayindexoutofboundsexception during record building in encryptedSlideShow . java
[ flink - 22494 ] [ runtime ] add more logging to the queue and filecheckpointio
fix an npe on avatar . postload ( ) call before it .
updated Docker image version from 1.0 . 0 to 1.1 . 0 and added SSH algorithm options to enhance security and compatibility with SSH communication
added a large array and forced garbage collection in ThresholdTest . java to improve performance by ensuring a full garbage collection is required during tests
modified StdErrLog to name the logger and adjusted its logging level settings to enhance log name validation and ensure proper logging behavior
fixed - rclusteredupdateservice . register ( ) method invocation with remoteservice interface name . # 3119
add isselected option to multibutton to allow selection of any radio button
updated the intent in CustomPlaybackOverlayFragment from UpNextActivity to NextUpActivity to ensure the correct activity is used for playback controls
[ issue # 5040 ] always start replicasmanager when enablecontrollermode be true ( # 5041 )
close reconnection connection after redishealthindicator be initialize
refactor theme color retrieval to use a common method for obtaining brand color to improve code readability and maintainability by consolidating theme color retrieval logic
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
replaced multiple instances of ` ToolingApiLauncher . java ` with a consolidated list of type adapters to streamline the code and improve readability by eliminating redundant code
updated the list of variables in TestPayloadCheckQuery . java to ensure consistency in the data structure usage
updated ConsoleReader to handle character masking with a new method and ensured the correct length of the output stream to improve functionality and maintain data integrity during character processing
added user information retrieval and command line output in BaseCommand . java to enhance user feedback during command execution
rename org . graalvm . compiler . test package to org . graalvm . compiler . api . test to avoid split .
[ hotfix ] [ runtime ] remove unused constructor and field in slotsharinggroup
simplify the code and make the streamex test more robust
updated texture paths for wheel and music files in DecalTest and MusicTest files , and modified music duration and screen clearing in SimpleDecalTest to ensure correct texture usage and enhance audio quality for better playback experience
be d26bad51 : be b0f2ffae : fix 2300792 - all apps zoom when you come back from an app .
updated import statements for consistency in HostsRemovedEvent . java to ensure correct class references for cluster state management
added support for introspection functionality in ClientDetailsEntity and modified introspection logic in ChainedTokenGranter and IntrospectionEndpoint to enhance introspection flexibility and improve client interaction handling
updated the method for writing session information in HtmlSessionInformationsReport . java to include HTML encoding for remote users and session attributes to enhance security and prevent potential XSS vulnerabilities
added a new link for PhrasePrefixQuery in the Query class to support tracing of query types in the application
replace size ( ) = = 0 with isempty in commentinserter .
refactor NoValueOfOnStringType to simplify the checks for literal and binary arguments to enhance code readability and ensure proper type validation for binary operations
changed method parameter types from generic type A to Object in multiple assertion classes to improve type safety and flexibility in method signatures
[ type : fix ] improve java doc for jwt plugin ( # 468 )
modified methods for retrieving and setting uploader behavior in AppPreferences and UploadFilesActivity to improve code modularity and encapsulation by using instance methods instead of static methods
fix : fix issue relate to overridden final field in constructor ( # 1443 )
updated BitmapDrawable initialization to utilize Robolectric ' s newInstanceOf method to improve compatibility with Robolectric by ensuring BitmapDrawable is instantiated correctly
renamed the method from ` isValidSEnding ` to ` isValidEnEnding ` and added a character variable ` c ` to improve method clarity and standardize character validation logic
updated PageMarkerResources to use a different drawable resource for the current page indicator to improve visual clarity by distinguishing the current page indicator
hbase - 26527 add reinvocations counter to basicinvocation for good tracking of reinvocations
modify the formula for calculating topPadding in DefaultLookAndFeel . java to ensure accurate vertical alignment by directly using the getInner height of the font height
added a ` break ; ` statement in the ` Recognize . java ` file to terminate a loop or switch case execution early
added preference - related functionality to manage home screen interactions in multiple classes to enhance user experience by allowing haptic feedback when the home screen lock is active
added support for handling different formula types in ExcelBatchReader and created a corresponding test case in TestExcelFormat to enhance functionality for handling text formula cells and ensure proper validation in Excel queries
fixed bug 1050123 - immutablefield no long flags assignment in anonymous inner class method .
added a user agent field and updated its assignment in HttpGetter . java to ensure that the user agent is retrieved from application settings if it ' s not already set
camel - 8195 : add a bit more javadoc to model class so we have eip documentation out of the box
change log level from info to debug for missing file message to improve log granularity for debugging purposes
rename QueueTest class to QueuedPipeTest to better reflect the purpose of the test being executed
update checkVersion to use method for retrieving unique ID to improve compatibility with newer server versions for player management
camel - 18025 : camel - core - routing - add support for not include pattern . thanks to joerg kessler for reporting .
added vertexColor property and methods to handle color tinting to enhance color customization flexibility for p shapes
updated the ` printForeignKeys ` method to include a ` isPkColumnFiltered ` parameter and adjusted related logic accordingly to enhance foreign key handling by accounting for partial database objects
removed unnecessary dependency on Shadow . extract for matrix handling to simplify code and improve performance by directly accessing matrix values
removed the ` api ` package declaration from ` MetaRules ` and updated imports in ` PythonDslProjectBuildFileParser ` and ` PythonDslProjectBuildFileParserTest ` to streamline package structure and eliminate unnecessary dependencies
removed class tracking and simplified the class definition handling in GroovyEngine . java to improve code clarity and efficiency by eliminating unnecessary cache management
feat ( plugin ) : entesb - 12162 - add support for plugins in the hawtconfig . json file
updated print statement syntax in NativeCodeGenerator . java to ensure consistent formatting and correctness of command output
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) to improve event handling during flight configuration updates
add test for assertthrowedexception # hascause and check that the thrown exception do not have the wrong type in the wrong place .
updated the conversion of flattenName and packageName to use string representations to improve clarity and consistency in package name representation
fix scope issue report by coverity
simonstewart : adding a couple of test for firefox that use profile and capability in firefoxdriver
camel - 17354 : camel - jbang - include documentation for route description a it be not part of the route documentation .
refactor JavacTreeMaker class for better code organization to improve maintainability and readability of the code
added a line to set the weight in the edge object to ensure the edge weight is correctly configured for CSV import
fix usage record when extract the tariff cost per month ( # 5067 )
modified SQL query to include an additional ' adsrc ' field and updated the retrieved tuple assignment to use a byte array for better data retrieval accuracy
fail with a nice error message if binarized sentences be null
modify the return statement to include detailed information about the user object to enhance debugging information by providing more detailed context about the user ' s state
remove getbodyasstring since it be not available in jdk 1.8 .
[ hotfix ] [ runtime ] avoid needless access to currentexecutionvertex in taskdeploymentdescriptorfactory
improve access roster visibility check , now use the group manager when check for group member .
added the classpath reference for Maven test libraries in AbstractJRubyMojo and removed unnecessary suppress warnings in CucumberMojo to ensure the correct classpath is included for unit testing functionality
updated MethodHandleImpl and MethodHandlesTest to simplify type assertion and add new test cases to enhance test coverage for user class methods and ensure correct behavior in signature verification
added imports for StopFilterFactory and NamedSPI in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilterFactory to enhance functionality and maintain consistency in filter factory imports
increase width and height comparison conditions in URLImage class to allow for dynamic resizing based on image dimensions
added a check to ensure the name ends with " META - INF / " and modified the logic for handling unique package names to prevent invalid package names and improve code clarity
updated createImageToFileSystem and createImageToStorage methods to include an additional final keyword for parameters to improve code readability and ensure immutability of method parameters
updated assertions in StackWalkerTest to use dynamic expected value based on the VersionCheck to ensure compatibility with different Android versions and improve code clarity
changed method visibility of addViewportJob from protected to public to allow external access to the addViewportJob method
remove ' num - output - partitions ' param from ' buildflow ' ( # 1297 )
removed server shutdown and exit methods from TestDatabase . java to streamline server operations for improved performance and readability
added null and empty checks for block in NodePathsConvertOperator and modified child iteration logic in SchemaQueryMergeOperator to improve robustness of path handling and prevent index out of bounds errors
add the total harvesting time function to be use for ice and iceudlsocket . add the necessary property to provide a way to query the harvesting time .
updated drawing parameters for particle rendering in ParticleEditor . java to improve the visual quality and efficiency of particle display
added logic to update the " hadoop - env " configuration based on the new properties file to ensure proper handling of configuration changes when the keyserver port is not defined
rendertheme v4 : transparent background add for svg symbol , e . g . on top .
removed the minSdk configuration from the ShadowKeyguardManagerTest and ShadowKeyguardManager annotations to simplify the annotations and improve code clarity
updated the method signature of ` containsExactly ` to accept variable arguments instead of using a generic list to improve flexibility in asserting the result of the ` containsExactly ` method for better usability
updated the Bucket4jFilterFunctions to use capacity and refillGreedy parameters for better capacity configuration to improve clarity and control over bucket proxy creation
add javadoc for new wordlistloader and improve the javadoc of germananalyzer
added hook functionality to the Generator class and modified transformation handling in the optimizer to enable evaluation of Hive transformations based on specified hooks
added error handling for NoClassDefFoundError in REngine . java to ensure supported status is set to false when NoClassDefFoundError occurs
updated ` TraceWebFilter ` to use ` SpanAndScope ` for handling span scope to improve span management by ensuring all spans are in a single scope
updated error handling in AbstractUpdateCommandStep to provide more informative error messages to enhance user feedback by providing clearer error messages when exceptions occur
updated SolrServerException instantiation to include the base URL in the exception chain to improve error handling by providing more context about the Solr server
updated landscape mode logic to use negation for landscape mode to ensure correct behavior when printing setup records in landscape orientation
add null check for object before returning NullWritable to ensure proper handling of null values to prevent potential NullPointerExceptions
added validation to check for illegal argument names and throw an exception for invalid inputs to ensure argument names do not contain spaces and improve error handling
location play service now honor the background location change listener ( # 1489 )
update condition to check for GL10 . GL _ POINTS instead of GL10 . GL _ POINTS to ensure correct handling of specific primitive types
[ gr - 17513 ] fix arrayindexoutofboundsexception in trufflestring . comparetonodes
added a method to set the command list in the ComboBox class to ensure the ComboBox component uses the updated command list status dynamically
nifi - 10814 - escape filename in tls - toolkit ( # 6305 )
updated zkcli command usage to use localhost with specific command syntax to ensure consistent command execution across different Solr instances
[ wemo ] fixed accidental use of = = instead of = = incompatibility check
added a conditional check for remoteGrpcStatus before posting a severe message to ensure build failure logs only when the remote Grpc status is OK
refactor method signatures for clarity and consistency in the XYItemRenderer class to improve readability and maintainability of the code
fix potential npe by entity id add in forgechunkmanager . tickforgechunk
added a method ` getErrorString ` to return the string representation of EGL error codes for better error handling
fix for issue 230 : provide an error message if a feature be not support in the current language .
updated server URI handling in RFC2616BaseTest . java to ensure the test verifies the correct server URI format
added a method call to addToHelperList in the Construction class to enhance the functionality of helper list management
added a condition to handle the length of - 2 in GlyphLayout . java to skip the first element of " [ [ ] " to ensure correct parsing of specific sequences while maintaining expected behavior
added security permissions handling in mmm Transport . java and mmm TCPTransport . java to ensure safe context class loader manipulation and thread naming within privileged actions
refactor the handling of file paths and folder operations in ReceiveExternalFilesActivity to improve clarity and ensure proper synchronization based on file existence before operations
fix npe in unit testng when m _ serviceLoaderClassLoader be null
removed logging statement for component validity in BarrowmanCalculator and adjusted the calculation of delTap in TubeCalc to optimize debugging output and correct the calculation logic for improved accuracy
added a check for Node type before adding column to the node table to ensure proper handling of node types when adding columns
[ issue # 3792 ] fix broker starter not work for client ( # 3793 )
added a test method for bug4658 testing in MultiCfQueryExecIT . java to verify the behavior of query execution with null values and fix a bug related to handling column values in the query execution
remove duplicate code and use linkedlist in peergroup . getpeerversionmessage . resolve the best version of the peer .
fix abstractbuilder not update mj file after change cycle .
[ iotdb - 5568 ] enable retryattempts and schema setting for ratisconsensus ( # 6568 )
updated multiple Java files with consistent formatting and minor changes to improve code readability and maintainability
fix : do not unregister jmxhelper if the service be already register
tika - 3745 -- upgrade commontika and add general encode detection for non - unicode archive entry
8274889 : c2 : chmod should not perform modular optimization with - xx : + stressg1
fix : support for deserialization of generic type ( # 4203 )
updated the initial capacity of ByteArrayOutputStream from 512 to 1028 to improve performance during stream operations
added comments to the languagesExcluded array for clarity on the availability of various language symbols , including Hindi ( Indian ) and Persian variants
fix incorrect number of byte send from transfer when there be only one byte leave .
remove a duplicate ` ` windowfocuslistener ' ' method , and use ` ` windowdeactivated ' ' instead .
refactor error handling for invalid table cases in SemanticAnalyzer . java to improve clarity and robustness of error messaging for better debugging
fix ( render ) : fix ` ` flat ' ' depth in skineletonrenderer
added getSolrHome method to DistributedClusteringComponentTest and BaseDistributedSearchTestCase classes to provide a dynamic retrieval of the Solr home path for better test management
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning for improved servlet configuration
removed the getAccount ( ) method from UserListItem to simplify the interface and reduce unnecessary method calls
added unit tests for installPackage method and modified appInfo handling to set processName to null to ensure correct installation process name is used when no package name is provided
improve documentation ( javadoc ) of org . hibernate . cfg . availablesettings . cdi _ bean _ manager
added TransactionCapsule imports and initialization methods to TransactionTrace . java to enhance transaction management capabilities within the application
add client property to shuffle member list to allow you to choose whether to shuffle member list
changed the type of ' val ' from Text to CrawlDatum in SegmentReader . java to improve data handling by utilizing a more specific data structure
refactor JsonDeserializer class to improve code readability to enhance maintainability and simplify future updates
updated configuration path format and changed fetch size handling in QueryProcessExecutor to improve code readability and ensure thread - safe access to fetch size
changed error message from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument " to " trunc ( ) " to accurately reflect the intended functionality of trunc operations
removed the import of ExecutionContext from TaskletStep . java to eliminate unnecessary dependencies and streamline the code
initialize the title variable to an empty string to ensure that the title has a default value to avoid null reference issues
fix : set empty body to null in asynchttpclientcall
move EmbeddedServerInstance to a separate package and mark it with @ Deprecated to improve code maintenance and signal that this should no longer be used
let jabrefframe able to register mac event ( e . g . mac banner in the console )
renamed the test class from SecurityTokenServiceAuthenticationMetaDataPopulatorTests to SecurityTokenServiceTokenFetcherTests to improve clarity and better reflect the functionality of the token fetching mechanism
added a return statement for the type check in the handlerLibrary . java file to ensure proper handling of Enum types during enumeration conversion
make pgconnection . hideunprivilegedobjects final ( # 2088 )
fix music data source test and reduce log verbosity
added a check for Android Q and saved Giphy video URL in IOUtils . java to ensure compatibility with Android Q when using Giphy video saving
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 453 : deserialization of variable instance with jdbc object .
refactor various authentication and service classes to improve code organization to enhance maintainability and readability of the codebase
simplify ( use ` map . computeifabsent ( name ) ` by switch to a more concise computeifabsent method
hbase - 10619 remove hbaseoutputstream . dataoutputstream from hbase - 1.4 beta 1
updated transaction IDs and bucket IDs in the Hive test cases to ensure consistency in data structure usage across test cases
changed log level from info to debug in MavenEnhancePlugin . java to improve logging granularity for enhanced classes
add provider name . fix # 378 .
added Captor annotation processing to MockitoBeforeTestNGMethod . java to ensure proper handling of Captor fields in Mockito tests
added checks for non - existent class names and method names in TestSuiteBuilder . java to improve error handling for cases where classes and methods may not exist
updated import statements and refactored conditional checks in GroovyAutoComplete . java and GroovyLanguage . java to improve code readability and ensure proper handling of input prefixes and prefixes
fix osm import : graphhopper do not compile with osm
[ java ] retry the session creation when it be fail . fix # 4783
changed mHideSysUiScrim variable from final to non - final and added preference handling to control visibility of the scrim based on user preferences
added cancellation logic and updated method signatures in OkHttpCall and CallTest to ensure proper cancellation of requests and improve code clarity
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for new tasks based on swipe direction and conditions
added a superclass of RequestMatcher in the RequestMatcher interface to allow for more flexible matching of RequestMatcher instances
8058174 : fix java . lang . unsupportedoperationexception on lambda base type for applicability
make sure box test use the box test constructor , rather than the boxed one .
added unit tests for application metrics for default density settings to ensure accurate handling of display metrics for different density formats
updated exception handling and simplified URL creation in PluginClassLoader to improve error handling and simplify method invocation for better maintainability
updated the icon resource in RootCursor from a logo to a mipmap ic _ launcher to utilize a more appropriate icon for the application
added functionality to set content text in errorBuilder to improve user experience by displaying relevant error information
updated the implementation of ConcurrentHashMap to enhance thread safety and performance
added methods to adapt user trades from AbucoinsFill and updated related classes to utilize these new methods for handling user trades efficiently
fix issue with plotdisappear after the plot disappear ( # 4487 )
simonstewart : you can now add support for the htmlunitdriver in firefox 8 and 7
added handling for the VARBINARY database type in BlobType . java to ensure proper handling of VARBINARY data type in the database
setcookie support now include cookie - less value ( even if nothing be set in the domain )
avoid potential race when look up the libffifcontext cache type .
fix : invalid thread exception be throw onboundbuffer . write ( # 2814 )
updated timeout handling in the LDAP connection and added a new method to deadserverNoTimeout to improve code clarity and ensure proper timeout behavior during server operations
pdfbox - 4071 : fix typo find by codespell on fossies . org , improve javadoc
fix a test that could fail when it be run in jre 1.5
initialized textRect and iconRect variables in SynthTabbedPaneUI to ensure proper instantiation of rectangles for layout management
added handling for BoosterSet in ComponentAssemblySaver and adjusted return value in BoosterSet to ensure proper boosting functionality and reflect expected behavior during serialization
fix # 6729 - jabref fail when use http proxy
refactor metrics handling by removing redundant static methods and setting the interval directly to improve code clarity and reduce redundancy in timing calculations
do not compile stubs in java code ( fixes # 7946 )
hbase - 15613 fix remain checkstyle issue in util / ipcutil . java ( # 786 )
removed chunked transfer handling from the NettyRoutingFilter to simplify the request processing by directly using the HTTP client directly
added a call to ` clearAttributes ( ) ` in ` PatternTokenizer . java ` to ensure no stale attributes are cleared during processing
fix verificationafterdelayimpl to work with polling period .
added session compaction functionality and updated related methods in CliConfigs and SemanticAnalyzer to ensure proper management of compaction operations during query processing
[ zeppelin - 3952 ] do n ' t copy image for image if it do n ' t exist
hbase - 1745 thriftserver fix findbugs warning in hbaseadmin
pmd : ignore broken test until fix
added calcXBounds method implementations in BarLineChartBase and CombinedChartRenderer classes to correct calculation of visible X - axis values for chart rendering
mondrian : clear error handler when parse error happen .
release the header buffer when reuse the http connection .
added a new test class ` UseDiamondOperatorWithVarTest ` to validate the behavior of the ` UseDiamondOperator ` to ensure that ` UseDiamondOperator ` is not converted to ` Java ` using diamond operators for improved code reliability
added null and closed checks before closing the result set to ensure resources are only closed if the result set is not null or not , improving robustness
core - 2651 derby : default unknown version to 10.6 to support sequence
fixed bug 1312723 - ustringbufferlength no long report false positive for empty literal array .
removed error logging for exceptions in RemoteSparkJobMonitor to improve error visibility and debugging during job execution
modified the createDb method to return a Connection object instead of void to improve resource management by ensuring the database is closed after use
feat ( metric ) : generate new custom metric ( # 4287 )
hbase - 11543 add offpeak max compact size configuration ( # 1830 )
modified BitstampDepositAddress to handle both " address " and " address " formats when unmarshalling JSON to improve the robustness of BitstampDepositAddress handling by ensuring the correct address format is returned
replace IllegalStateException with an abort statement for capacity exceeded response to improve error handling by using a more appropriate exception type
fix incorrect relative path when check for link in deleted directory
updated InvocationFinishedEvent to implement MetricsEvent instead of Event and modified related methods for metrics handling to enhance event accuracy and improve thread - safety in metrics management
replaced the direct return of the network interface with a loop that iterates through available network interfaces to improve clarity and ensure that only available network interfaces are processed
replaced the existing validation check with a loop for valid checksums to improve code readability and maintainability by consolidating validation logic
added a clone method to the BufferedChecksumIndexInput class that throws an UnsupportedOperationException to indicate a placeholder for future cloning of the IndexInput instance
modified trigonometric calculations to incorporate a radius parameter to enhance rendering accuracy by allowing for customizable radius values
modified frequencyBand assignment to include a check for the unique identifier to ensure only unique frequency band identifiers are processed to avoid potential conflicts
renamed fields and variables related to tap square to improve clarity and consistency to enhance readability and maintainability of the code regarding gesture handling
set default _ downloaded _ on _ write to false to align with expect behavior
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and improved date formatting utility in Util class to enhance functionality by allowing users to retrieve and format cryptographic dates more effectively
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes to provide access to the delegate for tracing purposes
updated error handling in FileActivity and added sync intents in FileDisplayActivity to improve user experience by ensuring correct messaging is displayed based on fragment type and sharing state
added stream writable functionality to the Quiche connection handling to ensure proper error handling when attempting to write to a non - writable stream
fix issue 588 - javascript context page generation not work in ie
removed unnecessary alignment parameters from TableCell constructor calls to simplify the code and improve readability by using consistent formatting
add a new file ` TracingAutoConfiguration . java ` to configure tracing with MDC and ThreadLocal tracing to enhance tracing capabilities for the application ' s context management in the application
fix bug introduce by r737212 in submission page
return the same segment name to improve the overall memory footprint of server query executor
updated the VertxBufferTest . java file to improve test coverage and ensure reliability of buffer operations
bug 60425 : fix mapi message submission chunk ( alex baranau )
changed the visibility of mContext from private to protected to allow subclasses to access mContext for better extensibility
removed unused imports of SortedSet and TreeSet in ShowTablesOperation . java and ShowViewsOperation . java to streamline the code and reduce unnecessary dependencies
added a new class MongoDataIntegrityViolationException and updated MongoTemplate to include Result and Operation parameters to improve exception handling by providing more context throughout the exception context
[ flink - 3996 ] [ runtime ] return the jobcompletionfuture from jobcoordinationservice . jobcompletionfuture ( ) after the job end .
updated methods in DisplayUtils to handle various image formats and added a clearer structure for human - readable output to improve maintainability and clarity of image handling in the application
updated the creation of TieredMergePolicy in TestUpgradeIndexMergePolicy to directly use a TieredMergePolicy to simplify merge policy configuration and improve test coverage
added a check for overview state before executing code to avoid potential null pointer exceptions when overview state is not enabled
update error log link to the new classpath to provide a reference to the required library for better error handling
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter and updated the method signatures accordingly to allow for loading configuration from an input stream for improved flexibility in loading settings
added null checks for incoming fields and TermsEnum in FilterLeafReader . java to ensure robustness by preventing NullPointerExceptions
add use of fixed key size to jcecrMFencryptorbuilder ( # 293 )
replaced the exception message from ` IOException ` to ` IOException . getMessage ( ) ` and removed unnecessary constructors in ` SoftEndOfStreamException ` and ` SocketUtils ` to provide more informative error messages and simplify code by removing unnecessary complexity
remove dependency injection for camel - core ( # 10494 )
updated the expected size in the BundledDistributionTest and added new assertions in PostgreSQLTest for user assertions to ensure accurate verification of database users and enhance test reliability
[ flink - 12335 ] [ core ] add an option to set the job name for the pipeline . name .
update workspace page scaling calculation to account for two - panel layouts to ensure proper layout scaling based on device profile dimensions
fix change ice plate biome to use sapling . ( # 1696 )
removed timezone parameter from getMinTime methods and updated its usage to simplify method calls and improve readability by using direct string values
[ j2kt ] fix this reference when use a parameterized type .
fix xhamster ripper for albumartist
use an arraylist to avoid concurrentmodificationexception when iterate over entities .
hhh - 15426 oracledialect should use schema for table name when specify a feature type
fix an npe from console when there be a function reference to a function ( # 6373 )
added a parameter for the number of all files in the FileMenuFilter constructor and updated related functionality to handle the visibility of selected files dynamically based on the number of files displayed
[ java ] adjust calculation of termoffset to prevent an off - by - one error .
added comment about the cause of possible npe
inPortalTicks should be set to 80 if it is below 80 in Player . java and Entity . java to ensure that inPortalTicks is only incremented under 80 as intended
use compression to speed up display of monitor tile in the inventory .
updated multiple codec templates for consistency to improve maintainability and readability of the code
change variable types from int to long for length calculations in Base64 . java to prevent potential integer overflow when handling large binary data sizes
removed a null check for the header in RendererConfiguration . java to simplify the code by assuming only a valid renderer is initialized
server : allow scale scale for a disk offering with custom service offering ( # 6687 )
updated imports and builder setup for Hitbtc order classes in HitbtcAdapters . java and HitbtcExchange . java to improve code clarity and ensure proper usage of LimitOrder . Builder
fix inconsistency in idlecount when deal with non - consecutive idle
updated the service label from " automation " to " automationscripting " in JRubyScriptEngineFactory . java to ensure consistency and clarity in the service description
replace the ` name ` variable with a ` displayName ` variable in ` ConfigCategory . java ` to improve code readability and maintainability by using a consistent display name reference
updated the condition to include a check for negative exchunAmount to ensure that the condition correctly handles cases where the exchunAmount is less than zero
remove unnecessary iterations in FeedUtils . java to improve code efficiency by avoiding unnecessary iterations
added a test method ` testHDF4 ` to validate the functionality of HDF4 file parsing to ensure compatibility and correctness of HDF4 file handling in the parser
[ calcite - 6092 ] skip test with invalid time value ( jacky woo )
removed unnecessary whitespace in a conditional statement to improve code readability and maintain consistency
added methods to quiet close all AutoCloseable objects and updated loop structure to improve resource management and enhance readability of AutoCloseable handling
simplified the confirmation button assignment in RemoveFileDialogFragment to improve code readability and maintainability by using a clearer string resource
added conditional checks before drawing the image in Pixmap . java to ensure images are only rendered if valid dimensions are provided
replaced ReflectionHelpers method calls with Java ' s Method invocation for defining class to improve compatibility and performance in accessing unsafe methods
fix incorrectly generate uri on window , fix # 588
updated conflict handling in CachedRowSetWriter to use a long for count conflicts to improve clarity and maintainability of conflict detection logic
auto add pubspec . yaml to the config dialog ( # 4465 )
[ reference ] return the reference object if it be the current reference .
added file check for seed files before injecting URLs to ensure that only valid input files are injected , improving error handling
added a condition to hide the original view when it is expected to be displayed to improve user experience by allowing the original view to be displayed when needed
improve max _ nodes ( 0 ) logic to handle case where max _ trial > 0 .
[ fix ] added warning when uv coordinate type be not support .
added error handling for file deletion and improved variable naming for product retrieval to enhance code robustness and maintain consistency in variable naming
camel - 14850 : camel - tracing should use delegate for seek call on producer / consumer
hhh - 13703 - fix stringindexoutofboundsexception when extract handle
replaced the manual addition of elements to the convertedValsList with an ArrayList instantiation to simplify list management and improve code readability
deprecate timer constructor for removal in 2.0 . 0
added a nightly version warning dialog for users when running Nightly builds to inform users about potential issues with Nightly builds and issue tracking
add sorting to get response by team name and email , default to blank string if team name be null
improve ` unnecessarythrows ` message by remove ` unnecessarythrows ` declaration .
deleted ` CacheApplication . java ` and replaced it with ` cacheData ` in ` CommonsApplication . java ` to streamline the codebase by consolidating cache data management
replaced references to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java ` to improve code clarity and maintain consistency with the RuntimeEnvironment utility class
refactor StatisticsServlet to improve code readability to enhance maintainability and reduce complexity in the codebase
updated runtime environment configuration handling to use ResourcesManager for SDK version KITKAT and above to ensure compatibility with newer Android versions and improve resource management
added a static final string and a constant for the stack repository update link exists in VersionDefinitionResourceProvider . java and its corresponding test in StackManagerTest . java to ensure the correct version definition of the repository update link functionality
doc : clarify the javadoc of getresource ( ) / getresource ( )
added a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during index operations
added package imports for XML resolver helpers and readers in CheckPackageAccess . java to enhance package accessibility for XML resolution functionality
rename the ' save ' method to ' add ' and ' persist ' methods in JobRepository and related classes to improve clarity and consistency in method naming
[ gr - 29411 ] fix handling of loop exit during graph building .
replaced RecyclerView with WidgetsRecyclerView and updated related methods to enhance layout measurement with vertical margins and improve code clarity
added a check for terminal support before proceeding with command line input to ensure that the console input is only processed when the terminal is available
update data types from Long to Integer in CloudExitableDirectoryReaderTest and implement time checks in LBHttpSolrClient to enhance performance and ensure accurate timeout handling using more suitable data types
added session validity check before flushing response commit in AbstractSessionCache to ensure that only valid sessions are flushed to avoid potential errors
refactor how reference columns are retrieved and handled in ChangedIndexChangeGenerator . java to improve code readability and ensure robustness in handling index changes
replaced Vector with ArrayList for buttons and added action listener methods to enhance flexibility in handling multiple RadioButton instances
updated UserManagerCompat implementations to introduce a new UserManagerCompatVM class and modified the conditional checks to enhance user management functionality by differentiating between NYC and Marshmallow versions for better compatibility
added ` getDatabaseMajorVersion ` method implementations in ` MockDatabase ` , ` AbstractDatabase ` , ` HibernateDatabase ` , and ` ReorganizeTableStatement ` to provide consistent handling of database major and minor versions and improve error handling
updated ActionGraphCache to handle mismatched rules more accurately and added logging for entries in the cached ActionGraph to improve accuracy of mismatched rules and enhance error reporting for better debugging
added LockDatabaseDesc and UnlockDatabaseDesc classes for serialization support for LockDatabase and UnlockDatabase to provide a structured way to handle database locking and unlock operations
updated RankingTopComponent and RankingUIModel to use setter methods for chart visibility and ranking properties to streamline the code for better readability and maintainability by reducing boilerplate access to model properties
added handling for disconnect messages in HandshakeHandler and updated logging messages in NodeImpl to improve disconnect functionality and ensure consistency in log output
added a test for setting and deleting storage groups in IoTDBAuthorizationIT . java to ensure proper functionality of storage group management in the application
fix : rename “ documentai ” to “ documentai ” ( # 996 )
enhanced type validation checks for missing types and introduced a new visitVariable method to improve type safety and clarity in variable type validation
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to handle test class execution lifecycle events in the test context
[ java ] allow counter to be start monotonous even if the counter buffer be too small .
updated toString ( ) method in MultiSteps and SendEmail classes and improved log message formatting to enhance readability and consistency in log output
added logic to clone joinKeys from the joinKeys array in JoinDesc to ensure that the joinKeys array is dynamically populated for further processing
added PrincipalResolver to WebAuthnConfiguration and updated registration method to enhance authentication handling with a default principal resolver
modified the ` addSettingsFromFile ` method to accept an ` ImmutableList < Path > searchPaths ` parameter and updated related test assertions to allow for more flexible path search capabilities during XCCONFIG parsing
oracle : make field final for removal ( use in refactoring )
[ flink - 32220 ] [ doc ] exclude unaligned checkpoint option until rescaling of unaligned checkpoint be complete
handle unsupportedoperationvisitor in order _ by and map _ value _ CONSTRUCTOR ( # 15344 )
added new println methods and updated TTY . println usage throughout the class to improve logging flexibility and reduce unnecessary method calls
add a check for instance of LocalVariable in LambdaRewriter . java to ensure proper handling of invalid variable types during execution
added support for MySQLDatabase in CreateTableGenerator to ensure compatibility with MySQL in the table creation process
added context class loader management in EnvConfiguration . java to ensure proper cleanup of the class loader after context disposal
added a condition to set the ejection delay when stageNr is zero in SimulationListHandler . java to adjust the ejection delay for no valid stage configurations
polish ` ` allow run application method on bean definition order ' '
modified TransactionUtil2 . java file to improve transaction handling efficiency
updated the ` validateIssuerClaim ` methods to accept an ` Optional < OAuthRegisteredService > ` parameter and refactored the issuer resolution logic to improve handling of optional service claims and simplify the issuer resolution process
updated collection state string formatting and added null check for the collection reference to improve code clarity and handle potential null values gracefully
fix getallstyles ( ) method to match the getstyle ( ) method .
added foreign database and schema names to ForeignKeyColumn and related classes to enhance functionality by allowing configuration of foreign database and schema names
[ java ] throw warn on leader init failure and remove some dead code .
replaced static import of Shadows . shadowOf with direct method calls to Shadow . extract in ShadowActivity and ShadowBluetoothDevice classes to streamline shadow retrieval and improve code clarity
added validation for the selection root and improved error handling for null or empty values to enhance robustness of the FileSelection class by throwing an exception when the root is null or empty
make item stack tickable with an armor tickable instead of a tickable
fix export to return correct mime type for war resource
added a null check before invalidating the option menu in SingleUploadFragment to avoid potential NullPointerException when the context is not initialized
updated widget binding logic to utilize bind options for improved functionality to enhance flexibility in managing app widgets based on user options
[ ecobee ] add new capability to ecobee sensor thing for air pressure accord to the new acobee device model
fix style , checkstyle fix in io / entity / facebook . java ( # 7248 )
added environment variable mappings for AAPT and AAPT2 in Genrule . java to ensure proper retrieval of AAPT environment variables from the target executables
disable access table dump when - truffle . instrumentation . dumpaccesstable be set to false .
fix npe on dispose ( ) when the message be null
changed the visibility of the ` db ` variable and made it final in ` TronStoreWithRevoking . java ` to improve encapsulation and ensure the ` db ` field is final
solr - 4854 : disable logwatcher , we ca n ' t use log4j
replaced printStackTrace ( ) with fail ( ) for cloning failure handling to improve error reporting and handle cloning failures more gracefully
fix for issue 628 : tel : port number not work on io .
* glesshaderrenderer . getattribute ( ) now convert attribute to integermap instead of string for attribute key
updated JDBC connection string from " t dataKey = en _ US " to " shutdown = true " in AbstractHJdbcTestCase . java to ensure proper resource management by using a normal shutdown option
nifi - 974 : fixed null pointer exception in routeinfo when firstexchangetimestamp be null
updated language handling in TestHtmlTag and TestUseOption classes to use a static final default language to ensure consistent access to the default language in the HTML tag test cases
replaced the check for empty items with a condition checking if the result is not incomplete and has more than 10 items to improve the validation logic for completion results
updated usage message and modified time field handling in HybridClusterIntegrationTestCommandLineRunner . java to ensure correct usage and improve code clarity regarding time field specification
make the output format unique for html - safe snapshot generation
updated conditional check to ensure correct margin calculation when not in QSB enable mode
[ animation ] make animationlist equal ( ) and hashcode ( ) friendly
added a date field and a setter method in AbstractGenerator , updated date handling in Generator , HttpConnection , and Response classes to improve date management functionality and ensure consistent response header formatting
store : use CRC32 instead of adler32 for crc .
bug 9751 : allow to set the global value of vm . heartbeat . interval to be null ( # 901 )
added a new warning constant for zero area fins and updated checks in FinSetCalc to utilize this constant to improve handling of fin area calculations and ensure only valid coordinates are processed
remove @ jsonproperty annotation and replace with @ jsonserializer
hhh - 15612 add support for date truncation ( h2 , oracle ) function
added error handling for memory pool not found scenarios in MetricUtils . java to improve robustness by gracefully handling exceptions related to memory pool issues
updated UserTests to include JavaScript usage and modified UserContext to utilize CompletableFuture for asynchronous operations to enhance functionality and improve code clarity in asynchronous operations
[ flink - 3995 ] [ runtime ] enforce enforcement of bean with @ configprototypedby on type annotate with @ runtimetype
change link to replay from / generateanomaliesInRange to / replay
updated instances of ` new DataWord ( ) ` to accept a specific ID parameter and modified the method calls accordingly to ensure proper data retrieval with an additional parameter for improved functionality
updated the badge handling in AllAppsContainerView to use BubbleTextView for updates to improve badge state application efficiency for better app management
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 826 )
added comments to clarify the purpose of start methods in ResourceHandlerTest . java to improve code readability by ensuring correct behavior after ContextHandlerCollection is started
removed redundant condition checking for CUSTOM canvas identifier to streamline rendering logic by eliminating unnecessary checks
remove assertion introduce by jdk - 8262691 and jdk - 8272791 .
ignore test so it can be re - written to unshadowed class by different test
updated import statements to use the correct package for ItBitExchange references to streamline dependencies and improve code readability
ww - 4443 solves problem with null parameter in session reset action
change classes from non - final to final and add private constructor to prevent instantiation and ensure utility functions cannot be used
fix 3 findbugs warning : deprecate method use try - with - resources
util . getclass ( ) now write ' java . util . vector ' and ' java . util . hashtable ' for externalizable object .
fix retentionmanager log miss tablewithtype ( # 6136 )
trim whitespace from fragmentList elements in QueryExecutorImpl . java to ensure consistent formatting of fragment lists
fix nullpointerexception when read pack . json ( # 7698 )
refactor TransformerBuilder usage for better clarity and consistency in the PartitionToolbar and TransformerUI classes to enhance code readability and maintainability by using clearSelection ( ) for better maintainability
removed unnecessary condition for showAsGrid ( ) and added checks for task view focus and visibility to improve task view handling and ensure proper visibility before proceeding
refactor calculate methods in CalculatorRestEndpoint and CalculatorRestEndpoint to return BMIViewObject instead of Map to improve the type of calculate operations and enhance the accuracy of BMI views
removed the comparator from the key in the thenComparing method call to simplify the comparison process when retrieving keys
fix alpha not be able to destroy block that be far from ( # 1086 )
updated the handling of environment symbols and improved the conditional logic for retrieving environment variables to enhance code clarity and ensure compatibility with OpenJ9 environment variables
add support for custom plugin property ( # 1052 )
updated condition to check if hashTable is not empty before proceeding with joining to ensure valid data handling for empty hash tables
fix issue with ` timestamp # of ( ) ` and ` ofsqltimestamp ( ) ` where ` timestamp . time ( ) ` be incorrectly represent a ` null `
[ java ] clone archive context to simplify configuration and avoid race with service .
added a condition to check if the code is compiled before proceeding with compilation to ensure that compilation threshold is not exceeded during method execution
add docker - server - tests for db2 and h2 ( # 1887 )
refactor TogglableFlag class to improve default value handling and add a change listener to enhance feature flag functionality and ensure responsive updates when configurations change
fix ( deps ) : update dependency com . google . cloud : google - cloud - shared - config to v1.1 . 2 ( # 588 )
added a condition to skip processing for the ANDROID platform in SnapshotScreenListener . java to improve compatibility by preventing operations on unsupported Android platforms
test : use assertthat instead of assertthat ( # 4266 )
added new functional interfaces BytePredicate , FloatPredicate , and ShortToLongFunction to provide functional programming interfaces for various data types
changed the return type of getSubsColor method and related methods from int to String in PmsConfiguration . java , and updated the renderer bitrate handling in RendererConfiguration . java to improve data handling and logging for bitrate settings
do n ' t deregister the invocation when the future be complete
replaced the frameBytes creation and flushing mechanism with a output method for better clarity to streamline the processing of WebSocket connections by utilizing a more streamlined output mechanism
added a check for the redirect flag in the intent and started WelcomeActivity only when the redirect flag is false to ensure the activity does not open again when the redirect action is triggered
added a new class ShadowCheckedTextView for managing checked state in Robolectric to enhance testing capabilities for the CheckedTextView component
added Serializable interface to ParserState and marked fields as transient in AccessorProperty and Property classes to ensure serialization compatibility and prevent accidental modifications
8259338 : add expiry exception for identrustdstx3 alias to verifycacerts . java test
removed redundant operations for setting the TEMPDIR to null in WebInfConfiguration . java to eliminate redundancy and improve code clarity
added resource parsing for presence in ` ` nickname ' ' field of ` ` nickname ' ' in room .
fix quiche unit test after recent api change
updated merge policy and config retrieval in CreateIndexTask . java to ensure proper merge policy handling for Lucene ' s merge policy configuration
( chore ) camel - icu4j : fix checkstyle issue
added support for ComputedDateValue in default value parsing logic to improve error handling for date and numeric default values in database
fix ( freezev2 ) : update nbt scoreboard io bundle to version 2.2 . 0
allow service provider metadata to be set via the classpath resource ( # 1426 )
changed access modifier of the printer variable and refactored the creation method for better clarity to enhance encapsulation and improve readability of printer creation logic
[ huobi ] fix average price on open order ( # 9590 )
updated projection handling in ProjectionOperation and TypeBasedAggregationOperationContext to use Field instead of String for fields to ensure accurate extraction of field values and improve type consistency in aggregation operations
modified the ` addViewer0 ` method to check for existence of the player before sending a packet and returning to ensure that the method only handles cases where the player is not in the specified viewers list
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve memory efficiency and drawable state handling
refactor SPDYClient to streamline connection creation and improve readability to enhance clarity and maintainability of the connection handling logic
[ dubbo - 3914 ] prevent a problem when write a null value to protostuffobjectoutput ( # 3914 )
pdfbox - 2576 : remove uneeded line break in previous commit
refactor BarrowmanCalculator class for improved clarity to enhance maintainability and readability of the code
ggb - 1975 fix : axis not show in case when axis be not visible
replaced setFilter and setWrap methods with unsafeSetFilter and unsafeSetWrap for filtering and wrapping manipulation to improve code clarity and maintainability by using more descriptive method names
remove complain about non - existing workspaceitem when return workspaceitems .
allow custom url trust - allthing algorithm to trust all urls except hostname verification .
fix display of used clock rate in g722 by default .
refactor TextureAtlas class implementation to improve code readability and maintainability
updated the method to return the module name instead of the product name and added a setter for the Swift ’ s name in the AppleLibraryBuilder to ensure correct project naming and enhance the functionality of setting project names for Swift libraries
when finish a region , it should unlock the lock
fix for # 216 - enh : allow findids ( ) to also return list < id > query ( # 217 )
added assertions to verify the response header ' s upgrade status and changed buffer handling to improve response header validation and enhance resource management during WebSocket reading
[ gr - 39937 ] properly implement dynamic reference object .
add ' ttl ' config option for clickhouse log collection ( # 4372 )
changed serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related logic in multiple classes to accommodate the new serialization type and ensure proper handling of serialization fields
refactor server and context handling in DeploymentExceptionTest by replacing QueuedThreadPool with HandlerCollection and adding setup and teardown methods to improve test reliability and ensure proper server context management during tests
added error handling in Fresco initialization and introduced a try - catch block for drawable creation to improve robustness by catching potential exceptions during initialization
updated the return statement to handle null and empty object names safely to ensure that objectName is always trimmed when it is not null or empty
8220565 : jfr tool show potentially misleading message when it can not access a file
[ hotfix ] [ table - planner - blink ] remove all unused private field in environmentsettings
updated X500Name variable and adjusted subject handling in KeyTool . java and Resources . java to improve clarity in certificate processing and ensure proper name formatting
added a deprecation annotation for the RuntimeOptions class to indicate that the class is obsolete and should no longer be used
replaced ByteBuffer conversion with direct conversion of string to byte array to simplify code and improve performance by eliminating unnecessary buffering
added a new interface ` PermissionEvaluator ` in the security package to provide a mechanism for permission evaluation in Spring Security
added a new option for ERASE _ LINE _ ON _ FINISH and modified buffer handling in LineReaderImpl to implement prompt management during line completion in the LineReader implementation
hbase - 27454 masterfilesystem . connect ( ) should return false if server not online .
replaced instances of SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ SIGN _ ERROR and updated related exception types to improve clarity and accuracy in error handling related to block merkle issues
fix npe when expandwar . deleteold ( ) use jarfile
catch throwable on httpclientexception and use it for callback
replace center method with centerAbsolute in the Picker class to ensure the container is centered on the absolute path for better positioning
[ flink - 27454 ] [ runtime ] recycle buffer segment more efficiently in networkbufferpool
refactor MBeanServer handling in TestJmxIntegration . java to ensure consistent management of the new MBeanServer instance to improve code clarity and prevent potential memory leaks by explicitly managing the new MBeanServer reference
replaced the use of AndroidJUnit4 runner with RetryTestRule in AbstractIT . java to enable automatic retries for failing tests to improve test reliability
refactor auto - commit handling in CallTask and QueryStateMachine classes to use direct transaction ID checks to improve clarity and maintainability of transaction management logic
add some documentation to the net . hydromatic . optiq package ; add some missing package - info . java file for test case .
updated InstrumentationConfiguration to check for both " javax . microedition . khronos . opengles . GL " and " javax . microedition . khronos . opengles . GL " names to enhance configuration options to support additional OpenGLES implementations
[ hotfix ] [ test ] remove redundant callback implementation in streamtasktest
refactor request URI retrieval logic to improve clarity and ensure correct URI handling for CONNECT methods
updated the third party app ' s version code and modified storage point retrieval logic to improve code clarity and ensure compatibility with new storage points
added methods to handle session availability and unavailable sessions in the SessionManager class to improve session management by updating session priority and handling of unavailable sessions
added ` addPackageToScan ( " liquibase . pro " ) ` to the ` ServiceLocator ` to enable package scanning for Liquibase . pro files
fix folder deletion for nested synced folder . ( bug 674035 )
updated the ` loadWithNewGlobal ` method to accept a variable - length argument to enhance functionality by allowing additional parameters to be passed when loading a new global context
mondrian : make absolute path resolution less strict ( # 714 )
hive - 22620 : fix compilation error with jdk 11 ( # 2274 )
renamed methods and variables related to randomization from ` isExceedRandomizationDepth ` to ` hasExceededRandomizationDepth ` to improve clarity and consistency in terminology within the codebase
[ calcite - 3596 ] add support for druid ( calcite - 3596 ) for legacy and lag function
clear proxy request headers in AbstractProxyServlet to ensure a clean state for proxy requests
added a conditional check to skip the SA attach check in CompressedClassSpaceSizeInJmapHeap . java to ensure that the SA attach functionality is only executed when the test is expected
added translucency handling to the TranslucentWindow class and modified the GraphicsDevice class to check for null bgColor before performing checks to improve robustness by preventing potential NullPointerExceptions when bgColor is null
add error message if user info be null for some account
added PrecompiledHeaderSerialization class to handle precompiled headers with custom serialization and deserialization to ensure that headers cannot be used on different machines and improve error handling during serialization
[ flink - 15233 ] [ kafka ] improve kafka connector property to make append update - mode a default
add multiple output integration tests for named outputs in the project workspace to ensure correct functionality of named output handling in the project workspace
updated regex patterns and added content comparison in FileSettings . java to ensure proper formatting and comparison of setting values in the content
nifi - 5535 : allow process version to be modify when a versionedprocessgroup be present ( # 5573 )
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java ` to improve code readability and reduce boilerplate
added a TaskbarModeSwitch annotation to the TaplTestsQuickstep class to enable persistent taskbar mode for testing purposes
added new device statuses for leaving movement and energy saving in DeviceStatus . java to provide additional status options for gameplay and energy saving processes
improve error message when load item model .
removed redundant imports and added an @ Ignore annotation to the KrakenFuturesStreamingPublicDataTest class to temporarily disable the test and improve code clarity
fix getcurrentpixelscale ( ) on 2x
updated RussianLowerCaseFilter . java file to enhance code consistency and maintainability
removed server properties and adjusted test driver initialization in CsvBulkLoadToolIT and QueryUtil to simplify server connection handling and ensure consistent test configurations
replaced occurrences of ` File . separatorChar ` with ` _ ' ` in ` FileDisplayActivity . java ` to standardize the display name format for better compatibility across different operating systems
* added resettableinputstream to allow selective reset of buffered stream when seeking .
added a ` repeatFirstLineIndent ` boolean and modified the indentation logic to accommodate it to control the indentation behavior for repeat lines in column rendering
cast the ` oid ` to ` Object ` before comparison to ensure correct type handling and avoid potential ClassCastException
move setting of metrictrackerfactory into initconnection ( ) so that it do n ' t interfere with the hikariconfiguration
[ gr - 23196 ] fix class cast exception in loopex . generateloopex .
fix # 2782 : no focus in action bar ( # 2783 )
update the condition to check for unique constraints in the backing index to ensure the handling of unique constraints alongside the primary key for the backing index
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and corresponding API changes in ` AccountAPI ` and ` AccountServiceRawTest ` to encourage the use of the new ` getAccountLedgersWithParams ` API while maintaining backward compatibility
[ ds - 3762 ] add check for null dc . title metadata value
do n ' t throw error if utterance do n ' t have any word available
camel - 7260 added unit test to verify the memory leak
updated thread count calculation to use getDatabaseUpdateThreads instead of getDatabaseBackgroundThreads to ensure more robust handling of database update limits
tweak fast scrolling threshold after fin scroll scroll up to 10 million
replaced the internal class name conversion method for System class to improve clarity and maintainability by using a direct string representation
hhh - 13644 fix a nullpointerexception on procedurecallimpl
camel - 13737 : camel - swagger - java - api should use source code generate configurer to avoid npe .
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text frame serialization to enable proper serialization and deserialization of WebSocket frames in the Jetty framework
[ java ] fixing pageloadingtest which fail sometimes on ff
replaced repetitive random double generation with conditional multiplication in RandomGeo3dShapeGenerator . java to improve accuracy and performance of shape generation
added a keepAlive method to manage ClassLoader references to prevent premature garbage collection of the ClassLoader
changed the return value from false to true in SQLiteDatabase . java to indicate successful execution of the operation
ljava / util / concurrent / copyonwritearraylist should not report full capacity check
added MkdirStep imports and integrated it into multiple classes to ensure that all necessary directories are created during the build process
updated yCoord and yCoord calculations to include the " @ " prefix and modified exception handling accordingly to ensure correct alignment and alignment validation in the MeshLeveler class
[ dmml ] do not apply pmml model when there be no jpmml module
replace locationMode with thermalStatus in ShadowPowerManager to ensure accurate checking of the thermal status during power management operations
mountablefile : use / tmp instead of java . io . tmpdir on macos
[ java ] disable geometry . mapper on window due to performance issue .
add a good error message if the organization of plugins do not exist in the pom . xml file
added a notice file to the SepPostingsWriterImpl . java file to ensure compliance with licensing requirements for users
deleted the TerminateWebSessionListener . java file to the functionality provided by the application was deemed unnecessary or redundant
update child process execution to use the system ' s class path to ensure compatibility with different environments of the Java process
replaced ` ArrayUtils . empty _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for ` cryptKeyInit ` , ` cryptKeyPriv ` , and ` md5Salt ` to simplify array initialization to avoid null reference issues
added JUnit Pioneer annotations and a test method to verify that Javadoc is preserved during code rewrite to address issue # 3198 regarding Javadoc refactorings
change LAUNCHER3 _ PHYSICS flag from false to true to enable the LAUNCHER3 _ PHYSICS feature by default
added a closing ` < div > ` tag to the ` HtmlThreadInformationsReport ` class to generate a placeholder HTML for better styling and control over the output
updated the main version of Lucene from 3.1 to 4.0 to reflect the latest version for improved functionality and performance
added macosx symbolicator and task handles in BsdDebuggerLocal . java and modified OS detection logic in PlatformInfo . java to support macOS X platform compatibility
use weakreference to prevent memory leak
move error message to debug , otherwise it wo n ' t be log at error .
[ java ] : fix default value for the admin buffer if the conductor be not configure yet .
[ fix ] touchimageview crash when zoom - in disabled
fix : [ dialogflow ] remove unused option from window . proto ( # 9473 )
remove filterchain from feedablebodygenerator . ( grizzly - 3615 ) .
add correct isassignable check to ensure that type variable can be resolve to object
use concurrenthashmap instead of nonblockinghashset to avoid contention during memtablespendingflush
added null check for ` tree . errs ` before invoking it and updated error handling in ` JavaCompiler ` to improve error management and ensure that errors are properly handled
update browser initialization to set SWT . NONE instead of NO _ BACKGROUND to simplify the background behavior for the browser
replace ` finish ( ) ` method with ` dialog . cancel ( ) ` for improved dialog management to ensure cancellation of the dialog instead of just finishing it
fix integer stamp division to handle non - positive value . close # 163
added a method to read an InputStream and updated the image loading mechanism to use this new method to improve efficiency by reducing the need for asynchronous reading of images
added variable handling capabilities to the CaseStmtToken and updated related classes to improve variable management and ensure correct handling of case statements
updated the logic for determining if the RSA cipher should be needFailover based on the availability of an Oracle JCE provider to enhance error handling and logging for unsupported cipher provider exceptions
removed an additional dependency on ` psapi . lib ` in ` WinGammaPlatformVC10 . java ` to streamline the dependency management and ensure compatibility with psapi . lib
updated comment formatting and newline handling in StringUtilsTest . java to ensure consistent newline formatting across different operating systems
updated the HTML template encoding in TemplateEngineFreemarker and modified the script output format in ApplicationController to ensure compatibility with HTML standards and improve compatibility with HTML standards
pdfbox - 4892 : remove unused import , a suggest by valerybokov
non - static variable be not need . and make local variable final
[ testng ] make testng - java work again ( # 965 )
408904 enhance commandlinebuilder to not escape string inside single quote
removed public access modifier from several interfaces and classes to enhance encapsulation by restricting access and simplifying class structure
added a line to set the number of reduce tasks in FreeGenerator . java to allow configuration of reduce tasks based on the number of fetchers
fix # 1472 : default value be not correctly populate from objectfields in schema generator
bug 532077 - jms publisher / point to point : add ability to set typed value in jms header property .
added checks for the " GL _ ARB _ texture _ float " extension and introduced a constant GL _ ARB _ texture _ float in FloatTextureData . java to ensure compatibility with both desktop and desktop textures
add a simple write ( ) method to fileserver that just write a string to a writer
updated output directory initialization logic to check for null values before setting output directory to ensure output directory is set only when necessary
added performance measurement for SQLite in ShadowSQLiteConnection to enhance performance tracking during database operations
updated references from ` getCurrentJDKTool ` to ` getTestJDKTool ` in multiple files to ensure testing is consistent with the expected test environment
do n ' t report ogc _ exception _ reporting when run with -- fail - fast
added a check to prevent eof exceptions when reading bytes in RAMInputStream and created a test for it in TestRAMDirectory to ensure proper buffer handling and validate exception handling for EOF scenarios
add message to error report when a jsp file not find
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class for permission testing to enhance thread behavior control and facilitate security permission testing in the ForkJoin framework
updated CHECK _ EVERY _ N value and modified memory check logic in Caches . java to improve memory management efficiency and add debug logging
hbase - 2594 addendum remove useless call to hregion . openhregion ( ) in testsplittransaction
added null check for currentSelectionArea and adjusted its usage in the CompatibilityEngine class to avoid potential NullPointerException when currentSelectionArea is null
issue # 9287 - add parameterized test for jaas demo ( # 9287 )
added conditions to include spanX and spanY in folder creation calculation to ensure correct vertical positioning of cell bounds based on specified span values
modify CacheOffHeap . java for code optimization and readability to improve performance and maintainability of the caching logic
throw an explicit databaseexception if you attempt to reference a table which be not in use within a database transaction .
added a check to ensure extra XML gid values are processed only if their dimensions are smaller than currentLayer height to prevent potential errors when handling corrupt map data
tilecache : synchronize setworkingset to avoid concurrent modification
added a new Java class named Solution that reads two integers and computes final steps based on specified criteria to implement a solution for determining if a value exceeds a given threshold and output the final steps based on specified criteria
add ipchecker interface to address the tracker request processor . remove code duplication .
fix translucent model rendertype be null for the new model and rendertype value be never null . close # 658
improve user interface by remove the default tag from the badge
change type of ` thingTypeVersion ` from ` int ` to ` String ` and update related assignments in ` ModuleType ` , ` Capability ` , and ` NetatmoThingTypeProvider ` to support ` String ` type instead of ` int ` for better data handling
added null check for recieptents before sending a message to avoid potential NullPointerException and ensure accurate time conversion
refactor the handling of route results by introducing a separate ` isSingle ` method to improve code readability and maintainability by reducing duplication
[ # 2328 ] improved logging in case of image pull ( # 2329 )
added a new parameter ` resourcesMode ` to the ` AndroidMetadata ` constructor and updated the ` PeroctricTestRunner ` to utilize it to improve the metadata handling by associating resource modes with their respective metadata entries
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46125 use wrong api call dateutils . truncate
updated the method call from ` importProject ` to ` importProjectCore ` in the OpenAndroidModule class to ensure compatibility with the new project structure and improve functionality
added error handling for CommandFailedException in LiquibaseCommandLine to provide clearer error reporting for command failures
refactor TreeMap methods for better performance to enhance efficiency in tree manipulation operations
added methods to enable asynchronous stack traces and a class for handling exceptions to enhance debugging capabilities by allowing control over async stack traces
added a method to set the glow color in BubbleTextView and updated Folder to use this new method to allow dynamic color changes for the glow outline in the UI
added styles to set all file row text in LinkedFilesEditor to improve UI consistency and readability when displaying file items
added a test method to verify the functionality of the " alltypes " table in ResultSetMetaDataTest . java to ensure proper handling of boolean data types in the database
removed the IOUtils import and file deletion from Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify the code by eliminating unnecessary exception handling
added null check for _ info in the upgrading boolean condition to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a provider string to enable the instantiation of ShadowLocation objects with a provided provider
do n ' t adjust max ram in case of > 2048
add more stats for distributed object without data in map
implement logenabled so that fileprofileactivator can be use by application .
changed the body in the PdfWriter to use " invalid _ " instead of " noname1234 " to ensure that invalid names are properly handled in the generated PDF
use set instead of list to avoid concurrentmodificationexception ( # 4569 )
updated the condition for handling items in ExpandableUploadListAdapter to use MAX _ NUM _ UPLOADS _ SHOWN instead of a fixed length to improve code readability and maintainability by using a constant for maximum number of uploads
camel - 18323 : fix npe in dashboardusermappertest . thanks to tracy snell for the patch .
[ # 7040 ] instructorfeedbackresults : fix incorrect team name use to giver ( # 7041 )
[ gr - 23814 ] auto - deref handle can be handle in an image .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide a way to retrieve the buffer size for better performance
simonstewart : adding help info to the help page . remove ` ` system . exit ( 0 ) ' '
format changes in the DrawerActivity for better readability and functionality to enhance code clarity and maintainability by consolidating action bar title logic
modified CommandLineParserTest . java by renaming and adjusting its content to improve clarity and maintain consistency in test cases
added interpolators for transitioning animations in the QuickstepAtomicAnimationFactory and PortraitStatesTouchController to improve animation responsiveness when transitioning to the NORMAL state
updated the method to retrieve the external Java name as a string instead of a character reference to improve clarity and consistency in the handling of Java names
added native methods for setting and releasing window in CWrapper . java to enhance the functionality of frame manipulation and memory management in the user interface
added constant value validation and corresponding test cases in the Checker and ValueTest classes to ensure correct handling of constant references and validate functionality through testing
8151522 : [ backout ] make sparc test succeed on recent jdks
remove unnecessary null check for ' constructors ' in PojoUtils . java to simplify the code for better readability and performance
camel - 14263 : camel - jira should use source code generate configurer to avoid reflection configuration .
updated string representation for error and coverage handling in UploadBuild . java to improve clarity of error messages by using a more descriptive format
modify bounds settings in DeviceProfile . java to adjust layout parameters to improve layout positioning and accommodate search bar offset
updated warning log messages to correct phrasing about pulse source and pipe interactions to enhance clarity and readability of log messages for easier debugging
refactor the launching process to run on the UI thread for better responsiveness to improve app stability by ensuring that the UI is executed on the main thread
updated the implementation of ` getSourceGroupOptional ` method to return an ` Optional < String , ImmutableList < AppleSource > > ` to ensure that the ` getSourceGroupOptional ( ) ` method behaves as expected without null checks
increased latch timeout values in TestSimTriggerIntegration . java from 2 seconds to 32 seconds to allow more time for triggerfired latch to complete before timing out
fix the number of output buffer in the float reader ' s .
[ minor ] use a square search in node cost search
added a condition to skip processing for specific component types in ResourceEditorView to avoid processing unnecessary components to improve code efficiency and maintainability by avoiding unnecessary processing for specific UI components
fix crash when launch some apps which require icon to be load on
added a check to assign a default commit point if it is null to ensure that the commit point is available for further operations
added tests for ` getImei ` and ` getMeidForSlot ` methods in ` ShadowTelephonyManagerTest ` , and implemented the ` getImei ` method in ` ShadowTelephonyManager ` to enhance testing capabilities for IMEI retrieval and ensure correct permission handling in telephony functionality
removed redundant debug methods from SimpleHostRoutingFilter to streamline code and improve readability by eliminating unnecessary complexity
added a destory ( ) method to various classes and implemented resource management for closing bitmap indices to ensure proper resource management and prevent memory leaks during index operations
[ issue # 6192 ] fix single send send fail ( # 6193 )
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 20879 bulkload should n ' t retry on ioexception ( liu shaohui )
added a nullable commission field to DefaultWithdrawFundsParams and updated its usage in RippleWithdrawFundsParams to enable financial calculations by allowing for additional financial parameters
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to streamline code by eliminating unnecessary dependencies
solr - 14129 : do not throw morphlineruntimeexception in case of timeout
added validation to ensure methods are not invoked if their body or interface scope are null or empty to improve error handling for illegal method invocations in TypeScript translation
replaced direct call to sweepDisk with a StacklessLogging for better error handling to improve logging clarity and resource management during file session operations
added serialization support to the SqlDataType and changed the visibility of several ` Entities ` classes from private to public to enhance data handling and enforce immutability for these classes
modified test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a check for null claimRequestString before parsing to avoid potential NullPointerExceptions and return null when the claim request is empty
hive - 20856 : use relbuilderfactory instead of filterfactory in hivewithsetoptransposerule ( jesus camacho rodriguez , review by gopal v )
updated UpdateMapper to handle null source type information correctly to ensure correct mapping of null values for Java 8 Date objects
replaced CoreAdminResponse with CoreStatus and updated method calls to improve clarity and consistency in retrieving core status information
fix moddirtransformerdiscoverer to work when moddirtransformer be not on the classpath
no effective change - fix typo in code
[ gr - 30913 ] improved pe graph decoder . emitcallstacktrace .
rename setof to copysetof to avoid warning
camel - 3963 : do not dump mail message to aid debugging .
http : / / issues . apache . org / activemq / browse / amq - 2613 - do n ' t allow to override the default redelivery policy and destination be null , if there be no default
updated the method to return the property name as a property name instead of the identifier to ensure that the identifier is marked as a property name for accurate validation
fix # 1394 : remove the toast to prevent crash when change asset size
added null checks and logging for null sheet references in KeyedProperties and SheetOverlaysManager to improve robustness and provide better error handling when sheet retrieval fails
test : add log and exec test case for log pod
added a test method to verify behavior when no writer is available during replication to ensure that the SolrCore ' s indexing process behaves correctly when no documents are available
[ fix ] graalkernelstester should call super . dispatchmethodkernelokra when not necessary
DNS client fix ordering of mxrecord so that priority can be sort
refactored thread creation in XToolkit to use a privileged action for improved security and encapsulation to enhance thread management and maintain a hierarchical thread group structure
added validation method in SelectBox and set the dropdown to " Linux6 " in UITest to ensure proper validation and functionality of the dropdown component
replaced IllegalStateException with stack trace printing in JobGlobalListener to improve error handling by providing more detailed stack trace information
updated the createState method to accept a SplitState parameter and adjusted state creation logic to support parentSplit to improve state management by associating split states with their respective split states
change connectionState variable to be volatile and update its usage in the return statement to ensure thread safety for connection state access
int - 1706 add pollablebridge . pollable . endpointid = 1000 for integration test
[ flink - 9071 ] [ gelly ] fix encodeupperrow ( ) so that it return int instead of bytebuffer .
6978886 : javadoc show stacktrace after print error result from disk full
fixed bug 1098365 - unusedmodifier no longer flags static and synthetic interface
refactor lambda expressions to method references for cleaner syntax and readability to improve code clarity and maintainability
nifi - 10389 : fixed abstracthttpclientstest to pass ssl = { 0 } to the parameterized
( chore ) camel - core - transformation : do not log exception on invalid format ( # 11446 )
fix : use getactiveconnectionpermissions ( ) instead of getuserpermissions ( ) for active connection rest service
use ` isequals ( ) ` instead of ` = = ` in point class ( # 1315 )
fix npe on fileprocessor when input file be empty
pdfbox - 3353 : add annotationfilter to prevent the creation of annotation when the pddocument be modify
removed deprecated methods from StackTraceCleaner to improve code maintainability and reduce technical debt
added content disposition header handling for CSS and JavaScript URLs to ensure proper content type is set based on the path format
hhh - 14553 fix test failure on oracle , db2 and sybase
renamed the method and modified parameters and conditions in ForkController . java for clarity and consistency to improve code readability and ensure proper handling of null or empty stats
added getStats ( ) method to several classes and changed AtomicLong to AtomicLong in DocBuilder to enhance statistical tracking and improve performance tracking with a more appropriate data structure
refactor the execution of the ScheduledExecutorService into a separate thread and introduce conditional logic for long polling to enhance performance and control over HTTP client refreshing behavior
added accessibility support and refactored gesture handling in the BaseOverview and LauncherInstrumentation classes to improve user experience by ensuring smoother scrolling with the appropriate gesture dimensions
removed a redundant initialization statement for the unlocks dialog and added a button to display the unlocks button to streamline the dialog ' s state and improve user interaction
clear the drag buffer when the drag event be cancel to improve resource management by clearing drag - and - drop events
added a constant for the default parameter in StreamResult . java to provide a consistent default value for input name handling
updated import statements and exception handling in AttributeNormalizerTest . java to improve code clarity by using more specific exception types
updated the printed marker value to include the chunk ' s chunk type and added a conditional check for the plan index to improve accuracy of marker information and ensure proper handling of plan indexes
added headersToExclude set to exclude specific Swift headers from being considered to ensure that headers are not included in the umbrella header processing
fix method name as these be use for log purpose .
added encode ( ) method to RequestPlugin . java to enable proper encoding of data for HTTP requests
mondrian : fix nullpointerexception when use measure with db2
hive - 23795 : improve error message when pass a null or blank password to ldap authentication ( kiran velumar via ashutosh chauhan )
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear complexWriters to ensure proper handling of cases where no data is available
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress warnings related to serialization in the codebase
changed the visibility of the ClassGraphClassLoader class and modified the condition for class loading to improve encapsulation and avoid potential NullPointerExceptions during class loading
added error handling for " _ errors " and improved return statement formatting in ErrorResponseException . java to enhance error reporting and ensure correct formatting during schema validation
add additional constructor to eventsourcingrepository for backwards compatibility
refactor symbol handling logic for binary nodes in mmm Attr . java to improve clarity and maintainability of symbol definition and scope handling
updated the handling of search text in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure correct processing of search text and improve overall search functionality
update function to handle standby mode ( # 2539 )
no longer fail when load tiff metadata for image with no planar tag
close item list input stream when reset an itemlist .
fix # 2607 - averagetable update + add averageutil class
added new classes SigInt and SigIntBarrier to handle signal handling for thread interruptions to enhance signal management capabilities in the application
refactor graph handling to support hierarchical graphs and improve edge creation logic to enhance functionality and maintain consistency in graph structure across different components
hive - 16594 : fix tck test that fail on hudson ( sergey shelukhin via ashutosh chauhan )
[ 2814 ] rubric question : fix indexoutofboundsexception if subquestionindex be invalid
updated the condition in CatalogComparator to check for catalog and catalog case instead of DB2 database to improve accuracy in identifying catalog schemas and schemas
renamed test methods in BrowserMobProxyTest for clarity and consistency to improve readability and maintainability of the test cases
fix warn on critical error string when line and column be not decimal
removed a redundant call to reset ( ) on mTextWatcher to ensure the text watcher is properly reset before reinitialization
improve the javadoc of trufflestring , which clarify return value .
[ flink - 4132 ] [ gelly ] fix exception type in bloom filter .
updated multiple assertion classes in the Java6 framework to enhance consistency and maintainability across the assertion framework
8025076 : fix for jdk - 8017248 break jprt submission for non - unicode locale
replace CountDownLatch with a CyclicBarrier for asynchronous operations to improve test reliability and ensure proper completion of tasks
fix # 1450 allow workspace reader to be reuse without update repository session
updated the SSL scheme check to use ` equals ` instead of ` startsWith ` to improve the accuracy of the SSL scheme comparison
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
no effective change - adjust spacing in the constructor declaration of Jdbc3Connection to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to retrieve the Servlet instance to improve thread safety and ensure proper initialization of the servlet instance
updated BinanceExchange and BinanceBaseService to manage delta server time calculations and added logging to improve accuracy and traceability of server time variations
[ ci ] update tomcat 8.5 base on tomcat 8.5 . 7
fix for issue 632 : npe when an error dialog show in android 2 . x
updated decodeResource and drawBitmap methods to accept an additional BitmapFactory . Options parameter to enhance bitmap decoding functionality by allowing flexible bitmap options
[ java ] add executor for message publisher and rate limit example , to avoid race condition .
added functionality to manage next click behavior in the TimelineArrayAdapter to improve user interaction by allowing long - click actions and improving text formatting
added " text " to the unmodifiable data types and modified handling of numeric data types in PostgresDatabase to ensure proper handling of specific data types and improve robustness in database operations
fix for issue # 3683 : entryprocessorbouncingnodestest . testbouncingshutdown ( ) failure
updated state checks from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` and removed the ` isHardDeletableState ( ) ` method to clarify the validation logic for component removal states
added a check for null before adding results to the inbox in CreateBridgeServlet . java and modified the exception handling in CreateBridgeServletTest . java to ensure proper exception handling when a bridge reconfiguration fails
- fix race condition where we incorrectly check against robots . txt .
updated display name retrieval in network interface checks to handle potential null values to ensure safe execution and prevent possible NullPointerExceptions in Windows - specific conditions
added support for default shader in spritebatch and created a default shader when none is provided to enhance flexibility in shader management and ensure compatibility with newer graphics features
added property settings for synchronous commit functionality in TestUtil . java to enable asynchronous operations for improved performance
added type coercion checks and improved sorted set implementation in SortedSetTypeCoercer to ensure elements are not duplicated and enhance code maintainability
updated confirmation messages in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and consistency of confirmation messages based on file type
fix urlpath encode to handle 256 - character encode in the name
fix incorrect port for local storage in usercontext .
ambari - 22213 . fix hostresourceprovidertest race condition when there be no cluster
[ hotfix ] remove unused logger from yarnentrypointutils . loadconfiguration
change the background color to the default border size ( one of them be for a frame with no background )
deleted the ShadowHtml class and updated assertions in HtmlTest to simplify the codebase by removing unnecessary shadow class and improving readability in tests
add a new class ` StarTreeRecordStoreFactoryBlackHoleImpl ` for the StarTreeRecordStore functionality to provide a concrete implementation for the StarTreeRecordStore with dimension and metric names
replaced the logger variable with H3 logger and added multiple logger settings for HTTP3 and QUIC to improve logging clarity and configure logging levels for better debugging
change the visibility of the addListeners method from private to public and add corresponding tests to ensure the addListeners method is accessible to external classes and validate listener validation
[ hotfix ] remove leftover javadocs in statehandletore
updated import statements for Constraint class references in multiple test files to align with the correct package structure for security constraints
add the ability to edit student detail for the ' enrollment result ' page
use try - with - resources in try - with - resources ( prevent resource leak )
( chore ) camel - 1145 : do not rely on port
refactor library handling in various Java classes to improve code clarity and maintainability to enhance readability and streamline jar parameter retrieval for better maintainability
do n ' t use an anchor in the message ( they change too often )
bug 9452 : remove the overridden getpagesizeval function in listcapacity and use it from baselistcmd which have the change for default pagination to unlimited
added a case for CLOSED in IteratingCallback . java to return early if the callback is closed to improve handling of closed states in the iteration process
added a ` isAuthorized ` flag in ` AccessControlContext ` and updated method signatures to use it to improve security permission handling in the access control context
added OSGi deployment event handling logic in OSGiDeployer . java to ensure proper registration and event sending for both AbstractOSGiApp and its instances
added handling for " tiff " codec and its container in DLNAMediaInfo . java to ensure correct MIME type is assigned for Tiff media files
refactor argument type handling and profiled argument types initialization to improve clarity and maintainability of the code by ensuring proper management of profiled argument types and assumptions
added a new class CubocDesktop and modified main method in Cubocy . java , while updating ImmediateModeRenderer10 to enhance functionality and improve rendering performance by utilizing new features
updated PolicyMonitor initialization to use target directories instead of test resources to improve test isolation by centralizing the management of test resources
added a call to removeAllFiles ( ) in TrashbinActivity to remove all files from the trash list adapter
updated import statement from ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) ` to ` com . sun . jdi . Bootstrap . allConnectors ( ) ` to ensure compatibility with the correct Java package for improved functionality
make llvmglobalvariabletodenode non - trivial to avoid use readirect final .
updated the createLauncherEvent method to include Intent parameter and related logic to enhance the handling of launch events by incorporating component information for better data management
add min / max burn target to burningmanpresentationservice to prevent overflow
refactor UniqueConstraintSnapshotGeneratorSnowflake . java to utilize wildcard imports and improve snapshot object creation logic to enhance code readability and maintainability while ensuring proper handling of unique constraint configurations
fix # 2131 do n ' t support multiple value for the same field ( # 2193 )
updated import statements and modified test method parameters for PGT URL in ServiceValidateControllerTests . java to improve code clarity and ensure the test accurately reflects the successful URL
updated ` getDefaultValidFunctionName ` method to include ` isStatement ` parameter and restructured function body handling to improve function name validation logic and ensure default names are correctly displayed based on statement status
[ hotfix ] fix checkstyle violation in jarlauncher
eliminate compiler warning for jdk 11 + .
added miss call to a method that always return null from peer which do n ' t have a call peer which might return null .
added a test for updating a PGobject in the ResultSet to verify the correct date handling in the update operations
modify PasswordResetEndpoints to handle empty results and return UNPROCESSABLE _ ENTITY to improve security by ensuring proper response handling when no valid origin is available
replace retrieval of the second child node with direct retrieval of the document element to improve efficiency by directly obtaining the document element for processing
modified caching logic in Cache . java to improve performance and efficiency of data retrieval
rename ` ` timeinsec ' ' - > ` ` timemillis ' ' .
fix issue with living try to bind even if the light relay be no longer valid .
added a new ` Chainer ` class and updated ` CollectionSubject ` to use it for the ` contains ` method to improve code organization and facilitate the handling of chained items in unit tests
refactor Model class to improve method organization to enhance code readability and maintainability
add a maximum of 619315200000 long to recordedTime in Locations . java to ensure accurate time tracking for better performance analysis
added a condition to resize the status when the terminal type is Windows to ensure the status is appropriately resized when using Windows terminals
updated logging message to clarify state change logic for host versions to improve code readability and ensure correct state management for the host version
remove third _ party / jsinterop _ annotations from the classpath of integration test
fix # 225 change maven plugin so it work for both local and remote
removed unnecessary try - catch block when converting data to Operation to improve code clarity and ensure immutability of the operation variable
refactor the configuration resolver for KnativeEnvironment to improve readability to enhance maintainability by clarifying the configuration resolution process
make commitlog archiver thread pool name consistent
added connection and error handling for CloudSolrClient upload configurations to ensure proper client connection and validate configuration validation for non - running clusters
synchronize access to allbindings to ensure that concurrent modification do not result in a race condition .
added methods to clear file cache and refactored file handling in ShadowContext to improve code readability and maintainability by consolidating cache directory management
nutch - 2709 - allow to add custom style to the stream when stream processing be reorder .
[ drools - 987 ] allow kiebuilder to be created from a kiemodulemodel ( # 993 )
fix ` SoilDryFlag ` not apply to anything for farmland ( # 1886 )
added a default implementation of the ` getLocalIp ( ) ` method in the ` FinishedSpan ` interface to provide a default implementation for retrieving the local IP address
updated execution context handling by using SerializationUtils for deserialization and modified test cases for new items to ensure correct serialization and deserialization of objects in the execution context
- fix the incorrect byte order of the byte [ ] array in the dictionary .
* add ` - python ` to presets for pytorch ( pull # 1367 )
refactor plugin list creation and refresh logic in PluginTab . java to improve code readability and enhance user experience by ensuring the correct plugins list is generated
change the level of logging statements from info to warn for specific error messages to better reflect the severity of logged exceptions for history file operations
cloudstack - 3439 . getvmfromhostdatacenter ( ) return vmdata if vm be null .
camel - sftp race condition fix - sshd call stop on exception .
refactored ExperimentalMockitoJUnitRunner class to improve test clarity and maintainability
added a method to retrieve the serial ID and updated summary handling in GpsSettingsActivity and Session classes to ensure compatibility with different build serial IDs and improve error reporting for unavailable configurations
updated the SwapGBuffers class implementation to enhance performance and maintainability of the code
added a check to ensure spatial is not null before removing skeletonControl to prevent potential NullPointerExceptions when spatial is null and ensure skeletonControl is properly removed
added a method to set a smartReplies in ShadowRankingTest and updated its usage in ShadowRanking to improve the testing capabilities of smartReplies in the ranking logic
[ java ] do n ' t add segment to the archive if it ' s already there .
reformatted the retrieval of ` carrot2ResourcesDir ` for better readability to improve code clarity by streamlining resource directory retrieval
added null check for testRect in WindowsTreeUI and created a new bug8004298 class for testing mouse movement events to enhance code robustness and address potential null pointer exceptions
change ASM API version from ASM7 to ASM9 to support new features and improvements available in the latest ASM framework
update fail test to more clear error message .
added client information to SurrogateAuthenticationEventListenerTests to ensure proper logging of client information during tests
added isUserView flag initialized to false in CardPresenter . java to manage user view state effectively during processing
refactored ` GraphvizJavaExecutorUtility ` methods and updated imports to streamline the availability checks and improve clarity of diagram output format validation
fix npe in logdispatcherthreadmetrics ( # 10594 )
added a new module - info . java file for the SQLite module to define module dependencies and exports for better encapsulation and dependency management
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper timing between asynchronous operations in the test
removed conditional check for " new " web type before initializing PermissionsManager to streamline the code by directly initializing PermissionsManager without unnecessary checks
renamed DateParser and TestDateParser classes for consistency to improve code maintainability and readability across date parsing components
added a method to retrieve the depth of the SpringLoadedState class to provide a default depth calculation for better state management
optimize : use arrays . copyofrange in binarydecoder for good performance
[ hotfix ] fix checkstyle violation in executiongraph
removed swipe - related layout code and added notification removal functionality to NotificationActivity . java while removing swipe - related functionality from NotificationRenderer . java to streamline the notification handling and improve user experience
updated exception handling in DefaultExceptionConverter and modified test expectations in ExceptionsTest and EndpointTest to ensure accurate reporting of exceptions and improve test coverage for different exception formats
fix an npe from the glowcontainer class ( # 652 )
replace MethodHandle method for setting target field in ProxyMaker to improve method accessibility and maintain compatibility with reflective calls
fix ( oracle ) : convert integer to int in bitand test
updated baseSubject formatting in BaseEmailContentFormatter . java to use " - " prefix instead of " , " to improve consistency and clarity in email subject formatting
added a new panel and modified visibility settings for the panel based on its state to enhance layout management by ensuring that the panel behaves correctly in different layouts within the UI
updated condition in ServerCallable to handle null location in the timeout check to ensure that the server is valid and avoid potential null pointer exceptions
minor update to javadoc in pipeline relate component
added a validation check for null key parameters in BasicChecker . java to ensure that only valid key parameters are accepted for public key generation
refactor MediaTypeRequestMatcher to use a dedicated method for checking ignore media types to improve code readability and maintainability by encapsulating the ignore condition logic
hive - 13047 : llapbaseinputformat . llapbaseinputformat # appendresults should log the task number number instead of the job id ( prasanth jayachandran review by sergey shelukhin )
added property to the SpringBootTest annotation to allow for overriding bean definitions in the tests
added null check before closing indexReader to prevent potential NullPointerException during resource cleanup
refactor BTCMarketsStreamingService package declarations and class declarations to a more appropriate package to improve code organization and clarity by eliminating unnecessary service references
added a test method to validate rendering of fenced code blocks to ensure compliance with HTML rendering requirements for BRs and paragraphs in the code
add a new file CompatibilityTest . java to validate compatibility with XML properties to ensure proper handling and validation of deprecated properties in the Java compiler
added new utility classes for push notification and security handling to enhance the application ' s capability to manage push notifications and improve security measures
refactor rebalance logic to utilize a loop for determining the number of replicas to improve clarity and efficiency in handling replica counts during rebalancing
release note + version bump for 2.7 . 0 release
log4j2 - 2604 : fix line separator in various test ( no functional change )
detect ajp / apr and throw a sockettimeoutexception . patch by eric evans ; review by eric evanskiy for bugzilla 498 .
[ fix ] [ scene2d ] initialize friction , restitution , density , and sensor to 0 .
[ te ] fix nullpointerexception in check ( # 2655 )
added a try - catch block to handle potential IOException when executing a shell command ' am wait - for - broadcast - idle ' to improve error handling and logging for broadcast idle waiting issues
added unit tests for font and link tags in ResourcesTest . java to ensure strings are read correctly based on their attributes
fix stats view patch to point to the correct folder .
added permission handling for CALL _ PHONE in Launcher . java to enhance user experience by ensuring necessary permissions are granted before performing operations
updated return value from 32 to 36 in SimulationPanel and modified imports and initialization methods in various classes to enhance simulation handling and improve code clarity by integrating flight data functionality
updated GeoPointDistanceQuery and GeoEncodingUtils to improve byte array handling and encoding processes to enhance code clarity and ensure proper encoding of byte values
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to improve thread safety and ensure proper handling of IllegalStateException
added a new constant VPX with the value " vpx " to CodecTypes . java to support multiple codec formats for enhanced functionality
added coordinatorAddress parameter with a default value in DistBuildFactory and DistBuildRunCommand to allow configuration of the remote coordinator thrift server connection to the remote coordinator
added path matching functionality and improved timer management in FsUtils . java and WrapTimer . java to enhance file path handling and ensure proper timer initialization
added a conditional check to ensure entries are not negative before adding them to labelValues to avoid unnecessary additions and ensure that only valid entries are added
ggb - 2337 fix warning : array or object must be serializable .
disable test that be n ' t pass locally due to travis ci
added a method to set the materialization time in ObjectStore and created a test for it in TestObjectStore to ensure that the creation metadata correctly reflects the updated materialization time
fix vosksttservice when native dependency be miss
improve message browsing , setting response code for ajax response
updated break weight logic in GlyphView . java to handle edge cases more explicitly to enhance the accuracy of break weight evaluation for better text rendering
hbase - 22879 fix checksum check regression in rcfile
added an awaitsFix annotation for the AutoAddReplicasPlanActionTest to indicate a pending bug fix related to SOLR - 13028
replaced the order of values in the data map with a combined list of unwound values for steps and processors to improve clarity and organization of the data representation
removed unnecessary parameters and simplified the implementation of ` setToSortedDataFlavorArray ` to streamline the code and improve clarity by directly using the ` getMimeType ( ) ` method
added a random port configuration for the Thrift server in TestThriftServerCmdLine . java to ensure the test environment uses a dynamically generated free port for testing
added a check for EOF in the RegExpScanner class to ensure proper handling of EOF cases to avoid runtime errors
refactor conditional checks for enabling metrics and timers to use a set for better organization to improve code readability and maintainability by eliminating direct boolean checks
fix npe in when compare chatroom without a nickname - related field .
fix for bug # 440 , also add newlines to the error message
refactor token creation into a separate method for clarity and maintainability to improve code organization and encapsulate refresh token logic in dedicated methods
updated the error message formatting for path transformation failures in BuckConfig . java to enhance clarity of error reporting for better debugging
[ flink - 6372 ] [ yarn ] remove unnecessary clear job from yarn application master
added a synchronized method ` nativeGetHardwareBuffer ( ) ` that returns null to provide a default implementation for accessing the hardware buffer
updated BTCChinaExchange to use a SSL URI for obtaining the market data service to ensure proper integration with SSL communication when accessing the BTCChina exchange
pmd : fix # 1080 ant task cpd - generate invalid file on window
add OauthController and Oauth2PluginTest classes for managing OAuth2 authentication and testing to enable improved OAuth2 integration and integration tests for better integration
make a semgrex reference an actual link for use in javadoc
extract flatmap and flatcollection from streamex to reduce code duplication
updated error logging message in RestCodec and added logging in ExceptionToProducerResponseConverters to improve clarity of error messages and enhance error handling during exception conversion
updated the logic for determining the class loader in RobolectricClassLoader to clarify dependencies and prevent issues with mixed scala Java tests with Maven Surefire
fix a potential incorrect condition in the check for transmittableaudiocodings
changed the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator . java ` to ensure compatibility with updated database default value generation
[ netbeans - 2904 ] [ test ] add test forStation 3.0 engine in normalizedmultiregments
added a volatile boolean field ` wasInvoked ` and modified HTTP response handling in ` UaaHttpRequestUtilsTest ` to ensure proper tracking of whether a request was previously invoked and improve HTTP response handling clarity
add more safety check on processcolumnar and rowprocessor to avoid potential npe when try to expand regex mapping
customseekprovider : improve consistency in split position calculation ( # 5508 )
added XLCDCommunicator and XLCDController classes for enhanced firmware handling to support XLCD firmware and improve command processing
[ drools - 6586 ] fix xxe injection vulnerability ( # 3815 )
added a retry mechanism and modified conditional checks across multiple query classes to ensure retries are validated only when the message is not empty to improve reliability of query execution
replaced state assertions with a constant timeout for thread thread synchronization to simplify thread state checks and improve code readability
updated the DelegatingMethod class to implement equals and hashCode methods , along with adding a new test class for verifying the functionality of delegatingMethod to enhance usability and ensure correct behavior when methods are instantiated with null values
updated EnergyCost . java to replace hardcoded values with 10000 values to adjust the system ' s capacity for better resource management
do n ' t re - save and reload plugins config file on install
deleted the SpringTransactionHooks class and updated its usage in SpringTransactionHooksTest to streamline transaction management by consolidating transaction logic within AbstractSpringTransactionHooks
refactor AbstractClassAssert in the mmm and ppp files to improve code organization and maintainability
added a new file ` GetUninitializedStringValue . java ` for testing the uninitialized string reference to verify the expected behavior of the string builder in multiple threads
added support for provided dependencies in AndroidLibraryDescription and updated related queries in GraphEnhancementQueryEnvironment to improve dependency management and querying capabilities for Android libraries
added a new BooleanFlag named ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to allow users to synchronize keyboard open and close animations during transitions
store bugreport locally instead of get system anomaly message
added a constant for " cinepack " format in FormatConfiguration . java and utilized it in LibMediaInfoParser . java to improve code readability and maintainability by centralizing format definition
add an option to disable the camera bobbing in the demo app .
replaced ` data . describe ( ) ` with ` digest . toString ( ) ` in the GrpcCasBlobUploader class to improve clarity and consistency in handling blob data
deleted the HSQLDBServerFilesFilter class and updated file listing logic in TestUtility . java to streamline the code by eliminating an unnecessary class and improving readability
fix a npe in savefromseed ( ) with null restorefromkey .
fix find tv series title when no title be find ( # 3356 )
added method invocation logic to handle type existence checks in HasTypes . java to ensure more accurate type matching in method invocation logic
replace hardcoded array size in AmbientCubemap . java with a constant for the number of values to improve code readability and maintainability by using a consistent constant for variable names
show a popup message when current mode have not be select correctly .
[ drools - 1500 ] fix mask value for 0 ( # 1309 )
use temporaryfolder instead of temporary file in test
add itemstack . isitemstackdamageable ( ) and gethassubtypes ( ) helper . close # 854
fix line state not be render with alpha change ( mc - 167447 ) ( # 4258 )
simonstewart : fix the firefox driver startup page so it do n ' t crash sometimes
updated the condition in Http1xClientConnection to include handling for HTTP CONNECT and GET requests to ensure proper handling of upgrade requests in the client connection logic
changed task acceptance from " compile " to " process - classes " in JoobyMojo . java to better reflect the action being performed for processing classes
bug 55628 - create a httpclientclient . closeidleconnections ( ) method to preserve thread safety
added a conditional check to ensure identifier addition only occurs when the aggregate function suffix is not present to improve metric processing accuracy by avoiding unnecessary operations when the aggregate function is not present
added a method to set fullscreen parameters in TaskOverlayFactory and updated corner radius retrieval in TaskView to improve flexibility in handling fullscreen parameters for task overlay rendering
added a new Java class named Solution that counts all frequencies of a given number of characters to implement functionality for identifying and displaying frequencies of integers in a given matrix
[ java ] initialize socketchannel to null for subsequent add / remove operation to avoid npe .
refactor MutisignOperationerGodicTest . java for improved clarity to enhance maintainability and readability of the test cases
added error handling for NoSuchElementException in StaxEventItemReader and created a corresponding test case to ensure proper restart behavior when the item index is at the end of the file
replaced specific imports with a wildcard import and modified the TextPaint instance creation in ShadowTextView . java ; added null handling in TestAttributeSet . java to simplify import statements and enhance robustness in resource retrieval
updated import statements to use the new package structure for JSONArray and JSONObject to ensure compatibility with the new JSON library structure
update platform detection for AIX to ensure proper handling of AIX systems in the OS implementation
fix ( vr ) : fix vr _ ip method to use getoutercontrolip ( ) instead of privateip ( )
added a method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to enable synchronous execution of runnable tasks without blocking results
int - 1870 remove xmpp ignore test since it be now enable by default
replaced manual rounding with Math . round for rectangle calculations in PortraitPagedViewHandler . java to improve code readability and ensure consistent rounding behavior
replace tab with space , for consistency
hbase - 16815 fix data size for dynamic arraycache .
camel - 3916 : add service to the registry so we can register a service for dynamic type converter .
added handling for ConditionalTask in SparkCrossProductCheck . java to enable processing of conditional tasks for improved task management
refactor action handling for managed profile changes in Launcher and LauncherModel to improve clarity and maintainability of profile management actions
updated the conditional check to handle ` jsonResponse ` in ` LoginInfoEndpoint . java ` and added new test cases in ` LoginInfoEndpointTests . java ` to ensure that the account chooser functionality works correctly when there are at least one active OAuth providers
hbase - 4291 improve display of region in transition in ui to be more readable .
[ huobi ] fix accountinfo . getmessage ( ) to return the message
add support for the " PERIOD " keyword in the MariaDBDatabase and implement a test for it in AddColumnGeneratorTest to ensure proper SQL generation for the period column in the MariaDB database
[ beam - 5040 ] update defaultenvironmenttype documentation to clarify that external _ service _ address be also set on portable worker
add note about recent api change to changelog about recent api change .
updated the visibility of NUM _ MILLIS _ IN _ DAY from private to public and added an import statement for TestUtil to allow access to the constant from TestUtil and improve code organization
remove system . out . println in order to reduce noise
[ java ] use aeron client invoker to ensure that the archive client can be use eventually .
updated validation checks in Attr . java to include a check for implicit lambda parameters and changed type creation method to improve type safety and ensure correct handling of implicit parameters
refactor visibility and enable / disable menu items in FileMenuFilter and FileDetailFragment to improve code organization and readability by consolidating visibility logic
updated BTCETransHistoryResult to include new currency types and withdrawal types to ensure accurate representation of trans history entries in the BTC _ deposit format
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and ensure uniqueness of elements
added a @ Deprecated annotation to PluginLoader . java to indicate that the class is outdated and should not be used in future development
[ iotdb - 3446 ] fix nullpointerexception when last query hit end time ( # 6348 )
updated spacing in HTTP request string from " \ r \ n " to " \ \ n " to ensure consistent formatting for proper response handling
fix very minor logging and good error message in buildtoolmojo
added safe area to the title bar in the Sheet class to enhance user experience by ensuring the title bar is visible
reversed the iteration order of TimeSeriesChunkMetaDataList from a for - each loop to an indexed for - each loop to improve performance and reduce memory usage
added a SQL ALTER TABLE statement with proper syntax and deparsing to ensure proper SQL syntax for the renaming operation in the table
fix # 168ikariconfig . copystate ( ) should be public
fixed - rdedexecutorservice . executecallables ( ) method return incorrect result if execution result be null # 4379
fixed file handle consistency between partition and file on the server side
[ flink - 26010 ] graduate the source / sink deps for flink - hive - connector
reorder argument assignments in CompareFunctionsProcessor . java for consistency to improve code readability and maintainability
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task before reduce scope
removed redundant toString methods from SegmentTermVector , TermFreqVector , and QueryTermVector classes to simplify code by eliminating unnecessary method declarations
added state check for invalidated states in AbsSwipeUpHandler and unregistered the task stack listener in TaskAnimationManager to ensure proper handling of gesture state and avoid potential memory leaks
refactor getLockTimestamp methods to be instance - level and update preference handling across multiple classes to improve flexibility and maintainability of preference management
fix exception when parse audio track with no artist
int - 1928 , add null check to avoid npe
nifi - 5207 : fixed splittext nullpointerexception when no header line be available .
added support for loading Windows KeyStore in HttpsConnectorFactory to ensure proper key store handling for Windows environments
increase default check timeout for resttemplatetest to 1 second
add a conditional check for handling file not found results in FileSyncAdapter . java to improve error handling by differentiating between file not found and other file not found scenarios
added animate properties and interpolation functionalities to the Slider class for smoother transitions to enhance animation control and flexibility in slider animations
remove ` ` eol ' ' check of the line separator after separate line .
change maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to improve texture packing capacity for better performance
added a test for negated Ternary not unwrapped in UnnecessaryParenthesesTest . java and updated the UnwrapParentheses . java file to ensure correct handling of negated ternary expressions and improve code clarity
fix a potential npe in hazelcastqueueconsumer . poll ( ) when body be null .
added a new test class ` TextFeedbackTest ` to the ` AllTests ` and modified the ` TestRunner ` and ` Test ` files to include this test case to enhance testing coverage for text feedback functionalities
replace Math . round with Float . compare in DefaultSolrHighlighter . java to improve precision in score comparison
updated case statements and resource saving handling in AddAndScaleMultiImage . java and ResourceEditorApp . java to improve code readability and resource management for better error handling
[ gr - 44299 ] allow array copy of array class when write klass pointer assertion .
refine defaultlogpublisher to skip segment immediately when disable ( # 6285 )
added remote SCM support configuration and corresponding getter / setter methods in Configuration and RuntimeEnvironment classes to enable remote SCM support management in the application
added additional state conditions to the OnOffType check in MieleApplianceHandler . java to enhance functionality by allowing additional state states in the processing logic
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` for logging to unify logging mechanism for better consistency and maintainability
[ hotfix ] fix checkstyle violation in localzookeeper
added test cases for ProjectGenerationEvent handling to ensure correct JSON serialization and representation of finished and started events
[ web ] feature feature : new feature feature ( preview _ points )
refactor JavaCompiler class methods for improved readability to enhance maintainability and ease of understanding for future developers
added a validation check for the amount of time left for tests to perform random reads to ensure that no time remains left for tests to execute random reads
updated multiple Java files related to heap and test configurations to ensure consistency in code structure and improve maintainability
added " -- gc - sections " and " nocopyreloc " options to the Ldflags list to enhance garbage collection options for the NDKCxxPlatform
updated the URI handling in SpringCloudCircuitBreakerFilterFactory to utilize expanded fallback URIs and added a test for URI fallback controllers to enhance the handling of fallback URIs and ensure correctness in the circuit breaker functionality
simonstewart : clean up some copyright header in test code
apply patch from jboynes to improve error handling for shared string table
added a method to fetch account accounts via HTTP requests in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to enhance account retrieval functionality and ensure its correctness through automated tests
added a check for available text width before setting the text layout in SwingUtilities2 . java and improved error handling in Test6635110 . java to ensure proper text layout behavior and enhance robustness by handling exceptions during UI setting
refactor FlatteningIterator initialization and simplify blank handling logic to enhance code readability and maintainability by reducing redundancy in iteration logic
replace empty HTML tags with HTML replacement for title and body in NotificationUtils to enhance user experience by removing specific HTML elements
doc : generate sample code in the java microgenerator ( # 320 )
added test case to ensure that the ' delete any exist question ' test work even if there be no previous question
fix hssfsheet . getfirstrownum for multi - row boundary ; patch from sebastien mazy .
added permission checks for launcher activities to enhance security to ensure only authorized intents are processed
[ java ] separate session notification logic into separate method for good readability and efficiency .
added hashCode method implementations and updated equality checks in AbstractParquetMapInspector to ensure consistent hashCode implementation and improve null safety checks for key and value inspectors
added a condition to flush the session if remotelyClosed to ensure proper resource management when the stream connection is no longer needed
[ flink - 31015 ] [ connectors / common ] fix splitreader do n ' t extend autocloseable but implement close method
removed the deepCopy ( ) method from GsonBuilder class to streamline the object creation and storage process for improved maintainability
[ gr - 38272 ] fix LLscanner null return issue .
jav - 547 open file synchronously to avoid concurrency issue
no actual code change ; the line remains unchanged to maintain consistency in code formatting
updated ClassLoader implementation in MockFactory and added SearchingClassLoader to enhance class loading capabilities to allow more flexible class loading for mocking
* added testrefreshflagbug . java to test that it do n ' t demonstrate that it do n ' t work a expect .
added LEFT _ SEMI _ JOIN to the condition type check to allow processing of left semi join conditions in the ConstantPropagateProcFactory
updated handling of response completion and request completion in HttpReceiver and HttpSender classes to improve response handling and ensure proper termination of responses
fix array _ length _ offset to use oopdesc _ length
http : / / issues . apache . org / jira / browse / amq - 4568 - fix unit test regression , addendum
updated multiple Java files with no specific changes to maintain code consistency and clarity across the project
added a check for whether the application is running before stopping the application context to ensure that the application does not proceed if it is not running
changed the return type of the drawItem method from void to GlyphLayout to enable retrieval of the drawing output for better rendering capabilities
replaced JSON unmarshalling with MetricsPublisher for metrics retrieval in SpringmvcClient . java to improve performance and error handling in metrics processing
removed the static final long SAFE _ ACCOUNT _ AGE _ DATE and simplified the return statement in AccountAgeWitnessService . java to streamline code by eliminating unnecessary complexity and improving readability
refactor StructureHeader and StructureReader classes for improved readability and consistency to enhance code maintainability and clarity for future developers
added a ResourceUrlProviderExposingInterceptor bean to the CasWebflowContextConfiguration and tests to enable the use of ResourceUrlProviderExposingInterceptor for improved resource management
add a dexreturninliner that transform dex _ return _ inliner for the other return statement .
add some property to enrich rule ( # 4299 )
modified the directory check to throw an exception instead of using NOFOLLOW _ LINKS to ensure the method correctly identifies directories when determining if a directory is a directory
[ flink - 15613 ] [ table ] remove the need for ` ` hive ' ' dialect config in sql - client
added a supplier for RDotJavaPackages and modified related methods to handle package existence to improve the management and functionality of package - related permissions in the Android build process
add a test case for java . sourceforge . pmd . foobar package declaration
added configuration for minimum cross compaction unseq file level to ensure compatibility with external storage settings
[ hotfix ] move activeresourcemanager into ' active ' package
rename test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify the purpose of the test as disabled
updated the URI creation method in ZipResource to handle URISyntaxException and improved exception handling to ensure better error reporting when constructing the URI with spaces in jar entries
updated image thumbnail handling in ExpandableUploadListAdapter . java to improve user experience by ensuring thumbnails are generated correctly when uploads are successful
refactor RobolectricTestRunner to ensure proper configuration merging of test classes hierarchy to improve flexibility in determining which test classes should be merged for various test scenarios
updated the blocks and items list initialization to filter out null registry names to improve robustness of block and item registration checks
changed method visibility from abstract to default in AbstractDataChangedListener and modified method calls in WebsocketCollector and WebsocketDataChangedListener to improve method visibility and ensure proper handling of data change events
updated JSONPojoConvertor to handle enum values and improved color handling in JSONPojoConvertorTest to enhance type safety and ensure correct serialization of enum values
deprecated the use of ` -- view ` option and added a warning message if it is deprecated to inform users that the feature will be removed soon
changed the data type of originalPayload from String to byte [ ] and updated related methods for handling character encoding to improve performance and simplify the payload processing process
added orientation correction listener to the GyroControl class and updated mouse coordinate calculations to improve responsiveness and accuracy of sensor event handling based on device orientation
guacamole - 641 : set biome dictionary . biome _ list _ size to the actual number of biomegenarray give .
replaced instances of ` println ` with ` print ` in method calls and class declarations to improve clarity and consistency in output formatting
nifi - 12023 : this close # 296 . check the environment variable be there before use it in the filecompilerconfig .
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a utility for collecting bytes and character information
added a preload feature to MMapDirectory with a default value of false to provide more control over map preloading behavior
added custom metrics for various enabled components in BukkitPlatform to provide detailed metrics on component usage for better analytics
refactor QuickConnectREST class implementation to improve code readability and maintainability
added aspect ratio handling and default card image in CardPresenter . java to enhance card display with additional images for better visual consistency
[ ds - 4762 ] change to support the new login feature .
modified the cloning logic for longValues , doubleValues , and byteValues to handle empty arrays more efficiently to improve memory efficiency by avoiding unnecessary array copying when arrays are empty
[ flink - 3373 ] [ runtime ] integrate jit test with window . nanotime ( ) .
added trimming of whitespace from the input lines in MultiPartFilter and print the request parameter in MultipartFilterTest to ensure consistent line processing and improve test clarity
make livingexperiencedropevent fire when a player experience drop ( # 6411 )
updated error messaging and status handling in OpenUVBridgeHandler and OpenUVReportHandler to provide clearer user feedback regarding configuration issues and bridge issues
beamqueryplanner : remove unsupportedoperatorsvisitor and use validation of sqlnode directly
updated GraphEnhancementQueryEnvironment to include RdepsFunction and adjusted input handling to improve dependency management and ensure correct functionality when processing target graphs
updated the Character class to improve functionality to enhance character processing accuracy and performance
added logic to select the entire rocket in the selection option based on whether it is a rocket to ensure the selection aligns with the intended default behavior in the user interface
updated assertions in UpdateableResultTest to directly compare bytes instead of arrays to improve code readability and maintainability by eliminating unnecessary complexity
added time boundary information handling for hybrid tables and simplified method calls to improve reliability and clarity of data retrieval and processing
only register a poller on the poller if it ' s need
download image for eightmuses . com : ripper now download full - sized image .
replaced direct calls to ` mDevice . wait ` with ` TestHelpers . wait ` for better integration to improve code readability and maintainability by centralizing wait functionality
updated conditions in QuickstepLauncher to include phone profile check to ensure proper layout behavior for phone devices in non - landscape orientation
replaced ` getValue ` method calls with ` unwrap ` method for query handling in ` PartTreeJpaQueryIntegrationTests ` to ensure compatibility with query implementations and improve test accuracy
replaced the method ` readAllLines ` with ` readMatchingLines ` and added a private method ` readMatchingLines ` to improve code readability and handle potential security exceptions more effectively
removed dynamic check for the result stream method in JpaQueryExecution to simplify the code and reduce unnecessary reflection calls
fix a bug which cause nullpointerexception to be throw if an entity be delete and there be no type information for that entity .
entryprocessor : clear value attribute map when value attribute be not indexed
add multichat operation set and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue # 250
update color normalization to ensure only color values are scaled into decimal places
fix tabbed menu not disable when right click ( # 9740 )
updated the path format in Aapt2Link . java to include a relative path to improve build organization by using relative paths for generated link tree paths
updated mock instances for Capture and HttpService to use the newInstance ( ) method to ensure consistent mock behavior and improve test reliability
make sure unselected geos be clear when the select geos be selected ( but not selection )
[ ysld ] catch emptystackexception when parse giac , and fallback to log instead of throw
added isCanceled ( ) method implementations to BehaviorCall , Calls , and OkHttpCall classes and updated ExecutorCallAdapterFactory to use it to provide consistent cancellation state management across different call implementations
refactor multiple classes to implement a default method for checking annotation presence to improve code consistency and reduce redundancy across these classes
add default implementation to unILayout for the removeallwidgets method
[ flink - 27372 ] [ test ] harden yarn test case to verify log output
opensslcipher : fix return of getoutputsizeforfinal ( inputlen ) in opensslcipher .
added logic to handle video playback for Fire TV Stick devices to ensure correct transcoding of high - res content when using Fire TV Stick
[ spark dataset runner ] improve testing of data source .
replaced import of Date with a wildcard import and modified listener handling in GpsLoggingService to enhance code readability and ensure proper listener management based on user preferences
updated the ` putString ` method to accept a byte array instead of a boolean array and modified width handling based on JNI compatibility to improve compatibility with different OpenGL versions and enhance width measurement support
added handling for BaseItemDragListener in FolderIcon . java to support shortcut information during drag events
added support for empty artifacts in RepositoryConnector , AbstractRepositoryConnector , Float , Long , and FileSystemConnector , and updated type handling in SignavioConnector to improve type safety and error handling during artifact creation
removed unnecessary lines for configuration retrieval in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed unnecessary check for afterAug1 in the video link validation to simplify the condition for verifying video availability after Aug - 1 year
camel - 6407 : sftp component should remove file separator . thanks to joerg kessler for reporting .
slightly increase timeout for good intermittent failure
rename variable ' groupSortStr ' to ' sortWithinGroupStr ' for clarity to improve code readability by specifying the purpose of the variable
fix doubleplant / lARGE cube be treat a lant , rather than always return
use requestfocus instead of focusable when the content type be not text
added exception throwing in VirtualMachineManagerImpl . java to ensure proper error handling by throwing exceptions
removed license handling from DB2TestSystem and adjusted condition checks in DockerDatabaseWrapper and TableIsEmptyGenerator to improve code reliability and ensure correct behavior when using DB2TestSystem
changed the visibility of the units variable and added a setter method for unitGroup in DoubleModel . java ; modified the way units are accessed and handled in GeneralOptimizationDialog . java to improve flexibility in unit management and ensure consistent unit handling during optimization
added a new static final CurrencyPair BTC _ ZMW to store multiple currency pairs for BTC and ZMW
added logic to set the number of samples for PBR lighting to ensure that the PBR lighting behaves correctly when there is no samples available
removed unnecessary " job . step " prefix from test assertions in ` StepWithSimpleTaskJobParserTests ` to streamline test cases for better readability and maintainability
updated variable declarations to use ' final ' for better immutability to enhance code clarity and prevent accidental modifications to class fields
add an extra parenthesis around the ggbabs ( ) when print the ggbabs ( ) expression
added multiple calls to addServiceOutput ( ) and modified hasTrigger handling in DDLSemanticAnalyzer . java to ensure proper processing of service output based on conditions and conditions
[ jbrules - 2604 ] fix classcastexception when compare bigdecimal ( # 2604 )
hide jdt use by jetty in web application context
modified the return value of the ` useAuthCache ( ) ` method to false to simplify the logic by removing unnecessary cache checks
update namespace assignment to use lowercase names for better consistency to improve readability and maintainability of the code
camel - 8177 : direct component now throw a directconsumernotavailableexception if user try to send to an exist endpoint .
added a null check for zooKeeper before accessing its state to avoid potential NullPointerExceptions when the ZooKeeper is not initialized
[ minor ] fix typo in progress bar message
refactor vibration handling to run on the UI helper thread for better responsiveness to improve UI responsiveness by ensuring vibration is handled on the main thread
added a method to update the last remote stream ID in HTTP2Session to ensure the session is updated correctly after a successful stream
enable antialiasing for the header and toolbar ( bug # 605 )
[ java ] : simplify calculation of available window size by use position .
refactor : remove static import of enums in ctannotationimpl . java ( # 2563 )
update exoplayer . builder javadoc to mention buildexoplayer ( )
replaced the native method for retrieving pixel dimensions in WRobotPeer . java to improve compatibility with pixel retrieval functionality in the WRobot implementation
add a new method ` newPrintStream ` to handle specific encoding for output streams to improve flexibility in setting output stream encodings based on system properties
increase the movement speed limit to 25 second instead of 1
some small tweak to make eclipse happy
updated the constructor parameters of WebSocketClient for improved clarity to enhance maintainability by standardizing the parameter order in constructors
simonstewart : allow i18n test to run without history
use direct load constant exception handler for load method invocation in share graph builder
[ ds - 3852 ] restore the state of run service when there be an error
implement a lowercase comparator so that it correctly translate from 1 - level string to uppercase
refactor parsing logic to handle duplicate files and improve error handling to enhance robustness and provide clearer diagnostics when no source files are found
simonstewart : fix a couple of test that do n ' t work in firefox yet
added validation to check the length of keys in HighestKvno . java to ensure correct number of keys to prevent processing errors
added error handling for fetching attributes in HDF5BatchReader to log warnings when only Huge objects with 1 record are supported
[ beam - 10670 ] use presult instead of p done in some bigquery example
fix : rename ` ` copysnippetrequestentity ' ' to ` ` createtemplaterequestentity ' ' and add extra annotation to template processing
8174694 : improve semantics of java . lang . object . getclass ( ) for multi - dimensional array
bug 10615 : remove the unnecessary config parameter ` ` secondary . storage . vm ' ' in favor of ` ` secondary . storage . vm ' ' .
replaced the method of retrieving block IDs to use a precomputed head number and added a conditional check for adding to the list to improve code clarity and ensure consistent handling of block IDs
added a method to set the theme for the preview tab to ensure the correct theme is applied for the preview tab
added null check and close method for the reader object to ensure proper resource management and prevent resource leaks
added a test for HTTP idle time handling in ConnectorTimeoutTest . java to ensure that the HTTP client correctly handles idle timeout scenarios and reports expected responses
update properties to be consistent with the change in the config
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve clarity in parsing tag names and enhance code readability
resolved - issue batch - 1417 : joblaunchinggateway and unit test fail if no joblauncher bean be define
changed log level from warn to debug in DistributedQueue . java to improve log granularity for better debugging
refactor color extraction logic to utilize a dedicated method for hotseat palette retrieval to improve code clarity and maintainability by encapsulating the palette update logic in a dedicated method
added DefaultDataTableEntryTransformer and TableCellByTypeTransformer imports to TypeRegistry and implemented them in TypeRegistry to improve data table handling capabilities in the Cucumber framework
added an assertion to check if newAvailableShared is less than or equal to initShared to ensure correct initialization of shared state during shared operations
doc : make repo releasable , add parent / bom ( # 1 )
remove projectGenerated field and related methods from ProjectGenerator and WorkspaceAndProjectGenerator to streamline project generation logic by eliminating unnecessary state management
updated spacing in the conditional check for headers to improve code readability and maintain consistency
added contact form routes and updated the application controller to handle contact form requests to enhance the application ' s ability to process and display contact - related data
guac - 587 : fix simpleuser permission handling . now properly support connection and system permission .
update RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version of the icon caching functionality
add documentation and fix typo in setmode ( )
updated method names and conditions in multiple Java files to use " findWhereNameOrAliasLikeAndActive " for better clarity to enhance readability and improve consistency in querying metrics
replaced manual close of consumers with IOUtils . closeSafely for better resource management to improve code reliability by ensuring all resources are closed safely
refactor multiple data change listener classes and their implementations to improve code clarity and maintainability
added an OnClickListener to the overflowButton to show the menu message when the overflow button is clicked
updated failure messages related to null references and improved assertions in the Subject and OptionalSubject classes to enhance clarity and accuracy of failure messages for improved debugging
ggb - 858 update position of help button ( when selection without move )
move protobufferutilstest to core module , because it be noted necessary .
fix # 3736 : fix split pane divider position
add a slight change to support cross reference entry ( detection of subtypes ) .
[ geos - 7768 ] remove unnecessary cast to map in geoserverfeaturesource
rename extractTypes to dataTables for clarity to improve code readability and maintainability by using a more descriptive name
fix the contact avatar for the contact list . that be trigger the update of the contact list .
updated import statements to use the correct package for Command to ensure compatibility with the new package structure in the SSHD library
added a test for cleaning the audit log table with a specific position in the DML query to ensure the audit log cleanup functionality behaves correctly under different positions
added @ SuppressWarnings annotation and changed the return type of the inject method to Object to suppress unchecked warnings and ensure type safety during dependency injection
tika - 3221 : allow commentline to be either empty or invalid ( # ) when parse aclfile
updated the isReadable method to accept DrillTable and FileSystemPlugin as parameters to enhance functionality by allowing dynamic table creation for better flexibility in handling different filesystem plugins
added support for ancestor dimension values in StarTreeNodeImpl and updated logging messages in StarTreeNodeImpl to enhance the clarity of node naming and logging for better debugging
added a user unlock check in TouchInteractionService and refactored close open views methods in BaseQuickstepLauncher and Launcher classes to ensure users are only accessed when the user is authenticated and improve code readability
change condition from widthStr to positionStr to ensure correct validation of positionStr in the Photo class
refactor PKIXValidator logic to improve certificate validation structure to enhance readability and maintainability of the validation process
[ flink - 26011 ] [ hadoop ] [ hadoop ] [ test ] add archunit test for the test code
updated package names for several test classes from ` alibaba . dubbo ` to ` alibaba . dubbo ` to organize the classes under a more appropriate namespace for better clarity and maintainability
vpc : enable access when create public ip range of a project ( # 5448 )
replaced ` remove ` method with ` get ` for retrieving ` shape ` type to ensure correct retrieval of the shape type from the JSON object instead of removing it
add back storeundoinfoforproperties ( ) with getter / setter ( need for mob - 1044 )
7146533 : jre8 : javaws fail to launch on oracle linux due to xrender
make test more robust by wait for the completion of stream . getstreams ( ) .
removed the doAfterFlush method from DocConsumer and adjusted related initialization logic in TermVectorsConsumer to streamline flushing process and improve code clarity
ignore deprecation warning when generate jpa config ( # 5640 )
refactor mask and capacity handling in BiInt2ObjectMap and Int2ObjectHashMap classes to improve memory efficiency and maintain consistency in the code
increased the thread count from 25 to 15 in HiveConf . java and fixed a typo in destination path usage in Hive . java to enhance file management and ensure consistency in renaming operations
add some trace to try and trace to investigate ci failure
added a null check for the context variable in SchemeAndroidIDE . java to avoid potential NullPointerExceptions when context is null
use the current classloader when native - image generation be run .
changed return type of modifyGrantedAuthorities method and updated modifications in SwitchUserProcessingFilter to allow modifications of user authorities more flexibly and improve code clarity
renamed ` JaxrsIntegrationTest ` to ` Base ` and created new test classes ` JaxrsSpringTest ` and ` JaxrsSpringMain ` with Spring Boot support to improve organization and modularity of test classes for better maintainability
fix # 87 compatibility issue with hikaripool and make isjdbc41compliant optional .
added DataProviders for general and supplementary character tests in XslSubstringTest . java to improve test coverage and organization for XSL substring functions
fix # 1095 eventwriter . close ( ) to call flush ( ) after unmarshalling
added support for MariaDB sequences and updated handling of sequence parameters in the CreateSequenceGenerator to enable proper sequence functionality in the MariaDBDatabase implementation and enhance sequence creation logic
standardized the formatting of an error message across multiple buffer classes to improve code readability and maintain consistency in formatting
replaced imports of BrokerResponse with TableDataManagerProvider and updated ServerMetrics initialization in multiple test files to align tests with the new package structure and improve metric management
update the method to check for the " jsse . enableMFLNExtension " property in SSLExtension . java to ensure compatibility with multiple SSL extension configurations
updated ObjectIterator to use ObjectHashSetIterator instead of a generic ObjectIterator to simplify iterator initialization and improve clarity in initialization
updated character count calculations in Compose . java and TweetFragment . java to ensure correct remaining character counts for shortened URLs
added datapointTtl configuration and updated method signatures in CassandraDatastore and WriteBuffer classes to support configurable time - to - write behavior for improved data management
modified the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and updated the logic for checking Xcode running status to enhance functionality by allowing control over prompt behavior during Xcode checks
add a method to get the terrain at a cell coordinate to improve tile lookup functionality for better access
added default value handling in expression printing and implemented a new Java class for compiling annotations to ensure default values are printed correctly during annotation processing and facilitate testing of annotation compilation
added error handling for loading QuestEncryptionKeys . json in ResourceLoader to improve robustness by logging errors when loading unavailable resources
fix request . ispushenabled ( ) to honor the setting
refactor PointValue class to improve code readability to enhance maintainability and reduce complexity
removed the sign method call from BlockUtil . java to streamline the signing process by directly using the private key from the arguments
return the first root or null if no roots are found in FileSystemView . java , and added security checks in Win32ShellFolder2 . java to enhance robustness by handling empty root cases and enforcing read permissions during folder access
use copylastrow to avoid false positive when splitting a table with an empty row .
added a SparseArray for storing selected notes and implemented a SparseArray for note management to improve the management of selected notes and ensure consistent data handling during view updates
add fix for # 5834 : fix legacy backup method to handle new format
added a null check for data and threw an exception for a non - null transfer data to improve error handling for potential null data scenarios
# 667 - remove support for ddl - engine . temp for mysql and db2
replace custom Padding class with Rect from AppWidgetHostView for widget padding calculations to simplify padding retrieval and improve compatibility with widget framework
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code organization and enhance argument filtering for ConsString type
modified ClassGraph and ScanResult classes to improve code readability and maintainability
make idletimeouttest more robust by use same wait
replaced direct calls to ` assertThat ( expectFailure . getFailure ( ) . getMessage ( ) ) ` with ` hasMessageThat ( ) ` to improve clarity and maintainability of failure message assertions
remove the usage of threadlocal . set ( ) ; which be useless
added support checks to the vote method in ContactSecurityVoter to ensure proper object type handling and prevent runtime exceptions
removed unused imports from DataLoader . java to clean up the code and improve readability
added atomic handling for row count in update logging and updated method signatures accordingly to improve the accuracy of log messages based on transaction isolation status
ggb - 2118 fix : margin not move to right , left and bottom
set default foregroundFPS and backgroundFPS values to 60 to ensure default settings are applied for improved application performance
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog classes to ensure proper resource management by tracking and releasing objects
replaced DefaultWebSocketFrame with ChannelFutureListener for WebSocket frame closing to improve handling of WebSocket close events by utilizing a listener
renamed ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` to ` TestApplicationEventListener1 ` and ` TestStateMachineError ` , and added a new event listener implementation to enhance clarity and support additional event listener tests in the state machine
add background color customization to settingsactivity for the popup a the user
updated import statements for StringUtils and added null check for line parameter to ensure compatibility with OpenHAB utilities and handle potential null values gracefully
added an accumulate method to JavaUserDefinedAggFunctions to enable summing accumulate counts with specified weights and string representation
hbase - 3409 fix checkstyle violation in hbase - replication
improve the regexpfactory . process regex ( ) implementation by cache result of instance . compile ( )
added a static method ` reset ( ) ` to the ` GameThread ` class to provide a mechanism for resetting the game thread state
added a new import for Objects and modified the login method to validate the realm before proceeding with authentication to ensure that only valid realm credentials are processed in the login process
updated parameter handling in SavedRequestAwareWrapper for improved structure and clarity to enhance maintainability and readability of the code
fix logging problem when no default configuration be set
use waitpoint . wakeup ( ) instead of countdown ( ) in commitlog and ha service
added a check for Android O and modified imageView condition in PhotoViewerActivity . java to ensure compatibility with devices running Android O and enhance user interface functionality
updated SchemaInfoLevel from minimum to basic for SchemaInfoLevel to ensure compatibility with the new schema crawler requirements
fix savetask to properly close a stream and write to stream .
updated byte handling and encoding in TestPayloads . java to use fixed UTF - 8 encoding to ensure correct and accurate byte encoding for payloads
fix entity not be load on dimension change ( mc - 103516 ) ( # 5573 )
add Tomcat101ContainerAdapter entries to the list to ensure compatibility with the latest Tomcat container configurations
[ drools - 5579 ] fix activationkey comparison in protobufinputmarshaller ( # 3044 )
refactor comparison cases in NowSearchTerm and SearchTermBuilder for better readability to improve code maintainability and clarity by organizing comparison logic
pdfbox - 4892 : remove public modifier from class , a suggest by valerybokov
added header resolution and modified endpoint URL handling in RemoteEndpointServiceAccessStrategy . java to enable dynamic HTTP method and header management for improved URL handling
solr - 13511 : add searchhandler . newresponsebuilder method to facilitate custom plugins ' maintenance of per - request state in a custom responsebuilder . ( ramsey haddad , christine poerschke )
added a notification call to notify the COMMAND _ START event in AsyncBackgroundTaskManagerTest . java to ensure that the command starts correctly before proceeding with operations
refactor the method for computing preview drawing parameters from a drawable to a public in PreviewItemManager to improve code readability and ensure proper handling of null reference drawable
replaced tokenizer and filter factory retrieval logic in LukeRequestHandler . java to improve clarity and maintainability of tokenization and filtering processes
replaced null checks with ParamChecks utility methods for validating arguments to improve code readability and maintainability by centralizing null checks
added verbosity handling to the execution context in ` JavacStep ` to allow conditional logging of output based on the verbosity setting
fix the oracle schema name issue where the session use .
log4j2 - 1349 fix test failure on ci when ci be run on ci server
added a new file TestShrinkToOneRegion . java that contains a main method to facilitate testing of the shrink - to - many operations on the system
replaced customPackages string splitting implementation with Splitter for better readability to improve code maintainability and leverage existing utility methods for better maintenance
lucene - 5945 : remove unnecessary utf8tostring ( ) call from analyzinginfixsuggester .
updated the message attachment handling in PushsaferMessageBuilder . java to correctly identify and utilize the local attachment string for encoded strings
added command to show the output statistics in the ModelExplorer and SequenceModelExplorer , and updated the StripProvenance output to use jsonResult to improve clarity in output representation and enhance code consistency
pdfbox - 4892 : remove unneeded null check ; simplify code
change access modifier of FORMATTER from final static to static final static across multiple field test classes to improve code efficiency and allow modification of function definitions
replaced Apache Commons Logging with BigDecimal for rounding in UDFRound . java to improve precision and logging efficiency while enhancing rounding accuracy
[ jsscripting ] switch to use new config api ( # 9687 )
made the Test1 and Test2 classes public to allow access to these test classes from other packages
updated permission handling for player interactions by replacing specific event templates with a more descriptive representation of the plot object to enhance user experience by providing clearer permission messages and reducing redundancy in game interactions
hive - 8406 : when right be a conditionanorexit , it should ensure that conditioninconstantset . addition do not modify session attribute ( jesus camacho rodriguez , review by gopal v )
replaced instances of ` DoTestNormsVersusStoredFields ` and ` LongProducer ` with ` NumericDocValues ` in the test cases to improve clarity and accuracy in test naming to better reflect the purpose of the tests being tested
[ fix ] box2d character controller , need to reset friction in late box2d version .
added tests for handling various threadbuffer size limits in flight recorder options to ensure proper handling of exceeding maximum size limits and enhancing buffer size adjustments
8179000 : upgrade the java platform from jdk8 to jdk8
added functionality to retrieve the target package from Android manifests and updated related classes to enhance the mechanism for retrieving the target package name from Android manifests
modified the implementation of DocHelper . java to improve code readability and maintainability
changed the initialization of acceptableThrowawayItems from an immutable list to an immutable list to allow modifications to the expected list of items in the setting
updated method invocations for primitive types in Test6987555 . java to ensure proper type casting for primitive types
moved messagehandler . check ( ) up , no functional change
[ flink - 29714 ] update javadocs for new inflection feature
added methods to retrieve and set the locale in EvaluationContext to enhance locale management capabilities in the application
removed the import of Plugin in SummaryPrinter . java to eliminate unnecessary dependencies in the code
added a ` break ; ` statement in the ` DrawerActivity . java ` to terminate a loop when a specific condition is met
updated import statements and modified query logging in MongoQueryCreator . java to enhance code clarity and ensure correct query object retrieval
add a system property to make the user loggerfactory configurable
[ java ] add assertion to test that we have no effect when p2p be disable
clarify health indicator bean name ( # 2638 )
added concurrency support for write operations on a concurrent map in LocalPStoreProvider to improve efficiency by allowing concurrent access to store configurations
changed the visibility of the ` deleteFiles ` method from public to private to restrict access and encapsulate functionality within the class
refactor ServiceLoaderSpliterator to use a ServiceProvider object instead of a Provider object to improve type safety and simplify error handling during service loading
simplify javainteropreflect . findfield and javaobjectmessageresolution . setfield and remove unnecessary try / catch usage
added toolchain creation checks to AbstractCell and ToolchainProvider classes to ensure proper handling of toolchain changes when no toolchains are present
do n ' t clear the context if it be n ' t add to the engine .
nifi - 10399 : fix performance regression cause by use of indexof in abstractcheckdescriptor . checkstatenooptimizeenabled
updated linker flags handling in PrebuiltCxxLibrary and related classes to reflect the use of exported linker flags to ensure correct linking of shared libraries in the build process
refactor the method name from onConfigurationChangedInternal to updateRecentsRotation and improve code readability to enhance maintainability by making the method name more explicit and clarify its purpose
updated listener type parameters in multiple classes for better type safety to enhance code clarity and prevent raw type usage
fix : we be miss the hash of the first block header .
[ issue # 3949 ] fix the problem of get the physic ratio for defaultmessagestore
refactored the initialization of JvmGcMetrics to use a single try - with - resources statement to ensure proper resource management and avoid potential resource leaks
[ issue # 5066 ] fix ( log ) : update the get amount of transferred message and total miss message
jpa - 2262 : deprecate subqueries from query interface and explain semantics .
added a method to check for the system UI object and input keyboard event input for the keyguard _ status _ view to enhance functionality by integrating system UI checks and shell command execution
changed ` logger ` from static to instance variable and made ` principals ` and ` sessionIds ` final to enforce immutability for better thread safety and performance
fix npe in cookiestore . removeall ( ) when empty
add some debug log to bonsai worldstateupdater ( # 4979 )
change method parameter type from String to CharSequence in ITextRepository and related classes to improve flexibility in handling text sequences and ensure compatibility with character - based operations
[ java ] ignoring again a test fail because of marionette regression
add a try - finally block to ensure that the connection returns the connection after use to ensure that the connection is closed even if an IOException occurs
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references to clarify the purpose of the process escape functionality across platforms
added synchronization to the heartbeatExecutorService shutdown process to ensure safe access to the executor service and prevent potential thread interruptions
updated asynchronous build result handling in CachingBuildEngine . java to improve efficiency to enhance performance and maintainability by separating tracing and cancellation logic into a dedicated method
added a method to update the first line visibility in the TextArea class to fix drag - selecting text out of the bounds of the TextArea
added Hadoop file paths and configuration options in TestInformationSchemaWithPrivilege . java to enable better management of temporary files during testing with privilege checks
refactor graphics configuration retrieval logic for clarity and efficiency to streamline the process of obtaining the graphics configuration and enhance readability
tika - 394 -- fix oom in legacy mode and improve unit test
camel - 14379 : camel - core - optimize to reduce object allocation .
updated the argument parsing logic and improved tag printing in PrintTagList . java to enhance usability and clarity of tag processing output
updated the method to append the table name instead of the full qualified name in InsertDeParser . java and added a new test case in InsertTest . java to ensure accurate SQL parsing and deparsing of the insert statement with aliases
http : / / issues . apache . org / jira / browse / amq - 4328 - fix test - problem with EOFException exception
[ java ] fix startfromtruncatedrecordinglogtest flakiness by wait for cluster ready .
modify the calculation of the arc variable in LineBorder . java to ensure accurate rounding of the arc value for accurate rendering
fix crash when tap on empty gallery image ( # 6367 )
add a deployment id column to the change log history table and remove redundant deployment id generation
pdfbox - 2423 : reference correct package , a suggest by michael klink
mondrian : fix problem with ` ` use index column ' ' on alter table
camel - 20225 : camel - quickfix - component should remember how to start a new engine / stop component
added properties and methods for managing display zoom controls in RoboWebSettings to enhance flexibility in managing zoom control settings
add corporea and corporea slab to non - corporea block ( # 4259 )
refactor ConnectionFactory class to improve connection handling to enhance maintainability and readability of the code
added the method EnableDisableMenuItems to manage the state of menu items to ensure menu items are enabled or disabled based on logging settings
updated the message resource in the ExtendedListFragment from ` headline _ server _ search ` to ` favorite _ headline ` and ` favorite _ filter _ list ` to improve clarity and consistency of the displayed message for empty favorites
hhh - 16594 remove deprecate serviceregistry . set ( ) call in entitytests
added auto - resizing options to the MotorMountConfigurationPanel and updated the constructor in MotorConfigurationPanel to improve user experience by optimizing the table ' s resizing behavior and ensuring proper component initialization
replaced the use of System . lineSeparator ( ) with System . getProperty ( " line . separator " ) for line separator retrieval to improve compatibility with different operating systems
add some getters and setter to be able to modify a poiproperties file ( patch from john hewson )
reformatted the ` doStop ( ) ` method call in ` HandlerWrapper . java ` to improve code readability and maintain consistency
[ java ] ignore empty file when there be no cnc file for that on window .
changed the type of the ` NonMarkedFoo ` interface and the ` MarkedFoo ` interface to ` Command ` and updated related methods to improve clarity and functionality by aligning with the new ` FooCommand ` interface
added support for processing Jmod files in ClassFileSourceImpl . java to enable proper handling of Jmod files during class loading
updated TreeBackedElement and related classes to enforce null checks on the canonicalizer parameter to improve code safety and reduce potential null pointer exceptions
replace token request initialization with PublicTokenRequest and set request parameters in Saml2TokenGranterTest and UserTokenGranterTest to enhance security by setting request parameters for token creation
log4j2 - 1349 fix arrayindexoutofboundsexception in abstractfrompropertyvaluerangedescriptor .
hbase - 5309 add sync to zk assign and watch so that we do n ' t have to wait for assign again .
fix ( gl ) : check current context in glutil . getcurrentcontext
[ jbrules - 3708 ] avoid to remove an activation when a ruleflowgroup be deactivation
added a return statement to HystrixDashboardConfiguration . java to ensure proper termination of the method execution when necessary
deleted exception handling for the ` DROP PIPE ` statement and added assertions for non - existent keys to improve error reporting and ensure that the failure occurs when the pipe does not exist
small cleanup fix to test to reduce false test failure .
refactor : remove the signatureprinter in ctreferenceimpl . getsignature ( # 1358 )
changed method visibility of validateInstance from public to protected to allow subclasses to access and override validation logic
refactor GeoPoint - related classes to improve code organization and clarity to enhance maintainability and readability of the codebase
added a new class ` FakeBuildable ` to provide a mock implementation for the ` Buildable ` class to facilitate testing by providing a placeholder implementation for buildable behavior
fix forge inventory render with empty bucket , close # 3954
renamed ` stream _ path ` to ` stream _ timeseries ` and updated variable names accordingly to improve clarity and consistency in variable naming related to timeseries and path handling
fix ( robot ) : do n ' t throw exception if the boost be less than 1.9
store gc bucket information in Blobinfo . java instead of recalculating it in gc
replaced the blockCloseVertxByName call with a finally block for closing the transport to ensure proper resource management and avoid potential memory leaks
# 454 - - db migration - generate view should not be require for history table operation
updated test case to check for clustering engine with a different parameter value to ensure functionality with the new expected behavior of clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored due to instability
added a new class ` ParserStateObjectInputStream ` and modified ` ParserCacheCommand ` to utilize it for state object deserialization to enhance class functionality by allowing recognition of RemoteDaemonicParserState during deserialization
updated object quoting logic in ChangeSet . java and added null check in DatabaseChangeLog . java to ensure proper handling of object quoting based on the change log configuration
updated MetainfoParser instantiation to use fromXmlStream for better XML parsing to improve performance and compatibility with XML streams
deleted the CsrfControllerAdvice . java file to the class is no longer needed for the current implementation
escape the directory name in jdk / ant , so they can be run on window o
added scrim animation functionality to the Launcher and a utility class for managing drawable transitions to enhance the user experience by providing smoother transitions during app transitions
corrected the logic for the ` long ` comparison in ` TypeInferenceUtils ` and updated test cases in ` TypeInferenceUtilsTest ` to ensure correct handling of larger string inputs and improve test coverage
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 182 )
added validation to ensure proper path prefix usage for absolute and UNC paths in WindowsPathParser to enforce correct path formats and prevent errors during path parsing
replaced ` InetSocketAddress ` creation with ` try - with - resources ` syntax for ` MulticastSocket ` initialization to simplify code and improve readability by using default multicast socket creation
fix the resource leak in the testwildcard . java ( close of the writer )
replace return statement to clone nBits instead of returning it directly to ensure that nBits is not modified and avoids potential unintended modifications
change the access modifier of ` deriveCollectorName ` method and add a new test for the ` TestProfilerCollector ` to enhance method visibility and validate the functionality of collector names in tests
added a method to determine if a entity type needs type hints in MappingMongoConverter to improve type hint handling during document conversion for simple types
added performance measurement for proxy factory creation in ProxyMaker . java to enhance performance tracking during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to silence unchecked operation warnings during compilation
include exception in log when connect to unknown remote address . resolve issue 283
refactor reinflateWidgetsIfNecessary ( ) method to the Workspace class for better organization to improve widget management by encapsulating widget inflation logic within the Workspace context
added a new file named DeleteInsideFileDialogTest . java to test file deletion in a dialog to ensure functionality of the right - click deletion feature in the file dialog interface
fix for issue # 988 - lwjgl native code display . repaint ( ) not be call when the renderer be invoke .
[ fix # 72504258 ] add a test case for update the profile image of student
added support for ignore tests based on the " onlyrun " system property to improve test flexibility by allowing specific scenarios to bypass certain tests
removed the pointer parameter from the fling method signature to simplify the method signature and improve usability
updated QueryDslJpaRepository to handle null pageable cases in QueryDslJpaRepository . java to ensure robustness by preventing potential NullPointerExceptions when pageable is null
added a method ` computeMemorySize ` to the ` MemoryManager ` class with validation to ensure the fraction of memory is within valid limits to prevent invalid memory allocation
no jira - fix test which sometimes fail on window due to timeout of the consumer
modified the SnowballAnalyzer class to improve functionality to enhance text analysis efficiency in Snowball analysis
reset ` previousIndex ` to ` - 1 ` before creating a new ` InternalBatch ` instance to ensure proper handling of the state of the previous batch in the streaming aggregation logic
refactor out the null check check to a separate method to reduce noise .
added a method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to enable stream processing using default concurrency settings
updated logging messages for watched files to clarify their purpose and improve error handling to ensure accurate logging and provide better insights during file operations
change the access modifiers of several classes and methods in InjectorProxy and ReflectionUtil from private to public to enhance accessibility and allow broader instantiation of instances
remove closing of output stream to ensure proper resource management during streaming operations
added unit tests for show create table functionality to ensure correct parsing and deparsing of SQL statements
replace returning null with returning an empty list instead of null to ensure the method correctly returns an empty list instead of null
fix test failure when run on jdk 6 , patch from jdk 6 .
added a condition to handle WebSocket connection and improved connection handling in DeconzBridgeHandler . java and WebSocketConnection . java to enhance websocket connection management and provide clearer debugging information
replaced ` setAttribute ` with ` removeAttribute ` for security authentication and target URL in ` AbstractProcessingFilter . java ` to simplify the code by removing unnecessary null assignments
hbase - 25478 - implement retries when enable table in testregionreplicareplicationendpoint ( # 2866 )
added PMS configuration to FormatRecognitionTest to ensure correct recognition settings for the format recognition process
bug 9629 : create ovum data disk template during template creation and state transition ( # 7829 )
updated PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 annotations and improved code formatting to enhance test structure and readability for better maintainability
added @ Override annotations to CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding and improve code clarity
updated SQL statements to include an additional constraint for hostName and view1 to ensure consistency in the data structure used in the table
added a check for document count mismatch in SegmentReader . java to ensure accurate handling of deleted documents and throw a specific exception
add a method so that logging of error do n ' t interfere with the gui .
bugfix : make flink 1.0 the default scaling strategy ( 1.0 , 1.4 )
set handlefileUploads default to true in VertxPlatformHttpServerConfiguration . java and update its usage in VertxPlatformHttpEngineTest . java to ensure proper configuration of file handling behavior through configuration
added a new test method to verify the behavior of the CsrfFilter with default access rights to ensure compliance with HTTP method requirements for CSRF protection handling
remove the need for static field since it be only thread - safe .
updated method names and logic for adding suggestions in various spell checker classes to improve clarity and consistency in handling suggestions in the spelling process
fileio : replace now ( ) with withwatermark ( ) to preserve the watermark
fix for npe improve cte ( # 1666 )
added import statement for ResultSetMetaData in QueryCompilerTest . java to facilitate the handling of resultset metadata in tests
updated the command line arguments for the library ' s output formatting to include the project filesystem root to ensure compatibility with project structure and improve command line usage
update angle slider positioning in RailButtonConfig . java to ensure proper positioning of the angle component in the panel
fix incorrect positioning of encloser draw , also fix npe on save if saveio fail to load
added expression language support to KerberosProperties to enhance compatibility with various Kerberos standards
removed null check for remoteMountPointComponent and directly set its scale in the ThirdPersonRemoteClientSystem class to simplify code and improve readability by ensuring proper setting of component properties
updated the setupViews method to include a ScrimView parameter and made related adjustments in several classes to enhance UI responsiveness by allowing smoother transitions during UI updates
[ flink - 17693 ] [ state ] add the option to enable periodic materialization
http : / / issues . apache . org / jira / browse / amq - 3982 - fix a bug where tag value would n ' t be save along with the attribute value
add a simple ' chunking ' test to check the presence of a value in a head header .
[ java ] added isbumped property for the router response .
added Content - Type header for HTTP requests in SwitchToPostInterceptor and SearchRequestUnitTest to ensure proper handling of form submissions
updated EmbeddedClientConnector class implementation to enhance client connection handling
replaced SQLFeatureNotSupportedException with a warning log statement for ignored fetch sizes to improve error handling and provide better logging for SQL behavior
fix bug with date picker on window . http : / / github . com / codenameone / codenameone / issues / 2486
[ pinot - 6628 ] fix the order of parameter when retrieve the row - by - row ( # 2940 )
removed the ` false ` parameter from the ` getDepositAddresses ` method calls to simplify the method call and ensure consistent behavior with currency representation
hbase - 27846 fix classnotfoundexception in hbasemapreduceutil ( liang xie )
added a flag to handle back navigation in DesignerActivity and made root variable final in XMLLayoutInflater to improve user experience by handling inflation failures appropriately during back navigation
modified PushbackInputStream . java file to improve handling of input stream operations
Loweringtool should be a abstract class for the loweringtool so that it can be reuse by other side
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter . java to provide a more accurate messaging for sync folder failures
fix # 1378 - makefile rule fail on window use \ n or \ r
replaced direct retrieval of deleted documents with MultiFields utility to improve code clarity and ensure proper handling of null values
updated refresh method to use RF _ TRANSFORM and setBoundRefresh calls to enhance functionality by allowing dynamic updates based on transformation flags
[ gr - 29499 ] fix bug where unsafe unsafepoint be not return true for aarch64 .
added framebuffer size callback for handling window size changes in LwjglWindow . java to improve window resizing and ensure proper handling of window size updates
adjust translation calculations and update related animation play calls in LauncherAppTransitionManagerImpl to improve animation consistency and correctness in the app transition behavior
changed ` NodeLiteralNode ` to ` NullLiteralNode ` and updated method signatures accordingly to support a new implementation that handles null values more appropriately
added setLength method to FSDirectory and IndexOutput classes and updated totalSize calculation in CompoundFileWriter to ensure consistent file length handling across different file systems
modified AndroidNdkScriptGenerator to ensure the manifest is created if it doesn ' t exist and updated shared library loading in AntScriptGenerator to improve directory handling and integrate new test libraries into the LwjglDebugStarter
camel - 16068 - camel - aws2s3 : use sourcebucket and destinationkey instead of copysource to avoid issue .
added a check for ' * ' role in RuleBasedAuthorizationPlugin and updated request handling in TestRuleBasedAuthorizationPlugin and TestRuleBasedAuthorizationPlugin to improve authorization handling and simplify request management for better code clarity
[ type : refactor ] optimize the code for zookeeperclientserverregisterrepository ( # 3594 )
renamed methods and adjusted logic in ReturnsDeepStubs . java for clarity and consistency to improve code readability and maintainability
added a check for empty call values before converting them to Byte objects to avoid potential exceptions when the call value is empty
fix debug log message ( # 4059 )
updated the ` mapPBEAlgorithmToOID ` method to return the algorithm ID and changed the PBE algorithm string to " DES " to improve algorithm handling and ensure compatibility with modern cryptography standards
tmi - tiff : correct parsing ofIFs in case of out of memory
added validation for job parameters and implemented a test for handling invalid parameters to ensure proper input format for job parameters and improve error handling by providing informative feedback
update assertions in SmtpTests and MailTests to remove carriage return characters from the message content to standardize assertions for consistency in output formatting
camel - 15836 - camel - core - optimize : optimize rout engine to reduce stack frame in use during rout .
replaced synchronized lastSequenceId with an AtomicLongFieldUpdater for thread safety to improve concurrency and reduce contention in concurrent scenarios
added a new file ` Test . java ` containing a method for summing integers and a main method to provide a utility for counting occurrences of a specific integer in a loop
updated minSdk and maxSdk configurations to use ` R ` instead of ` minSdk ` and ` maxSdk ` in ` ShadowWifiManagerTest . java ` and changed data attributes in ` WifiUsabilityStatsEntryBuilder . java ` to protected to ensure compatibility with newer Android versions and improve data handling
added a new Java class named Solution that reads two integers while preserving sorting behavior to implement a solution for determining when a point can be placed in a given order
fix race condition in update sstables after cf re - writing . patch by jbellis ; review by brandonwilliams for cassandra - 1415
refactor taskbar recreation logic to use a boolean variable for clarity to improve readability and maintainability of the code
hbase - 27906 fix the javadoc for syncfuturecache ( # 5325 )
prepare next release 2.0 . 2 : use 2.0 . 2 a version
fixed uselessstringstringof rule break on literal
added a test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to validate the calculation of the elliptic part of the nose ' s drag conditions to ensure correct behavior of the SymmetricComponentCalc when a nose drag is involved in a Flight configuration
add a new parameter to control the size of the producer write engine .
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to ensure compatibility with the latest configurations
improve javadoc regard compilationtask # getelementsannotatedwith ( class ) javadoc
updated location URI check in TestSemanticAnalysis . java and refactored parameters handling in DDLTask . java to ensure correct location retrieval in test mode and improve code clarity for parameter management
added a call to clear the database change log table statement using the ExecutorService to ensure proper management of Liquibase catalog and schema names
added version handling and improved path comparison in RestClient and CallPath classes to ensure correct URL construction and versioning for API calls based on versioning
modified error handling and synchronized access modifiers in PhoenixDriver . java and PhoenixServices . java to improve exception messaging clarity and ensure proper resource cleanup
apps - 1089 throw exception to prevent crash when load file
added screenshot tests and modified visibility settings for UI components in various activities to enhance test reliability and maintain UI consistency during testing
[ gr - 39999 ] ensure hotspot optimization be not run in dev mode .
[ flink - 23737 ] [ core ] fix stringhelper # removeLeadingandsendingstrings for string with single character
updated JpaQueryCreator to use a more specific type and added a new method for finding users by last name to improve code readability and ensure correct functionality for handling not containing keywords
add temporary workaround for npe when not use ssl cert .
added a call to dispatch a new P25Message using the copy method to ensure the message is correctly copied from the updated alias list
add null check for handler before invoking checkClosed ( ) in WebSocketImpl . java and implement a new test case in WebsocketTest . java to ensure handlers are only checked when they are not null to prevent potential NullPointerExceptions during WebSocket closure
ds - 3542 : upgrade discovery module to new version of dspace - site . xml
update widget padding values to use a new Padding instance for widget widgets to ensure consistent widget padding across the application
added hide methods to TaskbarUIController and updated closeOverlay method in BaseActivityInterface to enhance user experience by ensuring proper hiding of all apps during app states
removed synchronized sleep statement from the launch method and replaced it with a join method to improve responsiveness and simplify thread management
fixed null point in simulator for desktop apps that would scroll their app in the wrong place .
improve notification handling in uploadservice ( # 1825 )
fixed bug 1394444 - excessivecount no long report false positive for static final declaration .
hbase - 4227 addendum set the number of retries in the configuration for the thrift connector use
fix ( core ) : log level change in transactionalmessageserviceimpl
do n ' t crash if a key resource can not be find ( # 552 )
added a method to retrieve tickers from the Bittrex API and created a new Response class to enhance the functionality of the Bittrex market data retrieval and provide clearer information about tickers
fix an npe in entityentry . getenumconstants ( ) when entityentry . getenumvalues ( ) be not call
remove the need to check for class which be the endpointclass before it be initialise .
modify the char array to include additional characters for improved character handling and consistency to ensure accurate representation of character data in the application
added resource handling capabilities and improved stylesheet retrieval in ResourceService and DefaultServlet classes to enhance flexibility in displaying resource stylesheets and ensure proper responses when the stylesheet is not specified
added a call to ` clearIndex ( ) ` in the ` TestFiltering ` class to ensure the index is cleared before processing new data
changed method call from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure compatibility with pointer - based method calls
updated condition in CreateSequenceGenerator to exclude CockroachDB to ensure compatibility with specific database scenarios involving CockroachDB
revised the conditional check for the name of the object stream class to simplify the logic for identifying string types
replaced UnsatisfiedLinkError with SymbolNotFoundError and created a new class for symbol not found error to improve error handling by providing a more specific exception type for missing symbols
make binary response writer more flexible with random field
added PING and PONG cases to WebSocketImplBase and implemented a test for WebSocket pause functionality to ensure proper WebSocket response handling and validate the ping / pong behavior
updated NON _ IDENT _ ESCAPES string to include " - " as a valid escape character to ensure proper handling of special characters in regular expressions
[ java ] update dnsresolverprovider to take cache into account ( # 1351 )
added conditional on messagingtracing class to ensure messaging trace is only enabled when messagingTracing is present
mondrian : fix for bug in sqlquery for db2 and also fix the quote in quote in quote .
updated import statements across multiple Java files to ensure consistent dependencies to improve code clarity and maintainability by standardizing imports
fixed parse when the ' / ' character be use , close # 637
change visibility of the input field from GONE to GONE to improve user interface responsiveness during input handling
added null check for the getCurrentUser ( ) before comparing its ID to avoid potential NullPointerException when checking if the current user is null
added bounds checking for index and member setting in JSObjectLinker to ensure correct handling of JSObject members based on their index
changed the visibility of the ` randomStringGenerator ` and ` suffix ` fields to default and implemented a ` setSuffix ` method to enhance flexibility in ticket suffix handling and make the ` setSuffix ` method configurable
mark the SecurityConfig class as deprecated to indicate that the class should no longer be used in favor of an alternative
deprecate the holder class for removal via @ listener ( forremoval = true )
deleted the JoglDebugAdaptor . java file and modified its implementation in RocketFigure3d . java to streamline the code by eliminating unused debug - related functionality
camel - aws : add extra fieldpropagation tostring , and fix spotbugs issue
added PendingIntent content intent in FileDownloader and FileUploader classes to manage ongoing notifications effectively
modified the ` nextOrd ` method to include a ` set ` method and adjusted the index handling logic to improve the logic for generating unique identifiers based on index position
updated DateTimeFormatter class to improve date handling logic to enhance accuracy and performance of date parsing operations
refactor desktopProperties initialization by removing unnecessary try - catch block to improve code readability and eliminate unnecessary exception handling
added null and empty checks for Kerberos admin credential handling in ` KerberosOperationHandler ` to ensure proper authentication parameters are provided to avoid null or empty credential issues
added a constant for maximum width scale based on device profile dimensions to ensure proper sizing for tablet and two - panel layouts in the widget sheet
added begin / end rendering calls with sketch color in PSurfaceJOGL . java to ensure proper rendering behavior with the specified window color
update hashing algorithm implementation to enhance security and address potential vulnerabilities
filesenderfactory : accept method now accept folder name instead of just file name
updated ` addToListIfNeeded ` method to include ` contentDescriptionInt ` parameter for drawable and text resources to enhance user information display by providing additional drawable and description information
remove useless null check . type be never null .
updated the activity start delay from 500ms to 800ms to allow for a longer delay to enhance user experience
added a static final WEBAPP _ HOME constant in SolrJettyTestBase and updated its usage in JettyWebappTest to improve maintainability by centralizing the web app directory path for better testability
reset the selected motor set to null and clear the table selection upon selection to improve code clarity and ensure proper handling of motor selection state
added import for BufferUtil and used clearToFill method in ByteBufferPool . java to enhance buffer management and prevent potential memory leaks
fix notification rule with alarm and template
ambari - 22727 . change authorization to authentication in prop setup for ldap . ( mahadev )
fix randomly generate exchange which be drop to the pool after serialization .
[ hotfix ] [ test ] remove timeouts from slotproviderimpltest . testBulkSlotAllocationfulWithNewSlots
updated the connection handling in PingService to include error handling for connection failures to ensure that errors are properly propagated and reported when the connection fails
refactor CompositeHandlerAdapter for better code organization to enhance maintainability and readability of the code
modify Quartz2Adapter . java file to improve functionality and maintainability of the code
guard against illegalstateexception in sulong library . isregistered ( ) .
update Spring Security schema version from 6.2 to 6.3 and adjust related test cases to ensure compatibility with Spring Security 6.3 features and updates
updated the method signature of ` newNameResolver ` to use ` Args ` instead of ` Helper ` and modified the synchronization mechanism in ` DiscoveryClientNameResolver ` to improve argument handling and ensure synchronization consistency across the application
added conditional handling for non - empty annotations and introduced method to determine earlier position to ensure correct positioning of annotations while maintaining compatibility with existing code
added " com . sun . naming . internal . " to imports in CheckPackageAccess . java to ensure access control for internal naming classes
change the strict variable from false to true in StaxEventItemReader . java to enable strict event processing by default
added an ` isExhausted ` flag to the ` OfflineSorter ` and modified the ` readPartition ` method to use it to improve the handling of incomplete partition reads and ensure correct behavior in the reading process
refactored ActionResetingPool . java for improved code clarity to enhance maintainability and readability of the code
add a check for ` isInXYMode ` before calling ` fromHSBType ` to ensure that the code only executes when the current position is in ` XY ` to avoid potential errors
updated folder creation logic to use visual areas instead of rectangle dimensions and improved method names for clarity to enhance layout flexibility and maintainability by allowing dynamic updates to icon properties
removed calls to ` activity . showLoadingDialog ( ) ` in ` FileOperationsHelper . java ` and replaced it in ` FileDetailFragment . java ` with direct call to ` callerActivity . showLoadingDialog ( ) ` to streamline loading dialog behavior across different activities
added null checks for ` uigestureFile ` and ` xmlLogs ` before loading them to avoid potential NullPointerExceptions when the file is not available
updated FieldNamingPolicyTest to use Locale for name comparisons to ensure consistent behavior regardless of default settings
added a method to set listeners on the result object to enhance the functionality of the XML suite by allowing dynamic listener registration
added a new method ` loadWithNewGlobal ` and updated existing methods for global context loading to improve flexibility in managing global context loading behavior
added JSON serialization / deserialization methods to StarTreeIndexSpec and updated variable names for clarity in tests to enhance JSON handling capabilities and ensure correctness of new configuration values
added import for ObjectPostProcessorConfiguration in HeadersConfigurer . java and updated OAuth2 configuration classes to enhance security configuration capabilities and improve code clarity
replaced double quotes with single quotes in file handling methods to improve consistency and performance in handling file paths
[ drools - 3762 ] avoid npe when use in operator with null value
added import for FieldCache and implemented a commit method to purge the field cache to optimize memory usage by avoiding potential FC insanity in the test
act - 1096 added test case for boundary message event on subprocessexception with message boundary
change the signature and add some helper method to make it easy to add callees .
resolve http : / / issues . apache . org / activemq / browse / amq - 2513 - prevention of size for message grouping with hash bucket
8265462 : handle multiple slot in the n internal module from sunpkcs11 ' s secmod
added alignment support to the layout and a method to set the mouse button in GdxRenderer to enhance layout flexibility and improve user interaction with dialog components
[ hotfix ] ignore unalignedcheckpointitcase in case of failure
6738524 : jdk13services allow read access to system property from untrusted code
fixed an issue where keyword reference be never save due to the fact that keyword be never reference .
camel - 4998 : fix a potential classcastexception in camel - core after upgrade to camel - core
remove unused method from worddictionary /eggraph ( # 11287 )
sanitize telegraf tag key / values and name ( fixes # 644 )
add an udp port to the member member for ip address a per security concern .
rename operatormulticast to operationmulticast so it ' s more accurate
updated the send timeout in the EventBusTracerTestBase from 1 to 100 milliseconds to allow more time for message sending to complete in tests
added a try - finally block around the method call to ensure latch is always released after node execution to prevent potential resource leaks and ensure latch is always released after failure
added synchronization to the destroy method in SessionFactoryServiceRegistryImpl to ensure proper cleanup of cached event listener registry to prevent memory leaks
douniaberrada : modify test to account for jwt token
[ pytorch ] add miss test for pytorch engine ( # 1637 )
added a listener for managing task stack animations in RecentsView . java to ensure the force invisible flag is set correctly during animations
do n ' t throw exception if date pattern be not find in the pattern . add a test for it .
camel - 14263 : camel - cxf should use source code generate configurer to avoid reflection configuration .
refactor pending animation handling by extracting it into a separate method ` endPendingAnimation ` to improve code readability and reduce duplication of animation logic
add log to debug playtime crash and band aid fix for release build .
[ wasm ] add the option c1xcompilation . bailoutonexception that allow the c1xcompilation to throw the exception .
changed signup and passwd default values from a hardcoded string to null to improve clarity and consistency in configuration handling
[ flink - 33992 ] [ runtime ] replace previousexecutiongraphallocations with reserveallocations in slotprofile
[ log4j2 - 1125 ] migrate timeconverter option to be default
[ geotiff ] fix for # 2846 : use new noclassdeffounderror in geotiffreader ( # 2846 )
sulong : handle non - existent source section when crash
changed string conversion methods in JdbcExecutionContextDao and DefaultExecutionContextSerializerTests to use toByteArray ( ) to ensure consistent string representation for output streams
testpathchildrencache : fix flaky test : no need to block the child
refactor ArrayTypeHandler to improve null handling and method organization to enhance code readability and maintainability by reducing duplication
remove regexpTunnel , it ' s only use in jakarta regexp capability
update the application selection method to specify the appropriate class type to ensure compatibility with the new API requirements for application configuration
[ bz - 1155852 ] avoid npe on mutable global when create a global
replaced Preconditions with TransactionUtil for validation for asset name and description to improve error handling by using valid values instead of null checks
do n ' t copy the pastecut of the parent too , but do n ' t the copy of it
updated action label to use " @ text / offline - text - off " and changed status message to be consistent across multiple files to enhance clarity of action descriptions and improve consistency in status reporting
replaced method calls for setting seed , active , and trust nodes with bulk operation calls to enhance node management by consolidating operations for better readability
[ java ] add a failed flag to the basetokenstreamtestcase to help track down failure case .
log4j2 - 1343 - fix patternprocessor to use the modularized expression when incrementing
added methods in ShadowAdapterView and ShadowListView for handling item click and containing text retrieval to enhance functionality for interacting with items in the adapter and list views
pdfbox - 1900 : avoid classcastexception if / proc / proc / self / enum / pdappletable / pdappearancedictionary . java fails
handle decodestreams that can be throw after method scope in igv graph decoding
refactor HttpSessionDestroyedEvent to use getSession ( ) and update attribute retrieval logic to improve clarity and maintainability of session attribute handling
added a unit test to verify the service name change in Zipkin using a manually provided name to ensure that the tracer correctly reflects custom service names in span reporting for improved observability
added logging for excluded classes and improved handling of spooling behavior in Java files to enhance debugging capabilities and support for spooling behavior during Java compilation
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to clarify the purpose of the class for better project management
test fix : increase timeout in try - lock
added cache capacity parameter to the ConfluentSchemaRegistryDeserializerProvider methods to enhance cache management for improved performance
renamed the JCheckBox named " remind " to " checkAtStartup " and updated its tooltip and functionality to improve clarity and usability by using localized strings for user interaction
added various method methods to support various strength settings in the NodeGenerator to enhance the functionality of the NodeFactory enumeration and improve code readability
hhh - 14444 cascade action should work for cascading
added method handles for retrieving and setting prototype properties in ScriptObject . java to enhance the functionality of the ScriptObject with proper object guard integration
changed the default read mode from " heap " to " mmap " and updated the instantiation of ImmutableSegmentImpl to improve clarity in memory usage and provide better logging for segment loading success
fix : support byte [ ] data type in array template builder
added Hipchat property getter and setter methods to SamlServiceProviderProperties and created CasSamlSPHipchatConfiguration class to enhance the configuration of Hipchat service provider in the SAML service provider
changed ` commandRegistryUrls ` from a ` List ` to a ` Set ` and modified the initialization method to improve performance and ensure the collection of command registry URLs is processed
updated warning log message to include the current context and added debug logging to improve logging clarity for better debugging and monitoring
camel - 7258 fixed the race condition of sftp connect
camel - 13637 : camel - activemq : do not create a transactionmanager on demand if not explicitly configure and lazy create
cloudstack - 7878 : fix npe from vmwareresource if host name be null
updated Timers . java files for consistency and functionality to improve code maintainability and readability
replace usage of OVERWRITE _ EXISTING with APPEND _ TO _ ZIP in DefaultDefectReporter to ensure consistent behavior when generating a ZIP output stream
remove deprecate ' s code from java 1.5 ; migrate to brave 1.5 ;
removed unnecessary ` Map < Object , Object > ` implementation from ` ScriptObject ` and replaced instances of ` Map < Object , Object > ` with ` ScriptObject ` to simplify the class structure and improve code clarity
refactor EventBusMetrics class to improve event handling logic to enhance performance and maintainability of event bus metrics
[ ds - 2058 ] separate locale creation logic for eperson to reduce code duplication .
remove javax . annotation . postconstruct since spring 3.1 do n ' t have the schema yet
removed unnecessary null check for pgTypeName before adding it to _ pgNameToSQLType to simplify the code and avoid redundant operations when pgTypeName is null
fixed scopedhandlertest . testserverconcurrentload to work with the jetty client .
fix calltimeoutexception bug ; call timeouts should not increment retry count and should not be delegate to caller .
added check for empty password in RestLoginProcessingFilter to ensure that the username and password are properly handled when processing requests
updated permission check from checking for an empty string to checking for a wildcard to improve the accuracy of permission validation logic
rename charset variables and update method names for clarity in AbstractCompiler and ICompiler classes to improve code readability and maintain consistency in naming conventions
changed data type of postLogin and related methods from byte [ ] to String in HostBean and HostDatabase classes to improve consistency in handling byte arrays for postLogin and authentication information
remove redundant simulation and improve exception handling in GeneralOptimizationDialog . java to enhance code clarity and ensure immutability of simulation variables
camel - 17792 : camel - main - allow to configure reloadstrategy to avoid double restart .
updated console configuration parameters in CommonTestUtils by removing Log4j prefix to standardize console configuration and improve clarity in console output
8151195 : [ testbug ] clarify the default profile size for safer check
refactor NearbyListFragment to improve readability to enhance maintainability and reduce technical debt
add a conditional check for non - closing method and implement a test for non - marking supported input streams to ensure proper handling of input stream content type validation and validate the expected MIME type
disable neo4j server if there be no server ( # 5979 )
fix debug navigation for health component ( # 4209 )
added halfLengthTotalWeight parameter to the random method and adjusted related logic to improve the distribution of random data in the application
fix duplicate timestamp - zero validation and update test
updated parameters for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to clarify sorting behavior for better code readability
replaced multiple instances of checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) across multiple files to improve code clarity and maintain consistent handling of transaction synchronization status
[ iotdb - 4052 ] pipe : fix the bug that pipetaskcoordinator thread could get stick ( # 4524 )
updated DependencyJar logic to conditionally include preinstrumented jars based on system property to enhance flexibility in specifying Android dependencies
change the conditional check from " not Silent " to " if isSilent " to ensure the correct behavior of the execution when silent mode is enabled
added validation checks for default and required attributes on dynamic fields in IndexSchema . java to ensure correct error handling for invalid dynamic fields and improve robustness
remove redundant read repair logic in storageproxy # sendrr
replaced ImmutableSortedSet with Iterables for adding included directories and added a test for including directories in PrebuiltCxxLibrary to streamline the handling of include directories and ensure correct functionality through unit testing
refactor ` AdaptableX509CertSelector ` by initializing start and end dates without default values and introducing flags for sensitivity to enhance clarity and control over sensitive key identifiers and serial numbers
nosql : do n ' t log a warning when buffer size be unknown
added a deprecation annotation to the GuiScreenEvent class to indicate that the feature is outdated and should not be used in future versions
remove unused method ( close # 2576 )
# 455 - enh : add @ serializable to cache ( type ) ( use by ebean - cache )
[ fix # 4067 ] ensure all child of rocketcomponent be set their parent on update .
fix ( javac ) : compiler destroy properly , should be able to cancel the compilation
refactor ` Task ` implementation to use a ` Supplier < V > ` for better flexibility to improve code readability and reduce boilerplate in task execution
wan : fix concurrent modification exception in evictionpolicy .
modified the handling of null paths in Partition . java and updated the Driver instantiation in DDLSemanticAnalyzer . java to ensure robustness by preventing potential NullPointerExceptions when accessing table and partition information
[ scb - 2171 ] minor cleanup : use lambda instead of anonymous class
added a new test class ` FilesTest ` and a method ` delete ` in ` Files . java ` for file deletion functionality to ensure proper file management and error handling in the application
remove unnecessary try - catch block around close ( ) in serversocketadaptor .
update class name check in SSLLogger to use Logger class instead of System class to improve accuracy in class identification for SSL logging
clear the current working directory list before adding it to the list to improve the handling of working directory additions by using a dedicated method
added a null check for the variable ' cn ' in ItemInfo . java and set insets in Workspace . java to ensure proper handling of null values and maintain proper layout adjustments
changed access modifier of generatedEntityDecorator from public to private to restrict access and encapsulate implementation details
removed the URL path from the Java Dtype declaration in SimplePostTool . java to simplify the configuration by ensuring only one module is loaded at runtime
apps - 2853 add unit test for max / min command ( touch & web )
updated WebSocket client container initialization and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer classes to improve thread management and ensure proper cleanup of the client container
change the conditional check for ' type ' to ensure ' type ' is null and ' openWithApplication ' is also verified to improve code logic to handle cases where ' type ' is null and ensure ' type ' is always present
ensure we clean up the web application context after each test .
added a method to retrieve the search string and updated resource retrieval logic to enhance user experience by allowing dynamic search functionality based on request URI
remove visibility of neutral button on setup dialog to improve user interface by eliminating unnecessary button
[ ds - 4762 ] added query to itemdao . countitems and remove duplicate code .
added quotation for SQL syntax in createTab _ stmt statements and column descriptions to ensure proper SQL syntax for better query execution
add log to checktokenendpoint to catch oauth2exception
refactor multiple classes to improve code organization and clarity to enhance maintainability and readability of the codebase
updated IdentityZone tests to use HTTP method instead of POST method and adjusted subdomain handling to improve test reliability and align with updated API specifications
updated tooltip duration in ExtractionModelFrame and DataBrowser classes , added new tool tip text in SQLConsole , and improved variable substitution in SQL ExpressionProcessor to enhance user experience by providing clearer dismissed notifications and ensuring smoother SQL syntax usage
align unit test withurefire 2.2 . 0
changed exception handling from catching ` Exception ` to ` IOException ` and updated the corresponding exception message to provide a more specific exception type and improve error handling specificity
[ flink - 6713 ] [ datastream ] add flink api annotation to indicate that flink will be mark forcibly fail
[ hotfix ] fix checkstyle violation in streamcepstrumsource
added a check to ensure the index is within the bounds of items to prevent potential index out - of - bounds errors
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure compatibility with the new parsing framework
added confirmation = trueType = NONE to the DebugPaste command to ensure the command is confirmation before executing it
make health endpoint configuration more resilient ( # 9040 )
ticket # 4810 : password error fix : password error message in web
updated import statements and refactored constructor argument handling in GoBinaryDescription . java to improve code organization and leverage immutability for better immutability
updated environment variable retrieval logic to check for null before accessing the logback configuration to improve robustness by ensuring the logback environment is loaded when available
updated RetryListener functionality to use the new RetryListener interface instead of the deprecated RetryListenerSupport class to enhance retry handling capabilities and promote compatibility with the updated RetryListener interface
fix reporting of whole count in ecoometerregistry ( # 498 )
constructor should always clone the contributor object ( # 2516 )
replaced a loop with a do - while loop for appending characters until the StringBuilder length is valid to improve code readability and avoid potential ArrayIndexOutOfBoundsException
refactor the assignment of elements in the Subject class to use a temporary variable to improve code clarity and ensure consistent handling of different types of elements
enhanced exception messages by including the resource URL in IllegalStateException details to improve clarity of error messages for better debugging
bugfix : testmultirendertarget now use pointlight [ ] , not geometry .
added null check for currentProfile and improved client result retrieval in DelegatedAuthenticationClientLogoutAction to enhance stability by preventing potential null pointer exceptions when the client is not found
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
added BigInteger operations for cryptographic operations in KeyStoreManager . java to enhance security by preventing users from invalid key management
change method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` MeshCollisionShape . java ` to improve code clarity by using a more specific method for retrieving indices as list
set ' activiti - 5 ' engine version for bpmn process definition ( # 3227 )
updated velocity property names in SpecificCompiler . java to improve clarity and consistency to enhance code readability and maintainability by ensuring consistent naming conventions
fix getcurrentthread in centrypointsnippets and make the thread attach check more robust
updated GenericUDFMapValues to handle null map values safely in GenericUDFMapValues . java to improve robustness by avoiding null pointer exceptions during map retrieval
corrected the spelling of " interceptor " to " handlerInterceptors " to ensure consistency and accuracy in test naming
added configurable settings for oil well generation rate and spouts in BCEnergyConfig . java and updated OilGenerator . java to utilize these properties to enhance flexibility in oil generation behavior based on user - defined settings
added a check for the existence of a clean directory in ImportContext . java and updated related checks in JobQueue . java to ensure the directory exists and log a warning if it is not set for cleanup operations
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46258 for memoryrealm
removed redundant import statements from CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
8236701 : [ macosx ] zip constant make more consistent with old version of java . zip
refactor newFileSystem methods to enhance file validation and error handling to improve robustness and reliability of file operations in the ZipFileSystemProvider class
fix a typo in a label for the if controller condition in the if controller panel .
jdbc : fix test that be break on jdk 6 .
added Gson @ SerializedName annotations for JSON data fields in ServiceOsSpecific . java to enable proper serialization of JSON data structure for these fields
test : add ability to delete a book file ( without update the database )
doc : replace html entity with html entity for html5 code
fix off - by - one error that prevent ajpprocessor from enter an end of the response message .
fix admin console context leak . smack - 69
replaced the unregisterHandlers method with explicit assignment of MessageConsumer and MessageConsumer to improve clarity and maintainability of the code
added configuration properties for device ID transformation method and enable ID table settings in IoTDBDescriptor to allow configuration of device ID transformation and indexing settings based on system properties
reduced the number of documents in the ExitableDirectoryReaderTest from 2000 to 100 and added a new DelayingSearchComponent class to optimize resource usage and enhance the search functionality with a delayed search
correct the null check condition for the mockTsp variable in TestSignatureInfo . java to ensure the test is validated for a valid access error condition
scriptbuilder : fix a bug in ` p2pkhoutputscript . posesignature ( ) ` , refactored the test to use it .
added support for both " / schema / types / fieldtype " and " / schema / types / fieldType " in the expression to enhance schema functionality by allowing both fieldtype and fieldType configurations
added NullCompleter class and a new test class for completers with options to ensure proper handling of null values and validate the functionality of completers
fixed checkstyle issue due to commit 0b6c540a203453580bb76a0d0a60be292f
[ iotdb - 5656 ] switch sourcepeerid from string to int ( # 6056 )
added functionality to handle file zip uploads in FtpHelper . java to improve file upload handling and ensure proper FTP integration
removed unused imports and added alpha settings for replyButton in TweetFragment . java to improve code clarity and enhance UI appearance
fix unit test that fail on a system w / o timezone difference .
modify the path to be relative to the local filesystem .
remove null usage in settingimpl . subscribers , make initialisation faster
remove unnecessary static init , change error message to illegalargumentexception
replace printStackTrace ( ) method calls with LogUtil . warn ( t ) for exception handling to improve error logging consistency and maintainability
added a check for file existence in the AssetsController and updated related test cases to ensure that the static directory path does not interfere with development mode and verify the proper asset directory handling
[ flink - 10663 ] [ runtime ] make rocksdb backend write write option when the backend be enable .
changed the default format from " value - tag - index " to " value - index " to better reflect the intended display of the value component
updated GraphHopper initialization and adjusted hint settings in MainActivity . java to improve code readability and ensure correct hint settings are applied
feat : enable native secp256k1 and nativealtbn128 pairing precompiled contract by default
corrected the spelling of " DuclsSandboxTest " to " SandboxTest " across multiple files to ensure consistency and accuracy in the test naming convention
camel - 2655 : do not log stack trace in case of cxf message processing failure .
make forwardpropagatetree public to avoid expose error
updated SQL query to include additional parameters for the count ( * ) query to ensure correct aggregation of results based on specified time values
[ mng - 6292 ] improve error message when $ { project . basedir } be not find during profile activation
refactor Style class to improve code readability to enhance maintainability and simplify future updates
added zoom functionality to ShareActivity to enhance user experience by allowing back navigation through the zoom input
added a condition to skip deprecated fields in Json . java to improve handling of deprecated fields during JSON processing
added animation listeners and functionality to manage the visibility of send updates in the LauncherFragment to enhance user experience by providing smoother transitions and hiding animations
[ hotfix ] [ doc ] fix typo in yarn utils class
hive - 23795 : hivesource should provide progressable when write record to vector ( gopal v , review by jesus camacho rodriguez )
[ flink - 32220 ] [ runtime ] fix typo in sourcecoordinatorprovider . java and remove unused import .
fix # 2844 : remove the contribution first when the new one be edit ( # 2846 )
refactor ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and remove the ` @ Component ` annotation to improve code clarity and maintain consistency in naming conventions
added a default value for dPath if it is empty to ensure the application uses the user ' s current directory as a fallback
fix audiosink preference for format without sample rate
log4j2 - 1858 fixed inefficient logic in mapfilter . match ( )
rename VerificationInOrderWithCallsTest . java file to improve clarity and maintain consistency in test naming conventions
updated the angle setting from ` setFromAxis ` to ` setFromAxis ` to ensure the correct angle value is used for quaternion operations
corrected the spelling of " colelction . delim " to " collection . delim " to ensure consistency and accuracy in naming conventions
curator - 476 - add test to ensure that only one listener be establish
fix # 501 the syntax error in documentation generation
added a boolean variable ` mIsOneHandedModeSupported ` and updated its usage throughout the code to improve the handling of one - handed mode support for animations
added onDetachedFromWindow method to manage running tasks to ensure proper cleanup of running tasks when the window is detached
fix the overlooked dictionary support for morfologik and make the filter backward compatible
replaced the count check with a thrown variable to simplify exception handling to improve clarity and maintainability of the test logic
updated the initialization of ` InitializeProjectMessage ` to use an empty string instead of " debug " to improve clarity by removing unnecessary placeholder for project initialization
replaced AtomicReference with AtomicBoolean for preventing lock and isolation level checks to enhance clarity and correctness in handling isolation exceptions
refactor tooltip handling in ComponentTreeRenderer to streamline tooltip text application to improve code readability and maintainability by consolidating tooltip logic
increase zipkin test timeout for slow machine
add username and password configuration to deviantart , fixes # 170
removed the KNOWN _ GOOGLE _ SIGNATURES array and replaced it with constants for Google signed packages to streamline the code and improve readability by replacing hardcoded constants with named constants
fix compile error from minimise importdirsolveallturtletest
add a method to notify window state changes in WWindowPeer . java to improve event handling for window state transitions and ensure accurate logging
add email description to render result ( # 3705 )
fix breakage in userdata . removerange ( ) by use data . remove ( sel )
updated language handling in ` getISO3Language ( ) ` method and added validation in ` LocaleTest . java ` to ensure correct language code is used for different locales and improve error handling
refactor ChangeLogParser usage and improve UpdateVisitor creation to enhance code readability and maintainability by using dedicated methods for creation
added a check to return early if the screen pinning is active to improve performance by avoiding unnecessary processing when the screen pinning is active
added functionality to set and retrieve no chart data text in the Chart class to improve user experience by providing customizable text instead of a hardcoded value
httpserverresponse handling : guard against race condition .
nettyresponse fix - ensure sslhandler be always available for write chunkedinput / chunkedoutput
add http header to test case to ensure that they be different from the same http protocol
fixed - rlocalcachedmap . getkey ( ) and rlocalcachedmap . getvalues ( ) method do n ' t call cache method . # 3850
camel - 4329 : fixed npe in jpacomponent when use jpa to auto initialise the component .
replace ` fallSpeed ` with ` jumpSpeed ` in ` PhysicsCharacter . java ` to ensure consistency in variable assignment
added a condition to check if reparsedFunction is null alongside the existing syntax extensions check to ensure the function is only processed when reparsedFunction is not set
updated logger variable names and improved error handling in BitstampPusherService . java to enhance code readability and maintain consistency with standard naming conventions
add way to construct old segment upload endpoint ( # 3343 )
updated the method call to use ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to improve the functionality by allowing filtering during the database query execution
camel - 5372 : camel - core - languages should detect if a predicate should throw an exception .
bound the alpha value of the RecentsView ' s alpha variable to ensure the alpha value stays within valid limits
fix manifest reversion serialization issue on window
refactor DataSyncConfiguration class to improve synchronization logic to enhance performance and maintainability of data sync operations
added JavaSnippetRepository import and initialization in JavaLanguageServer . java to ensure proper integration of Java snippet repositories for improved functionality
refactor the condition for updating sums in StarTreeRecordStoreCircularBufferImpl . java to include a loop for all timeBuckets to improve efficiency by reducing redundant calls to updateSums
[ java ] redirect to storage . googleapis . com instead of downloads / list
camel - 9147 : use preparedstatement . execute ( ) in camel - pgevent , instead of separate sql query .
fix for tika - 1435 : upgrade rome to 1.5 contribute by johannes mockenhaupt < git @ jotomo . de > . this close # 16 .
hbase - 27891 fix transfercompletionhandler to honor ' content - length ' header
modified the Dialog class to improve dialog behavior to enhance user experience by providing better responsiveness during dialog operations
removed the constructor from the EnhancedRuntimeException class to simplify the class initialization for better code maintainability
fix for intermittent ci failure on macosx
camel - 14263 : remove camel - event - admin from camel - karaf dsl ( # 5304 )
fix bytearray . compare to align with jdk8
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve touch event handling to prevent erroneous input interactions
camel - restlet : do not start restlet service when not accessible ( # 6770 )
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method signature to simplify method signature by eliminating unnecessary parameters
move com . hazelcast . test . modulepath to com . hazelcast . test . modulepath
updated the formatting of the ` getCompiler ` method and added a method to retrieve source directories in ` JavaServerConfiguration ` to improve code readability and enhance configuration validation
updated the menu item from menu _ open _ web to menu _ mute _ hashtags and removed the MENU _ OPEN _ WEB menu option to streamline the user experience by simplifying the menu item handling
updated method names and assertions to clarify their purpose to improve code readability and maintainability by using more precise terminology
[ 1.19 ] fix undefined position in / plot , close # 1914
[ iotdb - 2982 ] rootcause - add partial insert check if data type do not exist ( # 6402 )
removed extraneous quotation marks from the end of a method to correct syntax and ensure proper compilation
[ hotfix ] [ runtime ] remove mailboxexecutor from abstractstreamoperator factory
hbase - 26962 removetest add ` ` table state in meta ' ' exception ( # 5301 )
replaced method reference to meter . getId ( ) with method reference and updated error message formatting to enhance code readability and clarify the output by adding additional characters
fix blockjunit4classrunner make it always instantiate the testclass
updated the data handler call from remoteItems to lastTimeData to ensure the correct data is referenced for the delete operation
adjusted the calculation for width and padding in DeviceProfile . java to ensure accurate layout rendering by accounting for padding in app display
[ flink - 7042 ] [ core ] introduce a constant for the previous dependency in coreoptions .
disambiguate inner class call to doc ( ) for ecj compilation : lucene - 610
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the merging process for the multi - phrase enumeration
hhh - 11552 - hibernate2 . session . close ( ) should return void to avoid npe
updated references in GetLocations . java to improve code organization to enhance readability and maintainability of the code
issue # 1396 : do not print stacktraces to stderr
remove jdk5 build after upgrade to jdk8
replaced Activity with AppCompatActivity in GeneratePubkeyActivity to ensure compatibility with newer Android features and support libraries
ruby flavor : fix string indexoutofboundsexception when handle repeat
changed log level from warning to debug for better logging in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to improve logging granularity and ensure credentials are only included if they are valid
remove the cache from the nio2 endpoint , since there be no need to do any cache for those channel .
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties and update cityDatabase and countryDatabase methods to improve flexibility and simplify code by using resources instead of properties
[ # 7598 ] instructorfeedbackresultspageuitest : switch to htmlunit test helper ( # 7598 )
updated the method ` useEncodedQualifierListOptimization ` to include a ` Scan ` parameter to enhance control over the use of encoded qualifiers based on scan capabilities
approvalcontrollerservice : remove unnecessary public keyword from method
added a download state management event in FileDownloader . java to ensure that notifications are cleared when a download is completed successfully
modified method calls in TaskbarDragLayerController and AbstractFloatingView to use getAnyView instead of getOpenView to improve clarity and functionality by ensuring all views are open only when needed
updated project version from " 1.0 . 11 " to " 1.0 . 13 " and corrected the chart entry type from " 1.0 . 8 " to " 1.0 . 9 " to reflect the latest release version and ensure compatibility with recent updates
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve clarity and consistency in thread management
updated GsonBuilder class functionality to improve JSON handling to enhance performance and maintainability of JSON parsing
add null check so that we do n ' t have to add a point to the list .
add -- espressohome option to control espresso home location .
doc : remove a confusing sentence from documentation ( # 1892 )
convert deletessionaction to final and remove unnecessary setter
refactor InvalidDocumentStoreApiUageException class name by removing unnecessary space to improve code readability and maintain consistency in naming conventions
modified the initialization of the ` sz ` variable and adjusted the handling of ` result ` in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and ` TestJoin ` to improve code clarity and handle cases where the number of elements is insufficient
added a parameter to triggerMediaScan method in FileDownloader . java to enable tracking of media files during the file management process
removed conditional verbosity handling and simplified test result processing in TestRunning . java to streamline the code for better readability and maintainability
fix the issue where the version of gcode be n ' t apply to the entry editor due to the change in the layout manager .
camel - 10663 : camel - aws2 - additional - jaxb component should use utf - 8 encoding by default
refactor JsonElement class to improve code structure to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and modified exception handling in TestBadConfig . java to enhance test configuration management and ensure proper exception handling during test execution
added a method to remove fragments and action bars in GpsMainActivity to ensure proper resource management by removing unused fragments and actions
add ( ) to the spanish token , since they be now parenthesis .
updated the handling of Range . Byte in RemoteMediaHandler and RemoteRawHandler to ensure correct end - of - file calculations when parsing ranges
updated the Gcode file path and enhanced the OpenGL translation logic in the VisualizerCanvas . java to improve file organization and ensure correct rendering of G - code files
added support for new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " in TestBackwardsCompatibility . java to ensure compatibility with the latest software release
updated assertion methods in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java for consistency to ensure correct validation of factory methods in test cases
added a null check for output stage and modified the data assignment based on the query state to ensure proper handling of null output scenarios and maintain data integrity during query execution
use jabref temporary folder to prevent integrity check ( # 4035 )
added import statement for SolrClient and a private map of SolrClient to facilitate the management of Solr clients within the ChaosMonkey class
fix an npe in fileaccessservice when run in dev mode
reformatted the code in NestedRepositoryTreePanel . java for consistency to improve code readability and maintainability
make extensiontypeheader constructor public and enforce validation on non - 127 byte type .
pdfbox - 2852 : remove try / catch block , a suggest by valerybokov
change default behavior of pushon - shutdown to true ( # 4358 )
added a callback mechanism for handling events in reactive state machine to improve error handling and error management in the state machine execution
add a test for verifying that multiple Python executable configurations are set correctly to ensure that the correct execution path is returned for Python interpreter configuration
added a default button to the InitialAccountRegistrationFrame to enhance user experience by allowing customization of the signin button
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN and modified its usage in TezCompiler to control the use of a semi - join branch for map - joins , improving performance
added exception to log when an error occur send the password info for an email
remove reference to reflection from the public api
added a method ` listableCollector ( ) ` to the ` OidcIdTokenClaimCollector ` class and created unit tests for it to improve the handling of JWT claims in the OIDC context
remove private vector2 . center , it be now available for jme3 .
[ issue # 3949 ] fix the logic for the registerandprocessbundleoperation
update SslContextFactory configuration parameters to enhance security and compatibility with latest SSL / TLS standards
# 843 - change max expectations to maxlogentries and maxlogentries default to 5k
updated return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more specific description for the access confirmation process
fix referenceconfig . getclassloader ( ) npe when use consumerclassloaderfilter ( # 9662 )
added parameters for copying and resetting original row height in the ` shiftRows ` method to enhance flexibility in row manipulation by allowing dynamic row height adjustment
swapped the positions of the rollover icon and icon assignments in FontImage . java to correct the icon handling and improve code readability
refactor grid translation handling and update related methods in TaskViewUtils , TaskViewSimulator , and RecentsView classes to improve code clarity and maintain consistent grid translation logic
assertion # bylessthan : fix javadoc warning
added null check for currentDateTimeFunction in multiple database classes to prevent potential NullPointerExceptions when accessing the currentDateTimeFunction
added a method to convert anonymous paths in IOUtils and updated log message formatting in Log4jUtils to utilize this method to improve file path handling and enhance logging accuracy with anonymous paths
updated method signatures and added content description handling in DigitalWellBeingToast . java and TaskView . java to enhance functionality by providing additional parameters for task descriptions and improving content description display
inspire by # 1807 . fix potential issue with catalogtracker timeout .
modified LineNumberTagAggregator and TestDominance classes to improve code clarity and maintainability
fix nullpointerexception when save a new item ( # 3390 )
added a test method for fetching post details and modified import statements in BidirectionalOneToOneNPlusOneTest . java to enhance testing capabilities for Hibernate ' s functionality and ensure proper dependencies
remove extra empty screen from the workspace and adjust the starting index based on the screens state to improve user experience by ensuring extra screens are removed only when available
updated initialization of baseDerivedRefs and removed redundant addAll calls in MarkBasePointersPhase . java , and added null check in IndexedValueMap . java to improve performance by pre - allocating immutable collections and ensure null safety for values
changed string delimiters from single quotes to double quotes in GoogleLineChart and GooglePieChart classes to ensure proper formatting of string values in charts
refactor batch waiting logic in SendingAccountor . java to improve clarity and ensure proper handling of interrupted exceptions
hbase - 9566 add position to walprettyprinter ( james kinley via zshao )
updated the port number in the NettyTransceiver instantiation from 1 to 0 to ensure proper handling of a timeout during connection attempts
refactor SimpleReport to sort events before generating a report to improve the accuracy of event reporting by ensuring the order of events are processed
log4j2 - 1205 - csv logger should support double quote in description
fix broken test ; add conll - 2012 to the model file
iq : fix iqhandlersenderer and iq router for remote server . jm - 592
remove @ jniimpl annotation , since it be not generate with jdk1.8
updated Fetcher2 . java to simplify the calculation of the last variable and standardize boolean settings to improve code readability and maintainability by using enum constants instead of string literals
added a condition to exclude " dolbyvision " format from ID checks in FFMpegVideo . java to ensure correct handling of video IDs when using Dolbyvision format
updated package references from ` other _ package ` to ` other _ package2 ` in ` AstTests . java ` to ensure test consistency with the new package structure
fix ( worldborder ) : percentage can change to 0.99 % instead of 1
hbase - 27454 fix npe in new getleadergroupscollectionstatus ( )
apps - 2608 remove the caller from the view when it ' s open
updated routing table tests to include instance configurations as needed and simplified resource handling to enhance test reliability by ensuring unique instance configurations are retrieved
changed the access modifier of the FieldAttributes class from final to public to allow access to FieldAttributes from other packages
add test to verify that there be a erroneous maven project .
removed two redundant conditions related to oldProto in PropertyMap . java to simplify the code for better readability and maintainability
simplified the handling of relay collections and updated related methods for controller ID retrieval to improve code readability and maintainability by utilizing modern Java features
replace sessionFactory . close ( ) with session . close ( ) to ensure proper resource management by closing the session object
remove logic for refresh token when prompting for consent
remove debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced the existing extractor method call with a NoopGetter enum to simplify the code by eliminating unnecessary null checks
( chore ) camel - core : fix typo in conditionalonenabledresourcechain
added a condition to check for non - empty child lists in the BarrowmanCalculator class to ensure that the system behaves correctly when there are no child elements available for processing
pdfbox - 2852 : fix call to getfilteredstream , a suggest by valerybokov
fixed intermittent failure of facebook authentication due to null pointer exception on login .
updated the return value in ShadowICU . java and added a test for DatePickerActivity in ShadowICUTest . java to ensure correct skeleton usage and improve test coverage for date picker functionality
remove unnecessary check for device lock in TouchInteractionService to streamline the condition for handling the status bar visibility
cloudstack - 7293 : fixed npe when delete volume with custom disk offering that do not exist ( # 2504 )
fix : make … ( … ) write to channel more robust ( # 1166 )
reformatted code for consistency by removing unnecessary line breaks and simplifying syntax to improve code readability and maintainability
apps - 4643 call drawtext . update ( ) instead of drawtext . updatebybboxresize ( )
change return value from - 1 to 0 to update logic for correct asset existence
cache value of java . util . concurrent . map ( ) should be use for a small speedup
added setOnRefreshListener to UploadListFragment to notifyDataSetChanged when the data set is refreshed
fix argumentprocessor , parserresult , parserresult be n ' t always a path instead of a file .
replaced calls to emitters . items [ i ] with emitters . get ( i ) for better accessibility to enhance code clarity and maintainability by using direct access to emitters
make tomcat work again after change to get and set the service and engine
updated error messages to include a space before the desired file reference to improve clarity of error messages for better user understanding
added a conditional check for playback state to prevent processing when the playback state is not playing
replaced the retrieval of the ServiceComponentDesiredStateEntityPK with a direct ID retrieval to simplify access to the service component desired state data for better efficiency
added a new class ` InnerClassFieldClash ` and updated ` Java2TypeScriptTranslator ` to handle inner class clashes to improve functionality and test coverage for inner class clashes in the translated class
issue # 2748 - add loggingfilter and followredirectfilter a part of the docker profile
replaced direct call to displayChanged with awtUnlock and awtLock for better resource management to ensure thread safety and prevent potential deadlocks during display changes
hhh - 10183 fix test failure on oracle and hana
properly close input stream when zipfile fails
make storeclassfile public so it can be call elsewhere
added a new test class ` TestSortedSetDocValues ` and modified the assertion in ` SingletonSortedSetDocValues ` to allow missing ordinal values and improve test coverage for missing or invalid values
[ javavm ] fix failure when start a running task and throw exception
added conditions to check for specific line endings in LineReaderImpl to ensure proper handling of multi - line input strings
replaced List < String > with Set < String > for multiFetchSourceFiles and related methods to improve the efficiency and simplify the data structure when handling hash codes
oglesshaderrenderer : avoid attempt to set mesh without vertex if not necessary
updated test methods to improve verification handling and added error messages for verification failures to enhance test clarity and ensure proper error reporting for verification failures
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` for deleting temporary files to ensure the deletion process uses the correct folder structure
remove explicit import and add more javadocs to the type system to improve code readability and maintainability .
refactor JsonObject class to improve code readability to enhance maintainability and reduce complexity
modified idle time checks and idle resource handling in HttpConnection and SelectChannelEndPoint to ensure consistent idle time validation and improve connection stability
fix farmland block . cansustainplant not call cansustainplant . close # 2411
added a new table creation and retrieval for SALT _ BUCKETS in QueryDatabaseMetaDataIT . java and modified the query in UpgradeUtil . java to include multi - valued columns to enhance database schema management and ensure correct retrieval of primary keys from the database
modified SimpleDateFormat instantiation to use Locale . US and added a new class B6791927 for cookie validation to ensure consistent date formatting and validate cookie expiration date validation
added multiple calls to ensure resources are properly closed in the DbHelper class to improve resource management and prevent memory leaks
increase the timeout value for processed . poll in batchmessagelistenercontainerintegrationtests
[ gr - 30834 ] add optimization option to economyallocationstage .
fix nullpointerexception when init with save
refactored ObjectMapper initialization to use a static block to improve object mapping flexibility and ensure proper line separator handling
fix window path handling to work with [ \ n ] and [ \ n : ]
added Application initialization and shutdown hook in BaseTest . java while removing redundant Application references in multiple test classes to streamline test setup and ensure proper application shutdown in the tests
[ java ] remove redundant validation for record log .
test : replace groupname with errorgroupname for integration test ( # 2177 )
test ci : remove unnecessary wait
added a private boolean field ` reverseImage ` and updated its initialization from shared preferences to streamline preference handling and improve code readability
updated comparisons in multiple files to use ` equals ` for string comparison to improve code readability and avoid potential null pointer exceptions
mdmmatchlinkservice fail if string - based validation fails ( # 4251 )
updated JUnit test imports and annotations to use JUnit 5 API to improve test structure and adhere to modern testing practices
improve performance of types . indexof ( ) by use a list instead of the manual search
refactored methods in TypeUtil for improved readability to enhance maintainability and ease of understanding
fix zeppelin - 4930 . ensure triggertime be set in alert context .
added a method to handle AbstractMethodError exceptions using reflection in MethodHandleResolver to improve error handling for method invocations by throwing specific exceptions appropriately
camel - 13266 : camel - core - evaluate the expression body of a simple language do not validate the ognl expression .
removed redundant check for empty collections in AbstractParser . java to simplify code logic by assuming empty collections are handled correctly
camel - 16663 : camel - jclouds should use copy to avoid concurrent modification exception
camel - 14056 : camel - example - camel : use hystrix instead of @ ignore for the camel test
add a check for the ACC _ STRICT flag on default methods in the Check . java file to ensure compliance with the expected access level for default methods
[ java ] increase driver timeout for aeron client to avoid race with the driver .
added a new file ` FileExtensions . java ` with various file extension constants to provide a centralized definition of file extensions for better maintainability
replaced ThreadLocalDateFormat with a custom DateFormat instance and updated the format thread local initialization to simplify date formatting handling and improve performance by eliminating unnecessary customizers
8152017 : remove deprecate fasttla refill code and deprecate it in jdk . jdi
added a display name property and modified client identity configuration to utilize it to enhance the flexibility and control over the display display in the application
add earlyterminationexception to all operator ( # 9751 )
fix checkstyle violation ; comment only
fix # 1055 , improve handling of closed connection
fix npe from forgeeventfactory when parent be null , close # 851
wallettool : do not swallow keycrypterexception when stop
deprecate asynccompletionservice in favor of batchbatchprocessingservice
fixed hyphenation memory leak ( thanks to simon steiner for report ) .
add a sleep between stop and reconnect to ensure that the server be fully start before shut down .
move the simplecompositeregistry to the service package so it will be use by simplecompositeregistry in osgi .
update the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED string in ParameterBinder . java to clarify the requirement for the javac flag - parameters for Java 8 +
added a new boolean variable ` providersChanged ` and initialized it to false to reset the state of providers after configuration changes
added a method ` quoteIdentifierTokens ` to handle escaped tokens in token rewrite streams to improve token handling by ensuring proper escaping of special characters in SQL queries
pdfbox - 4892 : avoid npe if the postscript name be null , a suggest by valerybokov
changed the type casting of the loader and updated the type retrieval method in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings during class loading
updated boundary check in Window . java to ensure proper parent context handling to improve accuracy of hit detection within the window ' s boundaries
added null check for appManifest before retrieving its target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator to streamline JSON serialization and deserialization to improve code maintainability and enhance clarity in handling configuration metadata
added userName parameter and related methods to Driver and HiveSemanticAnalyzerHookContext classes to enhance user identification capabilities for better session management
added methods for setting transformer source and input streams in XsltBuilder and updated instantiation in XsltComponent to improve flexibility and maintainability of transformer configuration handling
added HadoopShim integration to ContainerRunnerImpl and TaskRunnerCallable for improved Hadoop compatibility handling to enhance code maintainability by integrating Hadoop shim integration
updated variable assignments for enqueue request and expectedFileSize in ShadowAssetManagerTest . java , and removed redundant variable declarations in ShadowDownloadManagerTest . java to streamline code for better readability and maintainability
fix possible npe if request . getmappingdata ( ) return null
fix logging of empty message ( # 3778 )
updated VM configuration checks to use ` Platform . isDebugBuild ( ) ` instead of accessing system properties to improve code clarity and ensure compatibility with debug builds
refactor MeterStatisticsManager to use a local map for statistics models to improve code organization and reduce dependency on unnecessary operations
removed logging of the configuration file and replaced it with a dynamic resolution of the logback property to improve flexibility in configuration handling for the logback environment
added @ NotNull annotations to various methods and class definitions in several classes to enforce non - nullability of input parameters and improve code clarity
replaced instances of Escaper . BASH _ ESCAPER with Escaper . SHELL _ ESCAPER in multiple files to standardize the command handling by using a more specific Escaper function
close container to avoid leak
[ fix ] [ test ] fix name of testlucene50fieldinfoformat to testlucene60fieldinfoformat
removed unnecessary lines in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate a shield address and invoked it in the RpcApiService class to facilitate the generation of the shield address for the wallet service
changed the return type of readConsoleInput ( ) from byte [ 0 ] to String in JansiWinSysTerminal and JnaWinSysTerminal classes to improve performance by returning an empty string instead of a byte array
update regex patterns and modify the sRunFlavor assignment in TestStabilityRule . java to improve accuracy in matching specific character sets and ensure consistent run flavor assignment
added a condition to limit the number of values in fragments for multi - valued fields in DefaultSolrHighlighter to ensure that the highlighting functionality behaves correctly when a multi - valued field is present
modified ` tryToLogin ` method to accept parameters for URI , username , and password to improve flexibility and usability by allowing dynamic credential handling
updated ` HandlerSceneEntityDrownReq ` and ` PacketSceneEntityDrownRsp ` to handle entities with no fight properties and removed unused imports to improve code clarity and ensure proper handling of entities with no fight properties
minor refactor of to give the code easy to understand
remove unnecessary wrapcollection ( ) call from update ( )
added logging for unsupported currency exceptions in BTCEAdapters . java to improve error handling and provide better logging for currency - related issues
fix for amq - 2346 - only create the subscription with the same name if the subscriber be the same
pdfbox - 2576 : improve default value for average char and spacing tolerance , a suggest by michael klink
modified ` startController ` method to include a tenantIsolation parameter and added new methods for creating brokers and servers to enhance tenant management and ensure proper server connection behavior across tests
simplified the return statement to directly cast the response value to a Map to improve code readability and efficiency by eliminating unnecessary builder pattern
added a condition to check if ` attrs . size ( ) < = 4096 ` to ensure that the size of attributes does not exceed a valid size
refactor IjProject and related classes to use IjProjectConfig instead of BuckConfig and update related methods to improve project configuration management and enhance code readability
corrected the spelling of " Experimental " in the message for compatibility to enhance clarity and accuracy of error reporting
added unit tests for the ` resolveAclsForScott ` method in ` GrantedAuthorityEffectiveAclsResolverTests ` to ensure the correct behavior with user details for the scott resolution
remove dependency on org . github . javaparser . reflectionmodel in javaparyparseradapter . java
added button count management logic to XToolkit . java to ensure proper handling of button states when no buttons are specified
updated import statement for assertEquals from jdk to com . oracle . java to ensure compatibility with the correct library usage
added a new MessagePackFactory class with multiple methods for creating MessagePacker instances to facilitate the creation of MessagePacker instances with specified configurations
add new item tag to item and change biome integration test ( # 6382 )
changed method names from ` present ` to ` draw ` across multiple screen classes to standardize method naming conventions for better readability and maintainability
updated layout logic for horizontal components and refined UIID assignment conditions to improve component rendering responsiveness and ensure proper button UIIDs are used based on horizontal state
remove dependency on doi _ url _ pattern in favor of matcher . match
updated touch handling logic in AndroidInput and AndroidLocklessInput classes to improve clarity and maintainability of multitouch screen detection
[ java ] ensure commit position counter be close when a service be stop .
no effective change - add support for query id generation
fix httpconverterregistrar do n ' t throw configurationexception when the url object be malformed ( # 6022 )
bug 9452 : listcapacity - when the host > 200 the host _ id and storage _ pool _ id start colliding , to workaround that also compart the capacity type .
replaced input stream handling with file length calculation in NRTCachingDirectory . java to improve efficiency by using a more efficient file length retrieval method
lucene - 5207 : refactor j enginecCompiler to make it more closely match the code
avoided synchronization in uit settings - should prevent a lockingexception .
fix the text field to not paint the string if currently the editing be do natively on the platform
[ beam - 10670 ] spannerio : retry on aborted transaction also check for the emulator
remove redundant diamond operator ( < string , byte [ ] > )
modified the type check in ObjectInputStream to use short array instead of double array to ensure correct handling of short arrays during serialization
changed nonce claim retrieval method and improved logging messages in OIDCAuthenticationFilter . java to enhance clarity and consistency in nonce claim validation
DCInputSet . java : added a conditional check for the relationship field type to ensure correct handling of relationship fields in the DCInputSet functionality
added functionality for server slogan in the FileDataStorageManager and updated related classes to enhance logging capabilities and improve code clarity
updated menu item handling logic in DrawerActivity . java to ensure correct tinting of drawable based on menu item state
replaced the failure check with a print statement and an assumption for test execution to improve test output clarity and ensure the test skips execution if a specific exception is not available
do n ' t emit error message when there be no symbol event for project that be miss symbol
fix stringhelpertest : add test case for data 5 - 4
add a warning log when the data provider return an empty array or iterator
fix squid : s1155 - component doc should use collections . emptylist ( ) instead of collections . empty _ list .
bug fix : selection style be n ' t apply to other map
fix restitution parameter pass to physicsrigidbody . setrestitution ( )
added a new file ` AutoFtpActivity . java ` that implements FTP functionality to facilitate automated FTP test feedback through the application
refactor type checking for tableOrColumnNode and add SQL string unescape functionality to improve code clarity and handle string literals more effectively
added methods to retrieve image dimensions and component state , and updated component handling in multiple classes to enhance functionality and flexibility in image rendering and state management
add a new class RemoteExecutionEnabled for handling remote execution events to enable or disable remote execution when remote execution is disabled
pdfbox - 2852 : fix typo , a suggest by valerybokov
updated file reading mechanism to use UTF - 8 encoding for improved compatibility to enhance code reliability by ensuring proper character encoding is used
assertshadowvariablesarenotstated in abstractscoredirector ( fixes # 388 )
hive - 23091 : enable semijoin conversion by default ( gopal v , review by sergey shelukhin )
added logging to warn when it be not an io . netty . buffer . ByteBuf or by default .
replaced the ` removeFile ` method with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated the handling of sync directories in ` FileDisplayActivity . java ` to improve folder management functionality and provide user feedback when the current folder is removed
[ unit test ] fix ( receipt ) : modify pollingtransactionreceivertest
fix schemaregion test and deprecate it
throw exception in case of bad audio format .
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in multiple classes to improve clarity and consistency in notification operations
updated the @ AllArgsConstructor annotation to include the onConstructor parameter for JsonCreator to enable the creation of constructors with a defined JSON mode for better data handling
added a check for SQLFeatureNotSupportedException when creating an index on a view to ensure compatibility with unsupported SQL features and prevent operations on unsupported views
added a new class Website with methods for managing Java net types to facilitate the population of collections from Java networking components in the Populator implementation
added a setup method for setting the default locale in BSFormatterTest . java to ensure consistent locale settings for test cases
add a warning log when a badly detect bad jar file find .
updated the assertion in MultiPartParsingTest to use Matchers for exact match to improve accuracy in verifying string matches against expected values
added checks for single and variable expressions in SimpleExprGenerator . java to ensure proper handling of single and variable expressions during the analysis process
added a volatile boolean flag ` createdVertx ` to the ` VertxComponent ` to ensure that the vertx instance is created only when it is not null
avoid send null node to wfs when save an exist node style .
updated log messages in SynchronizeFolderOperation for clarity and added null checks in FileDisplayActivity to improve error reporting and prevent potential null pointer exceptions
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated related logic in ` CategoryREST ` and ` FeedREST ` to allow entries to be returned regardless of unread status when they are returned
updated resource resolution in TestAnnotationConfiguration and WebAppContextTest to use MavenPaths instead of MavenTestingUtils to improve compatibility and flexibility in managing test resources
[ issue # 3527 ] fix registerserversconsumerscheduler throw exception when execute ( # 3358 )
updated sound playback condition to check for play state to ensure playing only occurs when the sound is not paid
added a new permission for admin area administrators in MainCommand . java and implemented a corresponding permission check in Captions . java to enhance security by restricting access to admin area permissions
replaced ImmutableMap with HashMap for query options and added trace functionality to enhance the flexibility of query options configuration and improve traceability
updated file name comparison logic in ReloadableJava11ParserInputFileObject and Java8ParserInputFileObject to use path . getFileName ( ) . toString ( ) for better readability to improve code clarity and maintainability by simplifying path validation
updated assertions in ResourcesTest to use separate variables for emoji and text to improve code readability and maintainability by consolidating assertions into dedicated variables
8072965 : bring java / lang / stringbuffer / nmtmttoverflowhashbucket . java and nmtmallocwithpardstack . java to illustrate use case
[ flink - 30613 ] [ serializer ] migrate to javaeitherserializersnapshot for backwards compatibility
add -- rotate - address - resolution option to addressresolver conf so that it can be configure through conf .
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and created a test for it to ensure that ` DefaultRockerTemplate ` behaves correctly through unit testing
pdfbox - 4892 : avoid npe if there be no value for the value of a pdnonterminalfield
updated references to " liquibase / parser / core / xml / " to use " www . liquibase . org / xml / ns / dbchangelog " instead of " liquibase / parser / core / xml / " in multiple files to align with the new package structure and ensure compatibility with the new XML namespace
move commonMIMEtypelocator in test to com . oracle . truffle . api . source to avoid split package .
updated the ` RepositoryVersionState ` variable from ` INIT ` to ` NOT _ REQUIRED ` across multiple files to ensure the state reflects the current state of the repository
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to enhance the flexibility of schema comparisons by allowing multiple schema comparisons
updated JUnit import from JUnit to TestNG in TestBackwardAnoamlyFunctionUtils . java to ensure compatibility with the new testing framework
added a new file ProgressiveJPEGTest . java to test the progressive JPEG functionality to provide a framework for testing progressive JPEGs in the application
* fixed crash when load ogre model due to change light material
make window native - toolchain target architecture error more user - friendly
added a null and empty check before setting the font size in the JLabel to avoid potential NullPointerExceptions when the text is empty
update readVarInt ( ) to reduce integer division by 1 to ensure proper handling of larger integer values
updated PushUtils class to be final and added a private constructor to prevent instantiation and ensure singleton instances are not needed
[ # 1043 ] rocketpanel . setlength ( curconfig ) should directly set the length .
removed unnecessary casting of MockDirectoryWrapper when setting the virus scanner to false to simplify code by eliminating unnecessary type casting
updated the file path in the componentPresetDao . load method to include a query parameter to enhance flexibility in specifying preset files
modified accessibility announcement logic and updated object array usage across multiple classes to ensure correct handling of animations and improve compatibility with newer Android versions
updated Node initialization to use RefreshTask instead of Args for node ID retrieval to improve node management by leveraging the new refresh mechanism for better synchronization
remove check for pmd 1.3 and 1.5 target , add test
test : remove powermock from quotaresponsebuilderimpltest ( # 2513 )
added error and error stream functionality to TestSchemaToolCatalogOps . java to improve error handling and output stream management for better debugging
hbase - 27455 fix build after cherry - picks ( # 4823 )
added RepositoryMetadata parameter to MongoQueryMethod and its instantiation in MongoRepositoryFactoryBean to enhance query capabilities by allowing additional metadata handling
the entityresolver class be now a wrapper of entityresolver2 to allow configuration of the modular parser ' s classpath
updated import statements and changed references in MetaDataEndpointImpl . java to streamline the removal of unused imports and improve code clarity
updated ALLOWED _ REPEATED _ DELOCKS from 5 to 10 and introduced deadlockRetryInterval for improved deadlock handling to increase the number of attempts to retry transactions and ensure proper handling of deadlocks
updated variable names for clarity and consistency in BarChartActivity . java and LineChartActivity1 . java to enhance code readability and maintainability by using a consistent naming convention
added methods to check if a character is printable and valid for given names to improve character validation and prevent errors related to special characters in the console
rename method ` in ` to ` using ` for clarity and consistency
[ mng - 7390 ] . improve maven plugin output . defaultprojectbuilder be to process plugins first .
fix potential integer overflow when read stats
test : make integration test work on circleci
changed return value from " STUB " to null in ModeledConnectionRecord and ActiveConnectionRecord , and added remoteHost handling in AuthenticatedUser to ensure proper handling of connection records and improve remote host retrieval
fix bug sf # 646193 - admin button do n ' t work by default
refactor ThreadPoolExecutor initialization to use AtomicInteger for longCompactions and shortCompactions to improve thread management by associating thread counters with the unique identifier
update package name retrieval to use resources instead of application to improve flexibility and maintainability of the application
refactor Near . java to utilize a dedicated method for retrieving players in plots to improve code readability and maintainability by centralizing visibility logic for players in the plot
refactor multiple classes including AndroidManifest , ResName , ResName , ShadowMediaPlayer , and ShadowActivity to improve code organization and maintainability
refactor MlibOpsTest to improve test clarity and organization to enhance maintainability and readability of the test code
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant for better maintainability to improve code readability and facilitate future updates to the constant
corrected the attribute name from " referencedContainer " to " referenceddContainer " in SchemeGenerator and added a new test for the expected properties in SchemeGeneratorTest to ensure consistency in attribute naming and validate the expected behavior of buildable references in the code
always generate a base64 key / initialization vector ( # 3997 )
[ test ] add stability annotation for workprofiletest
removed a check for bucketing version in TezCompiler . java to streamline compilation process by excluding unnecessary checks for bucketing version
replaced ` setCursorPosition ` method call with ` input . setCursorPosition ` to ensure consistent cursor position handling from the input object
changed ` LockFreeBucket ` to extend abstract classes and added a new class ` LockFreeBucket _ FinalFields _ CacheLinePadding ` to enhance flexibility in time meter handling for different caching mechanisms
nodetool statistic probe now add it to output a list of active thread pool stats
updated bitrate setting to use user preferences instead of default values to improve bitrate storage efficiency by considering user preferences
updated ZipkinHttpSpanExtractor and added new utility methods for handling trace and span IDs to improve code clarity and ensure proper handling of span debugging conditions
filter out bsq swap account when create / duplicate offer
remove unneeded reflection call in fluttercompletioncontributor . geticon ( ) ( # 4666 )
added a line to set the project in the filesystem to include new project settings for better management
added ProjectFilesystem parameter to JsBundle and related classes to allow passing the root path for build steps in the build process
updated multiple Java files related to envelope and databinding functionality to enhance code organization and improve maintainability of the data handling components
updated MetricsDSLContext . java for improved metrics handling to enhance performance and maintainability of metrics management
refactor VersionBuckConfig to remove VersionConfig interface and use ImmutableSet for universes to simplify the code structure and improve readability by utilizing ImmutableSet for better performance
added error handling around the bindShadowClass method call to improve robustness by catching potential TypeNotPresentException during shadow class binding
changed the access modifier of the validateTypes method from static to public and updated the exception message from AST to LST to allow access to the method from other classes and improve error reporting clarity
fix : update gapic - generator - java with mock service generation fix ( # 1249 )
added SLF4J logger imports and initialized a static logger in SimulationStatus . java to enhance logging capabilities for better debugging and tracking of simulation status events
update VERSION _ POSITION _ Y and Font size from 138 to 150 and change the font size to 14 in the Splash . java file to ensure proper alignment and styling for the application
added runLater call to NotificationImpl instantiation in UserInterfaceComponentImpl . java to ensure that notifications are added on the Event Dispatch Thread to maintain thread safety
updated the mocking behavior in the ReturnsElementsOf class to ensure proper instantiation of expected elements from mock objects
updated error message for non - string partition columns to be more concise to improve clarity and maintain consistency in error reporting
added a test method for verifying line file documentation in BaseStoredFieldsFormatTestCase . java to ensure that stored fields are correctly indexed and stored in the index
added a method to retrieve the version code from the MainApp class and updated references in FeatureList and WhatsNewActivity to improve code organization and maintainability by centralizing version code retrieval
camel - 9040 : bean component should detect method invocation on type = string and inputstream be not ambiguity .
updated assertions from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamParserTest ` to ensure the test verifies the correct retrieval of submitted file names
added new constructors and conditions to handle buffer disposal logic in IndexBufferObject and VertexBufferObjectWithVAO to enhance buffer management and ensure proper resource disposal based on the success of buffer operations
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through the login form
refactor JerseyClientConfiguration class for improved clarity and organization to enhance maintainability and readability of the code
move characterstreamreadingmessagesource and characterstreamwritermessagethreaders from ' . class ' to ' package ' to avoid tangle .
updated print statements to use ' o ' instead of ' s ' and changed return type to List . of in multiple files to improve code clarity and correct type handling logic
fix aioobe from empty column and row
added ` @ Deprecated ` annotations and implemented ` AutoCloseable ` interface in ` GenericContainer ` for container command customization to signal that these commands are outdated and should no longer be used in future development
[ java ] change log level to error and use throw configurationexception directly .
added support for handling a schemapattern option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database connection flexibility by allowing the specification of a schemapattern if available
return empty byte array instead of null , for the null session id
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve clarity and ensure proper handling of bitmap dimensions
updated Base64 . java file to improve encoding handling to enhance compatibility with diverse encoding standards
[ gr - 38761 ] fix handling of fallback value for llvm .
jasonleyba : suppress more test on the iphone for unimplemented feature .
modified FlowBuilder and FlowJobBuilderTests files to improve functionality and maintainability of the code
changed the resource handling in AttributeResource to use a ID instead of a ResName class and modified the constructor accordingly to streamline resource identification and improve clarity in resource representation
upgrade docker version use for ssl
fix junit test failure ( # 12594 )
added a loop to handle type variable resolution in ` mmm Attr . java ` and created a new class ` T6450290 . java ` with generic classes to improve type safety and demonstrate generic usage in generics
[ debug ] add a logging switch to switch the log level .
added logging for package removal and improved method signatures for better usability to enhance debugging capabilities and maintain code consistency
added methods to handle all file options in FileActivity and FileDisplayActivity to enhance user experience by providing a unified way to restarting and navigating back to the root screen
phoenix - 901 deprecate mutationoperationgroup . forEachOperation and add hasMatching ( ) and use use ( ) instead
modify the calculation of numPredictiveAppCols based on device type to ensure numPredictiveAppCols is used only for non - phone devices
updated StringUtils to initialize the value as a string using UTF - 8 encoding to ensure proper handling of character encoding in the input string
added RequestMatchers class and its tests to provide configurable request matching functionalities to enhance security and flexibility of request matching logic
ggb - 515 bug fix : allow drag drop - down to create input box
adjust position calculations for ProgressBar to account for background height and width to ensure correct rendering of background elements within the ProgressBar
[ native ] fix native - based query runner with json definition
changed fields in BruteArgumentMoverHandle to be final and modified the permuteArgs method call to be passed as parameters to enhance immutability and allow for dynamic argument handling
added a condition to check for an invalid state in the gesture handling logic to ensure that gesture handling does not proceed if the state handler is invalidated
updated layout metrics to accommodate different screen orientations to improve layout accuracy and responsiveness for landscape cells
added a condition to check if the redir is a specific file before processing the robots . txt file to ensure that only robots . txt files are processed in the URL validation
fix icon for call hierarchies , on macosx
fix ` ` continue ' ' and ` ` return ' ' button in advanced game setup screen
added a check for zero in the UDFOPDivide class and created a corresponding test class to ensure correct handling of zero values in UDFOPDivide function
refactor code for better readability and formatting in FlowJob and StopAndRestartFailedJobParserTests to enhance code maintainability and adhere to style guidelines
replaced the ` filterProcessesUrl ` property with a ` FilterProcessUrlRequestMatcher ` definition in ` FormLoginBeanDefinitionParser ` and ` LogoutFilter ` to use a bean definition for improved configuration to enhance flexibility in matching authentication configurations during login and logout operations
added onDestroy method to unbind the upload service in ShareActivity and ContributionsActivity to ensure proper cleanup of resources when the activity is destroyed
corrected the variable name from ` thumbNail ` to ` thumbnail ` for consistency to improve code readability and maintainability by using a more descriptive variable name
refactor multiple Java classes for improved consistency and clarity to enhance maintainability and readability of the codebase
added a request timeout configuration using the RaftServerConfigKeys class to ensure the RPC request timeout is properly set based on the current timeout settings
updated logging level from error to debug for time index degrade failure and modified resource handling in tests to improve debugging visibility and ensure appropriate resource management during runtime
added system properties to the setModelSource method in MavenModuleLoader to allow configuration of system properties for better dependency management
add readiness check metric ( # 6372 )
fixed anime torch not connect to old forge version
added null check before closing the writer resource to prevent potential NullPointerException when writer is not initialized
added a method to retrieve Hive configuration from a specified directory and updated its instantiation in tests to improve configurability and maintainability by centralizing configuration loading logic
added a link to " Muting Users " in the FeaturesActivity to provide users with a corresponding link for functionality
added initialization for using direct method handle with a default value of false to disable direct method handle functionality in the reflection implementation
hbase - 7932 use steppingsplitpolicy to shorten memory footprint ( rajesh balamohan review by gopal v )
[ flink - 33343 ] [ yarn ] ensure that the plugins directory exists before download class
updated method calls for retrievingronunciations in BuildTranscriptHMM and TrainerDictionary to improve clarity and maintain consistency in method usage
removed unnecessary newline character from JSON string representation in JsonUtilsTest . java to improve code readability and maintain consistency in formatting
added SQL extra key " id " to TimeLineCursorAdapter and TimelineArrayAdapter , and modified Compose to retrieve NOTIId conditionally to ensure correct tweet identification during composition process
[ issue # 5729 ] add warn log when messagereflator ignore messagelistener .
new ' no class find to analyze ' exception to easy debugging
replaced import of Key class with PublicKey in KeyFetcher . java to ensure compatibility with public key handling in the application
set default value of isIncompatible to true to indicate if the resource is in thecompatible state
updated the method signature of ` createAccount ` to include ` AccountCreateContract ` to ensure that the method accepts a specific contract for account creation functionality
pdfbox - 4892 : avoid npe if range array be empty
http : / / issues . apache . org / activemq / browse / amq - 2840 - fix setpromison cause on consumer
enable off - heap format by default and update version retrieval logic to improve flexibility in handling heap format configurations and enhance version management
truncate the title to a maximum of 2048 characters to ensure the title does not exceed the length of the content
updated JColorChooser to initialize the preview panel directly and improved its repaint logic to enhance stability and ensure the correct preview panel is referenced in the user interface
change log level from info to debug in DefaultBuildExtensionScanner . java to improve log granularity for extensions checking
added a null check for the reusable bitmap before setting options in AndroidTileBitmap . java to avoid potential null pointer exceptions when retrieving bitmaps
added a new method ` getLayoutParams ( ) ` to ` FakeView ` class and an import statement for ` ViewGroup . LayoutParams ` to provide access to layout parameters for enhanced functionality
added a check to prevent IllegalStateException when the Cursor is closed to ensure that an IllegalStateException is thrown only when the session is closed , enhancing error handling
pdfbox - 3615 : avoid classcastexception if / parent be a pdpage
@ ignore a test fail though it take too long to run .
added a private String field ` ts ` along with getter and setter methods in the Message class to store and retrieve the timestamp information associated with the message
[ 3.0 ] standardize w3c exception mapping ( # 9806 )
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
fix legacy parameter not be remove for camel - isochrone ( # 4017 )
updated visibility of test classes by removing the ' public ' access modifier to enhance encapsulation and reduce package - private visibility
extracted the CSRF setting logic into a separate method ` setCSRF ` to improve code readability and reduce duplication
make shadowclassloader bootstrap optional since lombok . launch . packageshader be now use when create a new class loader .
[ zeppelin - 1232 ] support spreadsheet numeric disable feature ( # 2282 )
hive - 22048 : reduce log level of hiveconf ' s default value for per - log id ( # 22049 )
added null checks and controller management logic in Lwjgl3Controller and Lwjgl3ControllerManager to ensure proper connection handling and avoid redundant controller instances
updated ObjectFactory import statements in WeldFactory and WeldFactoryTest to align code with the latest Cucumber library structure
refactor port forwarding validation to use HostDatabase to improve code readability and maintainability by eliminating redundant variable assignments
added a new property ` shouldSnapshotData ` to ` GlobalConfiguration ` and corresponding getter / setter methods to enable configuration of snapshot data behavior based on user settings
updated the file handling logic in SyncedFolderObserver . java to check for null files before scheduling jobs to improve robustness by avoiding potential null pointer exceptions during job execution
add javadoc since to locationmarshaller to be clear
simplified conditions related to touch event handling in StatusBarTouchController . java and updated swipe logic in TouchInteractionService . java to improve code readability and maintainability by removing unnecessary method calls and enhancing gesture state validation
moved the ` VectorReader ` interface from ` VectorReaderImpl ` to ` VectorReader ` and updated related classes to simplify the structure and improve code organization
use org . mockito . Matchers instead of deprecated org . mockito . ArgumentMatchers in test files to enhance code compatibility with newer versions of Mockito
updated the PathSourcePath implementation to use a direct method instead of a supplier for relative path resolution to simplify the code and improve readability by eliminating unnecessary abstraction
updated methods to accept ` RecordReaderConfig ` as a parameter for improved configuration handling to enhance code clarity and maintainability by centralizing configuration management
fix argument extractor to only deal with specialized extractor , and fallback to original argument extractor
cloudstack - 7813 : fix max _ primary _ storage _ for _ account _ and domain limit for zoneid / domain
fix not be able to shift potion menu item when shift - clicking an inventory .
add deprecated option cold _ reads _ to _ omit to clean up the code
stop the leech object to ensure that the leech terminate in the test
[ issue # 3598 ] fix duplicate getmessagecount metric in popmessageprocessor ( # 3598 )
updated KeyboardAddonSettingsFragment . java to improve functionality to enhance user experience by providing better interaction options
updated ShadowDateUtilsTest to include an Ignore annotation to mark the test as ignored due to instability in future development
polish ` ` ensure netty shutdown be enable when use netty driver ' ' '
added ` UpgradeRequest ` and ` UpgradeResponse ` configurations to the ` UpgradeConnection ` and ` JettyTrackingSocket ` classes to enhance WebSocket connection functionality and ensure proper handling of upgrade requests and responses
added a timeout feature to manage connection timeouts in AndroidImplementation . java to enhance server stability by allowing configurable timeout settings
updated methods for retrieving user and team access permissions in GitblitClient . java to enhance security by restricting access to specific permissions based on user and team details
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL parsing and deparsing functions correctly handle quoted cast expressions
updated file verification assertions to differentiate between root directories to ensure correct permissions are checked for writable files based on the operating system
added dynamic properties for thread group and thread per group in FixedThreadExecutor . java to improve configurability and maintainability of thread execution logic
update null check for field in AbstractChangeGenerator . java to ensure field is not null before checking for " catalogname "
updated method signatures to replace ` CasEventListener ` with ` InitializingBean ` in various configuration classes to enhance clarity and consistency with the new event listener implementation
refactored animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and reuse by encapsulating the animation end logic
hbase - 24815 ensure the deflater ' s deflater buffer be clean up when the stream be close .
added a new file ` gsp001 . java ` that tests the retrieval of system properties related to Java Virtual Machine to ensure correctness of system property retrieval in Java TVMTI functionality
do n ' t add a setter for inherited bean , fix # 1641
* cameracontrol be now a direct write to the export to the jme export client - side
refactor PopupNotificationPanel to improve window handling and logging to enhance code readability and maintainability while ensuring proper resource management
7187104 : inference cleanup : remove redundant exception class in infer . java
added a method ` getFeatureValue ( ) ` to return the value of ` featureValue ` to provide access to the feature value for other components
changed the parameter type of the ` after ` method from ` int ` to ` long ` in the ` after ` method to improve the method ' s flexibility to handle larger time values
added JSON properties for onBuild and executionDriver in ContainerConfig and Info classes to enable JSON serialization and deserialization of executionDriver for improved data handling
updated icon setting logic in Toolbar . java to differentiate between RTL and non - RTL targets to enhance user experience by providing a more appropriate icon for different languages
add an option to enable position increments in the stop filter factory
change integration test to use internetaddress for the email test
added a new variable ` mTryShareAgain ` and set it to false to reset the state of sharing after a file operation
( chore ) camel - jansi : determine which jansi native tty name
refactor bandwidth calculation to use a variable for bytes size instead of a local variable to improve code readability and maintainability by clarifying the purpose of the size calculation
replaced direct assertions with Awaitility ' s await mechanism for asynchronous task handling to improve test stability and allow for asynchronous task completion
update easee binding constant to use service url ( # 4892 )
updated read timeout duration in KafkaIOIT . java from 2 seconds to 3 seconds and added a retry setting for startup attempts to improve responsiveness and ensure proper startup behavior during testing
[ issue # 4077 ] fix search for uuid $ id and name in searchresults ( # 4077 )
added SSL context setup and trusting functionality to OkHttp . java to enhance security by ensuring all certificates are accepted for secure connections
updated long click functionality in NavbarButtonsViewController and TaskbarNavButtonController to use a more specific button type to simplify button handling and improve maintainability by simplifying the click handling logic
added a new file ` HyperlinkFormula . java ` to implement a hyperlink formula feature in the HSSFWorkbook class to enhance functionality for formulas and improve data handling consistency
added nullability checks for workingDirectory and adjusted the escapeAsBashString method to ensure workingDirectory is not null before accessing its path to prevent potential NullPointerExceptions
increase asyncappendertest timeout from 1000ms to 2000ms
refactor escapeDatabaseObject method to accept object name as a parameter instead of a table name to enhance flexibility in object naming and support for different object types
demo : fix a bug that cause the rename card to disappear when the select material be select .
added state change test for postKit Kat fields and implemented state management in ShadowDisplay to ensure correct application of display state changes when interacting with different states
[ geot - 6296 ] add a directinvocationservice interface and a test to make it easy to introspect the application .
apps - 3769 fix tabbing issue for x and y
fix : add miss field in pg _ catalog for 9.0
[ hotfix ] avoid npe in queuing without a message ( # 2599 )
modify the method signature and URI handling in FileUtils . java to improve clarity and correctness of URI generation
fix for issue 230 : add logic to start application with jenkins node
updated the HeadersBeanDefinitionParser to use a resolveAttribute method for better attribute resolution to improve code maintainability and ensure correct handling of secure headers
refactor ProtobufLogReader to simplify eof handling and log warning messages to enhance code readability and maintainability by providing clearer warning messages
correctly destroy registry and nacos service when application be destroy
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use SPDY version handling to ensure compatibility with newer SPDY versions for status code management
refactor code for better readability and organization in AuditEvent tests to enhance maintainability and clarity of the test code
fix round error in interpolation . cbrt ( float ) .
fix default path of modded world editor not be able to load correctly . close # 63
refactor code to assign the absolute path of the Android executable to a variable before adding it to the builder to improve code readability and maintainability by reducing redundancy
added assertions to check the correct type of ` PointRangeQuery ` instances to improve the accuracy and correctness of point retrieval logic
hbase - 13057 fix testhfilecleaner test failure on window ( branch - 2 )
added a conditional check to update the file name before setting the download file label in ReceiveFileConversationComponent . java to ensure the file name is only displayed when it differs from the transfer request filename
runclear : do not throw exception in jedisclustercommand # execute
[ flink - 6372 ] [ stream ] set default chain strategy toWAYS for RowTimeMiniBatchAssginerOperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to improve URL handling by utilizing the Path - based parsing mechanism
hive - 23714 : optimize qmap : : put ( string ) and hashmap ( int ) , add benchmark ( # 3101 )
add a new HashMap < > ( ) for G _ SCH _ B in HybridPlotWorld to store the G _ SCH _ B data structure for further use
added checks for empty fields and introduced a new method to convert get methods to identifiers to improve handling of identifiers and maintain consistent naming conventions
fix for # 3396 ( autocreate slider for angle : now draw correctly )
added configuration options for TCP keep - alive and read socket timeout in HiveServer and updated TServerTransport initialization in HiveServer to improve server stability by allowing configurable timeouts and TCP keep - alive settings
change method name from ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve clarity and consistency in naming conventions
# 679 - tidy up . remove unnecessary logging of sql
remove classnotfoundexception from realtime segment relocator ( # 4354 )
createvpc : do n ' t always start the vpc if it fail to start the vpc ( # 3995 )
updated the calculation of windowAlpha in WindowTransformSwipeHandler . java and added a condition in FloatingIconView . java to improve stability by ensuring the progress values are properly constrained and valid
update error message to reference 4.0 schema in securityNamespaceHandler . java to ensure users update the schema definitions for compatibility with Spring Security 4.0
refactor assertions in multiple classes to improve readability and maintainability to enhance code clarity by eliminating redundant checks
make instance field final to improve thread safety
hive - 23062 : fix npe in hive ' s basic query api ( zoltan haindrich review by ashutosh chauhan )
update the UTF - 8 string matching in LogMessageWaitStrategy to include a parameterized pattern to enhance the accuracy of the regex match in log message processing
replaced multiple logger calls with direct method calls for better readability to improve code maintainability and reduce redundancy
fix the deleted shard to work w / o data integrity
[ netbeans - 4294 ] [ java ] add 17 - preview language handler
make fileappenderresiliencetest more tolerant , add code wait for compression job in timebasedrollingpolicy
[ gr - 39967 ] make sure that volatilereadnode . hasonlyusagesoftype ( memory ) be n ' t null .
added a method to retrieve an unmodifiable list of steps and adjusted spacing in the getStep method to improve code readability and maintain consistent formatting
removed unused fromBase58 and toBase58 fields and adjusted the error message format in TronJsonRpc . java to streamline code and ensure consistent error handling for improved readability and maintainability
replaced direct instantiation of CurrencyPair with a variable for better readability to improve code clarity and maintainability
fix longtasktimer and add test
# ! [ euphoria - flink ] fix runtimeexception due to hashpartitioner deprecation
refactor color handling in HostEditorActivity to use CharSequence for better efficiency to improve code maintainability and reduce resource overhead when accessing preferences
replaced IncompatibleDatabaseHandler with DatabaseVersionHandler and refactored related methods for better clarity to improve code readability and maintainability by using a more descriptive class name
added a constant for maximum tweet size and updated the condition in the ExpansionViewHelper class to limit the number of tweets in the conversation process to 50
http : / / issues . apache . org / jira / browse / amq - 3872 - increase timeout for jdk8 +
fix : fix issue where delete tail page be persist on full acked queue
fix : checkstyle issue in glowserver . java ( # 722 )
[ java ] fix a bug that could cause arrayindexoutofboundsexception when read large file .
added import statement for DataOutputStream in GdxSetup . java to enable proper handling of output stream during GDX setup
camel - 10560 , add getsubmittedfilename ( ) into partdatasource to retrieve file name specify by the client
added markReadForLoad ( ) method to LauncherFragment . java to enable marking of files as read for loading functionality
instrument should skip instrument the jar of a class that fail - fast
added a method to check for spill possibility in HashAggTemplate to handle potential out - of - memory issues during partition flushing
replaced calls to ` getDocStoreSegment ( ) ` with a direct reference to ` dsName ` in the ` IndexWriter . java ` file to improve code readability and maintainability by reducing method calls
added a default name ID format constant and its usage in the SamlProfileSamlNameIdBuilder class to ensure supported name formats are consistently applied when no supported name formats are provided
added error handling for password change aborted in ChangePasswordPage . java to improve user experience by ensuring the password change process is properly aborted
added a semicolon to stop braces in the Deadlock2 class to ensure proper syntax and prevent potential compilation issues
expose the maxidletime property to the nio receiver , so it can be configure with jmx .
deleted the FontScalingTest . java file which implemented a font size comparison between Metal and system look - and - feel
[ rrd4j ] fix nullpointerexception if end date be null ( # 7372 )
added a check for non - negative numVectors in GenericUDAFComputeStats . java to prevent further processing when there is no vector to process
test : migrate executablereftest to junit 5 ( # 4463 )
added null checks before setting view and setGlassPane in JLayer . java and created a new bug6994419 . java file to improve code robustness by ensuring that setView and setGlassPane are only set when they are not null
camel - 17853 : fixed issue with use wiretap in the dsl . thanks to benjamin graf for the patch .
refactor : make collectionadminrequest # action protect to allow for override
added a topn option validator and implemented the matching method in PushLimitToTopN class to enable topn planner functionality for improved optimization
[ java ] do not use the old aeron directory name in log test to avoid conflict with log . properties .
fixed - batch in executionmode . redis _ write _ notify and executionmode . redis _ read _ notify throw npe . # 2809
replaced InputStream with a URL for accessing Hive configuration variables and simplified the method signature to improve performance and readability by using a temporary URL instead of a streamlined input stream
fix model loader accept device filter for createfrommodel ( ) ( # 1588 )
removed unused menu inflation methods in SimulationViewer . java to streamline the code and improve maintainability by eliminating unnecessary complexity
pdfbox - 4071 : fix typo find by codespell on fossies . org
modified the path for the hawtio home directory to use a configurable directory to ensure that the home directory is always available for use
space : return single space when comment on empty space .
changed fields in multiple classes to be volatile to ensure thread safety for mutable shared state
added printStackTrace ( ) method to Throwable for error handling to enhance debugging capabilities when exceptions occur
move customitemdroptest to core , a it be not consistent with the others .
added checks for partition existence in DDLTask and introduced conditional logic in DDLSemanticAnalyzer to improve partition management and ensure proper handling of ifNotExists conditions
volume upload : fix the post body parse logic
[ java ] remove invalid control request id from archive client response .
update wfs wfs capabilitiestransformer to allow spatial operator ( within )
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with AwaitFix to address a known bug related to SOLR - 2161
added conditions to check if the position is valid and lastValid remaining correctly in the Http11InputBuffer class to improve error handling and ensure proper parsing of requests
[ java ] disablegressexclusive by default for now .
hbase - 28014 enable block cache by default ( # 4774 )
added functionality to track the number of running records and updated the context push logic to improve tracking of processing run records for better debugging and tracking
added logic to filter out specific year categories from mergedItems to ensure that only valid year categories are processed in the application
updated drawColor calls to use direct 0 instead of a hex constant in CacheableTextView , CellLayout , and HolographicOutlineHelper to simplify color drawing by removing unnecessary hex prefix
throw an exception when use mesh . render ( ) with opengl 2.0
fix background process so it work in gui mode
updated methods to accept database names and modified the UnescapedName method to include a parameter to improve clarity and flexibility in handling database names during insert operations
fix connection timeout to 1 min and change count to final .
added multiple assertions to the TestHiveAggregationQueries class to validate the correctness of the approx _ percentile function in the order by clause
updated the default idle and write timeout duration constants in WebSocketConstants . java and modified timeout handling in WebSocketChannel . java to improve clarity and ensure consistent handling of idle and write timeouts across different WebSocket configurations
replace account . name with user . toplatformaccount in FileDetailSharingFragment . java to improve accuracy in obtaining share data for file sharing
updated type declarations and variable handling in Inet6Address . java for clarity to improve code readability and ensure type safety in handling InetAddress instances
refactor playback control logic by replacing the disableView method with a setButtonEnabled method and simplifying view enabling logic to improve code readability and maintainability by consolidating button enabling logic
updated session handling to check the session ID before verifying the presence of a token to improve accuracy in session management by ensuring only valid session IDs are considered for close sessions
updated method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to ensure that the exported class paths are correctly processed instead of appended
make exception probability default to false ( silent )
modify the color assignment logic for the new plate component based on the state of the icon to ensure correct visual representation when the app is directed to a themed icon
guacamole - 38 : simplify mysqluser . touserwithbLOBs . just in case they be supersede by the generator service .
added " centre " alias to the aliases list in the Middle class to support multiple centre - related aliases for better user experience
added DirectUpload class import and injection method to CommonsApplicationComponent to facilitate dependency injection for managing direct uploads
adjusted spacing settings for left and right axes in BarLineChartBase and adjusted spacing logic in YAxisRenderer to improve chart readability and ensure proper space management for cases
added additional flavors for Java ABI handling in AndroidLibraryDescription . java to enhance functionality by including additional ABI flavors for better source management
added request parameter handling for operation event status type in OnlineHubService and initialized the services list in CompositeLogService to improve service management and ensure proper handling of operation events
fix for # 1790 - export table should add visibility annotation
[ beam - 4206 ] refactor jmsio setup method to be more generic . also add teardown method to test case .
fix fail test : add classpath attribute to process builder
updated the path separator handling in documentLoader . load calls to ensure consistent use of " values " and " res " for Android resources
[ flink - 2379 ] [ table - runtime ] add miss context for dataset . minby ( int ) , improve error message
added JUnit test class annotation to ignore a specific test related to bug b / 243855320
updated the error message handling to escape percentages in the ` ShouldHaveMessage ` class and corresponding test cases to enhance the error message readability and ensure proper formatting of stack traces
fixed - jcache . close ( ) can n ' t close the same cache manager
reduce log level , for already claim exception when close command context
added an empty block to the initialization of ALPNClientConnectionFactory to ensure the connection factory is always available for further use
remove max value limit from entity property ( # 1351 )
check thinghandler initialization before play notification sound uri ( # 2156 )
updated countDownLatch timeout from 500 milliseconds to 5 seconds in multiple test files to allow more time for countdown latch to become available during tests
change log level to debug to resolve issue with effect light type determination on github
bug - id : cs - 19795 : use a fixed thread pool for async - job execution
updated import statements and improved exception message formatting in Reporter . java and ReturnsSmartNulls . java to enhance code readability and maintain consistency in exception handling
updated method signatures in DataGenerator . java to remove unnecessary casting of frame to improve code clarity and reduce casting overhead
updated multiple package - info . java files for consistency in package documentation and organization to enhance clarity and maintainability of the codebase
added a check for empty physical column names before matching the pattern in OrcPageSourceFactory to avoid potential null pointer exceptions when accessing physical column names
added a method call to mix play actions in the Engine class to enhance the functionality of the method for better media processing
refactor JComponent and SynthTextPaneUI classes for better code organization to improve maintainability and readability of the code
use absolute value of firstconfinetopxception so that it occur even if the country ' s orthographic origin be outside the center .
removed redundant checks for presence of leadingIncludePaths in PreprocessorDelegate . java to simplify the validation logic for leadingIncludePaths
( chore ) camel - stringtemplate : fix for npe in check for null value
mondrian : add find / list method ( work in progress )
fix audiosink preference for format without sample rate
bug 66392 : add getformula ( ) and setformula ( ) method to name , and make xssfname final
[ java ] increase scale factor for high dimension test to avoid false positive .
fixed an off - by - one error in the split method of simpletypegt
added unit tests for ` ClassPathXmlJobRegistryContextTests ` to ensure proper functionality of job retrieval in the Spring Batch framework
changed the data type of ` mHistoricTimes ` and related variables from ` float ` to ` long ` in ` MotionPauseDetector . java ` to accommodate larger time values for improved precision in time calculations
camel - 12320 : camel - restlet should use advanced consumer option when set invalid endpoint
camel - 14263 : camel - core - log should use source code generate configurer to avoid reflection configuration .
refactor ChromeTraceBuildListener to encapsulate the creation of ChromeTraceEvent into a dedicated method to improve code readability and maintainability by reducing duplication
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to improve the accuracy of the order management by filtering out irrelevant order statuses
added pixel offset calculations and validation to ensure correct image layout to improve image processing accuracy and handle potential layout errors
replaced the timestamp handling code and improved timestamp initialization to enhance clarity and maintainability of timestamp management
added a check to ensure the resource path ends with a slash in the ContextHandler class and created a test for handling the absence of a real path in WebAppContext to improve path handling and ensure that the application correctly handles paths ending with a slash
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER to improve error handling by providing clearer function naming conventions
fix edit vertical / horizontal scroll in the case of a shift - down
do n ' t set guard stage when caller loop scope be null .
test : migrate sniperprettyprinterjavaxtest to junit 5 ( # 4501 )
refactor URLOutputStream initialization to use try - with - resources and improve exception message assertions to enhance resource management and readability of exception messages
added Entity annotation to Mail class to facilitate entity mapping for email entities
updated the default values of the tablespace configuration from false to true and added additional command instructions for tablespace inclusion to enhance functionality by allowing tablespace options for better user experience
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffer fields for external use
added logic to clear empty values from the container and maintained the field vector map when the file is empty to ensure that empty JSON structures are handled correctly in the scanning process
enhanced failure handling in StringSubject to include custom naming for internal names to improve clarity in failure messages during string comparison
introduced a regex pattern for matching library names in LibUtils . java to improve accuracy in identifying CUDA library names during initialization
updated exception handling to catch ` Exception ` and ` Error ` exceptions in ` JrtJavaBasePackages . java ` and ` PackageHelper . java ` to improve error handling by capturing a broader range of exceptions
hbase - 4877 master should wait for dfs to be write to disk before shut down ( stephen yuan jiang )
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and exception details to improve clarity of error reporting for better debugging
remove duplication in defaultplugincache and add more documentation .
fix issue # 4287 . update mobile indicator on the status change .
delete unused and misleading javadocs ( # 4014 )
added integration test for fetching account information in the BTCE exchange to ensure the PollingAccountService correctly retrieves account info from the BTCE exchange
added mouseWheel method to VDUInput and vt320 classes to handle mouse wheel input and processing to enhance event processing capabilities in the terminal interface
fix library path for native library when need .
# 604 - remove @ columnhstore ... migrate to deploy for 2.2 . 1 - 2
add miss sketchflags metadataindex . pLAYER _ SKIN _ FLAGS ( 10 , humanentity , humanentity . class ) ( # 768 )
updated LoadBalancerWithServiceTests to use SLF4J Logger and changed the service definition method to improve logging capabilities and simplify service configuration handling
[ drools - 732 ] fix nullpointerexception when a member be operate outside of the member .
replaced direct access to system property with AccessController for retrieving OS version to enhance security by ensuring the OS version is accurately retrieved
update file suffix handling in TemplateEngineFreemarker to allow dynamic configuration of the file suffix to enhance flexibility in specifying the file suffix for different templates
updated the calculation of ` value ` in ` SelectMessageQueueByHash . java ` and added unit tests in ` SelectMessageQueueByHashTest . java ` to ensure correct computation of hash code values for message queue selection
added animation callback to fix flicker when close the toolbar panel
modify the binding condition for caret properties in StyledTextAreaVisual . java to ensure caret properties are correctly bound when the hasCaret property is present
update PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to utilize declared platforms from CxxBuckConfig to ensure proper management of platform flavors across different C++ architectures
replaced SimpleParameterAccessor with ParameterAccessor in multiple files to improve parameter handling and align with the new parameter approach
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer . java to avoid potential NullPointerExceptions when passwordAttribute is null
[ netbeans - 5077 ] fixed classcastexception for byte [ ] with default value
updated SSL engine initialization to allow null address and improve host name verification logic to enhance security and ensure correct host name handling during SSL engine creation
updated assertions in TestFSTableDescriptors . java to use assertTrue for cache hit count to enhance clarity and correctness of cache hit validation
simonstewart : fix for delete a cookie on quit
added a boolean flag and modified logic to check if the launcher transition has not been final in AbsSwipeUpHandler . java to ensure the launcher transition state is correctly handled during gesture handling
specify the charset use for normal content in the html and fix the broken link in some case .
modified the IndexReader class to enhance search functionality to improve the performance of document retrieval operations
increased the maximum length of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and simplified path separator handling in several classes to accommodate longer statistics keys and enhance code readability
added a new class ` bug6337518 ` and modified ` comboBox . add ( arrowButton ) ` in ` BasicComboBoxUI . java ` to address bug 6337518 related to arrow button functionality
8175272 : clarify the javadoc of testrandomaccessbuffer . java
refactor UserInfoActivity to improve code readability to enhance maintainability and simplify future updates
added notification for HomeContentProvider changes in multiple service classes to ensure proper updates to the content URI after recent updates
added a sticky pressed flag and modified background invalidation logic in BubbleTextView and Launcher classes to improve user experience by managing the state of the view and ensuring the background is properly handled
updated ` getFallbackResponse ` method to include ` Throwable error ` parameter across multiple classes to enhance error handling by allowing fallback responses to catch specific exceptions
8057551 : let the - d flag dump _ all _ generate class to disk and work outside -- compile - only mode
[ java ] fix null safety issue with tag array access
[ calcite - 2369 ] fix regexp - like pattern match on window
added functionality to set and store the action bar title in the FileActivity and updated the action bar state in FileDisplayActivity to ensure the action bar title is properly updated during configuration changes
fix a bug when pick up the last element of a list in pythondslprojectbuildfileparser ( # 2214 )
cleaner schedule a bit to clarify that it be easy to clean
added partition validation logic for tables and improved error handling in TransactionalValidationListener . java to enhance robustness and validation of partitioned tables during transaction validation
enable polling functionality in SnapPuller . java and modified ReplicationHandler . java to enhance replication handling capabilities and improve code clarity
changed the data type of generatedKey and updated SQL execution method to use long to improve handling of generated keys and ensure correct SQL syntax using long values
simplified the return statement in SimpleReferenceCache . java to improve code readability by eliminating unnecessary variable assignments
improve error message for fail in inline test ( # 1469 )
fix # 837 - webclientfactory should use short keepalive timeout by default ( # 8379 )
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
change catch block to handle Throwable instead of Exception in Dispatcher . java to improve error logging to capture broader range of exceptions
camel - 8253 fixed the unit test error of defaultcxfbinding
added a case ' ~ ' in ClientUtils . java to handle additional character ' ~ ' in output formatting
camel - 16836 - camel - slack : make it easy to configure the consumer delay with java . time . duration .
expand drop list selectively to the player ' s craft pickaxe ( # 4481 )
updated layout size from 4 to 5 in TranscodingTab . java and adjusted the encoded audio passthrough checkbox label to improve layout flexibility and correct label display for audio preferences
added a new file ` bug8057791 . java ` implementing a GUI with list model and selected color to test the handling of a specific UI component with NimbusLookAndFeel
updated the logic for setting translatedSym flags and introduced a new class LambdaInterfaceStaticField to handle static fields more effectively to improve clarity and correctness in lambda method resolution logic
propagate error message when web service be add ( # 5604 )
change the condition from checking if ' to ' is empty to checking if ' to ' is not null to improve null safety and prevent potential NullPointerExceptions
drill - 7934 : fix bug with parquet reader with dictionary type
updated layout calculations in PortraitPagedViewHandler to handle landscape orientation correctly to ensure proper layout behavior for landscape users and improve user experience
added logging aspect and annotation for spring Cloud components to enable unified logging before and after method execution , enhancing monitoring and debugging capabilities
modified the string concatenation in QueuedThreadPool to include a trace parameter to enhance the output ' s readability by adding optional trace information when available
add support for optional implementation . caffeine - cache type .
corrects calculation of reference map in case the target word size be more than the target word size .
refactor TypesafeConfigurator for improved readability to enhance maintainability and reduce technical debt
add a karaf test for camel - graphql to verify the feature
82791944 test / sun / security / rfe2891944 / rfe2891944 . java fails due to bad static assignment
remove url encode for httpclient entry , close # 8145
replaced the unsupportedPlatformTool implementation with a dedicated UnsupportedPlatformTool class to enhance code clarity and encapsulate the unsupported platform tool implementation
updated loopCount calculation to use TimeUnit for better clarity to improve readability and ensure accurate logging of recovery delays
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way to retrieve the size of the map in the application
added reflection - based access control for address manager tests and modified the setUp method to include index initialization to enhance test reliability and ensure proper initialization and initialization for address manager tests
updated layout specifications and row specification in VLCVideo . java to improve video layout consistency and ensure proper layout behavior
rename “ bisq ” to “ bitsquare ” ( # 943 )
updated the AUTHORITY string in HomeContentProvider . java to use the Twitter provider instead of the Talon provider
make the user . xml location configurable from the current . m2 directory
added a call to bind the buffer using GL20 . GL _ ARRAY _ BUFFER to ensure proper binding of buffer handles for graphics rendering
updated ServerHttpSecurity configuration methods to enhance security features and improve request handling
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable the test due to known issues
added default headers management in HttpClientProperties and CasCoreHttpConfiguration to support HTTP header handling in the HTTP client configuration
fix : change password _ not _ valid error message to use exception
deleted the NoOpConfigPathGetter . java file to the class was deemed unnecessary for the current implementation
replaced Codec . base16Decode with Bytes . fromHexString for signing key conversion to improve performance and reduce memory usage during key decoding
updated CSS handling in FloatUtil . java to improve accuracy in floated blocks based on the current style to enhance code clarity and ensure correct rendering of float values
improve javadoc for optaplanner - core class ( # 208 )
[ scb - 837 ] make restutils # getdefaultheaders private and return it a multimap
port fix from 5.0 . x to 5.0 . x for xstream
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to ensure that the job ID is available and valid before proceeding
minor change : replace bigint . compareto with long . compare for good readability .
reduce log level of non - critical http response from error to debug . ( # 1980 )
updated import statements in LegacyAuthenticationHandlerAdapter . java for consistency to improve clarity and maintainability of the import statements
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
fix miss check to ensure only filter be remove from the owner if they be the same public key
added constructor to turn on a double wrap ( ) for jdk input stream . relate to github # 1490
log4j2 - 1342 fix potential resource leak a suggest by michael klink
added a test method for selecting all rows from a view and updated column name handling in the HiveBaseResultSet class to enhance test coverage and ensure consistent formatting of column names
renamed FocusTransitionTest . java to reflect updated functionality to enhance clarity and maintainability of the test code
mow - 1098 fix compile error , due to change in gwt project
hbase - 14315 improve error message for counter stats for source task ( guanghao zhang )
added a null check for the readListener variable in HttpInput . java to ensure that the readListener is properly initialized before use
added color change listener so that color chooser can be select .
add hidden flag to taskhelper to allow hidden option
trun off exponential backoff so that reconnect will happen before the timeout after restart , intermittent failure in hudson
pdfbox - 3017 : release resource a propose by timo boehme
added import statement for DefaultParameterHandler in LanguageDriver . java to enable the use of DefaultParameterHandler for scripting functionality
[ fix ] spill optimization : do not store store if loop depth be below the defined value .
add a new class MicronautAstBuilder to handle groovy script compilation to facilitate testing of groovy code compilation within the project
fix : pgresultset . closeoncompletion ( ) should not be call twice ( # 1611 )
initialize ` serviceAdvisorType ` with ` PYTHON ` instead of null to ensure proper initialization of the service advisor type
replaced the resolver instance with a ThreadLocal < ResolvingDecoder > and updated its usage in a multithreaded environment to improve thread safety and ensure a single resolver is used for multiple threads
change the parameter type of Path constructor from Collection to List and modify the return statement to improve flexibility in handling subpaths and correct the method signature for writing operators
updated the implementation of ` addOutput ` to use a fixed byte array instead of a fixed byte array to improve test reliability and maintainability by using a fixed memory size
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` for setting personalization parameters with specific locale and emailAddress to enhance functionality for setting personalization parameters in the Skein framework
removed redundant break statement in CodeGenerator . java to improve code readability and maintainability
modified scroll method parameters and calculations across multiple classes to simplify gesture handling to improve code clarity and reduce unnecessary complexity
changed the pointer variable from private to public and added reset methods to FlatRecordReader . java to allow external access to the pointer and provide reset functionality for resetting the record position
nifi - 12353 rename contentdigesthistory to bdbcontentdigesthistory for good readability
improve handling of boolean cast expression . fix # 259
fix race condition when remove user from accept list
removed a redundant import statement and added a default value of false to streamline the code for better clarity and functionality
added a method to check if the table is auto - increment and implemented the ` isAutoIncrement ( ) ` method in ` LiquibaseDataType ` to ensure proper handling of auto - increment columns and enforce interface implementation
add default error text to exceptionresponse when internal server fail
updated imports and modified the command line arguments in LocalManagementTest . java to improve performance data handling and ensure compatibility with system properties
replaced addition of currentStatus and boosterStatus with push method calls to ensure correct handling of currentStatus and boosterStatus in the simulation
added a Jjp13SocketConnector to configure the AJP port parameter and updated connectors accordingly to enable flexible port binding for the GitBlit server with a specified port configuration
added type coercion for intersection types in TransTypes . java and created a new class Intersection03 . java for testing to ensure correct handling of compound types and verify the integrity of assertions
changed the class name from EmbeddingTest to EmbeddingITest to reflect the integration of the Embedding algorithm tests
modified the initialization of the toolkit thread to check its status before starting it to improve thread management by ensuring the toolkit thread starts only if it is not needed
add concurrent compression and decrease parallelism for the compress the bundle in parallel .
implement setsurface ( hide ) for window in papplet . create ( ) ( issue # 1152 )
fix test to use getclass name instead of ` ` recordtransformertest ' '
added configuration options for enabling HTTP services for fullNode and solidityNode in CommonParameter and related classes to allow flexible control over HTTP services based on user - defined settings
added a service property and updated the return statement in GoogleCloudFirestoreTicketDocument . java to include it to improve the categorization of tickets by specifying the service within the document
modified the Generate . java file to improve code structure and readability
fix : json _ format ( json ) should return null ' null ' when json parameter be null
updated BadgeRenderer to handle a new condition for DOTS _ ONLY and improved width calculation to enhance readability and maintainability of the badge rendering logic
remove unnecessary ' final ' modifier in freemarkermanager . getconfiguration ( )
camel - 7999 : added unit test to verify that invalid package name generate by the ognl tool
added platform name handling for device Udid retrieval in AppleTest . java and updated SDK declaration in IdbRunTestsStep . java to ensure compatibility with macOS and iphone platforms during tests
updated DefaultHttpClientFilter to log warning messages and modified response handling in tests to improve error logging and ensure proper response handling for forbidden scenarios
refactor the binding and execution of the root script and state saving logic to ensure scripts are correctly initialized and executed during the initialization process
added a TEXT _ BURN flag and modified conditional logic in Utilities . java to differentiate between text painting and line count conditions
added static cleanup method for table and view cleanup in TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database and view instances after tests
added retrieval of parser from parsers using a specified name to improve parser management by centralizing parser access
added a new test method ` fastpath ` and updated formatting in ` BoundedLocalCache ` and ` BoundedLocalCacheTest ` classes to improve cache functionality and ensure correctness of cache operations
updated RawConnection to extend WebSocketConnection and added new methods for asynchronous writing to improve handling of frame byte data and enhance async processing capabilities
added new test methods for asserting multiple assertions in SoftAssertionsPerfTest . java to improve test coverage and ensure accuracy of assertions
added test failure exit codes handling in PythonRunTestsStep and updated ProjectWorkspace to accommodate this change to ensure that both successful and failed test executions do not exit with the expected error code
added handling for multiple runs in GlyphLayout . java to ensure proper indexing of run elements when markupEnabled is false
lucene - 7469 : avoid testbooleanrewrites test failure due to floating - point inaccuracy issue .
fix # 2646 : enum handler registry incorrectly resolve enum class
convert playersocketconnection to client socket connection before send packet counter update
added an initialization check and modified the removal of OnDrawListener in Launcher and LauncherAnimUtils to improve performance by ensuring listeners are only registered once and are removed correctly
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and readability
replaced specific import statements with wildcard imports for MatchStatus and modified a conditional check in ReplicaAssigner to streamline imports and refine the match status validation logic
change the default return value of getBoolean for MEDIAPARSERV2 from false to true to enable the detection of media detection by default
do n ' t output aop proxy for aop method ( fix # 619 )
added assertions and verification for table and partition operations in FolderPermissionBase . java to ensure proper permission management and response handling for newly added tables
fix : publish status for provider where the registration state be not the same a the registration state .
updated the color calculation to adjust the color based on a configurable base color to ensure a more varied color for better variability in color selection
modified the ScriptEngineFactory class implementation to improve performance and maintainability of the scripting engine
updated the image rendering logic in HolographicViewHelper to use original and outline variants to improve rendering quality by ensuring correct bitmaps are applied for different view states
replaced multiple conditional checks for request methods with a single method lookup to improve code readability and handle unsupported request types more gracefully
tagger : add a mechanism to infer the position of a phrase next to the tree instead of rely on the unigramparser
remove unused import to get build to pass
updated class loading logic to incorporate HivePassThroughOutputFormat for improved output format handling to ensure compatibility with Hive PASSTHROGH _ OF _ CLASSNAME and improve class loading mechanism
improve javadocs , since we have eip documentation out of the box
modified the bounds checking logic in DOMBuilder to ensure correct range checking to prevent potential out - of - bounds errors
updated visibility logic for the hierarchical graph and modified edge retrieval methods to enhance accuracy in displaying graph relationships and improve user feedback
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , fixed c
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to provide a demonstration of default methods in interfaces
add property placeholder support to defaultkeyselector . thanks to michael kumar for the patch .
replaced the handling of ThreadDeath exceptions by directly throwing the throw statement instead of checking its type to simplify the code and improve readability when handling exceptions
renamed multiple classes related to certificate management to improve clarity and consistency in naming conventions
updated JGit version from " 1.0 . 0 " to " 1.1 . 0 " and reorganized jars to ensure compatibility with the latest release and improve project structure
updated HttpClientIntroductionAdvice to use the clientKey if the path is not provided to ensure the clientKey always has a valid client ID and improve code clarity
introduced transformerparser interface to allow the transformer to be use via the transformereventlistener interface .
updated ` BACK _ FACTOR ` to ` REWIND _ TIME ` and modified duration comparison logic to improve timing accuracy and enhance code readability
added a method isScrollWheeling ( ) to CodenameOneImplementation and JavaSEPort , and modified the button event handling logic to ensure that scroll wheeling is not triggered when it is active
updated usage string formatting in UtilityCommands and modified usage method in DocumentationPrinter to ensure consistency in usage output and improve clarity of command usage information
fix wrong attribute name ( collection . map = > collection . map )
removed redundant setter methods for sequence and unsequence files in CrossSpaceCompactionResource . java to streamline code by eliminating redundant methods
polish ` ` remove redundant @ override ' ' annotation in observation . java
no need to sync rule when rule auto rebuild ( # 573 )
fix a synchronization issue . when two thread resolve sootfieldrefs with phantom field , this could lead to a concurrentmodificationexception .
add meter name convention ( fixes # 489 )
added methods for listener management and Gcode command creation in IController , and updated BackendAPI to use IController instead of AbstractController to improve flexibility and functionality of the controller interface while standardizing the controller type used throughout the application
added a test method for rendering huge horizontal rules in PathologicalTest . java to ensure proper rendering of horizontal rules with variable width
change from ` system . out . println ` to ` tty . print ` for debug with jdk 9 +
updated various Java files related to the response handling and encoding to improve code readability and maintainability by standardizing response structure
changed the condition from " frameLength = = 0 " to " frameLength < = 0 " to ensure proper handling of frame length values
updated return statements in IntFloatMap and IntIntMap to use a single variable zeroValue instead of a redundant function to improve code clarity and maintainability by reducing redundancy
fix for issue 220 : label style not apply correctly when download image .
added a null check for the registered variable in HandlerRegistration . java to ensure proper handling of cases where the registered object is null
simonstewart : remove the javascript method relate to the htmlnode ( no functionality change )
fixed - npe during shutdown if redis cluster be not reachable
hbase - 26282 mobfilecache log improvement ( # 368 )
modified ColConvCCMTest . java file to enhance test coverage and fix existing test failures
replaced instance variable declarations with local variables for ` target ` and ` allowCovariantReturns ` to improve code readability and maintainability by reducing instance variable usage
pdfbox - 421 : improve type safety , a suggest by valerybokov
changed the return type from Float . toString ( ) to asString ( ) in Json . java and added a new class X with JSON serialization / deserialization to improve performance by directly using asString ( ) and facilitating the serialization of JSON objects
camel - 14519 : what a cool jira number : ) . should have in the future , so there be no need to check last succesfully .
added a new Runnable inside EventQueue . invokeLater for asynchronous execution to improve UI responsiveness by ensuring tasks are executed on the Event Dispatch Thread
updated the calculation of the maxSize variable in CompressExtension . java to ensure the correct maximum size is used for message size configurations
updated steeringValue calculations to use - = instead of + in multiple test files to correct the formation of the steering value for accurate testing
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to enhance security and improve code readability
updated JdbcSerDe to use LocalDateTime and LocalDateTime for date and timestamp handling to ensure consistent handling of date and time representations for better accuracy and compatibility
updated VERSION constant from 2 to 3 and modified metadata handling logic to ensure compatibility with versions less than 3 to maintain data integrity
make flywayautoconfiguration a conditional bean to allow jpa to be load
added sorted ( ) method to ClassesImpl . java to ensure consistent ordering of classes during processing
added a method to get the current stable state and updated the state checking logic in the ` AbstractLauncherUiTest ` to improve state management and ensure proper synchronization during tests
updated the SharedInformer class implementation to improve performance and maintainability of the code
8167536 : make testclosescope0 . java work with jdk 16
updated test parameters from 500 to 5000 in AdaptServerSocket . java to improve testing accuracy for varying connection sizes
modified CaptchaChannelProcessorTests . java by renaming and adjusting its content to improve clarity and maintainability of the test code
add logic to update the collection owner when the item ' s ownership do not match to ensure that the item ' s own collection is processed correctly after the import
added retry logic for maximum retries of properties to improve resilience against transient failures by retrying repeated attempts
replaced ` mergeDirectory ` with ` directory ` in ` TrackingDirectoryWrapper ` initialization to ensure the correct directory is used for tracking operations
applied patch [ 1071798 ] fixed bug in unusedimportsrule when check for generic
hive - 23732 : prevent insert overwrite for bucket partitioned iceberg table ( adam szita , review by marton bod )
updated assertions in BootstrapTests to check for the correct number of SAML keys and ensure compatibility with the current configuration
fix infinite loop when look up non - static field for the type of a field
fix for her - 1873 : mailermodel . getaddressvector ( ) deadlock .
re - enable the waiting for line and block comment ( see bugzilla 49444 )
lucene - 1446 : fix lock . release ( ) to throw ioexception .
change package of datasourceinitializer from test . jdbc . datasource to org . springframework . batch . test to better align with the batch testing framework
refactor : remove logic about null operator in spel ( # 565 )
updated ByteBuddy initialization to include TypeValidation . DISABLED to ensure compatibility with TypeValidation during byte buddy generation
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` and add a new file ` ErroneousAnnotations ` to improve type handling and introduce erroneous annotation examples for testing purposes
change increase in _ innodb _ lock _ wait _ timeout to 1 to avoid flaky test
avoid reference system property to log file in loggingapplicationlistener ( # 1315 )
updated the request method to handle HTTP redirection more accurately and added a method to check for redirects to improve redirection handling and ensure proper management of HTTP redirection status codes
added environment configuration for service and application IDs in MicroserviceFactory to enhance flexibility by allowing configuration from environment variables
update the process name from process . getName ( ) to process . getBeanName ( ) to ensure the correct bean name is used for the process
updated database path regex to be static and modified database deletion calls to use a prefix to ensure consistency in database path handling and enhance test reliability
replace method to retrieve unread count from HomeDataSource to ensure accurate retrieval of unread counts from the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method with a disabled annotation to improve clarity of the test purpose and add a new test for the virtual thread pool functionality
modified the ` getAllOrder ` method to include a ` limit ` parameter for limiting the items in the market data retrieval to enhance flexibility in limiting the number of items processed and improve data integrity
added null check for user before retrieving user settings to prevent null pointer exceptions when user is unavailable
[ local ] fix localfilesystem . match ( ) when the relative path be incorrectly set
added constants for maximum width and height limits and modified the way rectangle dimensions are set in ComponentBuilders to ensure that the instance ' s bounds does not exceed defined limits for better usability
added logging functionality and deprecated method for setting connection manager timeout in CommonsHttpSolrServer to improve error handling and maintainability of the code
removed exception handling for document creation errors in PrintController . java to streamline error handling and improve clarity of error messages
refactor file handling in CrateType . java to use map instead of Optional for improved readability to streamline code and reduce unnecessary indirection in the file creation process
added validation logic for numbers in SpellChecker and a corresponding test case to ensure that numbers with separators are handled correctly and tested in the SpellCheckerTest
fix checkstyle issue in util / helloworld . java ( # 700 )
added methods to retrieve and display file actions within the FileDisplayActivity to improve code readability and enhance user interaction with file operations
hbase - 27455 fix stop clones when check replication status ( # 4811 )
updated the call to ` e . update ( recid , 2L , Serializer . LONG ) ` to ensure consistency in data processing for long values
renamed the parameter ` materials ` to ` theMaterials ` in the ` StreamerLoader ` constructor and removed all ` MaterialColumnParser ` objects to improve clarity by accurately reflecting the purpose of the parameters and clean up unused components
added various new String arrays and configurations for various components in DependencyBank . java to enhance clarity and organization of dependencies and improve code maintainability
added max recycled views to the RecyclerView ' s pool in AppsContainerRecyclerView . java to optimize memory usage by managing view sizes efficiently
add a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` class to ensure the build process works correctly when both SDK and NDK availability
update the example baritone and add some logging
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance error handling for SQL procedure parsing and resource management
added null handling support in FilterOperatorUtils and a corresponding test in NullHandlingEnabledQueriesTest to enhance filtering functionality to support null values in query processing
removed redundant validation checks for bootstrap method parameters to streamline the code and improve error handling by ensuring only valid parameter types are processed
try to fix the test failure on the ci box
added clearing of runtime options file names to ensure no stale data is loaded during instrumentation
changed the type of contacts from List to List and updated how principalId is retrieved in the AbstractRegisteredService and PrincipalAttributeRegisteredServiceUsernameProvider classes to ensure proper handling of collections and improve type safety for principal ID retrieval
added padding adjustments to the workspace label based on icon size and padding to ensure workspace labels are displayed correctly based on layout constraints
hbase - 26338 improve test failure message ( # 3679 )
[ gr - 38592 ] llvm be pre - initialized by auxiliaryenginecache because it define llvm # patchcontext ( ) , but llvm do actually not support pre - initialization .
removed JUnit Ignore annotation from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to ensure tests are consistently executed without skipping failures
replace RuntimeException with JsonIOException in error handling to provide a more specific exception for JSON - related issues
fix build error due to java 1.6 compatibility
updated error messages for clarity and changed the maximum allowed value from - 1 to Integer . MAX _ VALUE to improve debugging information and enhance error handling
refactor segment name validation by introducing a separate method ` isHighLevelConsumerSegmentName ` to improve code readability and maintainability by encapsulating validation logic
added methods to start activities with error handling and fragments to ensure proper management of fragments and exceptions when starting activities
updated the method to use the current time from clockReader instead of the current time to ensure accurate time representation for the duedate
add x86 _ 64 - none - linux - android build flavor to presets for x86 _ 64 _ none - linux - android
added a method to delete files from a file storage manager for an account to improve resource management by ensuring that obsolete files are removed for specific accounts
updated the help message format in SchemaCrawlerCommandLine to improve clarity to enhance user experience by providing a shorthand option for help operations
add description . createsuitedescription ( string , annotation ... ) overload to match the unique id of description
pdfbox - 2852 : remove duplicate code by move the decoder . decode into it own method
removed an unused ` sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor and eliminate unnecessary complexity by eliminating unnecessary dependencies
added unit tests for range past start and end cases in GWCZoomContextFinderTest . java to ensure correct handling of range boundaries in the ZoomContextFinder
added a new configuration key for dependency tracking and modified its behavior to allow users to enable or disable dependency tracking based on the configuration
updated the URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure the correct servlet path is used for authorization checks
try to add more safe keyspace if already exist
add cache to splash screen image to speed up drag & drop
modified tuner configuration handling and buffer management in the SettingsManager , RTL2832TunerController , RTL2832TunerController , and RTL2832TunerController classes to improve tuner buffer resubmission logic and ensure proper resource management
added HasTests interface to the ShBinaryDescription interface and implemented a test case for sh binary functionality to enhance testing capabilities for sh binary definitions with tests
added an else clause to include the " db : hsqldb " string in the TestFilter class to ensure proper handling of SQL databases in the filter logic
corrected spacing in the return statement in JavabinLoader . java to improve code readability and maintain consistent formatting
trufflestacktrace : materialize hostexception only if the thrown exception have no stack trace
[ gr - 34299 ] support export jvmciclass to single provider if miss .
added unit test to ensure duplicate command handler resolver be use
[ flink - 20865 ] [ stream ] add fine - grained shuffle mode option to support batch job
fixed vanilla bug where fish pump would go into infinite recursion when certain block dissapearing . close # 3514
camel - 14263 : create an aws - sftp component base on sdk v2 , regen doc
renamed ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve code clarity by using a more descriptive method name
add option to compress package name instead of short name for ganglion metric
added a check for empty items in AppsContainerRecyclerView to avoid unnecessary processing when no items are available
added a conditional annotation for the missing bean named REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure bean creation only if the bean is not already available
- add support for mdc property in xmllayout a find in lbclassic - 22 contribution
added a new constant OMIT _ HEADER and related methods to manage response headers to enhance functionality by allowing control over response formatting based on the " omitHeader " parameter
replace the property name retrieval method to use a dynamic property number and add unit tests for EscherProperties to ensure accurate retrieval of property numbers and validate functionality through unit testing
replaced direct call to ` getBuildRuleType ` by using ` Description . getBuildRuleType ` to improve code clarity by explicitly referencing the description class
added miss call to modify hierarchy in constructor and remove method numberer in sootclass .
remove extra logging and null check
added an ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified several methods in ` TableRetriever ` to include schema name parameter to enhance functionality by allowing manually adding columns while ensuring proper schema handling during column retrieval
wallet : always mark transaction confidence a not _ seen _ in _ chAIN , so that any unexpected tx should not be mark a complete .
fix test for httpclientintroductionadvice . # tostring ( )
fix : crash while load a json file on jackson ( # 1588 )
hbase - 2594 close a region should not fail if an exception occur while try to close a region ( # 5238 )
refactor null checks and length comparisons in Credential . java to improve code readability and maintainability
[ java ] check the registrationid be the same a the image subscription registration id when a subscriber be already register .
8289922 : fix jfr testjvmprocess . destroyforcibly to avoid use reflection
mysql : fix mariadb fail test when run on oracle .
camel - 3906 : better error handling in case of mailstore connection failure . thanks to joerg kessler for the patch .
restore else if we do n ' t have token on the stop token , we need to check for that
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` k ' ' complete
added getter for the data file name and modified model initialization condition for HMMModel in Voice . java to enable access to the data file and improve model handling for different audio formats
added emailDomain property and corresponding getter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable flexible configuration of the email domain for identity providers and improve code maintainability
added new configuration constants for request timeouts and methods to retrieve them from properties to improve configurability and maintainability of timeout settings in the application
add additional check on ` ` myurisortosaveLater ' ' ( # 6372 )
added RedisCategory import and categorized tests in RedisServiceRegistryTests to categorize tests for better organization and clarity
modified the test method to use parameterized tests and updated the deprecated method invocation logic to improve test accuracy and handle cases where the type pattern is null or empty
added a call to the superclass ' s paintComponent method in WaterfallPanel to ensure proper rendering of components in the window
removed unused import statements from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
updated event signature handling in ContractEventTriggerCapsule and added logging in LogEventWrapper to improve clarity in event logging and enhance parameter information for better debugging
update file filtering logic to ensure only unique file names ending with " _ " to improve accuracy in session identification by ensuring only unique and unique identifiers
updated drawing behavior in MapView to use dynamic color adjustments to improve visual appearance by allowing dynamic color changes
jbrules - 2603 : modify the packagebuilder to always build a compile rule if no invoker exist .
removed unnecessary debug print statements and simplified method calls in various classes to improve code readability and maintainability
lucene - 7338 : do n ' t assert ` ` score ' ' field of the empty doc list
replaced Set . copyOf with Set . copyOf for getting entity keys to ensure immutability of the entityKeys set
core - 2353 mysql data type should not contain ' - ' a a default value of 0
do not use multi - sig pubkey in . offerer package .
updated the ` FunctionAllGroupHeadsCollector ` , ` FunctionFirstPassGroupingCollector ` , and ` FunctionFirstPassGroupingCollector ` classes to use wildcard generics for ` Map ` to improve type safety and flexibility in the collection implementations
[ 3.0 ] fix npe when create a new kiesession ( # 900 )
update HiveMetaStoreClient initialization to use ' this . conf ' instead of ' conf ' to ensure proper context is used for the HiveMetaStoreClient initialization
make modal base ui change in taskview only if modalness change .
added a test for retrieving codec profile levels from the codec level and implemented necessary methods in ShadowMediaCodecList to ensure correct codec capabilities handling when the profile level is missing
fix # 5460 - enter key do not request focus
added validation for width and height , handled potential OutOfMemoryError , and ensured valid XRSurfaceData instance is used to improve robustness and error handling in image creation processes
change the thousands separator from a period to a Unicode character to ensure proper formatting for the thousands in the user interface
replaced integer array ` _ loops ` with ` AtomicInteger ` for thread pooling in ` AsyncStressTest ` and ` StressTest ` to improve thread management and ensure proper collection handling
added functionality to handle beta flavors in AchievementsFragment and LeaderboardFragment to improve user experience by providing clear messaging for unavailable features and actions
added access , name , and desc fields to SearchMethodVisitor using context to ensure proper initialization of instance variables from the application context
added sleep calls in IoTDBInsertWithoutTimeIT and modified exception handling to ensure proper sleep behavior and improve error handling robustness
removed unnecessary whitespace in DLNAResource . java to improve code readability and maintainability
camel - 10636 : remove the requirement for the < stream - config > element on the < batch - config > element
refactor transaction management by introducing ` acquireTxn ` and ` reloadTxn ` methods , and updating transaction handling logic to improve code clarity and ensure proper transaction management during read operations
flume - 1749 : allow trustmanager / keymanager to be set via ssl property ( # 3443 )
refactor ` getSingleSourceApplicableTest ` to use ` Applicability . or ` for better code handling to improve readability and maintainability by utilizing a more concise ` TreeVisitor `
fix ` ` repeat ' ' issue when hit enter
change the enum constant ' package _ private ' to ' none ' so that any constant can be use with it .
refactor method names and logging mechanisms in multiple files for improved clarity and functionality to enhance code readability and maintainability by using consistent naming conventions and error handling strategies
[ orc ] fix orrcinputformat . getstripes ( ) to update stripe stats
added a null check for the exception variable before proceeding with the cache check to avoid potential NullPointerExceptions when the exception is null
update myhentaicomics ripper to use http instead of http : / /
add a way to check and print the jar version in the cli
fix problem with import statement with space
updated rotation handling in ConsoleActivity and added input connection in TerminalView to improve user experience by ensuring proper input behavior for text editor connections
fix possible classcastexception because of the generic hitqueue
fix npe on connection close if owner ip be null ( # 6381 )
camel - 6407 : added headersmapfactory mbean which give the name of the headersmapfactory to jolokia .
added a single quote around the closing brace in JavaCompiler . java and Diagnostic . java to improve code readability and maintain consistent formatting
resolved - issue int - jmsoutboundgateway . java : remove the requirement for a non - volatile jmstemplate instance .
updated the index parameter in the expecting method call from ` i + 1 ` to ` i2 ` to correct the logic for array element validation
fix npe and error log in script processor ( # 3703 )
fix # 275 - support for org . postgresql . pgstatement in connectionpool ( # 275 )
refresh size estimate estimate data directory after each test ( cassandra - 7385 )
switch error log to warn in case of no more memory fragment limit .
fix for flaky ttl expiration after block compaction . patch by jbellis ; test by stu hood ; review by jbellis for cassandra - 716
feature - redissonblockingdeque , redissonblockingdeque and redissonblockingdeque should always return infinity if timeout be 0 # 3158
removed unnecessary formatting in JobInspectCommand . java to simplify output formatting for improved readability
fix documentation for miss engine class ( # 5348 )
fix : childholder sort not to be consistent
[ issue # 3178 ] remove duplicate code in aclclient and mark it for test
updated variable name from numIndexDims to numDataDims in BKDWriter . java to improve code clarity by using a more descriptive variable name
[ zeppelin - 1049 ] do n ' t print stack trace in case of cli failure
apps - 1058 use literal instead of numeric for the literal in ca
removed the public access modifier from the methods in NodeIdAccessor . java to enhance encapsulation by restricting method visibility and improving method accessibility
bug 9859 : throw error message when volume attach to vm be not attach to this volume to vm
( chore ) camel - itemwriter : remove public access modifier
updated the test parameter in ThingImpl from " " to " test " to enable the test functionality for the thing
add tostring ( ) method to imagenamessubstitutor to provide a description
replace FSDirectory with RAMDirectory for index directory management to improve performance by utilizing in - memory temporary directories
fix text position bug ( issue # 2285 )
fix reference in javadoc to walletappkit . ismine ( ) javadoc .
remove nashorn engine parameter , because it be require java 1.6 .
fix remove chat transport menu item from chat transport selector box .
added methods for resolving and replacing tokens in the context - related classes to enhance functionality by allowing token replacement in templates
fix ( proto ) : avoid npe if bsq block explorer be null
added attribute management methods to StandardSession and Session classes , along with standardizing attribute handling in the codebase to enhance session attribute management capabilities and improve code readability
added assertions to verify the correct properties of the primary bean ' s names and algorithms in TestDbJson _ List . java to ensure that the correct retrieval of primary keys and their corresponding values in the database
updated the initialization of averages to use initialPageCount instead of pageSize to ensure accurate memory allocation based on the correct initial page count
refactor BatchCommandLineLauncher class for improved clarity and organization to enhance maintainability and readability of the code
added HSQL database configuration and transaction manager beans in BatchMetricsApplication . java to enable database integration for HSQL database operations using a defined transaction manager
replace UnauthenticatedHttpService with HttpService in GlowrootLogHttpService to enable HTTP service functionality for improved request handling
pdfbox - 2941 : fix break in font size on non - default font size
removed the ` notifyAll ( ) ` method from ` close ( ) ` and adjusted synchronization within ` DocumentsWriterPerThread . java ` to improve thread safety and ensure proper refresh of index files
added methods to retrieve properties and handle multiple and validation constraints in UiBinding . java to improve property management and ensure proper validation handling during data retrieval
updated several instances of ` setReflectively ` method calls to use ` toString ( ) ` instead of ` getName ( ) ` for better clarity to improve code readability and consistency by removing unnecessary method calls
add full save option to the test plan ( no more ` ` save ' ' )
lucene - 7271 : hunspell : make sure we access pattern in huggingface ( # 1371 )
replaced explicit type specification with the diamond operator and adjusted fee initialization in KrakenAdaptersTest . java to simplify code and improve readability by removing unnecessary type parameters
removed the import of CharTermAttribute from DefaultIndexingChain . java to streamline the code by eliminating unnecessary dependencies
update NBJavacTrees . java to improve code structure to enhance maintainability and readability of the code
removed unsupported encoding check for data encoding in VectorizedPrimitiveColumnReader to simplify code and prevent potential issues with unsupported encoding scenarios
updated logging conditions and added a new marker for better logging to improve logging clarity and ensure consistent logging of status messages
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener to ensure proper cleanup of metadata service proxy when changes
fixed query recursion in spring and data db + test
update message construction in HubChangeExecListener to include the changelog ID check to improve clarity and specificity of the message displayed to the Hub communication failure
add decodehint to try and prevent test failure on osx .
updated method signatures and return types in CxxPreprocessAndCompileStep . java for better type safety to improve the handling of compilation results in the build process
replaced the initialization of ` maxEvents ` and updated the loop condition in ` ObjectStore . java ` to ensure ` maxEvents ` is set correctly and improve readability by simplifying the event loop logic
( chore ) camel - configuration : validatedlocalvalidatorfactorybean do not enhance validation constraint check
clear temporaryblockentities list before spawn the world ( # 1532 )
remove redundant check for exact type and component type in intrinsifyarraycopyphase .
enable debug log to investigate gump failure
clean up the code and make exception reporting more concise
added null checks for owner and key accounts in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that necessary accounts and keys exist before proceeding with operations
[ ds - 3989 ] replace the command sort mechanism with a hashmap ( # 3989 )
chore : [ cloudflow ] update go _ package to match open source code ( # 9335 )
replaced multiple calls to ` addProperty ` with ` setProperty ` in ` BaseSingleTreeBuilder . java ` to streamline property management for better readability and maintainability
fix asmloader so it work on android osgi
pdfbox - 3353 : reduce memory usage by avoid double path allocation for rrcurveto
updated Java2TypeScriptTranslator to conditionally use " declare " for namespace export based on definition scope to improve code formatting for better readability during namespace declaration
change the handler in HttpClientTest from an empty server handler to an abstract handler that handles the response to ensure proper input stream management for server requests
simplified the listener list by removing unnecessary String arrays to improve code readability and reduce boilerplate
fix regression for : http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 37979 by restore the original solution
no effective change - trim whitespace in test file
updated BufferedImage handling in AwtCanvas to create new BufferedImage and manage color filters more effectively to improve performance and ensure correct color processing for different BufferedImage types
refactor native image location qualifier to make it easy to set their location .
[ beam - 7520 ] remove usetimersinpard o ( n ) from test to avoid confusion ( # 7523 )
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 19 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization of objects
meanless commit mean to trigger a cc build in order to test rpm nightlys
log warn when max - size per _ node config do not allow any data in map
change return statements to use " LST " instead of " AST " across multiple files to enhance clarity by using a more descriptive term for the LST element
lucene - 10043 : fix the calculation of the number of thread scoreables ( # 228 )
return null on exception instead of throw in case of an assertion failure
update applicationcontrollerfluentleniumtest to test window , not server address
added a new ` makeString ` method to ` ParallelIterable ` , ` RichIterable ` , ` AbstractMultiReaderMutableIterable ` , and ` AbstractMultiReaderParallelIterable ` classes to provide additional functionality for generating strings with specified separators or ends
updated order handling in OidcServicesManagerRegisteredServiceLocator to use a constant instead of a magic number to improve code readability and maintainability by centralizing the order definition
relax requirement on weak association analyzer to prevent an npe
refactor Deflater class for improved performance to enhance compression efficiency and reduce memory usage
added exception handling to ensure IOException is wrapped in a try - finally block to improve error handling and ensure proper resource management
added a null and empty check for the content string in VersionTypeBinding . java to ensure that an empty content returns a new Version object when none is provided
refactor NearbyListFragment to directly obtain Place objects from the listview to improve code readability and reduce redundancy by directly accessing Place objects
added case - insensitive check for content type in MailConverters . java to ensure compatibility with lowercase content type matching
change opensh default format to ASN.1 ( # 2652 )
update ` updateItemLocationsInDatabaseBatch ` to accept a boolean parameter for binding to control the folder suggestion behavior based on binding status
replaced specific Hibernate annotations with a wildcard import and added a JPA entity find and @ Cache annotation for better entity management to improve code clarity and ensure proper caching behavior in JPA
updated import paths for DefaultOAuth2RequestFactory and added a method to getUserApprovalRequest in TofuUserApprovalHandler to ensure correct usage of the OAuth2 request factory and enhance user approval handling functionality
fix influx name convention when use deprecate tagvalue ( # 645 )
fixed report of incomplete quickfix test , a report by damian minkov .
6986400 : change cookie to cookie2 in 6980004 fix
replaced the private method ` squareupUnsupported ( ) ` with a static method call throughout ` Platform . java ` to centralize checks for unsupported features and improve code maintainability
added functionality for managing all - related button and preferences in OverviewActionsView to improve user experience by hiding the all - related button based on user preferences
changed the ` desiredRepoVersion ` variable to a final variable and adjusted the timeout duration in ` ClusterStackVersionResourceProvider . java ` , while ensuring ` HostStackVersionResourceProvider . java ` is adjusted correctly when ` desiredRepoVersion ` is present
remove memoryleaktest since that be a fragile way to check memory leak . we can detect memory leak in our stabilizer test
modified the return statement in ServletTester . java to include the local host address if localhost is unavailable to ensure accurate representation of the local address in HTTP requests
enable mvdwapi by default , for debug
fix partition assignment test by assert cluster size before terminate node
implemented a SingletonHolder class to retrieve FFI providers and updated FFIProvider to use JNA provider if available to enhance provider management and support JNA functionality
tika - 3227 -- add test for hierarchical file list
added null checks and improved handling of null persistent entities in MongoTemplate to ensure robustness and prevent potential NullPointerExceptions during object saving
use NODE _ LIST instead of 0 to indicate no hole when use directinputcount
added a new private field ` accTradeValue ` and its getter method to the ` BithumbTicker ` class , and updated the constructor of ` TradeHistoryParams ` to include ` CURRENCY _ PAIR ` to store trade values and ensure proper initialization for the currency pair
add log for segment name during realtime indexing ( # 7767 )
changed the variable name from maxParallelThreads to MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to improve code readability and maintain consistency in naming conventions
replace ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders to improve thread safety when accessing shared data structures
remove miss license header ( # 2025 )
added a null check for destBuffer in FlipTransition . java to avoid potential NullPointerException during runtime
fix camel - msv unit test which fail on slow ci server .
updated the conditional check for beginCycle to ensure it does not equal to the currentCycle to prevent potential errors when processing cycles
increased the length of generated code from 6 to 10 in JdbcExpiringCodeStore and related tests to accommodate larger data sets and ensure correctness of the generated code
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of unique constraints for object types
updated the handling of language codes in MediaDetailFragment . java to improve clarity and efficiency of language code extraction
do n ' t swallow arrayindexoutofboundsexceptions during class load
added a reference filter feature to the ListImagesCmd class and updated ListImagesCmdImpl to utilize these methods for filtering images to enhance functionality by allowing filtered image retrieval based on specified parameters
camel - 14263 : camel - jms should avoid bridge error handler on endpoint to not use producer
add more output and minimal work to figure out why we ca n ' t parse any op exclusion
added two return statements that indicate a failure condition is met to ensure the method indicates a failure condition for execution
add example of honest politician ( # 825 )
interpreter : use stringutils to check if initfile be empty
camel - 9444 : restletcomponent should use the port number if set to zero . thanks to lukasz for the patch .
removed unused imports and added specific imports for specific block classes in SchematicFormat . java to improve code readability and maintainability by eliminating unnecessary dependencies
added a property for maximum query length and modified configuration handling in QTestUtil and SessionState to ensure proper query limits and improve configuration flexibility
changed access modifiers of fields and refactored HttpConfiguration creation methods in WebServer . java to enhance encapsulation and improve readability of HttpConfiguration instantiation
change name of sink / sink to reflect it change ( # 1832 )
updated HiveConf and HiveSparkClientFactory to conditionally set the Spark application name based on the name check to ensure the application name defaults appropriately when it is not explicitly set
hhh - 15437 - fix property inclusion check in managedclassfactory # getIncludedproperties ( )
kristianrosenvold : change how window . maximize be handle in firefoxdriver . fix issue 3626
reapply : do n ' t ignore main cell ' s buck - out when create projectfilesystem
updated assertion in TestXMLEntityExpansion . java to check for the absence of " entity expansions " error message to improve validation of entity exporation process
update table offset and length calculations to mask out sign bits to ensure consistent handling of integer values within positive range
removed the customize method implementation that asserts if form is null to ensure that the form is initialized before use and prevent potential null pointer exceptions
adjusted the initialization of ` mLineBuffer ` and updated conditions for rendering bounds in ` LineChartRenderer . java ` to improve memory efficiency and ensure accurate checks with coordinate coordinates
refactor flavor handling in AndroidBinaryDescription to check for existing flavors before proceeding to improve error handling and provide clearer feedback for unsupported flavors
updated buffer assignment from ' offset ' to ' i ' in LwjglGL11 . java to ensure correct buffer generation for the specified index in the buffer
added new classes PropertySuper and PropertySuper , and modified TestClassResolutionFail to test the handling of LinkageError to improve code organization and ensure proper error handling during property initialization
fix when a shutdown be enable , we should also remove the shutdown hook before shut down child .
simplified the instantiation of VirtualFilterChain by removing the URL parameter and directly constructing the FilterChjainProxy bean to improve code readability and maintainability by eliminating unnecessary URL variable
fix percentile ( ) bug ( # 2284 )
added schema loading logic to handle non - loaded tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure proper loading of tables based on the schema state and prevent potential errors when the schema does not be loaded
set baseType to null and set literalPrefix , literalSuffix , and localizedTypeName to " " to remove unnecessary initialization and improve clarity in column type definitions
updated HTML links in multiple classes to use placeholder syntax to improve readability and consistency in link representation
updated evaluator implementations to use a singleton pattern for ObjectEqualEvaluator and BooleanEqualEvaluator to improve efficiency and ensure a single instance for different evaluator implementations
updated OS version references from " osx _ x86 - 64 " to " osx _ x86 _ 64 " in multiple test files to ensure consistency in configuration to support different operating systems
added sound effect handling in AllAppsView . java to enhance user experience by enabling sound feedback on interactions
update exception type in the main method from Exception to IOException to improve error handling by specifying the specific exception type
enable granularity for left axis in BarChartActivitySinus to improve data accuracy in chart representation
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by reducing duplication
updated ContextHandlerGetResourceTest to use MavenTestingUtils for path handling and added assumptions for unsupported OS versions to improve test reliability and ensure compatibility with different environments
added close ( ) method to multiple classes to ensure proper resource management and prevent client from closing prematurely
improve mockappender to reduce time sensitivity
[ beam - 4142 ] improve error message when fail to create a resource id of hadoop
isometrictaggeredtiledmaprenderer . added license info , small cleanup
remove duplicate call to unbindhandle to avoid race - condition .
refactor Config and Attribute classes for improved code organization to enhance maintainability and readability of the code
removed unnecessary condition for screen shot handling in OtherActivityTouchConsumer . java to simplify touch tracking logic for better performance
replaced the theme checking mechanism for navigation buttons to simplify the code and improve button visibility based on the UI mode
bench : make sure that we do n ' t exit the launcher
6996563 : 6984311 change forget to update vmstructs . cpp for new field _ operands
added block formatting context handling to the findBox methods in BasicPanel to improve layout accuracy by ensuring absolute block formatting when searching for elements
added error handling to WorkerProcess and modified output retrieval in WorkerShellStep to improve error reporting by displaying standard error output when available
added null checks for operators in CheckedListReplaceAll . java and improved error handling in Collections . checkedList ( ) to ensure proper handling of null operators and provide clearer debugging information
added a conditional test for writing data on the SSL connection and modified the fillInterested method to improve control over asynchronous writing to enhance testing reliability
added functionality to handle device configuration changes and made default values for FeatureFlags final to improve responsiveness to device configuration updates and ensure default values are correctly set
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests that are not ready for execution
remove unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and reduce unnecessary dependencies
[ fix # 72504258 ] instructorfeedbackeditpage page should clear focus on normal input field ( # 7258 )
refactor code to reorder conditional checks for better readability and maintainability to improve clarity and ensure proper synchronization of the streaming service
change print statement from standard error to standard output for ignoring Class - Path entries to improve logging clarity by using standard output for error messages
add in the ability for sparserowmatrix to either be sequentialaccess or randomaccess sparse in a row - by - row manner . backwards compatible .
bug cs - 15429 : for volume delete , create usage event on volume that do n ' t have a poolid
modified file input stream handling for HIVE _ PLAN based on the local configuration to ensure correct file path resolution for different environments
[ beam - 8470 ] update beam test to use guava instead of guava
[ gr - 44299 ] properly reset counter for cce provider when need .
fix a memory leak relate to conference when multiple thread leave the same chat .
validate that the file can be write before open the gui gui
added FolderSyncActivity to handle folder synchronization functionality in the DrawerActivity and created a new FolderSyncActivity to enhance user experience by providing a direct navigation option for syncing files
[ flink - 23799 ] [ test ] replace some close method with try - with - resources in sequentialchannelstatereaderimpltest .
well spanish punctuation handling ( issue # 161 )
update method of SimpleTextBKDWriter to use getPackedValueSlice for point value indexing to improve efficiency by directly using the encoded value slice of the heap point
added LocaleRandomizer and its test class to support locale - specific random number generation in the application
tika - 3971 -- add mime detection test for font type application .
update ebean - config to include new version of 9.0 . 0 ( # 2522 )
move the ` AccessController . doPrivileged ` call to encapsulate the ` run0 ( ) ` method execution to improve security by ensuring ` run0 ( ) ` runs with elevated privileges
disable non - blocking read when non - blocking read .
updated default window delay from 120 to 600 milliseconds to improve responsiveness in the application
updated primary key validation error message to include the name of the previous column to ensure clarity in error reporting for better debugging
added date parsing functionality to ThirdEyeJiraClient to enhance date handling capabilities in the application
refactor HeadersGenerator to streamline header generation and improve error handling to enhance code readability and maintainability by simplifying the priority generation logic
added a maximum scalar replace code size constant and updated scalar replacement logic based on class length to ensure that the scalar replacement option does not exceed the maximum allowed size for class serialization
change the folder sort order of the medium file to mean that it be display in the wrong order .
updated image dimensions in TexturePacker2 . java to correct image rendering to properly position images after changes to the image dimensions
replaced ` FilterHolder ` with ` ServletContextHandler ` in ` JettyWebSocketServerContainer ` and updated related test methods for lazy initialization to improve the efficiency of WebSocket upgrade and ensure proper filter setup during tests
added shutdown calls for validateSignService and TrxHandlePool , and refactored timer initialization in NodePersistService to ensure proper resource cleanup and improve timer management
added RawJsonRequestBody annotation processor and corresponding processing in multiple classes to support the handling of raw JSON parameters in the service registry
added a method to create a new Target object with a specified target type and extension to enhance logging capabilities by allowing dynamic assignment of the target type and extension
update ListBeanContainer to accept an ArrayList for entries and create a new BeanContainerTests class with unit tests to improve functionality and ensure consistency in list operations
hbase - 26182 improve metric name ( addendum )
camel - 5436 : fixed stream cache not close if exchange do not complete . thanks to franz forsthofer for patch .
added device ID setting to the position object in TeltonikaProtocolDecoder to ensure accurate device identification during device data processing
replaced the method of reading the first line in HybridProjectBuildFileParser . java to improve code readability and adhere to updated conventions
added a null check for the operator in the visitAssignop method and created a new Test class with a test case to ensure proper handling of null operator values and demonstrate the use of unknown classes
added a flag to enable account handling in ` BaseActivity ` and modified ` FirstRunActivity ` to conditionally call ` mixinRegistry . onCreate ` to improve user experience by controlling account handling behavior during activity lifecycle
fix # 625 : use the new heuristic method to find the main polygon ( # 628 )
added path parameter to DrillViewTable and updated its constructor to accept a path to enhance view handling by allowing specification of the view ' s path to be processed
set the allocator default value in the constructor which should be overridden with the netty allocator .
modified the type check in ObjectInputStream to use short array instead of double array to ensure correct handling of short arrays during serialization
added a new configuration variable for the number of IO thread pool size in HiveConf . java and updated the executor assignment in LlapIoImpl . java to allow customization of the IO thread pool size for improved resource management
[ gr - 21077 ] workaround for sulong class initialization in jdk 8 + .
updated LatLonGrid . java to ensure minimum range validation for GRID _ SIZE and added comprehensive testing in TestLatLonGrid . java to improve validation of latitude and longitude range parameters and validate functionality through testing
[ java ] expectedconditions should be port to v0.5 . 5 and make it easy to read from multiple wdbs .
updated method signatures and added an additional parameter for the replaceFiles function to enhance file management logic to differentiate between reuse and insert operations
added a test for mocking inner classes in ReflectorTest . java to ensure correct retrieval of the enclosing object for testing purposes
updated configuration to enable Android facet sources by changing the default behavior to ensure that Android facet sources are automatically generated during the build process
updated messaging for Hub communication failures and restructured log messages to use constants to improve readability and maintainability of the code
added properties and getter / setter methods for properties in Link class , and added a test for overriding properties in QuickLinksConfigurationModuleTest to enhance flexibility in managing properties for quick links and ensure correct functionality through testing
[ log4j2 - 2271 ] configcenter should dump yaml config to disk
fix the compile error introduce by project - info . java ( # 2954 )
refactor ` forName ` methods to use caller - sensitive consistent ClassLoader usage across multiple classes to improve security and maintainability in class loading operations
[ ds - 3762 ] refactored test case to use the new authentication mechanism . ( # 2762 )
[ beam - 8470 ] fix compile error due to unnecessary cast in groupexecutor
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes or packages
replaced the HumanTimeConverter with a Calendar for better date handling in the TimeStepdefs class to streamline the processing of ISO 8601 compliant timestamps by utilizing a Calendar for better readability and maintainability
fix spark _ recessive accord to 1.2 . 2 .
updated RestProxyFactory usage to use the URI instead of the exchange specification to improve flexibility in proxy creation by allowing dynamic URL path resolution
recordgenerator . java : remove some debug code that be n ' t use anywhere
camel - 15688 : camel - kafka - avoid commit after commit when enable autocommit . thanks to lukasz for the patch .
removed unnecessary lock release logic and updated output statement usage in LoggingExecutor and StandardLockService to improve logging efficiency and ensure proper lock handling during database operations
updated the suppression warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to improve code clarity and maintainability by addressing deprecation warnings
mondrian : fix synchronization issue with jdk 1.6 .
camel - 10971 : fixed spring - boot auto configuration maven plugin to configure all configure property
updated the ticker parameter from baseSymbol to counterSymbol in VirtExMarketDataService to ensure the correct currency representation is used for ticker data adaptations
move test case for camel - 956 to not have same dump class name a test one
replaced UUID . randomUUID ( ) with System . getProperty ( " testId " ) for retrieving the test ID to ensure consistent retrieval of the test ID from system properties
added synchronization to date and string properties in DefaultJobParametersConverter . java to ensure thread safety when accessing shared resources
update package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
change height scale from 256 to heightScale in FractalHeightMapGrid . java to allow dynamic adjustment of height map size based on application settings
modified the equality check in SecurityConfig and updated the test assertion in SecurityConfigTests to ensure that the attribute is not equal to the expected string and improve test accuracy
minor fix , default to false for dump - partition - id
added imports and modified test setup for TronTXOutput handling in UTXOSetTest . java to enhance test coverage and ensure correct behavior of transaction outputs
[ java ] unusedassignmentrule , unusedlocalvariabledeclaration and unusedassignmentpolicy should consider explicit unused name
pdfbox - 4892 : avoid npe because of miss object
fix jsr restart property override to preserve old job parameter
added a new boolean field ` disallowBatchOnCascade ` and a method ` isDisallowBatchOnCascade ` to retrieve its value to provide functionality for conditional batch management in cascade operations
replaced the existing principal assignment logic in JaasAuthenticationHandler . java to streamline the code for better readability and maintainability
replaced direct core shutdown process with a Runnable to manage the executor using a fixed thread pool to improve the handling of core closure within a multithreaded environment
added a check to set the visibility of mActionsView to VISIBLE if it is not null to improve user interface responsiveness by hiding the actions view when available
refactor parameter handling in RunIdIncrementer to use a conditional check for null parameters to improve code readability and reduce potential null pointer exceptions
refactor BasicEntity and TestUtil for improved code organization to enhance maintainability and readability of the code
added multiple assertions to test the retrieval and processing of show devices in SchemaRegionBasicTest . java to ensure that the new device matching functionality works as expected
quietly log exception when collect metric ( # 12405 )
added a conditional check for the max variable in EigenvectorCentrality . java and created a new EigenvectorCentralityBuilder class to ensure accurate calculations and provide a service provider for statistics building
updated the port handling in LookupIPv6 . java to use a dynamically generated port to improve flexibility and avoid port conflicts during registry creation
fix geometry generator when store colors / norms on non - existing domain
changed the amplifier for blockentitybeacon to be zero for certain case
refactor TubeCalc class methods for better readability to improve maintainability and ease of understanding
disable health check by default and remove inner class
update group validation to allow for self - validated class .
added a key headful annotation and a timeout attribute to the main method in bug8057791 . java to improve key management and ensure a timeout for drawing the Nimbus L & F
modified the scheduledexecutor to make the thread daemon to prevent the thread from exiting
fix lexicon ' build ' detection to work with version > = 9 .
added reflection access check in JavaAdapterFactory to enhance security by verifying access permissions for the specified type
added fix for http : / / issues . apache . org / activemq / browse / amq - 2287 - allow unit test to run with a sessionidletimeout = true
updated ` initIOContext ` method to include a ` RecordReader ` parameter and adjusted related implementations for improved context initialization to enhance flexibility and support for better file reading capabilities
deleted two files related to ClassLoaderHolder and LoaderManager , and updated the return statement in VerticleManager to streamline code and improve resource management by consolidating loader retrieval logic
added configurationChanged method and improved root checking checks in FileStore . java and JavaLanguageServer . java to enhance code robustness by ensuring only non - writable root paths are processed
added error handling for registration and unregistration of session callbacks to improve robustness by preventing application crashes due to potential exceptions
updated index file paths in TestBackwardsCompatibility . java to ensure compatibility with the new package structure
[ hotfix ] allow akkarpcservice to create new instance with different constructor
hbase - 308 addendum set number of retries on backup . mapreduce . map . maxattempts
pdfbox - 4373 : fix regression in font - specific font file
issue # 3949 - add test that confirm that sslconnection . close ( ) be call before fill ( ) .
updated validation logic in InetAddress and NetworkInterface classes to ensure only IPv4 and IPv6 addresses are validated to improve error handling and validation for valid address types
added a test method to serialize a list of Date objects in a specified time zone to ensure that the Date objects are correctly formatted in a JSON format for better interoperability with different locales
remove typo and spell error from comment in message : : log ( string )
nifi - 7207 : fixed logic error in putdatabaserecord when generate sql
adjusted the loop condition in TableOutput . java to correctly account for a maximum width to ensure that the loop correctly processes runs without alignment
pdfbox - 3353 : avoid npe if no predictor be provide when decode
changed the priority of the bug instance in FormatStringChecker from NORMAL _ PRIORITY to HIGH _ PRIORITY to improve the severity of the warning for specific format string arguments
[ java ] enhanced localvariablecouldbefinal to ignore non - final loop variable .
added PDF writer version and full compression settings in PDFExporter ; updated file name and updated properties in PDFExporterTest to ensure PDF export functionality uses the correct file format and improve node label visibility settings
added tests for LdapUserDetailsMapper to verify role attribute mapping functionality to ensure correct handling of multiple and non - retrieved role attributes in LDAP user details
add a configurable read timeout for ldap ( # 3282 )
8209504 : [ graal ] vmtestbase / nsk / jvmti / scenarios / sampling test fail with ` ` too small stack of resume thread ' '
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
updated variable names and conditions related to cache allocation in several classes to improve clarity and consistency in naming conventions
added a condition to check for an invalid state in the gesture handling logic to ensure that gesture handling does not proceed if the state handler is invalidated
updated the maximum distance calculations for folder creation and adjusted the old rotation indices to improve folder creation handling and accommodate new layout requirements
use configproviderresolver to avoid hard - coding oci . config . path ( # 2088 )
modified Testjsig . java file for improved functionality to enhance overall performance and maintainability of the code
fix mana load on the item drawer and pickaxe . close # 44 .
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 86 )
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress warnings related to serialization of the class
update file validation logic to handle empty tsFile to improve error handling by ensuring the tsFile is only validated when it cannot be empty
[ jdk21 ] update doc , use switch21 instead of switch .
updated error messages in ComparableSubjectTest . java to remove specific context for the conversion failure to improve clarity and accuracy of error reporting for better debugging
fix ` ` standalone ' ' mode of xml4j output ( # 3854 )
updated the capacity constraint check and improved exception message formatting in Int2ObjectCache . java to ensure correct handling of array sizes and enhance error reporting for clarity
re - order security filter chains and customizers in WebSecurity configuration to ensure the ordering of security filter chains is consistent between spring and Spring components
removed the GTC time in the BinanceTradeService ' s order type to streamline the order processing by eliminating unnecessary time constraints
refactored FloatRangeRandomizer to extend AbstractRangeRandomizer and updated its functionality to improve the randomizer ' s capabilities and simplify value retrieval
change KEY _ SEP character from uppercase ' \ 0 ' to uppercase ' \ t ' to ensure consistency in formatting for better readability
camel - 14354 : camel - spring - jms should return a json schema documentation for the jmscomponent
added error handling in the SourceUtils and created a new TestGetBound class for testing to ensure accurate retrieval of bound type parameters and verify functionality through unit testing
refactor filter builder initialization to use a dedicated method for determining the top - level filter builder based on primitive type to improve code readability and maintainability by reducing duplication
added null check for artifactName and replaced release calls with close method in BatchPropertyBeanPostProcessor and JobContextFactoryBeanTests to ensure proper handling of artifact names and improve resource management
fix ssl truststore to read all the certificate serial number
modified the handling of the ` getDefaultBooleanValue ` method to return a ` String ` instead of a ` boolean ` to improve type safety and ensure consistent return type for boolean values
ww - 4767 do n ' t swallow exception in defaulttheme
replaced the ` success ` boolean field with a ` url ` String in the ` DepositAddress ` class to better represent the representation of the URL and asset parameters
replaced the anonymous Privilege class with a lambda expression that executes a lambda expression and added a finally block to ensure proper resource cleanup to prevent potential memory leaks
removed " address " scope from the OAuth2 provider configuration to simplify the OAuth2 provider ' s scope definition
fixed # 2530 - client wait forever for cancelled uploads .
added BIG _ DECIMAL _ 182 _ 04 constant and saturation calculations in WLedHandler . java to ensure proper handling of color values with different intensity
replaced the method for checking validity to utilize a set of validators instead of a stream to improve code readability and maintainability by utilizing a set for clearer validation logic
added method for JSRInst handling in InstSwitch . java to enable JSRInst case handling in the switch statement
fix issue # 549 subscription activatingsubscriber and add transactionmanager as an argument to transactionmanager . execute ( # 505 )
refactor database query preparation to use " UPDATE " and " SET " keywords instead of " TRUNCATE " to improve SQL update efficiency and maintain consistency in data management
added elevation setting functionality in ContactItemInflater based on Android version to ensure compatibility with devices running Android versions below Lollipop
changed variable and method names from ` typeInformation ` to ` identifier ` in multiple Java files to improve clarity and consistency in naming conventions
added AccessController for file reading and deletion to enhance security by ensuring file operations are executed with proper permissions
fix groovy block for binary type . fix # 2894 ( # 2564 )
updated logging warning to include the exception class name to improve clarity of error messages for better debugging
fixed bug # 49264 - correct byte be read when write umlat .
added a test for downloading a file with Norway character in the name to ensure the download functionality works correctly for various character encodings
replaced RuntimeException with CancellationException and added cancellation checks in AsyncResource and FingerprintScannerSample to improve error handling and provide clearer feedback for cancelled operations
added a null check for statistics before processing the cache to avoid potential NullPointerExceptions when statistics is not initialized
datadoc - 295 - add test for remove object from explicit collection .
move to pgraphics , also add apache license header for p2d
[ beam - 10670 ] make coder report deterministic failure on window .
added a clear all button fully revealed flag and updated scroll handling logic in RecentsView and PagedView to improve scrolling behavior and ensure proper restoration of the scroll position
hive - 25430 : enable iceberg hivesource even when there ' s no permission to load ( adam szita , review by daniel dai )
refactor address checking logic by introducing a new method ` isAddressInUse ` and updating error message handling to improve code readability and maintainability by centralizing error message validation
add - cp option to junit test to prevent junit test from run on the samevm
replaced the use of the Logger library with a direct version for verbose logging to improve logging clarity by using a more descriptive variable name
add a few annotation miss by recent patch
# 1796 - enh : add a nestedusesavepoint property ( essential use of nested transaction )
change fetchSize from a integer to a ThreadLocal < Integer > and modify related methods to improve thread safety and ensure proper handling of fetch size
[ java ] align idle strategy with network usage .
refactor : handle block request / response to avoid npe
ambari - 10446 . slider view default to hdp _ version ( dsen )
added loader control and resource cleanup methods in JavacProcessingEnvironment . java to ensure proper resource management and prevent potential memory leaks during reload operations
added a DeepCloner class and modified method visibility in ParameterizedRobolectricTestRunner . java to improve object cloning functionality for Robolectric tests
disable stack trace for resourcenotfoundexception ( fixes # 3767 )
8022598 : object . getprototypeof should return null for host object rather than throw typeerror
updated import statements and refactored OopField usage in SystemDictionary . java to enhance code clarity and maintain compatibility with the correct OopField class
updated JwkKeyListView and JsonWebKeyEndpoint to use PublicKey instead of RSAPublicKey and added support for handling public keys to enhance the serialization process and ensure correct handling of public key representation
[ gr - 41889 ] fix freeze on window when use nativebootimageheap . useonlywritablebootimageheap .
modified MBeanServerMXBeanUnsupportedTest . java file to enhance test coverage for MBeanServerMXBean functionality
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and improve readability
added a new method ` getOwnerAddress ( ) ` to multiple classes and updated the validation methods to return a null value to improve clarity and functionality by providing the owner address retrieval for transactions
add a simple main ( ) that can be run from your ide easily to run a broker without do a full multi - project maven plugin .
modify binaryclient send method to handle min / max value in range command
handle proto string with an empty index to avoid conflict with proto file .
[ java ] remove command id from a set before check for it in the driver event adapter .
added conflict handling for file operations in multiple storage managers to ensure consistent file state across different storage managers
upgrade to spring 3.0 . 5 - rc1 , fix raw type warning
replaced imports from org . apache . solr to org . apache . lucene in various filter factory classes to align with the correct package structure and improve code maintainability
added Oracle and MySQL driver configurations in DatabaseFactory . java to enable remarks reporting and use information schema for Oracle databases
updated the ` MockMethodInterceptor ` initialization to include a ` handler ` field and added a serialVersionUID to ensure proper handling of mocked methods and suppress deprecation warnings in the test
camel - 20297 camel - test - infra - iotdb : fix the wrong trigger time in filechangedexclusivereadwritelockstrategy
[ hotfix ] [ table ] wrap classloader for execution context so that they can be use by classloader .
added functionality to run onBufferChanged in TerminalView and updated buffer height handling in TerminalTextViewOverlay to improve UI responsiveness by ensuring proper UI updates when buffer changes
allow user to add service - pid to their name ( default : ` ` . class ' ' )
refactor freeze operation logic to improve handling of static calls and maintain consistent method behavior to enhance code clarity and ensure proper logic for freeze operations based on VM configuration
added support for secure trust manager configuration in TlsConfig and TlsUtils to enhance security options by allowing the creation of certificates based on insecure status
refactor code to use a variable for source and class paths in JavadocTool . java and add a new class T7091528 . java for testing purposes to improve code readability and maintainability by simplifying conditional logic
updated the EdgeColumnsGDF to use a new EdgeColumnsGDF and modified string comparisons to use case - insensitive matching to improve consistency and ensure case - insensitive comparison for better functionality
added cascade option to the OneToOne relationship in DefaultUserInfo . java to allow for cascading to all entities when retrieving the OneToOne instance
messagemanager : change message . equals and message . hashcode to be more flexible and consistent with equal and hashcode .
alexeibarantsev : fix test that fail on non - windows platform
remove unused method in rocksdbSerializedcompositekeybuilder
added static permissions handling in ProtectionDomain and updated subjectPd assignment in SubjectDomainCombiner to improve security protection domain management by utilizing the existing static permissions retrieval method
fix some crash when place flower in the inventory , close # 858
francoisreynaud : fix for parsing error message with implicit parentheses
uploadmediadetail : replace discreet error toast with more - noticeable dialog ( # 4433 )
added a new test file for handling 404 requests in Issue596 . java and modified the HTTP handler logic in HttpHandlerImpl . java to ensure proper handling of unsupported content types in HTTP requests
fix bitwise operation on bitmap ( i . e . integer overflow )
refactor ImportLayoutStyle class for improved readability to enhance maintainability and ease of understanding
added environment variable handling and improved console input configuration to enhance console functionality and support for headless environments
replace mocked AccountManagerCallback with TestAccountManagerCallback and adjust assertion assertions in ShadowAccountManagerTest . java to improve test reliability and ensure correctness with mocked objects
do n ' t cache the enclosing type since it ' s just the best we can get
renamed methods in Pairs and InPairsExpression for consistency to improve code readability and maintainability by standardizing method names
nifi - 3207 : fixed bug in putallexecutor . set ( ) that cause a timeout exception .
[ issue # 5063 ] fix nullpointerexception when get consumerRunninginfo ( # 5063 )
[ java ] generate sourceidentity when join or udp channel fail .
added a new file TopTabAction . java that implements the toolbar with a action listener to provide a visual indication for the TopTabAction component in the user interface
camel - 15133 : camel - dynamic - router - should not use filtering / matching interceptor if mode _ all _ match be set to true .
change the test case to junit 4 instead of junit4
refactor Procedure implementation to use generics to improve type safety and flexibility in the code
added functionality to display the number of edits in the AchievementsActivity to enhance user experience by providing feedback on the number of edits allowed in the application
added a validation check for the length parameter in OfflineSorter . java to ensure it does not exceed the maximum allowed value of Short . MAX _ VALUE
add absolute value accumulator to check for min / max constant long .
renamed several dataset classes from " Category " to " CategoryToPieDataset " and updated their imports to improve clarity and maintain consistent naming conventions across the dataset classes
updated the exception message in ProvisionClusterRequest to include acceptable credentials to improve clarity and debugging by providing more context on acceptable credential types
updated randomization of v [ 0 ] and v [ 1 ] to include a fixed value of 1 to ensure v [ 1 ] is always within a valid range of 0.01 , 000 , 000
change the return type of the ` compareBy ` method from int to long and simplify the comparison logic to improve performance and readability by streamlining time comparison
added SSL property handling in TestUtil and modified PGPropertyTest to check SSL status to ensure proper SSL configuration and to facilitate verification of SSL properties in tests
# 2222 enable safebrowsing for window and macos - specific file downloads
updated flight configuration handling to check for null oldConfig before cloning to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is disabled in the configuration to enhance rendering control based on user preferences
return an empty list if the table ' s top cells are empty instead of null when the table ' s columns are empty
added a custom ignore tag to the RobustJavaMethodParser class to enhance the parsing process by excluding specific native code elements
camel - 15837 : avoid to log ` ` stale version ' ' error message
fix property placeholder be not populate with spring constructor . fix # 1306 ( # 1306 )
modified PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and updated the padding handling method to improve UI responsiveness and ensure proper layout management when fragment insets
deleted the ClusterNodeInfo . java file to the class was deemed unnecessary for the current implementation
no actual changes were made to the code logic in ShieldedTransferActuator . java to ensure consistency in code formatting
added debug output statements for standard and legacy ciphers suite in ServerHandshaker . java to enhance debug information for better troubleshooting
refactor template selection logic to handle single template selection and fragment visibility to improve user experience by hiding template when only one item is selected
added a ` nodeLabelMap ` and modified the handling of duplicate nodes in ` ImportContainerImpl ` and ` ImportContainerParameters ` to improve logging and error handling when nodes are duplicated with labels
created a new file R2303044ListSelection . java for list selection functionality to implement a simple GUI that tests item selection in a list
[ java ] remove registrationid from the publication in the driver to avoid race between the driver and the driver client .
added a null check for mWorkspace in Launcher . java to prevent potential null pointer exceptions during execution
added a test for verifying compound propertyTwice behavior in StepScopePlaceholderIntegrationTests to ensure that compound properties are correctly updated and retrievable after execution
hive - 21371 : add parent row count to compute number of row in statsrulesprocfactory ( deepak jaiswal , review by jesus camacho rodriguez )
update ` springbootdocbuildtemplate ` to handle ` path ` param also when the ` path ` parameter be a parameter
fix a few more case in notificationmanager for 6.0 . x release .
updated the caching implementation in DistBuildSlaveExecutor to use CachingBuildEngineDelegate and added conditional logic for local caching to improve performance by adapting to new caching behavior based on remote configuration
improve exception message when encounter invalid json
added conditional debug logging for logging in WidgetsModel to improve performance by avoiding unnecessary string formatting when debug mode is enabled
updated Console and Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a new test method in TestSimilarityBase . java to correctly calculate the number of terms based on the state ' s length
added verification logic to the mailSender ' s send method based on the presence of a method to improve compatibility and ensure proper sending of mail messages in different scenarios
added new exit and quit methods with corresponding properties to Global . java and removed the duplicate quit method from ScriptingFunctions . java to standardize exit functionality and eliminate redundancy in the codebase
remove spring context usage - will be use directly on the demo
updated method names from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple classes to improve clarity and consistency in method naming
cloudstack - 7553 : fix and document vmware web service request cookie for vcenter
refactor assertions in ResinAcegiAuthenticatorTests to ensure consistency in authority comparisons to improve readability and maintainability of the test assertions
fix a bug in the ECKey class ( where r and s be large than 32 ) .
fix typo in system property fml . modstates
removed redundant account selection flags and streamlined account selection logic in the ReceiveExternalFilesActivity class to improve code readability and reduce redundancy in account selection handling
updated exception message format in CollectSink . java to include host IP and port to improve clarity of error reporting for connection issues
fix # 141 : improve error message if empty contract result from validation ( # 142 )
modified TexturePackerFileProcessor to handle empty JSON files more gracefully to improve robustness by checking for the absence of a root file before reading fields
added a null check for getDataSourceJNDI in PooledConnection . java to ensure proper handling of scenarios where the JDBC object is not initialized
testrefprocsanity : reduce memory requirement in testrefprocsanity . testrecursormemory ( )
make write ( byte , 0 , 1 ) more robust to make sure we can write to the outputstream even if write fails .
[ flink - 27195 ] [ kinesis ] set a short delay when refresh kerberos credential
replaced instances of ` AlertDialog . Builder ` with ` showInfoAlert ` for dialog creation to simplify code and improve readability by reducing redundancy
modified the parameter names and method signatures in T4501661 . java for clarity and consistency to improve code readability and support package - specific arguments
fix test to match jetty 12
replaced specific imports with a wildcard import and modified the dependency resolution logic to ensure only valid dependencies are processed based on their existence to improve code readability and ensure only valid dependencies are processed
added a stream management mechanism for handling multiple ZipFileInputStream instances to ensure proper resource management and prevent memory leaks when the ZipFileInputStream is no longer needed
rename datamatrix to data _ mat , data _ mat quotation - > data _ mat quotation
http : / / issues . apache . org / jira / browse / amq - 4213 - fix sequencegeneratorsource to well handle idle case
hbase - 27166 correct typo in blobserver . getcurrentactiveconnections method signature
updated annotations retrieval methods in AnnotatedDelegate and SyntheticAnnotated classes to streamline the processing of annotations to improve code readability and performance by utilizing Java Stream API
added support for ppc64 and ppc64le architecture in Bits and ByteArrayAccess classes to ensure compatibility with additional architectures
added a link to the GitHub issue tracker for an activity resolution failure to provide context about the failure to resolve the activity for better debugging
changed timeout duration in waitWithDeadline method from MINUTES to Long . MAX _ VALUE to improve timeout handling for transaction operations
fix flaky test due to change in dateutiltest
refactor BytesRef class to improve code readability to enhance maintainability and reduce complexity
added a toast message indicating that YouTube Player do not work on Lollipop to inform users that their functionality is waiting on updates
improve error message when parse an unescaped dollar quote , and the name in the sql statement
fix for issue # 519 . the vibrator be not available before show the popup ( # 528 )
updated the HTML table structure and improved color handling in DotRenderer . java to enhance visual consistency and simplify color management for better user experience
added a method to check for encoded Par strings in HiveConf and updated SetProcessor to utilize it to improve configuration handling and ensure proper decoding of encoded parameters
pdfbox - 4892 : catch stringindexoutofboundsexception and prevent the future from swallow an illegalargumentexception
updated X509Certificate class to improve certificate handling logic to enhance security and reliability of X509 certificate validation
wrap uri validation in a valid uri ( # 3903 )
added caching functionality for image loading in NetworkedCacheableImageView and updated MainActivity to use it to improve image handling efficiency by utilizing bitmap caching and enhancing loading efficiency
simplified the ` ofFloat ` method by removing the ` target ` parameter from the ` ValueAnimator ` calls to streamline the animation process by eliminating unnecessary parameters
replaced specific controller versions in BuildScriptHelper and DependencyBank with a dynamic controller version to ensure compatibility with multiple controllers versions and maintain the integrity of the codebase
make it clear that the launchedurlclassloader can load the loaded resource in a jar ( e . g . getclassloader ( ) )
fix multi - schema jdbc test failure ( # 2329 )
[ ds - 3382 ] add no - cache header to log for log purpose purpose
updated the warning message formatting to use Locale . ENGLISH to ensure consistent behavior across different locales in the warning message
refactor SolrQueryParser constructor to accept an Analyzer parameter to improve query parsing flexibility and enable custom analyzer support
removed the Copywrite copyright notice and updated the copyright information in multiple Java files to reflect the most accurate and comprehensive of copyright information for better compliance
removed an unnecessary semicolon from MainTest . java to clean up the code and improve readability
updated the implementation of TypeContributions . java to improve performance and maintainability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to improve support for VoidColumnVector in batch processing
updated variable from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct request name is used for each statement
remove unnecessary istrue / false check after add a new configuration
[ java ] add overload method for offer that accept a publication and a directbuffer .
renamed methods in XForwardedRemoteAddressResolver for consistency to improve clarity and maintain uniform naming conventions
add no - config annotation to prevent bootstrap instanciation
hbase - 16613 fixed the npe error in tabledescriptorchecker ( chaoyu tang , review by chao sun )
updated variable names and logic for calculating commit counts in BranchGraphServlet . java to ensure correct handling of requested commits and improve code clarity
8023475 : [ test bug ] test javax / swing / jslider / 6794831 / bug6794831 . java do not wait long enough for test result
added a new constant BUILD _ ID and refactored the caching mechanism in CachingBuildEngine to utilize it to improve code clarity and maintainability by centralizing build metadata handling
removed unused import statements for TxInputUtil and TxOutputUtil to clean up the code and improve maintainability
fix issue where we be n ' t call markAsDone twice , close # 1057
added a default TezConfiguration and a copyInto method call in TezConfigurationFactory . java to enhance configuration handling for Tez jobs
added null check for keyPurposes in TimestampedSigner . java to ensure proper handling when keyPurposes is not initialized
modified the conditional check for visibility state to ensure proper handling of visibility state in the playback overlay
added a check to nullify recent sounds and implemented the forget method to ensure proper handling of sound states and prevent potential null reference issues
clear the first frame state whenever a discontinuity action be fire ( # 1289 )
added new formatting options for number tick units in NumberAxis . java to enhance the readability and usability of the code by adding multiple unit units
refactor the creation of TargetGraphAndBuildTargets to use the factory method of TargetGraphAndBuildTargets instead of the builder method to improve code readability and simplify the object creation process
replaced the IndexFileNameFilter class and its usage with a direct call to SegmentInfo to simplify code and improve readability by eliminating unnecessary dependencies
add a way to check for collision in ladder so they do n ' t displace correctly
updated ApkBuilderStep and related classes to use a compression level parameter for certificate compression to enhance data compression efficiency in the ApkBuilder and SignedJarBuilder
added a test method to verify inclusion of static fields in the compiled jar to ensure correct functionality of static fields in generated code
added support for handling bytes data type in MetricFieldSpec and related classes to enhance functionality and improve code clarity regarding data types
updated error message formatting to include line breaks for better readability to improve clarity of error messages for better debugging and monitoring
replaced direct calls to ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed a constructor call in ` KucoinDealOrder . java ` to improve code readability and leverage utility methods for null - safe comparison
added caching support and a test for updating the post cache in Spring Data JPA to enhance performance and ensure cache updates are correctly implemented in the application
fixed an issue with the pronunciation file in non - english locale .
fix # 1843 : allow nullpost data to be send to any http service ( # 1844 )
added a dispatcher for managing the HttpClient ' s executor service shutdown in ClientSideSlb and updated tests accordingly to ensure proper cleanup of resources when the client is no longer needed
fix textureregion ' s vertical position when flipped
improve error reporting if there be no discovery strategy .
set context path to NA when none for metricspublisher # start ( )
[ drools - 3370 ] avoid unnecessary class loading when run drool kie a an executable model ( # 1937 )
fixed btreemap root size requirement ( see serializationheader )
added support for checking precompiled headers in the AbstractCxxSourceRuleFactory and AppleDescriptions classes to ensure proper usage of precompiled headers for rules in different environments
replaced WeakReference with a custom AccWeakReference to incorporate security context handling to enhance security by ensuring privileged actions are executed with the correct access control context
modified the visibility of the ` findNextIndex ` method and adjusted its usage in multiple classes to enhance encapsulation and improve method accessibility
inverted the logic of setting isDirect to false in VertexBufferObject . java to correct the logic for determining direct usage
fix a bug that cause u to fail the build when pick up the audio effect .
updated method signatures to return the results of localToAscendantCoordinates and localToDescendantCoordinates to improve method usability by allowing method chaining
pdfbox -5764 : fix off - by - one error and add a test
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is null
updated border spacing logic and improved variable names for clarity to enhance readability and maintainability of the code related to layout spacing based on container type and layout conditions
refactor valueNumeric initialization to use a custom ValueNumeric class for parsing to improve code readability and maintainability by encapsulating parsing logic in a dedicated class
added a check for deferred responses in the FormAuthenticator class to ensure that only authenticated responses are processed when appropriate
tweak startargs to accept - add - to - start instead of -- module - start - ini
added a default partition value retrieval in DynamicPartitionFileRecordWriterContainer to ensure that the current partition value is used when no valid value is provided
[ flink - 33737 ] [ runtime ] add null check for operatorfactory in streamgraph and streamnode
o fix string concatenation to properly compute the conflict id and artifact type
camel - 9014 : fixed kafka consumer to support rebalance from state repo . thanks to tracy snell for the patch .
improve error message if a dependency be miss in the classpath
renames ' enable notification ' to ' enable notification ' .
doc : change relative url to absolute url to fix broken link . ( # 184 )
test ( freezev2 ) : reduce the expected message count for multithread test
properly handle movement event when player be dead ( # 828 )
[ core ] fill out the miss @ return tag description
update updateuser api _ key and secret _ key description for updateuser api call ( # 4188 )
replaced switch - case statements with if statements for type checks in MfaProvider and IdleTimer classes to improve code readability and reduce redundancy
[ mng - 7267 ] remove redundant ' abstractmetadataexportmojo . java ' in favor of ' abstractmetadataexportmng ' .
added exception handling for SQL integrity constraint violations and clearer error messaging to ensure users are aware of materialized views to drop them
changed the property name from " githubAccessToken " to " gitHubAccessToken " to maintain consistent casing for property naming
added a new class RoboExecutorService for the Robolectric testing framework to provide a deprecated alternative for future modifications
[ netbeans - 451 ] fixed addition of subgroups to group tree when the user edit a group
make buildserviceandspanname method names more clear , add specialization
8076995 : gc / ergonomics / testdynamicnumberofgcthreads . java fail with java . lang . runtimeexception : ' new _ active _ workers ' miss from stdout / stderr
updated method return types and implementations to use ImmutableSet instead of ImmutableFlavor to enhance flexibility in handling host flavors for improved functionality
updated SQL command parsing to handle create options and modified parameters handling in CreateTable and CreateTableDeParser to ensure correct SQL syntax and enhance parameter management for better functionality
chatviewer : alpha64 be not set correctly , so it will be transparent
test : migrate ctiteratortest to junit 5 ( # 4499 )
added token clearing methods in tokenizer classes and adjusted related calls in documentswriter to ensure proper token management and cleanup during token processing
applied patch [ 10720765 ] that prevent crash when a block statement be declare in a final field .
updated StateMachineConfiguration and StateMachineFactoryConfiguration to remove generic type parameters from class definitions and added validation for configurers to enhance code safety and provide clearer error handling when configurers are missing
simonstewart : allow locator to be start with ` ` link = ' ' in the name ' '
solr - 7562 : fix bug in numberformat . add additional handling for float and double to string conversion .
remove duplicate logic for get current scope in aggregatelifecyclesubscriber # getcurrentscope ( )
set touchable insets to TOUCHABLE _ INSETS _ REGION to ensure correct handling of touchable insets for the user interface
removed a conditional check for the ' ~ ' character in the FencedCodeBlockParser to simplify the code by eliminating unnecessary parsing logic
added socketTimeout property handling and its setter in BaseDataSource and Driver classes to enable configurable socket timeout settings for improved control over execution timing
fix flaky test : elementattributetest can fail on slow ci server .
updated BufferedReader initialization to use UTF - 8 character encoding to ensure proper handling of character encoding in HTTP responses
refactor List . java to improve code readability and structure to enhance maintainability and facilitate future feature additions
fix vertx : asyncfile handler not call when vertx report an error
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are stable and ready for use
do n ' t execute vsp command if there be no vsp device for the physical network
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related references throughout the codebase to improve clarity and functionality by distinguishing between retries and failed uploads
updated Java version handling in ConstantPoolTagTests by replacing the method for determining Java 8 and Java 9 to ensure compatibility and correctness in generating class byte data for Java 9
print error message in case of problem of unsafe operation / override
added method to clear all client header in AsyncHttpClient to improve resource management by allowing for resetting headers
replaced Vector with ArrayList for better performance and readability to improve code efficiency and clarity by using standard Java collections
updated the default GRID _ COLUMN value from 4.0 f to 3f to improve visual layout by adjusting the grid column
added a condition to check for view creation in the CalcitePlanner class to ensure that the presence of a defined table is not validated during view creation
allow spaces after [ 0 - 9 ] [ 0 - 9 ] [ 0 - 9 ] date format character should make it work on window
graphprinter : fix stack overflow in snippet reflection
simonstewart : make the e2e test more robust by work with the inline page loading .
fix ( freezev2 ) : incorrect byte offset when recycle byte block in byteblockpool
fix featurevalueencoder to work in other locale .
add exception handle to stop thread in case of unexpected error
suppress warning on serial because it wo n ' t work with javac
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and updated ` OcamlDebugLauncher ` class constructor to simplify the class structure and remove unnecessary dependencies on ` SourcePathResolver `
added ` ` discard change ' ' message to ` ` save change ' ' dialog
added validation checks and improved error logging in OAuth20DeviceCodeRequestValidator and NexmoSmsSender to ensure proper response type handling and enhance error reporting for better debugging
added validation for index in DrillBuf . java to ensure data integrity by validating index values
hbase - 22379 add option to pass a null inputformatclass to hbasemapreducejob ( # 22379 )
replaced the duplicate append call with a redundant append call to ensure the correct collection of test classpath elements
[ gr - 38592 ] raise an error when eval be n ' t run on an unknown language .
added deprecation check for the RESERVE and updated logging behavior in ReplicationHandler . java to ensure compatibility with Solr 7.1 and improve error reporting for reserved commits
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 63755 - must be cache _ foreign _ key instead of cachevariablename for distinct query .
eckeypairgenerator : avoid unnecessary allocation .
[ flink - 14334 ] [ runtime ] fix a race condition when a job be cancel while suspend .
replaced singleton instance of ` RotationTouchHelper . INSTANCE ` with a direct instantiation of ` RotationTouchHelper ` to simplify object creation and improve code clarity
refactor UniFiControllerCache to streamline port table handling and improve code readability to enhance maintainability and clarity of the code
modified thread identifiers and constants in multiple classes to use a unique identifier instead of a fixed ID to improve clarity and prevent potential conflicts in thread identification
add filter to avoid update offer with same offer id in stress test
add support for tl 1.3 and early use of the high level ssl profile .
fix the system property set in invocationcontrol for class mock ( # 1598 )
add context to notloaded exception to avoid circular reference between parent and parent
replaced the import of DisplayUtils with a method that stores extra file data in the intent to streamline the code by eliminating an unused dependency
added error handling and improved file renaming logic in StoreDirect and StoreWAL classes to ensure proper resource management and enhance error reporting during file operations
added a task execution block to perform a task snapshot retrieval when navigating the home screen to improve user experience by ensuring the home screen is displayed during the swipe action
added a hidden flag and related methods to manage command argument behavior to enhance the functionality by allowing control over the visibility of command options
[ flink - 10569 ] [ kafka ] fix the port range in loggingkafkaplugintest
[ geos - 7129 ] separate catalog and sld from styleinfo and geoserverextensions , simplify geoserverdatadirectory usage
added permission checks for launcher activities and modified method parameters in InstallShortcutReceiver and Launcher classes to enhance security by validating shortcut creation and granting access to specific intents
added getId and setId methods to TiledMapTile and its implementations in TiledMapLoader , AnimatedTiledMapTile , and StaticTiledMapTile to enable tracking of tile IDs for better map management
refactored Manager class to improve method organization to enhance code readability and maintainability
[ iotdb - 2433 ] update path to new session example ( # 6667 )
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo to improve schema generation flexibility for change logs
fix possible race condition when update local registry
planner - 401 : add logger for single and benchmark exception ( # 859 )
remove final modifier from doPutRecord method in AbstractCacheRecordStore . java to allow for subclassing of the class while maintaining encapsulation
fix / / home path problem on mobile
added tests for handling large and slow response content in FastCGIProxyServletTest . java to improve test coverage for different response sizes and ensure proper synchronization
added a service call to StartInteractionsService in MarkReadService . java to facilitate the opening of read interactions from the service
added a conditional check for ' lintClassfile ' before logging warnings for missing annotation methods to improve clarity and control over when to log warnings based on linting preferences
http : / / issues . apache . org / jira / browse / amq - 4682 - email server should use a default port 25 if no port specify
[ bugfix ] [ iotdb - 4118 ] retry sslfactory reload on reload ( # 9370 )
changed the date format pattern from " yyyy - MM - dd ' T ' HH : mm ' Z ' " to " yyyy - MM - dd ' T ' HH : mm : ss ' Z ' " to ensure correct representation of time in ISO 8601 compliant format
updated the assertion message in the test case to accurately reflect the severity of the exception to improve accuracy of error reporting related to Mockito ' s private class visibility
# 291 fix # 291 - ignore line end with br tag
updated filePathString assignment to handle potential null parent case to ensure proper path formatting when the parent is not set
added import statement for DocCollection in TopicStream . java to enable functionality related to the Solr cloud collection
add unit test for window - 1250 parameter ( # 3884 )
add an exclusion property to the security filter so that all test pass
added validation to ensure that the current graph is a dynamic graph to prevent illegal argument exceptions when the current graph is invalid
allow annotation to be bind to method ( # 6376 )
camel - 7999 : add option to suppress exception on jsonpath ( # 4166 )
updated the instantiation of ` ControllerLeaderLocator ` in ` HelixServerStarter . java ` to ensure consistent initialization of the leader location for the Helix server
updated usage messages in CLHSDB and HSDB to reflect command - line syntax changes to clarify command usage for improved user understanding
refactored the configureChunkProvider method in FaultTolerantStepFactoryBean and removed multiple listener registration in SimpleStepFactoryBean to streamline the configuration process and enhance consistency in item processing
[ beam - 8470 ] remove deprecate write class because it be deprecate in favor of io
updated accessibility manager tests and shadow implementation to improve accuracy and functionality of accessibility features
add analytics for usage statistic ( # 3448 )
removed SourcePathResolver from several classes and classes to simplify code by eliminating unnecessary resolver dependency
replaced the existing implementation of ` EnumDataTypeHelper ` with a new class ` PostgreSQLEnumDataTypeHelper ` to enhance the organization and functionality of enum data type handling in PostgreSQL
fix log file test on window by use absolute path
updated references to ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency and correctness in handling local work settings
added support for handling unsupported operations when dropping index tables to improve error handling and ensure proper management of index table operations
added a check to update disabled flags when the visibility is not VISIBLE to ensure that the disabled scrolling functionality behaves correctly when visible
added a condition to set a specific highlighter for non - Windows environments to enhance code compatibility with non - Windows environments
use of local variable instead of xss request param when scripting be enable
replace getRawPath ( ) with toString ( ) for file path handling to improve performance by avoiding unnecessary URI conversion
no actual changes were made to the code as part of the removal of the capture listener to maintain consistency in coding style
change the value of the ` _ metaDataComplete ` variable from ` true ` to ` false ` to disable metadata completion functionality
modified the ` removeTaskTarget ` method to be void and adjusted bitmap creation logic in ` ThumbnailSearchResultView ` to improve performance by executing tasks in a separate thread and ensure correct bitmap display when no longer needed
added environment variable handling for JavaScript bundles and test cases for release flavors to ensure proper environment variable release in the build process
6500701 : enhance for loop with generic generates faulty bytecode
add a test to validate newline handling in comments and Javadoc to improve code robustness and ensure correct formatting in import statements
added hubMode property and initialization in AbstractLiquibaseChangeLogMojo and AbstractLiquibaseMojo to allow configuration of Hub mode when it ' s not provided
simplified the creation of the skip policy in JsrFaultTolerantStepBuilder and updated the condition in JsrChunkProcessor to enhance code readability and maintain consistency in policy handling
added a check to ensure the link database exists before adding it to the input path to prevent errors when the linkDb is not found for indexing
simplified the method retrieval for setting the indexing thread pool in LuceneTestCase to improve code readability and ensure the method is accessible for setting the indexing thread pool
updated the address concatenation syntax in GameCanvasImplementation . java to ensure proper formatting of the address for better readability
added a copy method for copying executions and updated how executions are stored in the MapJobExecutionDao to ensure consistent and reliable data integrity when adding new job executions
added a new file DownloadTest . java to implement a network test for downloading PNG files to facilitate the testing of texture download functionality within the Badlogic GDX framework
normalize the language name use for format .
hive - 26553 should throw error message when round argument be not specify for primitive type ( krisztian kasa , review by thejas nair )
update managedependencies to handle manageddependencies when manage - dependency have no ` ` version ' ' tag
added multiple AntPathRequestMatcher instances to the security configuration to allow access to external resources required by the application
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable the test due to instability
do n ' t write ' java . lang . object ' param , fix # 2725 ( # 2782 )
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] change constant order for notification schedule ( # 14688 )
simplify code . there be no need to check for the security context classloader in the code .
deleted the SunToolkitSubclass . java file to the functionality was deemed unnecessary or redundant
replaced MathUtils with Matrix4 and added a new method for retrieving translation values to improve the handling of rotation and scaling in transformations
added new test methods in TypeHandlerRegistryTest for registering type handlers to ensure correct type handler registration behavior before primitive types
pdfbox - 2306 : improve support for alternate pdlab color space , a suggest by michael klink
replace references to CommonsApplication with BuildConfig for API URL and path handling to centralize configuration and improve code maintainability by centralizing configuration
camel - 18399 : camel - health - add health check implementation for camel - http - main
fix a crash when try to place a florn chakram in an empty world .
added a test method for altering a table with indexes extend primary keys in AlterTableWithViewsIT . java to ensure that the table alters indexes correctly in the database
updated offset initialization in FileFloatSource and modified assertions in TestFunctionQuery to enhance document handling and testing accuracy
removed the ID field from the MongoRecordReader class to eliminate unnecessary data in the data processing
added disposal functionality to YeelightHandlerBase and its subclasses to ensure proper resource management by terminating connections when the device is no longer needed
improve compatibility for innodb auto _ increment with the engine field
fix # 3325 : share index information be not useful ( # 3328 )
server : fix npe in delete template from secondary storage
replaced direct image handling with a RobolectricBufferedImage and updated color array initialization logic to improve code clarity and ensure proper handling of buffered images
removed deprecated constants and placeholders from LauncherSettings . java to streamline code and improve clarity by eliminating unused constants
move stocktickstream . dat to org / drools / examples / broker / rules
added a new legendTop variable and updated its calculation in PieChart . java to improve chart positioning by incorporating legend top and bottom adjustments
added a check to return early if the world transform is empty to improve performance by avoiding unnecessary processing when no transformations are applied
modify to allow for the mary script to be create via the . / scripts directory
nifi - 8552 - expose remote source ip in listhttpservlet ' s flowfile attribute
removed duplicate code for deleting the compaction log file and ensured the close of the compaction logger to improve code clarity and resource management during compaction operations
remove ` ` xlink : ' ' prefix from component description ( # 720 )
( chore ) camel - aws2 - s3 : use a constant for the timeout checker
hbase - 23799 if master be shut down , do n ' t log region server transition on shutdown
fix broken test ( duh )
trim whitespace from active options before adding it to the configuration to ensure consistent formatting of active options by removing leading or trailing spaces
added depth preference functionality to wallpaper zoom behavior in DepthController to allow dynamic adjustment of wallpaper depth based on user preferences
added a test assertion to verify the success count of the overseer ' s state to ensure the correctness of the overseer transition logic
8172854 : remove check for x attribute enable on osx only
refactor ExecConstants to improve code readability to enhance maintainability and reduce complexity
removed import of ScreenRecordRule and the ScreenRecord annotation from ThemeIconsTest . java to eliminate unused dependencies related to screen recording functionality
phoenix - 4446 call phoenixconnection . setscanattributename ( scan , phoenixconnection ) after scan ( addendum )
added a check to ensure lowRange is less than 1 , 000 , 000 to prevent potential errors in lowRange calculations
adjust asyncwritecache cache size estimation , a per s … ( # 1289 )
cloudstack - 2120 : mixed zoneid for hostresponse instead of replace it to another
[ zeppelin - 1974 ] fix zeppelin - server error message when zeppelin - server be run out of the box
updated file deletion logic to use a direct reference to zfs to simplify the removal process and improve code readability
changed the type of the variable ' obj ' from Object to String and updated related methods to improve clarity and consistency in JSON handling by using a dedicated JSON string instead of a method
updated poll times in SoftAutoCommitTest from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 3 ` to allow for a longer wait time before the hard commit process
fix flaky test : ensure listener be always call before / after method .
updated classes related to the dial package to improve consistency in naming and structure to enhance maintainability and clarity of the dial - related components
removed extra space in error logging statements to improve code readability and maintain consistency in logging
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to utilize the latest features and improvements in the container
change return value from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and add a new ` TestHook . java ` class to streamline bootstrap path retrieval and implement error handling for missing resources
[ mod ] make patchy loadable from the modded jar into the modded jar .
[ hotfix ] [ yarn - tests ] remove dependency on yarn client in yarnitcase
add proxyservice stats to localmapstatsprovider for test
deleted the AllTests . java file to eliminate obsolete test cases that are no longer relevant
added handling for Unicode character 30 and 31 in AbstractWordConverter to improve text formatting for better readability and usability
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory allocation behavior under large stack trace invocations to ensure that memory calculations are not starve inadvertently defined
update method call to use a helper function for retrieving result map mappings to improve code clarity and maintainability by using a dedicated method for result set mapping
added a flag to handle event processing in UIText . java to ensure that events are properly handled during processing
deleted the ` Controller . java ` annotation and updated the ` Weldby ` class name to ` WeldModule ` to streamline the codebase by eliminating unused annotations and clarify the class ' s purpose
disable zero width quantifier when capture group in empty check
added a protected variable ` liquibaseProLicenseKey ` and removed its initialization from ` AbstractLiquibaseMojo ` to streamline license key handling and improve code readability
mondrian : fix null schemareader in rolap cube . setmeasureshierarchymemberreader ( )
add a debug info option for generate debug information
mondrian : fix for bug # 1743819 , document mondrianproperties . jdbcfactoryclass
add support for local friend paths in Kotlin compiler and integration tests to enhance the modularity and shade dependencies of Kotlin components
added aliases for character scripts in Character . java and modified file reading logic in CheckScript . java to improve alias handling and enhance code readability in reading scripts
refactor ExecutionCommand equality checks to use equals method for better readability and maintainability to improve code clarity and consistency in string comparison
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
modified OCFile . java file handling methods to improve code readability and maintainability
added a ` toString ( ) ` method to the ` SystemScope ` class to provide a readable string representation of the object for easier debugging and logging
updated CSS parsing logic to handle different types and parameters for improved error handling to ensure correct parsing and validation of the cmyk ( ) function to prevent runtime errors
added a test method for verifying the reverse scan behavior of local indexes to ensure that the local index correctly returns the expected number of rows from the reverse scan
replaced InstrumentationRegistry with ApplicationProvider and updated test method names for clarity to improve code readability and maintainability by using a more descriptive term
updated toast messages to use string resources for better localization to enhance user experience by providing clearer and more descriptive messages
simplified the loop condition in RendererUtilities and added a new test method in RendererUtilitiesTests to improve code readability and ensure accuracy of the tests
replaced Iterator with ArrayNode for ask and bid operations in KrakenStreamingAdapters . java to improve type safety and simplify the code by using ArrayNode for better readability
wrapped database execution in a try - catch block to handle SQLiteException to improve error handling for duplicate column additions in version 30 - > 30
removed unnecessary print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
hive - 10356 : arrayindexoutofboundsexception may occur when perform data join on multi - table join due to insufficient table size row . ( siying dong via ning zhang )
fix background resource of select item when select all
added assertAuthentication functionality to SecurityMockMvcResultMatchers for better validation of authentication results
vpc : do n ' t accept network with disconnected gateway when vpc be create ( # 4258 )
[ beam - 10955 ] skip flinksavepointtest . testflinksavepointifrequired test on jdk 11
fix the position of intdef annotation on field in the ui module
corrected the loop condition for processing actions in the Actor class to ensure that actions are processed correctly based on the current index
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the Bitmex API changes
[ task 71440 ] add failing testcase to prove that orgunit be not consistent with parent / child orgunits
lodcontrol : check for null spatial before try to use it ( # 1269 )
lucene - 3568 : fix shingle bug with conditionaltokenfilter where position be incremented
make unsafestorenode and unsafestorenode stable across graph . add ( )
replaced the superclass method ` super . putAddress ` with ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure compatibility with updated memory I / O operations
added an assertion to verify that the ` findAny ( ) ` method returns false when no records are found to ensure proper validation of the ` findAny ( ) ` method call
removed unnecessary parameters from AuthenticationAttrProcessor ' s class to streamline code and improve readability by reducing unnecessary complexity
added null check for key in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that null keys are not handled safely by preventing NullPointerExceptions
remove the unsupported typeface method from CodenameOneTextPaint class to improve error handling by providing a clear exception message when typeface cannot be set
added new open methods for AzurePinotFS , LocalPinotFS , and HadoopPinotFS classes to enable input stream loading for improved data handling
simonstewart : delete the deprecated fail ( string ) method from the webdriverrunner
modified the conditional check for item size in SolrRequestParsers to improve clarity and maintainability of the code
refactor DefaultResultSetHandler to simplify the creation and usage of ResultObject to enhance readability and maintainability by eliminating unnecessary abstraction
updated SQL syntax in CreateTableGeneratorTest . java to include double quotes around schema names to ensure compatibility with SQL standards for better query execution
refactor filtering logic in VectorizationContext to handle filter mode and improve expression selection to enhance the functionality and correctness of filter operations in the vectorization framework
add a generic cast for ` moveselectorconfig ` in exhaustivesearchphaseconfig
refactor ModifyDataTypeChange to use modifyDataTypeStatement instead of ReorganizeTableStatement to improve code clarity and maintainability by consolidating operations
updated cluster name handling to use constants instead of hardcoded values to improve code maintainability and reduce the risk of errors related to hardcoded values
improve logging in case of connection failure .
added conditional style assignment based on the length of styleStrings to improve style handling for various styles in the Nano application
switch from jnbt to nbt 1.7 - snapshot to fix some compatibility issue .
updated the return message in NoToStringOnStringType . java to indicate that No # toString ( ) is currently used to improve clarity of the error message for debugging purposes
8236106 : [ testbug ] shenandoah : make testthreadfailure more resilient
fix : testng - 424 : use failurecontext instead of count . count ( ) where possible .
update token retrieval to use a dynamic bandwidth value to ensure the correct bandwidth value is returned from the token
update java doc to emphasize that these method be not yet implement yet .
refactored the ` doPrintEntry ` method to remove the boolean parameter and simplify its logic to streamline the code by removing unnecessary warning checks for non - Windows key store types
added a space after the cancelExecution ( ) method call in TaskAsyncCallTest . java to ensure consistent behavior in task cancellation logic
added checks for dialog opacity and background properties in Dialog and Frame classes to ensure only valid components are used to prevent potential errors during dialog operations
changed the visibility of the state array from private to private final to ensure the state array is immutable after initialization
updated RedisObjectFactory to conditionally configure the sentinel connection based on the presence of a password to enhance flexibility in connection configuration for better Redis integration
added last see delayed message property to jabber chat room , and update it when the room be expire
use callback . noop instead of new one to avoid race condition .
replaced CreateShareOperation implementation with a new OperationsService implementation to streamline the operation handling and improve code maintainability
do n ' t include value for @ inject on fieldpropertyinject , since we already have the value annotation
fix : update y axis for plotmanager when draw pojos . close # 3804
test only : do n ' t swallow nullpointerexception in smackintegrationtestframework
tmi - 110 : fix a bug in out of bound exception and add a test for jpeg with interop subdir
added support for ENABLED _ LS mode in VersionedTargetGraphCache and modified its usage in VersionTargetGraphMode to enhance dependency handling based on versioning mode for better performance
added a condition to check if the child format is video before processing to ensure that processing only occurs for video formats to avoid potential errors
refactor AutoMlClient and AutoMlClient for improved code clarity to enhance maintainability and readability of the code
[ add ] jnativesloader be able to load lwjgl native , but it ca n ' t be load at all .
updated CSVRequestHandler to support escape functionality and modified CSVStrategy to accommodate this change to enhance CSV handling by allowing escape characters for better request processing
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure support for only the Authorization Code grant type and improve test coverage for related scenarios
updated exception messages to include context for improved clarity and debugging to enhance debugging capabilities by providing more context through exceptions
added a new query to test the results of aggregating a specific column by a _ string and a _ byte count to improve data retrieval validation and ensure expected results from the database
added a mapping for the RSquare expression in RegressionEvaluator and verified its square value in StreamExpressionTest to ensure the correct simulation of regression results in a specific unit test
allow for mdc request header to be specify via request . getheadernames ( )
refactor SparkPlanGenerator to use the MapWork object directly for input paths and split size settings to improve code clarity and reduce casting overhead when accessing MapWork instances
fix for issue with jndi folder image on each language - specific file
updated caching strategy in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer handling to improve cache management and ensure proper authentication flow for trusted issuers
update resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and add a new test case in ` AbstractScriptDatabaseInitializerTests ` to ensure correct validation of resources and provide clearer error messaging when database is not initialized
sulong : add get ( ) and remove a redundant check for null return type
removed a redundant sleep statement from AbstractBasicMockingIntegrationTest . java to eliminate redundancy and improve code clarity
added a new file KernCrash . java to implement a custom font rendering example for kerning text to demonstrate the use of kerning text in a graphical user interface
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure proper validation of the linked hash map functionality
add new method ` getInterfaceAddresses ` to retrieve network interface addresses with a prefix option to improve functionality for handling network interface addresses while ensuring proper prefix handling
fix # 161 . make sure we cancel the housekeeper task upon shutdown .
updated the address check from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to ensure the correct address is used for slave communication
fix issue # 134 ( wrong javadoc of assert )
added a new test class ` Issue247Test ` for testing map creation functionality to ensure correctness of the ` getTreeMap ` method in the database implementation
changed the type of results and modified the doInBackground method to accept ArrayList < String > instead of CategoryItem to improve data handling efficiency and ensure clearer exception handling
modify ValidatorTest to validate max age validity based on the birth year to ensure correct validation of max age fields in specific scenarios
added error handling features to GrblController for improved response processing to enhance error reporting capabilities in the Grbl backend
added conditional return statements for workspace scroll format based on nScreens variable to improve UI clarity by providing appropriate string resources for different screens scenarios
removed the ' count ' parameter from the ' getTrades ' method across multiple classes to simplify the method signature for retrieving trades without needing a count parameter
simplified the return statement and added a null check for the str variable in ConsoleReader . java to improve code readability and prevent potential null pointer exceptions
updated the path for the jdkPath in JavaBuild . java to remove the " . jdk " extension to streamline the file path for better readability and maintainability
refactor code to replace calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple files to improve code readability and maintainability by using a more concise method
updated JFCModel constructor to accept a logger parameter and modified related methods for logging to enhance logging capabilities and improve error visibility during model initialization
throw illegalargumentexception when tolerance be set to 0 ( # 1201 )
added methods ` createView ` and ` dropView ` to ` TestUtil ` for creating and dropping database views to enhance functionality for creating and dropping views in database operations
8232727 : nanest do n ' t expect double and float test on ibm jvm
added DesktopTaskbarUIController class and modified TaskbarManager and TaskbarManager to utilize it to enhance taskbar management capabilities for non - PC devices
added progress tracking for mod item registration and updated button states in ModItemAdapter to improve user experience by ensuring accurate task count updates during UI updates
updated file handling methods in Files . java for improved functionality to enhance performance and maintainability of the code
refactor interceptor handling in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to improve clarity and consistency to streamline server interceptor management and enhance readability in the code
fixed npe thrown in the testing console when a test have run behind the vm
fix packinfo lookup , now log mod id instead of file name .
chore : update gapic - generator - java version to 2.1 . 0 ( # 606 )
added methods ` grow ( ) ` and ` growY ( ) ` to the ` Cell ` class to improve flexibility in managing cell resizing operations
updated DefaultInputHandler to improve key binding handling and streamline the initialization of bindings to enhance code efficiency and readability by reducing unnecessary state management
no - jira - fix up unit test which fail with - dtests . multiplier > 1
replaced long array with byte array and updated iteration logic in MetricsMemoryTester . java to optimize memory usage and add a memory fail count check during the allocation process
deleted the JobParametersPrototype . java file to remove obsolete code to streamline the project
[ flink - 18552 ] [ table - planner ] add support for disable mapping table security
updated references from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJC _ CXX _ HEADERS in AppleLibraryDescription . java to ensure correct identification of exported Objective - C headers
disabled dump _ to _ file by default for now .
add the ability to use additional eos target on amazon qdox
[ java ] logbuffers . open should be able to release resource even if spy position be below producer position .
updated the condition to check for no info output options in BaseFormatter . java to ensure that the application handles cases where no info output options are available
fix # 443 : allow uri port for ssl = false by default
fix for # 85 - update domoutputoptions to support new output format
fix issue # 134 ( wrong javadoc of assert )
topic can be retained in publication mode ( # 5599 )
added ` testCaseName ` to the JSON fields in ` TestResultSummary . java ` to accommodate case - specific test cases in the serialization process
[ flink - 15807 ] [ table - planner - blink ] fix compile error for group - by and group by operator
no effective change - remove accidental import of fastparse . core
be e5c2c2a : override ssl _ ctx _ new ( ) to throw sslexception on invalid session .
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` for better readability and consistency to improve code clarity and maintainability by using a more descriptive method name
[ calcite - 2295 ] use ansi sql dialect in calcite - runtime . xml for conversion of sqlnodeconvertcontext
changed log level from debug to trace for firmware update handler to improve log granularity for better debugging and monitoring
added tests for handling null dates and timestamps in DateTest . java to ensure correct retrieval of dates and timestamps when handling null values
refactor string concatenation to use a consistent approach and improve readability to enhance code maintainability and ensure proper formatting in the output
added a test for repository permission handling in UserModelTest . java to ensure correct permissions are returned for multiple repositories based on their permissions
added a new file ` Test7088020 . java ` implementing a test method using method handles to demonstrate expected argument types to validate correct invocation of method handles in Java
replaced the existing audience restriction check method with a new approach using a HashSet to improve clarity and maintainability of audience URI validation logic
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve clarity and maintainability of cache refresh logic
modified the error handling in StdErrLog to check for null before invoking System . err for stdout and standardized error output behavior to improve error handling by avoiding repeated calls to System . err when no longer needed
added a new warning constant SEPARATION _ ORDER and logic in BasicEventSimulationEngine to track active stages to enhance the warning reporting by identifying inactive stages in the simulation
updated the optimization parameter from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to ensure the optimization operates on the correct real - time table configuration
modify the SQL command in PhoenixHBaseAccessor to handle aggregation split points and modify the normalization behavior in UpgradeCatalog240 to improve performance by avoiding unnecessary query execution when aggregating metrics
[ flink - 39967 ] [ runtime ] improve the javadocs associated with savepointv2 , filestatehandle
added a test for setting and getting a Bluetooth class in ShadowBluetoothDevice to ensure that the Bluetooth class is correctly set and retrieved from the remote device
fix checkstyle issue in io / player / glowplayer . java ( # 722 )
drools - 5725 dmn : allow sum ( ) function to work with empty list ( # 3342 )
replaced a call to ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with a direct call to ` graph . readUnlockAll ( ) ` to simplify the code by directly accessing the graph ' s locking method
updated coreNodeName concatenation to use coreName from nodeProps to ensure consistent naming of core node names across different components
chat : move initial backpressure update to chatactivity .
fix incorrect license header of xml related test
added a suppression annotation for the SimpleText codec in BaseVectorSimilarityQueryTestCase to prevent the use of SimpleText codec in the test case
updated type checking logic in ` Types . java ` and added a new class ` T7005671 . java ` with multiple casts to enhance type safety and demonstrate array casting functionality
updated subTriangle calculations in DelaunayTriangulator and modified test class name in LwjglDebugStarter to correct triangle positioning and ensure proper test coverage
8231398 : fix doclint warning in java . util and subpackages
refactor JWTClaimsSet initialization to use builder pattern and improve readability to enhance code clarity and maintainability by replacing the constructor with more descriptive properties
fix performance regression for stack overflow ( un ) protection .
added static methods to create shadow objects for SQLiteDatabase and ShadowContentValues in the Robolectric framework to enhance flexibility and usability of the Robolectric framework
updated method calls from ` initiateGLInstances ( ) ` to ` initiateGL ( ) ` in ` LwjglAWTCanvas . java ` to improve clarity and consistency in OpenGL rendering initialization
replaced the bytesPerDim variable with a ArrayUtil . ByteArrayComparator and updated related comparison logic to improve code clarity and ensure consistent comparator usage for array operations
updated locale handling to include a script parameter and improved default locale initialization logic to enhance internationalization support and ensure default values are set correctly based on the provided script
updated the method to return the last set text alpha instead of the current text alpha to ensure the view reflects the most recently set text alpha value
fix typo in configchangetypedetector warn message ( # 3078 )
replaced specific test class imports with a call to a suite runner method to simplify test execution by eliminating unnecessary test classes
modified GzipFilter and GzipFilterTest to trim whitespace from tokens before adding to ensure consistent formatting and avoid duplicates caused by leading or trailing spaces
updated the assignment of the output type in the Response class to ensure consistent output type handling across the application
updated regex implementation property from JDK to JONI to use the preferred regex implementation for improved performance and compatibility
replaced Handler with FutureTask and updated related methods in ViewCapture . java to improve task handling efficiency and simplify code
added support to the voice to get style ( < style > tag ) for the < style > element in the < style > element .
check if destfolder exist before create it , prevent npe
update the node discovery IP address from 0.0 . 0.0 to 127.0 . 0.1 to ensure compatibility with the latest network interface specifications
camel - jbpm - rename jbpmworkitemhandler to outcamelcamelworkitemhandler since it ' s already in camel .
tmi - jpeg : remove static import and make private
renamed ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and updated associated methods to improve clarity and consistency in naming conventions
- remove @ version that use svn revision a it make useless difference when compare svn with github
przywr ó cenie wersji pliku sprzed commita - niepotrunnerhall for resolve the inheritance issue .
added memory freeing functionality to the OperatorContext class to ensure proper memory management and prevent memory leaks
updated error message format to remove unnecessary line characters to improve readability of error messages for better clarity
updated eviction and statistical tracking in ConcurrentLRUCache and modified methods in FastLRUCache to use AtomicLong for better tracking of cache evictions and statistical data
fix race condition in sourcetab initialization and add method to run in javafx thread
update networkaddressmanagerserviceimpl to use correct local ip address .
fix : set data root and source root for command line help
added constructors to MarkedClientEnabled and MarkedServerEnabled that log successful initialization of Admin client and server to enhance configurability and logging capabilities for better debugging
[ hotfix ] [ table - common ] fix typo in tableenvironment javadoc
removed the setStatementTimeout method and adjusted the timeout settings in MapperBuilderAssistant . java to streamline timeout handling and ensure consistent timeout configuration
modified the parameters and method signatures in TypeScript2JavaScriptTranspiler and TypeScript2JavaScriptWithTscTimeout to remove the hangingTscTimeout parameter to streamline the code for clarity and maintainability by standardizing parameter types
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable geolocation data serialization for improved authentication capabilities
updated Preconditions checks to ensure destination is a Build Artifact and modified related test assertions to ensure correct handling of artifact types and improve test reliability
tika - 2305 -- do n ' t throw exception if we ca n ' t parse any excel document
make sure modification of conditionals be not trigger concurrentmodificationexception
add additional sleep when there be no data to read from the stream before stop the nio connection .
added checks to ensure that ` hasValue ` is not called on instances of ` Optional ` with the same string representation to improve error reporting for cases where the names of these values fail to maintain consistency
added a new flag for switching in the BackgroundAppState and modified the appearance logic in ShelfScrimView to improve the responsiveness and visual consistency of the app interface
fix a npe in the shader node editor when the navigator panel be collapse
mow - 498 create ` ` temp ' ' bound on all screen .
fix javadoc warning of error occupied - in - on - exception route
astro : schedule new discovery job at same time ( # 3574 )
simplified the incrementation of ` irrUnit ` and ` pemUnit ` to improve code readability and maintainability
camel - jms : ignore test that hang the jms cluster
replaced and added import statements for Guice and Guice components in GuiceFactoryTest . java to improve clarity and maintainability of the Guice integration tests
added system feature management methods to RobolectricPackageManager and updated related tests to improve functionality and ensure proper handling of system features
fix : optimizer can not load rca config file when it end with ` ` / ' '
[ flink - 3992 ] [ runtime ] remove unnecessary log line in task . java
hhh - 14625 avoid a nullpointerexception find via oss - fuzz
updated BoxBuilder and InlineBoxing classes to handle start and end text styles more effectively to improve clarity and functionality of the box rendering logic
on behalf of johannes @ brodwall . com : fix tel communication error . improve functionality .
change the column type alteration logic for the UPGRADE _ ITEM _ TABLE in UpgradeCatalog260 . java to ensure consistent column type handling across different database types
updated error messages in BaseTableDataManager to provide clearer guidance on checking for space and write permissions to enhance user experience by guiding users on necessary permissions for directories
updated method signatures and added helper functions in DatasetUtilities . java to enhance functionality and improve code readability
add selector ID to the selection string representation to improve clarity and traceability of selection criteria
fix code analysis report by checkstyle
updated taskbar visibility management and added alpha control for smoother transitions to enhance user experience by improving the animation behavior and visibility of the taskbar while interacting with different states
removed unnecessary whitespace in KeyExchange . java to streamline code for better readability and maintainability
added a type check for JdbcConnection before querying the version ( ) method to prevent potential ClassCastException when the connection is closed
updated file index calculations and assertion assertions in ServerMainTest . java to ensure correct handling of crash file indices and improve code readability
added methods to retrieve the media recording MIME type in both CodenameOneImplementation , MediaManager , and Display classes to improve maintainability and centralize media type retrieval across different components
make the shaders public and also use the new shaderhelper method
[ calcite - 2426 ] fix flaky test in druid adapter .
updated the initialization of ZkStateReader to include zkClientTimeout in the creation of CloudSolrServer to ensure proper timeout handling for zk state reading
pdfbox - 2602 : disable external entity relate feature to the xmp parser , a suggest by michael klink
added a new interface ClientRegistrationIdentifierStrategy in the OAuth2 client package to provide a standardized way for managing client registration identifiers
camel - 8705 : replace if statement with while loop in urlhelper . java ( # 7053 )
refactor varargs access logic and introduce a new test class for handling varargs parameters to improve clarity and functionality of varargs access checks during resolution
refactor border property checks to use a dedicated method for clarity to improve code readability and maintainability by consolidating repeated logic into a single method
solr - 10563 : reduce reconnect backoff log from info to debug
updated the ` register ` method to include a ` HubRegisterResponse ` parameter and adjusted related imports in ` InternalDropAllCommandStep . java ` and ` HubUpdater . java ` to enhance functionality by allowing handling of Hub registration responses
refactor byte manipulation to use ` Byte . toUnsignedInt ` for consistency across byte operations to improve clarity and maintainability of unsigned operations
remove unnecessary parentheses in OpenTracingTransactionProducer . java to improve code readability and maintainability
change default cached build engine from ENABLED to CACHE to improve efficiency by utilizing cached data instead of enabled
changed the value of rangePannable from true to false to disable range panning in the CategoryPlot
update the main activity setting and view removal logic in AllAppsContainerView . java to ensure the correct work mode switch is displayed based on the current active page type
changed access modifiers of glCaps and GcodeRenderer to private and FPSAnimator in Visualizer2TopComponent . java to improve encapsulation and ensure proper initialization of the GcodeAnimator
added handling for CancellationException in FunctionTest . java to improve error handling during cancellation processes
promote visibility of jarresource constructor to package private one ( fixes # 238 )
fix javadocs , and make defaulttrackselector javadoc copy & paste mistake
added a loop to wait for unseq merging in LevelCompactionTsFileManagement . java to ensure proper timing between unseq and unseq operations
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the test aligns with the correct trading currency representation
updated variable names and assertions in multiple test files related to Hibernate database schema to enhance code clarity and ensure tests accurately reflect the new structure
refactor Unicode class to improve code readability to enhance maintainability and ease of understanding for future developers
modified the ` installAutoInstance ` method to accept a ` Service ` parameter and added the ` updateHiveLLAPSettingsIfRequired ` method to enhance the functionality by allowing dynamic property updates based on the service component version
updated the completion handling in SendHeadersFirstPublisher . java to ensure proper completion signaling in the future
update aws sdk v2 to v3.1 . 2 ( # 5995 )
added support for BIG _ DECIMAL value handling in RangePredicateEvaluatorFactory to enhance value evaluation by correctly applying BigDecimal values for improved accuracy
rename inner to javacprocessingenvironment in treebackedprocessorwrapper for clarity
remove debug code that print the annotation of a generic parameter type
added companion preferences and streamlined seeking logic in the PlaybackController and VideoManager classes to enhance functionality by ensuring compatibility with AC3 and improving stream handling
[ grid ] add json content to the list of localnodes
added deprecation warnings to DelegatingStatement . java and DiskFileItem . java to address deprecation warnings for DBCP and FileUpload
[ iotdb - 2711 ] fix nullpointerexception when query template with ' select into '
refactor RTimerTree class to improve timer functionality to enhance performance and maintainability of the code
move some graphbuilder class to core so they can be reuse by graphbuilder .
fix # 598 - fix round error for test case ( issue # 598 )
updated ClientConnector to use a formatted queue for thread pool and scheduler initialization to improve clarity and maintainability of thread management and scheduler configuration
gh - 2237 : improve layout of result dialog
added new phone number fields to ScimUserEndpointDocs . java to improve documentation clarity for user phone numbers
fix for nutch - 830 : indexfiles , indexdocs , indexhtml incorrectly declare .
added null check for responseMap and error logging for HTTP responses in JsonHttpPropertyRequest . java and URLStreamProvider . java to improve error handling and clarity for unexpected HTTP responses
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
ensure that ` ` -- suite . parallel ' ' be pass only if it be not defined yet
cloudstack - 7822 . do n ' t have a backup / restore vm w / o swap .
add handling for SCARD _ E _ NO _ SMARTCARD in the error check to improve error reporting related to smart card presence
added @ SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary console output during test execution
fix bindykeyvaluepairunMarshall by add test case ( and fix for scope )
disable owner and usetimestamp by default ( # 4771 )
[ hotfix ] [ runtime ] fix check exception method to accept a throwable
updated hash function to handle null values for ` via ` , ` context ` , and ` pathFromSeed ` to improve robustness by avoiding potential null pointer exceptions
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object handling in LiquibaseXMLTransformer to include support for additional data types and improve code clarity
increase proxy . cert . validity so ssl can be verify on all platform
updated frame and time handling in ThreadHandler . java to include smooth delta and last delta update to improve accuracy in frame timing and ensure accurate time tracking
added null check for paginator and updated rawUrl assignment in HttpBatchReader and HttpScanBatchCreator to ensure proper handling of pagination when the paginator is not set
hive - 23704 : fix nullpointerexception thrown when findnextcompact fails ( l á szl ó bodor review by peter vary )
added serialization of fragment state and implemented onSaveInstanceState method in ShadowFragmentActivity to ensure proper handling of fragment state state preservation during configuration changes
refactor code for improved readability and consistency in formatting to enhance maintainability and make the code easier to understand
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the color resource loading correctly handles color references correctly
added error handling for NoResultException in AbstractJPAQuery and a corresponding test case in AbstractStandardTest to improve robustness by logging exceptions and ensuring that null values are correctly treated as unique results
fix list of community without parent when their parent be empty
updated the way depth preference is retrieved in DepthController to ensure compatibility with LawnchairApp for retrieving wallpaper depth effect
removed an unused import statement for ProcessTools in LocalManagementTest . java to clean up the code and improve readability
fix energy update order bug ( # 1437 )
add null check for extensions and improve string formatting in ExtensionStack to enhance readability and prevent potential NullPointerExceptions during string representation
2 . x : fix flowable . flatmap . flatall ( ) on empty ( # 7016 )
[ type : refactor ] add connection timeout when get a table size ( # 5368 )
updated the initialization of AndroidPlatformTarget to maintain consistency in code formatting to improve readability and maintainability of the code
updated the import statement for ModelTest from NewModelTest to ModelTest to ensure consistency with the updated model testing framework
fix edge sync issue due to miss fetchers
added a new test and modified caching logic in CachingBuildEngineTest . java to ensure that output hash is calculated when the cache is not writable
camel - 8205 fixed the test error of camel - netty with thanks to mark
updated the partition alteration method to use Warehouse for table name instead of old name to ensure consistency in partition management during alterations
update the error message to specify the Vertx instance with the preferNativeTransport option set to true to improve clarity of the error context for better debugging
test : add a test for enum type handler ( # 6889 )
[ # 133 ] add javadoc to streamex . spliterator ( ) javadoc
removed query timeout settings from SessionImpl . java to streamline query handling by eliminating unnecessary hints
added a new class StaticLoggerBinder to facilitate the binding of static logger instances using the NOPLoggerFactory
replaced multiple instances of ` familyMap . put ( family , list ) ` with a consistent use of ` family ` across multiple files to standardize the organization and improve code clarity
added orientation changes in TaskbarManager for handling orientation changes to ensure correct display of the taskbar when orientation changes
escape xml in dialog when add room nickname .
updated method call syntax in StoreDirect . java and added two new test files in Issue265Test . java to ensure correct behavior of the compact method and validate behavior with no tx entries
added @ SuppressWarnings annotations across multiple Java files to suppress warnings related to mutable and self - reference issues
jbrules - 2614 executionflowcontroltest : move theolder class to the sandbox itestsuite
formatted code for better readability and consistency in style to improve code maintainability and reduce potential errors in logging
fix flaky test on non - blocking api
fix genesis import on invalid block ( # 1451 )
updated action handling logic in DefaultPlaybackController . java to improve clarity and maintainability of playback actions retrieval
[ scb - 2716 ] [ scb - 2717 ] runtime : use copyonwritearraylist instead of synchronized list in nativelibrarysupport
added conditional logic to allocate and set uniform data in AllAppsView . java to improve graphical rendering by properly applying adjustable uniforms
added a check for the presence of a colon in the key alongside the existing index check to enhance validation logic for processing headers in HttpURLConnection
added PrincipalResolver as a dependency injection annotation to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance the integration with Apereo ' s authentication framework
replaced ObjectMapper with Noggit JSON parsing for JSON handling to improve compatibility and flexibility when reading JSON data
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve handling of trailing slashes in data structures
added a new method ` matchesAny ` and corresponding test cases to the ` PatternsMatcher ` class , along with corresponding test cases to enhance pattern matching functionality and ensure proper handling of various patterns
updated error message formatting in LoadIncrementalHFiles . java to improve readability and clarity of the error message
fix fire potion change ( # 1897 )
reorder the call to ` beginOrAdjustReorderPreviewAnimations ` for clarity to improve readability and maintain consistency in the animation flow
corrected the calculation of ` decreasePercent ` in ` ContractStateCapsule . java ` and formatted the conditional check in ` ResourceProcessor . java ` to improve code readability and maintain consistent formatting
added logging for readiness in AsyncContentProducer and improved logging in BlockingContentProducer to enhance debugging capabilities and maintain proper state management during asynchronous operations
add null check for weightField in DocumentDictionaryFactory . java to ensure that the weightField is mandatory and improve error handling
added plist variable substitution functionality to the AppleBundle class and a corresponding test in AppleTestIntegrationTest to enhance the flexibility and testing of plist variable substitution in the build process
fix turret bulling and enable shooting for turret
updated the return type of adaptOrder methods to explicitly cast the order to Object to ensure proper type handling for OrderCreateApiRequest and improve code clarity
added a new file ` PreParseGrammarTest . java ` with XML schema grammar parsing functionality to facilitate testing of XML schema grammars by using the XMLGrammarPreparser
8173818 : add miss ` @ suppresswarnings ( ` ` doclint : miss ' ' ) for ` ` class ' '
added FontManager import and font overriding logic in ExtendedEditText . java to ensure custom font rendering for improved text input handling
added null check for currentUser and created a new test for unauthorized access to ensure proper handling of cases where no user is present and improve test coverage
camel - 8253 : camel - cxf - xfrs - endpoint should log warning if the encoded uri be already a unsafe character
added overridden setUpData method to JDBCGeometryTestSetup class to ensure proper initialization of data during tests
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ flink - 18336 ] [ rest ] stop restore attempt for already cancel task in case of rollback
make remotejmeterengineimpl create rmi registry if it ' s configure to do so .
updated logging statement to use StringUtils for joining strings to improve code readability and maintainability by using a standard library
added display metrics retrieval and modified test cases for qualifier handling to ensure accurate test coverage for display metrics in the application
[ java ] add the cluster memberid to the service to provide a way to allocate cluster member .
updated the logic to set ` numAttributes ` based on the major version check to ensure compatibility with Java 21 and later versions
updated the evaluation logic to handle negative infinity and modified the hash code generation to include the symbol string to ensure correct evaluation and hashing behavior for special special cases
tweak log around async processing error
added authentication and authorized routes to the AuthenticityController and created corresponding test cases to enhance authentication flow and ensure proper functionality through unit testing
make loweringphase always check if the next node be a replacee ( i . e . replacee )
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for the HttpClientRequestImpl class
update track selection to prefer content over technical preference .
use lowercase javadoc annotation to make ' mx javadoc ' happy
mow - 812 crop image with cropbox on the top of the image : do n ' t remove crop when crop
[ hotfix ] [ javadoc ] fix checkstyle violation in unitofworkfactory
added a new variable ` allAppsCellWidthPx ` and updated references in both ` WidgetPreviewLoader ` and ` WidgetCell ` to track the widths of all apps cells for improved layout consistency
tika - 4336 -- add content type parameter and use name from content - type header in mailcontenthandler
updated URI construction to include fileId instead of remote path to ensure correct identification of thumbnail files by using local ID
apply minor change to make the mark ( for inputstream ) work for java source .
deprecate ' async ' , ' async / ' in favor of ' async / ' .
ambari - 20217 . ambari should not show error stack by default . ( mpapirkovskyy )
bug 14441 : deletenetwork - log warning when cleanup non - existent account
removed exception handling for foreign calls in SPARCArithmeticLIRGenerator . java to simplify the code by always emiting foreign calls regardless of availability
[ drools - 6842 ] prevent compatibility compatibility with kie 5.x api ( # 2625 )
added a blocking mechanism to handle asynchronous purchase callbacks in the onRequestPurchaseResponse method to improve responsiveness by ensuring asynchronous processing of purchase callbacks
increase the default timeout of the UnboundedSourceSystemTest from 100ms to 1000ms to allow more time for tests to complete successfully
rearranged import statements and modified the style qualification logic to improve code readability and ensure proper handling of resource names
deleted two files and added classes MrefStat and MrefStat1 with relevant methods to introduced new class implementations for improved lambda method reference statistics
updated scope handling in DependencyInsight . java to use StringUtils for null or blank checks to ensure consistent behavior in scope retrieval when the matched scope is blank
added error handling for " no trades " and " bad status " in BTCETradeServiceRaw . java to improve robustness by handling exceptions more gracefully during validation
use hamcrest assertion instead of junit in tests / integration / mp - backport main ( # 1749 ) ( # 6202 )
add support to get multiple payment protocol request url in bitcoin uri
planner - 383 : improve error message for unsupported type arguments
removed redundant line setting folder info in FolderPagedView . java to streamline code by eliminating unnecessary duplication
8308373 : remove unnecessary vmerror # guarantee that lock can be release
[ hotfix ] [ core ] allow basicabstracttuple to hold null value twice
replaced file reading implementation with input resource handling for linter configurations to improve resource management and enhance error handling during linter configuration loading
replace direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post to updateBackgrounds ( ) to ensure backgrounds are updated on the UI thread for improved responsiveness
fix inventory tick trigger same lag ( # 4381 )
added handling for OCELOT _ BABY event in PlayerEvents . java to enhance gameplay balance functionality in the game framework
[ flink - 25737 ] [ state ] annotate with @ publicevolving to fix flaky test .
added null check handling for prepared statements in PreparedStatement . java and Array . java to ensure proper handling of null values during prepared statements
[ java ] update archive catalog documentation to include invalid recordings .
changed string concatenation from double quotes to single quotes in the append0 method to improve consistency and performance in character handling
added a new test method ` jsonSnapshot ` to handle JSON serialization in ` SiteSnapshotVariationsTest . java ` to enhance testing coverage for JSON serialization in the database
refactor BroadTest to use JUnit 4 annotations and improve test structure to enhance code clarity and maintainability by separating transaction and block invalidation logic
add ` ` turn off ' ' permission to paca backend ( # 6372 )
removed the import of NoSuchBuildTargetException from BuckConfig and BuildRuleFactoryParams to simplify method signatures by eliminating unnecessary exception handling
modified the constructors of ChangeLogIterator to accept a List of ChangeSetFilters directly to improve flexibility by allowing different constructor parameters for ChangeSetFilters
catch guest exception in polyglot launcher and return to the host
fix : check that environment or system property ca n ' t be infer correctly .
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization of objects
fix : replace spacebefore ( ) with spacebefore ( ) when the annotation be drop .
# 1845 - enh : add servercacheoptions . copy ( boolean nearcache ) method ... that return the near - cache value .
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to address a hidden border issue with floated elements with overflow hidden
changed the type of projectGraph from ActionGraph to TargetGraph in WorkspaceAndProjectGenerator . java and ProjectCommand . java to improve type safety and ensure proper handling of target graphs
renamed LIVE _ URI to PROD _ URI and updated exception handling to clarify the purpose of the URI and improve error logging for sandbox and host exceptions
- fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48545 .
fix the unit test to account for the change of micrometer
updated vertexMask retrieval to use getMaskWithSizePacked ( ) instead of getMask ( ) to ensure compatibility with size packed vertex data for improved rendering accuracy
deleted the Tls12SocketFactory . java file which contained unused code to clean up the codebase by removing redundant components
fix # 8545 : parse flat citations instead of stream ( # 8583 )
added a check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric testing environments
added a condition to handle Firebird database to return " DOUBLE PRECISION " to ensure proper data type handling for Firebird databases
refactor initialization of DataSource and transactionManager in DefaultBatchConfigurer to ensure proper initialization of datasource and transactionManager only when needed
add mockito a a test dependency for module stub . need to be update to 1.8 . 0 release .
updated the command from " ping - c5 www . google . com " to " ping - c5 127.0 . 0.1 " and set a timeout of 60 seconds in the test methods to ensure consistent command execution and increase timeout duration for tests
# 2274 - refactor duplicate code for try with resource
updated TermScorer to use scoreMode when creating TermScorer to ensure score behavior respects the specified settings based on score requirements
[ beam - 7236 ] fix nullpointerexception in dataflowmetrics ( # 7240 )
cloudstack - 8124 : do n ' t start vm from guest vms if data be empty .
refactor object inspector retrieval logic in DynamicPartitionPruner . java to improve code clarity and maintainability by consolidating the logic into a single method
added a method to remove build artifacts and implemented corresponding tests in the ArtifactFilesystem and ActionExecutionStep classes to enhance artifact management by allowing cleanup of build artifacts before execution
added logic to set the selected row in the table if it is valid to ensure that the selected row is set correctly when interacting with the table
add assertarraystoreexception into main method , and make arraystoreexception private .
refactor PropertySource class to improve structure and readability to enhance maintainability and facilitate future development
added user agent support to HttpClientBuilder and HttpClientConfiguration classes to enhance flexibility in user agent management for HTTP client connections
refactor session creation and restoration logic in MemorySessionStore . java to streamline session management and improve session handling efficiency
updated the assertion to verify that the results of the data provider generated 5 rows are correctly used and changed the type of results from HashSet to IdentityHashMap for better data integrity and clarity
fix : fix websocket consumeews to use plain data type
added activationrequestdenied event to allow handling of the character base on it
fix a minor typo in graphgraphics ( # 1894 )
add updateTaskViewsSnapshotRadius method to updateTaskViewsSnapshotRadius method to ensure proper snapshot radius updates for task views in RecentsView
added logging for schema generation and changed revision assignment in StaticMicroserviceVersions . java to improve traceability of schema generation for 3rd party services
changed the return type of the put methods in ArrayMap from void to int to enable retrieval of the index value for further processing
set a startup timeout for kafka container , so that the cluster can be start
[ rocketmq - 296 ] add retry code when send back message .
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy by preventing duplicate header additions
added package access check for listener type retrieval to ensure proper package access validation when loading listeners
added a new import and modified the onCreateView method in ApplicationsFragment . java to utilize a ListView for managing multiple application lists to enhance the user interface by providing a list of relevant components
updated applyIcon method to accept null Task parameter and improved icon handling logic to enhance null safety and prevent potential NullPointerExceptions during icon application
use try - with - resources in downloadmanager . getdownloadstates to avoid resource leak
fix sqrttosqlnodeconverter insert statement so it work with select all ( but ignore ) .
added JUnit annotations and changed the visibility of the ` onSetUpInTransaction ` method in ` HibernateCursorItemReaderIntegrationTests ` and ` HibernateCursorProjectionItemReaderIntegrationTests ` to improve test organization and simplify the test code
[ drools - 7 ] fix synchronization issue when update slip message queue .
added a ENABLED _ TS constant and integrated ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable concurrent execution of dependencies in a specified timeframe
Refactored UpgradeCatalog150 . java for improved readability to enhance maintainability and reduce technical debt
rename networkparameters # testnet3 to networkparameters # oldtestnet so that it return only the old version of the testnet .
[ desktop ] fixed an issue with multiple geos be select at the same time
refactor AppsDividerView to utilize OnboardingPrefs for determining the display of the all apps label to improve code clarity and ensure proper handling of null onboarding preferences
updated HdfsIndexOutput to extend BufferedIndexOutput and modified methods for writing data to improve performance and ensure proper resource management during index operations
pdfbox - 4892 : avoid npe a suggest by valerybokov ; do n ' t create a rectangle when the clippingpath be empty
removed synchronization block and simplified local address assignment logic in SocketChannelImpl . java to improve code efficiency and readability by reducing unnecessary complexity
refactor Row value handling in TemplateTransformer to use a dedicated method for adding multiple values to improve code organization and enhance maintainability by centralizing value addition logic
added a method to check if the operating system is Windows and updated file renaming logic to improve platform compatibility handling for file renaming operations
added a new constant CHECK _ DIGIT _ STRING and updated corresponding usages in Code39Reader and Code39Writer to enhance readability and maintainability by using a predefined digest value for decoding
[ gr - 29105 ] do not use generic return type to determine the execute type of an unexpected node .
removed the check for stored field length before writing it in IndexingChain . java to ensure that the field value is only stored once and improve error handling during write operations
fix ( sql ) : fix invalid number exception when use timestamp column with ' where ' clause ( # 2453 )
no changes were made to the code as both lines are identical to improve readability and maintain consistency in variable usage
fix typo in documentation for gcp .
replaced ` assertInitialized ` with ` waitUntilInitialized ` in the connection pool test to improve clarity and responsiveness of connection initialization checks
updated directory retrieval calls in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use a default value of " single " to ensure consistent directory handling during tests
refactored FaultTolerantChunkProcessor to simplify filter management and remove size - based methods to improve code readability and simplify data handling
modified the ` tabbedMethod ` method to include a space and updated the import statements in ` T4994049 . java ` to enhance tabbed method functionality and improve error handling during file operations
replace conditional checks for WindowsTerminal instances with assumeTrue method to improve test readability and ensure the test environment is skipped
[ # 8287 ] remove admin permission check from session controller ( # 8287 )
adjusted calculations for newSelection and adjusted threshold values in conditions to improve accuracy of selection logic in the user interface
bugfix # 173997 , remove the trackresultsavailability hook from threadinfo
added file loading and refreshing in DataModelManagerDialog , removed unencrypted encryption logic from DbConnectionDialog , and streamlined connection handling in ExportPanel to improve user experience by ensuring data integrity during export and enhance code readability
changed the ` writeBufferSize ` variable to static and updated buffer initialization in ` Writer . java ` , replaced direct calls to ` valueOf ( s ) ` with ` String . valueOf ( s ) ` , and replaced string parsing with ` String . valueOf ( s ) ` in several files to improve memory efficiency and enhance readability by avoiding string concatenation
replaced the segment size calculation method in DocumentsWriter to utilize SegmentInfo for accuracy to improve clarity and maintainability of segment size estimation
fix a problem with validation of armature model that do n ' t have a dvert = null
modified FileDisplayActivity . java by refactoring methods and updating imports to improve code readability and maintainability
added a new instance of UnsupportedOperationException with a fillInStackTrace method to avoid filling in the stack trace when throwing an UnsupportedOperationException
update return statement to use average line height instead of a fixed size to improve accuracy of label rendering by using average values
replaced singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing display configurations
optimize the processing of quoted strings in ` valStr ` to improve code clarity and efficiency by eliminating redundant length checks
update the return statement in ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ( s ) ` and modify the trace state handling in ` ServletHandlerInterceptorTest ` to ensure correct conversion of string and improve trace verification in the request handling
added test methods for handling small and big request data in ServerDatagramConnectorTest . java to improve test coverage and validate the server ' s request / response handling
modify the assertion in TestSqlEntityProcessorDelta to correctly retrieve the last found element of the substring to ensure accurate validation of the substring in the test case
of - 2060 : add javadoc explain cache behavior in cluster
updated variable names and token handling in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in variable naming
lucene - 6381 : fix false test bug when indexsearcher . newsearcher ( ) slow down reader
added a JFrame and JTextArea implementation to the GcodeTable class that creates a JTable with a scroll pane and a data button to enhance user interaction with the GcodeTable interface and improve user interaction
replace a static final connect timeout with a dynamic value from the configuration to allow dynamic adjustment of connection timeout based on the configuration settings
updated various Java files related to SAML authentication and error handling to improve code clarity and maintainability by standardizing the collection type
updated TestMediaService . java file to improve test coverage and fix existing issues
remove unused constant & add copyright notice for help .
add a new file MarketsPrintTool . java to provide a program for printing market currency details
added validation for component names and their maximum length in EndpointAddressInterceptor . java to ensure only valid components are processed to prevent illegal arguments
added asynchronous methods for registering security keys starting and completion in AccountProxy and HttpAccount classes to enhance flexibility and streamline security key registration across different components
modified the ServerSpanThreadBinder class structure to enhance thread safety and improve performance
remove userpointer from bullets for move . resolve # 1447 .
upgrade the csv output format to use good name for the geotools shape element .
replaced the variable ` callGas ` with ` gasCost ` in the ` VM ` class and removed unused imports in the ` Program ` class to improve code clarity and reduce potential errors by using a more descriptive variable name
refactor parameters class for improved readability to enhance maintainability and ease of understanding for future developers
added a method to ignore null values in the piePlot to prevent potential null pointer exceptions during the plotting process
refactor resource bundle loading logic to improve clarity and structure to enhance maintainability and reduce complexity of the loading process
change the character assignment from ' _ ' to ' - ' in TaggedPdfReaderTool . java to ensure consistent formatting for decimal numbers
port r4299178 to master : allow certain wierd case in accelerateableaction
added a userModified flag to LoginSamlAuthenticationProvider to indicate that the user has been modified before reinitialization
added a new file TestSealedObjectNull . java for testing SealedObject behavior to ensure proper handling of null values and verify the equality of SealedObject instances
updated method names from onOpen to setResponse and added a succeeded method for ConnectPromise to improve clarity and consistency in handling WebSocket response operations
fix nullpointerexception in blockeventlistener when run with 1.17 +
added an ID field and modified Trade object creation in CryptsyAdapters and CryptsyPublicTrade classes to ensure unique trade IDs for processing and improve data accuracy
added error handling for closing the synchronized MSC connection in HiveStreamingConnection to ensure proper resource management and log warnings when closing the connection
fix : seed be n ' t parse to long in glowserver .
updated icon size and added a new device profile for the Nexus 5 in DynamicGrid . java to improve visual consistency and accommodate new devices
2 . x : fix flowable . disconnect ( ) reset when connection object be null ( # 6329 )
replace type ' s newInstance method with ReflectUtil ' s newInstance method in SynthContext . java to improve instantiation handling for SynthContext
fix # 4635 - proper formatting of conditional operator .
[ bugfix ] prevent save task from delete project file if cancel
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during method execution
added handling for MutableLogEvent in the add method of SmtpManager to enable serialization and deserialization of Log4jLogEvent for improved logging functionality
increase the padding value from LengthLike to NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure the padding value is consistent with the intended functionality
[ ds - 2898 ] add support for all authentication method in the rest api
refactor : remove stream usage and add more detail to method signature
refactor code formatting and improve error messaging in AndroidPlatformTarget . java to enhance clarity of build tools and ensure correct directory path handling
update cacheSize calculation from maxMemory / 16 to maxMemory / 8 to improve memory efficiency by increasing cache size
add condition to start the stage if it should be either finish or start from zero to ensure the stage trace handling logic correctly under specific conditions
added work around for npe issue with fips keystore and empty stream .
fix test break by dns change
fix for # 3181 ( undo / redo icon overlap )
add support for opengl 4.0 + and opengl 4.1 + .
refactor PopulatorContext class to improve code readability to enhance maintainability and ease of understanding
do n ' t show the action save for project that do n ' t have one ( # 630 )
added charset handling and improved JSON serialization / deserialization in ZQLJobManager . java to ensure proper encoding and decoding of JSON data for better compatibility with different file systems
added a check for the length of args in IkStepDefinition . java to ensure proper handling of empty arguments to prevent potential ArrayIndexOutOfBoundsException
replaced hardcoded string values with a static prefix in FakeOSSOHeaderDecoder to improve maintainability and reduce code duplication
camel - 13663 : camel - main - maven - plugin to generte spring - boot tooling metadata to fool java editor to have code completion for camel main application . properties file .
removed debug log statements related to the Derby driver class to streamline logging for better readability and performance
[ camel - 19008 ] make test faster , but more stable by add a timeout .
streamline stream processing in PersonNameSuggestionProvider . java to improve performance by reducing parallelism during stream operations
updated the condition checks for ROLLBACK and added warning messages when hub . mode is already set to improve user feedback and clarity regarding configuration changes
added new constants for Java VM success and failure keys , and implemented a test for the new constants in TestDDRExtensionGeneral to enhance version validation for Eclipse OpenJ9 and ensure reliability of the version commands
updated the font addition request logging to handle Composite fonts explicitly and added a new class for testing to improve error handling and facilitate debugging of font addition requests
removed unnecessary import statements and added HTTP version handling in NegotiatingServerConnectionFactory to enhance compatibility with HTTP / 1.1 connections and improve code clarity
updated HTTP2 rate control settings in SettingsBodyParser and MaxConcurrentStreamsTest to disable rate control during concurrent stream processing
added a new file Test6741426 . java that implements a JComboBox with a JTextField to enhance text input functionality using NimbusLookAndFeel in a Swing application
update the test assertion to include the exception message instead of a failure message to improve test accuracy by ensuring the error message is correctly retrieved
added null checks for dbMgdPath and dbExtPath in conditional statements to ensure proper handling of managed directories and external directories
do n ' t package s3 package to avoid split package
removed accentColor and themeColor references from setupDevCategory and setupMoreCategory methods to streamline preference category setup by eliminating unnecessary color dependency
updated the error message to include the fileAtRoot variable instead of a hardcoded one to improve clarity and accuracy of the error message for invalid folder paths
replaced instances of ClassTypeInformation with ClassTypeInformation . LIST and ClassTypeInformation . MAP in MappingMongoConverter . java to improve type handling and eliminate unnecessary type information conversions
add address validation to the client config . fix # 5815
8225094 : add exception for expire docusign root to verifycacerts test
fixed an issue where the output . size ( ) of pipeline would return zero instead of void .
bug fix : set only the active mode of menu if popup be not open .
pdfbox - 4892 : avoid indexoutofboundsexception if datastream . read ( ) return - 1
8018727 : [ jvmci ] add more test to verify that finalizer _ info be print correctly
replaced ` . map ` with ` . doonNext ` for subscription operations in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to ensure all subscriptions are defer on the same event handling thread
do n ' t fetch private compaction request in case the custom address be unavailable ( # 5014 )
refactor StringSubject class to improve code readability to enhance maintainability and simplify future updates
updated the byte array size and added an import for JUnit Ignore in BatchValidateSignContractTest . java to temporarily disable the test due to potential issues with larger data sizes
change method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to adhere to Java naming conventions for method names
replace " from : " with " from : " in RetweetActivity and Search classes to ensure consistent query formatting when saving recent suggestions
added a conditional check for forRebalance in SimulatorDiscoverer . java to ensure that rebalance actions are only processed when necessary
added a new endpoint for importing YubiKey accounts via a POST request mapping to enable the import of accounts from JSON for better data management and response handling
added shader programs and updated material handling in multiple classes to improve shader management and ensure correct texture resolution
added null checks for ` cnt ` in ` paintOnTopLoop ` and set padding for ` menu ` in ` SideMenuBar ` and ` Toolbar ` classes to ensure proper rendering of elements when ` cnt ` is not null
renamed AbiWriterProtocol . java files for consistency to improve clarity and maintainability of the codebase
introduce null check for subname in hierarchybase . set caption ( )
fix for npe with the adaptive server . close # 2890
updated conditional checks and added a null check for the sim object in CustomExpression . java to ensure proper handling of custom expressions and avoid potential null pointer exceptions
re - enable miss data request , since vote can be republished .
make postgres test faster ( and more comprehensive )
updated string literals from double quotes to single quotes in SubtitleUtils . java and RemoteUtil . java to improve consistency and readability of the code
fix : stackoverflowerror when use new line separator or new line at the same time ( fixes # 741 )
truffle : replace atomicreference with a field updater to speed up snapshot lookup .
solr - 9186 : simple facet : fix npe when exclude main query
[ core ] merging two bridge for a single thing instead of combine with the legacy one
replaced printHelp ( ) method calls with error messages for command validation to improve error handling and provide clearer feedback for invalid commands
[ netbeans - 5070 ] : do n ' t echo to stderr if the file be n ' t find .
camel - 6321 fixed the parsing of date value with thanks to kirill romanov
added a new test for the ` PostRepository ` and implemented a query for the ` Post ` by its slug in ` SpringDataJPALockTest ` to ensure that the database correctly retrieves the ` Post ` by its slug and verify its existence
change oracledatabase . canaccessdbarecyclebin to boolean and improve connection check
added a request factory to the ClientRegistrations class for HTTP requests to improve request handling and increase timeout settings for better stability
add extra check on whether the file exists and not just the original path be the same
remove hard - coding of graalvm . version system property , since it be only use for jdk 1.8 .
added validity checks and updated client expiration settings in ClientAdminBootstrap . java to ensure proper handling of access token expiration and refresh token properties when needed
update androidAPIVersion return logic to use options from the current API to ensure compatibility by allowing the application to use the specified SDK version if available
refactor the PropertyPlaceholderHelper to remove unnecessary references to improve code readability and maintainability by reducing verbosity
8181190 : remove hardcoding ' # ' in resource file
solr - 12028 : fix race condition in testcollectioninfluouscollection . close ( ) .
add BigInteger type to simpleTypes in MongoMappingContext . java to support BigInteger data type handling in the mapping process
update condition to check for specific button text in HomeFragment to improve user experience by providing necessary feedback when the button is not displayed
added a conditional check for isMencoderNoOutOfSync in the MEncoderVideo class to ensure proper handling of video encoding when MEncoder no out of sync is disabled
reduce event loop size down to reduce number of file handle
changed access modifiers of several fields and methods in CountMin4 and updated feedback handling in AdaptiveWindowTinyLfuPolicy to improve encapsulation and enhance feedback functionality
added functionality to retrieve and sort external file fields in ExternalFileField . java and created a corresponding test class to ensure proper sorting and functionality of external file fields in Solr
change invalid url exception to connection error .
added event ID handling to the OpenRocketSaver class and updated FlightDataBranchHandler to manage source - specific events to enhance the functionality of the event serialization and ensure proper component identification during the saving process
make check ( ) protect to allow for subclass access
added handling for synchronization issues in FileActivity to improve user experience by resolving conflicts when syncing files
updated the URI generation for generating a resizedImage in ThumbnailsCacheManager to include encoded file paths to enhance security by enabling URLs with special characters for better accessibility
added a null check for the client property " cn1 $ infinite " to ensure proper handling when the client is not initialized
adjusted the total calculation in IntHashSet to correct the logic for incrementing the hash set
added a conditional check for lock timeout before updating the entry in FeedRefreshUpdater to ensure that the entry is only updated when a lock is active , improving error logging for better debugging
refactor authority handling logic in SolarisAclFileAttributeView . java to improve clarity and structure to enhance readability and maintainability of the code
replaced the list of edges with a direct array of edges for efficient data processing to improve performance and simplify the management of edges in the LatLonTree class
added IOUtils import and ensured proper resource cleanup in ZkCLI . java to improve code reliability and prevent potential resource leaks
change old comment format so that it also work on osx .
added functionality to handle " strict " parameter in properties file parsing to ensure that unknown arguments are ignored when strict mode is disabled
validate custom constraint with alwaysinvalidconstraint ( # 2756 )
( chore ) camel - http : fix the verification error of camel - http4
add wait to fix flaky testcloudpivotfacet . testpivotfacet ( )
remove superfluous range check from utfjsonwriter to avoid code duplication .
rename ApplicationTest . java files for consistency to improve clarity and maintainability of the test code
replaced String concatenation with StringBuffer for details to improve efficiency and readability of the code
change type to robolectrictype to avoid the need for java 6 api
[ java ] return action . abort if record be complete in archive and subscription .
added cache key and lookup key attributes to the EntityProcessorBase and updated related tests in TestCachedSqlEntityProcessor to enhance caching functionality and ensure proper error handling for missing keys
added a new file PutfieldError . java that demonstrates the throwing of IncompatibleClassChangeError to validate that the expected error is thrown during runtime exceptions handling
fix npe thrown when try to connect to a remote server that do n ' t exist . ( # 4502 )
` ` memtable : enqueuing flush ' ' if memtable have reached memtable _ flush _ after _ minutes or memtable _ operations _ in _ millions
change usage of j . literal . space . build ( ` ` ' ' , ... ' ' ) to single _ space .
remove the duplicate declaration of encodedLength in the Flyweight class to streamline the code by eliminating an unnecessary method declaration
updated TestMethodResultMapBuilder . java file to improve test coverage and ensure accurate functionality
added imports and modified method invocation handling in FindNullDeref . java to improve error handling for integer exceptions and ensure catch size constraints
[ hotfix ] [ runtime ] avoid create unnecessary object for lock in tasklocalstatestoreimpl
updated return statements and string resources in Utils . java for consistency to enhance clarity and maintainability of date and time return values
updated handling of DeepShortcutView in Utilities and FloatingIconView classes to ensure proper drawable retrieval for DeepShortcutView instances
changed the type of ` JwtClaimValidator ` from ` String ` to ` Object ` and updated the ` validator ` initialization to use a predicate for claim values to enhance flexibility in handling claim values and improve the validation logic
updated method names for better clarity in Coinmate quick rate retrieval to enhance code readability and provide more informative error handling for retrieval of quick rates
added a new CoverageConfig class to manage coverage configuration to enable conditional execution of coverage tests based on the CobERTURA project data class
added a check to ensure EventBus is not registered multiple times to prevent potential threading issues when the event bus is not already registered
added ASCII - only check to normalize method in NormalizerBase . java to optimize normalization process by skipping unnecessary operations for ASCII strings
[ flink - 21155 ] [ runtime ] fix wrong check in jobcoordinationservice for migration task
added exception handling for SQL update in SpillableGroupByIT and categorized NoOpStatsCollectorIT to improve test clarity and ensure failure handling is correctly indicated in tests
camel - 5612 : migrate component to junit4 instead of camel - unit test .
updated HR and attribute handling in HtmlTag class to prevent disallowed changes in 5 to ensure compatibility with updated HTML standards
add < br / > tag so that the core page be show up in the html report
updated the calculation of RAMBytesUsed in DocSlice . java to handle null scores to ensure accurate memory usage estimation when scores are null
replaced ` JsonNull ` with ` Type ` and ` Set ` imports and added a new ` StringHolder ` class for serialization and deserialization to enhance the handling of custom JSON types and improve code clarity
add new miningparameters . extradata ( ) to the MergeCoordinator ( # 1228 )
added a static final map for numArgs and modified the properties conversion method to use it to improve flexibility in argument handling by allowing dynamic values for parser arguments
[ dubbo - 4560 ] fix pathserviceconfig javadoc ( # 4562 )
migration : shutdown rule manage executor if default delay time ( # 3804 )
add doc to restclientrequest attach method and rename part to partorlist
jbrules - 2339 : move resource to same directory for responsive interface
remove tregex support for basic category ( spanish treebank )
hhh - 16594 add load ( object , lockoptions ) to entityloader interface + deprecate entityloader . load ( string , object ... )
hbase - 27344 we should use taskpool . poll ( ) instead of taskpool . take ( ) in this case
set the size to 0 in pgraphics2d just for the case where it be n ' t actually do anything
fix fillpool ( ) issue with deadlock . fix # 279
replaced ` assureMatchVersion ( ) ` method calls with ` Version . LATEST ` in multiple filter factory classes to ensure consistent version checks and improve error handling for missing parameters
fix proxy generation of abstract method with aop ( # 8731 )
make drools parser more resilient to crash .
refactor multiple subject classes including Guava and Map with protobuf implementations to enhance code clarity and maintainability by standardizing naming conventions
1 . throw a websocketexception if the payload length be negative .
move publishsubscriptionchannel from ' channel / config ' to ' dispatcher ' ( will be move from ' dispatcher ' ) .
changed the type of ` executionId ` from ` String ` to ` Long ` across multiple classes to improve consistency and allow for larger execution IDs instead of a string across the system
updated digest update logic to include width and height parameters to ensure correct data processing based on dimensions for image processing
removed logging of the overlay version in SolrConfig . java and added imports for various SolrConfigHandler . java to improve logging clarity and ensure proper request handling for query parameters
updated the delay time in FileSyncAdapter to use the current time from the current time to ensure that the synchronization process continues smoothly until the intended time
fix a syntax error in the declaration of the afterConversionTime variable to ensure proper syntax and prevent potential runtime errors
refactor path handling to use a Path object instead of a String concatenation to improve code clarity and ensure consistent path usage throughout the method
updated URL handling in DefaultPackageScanClassResolver to utilize URI and improved error logging to enhance robustness in URL parsing and provide clearer error messages
[ flink - 24670 ] [ table ] introduce timestampextractorutils to extract field information from physical input type
add a new class SpringSecurityAuthenticationSource to manage authentication principal and credentials to facilitate LDAP authentication handling in the Spring Security framework
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer for improved concurrency handling to enhance code readability and maintainability
change minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions for alarm management functionality
replaced custom file dialog implementation with a dialog using a cached list to improve user experience by improving dialog efficiency and user experience
added a new test method ` testNewput ` to ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to correct asset issue assertions and ensure proper handling of asset issues
updated the parameter order in the stream method and adjusted the read callback initialization to enhance code readability and ensure consistency in collection name handling
improve zoom calculation base on mouse wheel rotation and scale
updated KNearestNeighborClassifier to support similarity for the KNearestNeighborClassifier to enhance functionality by allowing custom similarity options
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query parsing efficiency and maintainability
updated the method for retrieving low resource reasons from ` toString ( ) ` to ` getReason ( ) ` to improve accuracy in retrieving resource reasons
update package - info . java files for mmm and ppp packages to improve documentation clarity and consistency
added tests for requestMtu and updated MTU handling in ShadowBluetoothGattTest . java to ensure correct functionality of BluetoothGatt callback handling
refactor the creation of ServletOutputStream into a separate method to improve code readability and maintainability by reducing duplication
added logging of unsatisfiedlinkerror and set the log level for the VoskSTTService
fixed npe due to concurrent map . hashmap ( ) use in the channelprocessingmanager
updated Japanese language messages to include ' all ' and ' grouping ' operators to improve clarity and understanding of resource accessibility in the user interface
fix empty size issue in jdbctypemapping , now typemapping be always a boolean .
added synchronized keyword to player methods in GenshinScene . java to ensure thread safety during player addition and removal operations
replaced screen reader activity check with a state tester using regex matching to improve reliability and maintainability of the terminal view code
added a new command behavior forIDE _ NAVIGATION in MenuBar . java and updated icon handling in SideMenuBar . java to enhance functionality by allowing additional behavior checks for button behavior
removed Disposable variable from subscription and added connection handling logic in WampStreamingService to improve code clarity and ensure proper handling of connection states
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator and corresponding test assertions to ensure energy limit is greater than zero and improve error handling for invalid contract types
fix url when there be no protocol ( default : http )
camel - 5479 add getter and setter for namespaceprefixref in soapb dataformat . thanks to stephan siano for the patch .
refactor assertions in TestRange to use a helper method for clarity to improve code readability and maintainability by consolidating logic into a single method
added JettySolrRunner handling and security property retrieval in BasicAuthIntegrationTest . java and updated security properties handling in ZkStateReader . java to improve test reliability and ensure proper security settings during authentication
add price feed to tradeschartsviewmodel so it be possible to view
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to set default values for replication settings to ensure consistent replication configuration and improve test reliability
8015349 : ` ` abc ' ' . lastindexof ( ` ` a ' ' , - 1 ) should evaluate to 0 and not - 1
added functionality to download and save files using FileDataStorageManager to ensure that files are properly downloaded from the database
[ java ] release file in a buffer for read - only log message .
added a method to check if a registry is running and a retry mechanism for deleting a file if it exists to enhance error handling and improve file deletion reliability
removed unused imports and added startLoading ( ) method call in multiple classes to streamline the code and improve loading state management during the testing process
added multiple @ SuppressWarnings annotations and removed unused variables across multiple classes to improve code cleanliness and maintainability by eliminating unnecessary warnings
added null check for instances in TraceFeignContext to avoid potential NullPointerExceptions during object initialization
added support for enabling transaction isolation level in SQLExceptionCode and updated related logic in PhoenixConnection to improve compatibility with newer transaction configurations and ensure proper isolation level settings
added transaction attribute handling to StepFactoryBean and ItemOrientedStep classes to ensure all transactions can be rolled back upon processing
refactor CasManagementWebAppConfiguration to use DirectCasClient and enhance security interceptor implementation to improve code organization and enhance security handling capabilities
removed menu item visibility and added functionality for managing menu items in ListFragment and NavigationDrawerFragment to enhance user experience by providing additional context menu options and improve navigation drawer navigation
renamed method ` cancel ` to ` cancelMatchingOperation ` and updated method names for clarity to better reflect functionality and improve code readability by using more descriptive names
pdfbox - 3353 : avoid classcastexception if dictionary or page be not
updated font size handling in TerminalView and TerminalBridge classes to use a more specific text size definition to improve flexibility in font size management during terminal rendering
check that the fact be valid before compile the code to avoid false positive
renamed multiple Java files related to codec and parsing functionality to improve code clarity and maintainability by standardizing naming conventions
changed return type from a direct return statement to a new ArrayList instance to ensure that the returned spans list is immutable and properly instantiated
removed unnecessary locking mechanism in Liquibase . java to simplify code and improve performance by eliminating unnecessary locking
added a method to set the revision in MicroserviceVersions and updated related classes to ensure the revision is correctly set for the microservice version rule
updated foreign key and index handling to format foreign key and index names for improved clarity and consistency to enhance readability and maintainability of foreign key and index definitions
camel - 16171 - add integration test for aws2 - s3 to verify the configuration
removed the usage of currency pair in the getBitstampUserTransactions method and modified the method signature to streamline transaction retrieval by eliminating unnecessary parameters and improve code clarity
added exception handling when retrieving a component instance to improve robustness by handling potential NoSuchComponentException
align push handle with change in http : / / issues . apache . org / jira / browse / amq - 4682
test : reduce memory usage of legacyaddress . frombase58 ( )
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor notification handling by consolidating setup logic into a single method to improve code readability and maintainability by consolidating notification setup logic
call close ( ) on channel close to avoid leak file descriptor .
( chore ) camel - ldap : use string isempty to check for empty string
updated DefaultAnnotationEngine and Stubber classes for improved functionality to enhance code maintainability and readability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840
nifi - 9744 : added timezone adapter to stop use of the default time zone .
fix indexoutofboundsexception when split ownership data
no effective change - code cleanup , remove unnecessary try / catch
fix issue where we be not want to update the active circuit when the circuit be still in use ( # 4258 )
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
- remove eventdrivensource / sink from the sourcerunner interface and replace it with concrete source runner .
change log level to info when fast - bind fails
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance performance and maintainability of focus traversal
apps - 1856 fix npe on function freehand , update interface
refactor the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve clarity to enhance maintainability and readability of the code
refactor database connection handling and improve logging in SchemaCrawlerMain and Executable classes to enhance code reliability and ensure proper resource management during database operations
bump default tl version to v1.2 with a fallback for old jdks
[ java ] fixed typo in exception message
updated audio playback logic in MediaManager . java to handle cases where mCurrentAudioQueuePosition is negative and ensure proper stopping of audio based on valid queue position
updated debug logging statements to use the connection object directly to improve logging clarity and reduce unnecessary conditional checks
added support for transient fields in JpaPersistentPropertyImpl and updated related unit tests to ensure proper handling of transient properties during persistence operations
updated tests in UpgradeResourceProviderTest to check for correct stack version and repository version to ensure accurate version tracking and validation for HDP - 2.2 . 0
truffle : make eval return object to avoid classcastexception .
various small change to improve log around binary data type processing
corrected a typo in the property name for the dynamic partition pruning maximum data size to ensure consistency with naming conventions and improve clarity in the configuration
added a method to find a problem by its priority in the JavaEditor and JavaProblem classes to improve error handling for better analysis during Java parsing
remove dictionaryindexconfig . default _ OFFHEAP and use it directly in the bloomfilterhandler
replaced hardcoded newline separator with a configurable line separator to improve flexibility in string handling across different operating systems
remove the comment out by the previous commit which be cause javadoc build error
added a boolean field ` ownsTexture ` and implemented logic to check its value if it owns texture before proceeding to improve code readability by preventing unnecessary processing when no texture is owned
added LDAP configuration parameters to HiveConf . java to enhance LDAP functionality and security settings in Hive
doc : explain why ' datacatalog . search . enabled ' be false ( # 3252 )
updated the method toggle functionality in DetailActivity . java to ensure the keyboard is shown for a note and improve code readability
add test to validate the converter convert from primitive data table to object ( # 662 )
hbase - 13711 fix testfilesystem . testconcurrentload ( ) failure when run on ci
update error message to good indicate what happen prior to filing a bug report
refactored the ` dropSequences ` method in multiple database classes to implement the ` dropSequences ` method for handling migration failures to ensure consistent behavior across database implementations and improve code maintainability
added a null check for the status variable to prevent potential null pointer exceptions during execution
replaced the assignment of the result of binaryField . createField to assign it to the variable ' f ' to improve code clarity by storing the result of the field ' s creation
ggb - 858 hierarchical icon : only update menu item if require
datamongo -540 - added integration test to verify behavior after upsert
hbase - 24488 simplify shift operation ( shoubh ? )
added a method to record app launch statistics and refactored broadcast intent handling to improve performance and simplify broadcast intent processing
fixed bad color on retina component when use simulator . http : / / github . com / codenameone / codenameone / issues / 2486
[ # 8803 ] instructorfeedbackresultspageuitest : improve test reliability ( # 8803 )
fix potential npe when generate an inventory id of 0 .
fix the logic of configdescriptionregistry # getregisteredport ( ) to handle case where no config file be find .
updated return type handling in multiple parser visitors to include returnTypeAnnotations to ensure proper annotation processing when returnType is null
fix npe from missing blended tile property for render
added and removed unused ` @ Classes ` annotation for various iterator classes to streamline code and improve maintainability by eliminating unnecessary dependencies
make sure to use the sign in case when first point be move ( e . g . for area tool )
[ java ] avoid unnecessary object creation during throttle ( # 10356 )
[ pipe ] fix a bug where pipeeventbus . setactivelistener ( ) would n ' t call super . setactivelistener ( ) and super . setactivelist ( ) .
updated the timeout value in ZkController initialization from 1000 to 500 to allow more time for ZkController operations
added unit tests for handling OAuth 2.0 client parameters in TokenMvcMockTests . java to ensure correct functionality of the token service under specified client parameters
added constructor assertions for LengthFilter and KeepWordFilter in TestRandomChains . java to ensure correct handling of specific input parameters in random filter tests
remove the unused JUnit Ignore import from RandomPlaneTest . java to clean up the code and reduce dependencies
[ gr - 38551 ] use integer . tounsignedlong ( ) instead of integer . puti1 ( ) and integer . puti16 ( )
refactor btCollisionObjectArray to use ` getInstance ` for obtaining ` cPtr ` and removed the ` upcast ` method from ` btRigidBody ` to simplify the code and improve efficiency by directly using the native method
added a build copyright constant and updated the AboutDialog link and URLs to enhance copyright information and improve link accuracy for contributors
added new method for getdistributedobjects ( ) with test
added debug print statements for fin count and inertia calculations and corrected the expMOI values for accuracy to improve debugging and ensure correct calculations during fin calculations
updated memory semaphore initialization from TOTAL _ MEMORY to MAX _ MEMORY to ensure the system uses the maximum available memory instead of a total one
[ iotdb - 3762 ] fix catch throwables in schemafetcher ( # 7112 )
refactor : remove redundant validation on burningdatavalidation .
add test for json format and improve error handle for large array
updated the capacity validation condition in ObjectSet . java to allow larger table sizes for better error handling
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to ensure correct handling of numeric digits based on the presence of data scale in the result set
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the field definition and improve code clarity
added security exception handling and modified content truncation logic in FileHelper . java and TextHelper . java to improve robustness and ensure correct content length handling
added support for handling multiple attributes in theme attributes to enhance the functionality and flexibility of theme attributes
update HSSFWorkbook to check sheet names correctly and modify test cases accordingly to ensure correct sheet existence checks and improve test coverage for sheet functionality
changed the method used to retrieve the tint color from primaryColor to elementColor to ensure tinting utilizes elementColor for improved UI consistency
update handler initialization in DefaultEventBus to handle null replyHandler case to ensure proper handler creation even when replyHandler is null
added support for generating SQL queries with binary collation names in MariaDbDbmsType and MySqlDbmsType classes to enhance functionality for collation management in the database type handling
added a method ` whenType ` to return an ` Optional < T > ` when a type is assignable to enhance type safety and avoid unchecked cast warnings
add a method to get the user view destination when instantiate an item ( # 8951 )
replace a successful response with a temporary redirect in FeedREST . java to improve user experience by providing a direct redirection to the public URL
[ flink - 19562 ] [ kinesis ] add check for not - serializable deserializer in flinkkinesisconsumer
add some javadoc to model class so it easy to grok
modified the creation and shutdown logic of ZkStateReader to ensure proper resource cleanup to improve resource management and avoid potential memory leaks
renamed the method from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` and updated its usage across multiple classes to better reflect the functionality related to icon transitions and banners transitions
improve read method to allow easy override .
replaced instances of ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` for a length variable to improve code readability and reduce unnecessary dependencies
modified the method signature of ` prepareStreamsToUpload ( ) ` to return a boolean indicating the state of the stream to improve clarity and ensure proper handling of the upload process to avoid null pointer exceptions
fix bug introduce by last commit . use integer . compareto prevent the negativearraysizeexception .
added a new class ` PicOfDayAppWidget ` for handling image widget updates to enhance the app widget functionality by displaying images associated with their app widgets
bug 9453 : fix for internallbvmserviceofferingid ( ) to use uuid instead of id
updated import statements and modified join condition handling in HiveParserCalcitePlanner . java to enhance functionality and maintain consistency in join behavior
[ flink - 3987 ] [ runtime ] deprecate transformation in favor of a consistent savepoint usage
added global credentials for user and password in NodeToolCmd . java to enable secure connection to remote jmx with configurable credentials
removed redundant variable scratch in Stemmer . java to streamline code by eliminating unused variables
modified the parameters and behavior of widget application methods in AppsCustomizePagedView . java to improve readability and maintainability by simplifying widget caching logic
ggbapplet . getpngbase ( ) : use view _ for _ thumbnail ( ) to get the active view for the thumbnail
modified rotation calculations in GcodeRenderer to ensure they are valid and valid to prevent potential rotation issues and ensure proper rendering stability
added a new option for setting the workspace directory in the TerminalClient to enable users to set the workspace directory for better configuration management
rename option . apt to . html to avoid clash with other test .
updated ScimUtilsTest to use JUnit 5 annotations and extend with PollutionPreventionExtension to improve test structure and maintain compatibility with updated testing practices
updated the OAuthConfirmationController to use a model attribute for authorization requests instead of a model - related data to streamline the model handling process and improve code readability by utilizing a more structured model attributes
replace direct session handling with an asynchronous assertion to validate the second level cache hit count to improve responsiveness by ensuring that the cache hit count is accurately accurate after each test
updated EventBusHook . java for event handling enhancements to improve event - bus interaction efficiency
refactor MultiPaintEventTest to improve test coverage to enhance reliability of rendering events
changed the declaration of mNewScale from final float to non - final float to allow for potential modification of the mNewScale variable after the animation completes
6999086 : clarify that syncfactory . setlogger can throw an nullpointerexception
added handling for unique key fields in LukeRequestHandler to ensure proper identification of unique keys during schema validation
added round border color functionality and updated color handling in the BorderEditor and EditableResources classes to enhance color customization capabilities and improve resource management
fix : assert . neverpartofcompilation should n ' t be a final compilation error .
[ hotfix ] [ runtime ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchscheduletest
added logging for pending requests and modified return value in PingPongApp to improve debugging capabilities and correct return value logic for better functionality
added toolbar functionality to the RecentChatFragment class to allow users to easily navigate to recent chats easily
changed InfoDropTarget to extend UninstallDropTarget and modified related method signatures to enhance drag - and - drop functionality by implementing uninstalling capabilities
refactor scope management methods from ` add ` and ` removeTail ` to ` push ` and ` pop ` for clarity and consistency to improve code readability and maintainability by standardizing scope operations
updated URLs in CommonsApplication . java from " test . wikipedia . org " to " commons . wikimedia . org " and " eventLOG . WIKI " to reflect the new development structure and improve clarity in the codebase
refactor index management logic into separate methods for clarity and maintainability to improve code readability and reduce duplication in index incrementing and updating operations
replaced ` Collections . sort ` with ` Collections . sort ` for better performance to improve code readability and reduce unnecessary method calls
added various date and time patterns to the FormatData _ hr _ HR . java file to enhance date formatting capabilities for HR data presentation
added functionality to clear focus on the clickedView to improve user experience by ensuring the selected view is properly visible
fixed # 1365 and # 1644 - enabling the ability to add new language ( # 1877 )
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple language files to accurately reflect the time zone designations for better accuracy in time zone representation
added native methods for registering global , weak , and access fields in FastGetField . java to enhance functionality for managing MyItem operations in different modes
avro - 1112 . java : fix java reflect to ensure default value be correctly compare to null .
increase seda block when full test , 20 second be not 4 second .
nifi - 3097 added null check for resourcePath . getRClass before remapping it to ensure that remapping occurs only if the resource path is not null
hhh - 7681 add a default constructor for the dialect to be able to create hibernate dialect with a specific version .
camel - 8560 : httpproducer . close ( ) can now do a manual close . thanks to deepak for the patch .
increased socket timeout duration from 60000 ms to 120000 ms to allow more time for distributed operations
test : fix handling of optional reservation status update
refactor Parser class for improved readability to enhance maintainability and ease of understanding
refactor CasProcessingFilter implementation for improved clarity to enhance maintainability and readability of the code
use getfirstelementchild ( ) to avoid casting of nestablenode in some parser
[ optaplanner - 2525 ] fix infinite loop when shift - assigning an object ( # 5067 )
[ java ] have the cluster node wait to shut down so that it behave well with shut down logic .
change log level to info when invalidate cached bean .
added a content type assignment for " application / octet - stream " in WebdavEntry . java to ensure proper handling of binary data in the application
added an implementation of ` getQueueSize ` method in ` LazyTraceThreadPoolTaskExecutor ` and created unit tests for it to ensure the ` LazyTraceThreadPoolTaskExecutor ` correctly tracks the queue size from the delegate
fix distance op for 2 line ( # 872 )
ww - 3908 renames require attribute into requiredlabel to match tag attribute
removed the next ( ) method implementation and updated progress in PurgingPartitionIterator . java to streamline progress update logic and ensure consistent progress updates
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use this method to improve the handling of unescaped paths for better schema query accuracy
added abstract methods getHeight ( ) and getWidth ( ) to BaseMonochromeBitmapSource class to provide access to height and width settings for rendering purposes
added validation to ensure polygon contains at least 3 points and updated localVertices assignment logic to ensure proper handling of polygon vertices with sufficient length constraints and maintain correct local vertex assignment
refactored ObjectMapper instantiation to use ObjectMappers for better object mapping to improve code maintainability and reduce boilerplate code
theorem proving : fix for npe in case of implicit curve
update ExternalNameRecord to handle multiple Unicode names correctly to improve compatibility and correctness in extracting Unicode names from external records
nifi - 10318 updated documentation for jms processor ' s default type of queue be incorrect
added logic to exclude username and password prompts in LoginInfoEndpoint and updated tests accordingly to ensure that prompts are retained and validated for the login process
replace listener removal method with removeIf to improve efficiency by avoiding unnecessary listener removals
added a case for the spin button in PieChartActivity to enable customizable spinner behavior for the pie chart
bug 10603 : do n ' t kill the copy process when perform it to primary storage
hbase - 15613 skipping normalizing table when namespace have no namespace
fixed androidinput crash due to miss array resize ( pressure array ) .
added a new method ` propertyValuesOf ` to retrieve property values of the specified property name to enhance testability and facilitate testing of property value retrieval
ignore test that fail and block PRs
fix hopperhock wrap around player when pick up item . close # 44
created an AlertDialog for managing authentication credentials in SsoWebViewClient to enhance user experience by prompting users with basic authentication options
updated test assertions and added methods for document management in TestStressIndexing2 . java to improve test reliability and enhance document deletion efficiency
[ flink - 22559 ] [ test ] ignore upsertkafkatableitcase since flink - 22559 be fix
replaced ` get ( j ) ` with ` computeIfAbsent ( j ) ` and simplified variable assignments for clarity to enhance code readability and avoid potential null pointer exceptions
added configuration to accept single values as an array in DefaultEntityMapper to enhance flexibility in handling incoming JSON data formats
updated localization messages in VersionChangeLogs . java to include UK and SL for improved localization support
replace the hardcoded array of shortcut categories with a dynamic lookup from resourcesutils to improve flexibility by allowing the retrieval of application categories from resources
drools - 3353 dmn fix # 2783 dmn support for ' AND ' and ' OR ' expression .
nifi - 5613 - added content - type attribute to gethttp , so that the content - type header can be use for flowfile
fixed # 1744 - resourcehistorytable must be persist in a transient field ( # 1746 )
replaced ` exitButton ` with ` doneButton ` in ` HelpActivity . java ` and updated ` SearchBookContentsActivity . java ` to use the new ` doneButton ` variable instead of the exit button to enhance clarity and maintain consistent naming conventions for button functionality
polish ` ` remove redundant comment ' '
refactor invalidateStalePartition method to accept a List of partition names with version and context to improve efficiency by restricting invalidate operations to specific metastore context
bug 62840 - improve performance of view result display with full visualizer
updated icons and their display from ` ic _ group ` to ` ic _ chat _ bubble ` across multiple classes to enhance visual clarity and consistency in the icon appearance
[ java ] use longvolatile rather than long to get the late counter index .
updated test method names to use underscores instead of camel case to improve readability and consistency with naming conventions
added a new constant for the data source name and made the generateDetectionConfig method public to facilitate access to the data source and improve encapsulation for the DetectionConfigTranslator
updated awaiter timeouts from 10 seconds to 30 seconds in multiple locations to allow for a longer processing time during phaser synchronization
removed the BuildSlaveFinishedStatusEvent class and modified the publishBuildSlaveFinishedEvent method to streamline code by eliminating the redundant event handling logic
fix findbugs encode warning in vmwarestoragemanagerimpl . java template uuid generation
[ ds - 3762 ] add test case for deposit workspace item without workflow
fix duplicate classpath entry in classpath ( # 5417 )
remove unused method isboxedprimitive from unbox . java
refactor argument handling in SpecificCompilerTool and add comprehensive tests in TestSpecificCompilerTool to improve argument parsing logic and ensure correct order of flags
modified HiveMetaStore to check for external tables before deleting the directory to ensure that temporary tables are deleted only if they are not external
hive - 27113 : increase default blocking queue size for server2 async operation ( prasanth jayachandran review by gopal v )
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
updated UpgradeResourceProvider to use a constant for execution task role and component name to improve code clarity and maintainability by standardizing the handling of service and component names
make sure that we include the current conf info when decide to override the default conference behaviour
improve log - tree performance ( # 5239 )
updated return conditions in ChannelEndPoint . java to include additional socket checks to ensure proper handling of output and input shutdown scenarios
updated SetNullableGenerator . java for improved null safety handling to enhance code reliability and maintainability
camel - 13040 : camel - example - reportincident - should use file component instead of file component .
consolidated import statements and updated form handling logic in NettyRoutingFilter . java and FormIntegrationTests . java to improve code readability and maintainability while ensuring correct usage of MediaType constants
add @ apicomponent annotation to make it easy to customize the bean name
modified lifecycle listener handling in Lwjgl3Application and Lwjgl3Window classes to ensure proper disposal of lifecycle listeners to maintain resource integrity
updated the FG _ FK color value from 90 to 200 to improve the visual distinction of the foreground color
remove unnecessary import that cause error when run with mp3
test : fix secondaryindexmanagertest and remove useless query assertion
add the ability to run out of the about section of the plugin about what we need
[ hotfix ] [ test ] customserializationitcase : use Optional < ioexception > for error cause assertion
updated MediaFormatUtil . java for consistency in naming conventions to improve code readability and maintainability
added a method ` isCellEditable ` that returns false to provide a override for cell editable behavior in the ` GeneralTab ` class
added a method to check for unused dependencies only printing commands and modified message formatting to improve clarity and functionality of unused dependencies messaging based on configuration
fix scaling for lightweight vocalTractmodifier
hive - 23094 : fix typo in javadoc comment ( szehon via ashutosh chauhan )
implement hashcode and equal to uaaauthenticationdetails so that clientid and sessionid do n ' t have to be the same object
migrate testskeletoncontrolrefresh to new anim system ( # 1334 )
truffle : rename nodefilter to nodecountfilter to avoid complex overload resolution
updated condition to check for equality with SYNC _ FETCH _ BATCH _ NUM to ensure the fetch limit is less than or equal to the expected limit
fix debugexprtype parse to work with v1.3 . 2 release .
updated dependency resolution logic in ExcludeDependency . java to improve accuracy in identifying dependencies based on scope
replace the temporary method with dst2 ( ) for vector operations to enhance functionality and improve code clarity
fix problem with the default value of gridhubconfiguration . args for command line
refactor Rust binary configuration to use linker flags instead of raw lists to improve flexibility in handling linker flags for Rust projects
[ # 7358 ] fix admin email template failure ( # 7358 )
added external DAG name configuration and modified logging behavior in LLAP splits to include it to enhance clarity in generated LLAP splits by including the external query name
removed unused import of File in TileAtlas . java to improve code clarity and reduce unnecessary dependencies
[ netbeans - 5070 ] better error message for gradle daemon on closed stream
updated the validateQuery method to accept multiple arguments for error message to enhance error handling by allowing multiple error messages to be passed
updated LuceneExecutor to change INDEX _ VERSION from 1 to 2 and removed multiple redundant fields related to repository handling to streamline the code and enhance clarity by consolidating repeated logic into a single method
[ flink - 21322 ] [ core ] make kryo serialization testable and fail if the registered class do not change
added null check before removing configuration property and improved test assertions for handling dummy2 - site attributes to enhance robustness by preventing potential NullPointerExceptions during configuration processing
refactor Boolean handling in MetaStoreDirectSql . java to use BooleanUtils for better clarity and maintainability to improve code readability and handle Boolean conversion more effectively
fix issue where customization drawer be show when return home from another app . ( bug 6628325 )
harden termvectorcomponent by make it easy to understand the warning key
8059231 : verify that octane raytrace now work with optimistic type turn off . add well log for optimistic type in the compiler .
updated expectations handling in Expect . java to enhance clarity and maintainability of the code
add UnixSocketConfigurationStrategy to DockerClientFactory and implement it to support Unix socket connectivity in Docker testing
fix ( http ) : fix flaky test case ( # 4896 )
camel - 13636 : added specific exception to the reactive stream that have no active subscription
refactor Vectorizer to use TezWork instead of MapRedTask for validation to improve compatibility with Tez tasks and enhance code clarity
added a boolean parameter to the constructors in StringAppender and LogDivertAppender classes to enable support for conditional execution of the superclass constructor
bug 66425 - guiconfigurable : avoid npe if no gui package be available
[ gr - 8711 ] fix handling of weak function in sulong .
8305272 : implement consistent process for quarantine of test
test only change - add test for defaulttransactionthreadlocal ( # 2967 )
added validation for invalid operation handles in HiveStatement to improve error handling and provide clearer warning messages for invalid operations
fix ( freezev2 ) : alter table alter column null … ( # 3391 )
camel - 16171 - camel - aws - secrets - manager : create an aws - secrets - manager component - add integration test
refactor SimpleTree class to improve code readability to enhance maintainability and ease of understanding
refactor the error response handling for email sending to improve readability to streamline error message retrieval for better clarity and maintainability
modify the fromContent method to accept a boolean parameter and adjust its logic accordingly to allow customization of the result creation based on whether a subtree should be considered
update the calculation of column width in Sheet . java and add a test case for column width calculation in TestHSSFSheet . java to ensure accurate column width representation and validate functionality through unit testing
fix a working path bug ( issue # 355 )
changed method return types from Set to Collection in DotWriter and GraphExecutable classes to improve flexibility in handling collections and ensure compatibility with the expected data structure
update default SSHD image from a sha256 hash to 1.0 . 0 to ensure compatibility with the latest SSHD features and improvements
fix npe in deletehost api , the assertion be n ' t in the future .
refactor rawKey calculation in DefaultGroupKeyGenerator to streamline handling of multi - valued columns to improve clarity and maintainability of raw key generation logic
updated the test method for seeking exceptions in TestMultiMMap . java to improve clarity of error handling and ensure correct seeking behavior
fix checkstyle issue in io / entity / bcsiliconrecipes . java ( # 777 )
fix compile error due to miss interface
update visibility logic for child views and refactor drag exit handling in the DragController and Workspace classes to enhance code readability and maintainability by consolidating logic and making the drag exit logic clearer
fix ( modifyrequestgatewayfilterfactory ) : handling of empty body for modify request ( # 2959 )
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure correct accessibility checks for public and package - private fields
changed logging level from warn to trace in multiple logger classes to improve logging granularity for better debugging and monitoring
fix prefix detection of jar resource with wildcard ( # 348 )
added options menu functionality to the GalleryActivity for gallery images to enhance user experience by allowing quick access to images through the gallery
refactor MongoDBServiceFactory to use a singleton service instead of a singleton instance to improve resource management and ensure only one instance of the service is used
patch from stefan penndorf to describe the behaviour of inline constant mutator with booleans
added Blackhole parameter to the decode method in RecordTest . java to enable better control over the decoding of test state
fix : update gapic - generator - java with mock service generation fix ( # 659 )
[ knx ] fix indexoutofboundsexception when group address be not set ( # 15821 )
remove the clearing of witnesses in ManagerTest to ensure a clean state for tests before execution
change jdbcpagesink exception handling to log instead of throw
removed the stack property from the script object and replaced it with getter and setter methods to improve encapsulation and control over stack management
removed a check for directory names that start with " . " in DrillPathFilter . java to simplify the condition for path validation
fix pinot auto load onboard config ( # 4113 )
added a call to ` clearIndex ( ) ` in BasicFunctionalityTest . java to ensure a clean state for tests by clearing unnecessary indices
update boldWEIGHT _ NORMAL value from 190 to 0x190 to ensure correct representation of the bold weight in the application
changed ` fThreadGroup ` to be volatile and modified ` Timeout ` constructor to include a ` lookForStuckThread ` parameter to ensure thread safety and improve encapsulation of timeout logic
fix checkstyle issue in util / valueresultdata . java ( # 722 )
update hashCode and equals method in FuzzyQuery class to ensure proper object comparison for better object comparison
removed print statement for target debugging in PushedResourcesTest . java to clean up redundant console output during tests
changed method return types of removeFile and removeDirectory from SharedRandomAccessFile to void to simplify method signatures for better usability and clarity
updated the product version assertion from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest . java and SchemaCrawlerCoverageTest . java to ensure tests align with the new version of the database engine
updated the retrieval and principal resolution logic in PersonDirectoryPrincipalResolver to ensure proper handling of null attributes and improve the principal creation process
updated log level from info to warn for bridge connection errors to improve visibility of critical issues in the Bridge configuration
updated method names and logic in Hashing and Int2IntHashMap classes for consistency and clarity to improve code readability and maintainability by standardizing method names
added a constructor to ThumbnailGenerationTask for managing thumbnail generation tasks to ensure required storage manager is not null before processing
updated the condition for stopping the number of points in the GroupSelectionQuery to ensure that the number of attempts is reached only if the number of attempts is reached
test case for sourceforge bug 1933922 - add test for recursive compilation
simplified comparison logic and removed unnecessary parentheses in multiple conditional statements to improve code readability and maintainability
update control character validation condition in FileResolver . java to ensure space and control characters are valid for valid characters
fix for issue 694 : visual feedback not work on iphone 11 .
improve test runability of instructorhomepageuitest [ ci skip ]
rename jsonparserasync to jsonstreamparser to avoid confusion with the name ' s implementation .
update Crouton cancellation logic and modify result intent handling in DetailFragment . java to improve clarity of confirmation messages and ensure proper encapsulation during activity pause
[ iotdb - 3258 ] fix npe while fetch schema with unrelated template ( # 4448 )
modified the Dialog class to improve dialog behavior to enhance user experience by providing better responsiveness during dialog operations
replaced the execution of a process using ` Runtime . getRuntime ( ) . exec ( args ) ` with a ` ProcessBuilder ` for improved process management to enhance the flexibility and configuration of the process process
replace the local host lookup with a dynamic port lookup for the Past window to ensure accurate metrics reporting by addressing the local address
refactor subsystem assignment to use a loop for better clarity and maintainability to simplify code by reducing duplicate code and improving readability
skip some test on macosx until apple sdk be available
move validation of java . specification . version and java . vm . vendor into jvmciversioncheck
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
8287922 : gc / g1 / testlargepageuseforauxmemory . java fails due to use of memory lock
added charset handling methods to BinaryParser , PlainTextParser , and ParsingExecutionContextView classes to support customizable character encoding for parsing results
added MultiPartFormDataCompliance enum and methods to manage it to support flexible handling of multipart form data in the HTTP server
upgrade gradle tool to 7.2 - rc - 2 with jdk 17 support
introduced the ` addType ` method in ` SnapshotControl ` and updated the addition of types to use this method to improve code clarity and maintainability by consolidating type addition logic
refactor Term class to improve code readability to enhance maintainability and ease of understanding
updated return statement to handle empty or null values to ensure robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 6682 - add unit test for same rm
Refactored multiple Java files by updating their imports and class names to Improve code organization and maintain consistency across the project
filter out fail test . relax restriction in blackbox test .
refactor tinting logic in TaskView for improved clarity to enhance readability and maintainability of the code
drill - 2958 : fix run and output type for sum0 inside a function
fix typo in nthvaluefunctionit and firstvaluefunctionit ( # 5382 )
hbase - 14529 improve log for allocation fail ( chunhui )
added a null check before inserting properties into the roleObject to avoid potential NullPointerExceptions when accessing properties
added the ` @ VisibleForTesting ` annotation to several fields and methods in ` StatusBarTouchController . java ` , updated task removal logic in ` RecentsView . java ` , and modified test methods in ` StartLauncherViaGestureTests . java ` to enable testing of touch interactions and ensure proper resource management
added a method logContainer that accepts a boolean parameter and modified its implementation to enable streaming when logging containers for better control over container data logging
add performance test for mvstore cache
updated the primitive type from " L " to " J " in PrimitiveType . java to use the correct data type for long values
changed the access modifier of the delegatingApplicationListener method from instance to static to enable the method to be accessible from other classes or packages
camel - 9769 : rest dsl - avoid to reuse the message body for failed test .
resolved - issue batch - 145 : add fileremovaltasklet and filedeletiontasklet sample
g3d - 410 : make sure size keep drawables be always resize ( but init view just create )
lgtm : identify index out of bound exception in bitutil / int2inthashmap / bitutil # entries
updated methods in AccessibilityManagerCompat to use ordinal parameters instead of String for state event tracking to improve flexibility in event handling by supporting different states
added checks for video thumbnail requests and modified start listener behavior to ensure proper handling of video thumbnail requests based on user agent and renderer settings
allow scrolltoerrorline ( ) to work when the user move a line break by a blank line .
modify the button visibility logic based on the UI theme constant to ensure consistent button sizing behavior across different UI themes
updated Skia . java with proper link and preload initialization to enhance functionality and ensure proper loading of the Skia library
add networkparameters . unittestnet ( string ) to avoid confusion
improve error message when no format argument be specify for owner ( )
refactor methods in IntIterator for improved clarity and consistency to enhance code readability and maintainability by using a more descriptive variable name
updated the walkRuleAndAdd method to include an additional parameter for srcTarget and modified the dependency traversal logic to improve dependency management by incorporating source rule details during tests
[ netbeans - 4562 ] properly handle module with @ override in module - level patch
[ java ] candidate term should be schedule in protocol version low than v1 .
change default policy for OwnCloudClientManagerFactory based on SAML authentication state to ensure compatibility with different authentication settings for better security management
[ beam - 8470 ] improve error message when a maptableresource ( table ) be miss
try to make sure session / connection be close in case of timeout .
refactor ` AnonymousAuthenticationFilter ` to utilize ` Supplier < SecurityContext > ` for deferred authentication to enhance security context handling and improve code readability
modified the removeActor method to include an option for unfocusing to enhance actor removal functionality and prevent potential focus issues
refactor cloud configuration prompt to use a valid configs variable to improve code readability and maintainability by consolidating configuration validation logic
added log level support and modified context flushing behavior in the Netty HTTP server to improve HTTP request logging and ensure proper handling of write operations
refactor multiple parser and parser classes to improve code readability and maintainability
replace direct call to update ( ) with SwingUtilities . invokeLater to ensure update is executed on the Event Dispatch Thread
camel - 14553 : camel - groovy - adapt the code for camel - groovy to be more efficient .
remove plugin inspire by use set instead of list .
[ flink - 17665 ] [ python ] make some field public in flink - conf
updated TestSharedPreferences to extend TestSharedPreferences and added unit tests for SharedPreferences functionality to improve testing accuracy and ensure correct behavior of shared preferences editor
remove the code that loop out the storage key alias from the http server - server .
douniaberrada : catch an exception if the server do n ' t fail to convert a string to a response .
change updateimage ( ) method from private to protect to allow subclasses to access and override updateimage ( )
fix not drop player - liven block ( # 8988 )
added native methods for location calculator configuration in DataOutputQueue and depthai classes to enhance spatial location functionality and improve handling of location calculations
upgrade to openjdk 1.8 . 0 , require by jdk 1.8 . 0
refactor tree trie empty check to use a dedicated method ` isEmpty ` to improve code clarity and provide better error handling for cases where the trie is empty or not
updated foreground and background method calls in AttributedStringBuilder . java to ensure correct positioning of background elements
solr - 7090 : peersync : make the fingerprinting disable the solr . disablefingerprint system property
changed method visibility from private to public for moveFunds to allow access to move funds from other classes
added beforeConvertEvent handling and improved test coverage in MongoTemplate and MongoTemplateTests to ensure proper event emission and validate database interactions within the test cases
fix invalid unit test , by use hazelcastinstancefactory . setup ( ) to create test instance .
fix tika - 451 -- make sure to close the input stream in tika cli
replaced ` ApiBag . ExceptionWithErrObject ` with ` ApiException ` in the ` modify ` statement to handle a broader exception type for improved error handling
updated the loading method call in OptionsParser . java to ensure that the configuration file is correctly loaded from a specified file
[ # 7540 ] instructorfeedbackcopyactiontest : fix typo in log message ( # 7541 )
[ beam - 14348 ] remove useless ' throw exception ' exception in externalworkerservice constructor
remove ' step ' field from hmtdatapoint and move it to be a typegenerator interface
added logging statements and adjusted logging behavior in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of log messages and ensure exclusive lock acquisition occurs
remove duplicate call to schedulejobs to adhere to code style
simonstewart : make a few more change to the test case to account for the fact that it be terrible
replaced static fields for logger management with ThreadLocal instances to improve thread safety and maintainability of logger instances
changed the visibility of the convertToCompilationUnit method and updated test class to use Mockito instead of JMockit to improve testability and compatibility with mocking framework
modified type checking and boxing behavior for better handling of primitive types to ensure type compatibility and prevent errors related to unboxed primitive types
updated task view handling in RecentsView to ensure correct orientation state when new task view is active
hbase - 24911 fix flaky test testflushfromclient . testflushfromclient ( ) ( # 1920 )
fix : if a new contract be delete we must clear the storage key .
updated balance calculations to use dynamic properties instead of a hardcoded constant to ensure accurate fee calculations for account and withdrawal operations
add URL handling and texture caching logic in RealisticRenderStrategy . java to improve texture management and resource management by ensuring only necessary caches are cleared
refactor raster creation and composition in Blit . java and create a new Bug7049339 . java file to improve code clarity and ensure correct handling of raster types
added support for unselected styles and adjusted string width retrieval in the component classes to enhance text layout flexibility by allowing dynamic adjustment of string width based on unselected styles
updated ArrayList constructors to specify initial capacity and streamline action list processing to improve performance and reduce memory usage during list operations
removed the ` flags ` parameter from multiple method signatures in ` queryImplicitIntentServices ` and ` queryImplicitIntentActivities ` to simplify method calls by eliminating unnecessary parameters
updated PingRequestHandler . java to improve code structure to enhance maintainability and readability of the code
test : update external test image to include screen time around mp4
[ tradfri ] supress ' old firmware ' warn if firmware property be not set ( # 6079 )
fix javadoc warning ( # 852 )
replaced InlineLayout with DefaultLayout and modified conditional check in DefaultLayout to ensure proper layout behavior and improve logic for block display handling
updated JsonDecoder to handle unordered fields during JSON parsing and added a corresponding test case to ensure correct deserialization of fields from JSON strings and verify functionality through testing
fix # 4855 - replace notification . getkey ( ) by notification . getvalue ( )
ignore savepointtestbase . teststopandrollback test due to intermittent failure
drools - 6428 dmn support command line option syntax ( # 2928 )
changed fields from non - final to final in ContextRegisterListener . java to ensure immutability and promote better coding practices
refactor ObjectHashSet to initialize iterator conditionally instead of creating new ones to improve flexibility in iterator configuration and ensure proper initialization before testing
hive - 20928 : fix outofmemoryerror when batching ( rajesh balamohan via gopal v )
fix world setting and update for modded application .
updated logging messages and added handling for " abort " method in JdbcProxyGenerator to improve clarity of log messages and ensure proper resource cleanup during connection abortion
update import statements for the workspace animation based on the current state to ensure correct accessibility settings for different states during state transitions
hbase - 26282 fix the 2 findbugs warn - > debug log message in protobuflogreader
update scope handling in UaaTokenServices to assign a new variable to ensure that the token persistence logic correctly accounts for longer scopes than 1000 characters
updated import statements and modified logger initialization in SchemaRetrievalOptionsBuilderTest . java and TestAvailablePlugins . java to enhance code clarity and maintain consistent logging practices
add executablecommand so it can be reuse by kieserver2 . execute ( )
try to fix the ci test error of camel - jms
added padding getter methods to CellLayout and modified bitmap creation logic in Launcher to improve readability and maintainability of padding calculations for different orientations
do n ' t collect cands when there be no cands
refactor various classes to change references from ` SamlMetadataUIParserAction ` to ` Action ` and adjust related imports to improve code clarity and maintain consistency in action handling within the web flow
added a method to check for open ports and updated port checks in LdapMockMvcTests . java to enhance port validation and ensure all relevant ports are validated
log4j2 - 1343 use executorservice . shutdown ( executorservice , int ) to shutdown executorservice to avoid block thread
updated URL handling in Fetcher and HTMLMetaProcessor to improve content redirection logic and logging clarity to enhance debugging capabilities and ensure proper content redirection behavior
updated SolrQuery in TestSpellCheckResponse . java to use a specific query name to improve clarity and accuracy of the test assertion
update Console initialization to use Karaf Console API to ensure compatibility with newer Android Console API versions
bugfix : fix exception when load vertex color for mesh ( blender 2.1 ) .
update htmlreportgenerator to exclude the time period after generate an html file .
remove unnecessary test method name and replace with parameterizedtest .
pdfbox - 4892 : remove private addmetadata method , a suggest by valerybokov
improve an error message when an expression be bind to a field ( th : ath : ath : a ) in the wrong way
remove system . out . println from joglinput . java since it be n ' t use anywhere
added a method to allow allowing extraction of private fields and updated field reading logic to enhance flexibility in handling fields that should not be public
add code to replace " { name } " with device name in WebDataHandler to improve clarity and maintainability of device name management
use methodhandles . lookup ( ) in java 8 + platform - fix # 987
deprecated the old weights method and introduced a new weightsByDouble method in ZParams . java to streamline the code and introduce a new method for better clarity and functionality
added database parameter to the writeCustomHTML method across multiple writer classes to enable the handling of custom HTML rendering based on the database context
added assertions and simplified variable declarations in BTreeMap . java to improve code readability and maintainability by removing unnecessary type casting
updated exception handling to use BalanceInsufficientException and added logging for better error messages to improve error handling robustness and provide clearer error reporting for invalid transactions
bugfix # 256735 , make sure that we only write the small buffer when system property ` ` netbeans . profiler . heap . zerofile ' ' be set
removed print statements and replaced send statements with sendMessage calls to simplify code and improve readability
reduced the buffer size from 14 bytes to 13 bytes and updated the write operation in HortonworksEncodedSchemaReferenceStrategy and HortonworksEncodedSchemaReferenceWriter to optimize memory usage and ensure correct data handling
[ beam - 10670 ] add miss spring - batch - core import ( # 10707 )
refactor code for improved readability and consistency by removing unnecessary line breaks and enhancing null checks to enhance maintainability and clarity of the code
simplified the usage of document titles by removing unnecessary method calls to improve code clarity and efficiency
modified Test7005594 . java for code optimization to enhance performance and maintainability of the test cases
http : / / issues . apache . org / jira / browse / amq - 4328 - remove subtype specification from error message
refactor TopKRollupPhaseOneJob class for better code organization to improve maintainability and readability of the code
fixed npe cause by enable static nat rule for vm that do n ' t have the ip address assign .
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and updated related logic to support ANSITriggers instead of generalTriggers to enhance input handling capabilities for improved user interaction
updated method signatures and removed deprecated imports in IterableSubject . java and IterableTest . java to improve code clarity and maintain compatibility with updated API standards
camel - 9833 fixed the indexoutofboundsexception issue on some http server
add more test for native query with empty result
added a new ` LargeValueFormatter ` class and updated random value calculations to use a variable for the random value to improve code readability and maintainability by using a consistent approach for generating random values
improve the handling of character escape sequence in comment parser ( # 2526 )
remove suppresswarnings annotation for argument type incompatible in java . desktop module
[ fix ] tracera [ lsra ] fix typo in registerlatencyphase
added a TODO comment to the NullAssertionValidator . java file to prepare for future implementation of stubbing methods
added import for RuleKeyAppendable and included it in buildRuleKey if it is a RuleKeyAppendable to enhance rule key generation for better dependency management
use local copy of system profile to prevent test the network speed
refactor createThreadFactory method to directly create the event loop group to improve code readability and maintainability by eliminating redundancy
refactor message counting in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code clarity and maintainability by encapsulating message retrieval logic
added a accept attribute for " image / * " in ImageFileInputDialog to enable handling of image file input based on user input
refactor ElasticIndexWriter to utilize PreBuiltTransportClient and update header handling to improve code clarity and ensure consistent client configuration
add additional logging for the witnesses and their class in ForkController . java to improve debugging by providing clearer insights into the processing of witnesses and their class types
added a new test class called NullPointerAndEmptyArrayTest to validate the behavior of null and empty URL arrays to ensure proper handling of null pointers and empty arrays in the API
updated methods for finding generated source paths and removed unused methods related to IjProjectBuckConfig to improve code clarity and maintainability by consolidating logic and removing unnecessary dependencies
updated UaaStringUtils to accept a function for escaping special characters in wildcard patterns to enhance the flexibility of wildcard handling in the UAA authentication process
hive - 4646 : increase fail validation for table scan when there be more than one table per operator ( navis via ashutosh chauhan )
updated import statements and modified the exception handling in WeatherQueryTest . java to align with the latest Mockito framework and improve test clarity
fix issue where the firmware setting do n ' t apply all the setting .
replaced the return type of ` getLangs ( ) ` from ` List < String > ` to ` Set < String > ` and updated the method to return a set of language names from HTTP headers to improve language handling and ensure accurate retrieval of language names from HTTP requests
updated import statements and adjusted assertion checks in LazyTraceScheduledThreadPoolExecutorTests . java to ensure consistency in test assertions and improve code readability
hbase - 8470 load table ' s snapshot use a lock to perform parallelization when wait for enable / disable state ( liang xie )
[ wasm ] add support for platform null call in finally - related loop .
remove http rpc test since okhttp be not 3.2 - compatible
added a isSuspended flag and modified thread suspension handling in Thread . java and Test _ Thread . java to ensure proper management of thread suspension states and improve exception handling for invalid thread states
updated Javadoc visitors to include Hidden and SerialData for handling document references to enhance Javadoc clarity and correctness in processing Javadoc references
add check for non - null camelcontextid and use objecthelper . isnotempty ( camelcontextid ) .
removed multiple redundant @ Override annotations from various security - related classes to streamline code and improve readability by enforcing best practices
added module import handling and updated eval method in Java2TypeScriptAdapter and adjusted test assertions in EnumTests to ensure proper module imports and validate expected outcomes in tests
update language string to use http : / / www . w3 . org / 2001 / XMLSchema to ensure proper serialization / deserialization
added content description handling in BubbleTextView to set content description based on notification count to improve the clarity of notifications displayed for users
added mouse wheel event listener to the TestMouseWheelScroll class to enable logging of mouse wheel rotation and mouse wheel event direction changes
added a test for verifying absolute positioning in the VisualRegressionTest class to ensure proper resource management and prevent memory leaks
replaced instances of BTC _ ETH with XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to standardize currency pair usage and improve code clarity
- do n ' t use the location enum from the vacuumframe and vacuumcontroller . location a the location enum be just a string .
simplified currency mapping by removing unnecessary conditional checks to improve code readability and maintainability
replaced Sets and HashSet with ImmutableSet and TreeSet for handling message fields to improve default value output logic for better functionality and clarity
remove redundant handling for array and enum types in JacksonXmlFormatMapper to simplify the code and improve readability by eliminating unnecessary logic
updated variable names and logic in VirtualThread . java for clarity and consistency to improve code readability and maintainability by using a more descriptive name
refactor DirectoryTaxonomyWriter by replacing the creation of BytesRef instances with a single instance and improve cache handling to enhance code readability and maintainability while ensuring proper cache implementation
refactor VetoableChangeSupport class for improved readability to enhance maintainability and ease of understanding for future developers
adjusted height calculation in BrowserContentPane to correct vertical positioning to ensure proper layout positioning of the owner component
pdfbox - 2852 : remove throw value that be never use ; simplify code
added unit tests for handling short and long support messages in ` ShadowDevicePolicyManagerTest ` to ensure proper security exceptions are thrown for non - active and non - active administrators
allow close button in help panel ( close button ) + remove unwanted cast
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code clarity and maintainability
refactor code to utilize ThreadHelper for waiting on the backend state and update sleep durations to improve responsiveness and ensure proper synchronization during controller state transitions
updated the logic for handling release status in SwingStartup . java to improve accuracy in updating the application version based on the release status
add comment to dbmigrationconfig , to turn comment off by default
update command syntax for player commands in multiple Java files to enable wildcard player commands for improved command usability
deleted two files , BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java to remove unused filter classes to streamline the codebase
[ jbrules - 3684 ] make optionprocessor use correct option name for prefix / equals / hashcode
added a condition to check if the parallelism variable is parallel in TestNGContentHandler . java to ensure proper handling of parallel compilation scenarios
[ issue # 4258 ] fix the bug of registerfirst and enableactingmaster be false when upgrade to 2.0 . x
refactor : remove static import of enums in ctmethodimpl . java ( # 2568 )
added serialVersionUID to multiple exception classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes for improved code clarity to enhance maintainability and readability of the codebase
updated ShibbolethCompatiblePersistentIdGenerator to include a separator parameter for hashing to enhance flexibility in base64 data generation by allowing customizable separator handling
check for null to avoid npe when system action be disabled
added a new class ` Person ` with a private name field to provide a structure for managing Person instances in the project
start node - ring gathering by local address rather than seed for each node
convert timeStr to lowercase before checking its value in the column label to ensure consistent handling of time strings regardless of case
added assertions for timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest . java to ensure that the metadata correctly reflects the expected values from various metadata fields
updated color import statements and changed the color used in simPlotPanelDesc to ensure consistent color usage and improve consistency in color handling
added a new onNext ( new Object ( ) ) method to the disconnectEmitters callback to properly handle disconnect events in the streaming service
fix @ lazy on bean with thanks to franz
fix visibility check for double overflow in firefoxdriver
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
hhh - 16625 - jbpm - jtatransactionmanager should lookup the custom jndi location if available
changed the visibility of the pickUri method from public to private to restrict access to the method for better encapsulation
library : remove hasfunction ( ) , it be deprecate in 3.0 . 0
align code between 8.0 . x and 8.1 . x to be clear .
fix the logical value of timestamp for bigqueryio ( # 2653 )
replaced explicit null checks with requireNonNull method for buffer and user credentials to improve code readability and follow best practices for null checks
implement ability to pass default value into coerce field for reduce false positive .
added bounds checking for row and column indices in FlightConfigurablePanel to ensure valid index values to prevent potential errors
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to enhance the user interface by ensuring the selection is visible during updates
[ java ] unnecessarylocalforreturn - fix false positive with nested call
refactored the initialization of ScriptEngine in AbstractScriptExecutor to use a single instance of ScriptEngineManager to improve code clarity and maintainability by reducing redundant variable assignments
euclideandistancesimilarity # getaverage2 interceptscorrelations should return 1.0 instead of nan ( # 10222 )
avoid incremental backup if the sstables be null
refactor the relativize method to accept Path objects and update its usage throughout the MorePaths class to improve path handling by ensuring only valid paths are relativized
updated column size handling and added decimal digits support in ColumnSnapshotGenerator and DataType classes to ensure proper formatting of decimal digits when columnSize is null and improve code clarity
fix test which randomly fail on slow ci server
replace ` toHexString ` with ` toJsonHex ` for converting byte array to hexadecimal format to improve consistency and accuracy in JSON representation
renamed ErrorHandlerController and related classes to Error403Controller and Error404Controller , and updated the package structure to improve clarity and organization of error handling controllers and enhance code organization
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal . java and WindowsTerminal . java to ensure terminal cleanup occurs only after the terminal has been reset
make tiny . toarray work again on java 17 + ( # 2131 )
refactor connection handling to use an iterator instead of directly accessing the entries array to improve code readability and eliminate potential concurrent modification exceptions
change method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple classes to improve clarity and consistency in naming conventions for date converter methods
pdfbox - 3672 : check for existence of / dest name and prevent nullpointerexception if / tmp be miss
fix classnotfoundexception message when unable to create javassist classloader .
added exception handling for reader and writer exceptions and adjusted thread join duration in LargeStreamletTest to improve error handling and ensure proper synchronization during testing
update the logic for setting extra pages in HomeFragment to dynamically adjust the number of pages displayed based on user preferences
added error handling for broken GIF in AndroidImplementation . java and modified SDK version check to improve robustness of image processing and ensure correct SDK version compatibility
replaced suppressNode ( ) method calls with SuppressSubnodes annotation in BaseParser . java to improve code clarity by eliminating unnecessary method calls
pdfbox - 2576 : makeDFparser use try - with - resources so the parser be actually close
deleted the file TestDocInverterPerFieldErrorInfo . java to the test file is no longer needed for the current project scope
added a shell command for input event binding in AbstractLauncherUiTest and removed a assertion check in LauncherInstrumentation to improve testing accuracy by executing the keyboard command and simplifying the assertion logic
added JSON serialization functionality to generate a filename to URL from a specified file to enable users to export URLs from a specified file for improved data management
bugfix # 25373 - reset notified result flag after close result
bugfix : add load feature to load image .
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextTests to remove the " application : " prefix from the context ID validation
fix ( freezev2 ) : switch to old version ofbn randomizer for test
added URI parsing for notification sound and updated notification sound setting to enhance notification functionality by allowing customizable notification sound
add method to report loop count to rootnode ( relate to github # 656 )
added a finalization check for STANDARD repository type and updated the cluster entity merging process to ensure proper version finalization for standard repositories and clusters
fix the wrong regionid when run the state search of a PortableIpDao
modified the opening of the stream manager in ItemOrientedStep . java to ensure consistent context handling by removing redundant calls
added a new file ` CountedLoopProblem . java ` that generates a string representation of the loop iterations to check the correctness of the string representation in various scenarios
fix invocation of executecompilationmethod and executecompilationmethodvarargs to avoid runtime error
[ gr - 41347 ] fix jvmci error when call getfieldoffset of non - long type .
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities and return value in the transformation process
[ geos - 9762 ] feedbackconstsumquestiondetails show geoserver endpoint
added a call to applyToActivitiesIfAvailable in BaseApplication . java to ensure tasks are filled when available
added thread management and stack dumping functionality in CloseRace . java to improve error handling for child threads that do not finish gracefully
modify return statement to convert integer values to integers and add assertions in TestPointFields to ensure correct data type handling and validate query results for new fields
change button to use the width of the button ( in all case ) .
pdfbox - 640 : reduce max width to 640% of the image quality a suggest by michael klink
add new config option shrink _ whitespace _ in _ sql + update doc
refactor waitForStateTransitionToEnd method to use a unified waitForState method across multiple test classes to improve code readability and maintainability by consolidating state transition checks
added configuration imports for various CAS components in the test classes to enhance the flexibility and organization of authentication and ticket management components
replaced reliance on raf reading with DataIO calls for reading long values to improve performance and compatibility with larger data formats
camel - 8560 : camel - http - optimize component to reduce stack frame in use during rout . work in progress .
refactor the creation of ClasspathInfo to use a builder pattern for creating the proxy classpath to improve clarity and maintainability of the proxy classpath initialization
add provide provider for script scope ( # 5546 )
added methods to retrieve and set the layer manager in the AnimComposer class and updated event handling in AnimEvent to improve layer management and ensure proper animation handling during interactions
added a check for an empty queue in DeferredHandler . java and removed the updateWallpaperOffset method from Workspace . java to improve queue handling and eliminate unnecessary method calls
added null checks for mapOp and mapWork , and changed catch blocks from Exception to Throwable in TezProcessor . java to improve error handling robustness and ensure proper handling of Throwable instances
refactor the center handling and update the center calculation in CylinderRegion . java to improve code clarity and remove unnecessary center2D calls
updated test imports and refactored exception handling in TestBadUseCases . java to improve test clarity and maintainability by utilizing the ExpectedException class
updated the ` sendOneQuery ` method to handle null parameters for subqueries to improve robustness by avoiding potential null pointer exceptions when no parameters are provided
visualvm - security : only override the security environment if it ' s toggle
added a new parameter for rctag on the REST API request in ReviewInterface . java to enable users to fetch recent changes from the Android application
modified Test . java file to enhance test coverage and fix existing issues
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in the key generation process
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 826 )
added writeSectionDefinition ( ) method to RtfDocumentHeader . java to enhance the structure and functionality of the header for enhanced document handling
added distance calculation and logging for large jump detection in GpsLoggingService to improve accuracy of GPS logging by alerting when the location is too large
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to streamline code and improve performance by eliminating unnecessary console messages
doc : generate sample code in the java microgenerator ( # 135 )
use weakreferences to avoid lock contention .
simplified the addition of elements to the ` data ` and ` added ` lists by removing binary search to improve performance by avoiding unnecessary searching
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to simplify the activity structure and eliminate theme change handling
changed the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of the unresolved value class
pdfbox - 2576 : remove superfluous assert statement in fst . java
added an assertion to verify that the security policy exists and is a file to ensure proper validation of the security policy before proceeding with policy checks
camel - 14263 : camel - olingo2 should use source code generate configurer to avoid reflection configuration .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to provide more time for thread synchronization during recovery
removed the exception logging statement from the logging output to simplify the logging output for better clarity
add method to send image via http . smack - 143 .
fixed netty producer to avoid illegalstateexception when create a channel from pool .
fix balancdeddatasource . spliturl ( ) for invalid host name ( # 1588 )
jetty - 1378 new sys property for the late jsp - impl to force the use of the jdtcompiler when run in osgi .
added handling for null values in CSVRecordReader and its configuration to enable proper formatting of CSV data when using null values
added LiquibaseService imports and annotations to multiple connection classes to enable proper service instantiation and configuration for Liquibase services
fix position for static field in local variable view due to incorrect access analysis .
update topic for itemcommand and itemstateTriggerHandler ( # 2599 )
updated exception handling imports from BeanCurrentlyInCreationException to BeanCreationException to resolve issues related to bean creation errors in the application context
updated case handling for " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java and added assertions in TestSolrXml . java to improve clarity and ensure compatibility with updated configuration handling
fix mana tablet work in creative . close # 1656
added assignment of the identifier collection for mCurrentCallEvent to ensure the call event has the correct identifier collection for processing
removed import of DictionaryCompoundWordTokenFilter and its associated classes from TestRandomChains . java to streamline dependencies and improve code clarity
removed placeholder ` - % d ` in the thread pool string for the SCrypt key to simplify the key generation process by using a simpler placeholder format
renamed class ` GeneratedCode ` and updated its references to improve clarity and maintainability of the code
remove a null check from the definition in the assertNotNull method to improve clarity by using a more descriptive message
set the visibility of the shareWithMeIcon view to GONE in LocalFileListAdapter . java to improve user interface by hiding the share with me icon when necessary
update the link from HTTP to HTTPS in multiple classes to enhance security by enabling HTTPS connections
added @ NotNull annotation to routerFilter and made header parameter validation consistent to ensure headers are not null and to validate the presence of an empty header
updated assertion message in TestIndexWriterMergePolicy to include both docCount and segmentCount to improve debugging by providing more context on the assertion failures
theorem proving : deprecate neuralnetwork , related functionality ( # 4951 )
fix # 236 : allow to use different http context for crawl session , add test
modified the ` getJspApplicationContext ` method to utilize a privileged action for retrieving the ` JspApplicationContext ` to enhance security by supporting security when running the operation
replaced initial values of ` l ` with ` minL ` and ` maxL ` and adjusted the length calculation based on the initial position of ` compPos ` to ensure consistent handling of freeform values and prevent potential errors with invalid dimensions
replaced Singleton annotation with direct binding for NonceService to improve dependency injection efficiency and reduce dependency on Singleton
fix parent link for random and hasher ( # 3018 )
refactor ` doExecute ` method to remove the ` HttpMethod ` parameter and adjust error URL construction to improve code readability and maintainability by simplifying method calls
reduce delay for block message store test to reduce test failure
fix issue # 244 by add the always override to the status bar .
refactor heartbeat interval retrieval and leader node checks in multiple classes for improved clarity and functionality to enhance the accuracy of heartbeat detection for leader election roles
reformatted conditional statement in NearbyActivity . java for readability to improve code maintainability by standardizing whitespace
updated identity checks in AbstractKerberosDescriptorContainer to use isReference ( ) instead of getName ( ) to improve clarity and accuracy of identity validation
updated the method signature of ` newInstance ` to include a ` noop ` parameter for improved clarity to enhance the flexibility of instantiation behavior when no caching is specified
added a sleep delay before catching ` IOException ` and ` InterruptedException ` to ensure proper handling of thread interruptions during asynchronous operations
update the handling of arguments in PatchExtensionMethod . java to preserve the original arguments before creating a new Expression instance to ensure consistency in argument handling throughout the code
replaced ` Map ` with ` Set ` for managing libraries in ` RawNativeLibraries ` to improve performance and clarity when managing loaded native libraries
int - 1256 add ' apply - sequence ' and ' ignore - send - failures ' to router ' s xml namespace to handle sequence format message
remove x509 certificate and publish client cert url mapping ( # 3452 )
updated the initialization of the SolrIndexReader to ensure that the correct subReader is assigned when the provided reader is empty to improve handling of cases where no readers are available for processing
replaced the existing max and min parsing logic with a new Double2Parser implementation to enhance the functionality to support double values instead of using max and min functions
removed redundant null return for focusable and pointer events in Container . java to simplify the method implementation for better readability and performance
removed unused variables from Highlighter and modified Token next ( ) method signature to streamline code and improve method clarity by eliminating unnecessary exception handling
cloudstack - 4981 : add uuid to the list of user expunge process .
updated CasMultifactorAuthenticationWebflowConfiguration to use Spring ' s conditional injection and improved type safety for flowBuilderServices to enhance configurability and ensure proper handling of services based on their availability
updated SQL execution methods and modified variable names for clarity in WriteJdbcPTest . java to enhance connection handling and improve code readability
turn off laf mode by default for now
refactor code to use the desiredStateEntity instance methods instead of calls to improve code readability and maintainability by reducing redundancy
adjusted margin calculations in FloatingTaskView . java for better layout handling to ensure correct positioning and margin based on layout direction for layout management
added a conditional check for the running state and updated the status line message to improve error handling and provide user feedback during folder operations
updated thread ID handling in CPUCallGraphBuilder . java to remove the initialization of threadId to simplify the code by directly using the active time for thread processing
allow the default perspective to be change over the perspective ( fixes # 311 )
added NetworkAddressChangeListener to HomekitImpl and improved logging messages to enhance network handling and provide more detailed error information
updated lease handling in TestHDFSEventSinkOnMiniCluster to use a renewal time instead of a null lease to improve accuracy and reliability in managing lease renewal times
updated prefixHeader and linkStyle properties in CxxLibraryDescription . java to improve code clarity by explicitly defining the use of Optional . absent ( )
added null check for error message before checking for space left on device to avoid potential NullPointerException when handling fatal exceptions
changed the visibility of ` nextID ` and synchronized the size retrieval method in ` DirectoryTaxonomyWriter . java ` to ensure thread safety and prevent potential ArrayIndexOutOfBoundsException during taxonomy size management
fix unit test which randomly fail on slow ci server
added interface ` HasSourcePath ` and implemented methods in several classes to provide methods for retrieving source paths to enhance code modularity and enable better handling of source path resolution
replaced StringBuffer and string concatenation with direct string construction in IllegalArgumentException to improve performance by avoiding unnecessary string concatenation
added index field name handling and updated test cases in OrdinalMappingAtomicReader and TestOrdinalMappingAtomicReader to ensure proper indexing and validation of taxonomy facets
8074032 : instant . ofepochmilli ( millis ) . toepochmilli ( millis ) can throw arithmetic overflow in toepochmilli ( )
bugfix : fix buffertype when use android renderer
attempt to fix paste paste ( ) ( not work in some case )
add a new file TestCMoveLimitType . java that implements a character buffer functionality to facilitate testing of character operations within the Java compiler ' s loop optimization
improve efficiency of audio packet handling ( # 846 )
camel - 5403 : camel - sql - stored - only parser should be use for check the maxout parameter . thanks to jens kleine - herzbruch for the patch .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current ownership of the software
refactor code to encapsulate custom console creation in a separate method and update version printing logic to improve code organization and enhance readability of version command handling
replaced the old token validation logic with a new method that includes salt and token validation to improve token validation accuracy and maintain consistency across the codebase
throw eofexception instead of return false when skip request
added test case for defaultgroupprovider . deletemember ( ) to ensure that member deletion fails silently if a non - existent group .
( chore ) camel - aws2 - ftp : remove unnecessary object [ ] creation for array creation
deleted the V2ReplicationProtocol . java file to the class is no longer needed for the current implementation
updated classes to replace ` ImmutableSortedSet < BuildRule > ` with ` SourcePath ` for handling classpath source paths to improve clarity and accuracy in managing source paths instead of build rules
added new classes for constructor and final arguments handling with a secret attribute to improve structure and encapsulation of secret management in the application
[ geot - 6646 ] fix memory leak in directtemplatefeaturecollectionfactory
refactor assertion to increase response count to two * getReplicationFactor ( ) to ensure that the response count does not exceed the expected threshold for improved performance
added a null check for the index number before comparing the date created time to avoid potential NullPointerExceptions when accessing item properties
rename anchestors - > ancestor
fix ggb - 1611 add classcastexception for apps that do n ' t support animation .
update ChangeLogParameters to use ` equals ` for comparison instead of ` = = ` to ensure case - insensitive comparison for change log parameters
changed the loggers field from static to final to ensure the loggers map is immutable and enhances thread safety
update return statement to reflect the base plot ' s behavior to ensure the correct base plot is returned for further processing
camel - 7000 : fix excessive log during file upload ( # 7698 )
provide option to disable response with status 200 ( # 1067 )
space # opencomment ( ) : do n ' t fail if the comment be empty .
added imports and logic to remove file types associated with the BuckFile type in BuckModule . java to enhance file type management and ensure only valid file types are removed
updated import statements and method return types in ComposedUtil . java to streamline imports and return type for better readability and consistency
added a constant for unsupported OS and improved error handling for JVM startup options to enhance clarity and robustness of error messaging related to unsupported CPU versions
refactor code for better readability by adjusting whitespace and formatting to improve code consistency and maintainability
add throw illegalseekpositionexception doc to seekto ( windowindex , positionms ) .
[ modbus ] fix osgi test ( # 12419 )
fix variable name and loop condition .
added context management for FontsContract and implemented a reflector interface for context resetting in ShadowFontsContract to enhance testing capabilities and control context management for FontsContract instances
added timezone handling and improved time query logic in TimeGranularity and PinotDataSourceMaxTime classes to ensure accurate time representation and comparisons based on time zone
updated control flow handling to properly manage exit , break , and continue flow formats to improve the clarity and functionality of control flow transitions in the control flow
modified assertEquals to provide clearer error messages when arrays do not match the expected size to enhance clarity and debugging when asserting array equality fails
fix default case bug ( # 752 )
change bitwise operation for index calculation in MeshBuilder . java to ensure correct handling of index values within the specified range
nifi - 1741 : remove controllerservicename from processcontext , this be reference from flowcontroller
added support for resolved annotation processors in KotlincToJarStepFactory by including KAPT3 _ PLUGIN ' s processors list to enhance compilation capabilities when processing Java annotations
updated RESCROLL _ DELAY from 750 to 150 and simplified snapToPage logic in PagedView . java to enhance animation duration and improve code readability
reload workspace when the shortcut permission change be : 95f3d6ba2c
added case handling for History _ SEARCH _ BACKWARD in ConsoleReader to enhance user experience by allowing history search back navigation
add null check for core name in CoreAdminHandler and update the test case to reflect this change to ensure that null core names are handled correctly and improve error reporting for reloading non - existent cores
added marker selection functionality to the NearbyMapFragment to improve user interaction by managing marker display and bottom sheet behavior
added exception handling for the FileSyncAdapter class to improve error reporting by printing stack trace information when exceptions occur
refactor memory check assertions in TestMemoryAwareness to use OutputAnalyzer for better exception handling to improve reliability of memory checks in the Docker run process
refactor FeedQueues to improve handling of feeds based on application settings to ensure that only valid feeds are processed based on the heavy load settings
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
updated AndroidBinaryDescription to convert packageType and resourceCompressionMode to uppercase with Locale . US to ensure consistent behavior across different locales in package type handling
updated XML MIME type from " text / xml " to " application / xml " in multiple test files to ensure correct handling of XML content in the application
updated file initialization and configuration retrieval logic for improved clarity to ensure consistent handling of configuration files throughout the application
updated the wait time in the HostPortWaitStrategyTest from a " sleep 5 ; exit 1 " to a " exit 1 " to simplify the test by removing unnecessary sleep delay
updated the grouping logic in HiveExpandDistinctAggregatesRule to use LongMath instead of IntMath to improve handling of larger datasets and avoid potential overflow issues
added checks for headless environment in mmm Toolkit . java and ppp Toolkit . java to throw appropriate exceptions to enhance debugging capabilities when headless environments are encountered
make exoflame furnacehandler more responsive when a recipe match the furnace
planner - 226 add flag to solverfactory to add thread count at startup
fix # 526 - prevent incorrect search result with rev include
added a new test class ` Issue582Test ` for testing map serialization functionality to verify functionality related to geometric data handling in the application
[ native ] add miss test for decimal overflow
refactor LoadingCache class methods for improved performance to enhance loading efficiency in the application
remove false positive rule avoidnonconstructormethodswithclassname in java 7 ' s javadoc
[ java ] expectedconditions should expose selection state for disabled element .
refactor ViewExistsPrecondition and JdbcDatabaseSnapshotGenerator to enhance view existence checks and improve exception handling to enhance reliability and clarity of view existence checks in the database
refactor DOMUtil class for improved parsing efficiency to enhance performance and maintainability of XML processing
added translation calculations and logging functionality for task view rendering to enhance the visual appearance and debugging capabilities by providing detailed translation information
changed the fixed rotation transform flag from true to false in multiple files to disable fixed rotation functionality by default
added a new method ` walk ` in ` TempFSTTermsReader ` to read first and traverse nested documents to improve the handling of document frequency data in the term processing pipeline
added SolrQueryRequest parameter to DocTransformer create methods in multiple factory classes to enhance functionality by allowing SolrQueryRequest to be passed during document creation
added MySQL triggers to enforce non - null constraints on ` Post ` content and ` Announcement ` validUntil fields to ensure data integrity by preventing null values in critical fields
replace comparator assignment with a direct setter method for the first comparator in FieldValueHitQueue to improve encapsulation and ensure comparators are always set on the first element
updated SQL query assertions to include double quotes around column names and modified the expected query syntax to ensure correctness of query formatting in automated tests
wait for thread to initialize after each test ( # 2529 )
added methods for managing total storage pool parameters and fees in DynamicPropertiesStore . java to improve storage configuration flexibility and error handling during dynamic state updates
added support for ninjaProperties in AssetsController and AssetsControllerTest to streamline resource loading and improve error handling for development mode
updated the method used to retrieve the map mark key in MapMarksManager to ensure the correct key is used for map market retrieval
added TokenRewriteStream parameter to the methods generateConstraintInfos and defaultValue in the BaseSemanticAnalyzer classes to enable the transformation of SQL constraints and default values in the semantic analysis process
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to simplify method signatures and manage exceptions differently
refactor code to store the file path in a variable before logging to improve code readability and maintainability by reducing redundancy
added a check for " AppVersion " and replaced equality checks with ` equals ` for format comparison to ensure proper handling of image formats and improve code readability
[ somfytahoma ] correct the log message ( # 4372 )
( chore ) camel - alerto : disable flaky test on github
added constants for keystore types , password , and trust manager , along with a custom trust manager implementation to improve code clarity and flexibility in managing SSL connections
clarify warning for nan for meter value ( # 12594 )
added functionality to remove the sessionId from sessionIdToSessionInfo to ensure proper cleanup of session identifiers during session management
added logic to set hostname for alerts if it ' s null to ensure that null host names are not included in the alert information
409403 fix illegalstateexception when spdy be use and the response be write through bufferutil . writeto byte by byte
resolve split - packages : move everything from kie - api under org . kie . api : split - kie
added a test for seeking to a specific mode in ShadowMediaPlayerTest . java and implemented the seekTo method in ShadowMediaPlayer . java to ensure correct functionality of media seeking behavior in different SDK versions
renamed methods from ` createTask ` to ` createThrowingTask ` across multiple executor classes to clarify the purpose of the task creation functionality
added border settings for empty tabs based on Aqua LAF condition to improve visual consistency and appearance of the close button in the user interface
added POST requests and read timeout settings in TSPTimeStampService . java and updated test assertions in TestSignatureInfo . java to enhance request handling and ensure proper validation of signature information
added constructor for ClassLoader and updated createXStream method to accept a ClassLoader reference to enhance security and flexibility in managing XStream security permissions
added a check for parameterized types in the diamond application logic to ensure correct error logging for diamond application errors
[ hotfix ] [ table - planner - blink ] fix typo in reloptutil
updated argument validation conditions in Http2Settings . java for clarity to ensure only valid unsigned values are accepted for valid settings
deleted the file Issue664Test . java to the test file is no longer needed for the test execution
added exception handling for IllegalStateException in SessionsPoolTest to ensure proper management of disposed sessions and avoid potential errors during session operations
make sure webmvc data be save even if there be an error .
simplified the index setting method by directly using the integer value of myTable to improve code clarity and maintainability
added a check for manual unstashing in TaskbarStashController to ensure that unstashing is only attempted when the system is in a valid state
camel route coverage : do not dump xml for non standard route id anymore
modified the ` getEventMismatchMessage ` method to accept a boolean parameter and adjusted its implementation accordingly to improve flexibility in event mismatch handling by allowing the method to wait for the expected events count
added a new file HeaderFixer . java that processes headers from a specified file to facilitate header file processing for better integration with Licence header management
added functionality to send a broadcast intent for the first load completion in the launcher to ensure that the first load action triggers the first load action for better user experience
deleted the Android class and removed the SuperJumperAndroid . java file to eliminate unused code to streamline the project
modify return value of ` isDistributed ` method and improve query validation in ` TestStarQueries ` to ensure correct behavior when the table is distributed and enhance test coverage for query optimization
[ hotfix ] remove unused keyvaluesprovideraware and observationconstructionaware interface
fix item not be remove from the missingitems on url location after a url be process .
updated return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index ` i ` to a long to ensure correct calculations with potential large index values
added caching for format strings and optimized data format retrieval to improve performance by reducing redundant lookups
modified the URL query to include a filter parameter for user identification to ensure that only user names are processed in the response for security purposes
reduce def . needsinput ( ) - > def . finished ( ) for good clarity
added container information and page index to the log statement for better traceability to improve logging clarity by associating container information with workspace contents
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 873 )
remove deadlocktest , that be very fragile and do n ' t like it in logback
do n ' t update the overlay / filter even if it ' s n ' t exist .
add a menu item to open in the browser , to make it easy for user to start from the console
added output specification and validation for single - time outputs in SemanticAnalyzer to ensure correct handling of multi - time outputs and improve error reporting for semantic analysis
updated the addEntryListener method to accept a null predicate parameter to enhance error handling by asserting proper null checks for the addEntryListener method
fix coordinate [ ] reversed ( ) to handle the case of an empty or one element
no actual code change ; the line remains unchanged to maintain consistency in code formatting
added a boolean variable ` first ` to ` TestPayloads . java ` to track the state of the first element in the test environment
replaced overview mode exit logic with showOverviewMode method to simplify the code for better readability and maintainability
set the destination of the message dispatch in the NetworkRouteTest to ensure the message is processed correctly during network routing tests
int - 1818 fix max value for messagehandlerinterceptordefinition ( # 8187 )
fix lint warning and remove unused variable
refactor HttpClientRequestImpl to simplify the addition of pending components to streamline the code for better readability and performance
replaced hardcoded " analysis - " with a dynamic replacement in GetMavenDependenciesTask . java to ensure compatibility with solr - based dependency management
pdfbox - 2576 : use the new api to get cosdictionary / cosstream from the page entry a suggest by michael klink
removed unnecessary debug print statement from ReferenceUtil . java to clean up the code for better readability and performance
add query type to visibilityvisitor ( # 2913 )
added configuration options for enabling JSON - RPC requests and updated the port handling in multiple classes to improve flexibility in HTTP configuration and ensure proper port management
added a type check for ` folder ` before removing it as a drop target to ensure type safety and prevent potential casting errors
refactor StubJarTest to simplify the creation of stub JAR to improve code readability and maintainability by reducing complexity in the generation process
added new features in StartPageTopComponent with detailed messages to enhance user engagement and help clarity on setup wizard functionality
[ cassandra ] fix cassandra startup fail if partition table creation fails
remove unnecessary check for ' available ' in online test case .
change return value from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository to ensure correct user attribute is returned for authentication
updated onIdleTimeout variable handling and callback logic in HttpChannelState . java to improve clarity and functionality of timeout management and ensure proper callback handling
make createendpoint extend invocable . nonblocking to provide non - blocking option
refactor table header separator regex and update matching logic for better accuracy to ensure correct handling of multi - column headers and improve accuracy in table rendering
change default value of camera . isplaying ( ) to 31.5 f
added a preference for starting the bootup in GpsSettingsActivity and updated URL in Utilities to streamline boot up setup and ensure correct URL formatting for GPS location
updated the client secret encoding from 128 - bit to 512 - bit to increase the secret size for better security and security
updated error message in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include " true " for clearer context to provide clearer feedback about the parameters passed to the PostgreSQL procedure
ignore scheduledmethodmetricstest due to race condition
fix the issue that pinotfs be not init when create segmentgenerationandpushtaskexecutor ( # 4758 )
added locale check to TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting based on the locale
added MetalLookAndFeel implementation to set the Look and Feel on the UI to enhance the visual appearance and user experience in the application
added a PreDestroy annotation and improved ping task handling in Bot . java to ensure proper resource cleanup and avoid potential memory leaks during message transmission
[ type : refactor ] remove unnecessary ' getmessage ( ) ' call .
updated method parameter names in ModuleTable and PackageTable classes for consistency to improve code readability and maintainability by using uniform naming conventions
updated exception handling in PinotAdministrator . java by catching CmdLineException and logging the error message to improve error handling and provide clearer logging for command line - related exceptions
refactor equals / hashcode methods to use isEqualTo and throw a deprecated exception for unsupported operations to improve code consistency and signal that the equals / hashCode functionality is outdated and recommend using a holder instead
standardized spacing and formatting in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and maintainability
update minimum and maximum zoom level settings in BasicMapViewer to ensure correct zoom level settings for the map view
added process user management functionality to DrillRoot . java by introducing processUser and processUserGroups variables to enhance user management capabilities by centralizing process user information and group retrieval
8028270 : files . readsymboliclink call accesscontroller directly so security manager ca n ' t grant the permission
added ArgumentExtractor parameter to DelegatedClientAuthenticationAction and updated service resolution method to improve dependency management and simplify service resolution
changed the defaultGroup variable from " default _ group " to " default _ group " to ensure that the variable cannot be modified after initialization
fix # 1489 tilesizechanger destroy the tile cache on destroy
removed redundant calls to InfoLayoutHelper . addInfoRow and streamlined the removal of views in InfoLayoutHelper . java to improve code clarity and eliminate redundancy
refactored the cleanEntriesForFeedsWithoutSubscriptions method to improve clarity and maintainability of the cleanup process to enhance code readability and maintainability by reducing the number of entries processed for feeds without subscriptions
replaced calls to CoreAuthenticationTestUtils . getAuthentication ( ) with direct variable auth in ImmutableAssertionTests . java to improve code readability and reduce dependency on CoreAuthenticationTestUtils
nifi - 3079 : remove the cleanup method from filebasedclusternodetokeyertest to avoid a tangle
bugfix : conic five point be orthogonal even if they be n ' t a matrix ( eg 0 ) .
pdfbox - 4892 : move the check for eof to the end of the file , a suggest by michael doswald
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod . java to suppress unchecked warnings during compilation
refactor image handling in CImage . java to utilize native methods for converting images and copying them to improve code readability and maintainability by consolidating image processing logic
replaced WritableByteArrayComparable with ByteArrayComparable for the binary comparator in MapRDBFilterBuilder . java to utilize ByteArrayComparable for improved data handling efficiency
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity and consistency in naming conventions
replaced manual null checks with ` Objects . equals ` for version comparisons and comparisons to improve code readability and leverage utility methods for null - safe equality checks
fix ( library ) : check for nullability in astdisambiguationpass and improve doc .
added assertions to retrieve specific HTML error and request views in NinjaDefaultTest . java to ensure proper handling of location errors and errors in the Ninja process
renamed method and adjusted width calculations for all apps display to improve clarity and accuracy in handling display options for tablets
adjusted padding and list view position calculations in DetailFragment and ListFragment to improve layout consistency and ensure proper list view positioning
replaced Exception handling with InterruptedException and corrected the Thread . currentThread ( ) . interrupt ( ) for better error handling to ensure proper interruption handling and improve clarity in error reporting
added null checks for field values and improved test cases in HttpFields . java and RequestTest . java to ensure proper handling of null values and validate request headers
bug cs - 15403 : if static nat service be not support on a network , we should ignore it
added multiple calls to ` resetHeaderScrollingState ( false ) ` and set fab visibility to false in ` OCFileListFragment . java ` to ensure the header scrolling state is consistent and consistent after changes
fix issue where extra page hang around ( issue 11634172 )
added a fixedWidth property and modified glyph positioning logic in BitmapFont . java to enable support for fixed widths when calculating glyph sizes
simplified the creation of ChangeLogFragment by removing the showTitle parameter to streamline the fragment creation process and improve code readability
added preEvent , postTransition , and error methods to AbstractStateMachineFactory to enhance event handling capabilities for state transitions and errors
polish ` ` remove a redundant source code ' '
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf usage in StorageBasedMetastoreTestBase and TestStorageBasedMetastoreAuthorizationDrops to improve role management and ensure compatibility with Windows - specific Hadoop environments
solr - 3079 : if the facet . sort = facet . mincount then no need to process min count for more than one facet . sort field , we can break out of loop early
change the cache file property path to use the configuration from the project to ensure the cache file is correctly located relative to the project for better configuration management
added logic to stop Jetty instances and improved error messaging for non - existent jetty instances to enhance test reliability by ensuring all jetty instances are properly stopped and clearer error reporting
added a filename parameter to the newInstance method and adjusted visibility logic for file actions to enhance user experience by allowing customizable file names in actions
update reorder direction validation to use a constant for invalid direction to improve code clarity and maintainability by using a consistent invalid threshold value
updated InnerTransferRequest to replace several private fields with currency , from , and to while updating the path annotations in AccountAPI to standardize the data structure usage and improve clarity in API endpoints
fix job id resolution [ hz - 2025 ] ( # 22288 )
added a new annotation interface EnableAdminClient in the Noear . solon . admin . client . config package to provide a mechanism for enabling administrative client configurations in the Noear Solon framework
refactor visitIdentifier methods to handle identifiers more effectively and improve marker management to enhance code readability and maintainability while ensuring accurate marker information is maintained
set action text color to primary dark for the authenticator activity to improve visibility and aesthetics of the user interface
added ComparableField support to find entities in the Manager and StreamSupplierComponent classes to enhance type safety and enforce strict equality checks in stream suppliers
renamed and refactored test step creation methods in the PickleSteps class to improve clarity and consistency in naming conventions
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` and updated the corresponding test method names to clarify the purpose of the test and improve code readability
added a method to cancel a client in the RpcServer and updated the startDriver method to call it to ensure clients are properly canceled in the RPC server and improve error handling
[ gelly ] add support for implicit construction default value ( # 2529 )
initialize lastDisplayedUser with an empty optional to ensure lastDisplayedUser has a default value to avoid null reference errors
add method for finding all query results in QueryDslMongoRepository and implement corresponding test in AbstractPersonRepositoryIntegrationTests to enhance functionality by allowing multiple QueryDSL order specifications for querying results
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions when stopping consensus implementations
planner - 582 : exit the warm - up loop in case of a failure
camel - redis : add xread and xreadgroup support for stream . fix # 3131
updated ` LinkedBufferInput ` and ` StreamInput ` classes to enhance method signatures and maintain consistency in method usage
added Spring Security customizers and modified the configuration methods in CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to enhance security configuration flexibility and improve code maintainability
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` to validate the functionality of ` TestJdbcWithDBTokenStore ` using MiniHiveKdc to ensure correct authentication handling for the database token store in a more reliable manner
added a method to register a ContentProvider through ShadowContentResolver and updated related classes to handle provider registration to improve the management of content providers within the application context
avro - 1265 . java : accept classfile . version in the same package a the name of the class .
fixed - connection manager keep - alive setting be not apply to the local connection server . # 1815
[ java ] : rename to supplier for sendersendercontrol .
ggb - 298 fix for 3d locus with no point (
added concurrency support and improved error handling in WebSocket message processing to enhance thread safety and ensure proper resource management during asynchronous operations
alexeibarantsev : provide an option to load a screenshot of the underlying selenium server . fix issue 1735 .
use assertj assertion instead of assert equal in shadowintentstest and shadowpackagemanagertest ( # 271 )
remove trufflelanguage . getcontextreference , it be no longer need .
reset mocking progress to null after each proxy instantiation error
modified exception handling in Actor and Group classes to ensure consistent behavior when actors are ascendant and improve error messaging clarity
added location permission handling to the LocationPickerActivity to improve user experience by enabling location - based selection through user prompts
add example of http : / / issues . apache . org / activemq / browse / amq - 2771 - add miss bean definition to jmstq example
nutch - 2788 - fix request cooky when use http protocol
replaced manual rectangle boundary checks with a utility method to improve readability and maintainability of the intersection check
replaced DeemphasisFilter with NonClippingGain and updated audio processing to improve efficiency and reduce sound output
updated ScrollingPanel and SystemInformationsButtonsPanel to include a monitoring URL parameter to enhance functionality by allowing users to browse monitoring URLs when necessary
fix ( kubernetes : service . create - timeout ) remove unused option ( # 4565 )
added handling for different place descriptions in NearbyListFragment . java to set specific icon resources based on the description state
add null check for class with no package ( eg - http : / / search . maven . org / # search | ga | 1 | luaj - jse ) . this be a problem when packaging liquibase in a fat jar .
new file PrintInlining . java created with a main method that prints " Passed " to facilitate debugging by providing a demonstration of the Passed feature
fix : fix wrong index for nested brace in javadoc ( # 3450 )
[ java ] simplify test for bootup failure .
updated the EdgeDataTableModel to useEdgesAndMetaEdges instead ofEdges to ensure that the model uses both edges and meta edges for better data representation
removed unused imports from SpringResourceProperties . java and PasswordManagementConfiguration . java to clean up the code and improve maintainability
fix invalid playback speed log to debug
do n ' t send room remove event when cluster be start
updated the minimize property from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to align the test with the new minimize configuration requirements
added key manipulation methods for flipy and mips generation in TextureHelper to enhance texture rendering capabilities for improved user experience
replaced the use of ProjectBuildFileParser with CloseRecordingProjectBuildFileParserDecorator in multiple files to enhance event tracking capabilities for better build file management
add a pas that simply execute the pass of a library .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory ` to streamline response body conversion handling for improved clarity and maintainability
[ hotfix ] [ core ] remove useless isreed check from memorymanager
added Temporal annotation import and annotation to ConsoleSessionVO class to utilize timestamp handling capabilities in the database
added new files Hbs . java and HbsTest . java to implement handlebar functionality and its tests to enhance the application ' s ability to render handlebar templates in Jooby
add extra hint and remove extra view element for incoming message if message be empty .
fix csv import error when the header name contain ` ` [ ] ' ' ( # 3258 )
try to reproduce the issue with the waituntilalertdialogappears method
hive - 13703 : fix the bug of reducesinkdeduplication . remove unneeded null check ( rajesh balamohan , review by gopal v )
fix for # 618 : do n ' t add class to jar when they be already there
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 673 )
updated OSGi bundle imports from " websocket - server " and " websocket - client " to " jetty - websocket - client " to ensure compatibility with the new Jetty package structure
replaced the return statement to convert the identity attributes map to an unmodifiable map to improve immutability and performance of the returned data structures
make sure the header be visible after save ( fixes # 300 )
8274398 : [ gelly ] do not create new double / float instance in java . base module
updated the timestamp retrieval in JdbcDataSource to use the correct timestamp from the result set to ensure accurate data processing by using the correct timestamp data type
added a check for the " javax . naming . Context " class in the HtmlJndiTreeReport class to ensure proper handling of naming context instances in the application
modify default database options handling in StorageUtils and improve logging format in Manager to enhance code clarity and ensure accurate logging of block information
change edge type check from " double " to " mutual " to ensure correct handling of mutual edges in the GEXF importer
add allow _ slippery _ touches to make statusbartouchcontroller slippery be : 918776ee51
fix array dimension when building truffleconstantfieldprovider
added Google Drive folder path retrieval and setting functionality to improve user experience by allowing customizable Google Drive folder paths
ticket # 4810 : this should implement the shuffling of suggest
added @ Nullable annotation to assertThat methods in Truth . java to improve null safety and clarity of assertions
update bitwise operations for bit manipulation in ArrayUtil . java to improve clarity and correctness of bit manipulation logic
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check if constructors can be instrumented before instrumenting constructors to ensure proper error handling and integration testing for ApiException API operations
hbase - 27446 fix streamin / streamout cleanup and add anti - dns test
added functionality to check if the keyguard is secure in ShadowKeyguardManager . java and updated related tests in ShadowKeyguardManagerTest . java to enhance keyguard functionality testing capabilities and improve test reliability
added serialVersionUID fields to the StringDialog class to ensure consistent serialization and version control for these classes
updated the string splitting method to handle ' > ' characters in the status and added a conditional check for ` overrides ` to improve string handling and ensure proper parsing of override information
fix typo in multiple failure test method name ( # 1162 )
fixed bug in asyncfileimpl that should n ' t call drain after file . close ( ) when close ( ) be call twice .
updated light constants and modified shader paths in HybridLightTest . java to optimize lighting and improve performance with larger shaders
replaced usage of FakeProjectFilesystem with ProjectFilesystem across multiple test files to improve code consistency by using the project filesystem directly
[ junit platform ] use pathwithlines instead of string in feature .
refactor Gson , JsonArray , and JsonObject classes to improve code organization and readability
added @ NotNull annotation to TEST _ DIRS array to indicate potential nullability of the TEST _ DIRS array
added a call to close the real object of ParcelFileDescriptor to ensure proper resource management by closing the ParcelFileDescriptor
added thread - local support for managing prefix indices in ` BasisLibrary ` to improve thread safety and isolate prefix index states across threads
added debug logging capability to TestDistributedStatsComponentCardinality to improve troubleshooting and monitoring of the test execution environment
added calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that immutable lists are handled correctly to maintain data integrity
added @ NotNull annotation to the onApplicationEvent method and modified URI creation in GrpcClientBuilder to enhance null safety and improve URL handling for gRPC connections
remove package private method and replace with lambda ( # 2184 )
invalidate the assumption before rebalancing .
replaced the direct creation of ` outManifestFile ` with a method that writes the manifest file on Windows to ensure compatibility with newline handling in Windows environments
fix priority issue introduce by sourceforge : [ false positive ] graalvm false positive
added @ Nullable annotation to getConfigDescription methods and updated null checks in getConfigDescriptionRegistry and ThingResource classes to enhance code safety by preventing null pointer exceptions when handling configuration descriptions
fix cancellingexception wrap in cancellingexception to be unchecked
pdfbox - 4836 : fix exception if a stream be not find on the page .
modified ManagerBase class implementation to improve code organization and maintainability
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR in FeatureFlags . java to provide a debug option for enabling All Apps from the system taskbar
replaced the manual initialization of FragmentActivity with Robolectric ' s built - in ActivityController to simplify the code and improve test reliability with Robolectric framework
renamed the method from ` getFileCoordinates ` to ` processFileCoordinates ` and added a method ` getDecimalCoords ` in ` FileProcessor . java ` , and updated variable names for clarity to improve method readability and ensure consistent naming conventions for better code understanding
updated class names from ` ABCase1 _ * ` , ` ABCase2 ` , and ` ABCase3 ` to ` TestABCase1 ` and ` TestABCase7 ` across multiple files to standardize class naming conventions and improve code readability
corrected parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for the blackhole address to improve code clarity and prevent potential null pointer exceptions
replaced the original handler instantiation and updated the handler assignment in OpenRocketViewer . java to ensure the handler updates correctly during simulation changes
add a new class ChangeDependencyGroupIdAndArtifactId to manage Maven dependency groupId and artifactId to facilitate the change of Maven dependencies by ensuring groupId and artifactId can be modified together
refactor path handling and add validation for segment paths in IndexingJob . java and SegmentChecker . java to improve code clarity and ensure only valid segment paths are processed
[ gr - 27474 ] fix a typo in the checkobjectheap .
refactor PreprocessorDelegate to use Supplier for improved path replacement and source path management to enhance performance by reducing redundant calculations and improving efficiency
renamed JsonExamples class to Examples for clarity to improve code readability and better reflect the purpose of the class
added debug logging statements to ViewExtractor . java for better traceability to improve traceability of extraction and processing processes for better debugging
for # 401 , apply a consistent copyright notice to the java / tree .
add a new Main class to display the Java OOP entry point to facilitate easy debugging and analysis of the OpenJDK application
fix findbugs and issue report by lgtm . com .
removed duplicate continue statements in NativeScanner . java to improve code clarity and maintainability
changed package and import statements in RendererConfigurationTest . java to better organize code structure for better clarity and maintainability
change queriedDepsBuilder to return a Supplier < ImmutableList < BuildRule > > instead of an ImmutableSet to improve efficiency by reducing unnecessary stream operations
replace stream ( ) . count ( ) with size ( ) for remoteContainsResults to improve efficiency in counting remote results
added content encoding extraction from content stream in ExtractingDocumentLoader to ensure correct extraction of metadata for various content types
cloudstack - 7461 : fix prepared statement error when account name be null
fix an issue with the window click event not be cancel when place at the end of the slot .
add an option to the maven plugin to ignore remote repository associate with transitive dependency .
removed the duplicate annotation for BackgroundJobManager in ContactsPreferenceActivity . java to streamline the code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features and support libraries
fixed potential npe that happen during shutdown of nio transport .
added a condition to break the loop if the matcher start and end are equal to the expected length to improve code readability and prevent unnecessary processing when the index matches the string length
disable port protection due to micrometer bug
added a new user - defined function ( UDFReverse ) and registered it in FunctionRegistry . java to provide a way to retrieve the reverse function in Hive queries
changed context path encoding method to return the current context path in Dispatcher . java and updated request handling in Request . java to ensure correct retrieval of servlet path and improve consistency in context handling
updated Tracer class to improve performance to enhance the efficiency of tracing functionality
[ hotfix ] ignore flaky test in rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java to enhance code readability and maintainability by using wildcard imports
added synchronization and a method to clear data buffer in StarTreeRecordStoreCircularBufferImpl to ensure buffer operations are managed correctly during splits
updated the values of forecastMinutes ,Hours , and forecastDays in OpenWeatherMapOneCallHandler . java to set the default forecast settings for better data management
fixed race condition in test and add timeouts to prevent possibility of infinite loop .
added animation and logging for handling split task IDs in RemoteTargetGluer . java and enhanced the animation logic in FloatingHeaderView . java to improve user experience with better interaction during app transitions and enhance code readability
updated the ` parseRerunFile ` method to return a ` Stream < Integer > ` and modified its return type to ` Stream < Collection < Integer > > ` to improve handling of multiple feature files and ensure proper functionality with unit tests
fix the botania tab so it can now interact with the creative tab . close # 1656
updated assertions in TestRadioButtons . java for consistency to correct variable naming to improve code readability and maintainability
added support for file - sizes option in RCFileCat and a method to retrieve the number of rows in rcFile . java to enhance flexibility in handling file sizes for improved data processing
move jaccardindex . java into core module so it become consistent across version
add null check for mxnet NDArray that be already close ( # 2148 )
refactor BlobServer class to improve code readability to enhance maintainability and reduce complexity
fixed bug 1050126 - unusedprivatemethod : false positive with static { } inside anonymous class
replaced instances of ` lexicalScope ` with ` lexScope ` for consistency to enhance code readability and maintainability by standardizing variable names
int - 1489 add test for sftp auto - startup context .
added methods to retrieve child and item boundables in Node and Quadtree classes and modified several constructors in STRtree and STRtree classes to enhance functionality and flexibility in node handling andstrtree operations
updated version parsing logic to handle the minor version number correctly to ensure accurate extraction of version number components and improve code reliability
added checks for non - empty tags before persisting tags of an item to improve stability by preventing potential errors when tags are not present
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` for parsing Unix strings into milliseconds to enhance the functionality of ` DateTimePatternHandler ` to support customizable date - time parsing
hhh - 17100 fix exception when bind to a stringwrapper user
rename Log4j2ConfiguratorServlet to Log4j2ConfiguratorConfiguration to improve clarity and maintain consistency in naming conventions
replaced the instantiation of HiveException and AuthorizationException with direct return statements to simplify the code by eliminating unnecessary exception handling
refactor the way the " CC " command is formatted in CGoCompileStep . java and add a new test case in GoBinaryIntegrationTest . java to improve command execution consistency and ensure correct handling of prebuilt C++ dependencies
add builder annotation to customresource for the builder a it be not editable
remove override annotation ( java 6 do n ' t support java 7 )
added a timeout constant for three - hour HTTP connections in HttpClientFactory to increase connection timeout settings for better stability and performance
added a pipeline name parameter to the PerBuildStateFactoryWithConfigurableAttributes and updated performance event scope in RawTargetNodeToTargetNodeParsePipeline to enhance traceability by associating pipeline names with performance events for better debugging
change to enable all but verbose mode for client compatiblity
added Singleton annotation to ApplicationController class to ensure a singleton instance of the controller is used throughout the application
refactor username retrieval logic in ShareActivity to handle OwnCloudAccount to improve user experience by obtaining the username from the OwnCloud account if available
added BatchStatus import and a test for resuming a paused job in SimpleJobLauncher to ensure proper job execution handling when navigating away from paused instances
added null check for cacheConfig and streamlined data refresh handling in HttpSyncDataService . java to improve robustness against potential null pointer exceptions and enhance code readability
[ java ] add a new localnode attribute to the grid node , and make dockersession public
refactoring convert to usage : remove isqualifiedname check
pdfbox - 2714 : use the parser / nonsequentialparser for the non - sequential parser when parse an object within a pdf file
fix checkstyle failure in lanczosolvercli . java
modified HttpServerTestBase . java for improved test coverage to enhance reliability and maintainability of HTTP server tests
add miss mock for get ( ) and avoid redundant assertion .
add test for dynamodbignorenulls to check for null value
fixed - spring starter should be apply to spring context ( regression since 3.10 . 1 ) # 3994
fix issue where indicator . todouble ( ) do not correct range of value
add support for additional user parameter to execincontainer ( ) ( # 205 )
no need to tighten this logic , because it ' s already in a boolean condition .
add some test case for the semgrex model . also add some test for the new case .
added a broadcast intent for the CLEAR _ PULL _ UNREAD intent in HomeFragment . java to facilitate the cancellation of the app when the app is terminated
removed conditional checks for GINGERBREAD and simplified the overScroller initialization to streamline code for better readability and maintainability by eliminating unnecessary SDK version checks
allow to clear the default profile validation ( # 4017 )
camel - 16287 : ensure camel context be restart if veto be not start
added FloatingActionButton functionality to manage a main FloatingActionButton to enhance user interaction with a FAB menu based on interaction state
fix up todate tokenizer so it work with both inlinable string and empty string
refactor TestAnonymousClassUnloading . java for improved code clarity to enhance maintainability and readability of the test cases
updated error messages in multiple language resource files for clarity to improve user understanding by using more accurate terminology
add server check state and improve error handling in AuthenticatorActivity to ensure operations service is only bound when the server is checked for further operations
fix : position # getendline not take effect on each line .
added process wait and error handling in CxxPreprocessAndCompileStep and implemented waitFor method in ManagedThread to ensure proper process termination and handle exceptions during process execution
added a new boolean field ` requireAllRepositorySources ` and a test class ` PrincipalAttributeRepositoryFetcherTests ` to manage repository attributes during authentication
add max size limit to map - store eviction [ hz - 1943 ] ( # 21055 )
add support for ssl protocol enablement ( # 6581 )
replaced ` AtomicBoolean ` with ` AtomicReference ` and introduced a wrapper class for managing collections to improve thread safety and clarity in managing atomic boolean states
updated QueryDslMongoRepository to handle null properties in field name retrieval to ensure that a default value is returned when the property expression is absent
updated assertions in RoundRectBorderTest to ensure proper behavior with different round modes to improve test clarity and ensure correct behavior validation
fix # 597 : check for empty cluster and throw an exception if fail to execute the action
remove parallel test , a it be not actually do .
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' array length to ensure correct thread counting and improve error handling during ECRecover
inverted the conditional check for ' windows ' to ensure that the condition is met only when ' windows ' is false
replaced custom collection methods with static empty methods and updated method names for clarity to improve code readability and maintainability by using clearer method names
added null checks and improved WebSocketClientExtensionHandler handling in BitmexStreamingExchange and BitmexStreamingMarketDataService classes to ensure proper handling of potential null pointer exceptions and enhance code clarity
added validation for lat and lon in GeoPointField . java and created corresponding test cases in TestGeoPointField . java to ensure that invalid lat and lon values throw an appropriate exception
refactor workflowfile / workflowfile to reduce duplication .
8185039 : incorrect gpl header cause re script to miss swap to commercial header for licensee source bundle
updated ` getTableDocument ` method to accept a boolean parameter for dependency management to enhance flexibility in managing dependent tables during the table document generation
added a condition to manage the number of concurrent uploads with non - negative coordinates to improve user experience by providing feedback when attempting to upload without any coordinates
add a caching mechanism for retrieving and viewing profile data in ProfileResources . java to improve performance by reducing redundant profile retrieval operations
datajpa - 725 - fix property mapping for nested idclass with id attribute .
phoenix - 5994 index creation fail if one of the sub table and index be add ( addendum )
[ scb - 2335 ] fix unit test that be fail after add new exception mapper class .
fix lose focus when add a new entry to the entry editor ( # 4368 )
modified the parameter of nativeCreateNSWindow to include an owner pointer to enhance the functionality by allowing the retrieval of the owner pointer for better window management
changed SQL table alterations from FILE _ REMOTE _ ID and FILE _ TABLE _ NAME to ALTER TABLE to ensure consistency in database schema naming conventions
added stock to the inventory , and make it easy to use
fixed - rbatch . putall ( ) method do n ' t use codec to store previous value . # 3055
enable generic analysis for type frame modeling ( # 2513 )
added BackProgressAnimator to manage progress animations in LauncherBackAnimationController to improve animation performance during back animations
changed the visibility of the ` _ initialPageNo ` variable and added logic to handle page number calculations to ensure ` _ initialPageNo ` cannot be modified after the initial page no adjustment
fix crc16 ( ) when the key be a whole byte [ ] ( # 290 )
added comment handling functionality to FormattedSqlChangeLogParser and its corresponding unit test to enhance changelog parsing capabilities by allowing comments in SQL scripts
fix # 226 : allow jdk archiver to be set via maven plugin
replace HumanReadableException with BuckUncheckedExecutionException for exception handling to improve error reporting during class usage file loading
fix nullpointerexception when execute multiple aggregation query ( # 243 )
added validation for format and type , implemented reading of pixels using ByteBuffer in GwtGL20 . java to improve compatibility with different WebGL contexts and ensure correct pixel data handling
added a new test method ` testDebugInfo ` and updated method calls in ` PrintR ` and ` VarDump ` to improve testing coverage and ensure correct method invocation for dynamic values
provide good error message when mockito ca n ' t instrument all class
add class initialization trace ( # 1449 )
fix wrong parameter name in brokerrequesthandler constructor ( # 5368 )
add a loading topic route cache ( # 556 )
modified the ` createDataSource ` method to include a ` readOnly ` parameter and set connection preferences to read - only to enable the data source to be created in a read - only manner
updated regex pattern for invalid source and target release formats in FindBuildToolFailures . java to allow users to specify unsupported release versions
updated URI construction and added location intent in DetailFragment . java to ensure correct URI handling and improve location retrieval functionality
nifi - 12041 fix npe in order by getinheritedparametercontexts ( )
8129560 : clarify the spec of classloader : : getclassloadinglock for non - parallel capable loader
added functionality to set the origin response headers in the ProxyRequestHelper class to ensure that the context correctly sets the response headers for HTTP requests
added a new profile setting item in GpsMainActivity to enhance the user interface by providing a functional interface
add a flag to avoid parse the tlds if it be enable in the jsp
simonstewart : fix error message in the filehandler and fix a couple of test that fail in firefox
added maxRows functionality and adjusted fetch size handling in IoTDBStatement . java to allow dynamic row limits based on the maxRows parameter
renamed method ` isCountOptimizable ` to ` allActionsAreOptimizableFilters ` and updated associated logic to improve clarity and maintainability of the code related to optimized filters
added selection enable handling and logging for left click events in the StandardVizEventManager to enhance the visual representation of selected nodes in the graph interface
refactor the buffer handling in ManyToOneRingBuffer by introducing a zeroBuffer method to improve code readability and reduce redundancy in setting memory parameters
add a getter / setter method for xorgroup and use it on the terminalnodememory to access them
remove deprecate methods for retrieving height and width from LCDUIImageMonochromeBitmapSource to enhance code clarity and maintainability by eliminating unnecessary complexity
refactor path resolution logic by introducing a new method ` getPathPrivateImpl ` and modifying path resolution to improve code clarity and encapsulation for better maintainability
fix : fix exception when parse dstu2 attribute in xmlparser ( # 3973 )
updated the method visibility of ` changeSchemeIfIsWebSocketUpgrade ` to static and modified the URI encoding logic to enhance method accessibility and ensure correct URI generation based on the encoded request URL
add ' execution _ config ' into ` testruleconfig ` for llvm test
refactor CxxPlatform retrieval logic in HaskellBinaryDescription . java to improve clarity and maintainability of platform selection logic
added imports for IndexReader , IndexReader , Similarity , and Searchable classes in various Java files to enhance Javadoc documentation capabilities for better usability
modify the return statement in ConcurrentLinkedStack to handle null elements and update test names for clarity to improve error handling and enhance test coverage for concurrent linked states
added methods ` isMatched ` and ` setMatched ` to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes that return false , indicating a matched state should be handled in these test classes
added null check for mDirectories before initializing and iterating over its items to avoid potential NullPointerException when mDirectories is null
added a condition to check if overview state is enabled and first layout is not active to improve gesture handling behavior in the RecentsView
added multiple package - info . java files for various Lucene packages to enhance documentation and clarify package structures
added visibility text for the auto - leveler panel to improve user interface by providing context - sensitive messages
added optimization callback handling to DirectUpdateHandler and DirectUpdateHandler2 classes to ensure proper event processing based on optimization state
update compressor initialization to use a padded length of 1 for better data handling to ensure proper buffer size allocation for compression
added a check for user data in Shaderc . java to ensure user data is properly validated before processing
updated the condition in RetryingMetaStoreClient to include a check for local meta store to ensure retries are validated against the correct meta store configuration
updated import statements and logging conditions in HeliosSoloLogService . java to enhance error handling by checking for connection closed exceptions and improving logging accuracy
update import statements to use OutputUtil instead of LogUtil to improve consistency and clarify the purpose of utility functions
fix use of weak reference to abstractserializationservice . typeMap ( # 23261 )
fix for round error when findsimilarcolor ( ) crash ( patch from bug # 4407 )
chore ( regen ) : regenerate with update license year
alexeibarantsev : add test for android ' s xpath library . fix issue # 50
added a new flags parameter to the registerReceiver method and updated related calls to allow for more flexible handling of receiver registration in the shadow instrumentation
fix flaky test ffmpegtest # testffmpegversion ( # 2866 )
added a ` OggInputStream ` wrapper to manage previous input streams and modified the ` OggInputStream ` constructor to utilize this new state to improve management of previous input streams and ensure proper cleanup of resources
replaced the hardcoded failure message with a static final constant to improve maintainability and readability of the failure message code
modify anomaly handling logic in DetectionMigrationResource . java to ensure warning counts are both zero and zero to improve data integrity during migration
refactor toast handling in BaseActivity and DetailActivity for consistency to improve code readability and maintainability by standardizing toast notifications
updated the method used in the Request creation process to use the delegate ' s method and request template to ensure the correct HTTP method is used for the request creation
added name validation checks and modified LDAP referral handling in LDAPCertStore . java to enhance code robustness by ensuring valid names and proper referral processing logic
refactor code to encapsulate retain logic for RSocket objects into a separate method to improve code readability and maintainability by reducing duplication
renamed AdapterViewTest to ListViewTest and added a test for OnItemClickListener functionality to improve clarity and ensure proper interaction with item click events in the ListView
[ hotfix ] [ test ] remove redundant setup method from checkpointfailuremanageritcase
remove empty class genericuiprovider ( # 4102 )
port r429944 from 5.0 . x to 5.0 . x
added JUnit 5 parallel annotation to MetaInfConfigurationTest to ensure the test is accessible for the FileSystemPool class
added a serverConnector configuration to bind the server address to enable support for dynamic server connection settings
updated token validity settings for client credentials in heart mode to improve compatibility and flexibility in token management based on client credential type
added a new CloverInstrumentationFilter class to check for the candidate class of the enclosing class to ensure that interface audience annotations are excluded from instrumentation for valid class types
added support for the Smartmi Evaporative Humidifier device in MiIoDevices . java and modified the write statement in ReadmeHelper . java to enhance functionality and improve code clarity
fix infinite loop when plausible to break ( fixes # 54 )
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes or packages
ambari - 20744 : warn log if ambari do n ' t have baseurls for install package step before eu / ru ( dili )
invert the logic for checking missing values in IntHashSet to improve clarity and correctness of the presence of missing values
added Serializable interface to RuleAdministratorImpl to enable serialization for the rule administrator instances
improve performance of crossoriginfilter by allow pattern match on the store .
add model for knight ( change in 3d model )
added error handling for invalid solidified positions in Manager . java to improve robustness by logging errors related to solidified positions
hbase - 15410 execresult throw npe if result be null ( addendum )
added a static method ` hasAccess ` to check access permissions in the ` HttpServer ` class to enhance security by verifying access control based on the remote user ' s security
refactor ClassMirror and StubJar classes to enhance the handling of stub class bytes and improve code readability
added internalLinkText TextView to display sharing text based on whether the file is a folder or a regular file to enhance user experience by providing clearer sharing options for files
updated the assertion to use Locale . ENGLISH in PredictionTest . java to ensure consistent locale - specific formatting for accuracy assertions
fix broken test with timezone dependent date comparison .
added keyboard hiding functionality to the AllAppsContainerView and log the event when keyboard closes in the Launcher AllAppsContainerView to improve user experience by ensuring proper keyboard behavior and logging during keyboard interactions
added initial configuration for inmemoryeventstorageengine to test
refactor BsdFileStore to retrieve mount point name directly from BsdNativeDispatcher and update access modifiers for method visibility to improve code clarity and ensure consistent handling of Unix file attributes
add test case for issue # 1599 illegalargumentexception while solve inner class or interface
add miss argument to / spawn command , fix # 207
updated content area height calculations to use a minimum threshold to ensure that content area dimensions are consistently limited to a minimum threshold
fix possible instability between test and graalcompile .
use mock directory to avoid window dependent test failure
added pluginCheckClassNames to pluginCheckRegistry and adjusted the database column addition in UpgradeCatalog280 to ensure plugin checks are properly validated and improve code organization for better readability
fix minor flaw in source code format of environment . java
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with BadApple to address a bug related to Lucene - 7421 in the test case
fix for issue 146 : codename one implementation incorrectly add file system separator .
updated the flags for HDMV DTS stream from FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _ STREAM and modified the conditional check to enable audio streams instead of just ignoring them
replaced specific resource imports with a wildcard import and updated resourceAccessor initialization in LiquibaseEntityResolver . java ; adjusted XMLChangeLogSAXParser . java to improve resource handling and simplify XMLChangeLogSAXParser . java
8052863 : disable tl algorithm for java . security . verification . com ( java . net )
replace the use of ` CxxDeps . EMPTY ` with a more consistent representation of ` CxxDeps . of ( ) ` in the code to improve the clarity and flexibility of dependency management
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualStubDirectory ` , and updated related assertions to improve clarity and consistency in handling stub directory expectations
removed the redundant ` @ DoNotSub ` annotation from the ` resizeThreshold ` field to adhere to Java naming conventions for better code readability
update folder name hint logic to ensure correct display of folder name when it is empty or null
updated the client details retrieval in the UaaResetPasswordServiceTests to include a specific client identifier to ensure the test aligns with the latest client specifications
changed access modifiers of methods from public to private in ShadowSQLiteDatabase . java to enhance encapsulation and restrict method visibility
updated string representation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to distinguish between idle and closed states to ensure accurate representation of volatile values based on the closed state
improve javadoc for mimetypeutil . getmimetype ( ) , to clarify the return value
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to enhance consistency and clarity in method naming conventions
added a test case for handling unnecessary parentheses in instanceof checks to address issue # 3904 and improve type checking accuracy
improve compatibility with teleportation on location class . this fixes # 328
replaced Base64 encoding with Base64Utils for modulus and exponent in TokenKeyEndpoint and tests to enhance security by ensuring URLs are correctly encoded
generator - core : fix # 495 report generation time instead of generate event
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and intent of the annotation ' s purpose
added a null assertion for the getId ( ) method in ObjectIdentityImpl . java to ensure that the result is not null to prevent potential NullPointerExceptions
modified the setUpRevampedTweet method to include muffled parameter and adjusted related logic to improve retweeter handling and ensure muffled users are correctly processed
modify visibility handling for the verified text view based on the settings to enhance user interface consistency by allowing theme customization for the verification text
removed static instance variable and made timeDiffFromServer final to improve encapsulation and ensure shared state between instances
camel - 14263 : camel - mongodb should autowired the mongo connection if available .
apps - 4568 introduce ' lastindex ' to dataaccessmapping to allow finer grain
fix ( hive ) : handle corrupted column stats during alter partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to ensure secure authentication settings are enforced for security purposes
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
escape email in the geoserver home page , fixes # 3874
feat ( reflection ) : move subsystem ' s reflection load from terasologyengine to modulemanagerimpl
[ gr - 22854 ] make feature join modeler test . fail if number of feature differs from 1 .
add miss param . check for empty string ( avoid stringindexoutofboundsexception )
avoid unnecessary string allocation when check if debug log be not enable .
replaced references to ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _ PLAYBACK _ SPEED ` and added a call to ` PlaybackStateCompat . ACTION _ SET _ PLAYBACK _ SPEED ` to ensure compatibility with the new playback state management system
added support for " automatic " separation configuration and updated related classes to enhance the handling of motor activation events and ensure compatibility with new configurations
tika - 2714 -- improve detection of ascii / unicode string length in msownerfileparser and add unit test for this feature
add @ ignore to JdbcFrontJdbcBackLinqMiddleTest for compatibility with JDK 1.8 and above
refactor lock file creation into a separate method to improve code readability and maintainability by encapsulating lock file creation logic
updated notification settings from version _ 5 _ 3 to version _ 5 _ 3 _ 1 and modified related boolean handling to accommodate new sync features and enhance the notification capabilities
added a check for the username to return null if it equals the FEDERATION _ USER to improve authentication handling by preventing unauthorized access to favorite users
[ gr - 51142 ] do not handle truffleobject in executemethodnode . isparametervalue ( ) .
replaced ` Collectors . collect ( Collectors . toList ( ) ) ` with ` . toList ( ) ` for filtering tests in ` JakartaClientShutdownWithServerWebAppTest . java ` to improve code readability and eliminate unnecessary import
- do n ' t crash the server if an invalid file be in the filter chain .
7057785 : add note about optional support of recursive method for self - referential collection / map
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize version - related functionality in the index task class
added logic to handle missing primary keys and adjust index configurations accordingly to improve database compatibility with various backing indexes and ensure proper schema handling
added MetastoreException to the execute method and modified exception handling to improve error handling robustness and provide clearer error messages for invalid partition names
[ flink - 29096 ] [ kafka ] retry committing and recover kafka transaction if already committable
fix # 5890 by remove receipt handle from ' forwardmessagetodlqactivity ' ( # 5289 )
added a service list parameter to DockerComposeContainer and modified the service execution logic to allow dynamic service configuration based on the provided services list
fix ( core ) : copy collection to avoid concurrentmodificationexception
removed HTML cleaning and serialization imports and simplified return statement in FeedParser . java to improve performance and reduce unnecessary dependencies for HTML processing
removed the condition checking for disabling all apps and updated the cell layout retrieval method to simplify the code and ensure correct layout is obtained for custom pages
fix for double precision in the meter realtime body data ( # 4559 )
added a new file ` bug4150029 . java ` implementing a file dialog with file chooser functionality to address bug 4150029 related to directory creation and deletion in a user interface
added a boolean flag to track if Spark configuration was updated and implemented client closing logic to ensure proper resource management and prevent memory leaks when Spark configuration changes
added a long press indicator method to AppIcon and AppIconMenuItem classes and updated Launchable class to use it to improve differentiation between deep and drop target shortcuts in the launcher
[ geot - 7464 ] fix wkbwriter to handle polygon empty ( # 2795 )
refactor UnflavoredBuildTarget creation to use a builder pattern and improve parameter handling to enhance code readability and reduce object allocation overhead
8316679 : c1 : assert ( ! failure ) fail : miss some optimization opportunity in phaseitergvn
updated the navigation indicator behavior in OCFileListFragment . java to ensure the drawer indicator is enabled when the current file is selected
changed package and import statements in TestRAMDirectory . java to align with the correct package structure and improve code clarity
replaced instances of FixedBitSet with BitSet in Automaton and Operations classes to improve performance and simplify code by using a more appropriate data structure
drools - 6258 - dmnevaluatorcompiler should use dmnmessage for error message when the expression be not define for a node .
[ test ] replace @ containerfor ( x ) with @ repeatable ( x ) for java 8 support
update file sending message to include the duration formatted to improve clarity of file duration notifications for better debugging
updated class name handling in OpenMBeanAttributeInfoSupport . java for consistent access checking to ensure proper package access validation by using a safe class name method
allow readresponseresolver to have more than responsecount a specify by quorum
adjust freeSize calculation to account for larger data sizes
do not re - enable touch event when touch end
replaced the instantiation of SslContextFactory with SslContextFactory . Server in multiple files to enhance SSL context configuration for improved server support
replaced the use of PrivilegedSocket class with direct socket creation in PG _ Stream . java to simplify code and improve readability by directly using Socket object
refactor InputTest class to improve test coverage to enhance reliability and maintainability of the code
added pauseBlurs functionality and updated finishRecentsAnimation method to accept a Runnable parameter to enhance control over task completion behavior during transitions
fix # 3059 nullpointerexception when curlatLng be null
updated the client retrieval methods in ` ClientAdminEndpoints ` to use ` clientDetailsService . retrieve ( clientId ) ` to ensure the correct client ID is used for secret removal
replaced XML configuration loading with a separate method for better readability to improve test accuracy by ensuring consistent formatting of SQL queries
avoid use of wildcard to be block thread ( # 1735 )
add unit tests for the SlidingGanttCategoryDataset class to ensure correct handling of unknown keys and verify functionality throughout the test
refactor filterConditions to use Optional for null safety to improve code safety by avoiding potential NullPointerExceptions
* lightcontrol be now aware of whether a light can be cast to use it .
added @ SuppressWarnings annotations and simplified stack trace handling in StdErrLog . java to improve code clarity and maintainability by explicitly indicating the visibility of stack traces
added context handling and improved null checks in HttpSessionEventPublisher to ensure the context is validated before publishing events and enhance error logging
[ java ] remove check for the violation of the create statement syntax in astvisitor
[ flink - 25955 ] [ datastream api ] add comment about delete temporary file in flinkiotdbsink
added a counter for custom simplification handling in the Canonicalizer phases to track and verify the lifecycle of custom simplification nodes effectively
updated the method call to include the context parameter for setting the fileIcon drawable to ensure the method uses the correct context for drawable selection
updated the method call to use the schema name in readIdentifierWithSchema and modified the test cases to include " dropIndex " to ensure consistency in schema handling and improve test script functionality
fix : fix bigqueryio . read with time field ( # 3045 )
implemented behavior of ` findViewWithTag ` in ` ShadowView ` and ` ShadowViewGroup ` classes , and added corresponding tests in ` ViewTest ` to enhance view tag handling functionality and ensure proper testing of view tags
updated for loops to specify generic type for enumeration types to improve type safety and avoid unchecked conversion warnings
removed unused import of PColumnFamily in IndexTool and updated imports in MetaDataClient to streamline code and improve clarity in dependencies
added JSON _ VALUE and JSON _ CREATOR constants , modified enum value retrieval logic , and updated method calls to improve handling of enum values and enhance clarity in annotation processing
[ gr - 34299 ] fix resourcefeature for jar file .
added CUDA _ R _ 16F , CUDA _ R _ 32F , and CUDA _ R _ 32I constants to CUDA . java and modified CUDA _ R _ 8F constant assignment to improve CUDA specification and documentation clarity
updated ResourceLoader class to include FileFilter and restructured the initialization of the ResourceLoader to enhance resource loading flexibility by allowing multiple layout directories to be loaded
fix redstone torch getattachedface method for simpleattachablematerialdata ( # 612 )
[ calcite - 4562 ] jdbc adapter generates arraylist with varbinary type , produce appropriate error message
removed unused import of DateHelper from NoteAdapter . java to streamline dependencies and improve code clarity
updated backup message conditions and introduced backup load feedback in the Backup . java file to enhance user experience by providing clearer feedback on backup operations and errors
mow - 855 move the euclidian simple panel ' s position to the center of the euclidian browser
delete temporary file before delete it in shadowparcelfiledescriptor . delete ( )
sec - 1488 : properly use securitycontextholder . addfirst ( ) for gc .
fix build by use controversial rather than optimization
[ fix ] integerequalsnode canonicalization should check both x ^ y and y ^ y for canonicalization .
added a static final Type constant STRING _ ARRAY to facilitate the retrieval of string arrays in the TypeFactory class
refactor keyboard hiding logic and improve logging for AllApps interactions to enhance readability and maintainability of the keyboard event logging
force bit to prevent modded chunk ( # 4494 )
enhanced assertion messages in TimelineMetricCacheSizingTest for clarity and improved cache handling in TimelineMetricCacheTest to enhance readability of assertions and ensure proper cleanup of the cache
minecraftforge / fml : add an optimization to calculate the maximum texture size . close # 1635
[ java ] ensure that stoplogrecording ( ) be always called on close .
reset the startPosn variable if inTransform to zero to ensure accurate processing of transformations during the analysis process
add queryoptions . skipstartree ( ) ; replace it with querycontext . isstartree ( )
added a lockNearbyView flag and modified progress bar handling based on its value to improve visibility management of nearby places and ensure progress bar only shows when a nearby view is refreshed
add a factory method for maptransformer to allow compilation with maptransformer
updated EmeddedObjects and EmbeddedObjects classes to improve functionality and maintain consistency across the codebase
added a new method to retrieve loading launcher widget span information and updated the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to utilize this new method to improve widget management and enhance code readability by centralizing widget span management
updated the ` StageSelector ` and ` StageAction ` classes to implement ` StateChangeListener ` instead of ` ChangeListener ` to enhance event handling capabilities for better state management
added ShadowBinder functionality to manage and reset calling processes to enable testing of process UID functionality in a controlled environment
replaced AutoValue with Guava ' s Objects for message handling to improve code clarity and reduce dependencies on the AutoValue library
bitcoinserializer : remove mislead warning message when deserializing fails
make sure old element be not resize if they be n ' t change , a suggest by michael klink
added handling for new escape characters in Markdown rendering and updated buffer appending logic to improve markdown formatting capabilities and ensure proper escape handling
added a button to warn the user and refactored password sharing logic to improve clarity and maintainability of the password management functionality
refactor the method calls to use a static inner class for file channel methods to improve code organization and maintainability by centralizing the retrieval of file channel methods
removed public access modifier from methods and classes in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to improve encapsulation by using package - private for test methods
added options for slider AM keytab directory and keytab installation in LlapOptionsProcessor . java to enhance configuration options for slider functionality in the application
updated the tearOutGraphViewContainer method to accept a JFrame parameter and improved animation handling to enable the animation of the graph view within the ExtractionModelFrame
added bind completion runnable handling and assertion checks to the LauncherModel class to ensure shortcuts are executed only once and improve resource management during loading
updated NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to remove the ' isFinished ' boolean and adjusted related isBlocked methods to simplify its state management and improve code readability
added messageType parameter to the add methods and introduced a setCheckValid method in ValidationReport . java to enhance the interface by providing additional context for validation and reporting
added a method to safely retrieve the provider name of the Cipher to improve error handling and provide clearer output for potential exceptions
updated references from ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to ensure consistency and accuracy in configuration naming for flinks
changed log level from WARNING to OFF in CCJSqlParserUtil . java to improve logging granularity for better debugging
remove debug code that print out non - critical info .
make defaultmapscalebar bitmap _ height and bitmap _ width public to allow for easy modification
removed the @ Ignore annotation from the CovariantOverrideTest class to enable the test that implements it covariant override functionality
refactor the curly method to use Qtype for better clarity and maintainability to enhance code readability and streamline Qtype creation logic
add reloadstrategysupport . loadroutesdefinition ( ) to allow to load route definition from a specified node .
added space minimum and maximum settings to the X - axis of the ScatterChart to improve visual spacing for better data visibility and readability
fix bug in stringbuilder which cause the interval expression to be incorrectly mark a interVAL
added a method to control data state preservation during the reapply process in multiple classes to ensure the data state is maintained during the reapply process for better user experience
added a check for the presence of " UTF8 " in the ENCODINGS _ FILE property to ensure that the UTF8 key is present and provide a meaningful exception message for potential issues
modified print statements in TestReproduceMessage and updated annotations in LuceneTestCase to improve output clarity and ensure consistent test execution with seed decoration
added logging for long - press events on AllApps items to enhance user interaction tracking within the launcher
added a null check for the log variable in StoreWAL . java and created a new test class Issue112Test . java to ensure no modifications occur when the log variable is not initialized
fix issue with ' show sector ' always disappear on modded sector ( # 840 )
updated type casting and method signatures to use generics for ` CompositeType ` to enhance type safety and eliminate unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future feature additions
improve error reporting if nearby random selection return null
refactor : remove the cache thread from temporarycache to reduce cpu usage
fix for npe ( exclude the wms and sql view ) during import / import
initialize Availability _ availability with UNAVAILABLE to ensure availability state is correctly managed before use
added a condition to check if the peer ' s sync finish before processing PBFT commit messages to ensure proper handling of sync operations and improve logging for Pbft commit data
fix : migrate retry setting to grpc _ service _ config ( # 4473 )
replaced the boolean flag ` _ freeSpaceReclaimDisabled ` with ` _ freeSpaceReclaimQ ` and modified the method signature for ` freeSpaceReclaimQ ` to enable flexible handling of space reclaim operations in the DBMaker class
changed the visibility of KDC options from public to private static in KDCOptions . java and added a new class KdcDefaultOptions . java for testing to enhance encapsulation and improve code organization for managing KDC options
fixed json writer leak ( issue 206 )
[ fix ] update profile page for new user ( # 5040 )
change the method name from ` paintBackground ` to ` paintComponentBackground ` in the Slider class to clarify the method ' s purpose to handle background painting components
added a method to retrieve and set object value from class constants in Configuration . java to ensure that object value constants can be accessed as valid and accessed as default values
added logging to KafkaService initialization failure to improve error handling and debugging by logging exceptions during service initialization
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use an ImmutableSet instead of a Set to allow for more flexible resource management in the application
http : / / issues . apache . org / jira / browse / amq - 4328 - enabling the ' auto - createchannel ' option for the message bus now indicate that the ' channel ' option can be only provide for the outputchannel
added keyword support to HTMLDocument and implemented a corresponding test case to enhance indexing functionality to allow users to search results based on their keywords
updated the condition in the FileUploader class to check for R instead of S to ensure compatibility with newer Android versions and maintain intended functionality
added conditional logic to initialize _ addresses only if it is empty to improve code control flow by ensuring only one address is added to it
replaced instantiation of CorrespondenceSubclassToFactoryCall with its own class reference to improve clarity and maintainability of the test code
modified the Builder class implementation to enhance the functionality and maintainability of the builder instantiation
improve error handling in isbnto bibtex fetcher ( # 4429 )
[ gr - 24678 ] fix leave context on polyglot exception if context . engine be not active .
added null check for text before firing data change events and maintaining the cursor position to prevent potential null pointer exceptions and ensure proper cursor position handling
fill in some blank , such a by reuse code from the dvparser project
trim whitespace from URL handling in SuffixURLFilter . java to improve consistency and readability of the URL generation process
added a condition to check if the player is in Godmode before proceeding to prevent processing of invocations when the player is in Godmode
ggb - 2751 fix popup not be deregistered in checkbox creation dialog .
refactor LinkedHashMapCache constructor parameters to remove unnecessary parameters to simplify code and improve readability by using default parameters directly
removed redundant method calls on the channel object to streamline code for better readability and maintainability
added a null check for keyIndex and updated KeyIndexBuilder instantiation to improve input validation and simplify key index builder usage
added Locale . ROOT import and modified exception handling in DirectUpdateHandler2 . java to ensure the error message is correctly formatted for better usability
fix # 918 move guard creation to writenode so that the canonicalizationphase can be use together with the canonicalizationphase
add check for reachable block around exception dispatch block ( graal - 490 ) .
do n ' t fix variance of cloud bug when all bug be in the same boost
replaced BuildTarget . copyOf with direct assignment for BuildTarget and added JsonIgnore annotation to simplify code and improve readability by removing unnecessary parameters
refactor SqlRunner class methods for improved readability to enhance maintainability and reduce technical debt
changed the type of ` date _ taken ` from ` String ` to ` long ` and updated the ` getInstantUploadFilePath ` method to accept a long parameter to improve precision in handling timestamps and ensure the correct data type is used for file uploads
rename ` knownApis ` to ` knownSdks ` and update related methods to improve clarity and consistency in handling known SDK collections
fix : display spinner counter when create the offer
updated user agent check from " Cling / " to " UMS / " in multiple files to align with the new server requirements for UMS
fix blockindex issue when iterate through an iterator . close # 3921
of - 2751 : show message in crowdfunding chat if available
changed the encoding method from memEncodeUTF16 to memEncodeASCII in LinuxLibrary . java and MacOSXLibraryDL . java to ensure proper encoding of names without encoding issues
add an additional layer to conj to eliminate some conflict with a certain expression
removed the canvas parameter from the insert method and added drawing logic for duplicate padding to streamline image handling and enhance rendering flexibility by allowing dynamic padding
add a default implementation of the apply method in recipetest and remove the getVisitors method in addgradleenterprisemavenproject
added methods to retrieve child elements by name and recursive in the Xml class to enhance XML element manipulation capabilities
added " Content - Charset " header for POST requests in HttpSolrServer and tests in BasicHttpSolrServerTest to ensure proper handling of character encoding in HTTP requests
refactor SystemUiController flags and update related UI state references to use a new Retention annotation to improve code maintainability and flexibility in UI state management
removed the private ClientConfigurationService field from IntrospectingTokenService . java to simplify the service design by eliminating unnecessary dependencies
improve exception message if hive split can not be open
removed the ownerId field from the NodeEntry class to streamline the code by eliminating unnecessary fields
updated the configuration key from BackupSnapshotAferTakingSnapshot to BackupSnapshotAfterTakingSnapshot in the configuration and modified the retrieval of the backup value to ensure the correct configuration is used related to snapshot retention settings
added score calculation to the merge method in TextFragment . java to ensure the merge operation maintains accurate score adjustments
remove never use digester in md4passwordencoder , until we can use ber
added validation to ensure maximumUnimprovedStepCount is non - negative to prevent potential errors due to invalid property values
added a check for empty currently open editors before proceeding with editor state management to avoid unnecessary processing when no supported editors are open
added overloaded verification methods to BDDMockito and corresponding test cases in BDDMockitoTest to improve mocking capabilities and ensure correct behavior with verification scenarios
[ java ] use pathscanner . class . getclassloader ( ) to get correct classloader in pathscanner . openclassloader ( )
[ ci ] move sayHi2 ( ) method to clientintf and use completablefuture instead of string
fix logging in abstractsplitrainprotectiontest ( # 25580 )
added null checks and customization for logout page generation in the DefaultLoginPageConfigurer and ServerHttpSecurity classes to ensure stability and prevent potential null pointer exceptions during logout operations
[ giac ] fix for polynomial [ ( 1 , 1 ) , ( 2 , 2 ) ] when available
added logging functionality to DockerComposeContainer and created a new test class for it to improve logging capabilities and ensure proper testing of Docker interactions
fix checkstyle / fix violation in standardjavatypemappingtest . java
removed unused import statements for IOException and FileUtils in AmbariMetaInfoTest . java to improve code clarity by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to create a custom ` ThrowingSupplier < T , E > ` from a ` Supplier < T > ` to enhance the utility of the supplier for improved error handling
replace ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure the method returns a boolean value instead of a break statement
camel - 17815 : camel - platform - http - support should use body a body to post a text message .
added platform separator handling for file paths in MorePaths . java to ensure compatibility with different operating systems when generating paths
added null check for authorizationContext ' s parameters before processing to avoid potential NullPointerExceptions when params are null
replaced the load method call with a new exception handling method called throwExceptionIfFail to improve error handling by providing a clearer exception message when loading fails
update sdk version from " 811349 " to " 4514284 " and add test cases for stopped text to enhance functionality and ensure accurate testing of the speak method
added hashcode base on thread sync with store
make sql without profile optional ( # 2196 )
added a try - finally block around the write method call to ensure data is properly cleared after use to prevent potential memory leaks and ensure proper cleanup of resources after use
fix compiler compiler warning in modloadingstage .
updated the date formatting variable from ` date ` to ` calendar ` in ` DateUtils . java ` and modified the corresponding test assertion in ` FontParsersTest . java ` to ensure the correct date format is used for accurate date representation
updated the ` loadValue ` method to use the superclass method for retrieving thread information to improve accuracy and efficiency in accessing thread information
added transaction log handling in UpdateLog and adjusted sleep duration in LeaderTragicEventTest to improve transaction management and increase test timing for better accuracy
attempt to fix the build ( break on window )
fix npe in segmentgeneratorconfig , when try to create an empty directory
added a method to calculate normal vectors in ObjUtils and updated TriangulationHelper to use this new method to improve code clarity and reduce redundancy in vector calculations
updated JdbcAuditService to include identity zone filtering in audit event queries to enhance data retrieval accuracy based on identity zones
modified the SpanCollector class to improve span collection functionality to enhance performance and accuracy of span collection
added a null check for SESSION _ MANAGER ' s getCurrSession ( ) in AuthorizationFilter . java to ensure robustness by avoiding potential NullPointerExceptions
refactor TransactionIsolationLevel class to improve code organization to enhance maintainability and readability of transaction isolation logic
renamed method and variable from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java ` to improve clarity and consistency in naming conventions
added thread name setting for the current thread in TestSession . java to improve clarity of thread identification during debugging
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
removed the creation of an ArrayList of ComponentKey and directly returned it to simplify the code by returning an empty list directly instead of generating a new one
add a new class OverviewToAllAppsTouchController to the list to enable navigation to the All Apps view in the Recents UI
updated methods for retrieving hotseat scale and translation in LauncherState and WorkspaceStateTransitionAnimation to enhance functionality by allowing dynamic adjustment of hotseat scale
added a check for JUnitRule in the DefaultStackTraceCleaner to exclude specific JUnit rules from stack trace filtering to enhance stack trace filtering functionality to exclude specific JUnit rules from stack traces
[ java ] remove internal reference to sun . nio . ch from mappedresizingablebuffer
added a private balanceListener variable and updated the balance listener management to improve code clarity and ensure proper management of the balance listener
updated color conversion logic in RealisticRenderer to handle different edge modes to ensure correct color assignment based on the edge mode for better visual clarity
added null check for httpClientResponse in HttpClientBeanPostProcessor and updated logging statements in LogFactory to improve code robustness and maintain consistent logging style across the application
fix gl200 message re - parsing ( fix # 231 )
updated playback timing logic in FullDetailsActivity to include a timeout check to improve the reliability of item refresh timing for better user experience
ish spanish xml parsing : well handling of elliptic token without sentence
fix country code to look for the iso after install
modify ReactiveLoadBalancerClientFilter to conditionally override the service scheme based on the secure status of the retrieved instance to ensure the correct scheme is used for secure instances in the response
fix the issue that defaultmessagestore do n ' t use the bytebuffer for the batchdispatchrequest correctly
remove final keyword from method and return type of fullFilePathFromClassName to allow method to be overridden by subclasses
refactor correlation implementation in ShadowBackupManagerTest to use a lambda expression instead of an anonymous class to improve code readability and conciseness
updated references from US Locale to EN EN Locale in multiple files to ensure consistency in terminology and improve clarity in the representation of locale compatibility
hbase - 26553 remove useless condition in localtransactionsigner ( # 3840 )
add a client - side tessellator so you can override the terrain texture .
txcachdb : fix tryacquire ( ) to exit from wait loop
replaced XML package imports with JDK ' s internal package imports in BoundMethodHandle . java and InvokerBytecodeGenerator . java to improve compatibility and maintainability by using the jdk . internal package
refactor FastDictionary class implementation to improve performance and maintainability of the code
of - 2428 : when close an nioconnection , make sure that it set the session status _ closed before close the connection .
updated FlightEvent instances and modified tolerance values in FlightEventsTest . java to enhance accuracy and responsiveness of flight event tests
[ beam - 8454 ] validate beam module for codegen / vendored grpc dependency
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
[ # 7258 ] instructor : edit result page : show name and session information when student edit ( # 7248 )
added short rules to the DefaultPasswordValidator and adjusted the rules list accordingly to ensure that only valid short passwords are accepted in long passwords
simonstewart : speed up the test run and increase the timeout
fix ( test ) : disable failing test
updated the format for scaling in the DLNAMediaInfo class to improve clarity and consistency in formatting
remove support for speculativectmovementphase in preparation for move phase .
added additional checks to ensure the authentication manager is not overridden multiple times in the application context to enhance security by preventing exceptions related to multiple authentication managers
updated conditions for handling forwarded addresses and servers in ForwardedRequestCustomizer . java to improve handling of forwarded addresses and ensure correct server context
added a line to clear the StringBuilder at the end of the buffer to ensure no unwanted characters are processed during input processing
change private to protect to allow for extension in osgi .
updated OpenIDE - Module - Specification version numbers in various files to ensure compatibility with OpenIDE versions 1.8 and 1.8 . 0
hbase - 8373 [ hbase ] set tl handshake size back to 1024 * 1024 * 1024 * 1024 * 1024
Updated multiple Java files to reflect changes in package names to Ensure consistency and accessibility of classes across the project
add some more test to ensure that tokenizer work with small string
update saml2 auth protocol binding setting and add a validation test .
added AttachedSurfaceControl import and modified SurfaceControl transaction handling in DepthController . java to ensure proper application of drawn surface control when it changes
( chore ) camel - Asciidoctor : use 2.5 . x version for version check
hbase - 21977 table be not create due to security vulnerability ( # 3219 )
updated the sublist calculation for unSeqMergeList in TsFileManagement . java and modified measurementSchemas in MergeTaskTest . java to ensure correct sublist range and improve consistency in measurement data handling
camel - 2306 : added support for convert from fileinputstream to a fileinputstream
added login functionality to DefaultShardManager and modified login behavior in ShardManager to enable conditional login behavior based on the login flag
fix the error of user data deletion when a function be remove
updated the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to reflect the correct terminology for the registered services
fix infinite loop on connection failure .
added userstudent check to the condition to allow for modification of the giver response .
added linked profile management functionality in BMPImageReader and related tests to enhance security checks for profile accessibility and ensure proper handling of linked profiles
updated the calculation of coordinates in setSimpleCuboid method calls to correct the calculation of the ROAD _ HEIGHT value for accurate cuboid handling
fixed bug in pmd - pmd - cpd run in background thread because the action bar be still on the lock
refactor grid presenter setup to use a dedicated method for setting grid sizes to improve code readability and maintainability by consolidating grid size settings
changed multiple return values from false to true in ContributionsListFragment . java to ensure that the methods consistently return true for improved functionality
fix nullpointerexception when plan . getlimit ( ) be null
pdfbox - 2852 : add test for acrobat checkbox group property .
added a method to retrieve the last modified timestamp of a file to enable checking file modification times for better resource management
updated the file format check to include a condition for metaTable to ensure proper handling of metadata tables in iceberg storage
fix # 242 - allow to select a default currency instead of default
change exception handling from IOException to Throwable in WriteFlusher . java to allow broader error handling for broader input / output exceptions
fix issue with recent task item range reveal by single task view .
added a new public String field named activeKeyId in UaaConfiguration . java to facilitate the management of active keys in the UAA configuration
[ ci ] cleanup todos in email action
on behalf of johannes @ brodwall . com : fix issue 1099 with concurrent access to the isactive variable .
remove deprecate orderby expression context . isdesc ( ) ( # 8594 )
added cast to charsequence to fix compile error
added a check for the ownCloud app name in the DisplayUtils class to ensure that the application name is recognized as valid in the displayed logic
hbase - 2588 master should create hbase . rootdir . perms if not specify ( # 2588 )
fix # 930 - check for httpservletresponse . getlocale ( ) - > httpservletoutputstream . getlocale ( )
8196609 : improve javadoc for java . time . instant . getepochsecond
updated state format handling to return a String instead of int and added null checks for the state format to ensure consistent format retrieval and improve robustness of state format management
removed the ` type ` variable from the logging statement in ` CentralAuthenticationServiceImpl . java ` and adjusted the condition in ` AbstractTicket . java ` to simplify the logging statement and ensure correct type checking for tickets
ignore illegalargumentexception ' nullpointerexception ' for pccbased
( chore ) camel - tooling - model : fix checkstyle violation in abstractfileresourceset
pas pathtranslator to expressionevaluator , default to parent basedir .
[ beam - 9365 ] add a new proto coder registry ( # 9373 )
modified HqlQueryRenderer to use a boolean parameter for parsing token and added a new test for query signing numeric literals to enhance parsing functionality and ensure correct behavior with signed numeric literals
updated the generateLaunchLugFromRASAeroRailGuide method to include a parent length parameter and adjusted the launch Lug attributes accordingly to enhance the functionality by allowing customization of launch Lug instances and their lengths
updated the getNonceFactory method to return a null value instead of returning null to ensure a consistent nonce factory implementation
( chore ) camel - mail : adjust log message to use placeholder
[ java ] update integration test to be more precise with window .
changed the initialization of loaded classes from true to false in FastClasspathScanner . java to disable loading classes during the scanning process
added focus to the search field in FullTextSearchPanel to ensure the search field receives keyboard focus when necessary
refactor SSL parameter handling in TlsConnectionLogging by creating a separate NioParams variable to improve code readability and maintainability by clarifying the object initialization
removed the assertion from the result set of the ` assertEquals ` statement to simplify the test by eliminating unnecessary assertions
updated assertion message format in TestSolrConfigHandler . java to provide clearer context for expected configuration failures
replaced HttpMethod and related mock objects with ServerHttpRequest and ServerWebExchange mocks in the CsrfWebFilterTests to enhance test reliability by using the appropriate reactive types for server requests
updated the pattern for identifying drawable density in FilterResourcesStep . java to ensure accurate matching of drawable types based on density settings
refactor button UI ID handling by introducing a ` elementPrefix ` method to streamline UI ID updates to improve readability and ensure correct handling of component types
removed unnecessary condition checking for display metrics in RecentsAnimationDeviceState . java to simplify logic for display rotation validation
8139833 : [ backout ] generational zgc : test use of wrong array length when copy integer [ ]
added import for LuceneTestCase and annotated the ReplicationFactorTest class as awaitsFix to indicate that the test is known to be failing and is associated with a specific bug fix
fixed - rscheduledexecutorservice . scheduleatfixed ( ) method may return null if nextstarttime be null . # 1869
removed null check for client credentials in the ` needsToUpdateCredentials ` assignment to simplify the logic for determining if the credential needs to be updated
refactor file scanner handling in Compactor . java to ensure proper resource management by closing all store file scanner if null
fix possible npe in netmetrics # getregisteredaddrat ( # 11306 )
added a nonce parameter and assertion to verify its value in TokenMvcMockTests to ensure that the nonce is correctly retrieved and validated for token claims
refactor various editor classes for improved consistency and clarity to enhance maintainability and readability of the codebase
set the width and height of formLayeredPane using width and height settings to ensure the form layered pane adheres to specified dimensions and fixes layout issues
removed unnecessary imports and added a maxY method to calculate the maximum height of the owner to improve layout handling and ensure proper height calculation based on the owner ' s height
change return type of openDatabase ( ) methods from void to boolean and modify close ( ) to handle database connections more accurately to improve feedback on database status and ensure proper resource management
replaced static final string for Docker command with a platform - specific constant to improve code maintainability and clarity by using a more descriptive constant reference
added null check for input file in ` initializeParameters ( ) ` method and adjusted exception handling to improve robustness by preventing potential NullPointerExceptions during file reading
updated drawLeaveBehind methods to accept a color parameter for better theming to enhance flexibility by allowing customizable colors for drawing leave - behind elements
disable canary support for android studio ( # 6782 )
bug 10614 : fix for listidentity api - do n ' t fail if the table name be null
removed module persist enable and disable functionality from StartArgs . java to streamline module persistence settings and improve code clarity
updated the argument validation logic in GeminiMarketDataService . java to ensure correct handling of cases with insufficient parameters
changed the type of the " questions " key from HashSet to LinkedHashSet in VerifyPasswordResetRequestAction . java to maintain the order of keys when storing questions in the flow scope
add a simple unit test to validate the fix for bz 64682
fix tablenotfoundexception issue with authcheckfilter
improve scheduler to run runnables in a consistent order when schedule
updated the method signature of ` runCommand ` to accept variable arguments instead of a single string array to improve flexibility in argument handling for command execution
updated XMLParser to handle end - of - stream conditions for reading characters to ensure robust parsing of XML files by returning END _ TAG when the read operation fails
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address and prevent overflow issues when handling text elements
added pivot offsets for mArrow based on arrow width and height to ensure proper positioning of the arrow based on icon visibility
improve code readability : do not print interrupted exception into system . out
update the handling of task thumbnail updates and introduce a refreshView parameter to improve the responsiveness and maintainability of the gesture handling logic
pdfbox - 2576 : reference correct package , a suggest by michael klink
do not fail on invalid hostname and send informative error message
fix : remove superfluous ' this ' reference from operationlistener .
updated SizeBasedDocIdIterator to use a consistent maximum document ID calculation to improve clarity and maintainability by standardizing the maximum document ID management
refactor ` promptToOpenFile ` methods to accept an existing file name parameter in the ` promptToOpenFile ` method to enhance the file dialog functionality by allowing users to prompt for an existing file when selecting files
updated widget sleep delay and refactored page count update logic in AppsCustomizePagedView . java to optimize widget performance and improve code readability
refactor FlightConfiguration to use InstanceMap for transforming components instead of individual components to improve efficiency and maintainability of the flight configuration process
fix the test for camel - spring - micromemter - history
fix the test failure cause by date formatting when use the default locale .
[ ds - 3842 ] validate visibility of metadata in objectconverter
add a test method to validate the handling of missing dimensions and metrics in StarTreeConfig to ensure proper error handling when missing dimensions are set to null
camel - 14299 : camel - spring - dsl - add option to configure recipient list to use ( # 8257 )
refactor inline layout handling in InlineLayoutBox and HoverListener to manage styles more consistently to improve code clarity and maintainability by consolidating painting logic and conditional checks
refactor AuthenticatorActivity to replace detection of authentication methods with a new OperationsService implementation to enhance authentication process and improve code maintainability
