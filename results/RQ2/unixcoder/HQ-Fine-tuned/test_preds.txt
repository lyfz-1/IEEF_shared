updated SocketAppender initialization to set remote host and port to ensure proper configuration of socket connection parameters
refactor BasicAuthPlugin to streamline header handling and improve code clarity to enhance maintainability and readability of the code
corrected a typo in the msgLength retrieval method to ensure accurate retrieval of the message length
cloudstack - 8470 : do n ' t set cpu / ram overcommit ratio if not specify
added flags functionality to the ShadowPaint class to enable customizable paint flags
updated the title of the MassSetFieldsDialog to use localization for field management to improve internationalization support for field management functionality
added error handling for no bugs reported in DetectorsTest to improve user feedback when Eclipse was not used to compile the project
fix realm . getnonce ( ) to be case - insensitive
added a RemoteInputListener interface and implemented connection handling methods to enhance flexibility in managing remote input connections
corrected spacing in OrcEncodedDataReader . java to improve code readability and maintain consistent formatting
[ homeconnect ] filter thing only when the thing be enabled
added null check before removing and adding policies in AuthorizeAdminServlet to prevent potential NullPointerException when bs is null
updated assertions in ` DefaultTypeAdaptersTest ` and ` ObjectTest ` to use ` matches ` instead of ` isEqualTo ` to enhance
added JSON serialization for DAG information in TezTask . java to enhance debugging capabilities for DAG information during execution
updated time calculation in ComputedSummary . java and added getHeapTime method in HprofHeap . java to improve heap time tracking to ensure accurate time
updated ContributionsActivity to use CommonsApplication for getting upload count and removed the RxJava2Tasks class to streamline code and
do n ' t lock non - multi - threaded mvstore
[ issue # 6662 ] fix messagestore message size limit ( # 6663 )
updated folder opening logic in Launcher . java to check if the folder is open before marking it as open to ensure that the application does not crash when
added a new test for sorting PGProperty properties in PGPropertyTest . java to ensure that PGProperty names are sorted in ascending order to ensure that the
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN with a description of the list of points that this student
changed the parameter type of ` supportsDrop ` method from ` Object ` to ` ItemInfo ` and updated related logic to enhance flexibility in handling
updated error message assertion in RequestBuilderTest to include the exception message to enhance clarity of error messages for better debugging
refactor NearbyActivity to use NearbyListFragment instead of NearbyMapFragment to improve clarity and maintainability of
[ hotfix ] fix typo in flatprofilecontainerfree
added a new configuration option " sendZeroAnomalyEmail " to EmailConfiguration to control the email sending behavior for zero anomalies
[ hotfix ] [ kafka ] fix checkstyle violation in kafkaconsumerbase
added methods to retrieve user and geofences from the database to enhance data access capabilities for users and geofences
added constructor to allow customizable response length
refactor memberBroadcastsReceived method to use a byte array instead of ChannelData array to improve performance and clarity of message processing
[ iotdb - 6570 ] fix multileaderserverimpl . sendsnapshotfragment hang ( # 6570 )
updated assertions in LoginSAMLAuthenticationFailureHandlerTest to remove the " % 21 " character from the error description
[ hotfix ] fix checkstyle violation in configmdprovidertest
updated the parameter name from ' note ' to ' noteToUpdate ' in the updateNoteReminder method to enhance code clarity and maintain consistency
added a new ` AcceptAllFilter ` class and updated ` WindowsDirectoryStream ` to utilize this filter to enhance directory filtering capabilities in
refactor JdbcTestDataSet class to improve code readability and maintainability
added a try - catch block to handle ClassNotFoundException in the lookupType method of HotSpotResolvedObjectTypeImpl to improve error handling and provide clearer
added validation for Docker image tags in GenericContainer . java and created corresponding unit tests in DockerImageNameTest . java to ensure that Docker image tags
updated error message in LoginActivity to include wrong credentials to enhance user experience by providing clearer feedback on authentication failures
added auto - focus setting functionality to various form classes to enhance user experience by ensuring consistent auto - focus across various form types
added a test for SAML properties in the SamlIDPRefreshMockMvcTests class to ensure correct handling of SAML properties in the identity zone
added checks for empty and non - digit lists in ComparableVersion . java and introduced a new test for Mng7644 in Comparable
updated method names from ` topLeftMode ` to ` topRightMode ` and modified return values in ` Sheet . java ` and ` UIManager . java
updated package imports from ` org . robolectric . android . ParallelUniverse ` to ` org . robolectric . android . internal `
replaced direct calls to ` LOOKUP . findConstructor ` with a call to ` FACTORY _ CALL ` in ` LocalCacheFactory ` and
update fill pattern from SOLID _ FILL to SOLID _ FOREGROUND to ensure consistent styling across different cell styles
added functionality to draw self loops in the ProcessingPreview class to enhance the visual presentation of self loops in the graph
rename ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` to ` ALLOW _ TVM _ SOLID
rename method from ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
added translation adjustment for the drag handle indicator in AllAppsTransitionController to improve user experience during app transitions
added logging statements for collection , community , and item views in CollectionViewer , CommunityViewer , ItemViewer , and ItemViewer classes to enhance visibility
updated the description of the ' hive . optimize . ppd ' configuration in HiveConf . java to clarify that ' hive . optimize . p
added an assumption to check if the build server is not compatible with OS X to ensure that the build server correctly identifies issues with the build server
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser to enhance dependency management and diagnostics
fix issue with async job not be execute in a transaction
refactor Transaction class to improve code readability and maintainability
added @ ExcludeFromRuleKey annotation to GenruleBuildable . java to exclude Genrule execution relevant to artifact caching
simonstewart : make the firefox custom profile launcher work on non - windows platform
added a check for the existence of a key in the colFamToDynamicColumnsMapping map before creating a new ArrayList to ensure that the map is
[ hotfix ] fix checkstyle violation in hadooptupleunwrappingiterator
added a condition to include derived columns and indexes from views in the table when the client version is below MIN _ SPLITTABLE _ SYSTEM _ CATALOG
update student ' s google id only when need
updated import statement for TestCellReference from org . apache . poi . xssf . util . TestCellReference to org . apache
enspiston now check for block hardness , not tile .
added a new file LongPointerPressTest3049 . java to implement a basic long pointer press test with various UI components
truffle : do not report inlining when direct call node resolve to a constant
no effective change - code cleanup - remove redundant null check
modified ListBlockParser to simplify indentation checks and added a new test for deeply - indented lists in SpecialInputTest to enhance code readability and
added an abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it for additional assertions to enhance error handling
added JUnit Ignore annotation to WebfluxNotIncludedTests to temporarily disable tests related to issue # 1070
[ wasm ] [ test ] remove unused jsinterop annotation .
removed redundant closing brace in RouteStartupOrderLastTest . java to improve code readability and maintainability
added a condition to check if the video format is a video format before processing web subs to ensure that web subs are only processed for video formats
added security properties for disabling TLS in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing attacks
server : do n ' t allow local vms to be manage by user
updated logging statements in Driver . java and QueryResultsCache . java to improve clarity and formatting of cache entry information to enhance readability and maintain
refactor AddManagedDependency and ManageDependencies to include an option to skip updating the dependency model after managing dependencies to enhance clarity and
added a test for sending an intent with a specific request code in ShadowActivityTest . java and implemented a send method in ShadowActivity . java
refactor RocketFigure3d to use a custom GraphicsConfiguration for overlay graphics to enhance rendering flexibility and control over graphics scaling
refactor ` HydrawiseAccountHandler ` to use synchronized list for managing ` controllerListeners ` and enhance synchronization in ` HydrawiseController
added a JUnit BeforeClass method to TestCoreAdminApis to ensure compatibility with Java 9 and disable tests that are not ready for execution
updated year retrieval method to use YEAR _ OF _ ERA instead of getYear ( ) for BC dates and added LOCAL _ TIME _ FORMATTER
fix potential nullpointerexception in connect ( )
corrected a typo in the variable name from " cur . ws _ table " to " cur _ ws _ commit _ id " to ensure consistency
replaced ByteChunk with ByteBuffer for improved memory management to enhance performance and reduce memory usage
added a new method ` toSync ` to ` AsyncUtils ` for converting a ` CompletableFuture < T > ` to ` T ` synchronously to enhance
added ActionGraphBuilder to GroovyConfiguredCompilerFactory , ConfiguredCompilerFactory , and KotlinConfiguredCompilerFactory to enhance action graph
added a test for uploading with hidden file inputs in UploadTest . java to ensure that the upload functionality works correctly with hidden files in the application
removed duplicate try - catch blocks in SQLManager . java to improve code readability and maintainability
added a check to return the local Maven directory if the file does not exist to ensure the application can determine the local Maven directory
apps - 2082 hide algebra label for hidden prefix
refactor : fix npe in ctelement # getmetadata ( ) ( # 2298 )
updated buffer flag setting from setFlags to addFlag in DefaultTrackOutput . java to ensure proper handling of buffer decoding only
added a check for non - sorted entities in the reordering logic to ensure correct ordering of entities in the iteration process
corrected a typo in the error message for missing method calls in Reporter . java to improve clarity and accuracy of error reporting
added null check for backupFolder before logging expiration to prevent potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` with a main method and a test method for creating a void array to facilitate testing
added @ AddToRuleKey annotation to the ToolType variable in ClangCompiler and GccCompiler classes to enhance rule key management for better rule tracking
added a constant for PINCODE _ TIMEOUT in PinCheck . java to improve code readability and maintainability
added ` isSampled ( ) ` method to ` PrometheusMeterRegistryTest ` and ` PrometheusExemplarsSample ` classes to ensure
removed the ` @ Ignore ( " requires mongodb server " ) ` annotation from multiple test classes to streamline tests by eliminating unnecessary dependencies
( chore ) camel - jms : fix unit test
updated condition to check if the table is not an artifical table to ensure accurate validation of table names to prevent errors
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer ` and ` LaunchMapper
added null and empty checks for session attributes in MongoSessionManager to improve robustness by preventing potential NullPointerExceptions during session attribute updates
replaced setFixedSize ( ) method with setSizeFromLayout ( ) in CameraSurfaceView . java to improve layout handling for surface holder
refactor stop timeout handling in AbstractConnector to use a CountDownLatch for better clarity to enhance code readability and prevent potential NullPointerExceptions
corrected spacing in the method signature of HuobiStreamingService . java to improve code readability and maintain consistency
camel - 14263 : camel - core - optimize message history to reduce cpu usage
refactor error handling in DelayedMonoPublisherTest to use a lambda expression for subscription subscription to improve code readability and maintainability
replaced assertTrue with a conditional failure assertion for WebSocketHandshakeException to improve clarity of error handling in WebSocket tests
added a custom OnLayoutChangeListener implementation to the AllAppsTransitionController class
refactor authentication handling in PolicyBasedAuthenticationManager to use a consistent naming convention to improve code readability and maintainability
int - 1975 add default - output - channel property to xpath router parser
updated cacheSeconds from an integer to a String and added DurationCapable annotation in MessageBundleProperties and CasCoreWebConfiguration to enhance cache settings
updated OpenAPI version strings from " 3.0 . 0 - rc1 " to " 3.0 . 0 " in multiple Java files
removed the append method call from ByteBufferPool . java to simplify the code by eliminating unnecessary complexity
added a check for the presence of " alt - rt . jar " in the boot class path to prevent test failures due to alternative jar detection
updated SQL delete queries to use upper and lower case variables for user names to ensure consistency and accuracy in user identification across different database contexts
replaced ` Arrays . asList ` with a list of options for flight recording options in ` FlightRecorderProfiler . java ` to enhance flexibility
added a method to check if the stream is empty and updated the image drop happened logic accordingly
added a condition to check for content availability in HttpParser and implemented a new test for chunked PUT in ProxyServletTest to ensure that the buffer
refactor AtmosEndpoint class to improve code readability and maintainability
updated conditional checks in Java2TypeScriptAdapter to include " printf " and " println " methods to enhance functionality to support additional output formats
added a new file TestCapacityUntilGCWrapAround . java and implemented a native method to increment metaspace capacity until garbage collection to ensure accurate capacity
updated package - info . java files to improve documentation clarity
added a condition to adjust the end time based on whether the resource is stamped at start to ensure accurate time tracking for resilience
added unit test base on user forum issue
tmi - jpeg : fix issue with invalid icc _ profile .
fix terra pick not cause reequip animation
removed configuration and environment binding from JoobyModule and SpringModule to
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5894
bug 56689 - nameupdater : add support for additional nameupdater . properties file
added a started state to the EllipsoidRegionSelector to track if the ellipsoid selection process has been successful to ensure that the ellipsoid selection process is
updated URLs in JavaSEPort . java to use " https " protocol instead of " http " to enhance security by using a secure protocol
[ geos - 10568 ] add sortby parameter to getfeature request
changed null check for grantor assignment to avoid potential NullPointerException
added GraphicsConfiguration and Transparency imports and modified image rendering logic in DiagramGenerationTest . java to ensure compatibility with different screen configurations for graphics operations
add a null check for sidedDelegate in FmlCommonHandler . java to ensure proper error handling when attempting to obtain the minecraft logger
refactor DataUtilities and ReTypeFeatureReader classes to improve code clarity and maintainability
make locktest more resilient against race condition
added a method to tokenize a string by adding a whole word tokenization feature to enhance string processing flexibility for users
send 404 error instead of 404 status
added command index handling and updated highlighting logic in SystemHighlighter . java to improve command processing accuracy and enhance highlighting functionality
updated version and version date in Constants . java from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and
updated buffer position calculation in StarTreeRecordStoreCircularBufferImpl . java to use dimensionSize instead of idx to ensure correct handling of dimension size in buffer
added support for drag - and - drop functionality in the system UI to enhance user experience by allowing drag - and - drop functionality to be
added a test for socket traffic class in SecureSocketAppenderSocketOptionsTest and SocketAppenderSocketOptionsTest to ensure compatibility with Java version 1.7 and
added PSK - AES256 - GCM - SHA384 + TLSv1.2 cipher suite to TestCipher . java to enhance security by
update description method to use getLongDescription ( ) instead of getDescription ( ) . getText ( ) to ensure accurate representation of place descriptions
added JsonProperty annotation to ScimGroupMember class to enhance JSON serialization support for group members
updated HqlQueryRenderer to include additional parsing for reserved words and added tests for schema scoping to enhance query parsing functionality and ensure
[ hotfix ] fix checkstyle violation in subscriptionhelper
refactor Parser class to improve code readability and maintainability
updated the ` offsetStreamIndex ` method to include an additional parameter for adjusting the index based on whether it starts at the first stream to enhance
updated magic detection logic in MagicDetector . java and added additional assertions in TestMimeTypes . java to ensure correct mime type handling and improve test coverage
[ hotfix ] [ table - planner ] remove unused method in flinksqloperatortable
added equals and hashCode methods to OneTimeTokenAccount and OneTimeToken classes to enhance object comparison and hashing functionality for better data integrity
added a condition to check if the assistant is not launched before executing fling in AssistantTouchConsumer . java to ensure that fling is only
added a new file ` SolarisShortDSA . java ` that generates and verifies a DSA signature on a specified key pair to address a known issue
added a call to toggleSearchLabel with a default value of false to enhance search functionality by disabling search label
cloudstack - 4892 : do n ' t lock volume when create a snapshot
refactor ServiceConnection initialization into a separate class to improve code readability and maintainability by separating concerns
refactor HttpClientTLSTest to use AtomicReference for request failure handling to improve thread safety and clarity in error reporting
added an equals method to the ConjunctionScorer class to ensure proper equality comparison between scorers
added null check for variable ' v ' in bindItems method to prevent potential NullPointerException when colliding items
wait for all raft group to become available before add a new member to the cluster . ( # 14388 )
increased cache size limit from 97.97 to 90.97 and added a warning log for cache shrinking to 90.97 milliseconds to enhance
updated API endpoint paths from " / api / v2 " to " / api / v3 " and modified JSON property order in CryptoFac
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if the collection is empty to provide
added null checks for page data in AsyncPageReader and implemented a new test for empty dictionary pages in TestDrillParquetReader to ensure
modified the ` buildChannelName ` method to accept an additional parameter for market data type validation to enhance flexibility in handling different market data
add a config option to disable the animation when an item be charge .
[ java ] do n ' t swallow timeout exception in cluster restart test .
enhanced exception handling to log error messages instead of ignoring them to improve error reporting for better debugging
replace filesystem . ensuredirexists ( ) with assumetrue ( ) for question dirs
removed duplicate calls to StyleInjector . inject in ResourcesInjectorFull . java to streamline code by eliminating redundancy
changed ` changeLogFile ` and ` outputFile ` from ` String ` to ` FileResource ` in ` BaseLiquibaseTask ` and `
update blockworldvector equality check to use gety ( ) and getz ( ) instead of getx ( ) and gety ( )
removed unnecessary whitespace in LongConcurrentLRUMap . java to improve code readability and maintainability
camel - 14263 : camel - core - optimize to use regex instead of string concatenation
updated KRB5CCNAME environment variable handling and modified cache retrieval logic to improve cache retrieval accuracy and enhance error handling for invalid credentials
updated the database path in ValidateMultiSignContractTest from " PrecompiledContracts _ test " to " ValidateMultiSignContract _ test " to correct the
move hassufficientpeers ( ) method out of interface to allow override
danielwagnerhall : do n ' t attach the session log handler to the current thread
added a condition to prevent expanding " AreEqual [ [ Segment [ X , Y ] , Segment [ Z , W ] ] " format expressions in
added a condition to clear pending rendering operations if the current implementation is not optimized to optimize rendering performance
hazelcasttestsupport : do n ' t sleep indefinitely if deadline hit
delay write behind write - behind write - behind write - behind write - behind write - behind write - behind write - behind write - behind write
added a null icon to the JLabel in GroupTreeCellRenderer to improve visual clarity by removing unnecessary space
disable strict mode by default
added IO . close ( serverSocket ) method and updated ShutdownMonitorTest to reflect this change to ensure proper resource management and enhance test coverage
updated memory move size calculation and refactored chunk writing logic in RandomAccessStore . java to optimize memory allocation based on auto - compact fill rate to
refactor field handling in Json . java to improve clarity and structure to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] move componentclosingutil thread into coordination operator
server : cleanup snapshot on vm fail to transition to error state
fix npe in case of empty ipv6 range
updated variable names from ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` and ` InitializeUserDetails
updated the retry duration for getting the leader ZooKeeper state in CollectionsAPIDistributedZkTest from 15 seconds to 30 seconds to provide more time for
updated error handling methods in AbstractParam , BooleanParam , IntParam , LongParam , UUIDParam , and UUIDParam to use Exception instead of
updated image positioning in URLImage . java to correct the positioning of images for better rendering accuracy
updated field comparison from ` getFieldNames ( ) . size ( ) ` to ` getFieldNames ( ) . size ( ) ` in ` SolrTestCaseJ
mondrian : fix arrayindexoutofboundsexception in setfunctiondef for zero - cardinality .
[ hotfix ] fix checkstyle violation in streamconfig
refactor Preprocess . java to streamline tag processing and improve clarity to enhance readability and maintainability of the code
reformatted the read method in MessagePack . java to improve code readability and maintainability
added a new annotation interface ` Mapper ` to the ` org . apache . ibatis . annotations ` package to provide a flexible mapping between
jsonparser : do n ' t encode empty extension list
updated string splitting and improved null checks in LibraryManager . java to enhance code readability and prevent potential NullPointerExceptions
added alias " node _ popup _ scripting " to the entry navigator in ScriptingMenuEntryVisitor . java to enhance clarity and organization of
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants and introduced alpha animator logic in RecentsView
camel - jms : fix potential classcastexception
removed unnecessary ` throws IOException ` declarations from multiple method signatures to improve code readability and maintainability
deleted the ` AbstractDelegatedVerb ` and ` FailureContext ` classes to remove unused code to streamline the project
changed ` __ content ` and ` __ contentETagGzip ` to be ` static final ` and added a new ` MicroServlet ` for handling
replaced direct calls to ` consumerCapacity . getAndAdd ( n ) ` with ` BackpressureUtils . getAndAddRequest ( consumerCapacity , n ) `
added logging functionality to manage component stability in SpeedmentImpl . java to improve debugging and monitoring of component stability issues
( scott phillips ) add dspace - config to load oai configuration .
refactor StoreScanner and TestWideScanner to improve row handling and incrementing versions to enhance clarity and maintainability of the code by
( chore ) camel - test - infra - nagios : disable jmx by default
replaced hardcoded package separator with a constant CANONICAL _ PACKAGE _ SEPARATOR to improve maintainability and readability of the code
added methods to find and print YARN and Hadoop binary paths in HiveConf and RemoteSparkJobMonitor to enhance application information for better
added support for additional database names in DbConnectionManager to enhance compatibility with MariaDB connections
[ hotfix ] fix checkstyle violation in master / splitlogmanager
added a new test class ExecuteAndReturnStringTest for network error handling to ensure proper error messaging when a network error occurs during execution
added a new file ` InvokespecialInterface . java ` implementing an interface with an invokedynamic method to demonstrate the invocation of a method
refactor EvictingBoundedList class to improve performance and maintainability
disable turn cost traversal for edge base directory traversal
added a check for backgroundDisabled and ensured selection is non - negative to prevent illegal argument exceptions during selection validation
added a null check for the MD header in RpcServer . java to ensure that unsupported operations are handled correctly to prevent potential runtime exceptions
updated hotseatCellSize calculation to use device profile border spacing to improve layout responsiveness for different screen sizes
updated string construction for partition index in ExpressionTree to improve clarity and functionality to enhance readability and maintainability of the code
added versioning support to taskdecorator and taskdefinition to ensure compatibility with v4.1
updated directory retrieval from getIndexDir ( ) to getNewIndexDir ( ) to ensure the correct directory is used for replication
changed the default value of the equal variable from false to true and modified the equality check logic to ensure that the equality check accurately reflects the
added handling for high Unicode codepoints in UnicodeToLatexFormatter to ensure proper formatting of high Unicode characters
added null and empty checks for dc values in OAIDCCrosswalk and Item classes to ensure valid input values and prevent potential NullPointerExceptions
danielwagnerhall : fixing a bug in the webdriverbackedselenium that cause a nullpointerexception
added a button to clear all tables and updated related logic in BookmarksPanel and DataBrowser to enhance user experience by allowing users to clear
updated OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for constructing the request URI to improve URL handling for HTTP and HTTPS schemes
updated date assertions and error messages in SoftAssertionsTest . java for improved clarity and consistency to enhance readability and maintainability of
updated adaptOrders method to include an additional parameter for the order direction to enhance flexibility in order adaptation
added null check for tree . vartype and created a new Java11Var class with a test method to enhance type handling and demonstrate variable
simonstewart : remove unused import
updated Configuration initialization to use a default value of false to ensure that Hadoop conf properties are not overridden
replaced the call to ` super . drawChildren ( ) ` with a call to ` super . draw ( ) ` in ` WidgetGroup . java `
added unit test base on user forum issue
refactor file initialization to use the context ' s getCatalinaBase ( ) method instead of System . getProperty ( Globals . Catalina
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` to ensure correct handling of JMM
update plotsquared to use new style
added ZuulProperties to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance configuration management for Zuul integration to improve flex
tika - 3059 -- add test for timezone change
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to utilize ` getBuildTime ( ) `
updated the calculation of xDist in PagedView . java to use the absolute value of mScroller ' s final x difference to improve accuracy in determining
deleted the GUIRWTester . java file to remove unused test code that is no longer needed
removed null check for the format parameter in the countPlaceholders method to simplify the method signature for better readability and maintainability
[ hotfix ] fix checkstyle violation in teststream
rename thymeleaf . templateparser to thymeleaf . templateparser . markup for consistency
added a new test method ` testXPathString ` in ` XPathTest . java ` to verify the evaluation of string XPath expressions to ensure correct handling of
[ hotfix ] fix checkstyle violation in futureutils
add warn when invokedynamic expression not resolve during call graph construction
updated email addresses from " myfakeemail @ gmail . com " to " myrealemail @ example . com " in ContextTest . java to
updated the HTTP encoding response handling in HttpConnectionTest . java and modified URIUtil . java to return false in URIUtil . java to ensure correct URI
added a ` getColumnDataType ` method to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a default implementation for
refactor AsyncClientInterface , SyncClientInterface , JsonServiceClientConfiguration , AwsClient , and V2TestDynamoDbBaseClient to throw UnsupportedOperationException instead
refactor HSSFPictureData class to improve performance and maintainability
changed the type of ` startTime ` from ` long ` to ` Instant ` and updated time calculation to use ` Duration ` instead of ` long ` to
added versioning functionality to LibMediaInfoParser to ensure compatibility with newer MediaInfo library versions
added methods to reflect and create a Proxy for IdeaDependency in ProjectReader . java to enhance dependency injection flexibility for IdeaDependency
added a new class SerialHeap and updated the heap mapping from GenCollectedHeap to SerialHeapName to facilitate the use of the SerialHeap class
added multiple @ SuppressWarnings annotations to Gson $ Types . java to suppress serialization warnings for serial data types
updated MouseWheelEvent to accept a Vector2i parameter for mouse position instead of Mouse . getPosition ( ) to enhance flexibility in
datamongo - 1608 - fix nullpointerexception when search by firstname case insensitively .
[ hotfix ] fix checkstyle violation in maptypeinfo
added a method to retrieve an identity provider by issuer in XOAuthProviderConfigurator to enhance error handling for duplicate identity providers
pdfbox - 4892 : fix nasty cmap parser with poor whitespace
refactor ContactsBackupJob to use a new OperationsService connection for managing operations to improve code modularity and facilitate connection management
refactor type constraints in Attr . java and add a new class T6938454a . java with type inference functionality to enhance type
added a method to check if the account configuration is hidden to enhance account management functionality
added a check to ensure the number of displays matches the expected number of supported bounds to improve debugging and error handling for inconsistent displays
updated schema removal method to use getSchemaKey ( ) instead of getSchemaName ( ) to ensure consistency in schema key retrieval
mow - 162 : add passive login listener to loginoperationw .
added a new Box2DTest class and updated GDXTester to include Box2DTest to enhance testing capabilities for Box2D
add more debug information to cassandra ' s bypartioner by default
increase default buffer request timeout to 5 minute
chore : update gapic - generator - java version to 0.0 . 5 ( # 419 )
added help button to OpenOfficePanel to improve user experience by providing a clearer help message
enable tcp _ nodelay by default
removed generic type declarations from ` keepAliveUserDataStream ` and ` closeUserDataStream ` methods in ` BinanceAuthenticated ` and ` BinanceTradeService
added a transient class reference variable and refactored class loading logic in ScanResultObject . java to improve code clarity and ensure class reference
refactor connection handling in DecodeServlet to use try - with - resources for InputStream and OutputStream to improve resource management and prevent potential memory leaks
added a method to convert null handling to NullHandling based on the order type to enhance null handling flexibility in query processing
added null check for the actor in ParallelAction and SequenceAction classes to ensure robustness by preventing potential NullPointerExceptions during action execution
test ( refactor ) : fix flaky cttypetest . issubtypeof ( object , object )
added synchronization to the SFWriter close operations to ensure thread safety during concurrent access to SFWriters
added a new file ` Issue888 _ JavaI . java ` implementing both ` JJ ` and ` KotlinI ` interfaces to establish a
added functionality to revoke existing agent certificates in CertificateManager to enhance security by allowing users to revoke existing certificates
added a check for responses with no body codes in AbstractHttpTest . java and implemented a corresponding test in HttpServerTestBase . java to ensure
added null checks for script text and language in ScriptTransformer . java to ensure scripts are only used in Java 6 or above to prevent runtime errors
added support for Hikaricp connection pooling configuration in multiple classes to enhance compatibility with Hikaricp database connections
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to ensure consistency in
added filtering and unlocking functionality for locked files in FileMenuFilter and OCFileListFragment to enhance user experience by controlling file lock management
refactor Version class to improve code readability and maintainability
clear endpoint cache after keyspace update
added a new method ` waitForState ( Thread . State state ) ` and modified the visibility of ` semaphore ` in ` ThreadExecutionSynchronizer ` to
updated SkylarkRuleContext to use SkylarkRuleContextAttr instead of ImmutableMap for attribute values to improve consistency and clarity in attribute handling
refactor LocalStorage and SessionStorage interfaces to extend Storage instead of using Set to enhance flexibility in managing storage implementations
fix nullpointerexception when create a view that do n ' t exist
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to provide more specific error handling for unhandled exceptions
updated SpellCheckComponent to retrieve the query string from the request object if it is null to ensure a default value is used when the query string is null
added checks for illegal characters and whitespace in headers to ensure proper handling of headers with invalid values
refactor HybridLayout to use arrayBaseOffset instead of instanceSize for better clarity and encapsulation to improve code readability and maintainability
[ apex ] fix bug in apex comment container
hhh - 16625 avoid eager loading of fetchmode . join in fetchoptionshelper
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter to
added assertions to verify database and table names in TestCompactionTxnHandler and TxnHandler to ensure correct functionality of compaction operations
added unit test base on user forum issue
added a check to ensure the block is not processed before adding it to the traces list to prevent duplicate entries in the list
updated ProviderManager to use CollectionUtils for null checks and added tests for handling null elements in ProviderManager to improve robustness and ensure proper handling of null
removed exception handling for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to simplify database version checks to ensure compatibility with PostgreSQL 9.0
added LOCAL _ INDEX _ LIMIT handling and updated related test cases in LocalIndexIT , BaseScannerRegionObserver , ExplainTable , and Test
added a check for incompatible collection types in AlterTableStatement . java to ensure that incompatible collections do not cause an InvalidRequestException
modified cursor positioning logic in VDUBuffer . java and vt320 . java to correctly adjust cursor positioning to ensure correct cursor positioning based on
removed the USE _ RETRIES constant from HttpShardHandlerFactory to streamline the configuration by eliminating unused constants
updated version number formatting in JavaVersion . java to ensure compatibility with Java version 11.0 . 7.0.4 and above
[ hotfix ] fix checkstyle violation in streamtask
( chore ) camel - core - test - infra - messaging : fix flaky test
[ hotfix ] fix npe in remotecluster
refactor IOException handling in FileSystemBlobStrategy . java to improve clarity and error handling for file operations
updated error messages in multiple classes to improve clarity and consistency in error reporting
added a TxConfidenceListener to manage transaction confidence updates to streamline the process of updating and updating transaction confidence settings
bugfix # 26921 , add support for g1 permgen
removed unused imports and simplified the distance calculation logic in NearbyController . java to improve code clarity and reduce unnecessary dependencies
pdfbox - 4892 : make clonefornewdocument public , a suggest by valerybokov
added checks for home activity type in BaseSwipeUpHandlerV2 . java to ensure proper handling of tasks that are not of home activity type
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related variable names for clarity to improve code readability and
modified ` shouldGiveNetworkCountryIso ` and ` shouldGetSimIsoWhenSetUsingSlotNumber ` methods to be case - insensitive and handle null values
removed the setUnfreezeAmount method call from UnfreezeBalanceV2Actuator to streamline the code by eliminating unnecessary functionality
fix typo in xlsx description
simonstewart : use apache common io to copy model to the firefox driver
updated assertion classes for consistency and clarity to enhance maintainability and readability of the assertion framework
refactor Observable class to improve performance and maintainability
replaced the use of a BasicDBObject with a multi - field operation for pushAll in the Update class to enhance data manipulation capabilities
added null check for randomUUID before setting it in mockChangeLog to prevent potential null pointer exceptions
added hover event handling in InputConsumer and OverviewInputConsumer classes to enhance user interaction with hover events during interaction
added a sleep delay of 10 seconds before checking the availability of the " bootstrap _ conf " configuration to ensure proper handling of ZooKeeper server availability to
camel - 14263 : camel - netty - http should use consumer instead of header size .
ambari - 21142 . ambari hbasetestingclusterautostarter should fail if ambari . hbase . client .
updated file creation logic in SourceSnippetHelper to use the absolute path for the template file to ensure the correct file path is used for template resolution
make test more resilient to invalidation failure
updated query command from " customer _ count " to " all _ tables " and added a new test method for query over output in SchemaCrawlerTextCommands
added currency metadata adaptation for Kraken assets in KrakenAdapters to enhance currency metadata for Kraken trading functionality
added a ` toString ( ) ` method to ` AnyOf ` class and a corresponding test class ` AnyOf _ toString _ Test ` to enhance
updated email grouper logic to use dimensions instead of entry keys to improve clarity and maintainability of email group assignment
[ influxdb ] do n ' t publish metric if they be n ' t set
updated method names from ` doTransform ` to ` downcast ` across multiple classes to improve clarity and consistency in naming conventions
filter out non - unique local address ( 127.0 . 0.0 / 127 )
added a method to quote column names in DataTextFormatter to ensure that column names are properly quoted to prevent SQL injection vulnerabilities
added methods to set and retrieve system properties in WrapSystem , StrUtils , and CompileMethodEntity classes to enhance property management and improve code
added a constructor to the UpdateRequest class that accepts a URL string to initialize the UpdateRequest instance with a specific HTTP method to enhance flexibility by
changed enumSerialization from static to instance to allow multiple instances of EnumSerialization to improve flexibility
added a warning for the experimental response format in DataImportHandler , ReplicationHandler , and removed the addExperimentalFormatWarning method from RequestHandlerUtils to
updated module logging to format module names more accurately to improve readability and maintainability of log messages
update row height calculation to use UITools ' s default label font
do n ' t call notifybrokerinactive when there be no active brokers
fix potential npe in cqlinputformat
simplified the condition for checking the JUnit4 class name to enhance code readability and maintainability
[ drools - 740 ] add equal ( ) and hashcode ( ) method to ruleterminalnodeleptonictokenode
added import for StageIDsRearranger and included it in TezCompiler . java to enhance stage range resolution based on configuration
use net messagingservice instead of concurrent one
refactor memory consumption logic in LotsOfOutput . java to improve clarity and formatting to enhance readability of memory consumption messages
added imports for ` org . apache . lucene . document . Document ` and ` org . apache . lucene . search .
updated LdapAutoConfiguration and LdapProperties to use boolean for anonymous read - only instead of anonymous read - only to enhance flexibility in manag
refactor DatabaseMetaData class to improve code readability and maintainability
changed the visibility of the EchoInputDoFn class from public to private to restrict access to the EchoInputDoFn class to enhance encaps
added a ` finishMocking ` method to ` MockitoSession ` and updated ` DefaultMockitoSession ` to include a ` Throwable ` parameter to enhance
refactor parameters in GoTestDescription to streamline dependency management to enhance code readability and maintainability
renamed variables and methods related to buffer and handler in SPDYAsyncConnection . java for clarity to improve code readability and maintainability
fix blockliquidwrapper to use getflowingblock instead of getstaticblock
updated AndroidLocationPlayServiceManager and BackgroundLocationHandler to utilize URI parsing for background location to improve accuracy in managing background location listeners
refactor AprEndpoint class to improve code readability and maintainability
[ hotfix ] fix clifrontend # getjsonplanasjson for streaming planner
update item count calculation and improve recipe retrieval logic in CraftingManager . java to enhance accuracy in crafting results
flume - 2441 . fix test failure due to forced checkpoint
removed unnecessary parentheses from whitespace checks in TabsAndIndentsVisitor . java to simplify code for better readability and maintainability
added regex pattern matching for " pg _ temp _ " in NeuteredLinesFilter to enhance filtering capabilities to support additional file naming conventions
chore ( regen ) : regenerate with update license year
added checks for " NCLOB " and " NVARCHAR " data types in various classes to ensure proper handling of NCLOB data types to enhance data
added a method to check if the wavefront distribution is publishing a histogram and updated related timer and meter registration logic to ensure proper handling of
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` to set ` divideUpstreams ` to true and modified ` DivideUpstreamUtils ` to
added a new method ` registerListener ` to ` ShadowSensorManager ` to enable the registration of sensor listeners with specified parameters
added SocketException handling and additional test methods in SelectChannelServerSslTest to improve error handling and logging for socket exceptions during SSL connection testing
camel - 16400 : camel - ignite - add support for camel - ignite - osgi - karaf and camel - ignite
added conditional logging for empty set and modified result set handling in AbstractClient . java to improve clarity of output messages and enhance readability
pdfbox - 2576 : catch unsupportedflavorexception instead of ioexception
added tests for setting display hdr capabilities and handling unsupported operation exceptions to ensure that the setDisplayHdrCapabilities method returns hdr capabilities and raises an exception
added a finally block to reset classLoader in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leaks
improve error message when user provide invalid bloom filter entry
added a default constructor to the Message class to provide a default implementation for message initialization
added checks for ` isGUIClass ` and updated bug priority assignments based on ` implementsSerializableDirectly ` to ensure correct handling of serializable interfaces to improve
updated PhoenixDecimalObjectInspector to enforce precision scale enforcement using HiveDecimalUtils to enhance decimal type precision handling during decimal conversion
updated GZIP output stream handling in CompressionResponseStream and CompressionFilterTestServlet to ensure correct output stream is used based on response status and committed
updated the ` getAuthorization ` method to accept ` authenticateHeader ` instead of ` WWWAuthenticate ` to en
added a condition to check if the directory name starts with " EJS " , " _ " , and " Omg " to ensure proper handling of
refactor thread group name retrieval into a separate method to improve code readability and maintainability
added logging functionality to MethodInvocationPrivilegeEvaluator for better error handling to improve debugging capabilities and ensure proper logging during property setting
moved DmozParser from the crawl package to the tools package to organize code under the appropriate tool
refactor RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy classes to improve code readability and maintainability
server : add iso path to user vm disk for migration ( # 4809 )
refactor Signal handling logic in SigInt . java to improve error handling and logging to enhance clarity and maintainability of signal interactions
replaced the static import of ` ArrayUtils . isEmpty ` with a direct call to ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to
make axonautoconfigurationwithspringcloudtest more robust
added methods to set and transform the color in ColorRGBA to enhance color interpolation functionality
planner - 489 remove deprecate planningplanningentityselector # setresetinitializedplanningentities
updated TwoLevelArtifactCacheDecorator to include build time information in ArtifactInfo builder to ensure accurate tracking of build time in ArtifactInfo construction
refactor GroupByOperator to use getDeclaredFields ( ) instead of getFields ( ) for better encapsulation to improve code clarity and maintainability
added null check for block before adding block appearance to prevent potential NullPointerException when block is null
added CNC _ BTC to CurrencyPair and updated TickerDemo to use it to enhance currency categorization and improve ticker functionality
updated skewAllowance from 5 to 15 and modified related classes to utilize CasConfigurationProperties for skew allowance handling to enhance security
added sorting functionality to songs based on genre and sort order in SongListActivity and Utils to enhance sorting flexibility for song retrieval
added a new method ` readBodyToBytesIfNecessary ` to convert the request body to a ` TypedByteArray ` before creating a ` Request ` object to improve
replaced ` BaseBlock ` with ` LegacyBaseBlockWrapper ` and removed ` MobSpawnerBlock ` and ` SignBlock ` classes to
refactor IcebergBranchExec to retrieve the snapshot ID directly from the table reference instead of using the snapshot ID directly to improve code clarity and
replaced ` newArrayList ( ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest . java ` to
photontrace demo : fix ray bounce count not be set correctly
updated password change validation logic in IdentityProviderEndpoints and added logging for unsupported operations in IdentityProviderEndpointsMockMvcTests to ensure proper handling of password change requirements
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure proper handling of uninitialized constructors during reflection operations
updated error handling in JdbcExecutor to differentiate between closed connections and database operations to improve clarity and accuracy of SQL execution errors
added a test method for verifying the presence of a user data object in the RestTemplate to ensure that the application correctly processes and returns the user data
updated regex patterns for user and password in CredentialInjector . java to improve clarity and consistency in matching mysql credentials
added a new menu item " Item4 " and a new key binding for the enter key in ActionListenerCalledTwiceTest . java to enhance
enhanced debug print statements in TestCoreParser . java to include query class canonical name and result count to improve visibility into query results for better debugging and
replace ` Arrays . equals ` with direct comparison for ` id ` and ` children ` in ` SimpleNode . java ` to improve readability to en
changed the access modifier of the PopulatorContextStackItem class from public to package - private to allow access to the class from other packages
updated the method of obtaining the number of documents in MoreLikeThis and added a new test for small sample documents in TestMoreLikeThis
refactor quest condition handling to improve readability and maintainability of the code
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
updated query construction to append " $ gt " and " $ lt " to the " __ EXPIRY " string to ensure consistency in query formatting
added a new native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to provide a way to retrieve a long value using a
updated time zone names from ARAST to EET across multiple files to reflect the new time zone designation for better accuracy
updated the ID from 90000010 to 90000011 to reflect the new version of the logging functionality
hhh - 6662 - fix for hhh - 6663 - do n ' t try to rollback a locked session
refactor DownloadExternalFile to improve handling of file suffix conditions to enhance clarity and maintainability of the code
set apple . laf . usescreenmenubar to false for macos
apps - 2088 add piecewise integration test
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods in ` BaseSwipeUpHandler
added configuration white list functionality and a corresponding test in TestJdbcWithSQLAuthorization to ensure correct handling of configuration parameters during runtime
added invalidClasses entry to invalidClasses map to ensure proper handling of invalid class instances
updated target calculation to use player . team ( ) instead of team . sharded to ensure accurate distance from the sharded team to the nearest team
updated cookie domain from " comp1 " to " domainHelper . getHostName ( ) " to ensure correct hostname resolution for cookies
added nullable validation logic in multiple classes to ensure that nullable values are validated correctly based on the presence of search condition
chore ( regen ) : regenerate with update license year
added queries to delete and query documents based on a specific field in the collection to enhance data retrieval capabilities in the collection
added scratch data handling for database snapshots in ` ExecutablePreparedStatementBase . java ` and updated tests in ` PostgreSQLIntegrationTest . java `
updated conditional checks and improved formatting in DefaultServlet . java to enhance code readability and maintain consistency in formatting
[ jabref ] add drag - and - drop functionality to the tabbed pane ( # 10861 )
updated description creation to use ` Description . createTestDescription ` instead of ` createDescription ` in ` ExecutionUnitRunner ` and ` ExecutionUnit
[ hotfix ] fix checkstyle violation in commandlineutils
removed public access modifier from methods in TimeUtils and updated imports in TimeUtilsTest to enhance encapsulation and improve code organization
updated security frame detection logic in RefectionMHTests to ensure compatibility with Java 18 and above
updated file extension check from " jpg " to " . jpg " to ensure compatibility with both uppercase and lowercase file extensions
updated method return logic to differentiate between HostedMethod and their declaring classes to improve clarity and accuracy of method representation
added ` getIcon ( ) ` methods to multiple ` Data ` classes and updated ` DataTableTopComponent ` to use these icons to enhance
modified the method to return the request name substring only if it does not already end with a period to improve performance by avoiding unnecessary substring extraction
modified the text replacement logic in FindAndReplace . java to handle dollar signs correctly and added a test for dollar signs tolerance in FindAnd
do n ' t use xmppconnection if debugger be n ' t set
refactor SchemaExtractionProcessor to improve code clarity and maintainability
added a new method ` copyDir ` to the ` IO ` class to copy files from a directory to a specified directory to enhance functionality
added exception handling for unknown datum classes in JacksonUtils to improve error reporting for better debugging
refactor ABI handling in DefaultJavaLibraryBuilder to utilize method calls to improve code clarity and maintainability
removed background padding from the height calculation to simplify the height calculation logic for better readability
added normalization of database and table names in ObjectStore . java to ensure consistent identifier formatting for database and table names
added schema handling for oracle databases in DbSqlSession to ensure a default schema is used when the oracle database is used and the schema is not
removed the authentication process from HomeFragment to streamline the logout process by eliminating unnecessary logging
[ hotfix ] fix flaky mockstreamingruntimecontext test
added a null check for candidates before processing them to avoid potential NullPointerExceptions during execution
updated condition in ContainerLifeCycle to check if the bean is managed rather than a managed bean to improve clarity and accuracy of lifecycle event handling
fix typo in thymeleaf . dialect
added a call to clear the metadata object in AlterTest . java to ensure proper memory management during tests
added null checks for loc before accessing its properties to avoid potential NullPointerExceptions when loc is null
added null check for measurement in TabletInsertionDataContainer and updated DisruptorQueue to use a custom exception handler to enhance robustness
deleted the Session2Token . java file to the class is no longer needed in the project
server : fix bug in createvolumefrombaseimagecontext ( # 4608 )
added a new Install system shortcut class and integrated it into PopupDataProvider and InstantAppResolver to enhance functionality for managing app installations
added a new constructor to LdapAuthenticationProvider that populates an empty list of granted authorities to enhance flexibility in handling null roles
update retrolambda jar path fallback to default version 2.5 . 1 that may have issues building Android
updated method call from ` buildOrThrow ( ) ` to ` build ( ) ` in ` ShadowCamera . java ` to improve clarity and consistency
updated the ` sortLiveDocs ` method to utilize ` Bits ` instead of ` FixedBitSet ` to improve performance and simplify the sorting process
added null result handling in JMESPathExtractor to improve robustness by preventing null pointer exceptions during result processing
updated import statements and added null check for authorities in AuthorizeTag . java to enhance code robustness and prevent potential NullPointerExceptions
removed unnecessary external form check from logout tests to simplify test assertions for improved readability
server : fix vm memory requirement for vpu vcenter ( # 4649 )
refactor configuration handling in RobolectricTestRunner to use method class and method annotations to improve clarity and maintainability of configuration merging logic
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize a more efficient socket connector for improved performance
added a check for partial partition keys in HiveAlterHandler and updated related tests to ensure correct handling of partition keys during alterations
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags to enable or disable the icon in the textheader
[ hotfix ] fix checkstyle violation in simulatorstatus
replaced SharedBlockingCallback with Callback . Completable for handling deployment handlers in StandardDeployer and StandardUndeployer to improve code readability and
added workspace listener functionality to PreviewControllerImpl to manage workspace updates effectively
added a check for non - VMAnonymous classes in the noInflation condition to ensure proper handling of class declarations in reflection operations
refactor TransportHelper class to improve code readability and maintainability
updated file path formatting in CatalinaAcegiUserRealm . java to ensure proper resource loading for XML resources
ambari - 21142 . ambari server should not start itself twice ( rlevas )
added null checks for init and modify nodes in JSONWriter . java to enhance robustness by preventing potential NullPointerExceptions during JSON processing
refactor file system handling in SliderAppsViewControllerImpl to simplify method signatures and improve clarity to enhance code readability and maintainability by
added a check to ensure the background manager is not attached before attaching the window to prevent potential crashes
added functionality to set the current tab in AllAppsTabbed , Launcher , and PagedView classes and adjusted adjustments in Workspace . java to
added null check for the URL in BaseDataSource and implemented a test for typo in SimpleDataSourceTest to enhance error handling for invalid URLs and ensure
updated PebbleModuleTest to enable JDK 8 and 11 compatibility for PebbleTemplateEngine instantiation to ensure compatibility with the latest JDK features and improve
added an EditNameDialogListener to display a new directory name dialog in FileDisplayActivity to enhance user experience by allowing directory creation to be
added functionality to toggle bar borders in various chart components to enhance user experience by allowing users toggling between bar widths and data sets
corrected the spelling of " OkCoin " to " OkEx " in the exchange specification to ensure consistency and accuracy in URL formatting
jbrules - 2623 : fix acceptedforagertest to use natural score comparator
replaced FileChannel with SeekableByteChannel for reading and reading files to enhance performance by using a more efficient file reading mechanism
refactor ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` instead of ` MapVector ` to improve clarity and functionality
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] fix checkstyle violation in serializationconfigurationparser
added heap limit functionality to QuickstepProcessInitializer for debug and production purposes to enhance memory management during development and troubleshooting
refactor code for better readability in Collectors . java to improve code clarity and maintainability
log4j2 - 1343 fix broken test
hbase - 26937 fix checkstyle issue in precompactedrow
updated rendering intent return values and modified color conversion logic in ICC _ Profile and ColorConvertOp classes to ensure correct handling of rendering intents
added a new MeterRegistryLifecycle bean for managing MeterRegistry lifecycles to enhance the management of meter registry lifecycles in the
[ 3.0 ] remove unexpected exception from config center log ( # 9059 )
added error handling for certificate generation in CertificateFactoryTest to ensure robustness against certificate exceptions
camel - 14263 : camel - core - optimize simple predicate parser to handle ambiguous function correctly .
simplified the onTabUnselected method by removing unnecessary parameters to enhance code readability and maintainability by reducing complexity
add user . name to log error when access log fail
updated mesh name scaling and added null check for ogreMesh ' s getSubmeshnames ( ) method in OgreXmlLoader and SkeletonModelViewer
removed ` InterruptedException ` from the ` createOrThrow ` method signature to simplify the method signature for better readability
added @ Deprecated annotations to UpgradeResponse . java to indicate that the class is outdated and should not be used
added declaration generation functionality to the JSweet transpilation process to allow users to specify the output directory for generated d . ts files to en
added a test for Kinesis stream fetch timeout in StreamConfigTest . java and updated default fetch timeout logic in StreamConfig . java to ensure
added a " . html " file extension to the timestamp parameter in StreamingDataflowWorker . java to include HTML output to enhance data flow functionality by
updated the maximum number of metastore server threads from 100 , 000 to 1000 , 000 to improve server performance and resource management
changed the return type of onTaskSnapshotChanged from void to boolean to enable the method to indicate whether the snapshot was successfully processed
updated shadow radius setting in SwipeUpAnimationLogic to use a variable shadowRadius to improve code readability and maintainability
add a test for chain nesting and aggregation
updated the loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure proper validation of the
changed the condition from checking if the source is an internal source to checking if it is interactive to ensure proper handling of interactive source scenarios
updated conditional check to include null checks for previousCachedFilePath to enhance code robustness
added DisplayController import and updated WindowManagerProxy initialization to enhance display management functionality in the launcher preview rendering
removed conditional logic for setting toolTipText based on root directory status in MetalFileChooserUI and SynthFileChooserUI implementations to streamline the code for better
replace getToolkit ( ) with Toolkit . getDefaultToolkit ( ) for obtaining screen size to ensure compatibility with the default toolkit implementation
change return type of recognise method from List < RecognisedObject > to List < CaptionObject > in TensorflowRESTCaptioner
added new methods for inserting , removing , and returning entities with factory expressions in JPASQLBase . java to enhance functionality for fetching results
removed conditional logic for dragging points in FreeformFinSetConfig . java to simplify the drag index handling and improve code clarity
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to reflect the latest version of the MoE
improve error message when constant canot set call value .
updated error message formatting in ElementsShouldSatisfy , ZippedElementsShouldSatisfy , and ElementsShouldSatisfy _ create _
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should no longer be used
refactor unsafe plugin registration logic into a separate method to improve code readability and maintainability by reducing duplication
added Hint annotations to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and implemented a new test for blacklisted modules in Android
changed mCenterPagesVertically variable from true to false in AppsCustomizePagedView . java to adjust page scrolling behavior for better user experience
added a call to ` migrationInfo . doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to ensure that migration tasks complete successfully
[ konnectedupnP ] fix base url for konnected binding
updated WSFederationClaimsReleasePolicy to accept a list of attribute values instead of an object to enhance flexibility in handling multiple claims
added a method to create a test table with non - ascii characters and updated query processing logic to enhance database compatibility and improve query execution flexibility
added a new test case to verify SQL parsing with brackets in case expressions to ensure correct handling of bracketed expressions in SQL syntax
added event handling for mouse events in ConsoleActivity to improve user interaction by starting copy mode only when appropriate
updated the ` writeXmlOutput ` method to utilize ` DocumentBuilderFactory ` and ` DocumentBuilderFactory ` for XML document creation to improve
added unit test base on user forum issue
( chore ) camel - core - engine - spi : avoid use deprecated method
move basicconfigurators to logback . classic instead of logback . basicconfigurator
added a check for the presence of a PHI _ NODE flag in the TypeQualifierDataflowAnalysis condition to ensure that the targetVN is not equal to
removed unused import of SharedStringSource from TestXSSFRichTextString . java to clean up the code and reduce unnecessary dependencies
added a new method ` invokeMethod ( IObject iObject , MethodEntity method , Environment env , TraceInfo trace , Object [ ] args ) `
updated multiple Java classes for consistency and clarity to enhance maintainability and readability of the codebase
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed the ` NormUpdate ` class to a static inner class and updated related conditions in ` MemoryIndex ` and ` CoreDescriptor ` to improve performance and
changed the visibility of the IndexFileNameFilter constructor from public to private to restrict instantiation to enhance encapsulation
refactor plugin definition handling in IfStatementTest . java for improved clarity and functionality to enhance readability and maintainability of the
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
replaced the use of ` TypeAdapter . nullSafe ( ) ` with a new ` nullSafe ( ) ` method for type adapter registration in ` Type
updated the expected value from 12 to 13 in BundledDistributionTest . java to reflect the correct number of elements in the distribution
added a new class EXIFReader to handle EXIF metadata processing to enhance the functionality of extracting EXIF data from files
fix tostandardunit to return none instead of unknown unit
[ drools - 7670 ] fix applypmmlmodelcommand to work with kie - maven
improve clarity of error message in countercurrencytransferstartedmessage
added a check to return early if the bubble bar visibility is not visible to improve performance by avoiding unnecessary processing when the bar is not visible
[ gr - 164761 ] aarch64 : fix failure in aarch64 backend .
added a try - finally block around initialization in JDK XRLogger . java and implemented a new test for concurrent logging in XRLogTest . java to
added a find method to TicketCatalog , DefaultTicketCatalog , and HazelcastTicketRegistry classes to enhance ticket retrieval functionality and
updated SSL connection parameters and assertions in TestSSL . java for improved clarity and consistency to enhance readability and maintainability of SSL
[ hotfix ] fix checkstyle violation in sortmergerresultpartition
( chore ) camel - jmsio : remove unused constructor
updated the ` queryAllPluginHandlesByPluginId ` method to include a ` type ` parameter and modified the ` pluginHandleDO ` to
added ` start ( ) ` method to ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` to ensure proper span creation to enhance
updated IOSApplicationConfiguration to use GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , and GLKViewDrawableMultisample
refactor login logic into a separate method for improved readability to enhance maintainability and clarity of the login process
torch ( ) now throw an exception if real ( ) or complex ( ) be call with an invalid handle .
removed unnecessary check for interruption during thread synchronization to simplify the synchronization logic and improve readability
refactor Implements and ShadowPicker classes to improve code clarity and maintainability
refactor HttpClientOptions creation into a separate method ` createHttp2ClientOptions ` to improve code readability and maintainability by reducing dup
added a condition to check if ` DynamicArray . class . isAssignableFrom ( cls ) ` in ` DynamicStruct . java ` and modified ` Solidity
updated text alignment property retrieval to use a default value of true to ensure consistent text alignment across the application
added a ` shouldRecurse ` parameter to the ` CopyStep ` constructor and corresponding tests in ` CopyStepTest ` to enhance functionality to support recursive
fixed - rsemaphore . acquire ( ) method do n ' t set value on redis server . # 3473
camel - 14263 : camel - core - optimize routecontextprocessor to avoid reflection call
added FlavorParser class to parse flavor strings using Splitter to improve flexibility in parsing flavor names from various formats
witnessschedulestore : fix protobuf warning
added a conditional check for empty resultsMeta before printing results to avoid printing an empty result message
refactor ConcurrentLinkedQueue to improve null checks and add a new RemoveLeak class for testing memory leak scenarios to enhance code reliability and
added a boolean parameter ` addSpecialTokens ` to the ` encode ` methods in ` HuggingFaceTokenizer ` to enhance flexibility
[ hotfix ] use nCopies for computeresourceprofile in taskmanagerservices
[ iotdb - 6570 ] fix load single chunk data size mismatch ( # 6570 )
added session storage context handling in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to enhance flexibility in managing session storage
added a new test method for schema validation in TestJspDocumentParser to ensure proper validation of XML schema processing
added a default constructor to TypeAdapter and updated SuppressWarnings annotations in ReflectionAccessTest to clarify deprecation warnings related to security manager in Java 17
refactor SuspendedEvent handling to properly dispatch and manage KILL events to improve event dispatching and ensure proper handling of KILL events during
refactor AntPathRequestMatcher for improved clarity to enhance maintainability and readability of the code
refactored createResourcePolicy method signatures to remove unnecessary null parameters to simplify method calls and improve code readability
added null check for _ deflaterEntry before releasing it to prevent potential NullPointerException when _ deflaterEntry is null
added JUnit AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure tests run after each test execution
updated the MD5 checksum calculation to normalize the checksum to ensure compliance with NFC standards for checksums
refactor command handling in Example . java for improved clarity and consistency to enhance code readability and prevent potential NullPointerExceptions
changed the keyListener variable from non - final to final and added multiple overrides in BaseAppState to enforce immutability and ensure proper method overriding
updated the way DBObject is deserialized from JSON in MongoTemplate . java and added a test for savingJsonStringCorrectly in MongoTemplateTests . java to ensure
added handling for multiple remote addresses in RequestUtils to ensure that the request correctly identifies and processes multiple remote addresses
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` in ` JsLibrary . java ` to enhance flex
refactor CookieManagerTest to use a static method for retrieving the host address and port to improve code readability and maintainability by reducing
added whitespace check for wrapped runs in GlyphLayout . java and updated bitmapFontTest . java to include a new test for color alpha transparency to enhance
added pauseOrResumeSplits methods to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase classes to enhance functionality to pause or res
added a new environment variable for the Hive script operator ID in HiveConf and updated ScriptOperator to utilize this variable to enhance script execution configuration management
refactor ` getListedTermCounts ` method to streamline term count retrieval and sorting to improve code readability and maintainability by reducing
added a new file ` UseSeparateStepSizeAction . java ` to implement a menu item for separating step sizes to enhance the functionality
updated FileMenuFilter to make certain fields and methods final to enhance code clarity and ensure immutability of these fields
hbase - 26937 fix checkstyle issue in hbase - table
updated header values in HttpClientRequestAdapter to use " 0 " and " 1 " instead of " false " and " true " for Sampled . getName
pdfbox - 2576 : use ioutils . closequietly instead of forcefully close subdoc , a suggest by valerybokov
updated GwtApplication and GwtGraphics classes to enhance fullscreen mode handling and display mode management to improve user experience by ensuring proper fullscreen mode
updated WebfingerIssuerService to use URI for resource normalization and improved URI handling to enhance URI clarity and ensure proper handling of invalid
added a new test class SoulApacheDubboClientConfigurationTest for testing Apache Dubbo client configuration to ensure that
replaced ` Gdx . files . internal ( fileName ) . pathWithoutExtension ( ) + " . png ` with ` resolve ( fileName ) . pathWithoutExtension
add trace log when merging attribute policy results
replaced calls to ` lock ( ) ` with ` lockInterruptibly ( ) ` in ` PlayerApiServlet . java ` and ` PlayHandler . java
updated package declaration for clarity to improve code readability and maintainability
added exception handling logic in NullDerefAndRedundantComparisonFinder to improve error reporting for redundant comparisons
update dashrendererbuilder to use defaulthttpdatasource
added a new configuration property to limit the maximum number of prepared statements cached per database connection to 120 per connection to enhance flexibility in managing database
changed the return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` in multiple classes to ensure compatibility with the updated API to
added a checkErr method to handle command errors in AutoScalingHandler to improve error handling by throwing a BadRequest exception for invalid command payloads
refactor CombinedDataset class to improve code readability and maintainability
replaced byte array with a direct reference to the variable b in the gzis read method to improve performance by avoiding unnecessary array creation
added methods to remove cryptographic restrictions in the Utilities class to enhance security by preventing cryptographic restrictions from being managed
fix nether movement when cancel
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to verify the functionality of long text transformations
added a check to ensure vContext is not null before adding it to the vectorization contexts to prevent potential NullPointerExceptions during execution
fix wialon speed unit conversion ( fix # 269 )
hbase - 26937 disable metric user - enabled by default
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to ensure that the ` JsonObject `
replaced boolean variables mUserPresent and mVisible with instance variables mAttached and removed duplicate unregistering logic to streamline the lifecycle management of the receiver to
refactor multiple HttpClient , HttpClientRequest , HttpClientResponse , HttpServerRequest , HttpServerResponse , NetSocket , and ReadStream classes to improve code organization and
added parameters to zadd operation in PipelineBase . java to enhance functionality by allowing for additional parameters during zadd operation
[ ds - 3952 ] fix bug in metadata import test
[ ci ] rename asyncmessagetest to performance
added a method to retrieve the Optional < TargetNode < ? , ? > > from the versioned target graph and updated the VersionPropagator
updated time range checks from EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW to EPOCH _ SE
update return value in EscherBlipRecord . java to include HEADER _ SIZE and add a new test case for OLE2 embedding functionality
initialized ` row ` and ` column ` variables to zero to ensure proper initialization of data structures
replaced ` FullyQualified ` with ` Pattern ` for pattern matching in ` FindTypes ` and ` JavaType ` classes to improve flexibility
updated DETAIL _ THUMB _ HEIGHT and added ACTION _ PLAY _ TRAILER handling in BaseItemDetailsFragment . java
added a call to ` CStrikeCache . freeLongPointer ( longValue ) ` with a new method ` removeGlyphInfoFromCache ( long )
act - 575 : terminate the activity when it have be end
camel - 14263 : camel - jaxb - allow to specify the local name of the xml type in the jaxb model
updated the endpoint URL from apereo . org to abc1234 in SimpleHttpClientTests to ensure compatibility with the latest API changes
add a preference to reset all preferences to default value
hbase - 26937 thriftmetrics and thriftserver : make thriftmetrics and thrifthttpservlet protect
remove deprecate channel ' manual _ fan _ speed ' from danfossairunithandler
use hamcrest assertion instead of junit in unit test
removed duplicate lines in TweetActivity . java to streamline code by eliminating redundancy
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to enhance robustness by preventing potential NullPointerExceptions during
server : add root disk size parameter to vms ( # 5663 )
updated visibility logic in PredictionRowView to conditionally show suggested apps based on user preference
[ geos - 10978 ] bbox bbox should not be null , but be valid cr
added methods to validate parameters for value , position , and ivk in LibrustzcashParam . java to ensure that values are non - negative
marked the IThrowableEntity class as deprecated to indicate that the class is outdated and should no longer be used
added random number generation for x and y in NodeDataImpl . java to enhance randomness for node data generation
updated the method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes in ` TokenValidation
refactor stdout and stderr initialization in JavacStep . java to use a try - with - resources statement to ensure proper resource management to prevent potential memory
updated the version string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new release version of the software
added a condition to check if the item type is of type DEEP _ SHORTCUT to enhance functionality to support deep shortcuts in the loader
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent behavior for hash - based collections
changed access modifiers of ` BooleanWeight ` , ` DisjunctionMaxWeight ` , and ` Similarity ` classes from private to protected to allow subclasses to
added a boolean flag to control proxy response code usage in HttpURLConnection to ensure proper handling of NTLM proxy responses
aarch64 : use scratch register for fldr calculation
server : fix usage of reserve vm in vmpool
added null check for maxScore in JSONResponseWriter and implemented query functionality in TestDistributedSearch to enhance robustness by preventing null pointer exceptions
updated the audio recoder parameters from 22050 to 44100 to improve flexibility in audio recording
update origin calculation in RocketFigure . java to correct the origin positioning based on scaling factors
updated null and empty check for Druid data source in DruidQueryBasedInputFormat . java to improve error handling and default interval values
added ORIGINAL _ TYPE ( " Original Type " ) to CustomProperty . java and updated regex pattern in CustomPropertyTest . java to
added a static method ` create ( Table parent , Map < String , Object > data ) ` to create a new ` Index ` instance with specified parent
simplified the boolean condition for checking lower and upper boundary periods to enhance code readability and maintainability
updated schema compatibility handling in SchemaCompatibility . java and added a new test for schema compatibility with reader and writer types in TestSchemaCompatibility . java to ensure
added support for handling both one - to - many and many - to - many associations in the QueryUtils class to enhance query optimization for
added synchronization to the spans list in TestSpanHandler to ensure thread safety during concurrent access to the spans list
updated method signatures from List < Object > to List < ? > in multiple classes to enhance type safety and reduce casting errors
updated exception handling and logging levels in ViewContextImpl . java to improve error logging and debug levels to enhance clarity of error messages for better debugging
refactor OAuth2AccessTokenEntity class to improve code readability and maintainability
updated error messages in SCBEngine , TestSCBEngine , TestInvokerUtils , and HighwayServerInvoke to clarify service request rejection
added iOS resource files for " Default - 1024w - 1366 " and " iOS - moe / resources / Default - 1024w - 1366
added a ConcurrentMergeScheduler to the MockAnalyzer in TestSearcherManager . java to improve thread - safety during concurrent merge operations
updated condition in QTestUtil and modified list handling in GenericUDTFInline to improve session state validation and enhance code readability
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
prevent double - click in spreadsheet key listener ( issue # 568 )
hhh - 15836 fix osgi test failure
update timeout calculation from elapsedTimeMs ( start ) to connectionTimeout - elapsedTimeMs ( start ) in Hikaripool . java to ensure
do n ' t create component description file in non - packaged resource
updated filename handling in Compat . java and FileOpener . java to use File . separatorChar for better cross - platform compatibility to ensure consistent file
changed the return type of the row ( ) method from Cell < T > to void and changed the return type of the row ( ) method from Cell
add check for duplicate port number in cli ( # 2298 )
added a null mask feature to WebSocketClient and updated WebSocketConnectionD12 initialization to use this mask to enhance security by preventing null WebSocket connections
modified the ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of a ` RelNode ` to
added node selection statistics tracking for bucketed nodes in NodeScheduler and TopologyAwareNodeSelector to enhance the monitoring and management of node selection
add a new file Person . java that defines a Person class with a name property to provide a way to set and retrieve the name
replaced the ` execute ` method with a boolean variable ` hasOwnerPtr ` for clarity and added a check for its result to improve code readability
added clock animation functionality to PlaybackOverlayFragment to enhance user experience by providing a clearer and visually visually - differentiated clock
removed redundant calls to ` world . updateComparatorOutputLevel ( pos , this ) ` across multiple classes to streamline code by eliminating
removed the ' final ' modifier from the ' IMPL ' variable and updated exception handling in SegmentReader . java to improve code clarity and error handling
added SwingUtilities invocation for cell update events in Sudoku . java to ensure UI updates occur on the Event Dispatch Thread for better responsiveness
refactor DefaultTypeAdapters and related classes to use CollectionTypeAdapters instead of DefaultInetAddressAdapter to simplify the adapter implementation and enhance type safety
added null checks and assertions for single and multiple values in the Series class to ensure proper handling of null values and prevent runtime exceptions
removed " -- no - audio - time - stretch " argument from options in VideoManager . java to simplify command - line options for better readability
updated boundary conditions in GeoRelationUtils and GeoUtils for accurate calculations to enhance accuracy in determining geometric points within specified limits
vmware : fix npe in listvirtualmachines when vm be in stopped state
shutdown all hazelcast instance before run test
added checks for NoSuchAlgorithmException and NoSuchProviderException in BlockCipherTest . java to ensure proper handling of unsupported cipher modes and improve error messaging to en
added filters to print operation logs in QFileClient to enhance visibility of operation logs for better debugging
add aopproxywriter . visittypearguments ( typeelement ) to process type argument
added a null check for currentConnectionAddress in ProtocolProviderServiceSipImpl to ensure currentConnectionAddress is set to proxySocketAddress if it is null
replaced Math . addExact with MathUtils . cappedAdd for demand calculation to improve code clarity and maintainability by using a cappedAdd method
refactor image output stream creation to use try - with - resources for resource cleanup to ensure proper resource management and prevent potential memory leaks
refactor search activity usage in TvApp , BaseActivity , EnhancedBrowseFragment , and StdBrowseFragment to streamline search
removed redundant calls to ` toString ( ) ` in ` GrepOptions ` class to streamline the code for better readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 3473 - add osgi support to
added @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests to enhance dependency injection for PersonRepository functionality
changed the exception type from Exception to InterruptedException in the stop ( ) method to ensure proper exception handling and improve logging clarity
refactor case statements in BlockCactus . java for improved clarity and organization to enhance code readability and maintainability by
refactor mouse handling in ThemeSelector to use a mouseMotionAdapter for mouse events to improve responsiveness and responsiveness of the theme selection functionality
added an abstract class ` AbstractMinMulticastFlowControlRhsPadding ` to the ` AbstractMinMulticastFlowControl ` class to enhance control flow control
added alignment parameters to editStringAt methods in IOSImplementation and IOSNative classes to enhance text editing functionality based on user properties
removed unnecessary null checks for modelFile and multiWordRulesFile in StatTokSentAnnotator constructor to simplify the constructor signature and improve error handling
added a check for non - distinct queries in the query handling logic to ensure that distinct queries are handled correctly in the query generation
do n ' t throw nosuchmethoderror when jninetativeLinkage be n ' t find .
no effective change - code cleanup
added null check for children before iterating to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition variables to MessagePackParser and updated return logic in JsonLocation to ensure accurate parsing context and enhance error handling
added locale handling after tests in AbstractSolrMorphlineTestBase to ensure consistent locale settings during tests
updated status bar height calculation in LauncherFragment . java to ensure consistent status bar height calculation across different SDK versions
added a new test class MetricsReporterTest for metrics reporting to ensure proper functionality and error handling of metric registration and error reporting
camel - 14263 : camel - spring - boot - osgi - remove unused type cache
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for the Rectangle class
[ hotfix ] [ test ] fix test instability in streamkafkaptest
updated DSA parameter generation logic to use BigInteger . ONE instead of BigInteger . valueOf to improve clarity and consistency in handling prime strength values
added configuration for FQDN usage in LLAP daemon configurations to allow users to utilize the FQDN of the AM machine when submit
fix flaky testclientoutofmemoryhandlertest ( # 2593 )
added getCmoObjectId ( shapeId ) method to multiple shape classes and updated method calls accordingly to ensure consistent object ID generation across shape classes
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify distinct query functionality with distinct scalar queries to
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve code organization and maintainability
remove unused k8s extensionadapter reference
updated subtitle setting in DetailsDescriptionPresenter to use a utility method for retrieving info rows to enhance code readability and maintainability by centralizing
( chore ) camel - test - auth : migrate to junit 5
added error handling when generating summary HTML in BugCollectionBugReporter to improve robustness by catching potential TransformerException during summary generation
replaced calls to ` intPool . reset ( false , false ) ` with ` bytePool . reset ( ) ` in ` TermsHash . java
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
added support for TIRAMISU API level in ShadowWindowManagerGlobal . java to enhance compatibility with TIRAMISU devices
refactor UrlHelper to conditionally append " : " to the URL if the request scheme is not " http " or " https " to
added support for MSSQLDatabase in foreign key constraint generation to enhance compatibility with MSSQL - specific constraints
hbase - 26937 addendum fix typo in hstore . replacestorefiles ( )
remove debug print statement and add filter event handler .
alexeibarantsev : do n ' t inject html in debug mode for now
updated HiveLookupTableSource and HiveLookupJoinITCase to use getTableSchema ( ) instead of getProducedTableSchema ( ) to ensure accurate field
do n ' t crash when try to release a listener on wrong thread
updated schema name retrieval in SequenceSnapshotGenerator to use a custom CatalogAndSchema instance to ensure compatibility with different database schemas and enhance schema validation
added alpha transparency configuration to SpriteBatch and updated LwjglDebugStarter to use AlphaTest for improved rendering quality to enhance visual quality and
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 3553 .
added a base URL and a check for duplicate baseCores in SolrLoggerServiceImpl . java to ensure unique statistics are recorded for each base core to avoid
added a new method ` launchTaskFromView ` to ` TaskActionController ` for launching tasks from a specific view to enhance functionality
updated ` MorfologikFilter ` to use ` DictionaryHolder . DEFAULT _ DICTIONARILY ` instead of ` Morfo
updated sorting options from " CommunityRating " to " CriticRating " in GridFragment to reflect the correct ratings for community and critic
added imports for ViewKt and ListRow in CustomListRowPresenter . java to enable visibility control for ListRows in the header view
refactor client selection logic in StressAction . java to improve error handling and ensure proper client initialization
refactor HttpClient class to improve code readability and maintainability
replaced ` isCaseSensitive ( ) ` with ` instanceof ( ) ` for better type checking in ` CatalogAndSchema ` , ` CatalogComparator ` , and
added support for Jackson serialization in StandardJavaScriptSerializer
( chore ) camel - log4j : use slf4j instead of apache log4j
replaced TypeBearer with Type in PhiTypeResolver . java to ensure compatibility with the latest Type API changes
removed unnecessary whitespace in CoinbaseTransaction . java to improve code readability and maintain consistency
added a method to retrieve targets forcefully in BuckConfig and updated ProjectCommand to conditionally use this method to enhance flexibility in
added a call to System . gc ( ) in the IdleStrategy initialization to ensure proper resource management during idle periods
updated ` OCFile ` to use ` ContentResolver ` instead of ` ContentProvider ` across multiple files to enhance compatibility with Android ' s
removed duplicate lines of code in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix npe in testinglogicalslot
added a new recipe to remove calls to ` System . gc ( ) ` and ` Runtime . gc ( ) ` to the JVM to en
removed redundant super ( ) calls across multiple exception classes to streamline exception handling and improve code clarity
added a method to set the icon in ScaleImageLabel to ensure the correct icon is used for the UIID
updated variable name from ' foundEntry ' to ' update ' for clarity and consistency to improve code readability and maintainability
added support for " - cp " argument in the Main class to enhance flexibility in specifying classpath options
avutil : use compiler instead of options
fix checkstyle issue in storageservice
updated Test7196045 . java file to improve test coverage and maintainability
changed density and decay values from 1.5 f to 1.0 f and from 0.9 f to 0.95 f in ShaderParametersLight
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` and updated corresponding methods in ` OidcRedirectActionBuilder ` to
# 2616 - enh : add unique constraint when nullable ( # 2617 )
added federated share permission checks in UsersAndGroupsSearchProvider and EditShareFragment to enhance sharing functionality based on user capabilities
added a method ` needsDocValues ( ) ` that always returns true in the ` TestBBoxStrategy ` class to provide a way to check for document
refactor BufferAlignmentAgent and related classes to improve clarity and error handling to enhance readability and maintainability of the code
added a method ` intForEach ( IntObjConsumer < V > consumer ) ` to ` Int2ObjectHashMap ` and updated ` IntObj
fix the global mapStorage to prevent share scoreboard early
changed return type of count methods from Long to long in multiple classes to accommodate larger data sizes and improve performance
refactor MTree snapshot creation logic to improve clarity and logging to enhance readability and maintainability of the MTree snapshot creation process
updated the calculation of the dot product in VectorUtil to include a fraction of the length to improve accuracy in score calculations
added a new constant for IRREVERSIBLE _ THRESHOLD and implemented related methods to manage and retrieve the latest confirmed block number to enhance
replaced the ` setLocale ( ) ` method with a new ` setLocale ( PreferenceHelper . getInstance ( ) . getUserSpecifiedLocale ( )
added a condition to check if a new database is created in LauncherClings and updated LauncherProvider to include this check to ensure that the database
refactor exception handling and iterator management in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability
added a null check for the datamodel before setting is64Bit to ensure it is not null to prevent potential NullPointerExceptions during runtime
added a thread check in TestIndexWriterDelete . java to ensure the test only runs on the correct thread to avoid potential issues
changed the visibility of the closeDatabase method from private to protected to allow subclasses to access and override the method
updated imports and methods in FullDetailsActivity , BaseRowItem , and CardPresenter classes to use ModelCompat for API compatibility to ensure compatibility with
added functionality to set attributes from the SVG element to the new document element
added a try - catch block around the exception handling in ConsoleKeys . java to ensure proper logging of exceptions when parsing user configuration
added extra handling for " WaitForResult " in AndroidImplementation and CodenameOneActivity to ensure " WaitForResult " is set correctly based on intent extras to
modified constructors in HitQueue , SpanPositionQueue , and PriorityQueue to use a Supplier for pre - populated scores to enhance flexibility
replaced ` WidgetImageView ` with ` TextView ` for loading and displaying widget descriptions in ` WidgetCell . java ` to enhance user experience by providing a
added a maximum attribute count limit check in the registration process to ensure that attribute registration does not exceed defined limits
move predicatestest to impl . predicates package to avoid clash
camel - 14263 : camel - core - allow to turn off case insensitive header filter in camel - 14263
refactor InlineLayout and Breaker classes to improve boundary handling and alignment logic to enhance readability and maintainability of the code
added null checks for convertView and avatarRadiusDimension in ShareUserListAdapter . java to enhance stability by preventing potential NullPointer
refactor the ` shouldInstrument ` method to include exclusion lists for Android SDK instrumentation to enhance flexibility in instrumenting classes based on
added a check for insert destination before source in BrowserContentPane . java to ensure proper handling of insert destination before source associations
updated memory limit file path retrieval in CmdModifierTest . java to use the correct file path based on the Cgroup version to ensure accurate memory limit configuration
added an EMPTY _ INSTANCE constant and updated references from CxxDeps . of ( ) to CxxDeps . EMPTY _ INSTANCE in multiple files
improve error message when source under test be not among its dependencies
added support for mc version 1.10 and 1.10 . 2 in Botania . java to enhance proxy functionality for Mine
added a check to ensure atIndex is non - negative to prevent potential negative index exceptions during string manipulation
increased timeout duration from 100 milliseconds to 500 milliseconds to allow more time for tests to complete successfully
updated TaskOverlayFactoryGo to use AssistContentRequester for content requesting to enhance flexibility in managing assist content requests
replaced the use of StringUtil . createReadableString with StringUtil . encode58Check for witness address encoding to enhance security by preventing potential encoding issues
refactor DefaultMethodRegressionTests to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in workloadmanagermxbean
updated the import statement for KafkaException from KafkaProducerException to KafkaException in KafkaOutboundAdapterParserTests . java to ensure compatibility with
added a call to close the loader in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and implemented tests for handling rollback exceptions in FaultTolerantExceptionClasses to enhance
improve error message for config deployment failure
updated ` applyTunerConfigs ` method to include an additional ` Map < String , String > ` parameter across multiple classes to enhance flex
added handling for in - progress realtime segments in PinotRealtimeSegmentsManager to ensure that only active segments are added to the list of segments to prevent
added a null check for touchable state in the Table class to prevent potential null pointer exceptions when accessing properties
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` to verify support for precompiled
throw a retryablehazelcastexception instead of nullpointerexception if cache config have not be create yet
refactor module installation checking in JSweetTranspiler to utilize ProcessUtil for checking node packages to improve code clarity and maintainability
added @ ManagedObject annotations to MBeanContainer and Destroyable classes to enhance monitoring capabilities for component registration and destruction processes
changed the condition from checking if the application is in the app browser to checking if it is not in the app browser to ensure that the application does not
updated equality checks for ` remoteGroupID ` and ` bulbLevel ` in ` EspMilightHubDiscoveryService ` and ` E
updated type checking logic in ` Types . java ` and added new classes ` T6558559a ` and ` T6558559b ` to
updated print statements in WorldEditListener . java to improve clarity and structure to enhance readability and maintainability of the code
( chore ) camel - kafka : fix potential resource leak
removed default ( ) method from Schema . java to simplify the schema initialization process
refactor thread interruption handling in AgentRunner . java to improve clarity and structure to enhance readability and maintainability of the code
remove the time column from the result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper management of time data source dimensions
removed unnecessary null check for sreq . shards length to simplify the condition for handling single shard request
refactor RustBinaryDescription and RustLibraryDescription to use CxxPlatforms for linker and parse time dependencies to improve code clarity and maintainability
added a ` name ` property with getter and setter methods to ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` Ntlm
improve error message in ideal graph dump handler
refactor small scan handling in BaseQueryPlan and QueryServices classes to utilize a configurable small scan threshold to enhance flexibility and control
added routeId to the filter string in RetryGatewayFilterFactory to enhance clarity in filter output
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` and removed redundant calls to ` redisplay ( ) ` to
refactor ` onOverviewShown ` method calls to use ` DiscoveryBounce . showForOverviewIfNeeded ` instead of ` onOverviewShown ` to
refactor CheckIndex . java to streamline null and size checks for min and maxPackedValues to enhance code readability and maintainability
updated the publish method to use updateLastState instead of true for state updates to ensure that state updates occur only after the latest state update
updated string list formatting in MetastoreDirectSqlUtils . java to improve readability and formatting consistency
added a null argument to the exp list in SpliteratorCollisions . java to ensure proper handling of null values in collision scenarios
danielwagnerhall : add case - insenstive text condition to webelement .
removed duplicate while loops in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
# 1686 - ormqueryengine . setfetchsize ( int ) - add queryengine . forwardonlyfetchsize ( )
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to ensure that 404 is sent back to the client when the channel is closed
pdfbox - 4892 : fix arrayindexoutofboundsexception , a suggest by valerybokov
added support for rounded corners on window in QuickstepAppTransitionManagerImpl to enhance transition control to improve visual compatibility with devices that support rounded corners
replaced ` ShapeDrawable ` with ` View ` for background and icon in ` DesktopTaskView . java ` to enhance the visual presentation of
[ type : refactor ] fix upstreamcheckservicetest bug ( # 6663 )
refactor logging statements in AbstractSession and AbstractSessionManager classes for clarity to improve readability and maintainability of log messages
replaced error logging with a return statement in ZooKeeperHiveLockManager . java to simplify error handling and improve code clarity
[ hotfix ] fix checkstyle violation in javadocs
added a boolean variable ` containsCustomData ` and modified mipmap generation logic in ` FileTextureArrayData . java ` to conditionally generate the texture
updated key and secret keys to use ' xxxxx ' instead of ' xxxxx ' to ensure compatibility with the new secret key format
added selectable functionality to the List class to enhance user interaction by allowing selection of items
added a check for empty field vectors in LlapArrowBatchRecordReader . java to ensure proper handling of empty fields in the schema
added file separator handling in PolicyContext and updated indexOf method calls in PolicyContextTest
replaced HashSet with ArrayList for ` flatQueries ` , ` expandQueries ` , and ` expandQueries ` in ` FieldQuery . java ` to improve performance
refactor TLSRestrictions class to improve code clarity and maintainability
refactor KafkaManager to use a dedicated task for closing the producer to improve code readability and handle potential exceptions more gracefully
added a new parameter to the assertNodeStateProvider method to include " freedisk " as a context for node state verification to enhance functionality by allowing
added a lock file named " LOCK " in RocksdbMavenPomCache . java to ensure proper management of cache lock files
updated the initialization of NIOServerCnxnFactory to use InetSocketAddress for client port creation to ensure consistent handling of client port configurations
added a method to retrieve a response from the RestClient to improve error handling and logging for better debugging
( chore ) camel - ingestion : use arraylist instead of string
updated loginStudent method to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT1 _ ACCOUNT to enhance security
added a null check for the last deleted item ID in EnhancedBrowseFragment and StdBrowseFragment to ensure robustness by preventing potential null
increased the maximum number of strings from 500 to 100 in TestSpecialOperations . java to accommodate a larger number of strings for testing purposes
refactor ByteArrayInStream initialization and remove hexToBytes method in WKBAttributeIO . java to simplify the code and improve readability by eliminating unused
corrected the spelling of " messageWithHeaderEntry " to " messageWithHeaderKey " to improve code readability and maintainability
added a method to check if a transition is a direct substate in AbstractStateMachine to ensure proper handling of transitions involving exit and enter states to en
added checks for ListMultimap and SetMultimap in MultimapSubject . java and implemented corresponding tests in MultimapTest . java to ensure
added JoinOperation to the PostJoinOperation class to enhance the functionality of the PostJoinOperation class
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to verify the correctness of the PostgreSQL test with specific
http : / / issues . apache . org / jira / browse / amq - 5035 - fix intermittent test failure
refactor AvaticaDatabaseMetaData class to improve code readability and maintainability
updated ` lifeTime ` , ` idleTime ` , ` maxWaitTime ` , and ` maxConnectionLifeTime ` configurations to be ` @ DurationCap
do n ' t cast to mediaformat when create a sdp medium format
refactor FacetProcessor to return a boolean indicating applied filters instead of void to enhance clarity and functionality to improve code readability and maintainability
added support for configurable timeout handling in the ShuffleHandler to enhance flexibility in timeout management
updated the initialization of mQuickStepStartingRotation to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code readability and maintainability
updated logging statements in XPathBuilder and added deprecation warnings in XQueryBuilder to improve code clarity and encourage usage of deprecated methods
use dataresource . class . getResourceAsStream ( ) instead of hard - coded path
added a new test case to verify that the tokenizer correctly escape backslashes in source code
added validation for the ' atlas ' property in AtlasTmxMapLoader . java to ensure that the map is not missing the ' atlas ' property
camel - 14263 : camel - core - add support for property placeholder on component start
added a call to close levelDbDataSource in BlockchainTest . java to ensure proper resource management and prevent potential memory leaks
refactor code to use a dedicated method for extracting lines from a string to improve code readability and maintainability
int - 1892 remove unused import from webserviceinboundgatewayparsertests
replaced List < Object > with List < Object > for bindings in ProjectableSQLQuery and AbstractSQLBindings classes to enhance flexibility in
added support for checking for OpenJDK in the VirtualMachine class to enhance compatibility with OpenJDK environments
added keepAlive ( true ) to ReactorClient . java to control connection closure during reactor operations
updated VertexAttribute initialization to use ShaderProgram . POSITION _ ATTRIBUTE instead of " a _ Position " in MD5Renderer and ObjLoader to
camel - 14263 : camel - core - optimize to avoid create a new instance of property component
refactor account retrieval logic in UnfreezeBalanceActuator . java to improve code clarity and prevent potential NullPointerExceptions
update version number from 3.8 . 0 to 3.8 . 1 in XMPPServer . java to accommodate new release status changes
replaced calls to ` t . unannotatedType ( ) ` with ` t . unannotatedType ( ) ` in ` Types . java `
updated assertions and flush manager initialization in StorageGroupProcessorTest . java to improve test clarity and ensure correct sequence file size handling to enhance reliability
added a new DumpableCollection for environment - specific classes and updated existing classes to use this new method to enhance environment - specific functionality and
added a waitbeforestart parameter to FFMpegVideo . java to control timing before video playback
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor to simplify the ` OrcEncodedData
refactor AccessorsTest . java to add a new test method for checking index bounds to improve test coverage and enhance clarity of index
added a method to compile a method in the graalcompiler and expose the framemap in the lirgenerator
replaced ` @ Ignore ` annotations with ` @ ConditionalIgnore ` annotations in ` DynamoDbTicketRegistryTests ` and ` BaseAuthenticationRequestRiskCalculatorTests
added import for BlockWater and modified the y - coordinate calculation logic in ItemBoat . java to ensure correct positioning of boat blocks based on
updated the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to improve
removed the method ` allowExperimentalOptions ( ) ` from the ` allowExperimentalOptions ` check to simplify the check for experimental options
added new methods for asserting paths in BDDAssertions to enhance assertion capabilities for path assertions in the application
refactor HostPort handling in ForwardedRequestCustomizer to use hostField instead of hp to improve clarity and maintainability of the code
change log level from debug to warn for multiple Kubernetes config files to provide a clearer error message for users regarding configuration issues
added functionality to handle file upload status changes in UploadListActivity to improve user experience by managing file transfers effectively
added a new ` ProviderLoader ` class and updated ` TerminalManager ` to use ` ProviderLoader . load ` instead of ` ProviderInstaller .
updated StreamEnvironmentPostProcessor to use TraceMessageHeaders instead of Span to improve clarity and consistency in header naming
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig with a computed property to enhance flexibility in selecting entries based on date execution order
hhh - 16625 postgresql dialect should support current _ schema ( )
ignore partition that do n ' t have data member
added error handling and improved scheduler state management in ExecutionScheduler and ExecutionSchedulerImpl classes to enhance stability and provide clearer diagnostics when
updated InlineBox instantiation syntax for improved readability to enhance code clarity and maintainability
reformatted argument checks in StatisticMap . java to improve code readability and maintainability
updated the return value of getStagedRectSlideEnd from 383 to 500 to adjust the slide end duration for better user experience
updated button names in WaveInfoDialog and PlacementFragment to use a bundle for better localization to enhance localization support for the application
updated condition in BukkitMain . java to check for owned plots to enhance control over plot area behavior
added a test for touch exploration state change listener invocation in ShadowAccessibilityManagerTest to ensure correct behavior of touch exploration
pdfbox - 5328 : fix out of bound exception , a suggest by valerybokov
do n ' t call getpropertyasstring ( ) , use getname ( ) instead
replace instance of NPOIFSFileSystem with POIFSFileSystem . create ( big ) in TestNPOIFSFileSystem . java to simplify file handling by using
added plot area retrieval logic in Move . java to ensure correct plot coordinates are used for plotting
updated version regex in TestWebHCatE2e . java to ensure compatibility with additional version formats
updated the condition for checking ` count ` from ` negative ` to ` 1 ` in ` Filters . java ` to ensure correct validation of ` count `
add clientid property to kafka consumer processor . fix # 2879
updated import statements and added error handling for execution failures in JavacCompiler . java to improve error reporting and ensure proper exception handling during compilation failures
ggb - 2118 do n ' t repaint the select list view if it ' s visible
camel - 14263 : camel - spring - batchcamel - optimize header value to reduce memory usage
added a method to check if an animation is finished based on frame number to enhance animation control functionality
added a new test for custom favicon URLs with line breaks in LoginInfoEndpoint to ensure proper functionality of custom favicon URLs with line breaks in the
None
updated variable name from ` newValue ` to ` newValue0 ` for consistency and clarity to enhance readability and maintainability of the code
refactor ObjectHashSet class to improve performance and maintainability
refactor null checks and equality checks in DataUtilities . java for improved readability to enhance code clarity and maintainability by using
allow for deletion of enchanted books , mc - 12770
add unit test for asyncresource
rename target - flat - headers . hmap to target - user - headers . hmap for clarity
added detailed error logging for sending messages to improve debugging and error reporting for sending failures
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskItemView . java ` and updated method names for cl
added multiple test methods for retrieving partition names with different sizes batches to enhance test coverage for different partition sizes in HiveMetaStoreClient API
refactor FileListListAdapter to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OCFileListAdapter . java
updated the index used to retrieve the removed view in the removeViewInLayout method to correct the position of removed views in the layout
removed " org . eclipse . jetty . websocket . util . server . internal . " from JavaxWebSocketConfiguration and JettyWebSocket
removed the ' true ' argument from the S3Request constructor to simplify the S3Request instantiation
fix issue with jfxradiobuttonskin not update the timeline properly
updated DeweyNumber to handle zero splits correctly and added a test for zero splits in DeweyNumberTest to ensure robustness against invalid D
refactor category string handling in MwVolleyApi . java to improve clarity and maintainability of the code
corrected the spelling of " Invalid close control status code " to " Invalid close code " to ensure consistency and accuracy in error reporting
added null check for classLoader in WebappLoader . java and updated assertions in TestVirtualWebappLoader . java and TestWebappClassLoaderWeaving
hhh - 16625 - enhancementcontext . ismappedsuperclassclass ( managedctclass ) should not inherit from mapped superclass
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class TestPorterStemFilter for stem filtering functionality to verify the functionality of the PorterStemFilter class
do n ' t write index update if write succeed
changed package declarations from ` org . springframework . core . exlore . support ` to ` org . springframework . core . explore . support
fix concurrentmodificationexception in chatwindowmanager
removed redundant calls to Sys . touch ( ) in multiple classes to streamline code by eliminating redundancy
updated HgCmdLineInterface and related interfaces to use " - mardu " and " - rev " instead of " - unknown " and
camel - 14263 : camel - netty - netty should use source code generate configurer to avoid reflection configuration .
changed variable declarations from ' intensity ' to ' range ' in multiple light classes to improve clarity and consistency to enhance code readability and maintainability
use target . getWidth ( ) and target . getHeight ( ) instead of target . getWidth ( ) and target . getHeight ( )
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and corresponding tests in ` DelegatingSecurityContext
added annotations filtering functionality to the ClassFinder class to enhance class inheritance by including inner classes and annotations
updated the length calculation logic in BytesColumnVector . java to ensure proper handling of integer overflow scenarios to prevent potential integer overflow and improve memory management
[ hotfix ] fix flaky writebehindmapstorewithevictionstest
changed the method signature of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` XTextArea
make sure polyfunction . isequal ( poly ) return true for all degree
added null check for the table before retrieving column class to avoid potential NullPointerException
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException in Ant to improve robustness by preventing crashes due to Class
added methods to retrieve and manage the " always _ materialize _ whitelist " configuration in DistBuildConfig to enhance flexibility in managing
modified the ` isDoubleEntryEnabled ` method to return ` false ` instead of ` defaultValue ` and updated the ` ExportDialogFragment ` to
added an import statement and an Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a known issue that needs to be
changed return types of doJoin methods from void to boolean in JoinTemplate . java and MergeJoinBatch . java to improve method clarity and
removed the getAutodeps ( ) method from JavaLibraryDescription . java to streamline the code by eliminating unnecessary complexity
added FLAG _ ACTIVITY _ NEW _ TASK to the intent and modified FLAG _ ACTIVITY _ CLEAR _ WHEN _ TASK _ RESET to en
added a method checkPagingOrderBy ( ) in SpiQuery . java to enhance paging control functionality
update MavenArtifactRepository URLs from " https : / / repo . maven . apache . org / maven2 " to " https :
add a new task to facilitate the creation of a node ' s affiliation .
added uri normalization and validation for taglib directives in TagLibraryInfoImpl . java to ensure URIs are valid and prevent potential URI syntax errors
changed the access modifier of the method buildUserProfileByClassCompleteName from private to public to allow external access to the method
added array handling for CacheKey objects and refactored conditional checks in CacheKeyTest to improve code readability and maintainability by reducing
updated file type detector implementations across multiple files to use the default FileSystem provider to improve compatibility with different operating systems and enhance file system management
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
refactor VirtualSensorCallback handling in ShadowVirtualDeviceManagerTest and ShadowVirtualDeviceManager to improve clarity and functionality to enhance callback management
added a condition to check if the context is not equal before execution in HttpSessionSecurityContextRepository and implemented a test for context removal in HttpSessionSecurityContextRepository
refactor loopback address handling in NetUtil . java to improve clarity and correctness to enhance the robustness of IP address resolution logic
renamed ` BUF _ SIZE ` to ` DEFAULT _ _ BUF _ SIZE ` and updated buffer initialization to use DEFAULT _ _ BUF _ SIZE
updated key validation logic and exception handling in various classes to enhance security and improve error reporting during signature processing
added a boolean flag to track if the icon change listener is installed before adding it to the icon to ensure that the icon change listener is only added when
added support for Russian language support in the Language class
hhh - 16625 convert sqmm duration to nanosecond instead of second
disable frame state verification during runtime
added system properties for enabling and disabling test resources to improve resource management by resetting system properties
added a system class " org . slf4j . " to the web application context and verified the loading of the logger factory in ViewClassLoaderTest
fix changepackaging to remove default
updated FileDownloadViaHttpGetTest and FileDownloadViaProxyTest to use ` withExtension ( " txt " ) ` instead of ` withText ( "
added nk _ buffer _ clear ( cmds ) to GLFWDemo . java to enhance buffer clearing functionality in the demo
updated unit handling methods from default units to preferred units in JogService and related services to improve clarity and maintainability of unit management
updated date formatting in DatePatternConverterTest to use UTC timezone and adjusted DSTavings to ensure accurate date representation to improve accuracy of date representation in tests
updated return statement formatting to improve code readability and maintainability
improve error message for invalid hdfs file uri
use javafx timer instead of javafx schedule
( chore ) camel - ftp : fix test which randomly fail on slow ci server
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve concurrency handling during key iteration
added ignore ( Throwable ignored ) method to several log classes to enhance logging capabilities for ignored log entries
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary type casting for byte in BukkitWorld . java to simplify code and improve readability
removed the call to GraphicsUtil . cleanImage ( img ) in the PanelManager class to simplify the image handling process
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to provide a mechanism for managing mmap operations in the Solr core
fix npe in pdfcleanupprocessor when ic be null
updated the query parameter name from ' field1 ' to ' field1 _ s ' in the assertQueryEquals method to ensure consistency in naming conventions
refactor ExtendedOperatingSystemMXBeanImpl to improve performance and maintainability of the code
added a method to install left commands into the SideMenuBar class to enhance the functionality for managing left commands within the application
added a new boolean variable ` advanceWindowed ` to control windowing behavior based on user preferences
added a condition to check for Sybase in the dropPrimaryKeyGenerator to ensure proper handling of Sybase - specific database types
refactor Client class to improve code readability and maintainability
[ java ] call notifyleadershiptermid when leadershiptermid can not be append to publication .
replaced invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) and added shouldDelayChildPressedState ( ) method in CellLayout and Cell
added a return statement in NearCachedClientMapProxy . java to ensure proper termination of the proxy process
updated package - info . java files to improve documentation clarity
added a method to shutdown the HTTP server before starting it to improve error handling during server shutdown
camel - 18131 - camel - aws2 - s3 : fix checkstyle issue
[ hotfix ] remove unused parameter tmid
bug 10698 : 226 to 227 db upgrade - remove key that do n ' t exist in 2.2 . 7
added a new test class TestThriftCLIServiceSecurity for verifying password handling in authentication requests
added maxEnergyLimit variable and updated energy limit assignment based on fee limit to ensure accurate energy limit configuration for constant calls
added maxInMemorySize property and its getter / setter in HttpClientProperties and updated webClientPlugin method to accept ExchangeStrategies to configure the maximum memory size for
refactor Cache class to improve performance and maintainability
added new test and definition classes for Cucumber testing to establish a framework for pretty - printing test outputs
added error handling for JsonParseException in TypeJsonUtils . java and added assertions for array operations in TestArrayOperators . java to improve robustness and ensure
updated hex string conversion for byte array in Utf8StringBuilderTest to ensure correct formatting of hexadecimal values
added a check for parameter sets before appending them to the StringBuilder in Params . java and introduced a utility method isParamSet ( key ) in RestInvocation
camel - 14263 : camel - circuit - breaker - should enforce maximum number of output to configure .
updated the maximum buffered document count in TestIndexWriterExceptions to ensure that the document frequency assertions accurately reflect the maximum buffered document count
replaced calls to ` toString ( ) ` with ` Sha1HashCode ` for resource APK hash generation to ensure consistent hash generation for resource A
removed unused enumValue and longValue methods from AsmRuntime . java to clean up unused code and improve maintainability
add miss biome tag to biome tag provider ( # 4647 )
improve image loading performance by use a thread pool
changed visibility of fields and methods from private to protected in BaseTableUpsertMetadataManager . java to allow subclasses to access and modify these fields
updated month names from " \ u0646 \ u0648 \ u0627 \ u0627 " to " \ u0623 \ u064a \ u0627
replaced ` . equals ( ) ` with ` . hasimageequalto ( ) ` for image comparison in ` AbstractSunSecureRule . java ` to
camel - 14263 : camel - jbang - add repos option to camel - main
added handling for NaN scores in CrawlDbReader to improve robustness by preventing processing of NaN scores
added a cleanup method to OnStartupTriggeringPolicyTest to ensure resources are properly released after tests
replaced ` FilterConditionEditor . requestFocus ( ) ` with ` RequestFocusInWindow ( ) ` and updated focus handling in ` FindAction . java
[ hotfix ] [ checkpointing ] make checkpointcleaner thread - safe
added a new test class XPathWhiteSpaceTest for XML schema validation to ensure correct handling of XML whitespace in tests
added a check for empty trie log before persisting trie log in BonsaiPersistedWorldState . java to prevent potential NullPointer
refactor FilledNewArrayInstruction class to improve code readability and maintainability
added a timeout of 60 seconds to the @ Test annotations in SimpleNetworkTest . java to provide more time for network tests to complete successfully
updated the return statement to check if the parent path ends with a slash to ensure correct formatting of the parent path to prevent potential errors
added a print statement to display the failed loading of the skin file to improve debugging by providing visibility into the skin file loading process
added dirty marking and validation methods in LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to improve data integrity checks during updates
added a new result constant UNDEFINED in Result . java and updated TestStep . java to return the result UNDEFINED instead of creating a new Result instance
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of null values during transaction registration
fix uploadjobmultipartoperation to work with jet service
[ rocketmq - 3088 ] do n ' t corrupt the scheduled job journal when recover data
summarylevel : add option to ignore child node in verticalnodeviewlayoutstrategy
replaced the ` pos ` variable with a ` sizeMask ` variable and modified the ` ensureAvail ` method in ` DataOutput2 ` to improve memory
added JUnit @ Ignore annotations to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to temporarily disable failing tests to improve test reliability
fix arrayindexoutofboundsexception in storageproxy
[ hotfix ] fix checkstyle violation in filemanager
updated TransformFunctionType and TransformFunctionFactory to include additional transform functions to enhance functionality for additional transformations
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement and updated getEnclosingElement ( ) methods in Element and PackageInfo classes
updated rfc reference to rfc 5280 for clarity
updated version number from 2.17 . 3 to 2.17 . 4 in Recaf . java and SearchAnnotationVisitor . java to reflect the
refactor thumbnail caching logic in ListActivity and replace HashMap with SparseBooleanArray in NoteAdapter to improve memory management and enhance code readability
reformatted conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener and added a new test for absolute resource URLs in ConfigFileApplicationListener
updated PreviewPositionHelper initialization to include context and split screen insets to enhance flexibility in preview positioning based on device and split screen insets
[ java ] do n ' t publish new leadershipterm when the leadershiptermid be not in the log .
pmd : fix pmd coverage test
refactor ByteArrayInputStream . java to improve byte skipping logic and add a new Skip class for testing to enhance clarity and functionality of byte skipping
reformatted the conditional statement in UpdaterTask . java to improve code readability and maintainability
changed the visibility of MAX _ HEADERS from final static to public and added a conditional check for the size of BLOCK _ HEADERS in Peer . java
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to include additional texture packaging requirements
do n ' t send hello message if local node be not ready
refactor RasterLayerResponse and related classes to improve error handling and streamline parameter retrieval to enhance code clarity and maintainability while ensuring
added a check to ensure response is not sent if the response is already committed to avoid sending an error 500 error
updated condition checks in HttpSession . java for improved readability and consistency to enhance code clarity and maintainability
updated fade - out transition logic and added hotseat icon visibility handling in HomeGestureTutorialController and SwipeUpGestureTutorialController to
fix warn about miss name in prefab
updated ScimGroupExternalMembershipManager initialization and added " internal . superuser " to the external group set in LdapMockMvcTests to enhance group
added validation for non - existent account transfers in FreezeBalanceActuator and TransferActuator classes to ensure that the minimum amount is 1 TRX
updated path index calculation to use File . separator instead of ' / ' to ensure compatibility with Unix - like file systems
ggb - 2118 fix for input bar not show .
updated GPS description retrieval to use session description instead of an empty string to enhance user experience by providing context - based descriptions
added a conditional statement to verify that the number of pages does not match the expected number of pages to ensure the test accurately reflects the expected
* deprecate androidbufferallocator in favor of androidnativebufferallocator
added checks for flags starting with " ! " in multiple classes to ensure correct handling of flag names and prevent potential conflicts
added a NOPMD comment to the JDBCHistoryCache . java file to improve code readability and maintainability
modified the condition to check for the equality of the " ITEM _ USE _ GRANT _ SELECT _ REWARD " operator to ensure correct handling of the
refactor QueuePriorityTest to use a list for expected tasks and update assertions accordingly to improve test clarity and ensure correct behavior of tasks
updated affinity group creation and validation logic in AffinityApiUnitTest . java to improve clarity and functionality of affinity group creation and validation
added a null check for the command in Main . java and updated argument checks in Main . java to enhance command handling to include help to improve user
updated LightOutputStream initialization parameters in PropertyTypes , ByteIterableBase , and LongBinding classes to use fixed parameters to optimize memory usage for light output handling
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean variable ` showBlank ` and updated conditional logic in ` ClassWriter . java ` , and created a new ` T80328
added a length check for the Person object to ensure that the Person object has sufficient space before proceeding
added a null check for the file extension in the return statement to prevent potential NullPointerException when checking if the file extension is null
replaced ` return ` with ` continue ` in ` ContactRightButtonMenu . java ` to ensure the menu iteration continues instead of exiting the loop
[ multistage ] remove redundant check in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver . java to improve code readability and maintainability
refactor socket binding and closing logic to ensure proper resource management and avoid potential memory leaks
added functionality to clear and manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to enhance user experience by allowing items to be removed
updated log message from " W3C Action commands " to " element ' s in - view center point " to clarify the context of the
added a new file ` bug4865918 . java ` implementing a GUI with a scroll bar to address bug 4865918 related to
ambari - 21190 . kerberos : remove unused velocity engine ( rlevas )
replaced specific imports with a wildcard import and added a case for " grouptriggers " in QuestCommand . java to streamline imports and enhance functionality for
added a method to start an XML file chooser for selecting GnuCash accounts to enhance user experience by allowing users to select Gnu
added Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enhance string representation capabilities for better debugging and logging
updated the ConfigurableService annotation to use a constant for the configuration URI to improve maintainability and readability of the configuration URI
removed duplicate setViewportComponent and setJScrollPane calls in BrowserPanel . java to streamline code by eliminating redundancy
updated input handling to use KEY _ FORWARD _ DEL instead of KEYCODE _ DEL and added a new constant KEY _ FORWARD _ DE
added a conditional check for " moreIndexingFilter . indexMimeTypeParts " before retrieving MIME type parts in MoreIndexingFilter . java to enhance flexibility
added author pattern matching to JSDoc to allow specification of authorship in documentation
updated metric names from " delta _ total _ count _ dbs " to " create _ total _ count _ tables " and " delete _
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for table management to enhance integration with
updated oauth2LoginLinks method to accept a MultiValueMap of query parameters to enhance flexibility in handling authentication error responses
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al - Q
added a condition to check if the browser is not an ie or firefox to ensure compatibility with different browser versions
added a ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the ` InterceptorConstants ` constructor from ` GrpcServerBuilder `
added default charset specification to the CREATE TABLE TEST _ 5 and TEST _ 6 tables to ensure compatibility with different database configurations
[ hotfix ] fix checkstyle violation in streamingaggtemplate
[ hotfix ] fix typo in executiongraph
added support for " FROM " clause in DELETE statements by introducing a boolean flag to control the " FROM " clause handling and modifying related methods to
refactor synchronization handling in SynchronizeFolderOperation to use isMultiStatus ( ) instead of isSuccess ( int ) to improve clarity and
refactor recipe matching logic into a separate method for applicability testing to improve code readability and maintainability by reducing duplication
updated regex pattern for identifying log line numbers in LogAnalyser . java to improve accuracy in identifying log lines to enhance readability and maintainability of
( chore ) camel - google - cloud : fix integration test
fixed - rconnection . execute ( ) method in redissonsearch throw illegalargumentexception . # 3473
refactor license selection logic in CCLicenseStep . java to improve type safety and clarity to enhance code readability and maintainability
added a null check for the globalId before inserting it into the guidIndex to avoid potential NullPointerExceptions during execution
replaced ` equals ` method with ` areEqual ` method in ` OptionalAssert ` to improve clarity and consistency in comparison logic
refactor memory management in NoNewLineParagraphCssApplier and ParagraphCssApplier to use a boolean flag for LMB presence to improve code readability
added a new test class TestArrayCopyToFromObject for array copying functionality to ensure proper exception handling for ArrayStoreException
updated sys path insert statements to use ` Escaper . escapeAsPythonString ` instead of ` Escaper . escapeAsBashString `
do n ' t close ajp channel if the socket state be not close
add deprecate method for backwards compatibility
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test as unstable due to unstable testing scenarios
added a null check for the exception before calling the doRequest method to ensure that the request is not null to avoid potential null pointer exceptions
refactor autoloadCall method to include a lowerName parameter for lock management to enhance flexibility in managing class loading locks
added a method to check if the server version is equal or greater in CustomPlaybackOverlayFragment and PlaybackController to enhance server version comparison
updated KDC and OneKDC classes to use canonical hostname for local host names to ensure accurate identification of localhost instances to avoid potential conflicts
added support for multiple roles in the Jsr250Voter to enhance security by allowing voting with multiple roles
updated import statements in MP4Parser . java to streamline imports and enhance code clarity
added a constant for HS2 _ PROXY _ USER and updated session parameters handling to improve clarity and maintainability of session parameter management
camel - 14263 : camel - hdfs - hdfs component should use snappy codec when compress with bzip2 .
added a sleep of 1000 milliseconds in HttpClientTest . java to introduce a delay for better test reliability
[ bug - 64674 ] fix bug in xssfsheet . setcelltype ( cell . celltype )
updated glyph position calculations in GlyphLayout . java and modified test text message in BitmapFontTest . java to enhance layout rendering accuracy and clarify
refactor Fabric8IstioIT . java to streamline image pulling and loading to improve code readability and maintainability by
updated ` ReportPlaybackStartAsync ` and ` ReportPlaybackProgressAsync ` calls to use ` TvApp . getApplication ( ) . getPlaybackManager
use bufferedinputstream to avoid resource leak
fix maploader hitting eviction on initial load ( # 16490 )
updated the return statement to combine ERROR _ BIT with LENGTH _ BIT in ResponseFlag . java to ensure consistency in response handling logic
[ ds - 3952 ] fix default policy not be able to be override by anonymous
added a SoftReference for a ConcurrentHashMap of CompositeFont instances to improve thread safety when accessing font collections
set prefHeight to 0 and adjust adjustments accordingly to ensure prefHeight is consistently set based on node height adjustments
drools - 4892 fix dmnevaluatorcompiler to handle unknown variable error
removed unused graphics imports from multiple Java files to clean up the code and improve maintainability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and updated main executor in ` NavHandleLongPressInputConsumer ` to
added null checks for node ID and updated edge retrieval logic in ElementFactoryImpl and ImportContainerImpl to enhance error handling for unsupported edge types
[ flink - 18552 ] [ python ] drop unknown state / instruction response in fnapicontrolclient
updated the constructor of ` Bin ` to use ` sessionFactory . createSession ( ) ` and added a new test for handling flow files larger than the
find the tile ' s most common tile , not just the most common tile
do n ' t copy content - length header into request if it ' s already there
updated Java2TypeScriptTranslator to handle STRING , CHAR , and other numeric types correctly to ensure correct type handling for literal values in TypeScript translation
reduced channel bandwidth factor from 2.0 to 1.0 in FilterFactory and adjusted frequency calculations in ChannelizerViewer and TwoChannelOutputProcessor
hbase - 26975 canary now support - allregions option ( jesus camacho rodriguez , review
removed NodeModule import from CassandraConnectorFactory and TestCassandraConnector to simplify dependencies and improve code clarity
reset cursor position in KahaDBStore to ensure proper ordering of data entries
added minimum size configuration for frame dimensions in CallDialog and updated newFrameWidth and newFrameHeight based on minimum size in OneToOneCallPanel to ensure
fix loss of state information during world generation . close # 948
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static variables and streamline test setup to enhance code readability and maintainability by
added KerberosPrincipalHostDAO injection and modified KerberosPrincipalEntity removal logic to improve entity management and ensure proper cleanup of principal entities
removed the boolean parameter from the getTableSnapshot method call to simplify the method signature for better readability
do n ' t log an error if the poller time out
updated the error message to reflect the absence of the " android . licenseKey " section in the build hints to clarify the absence of
updated ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and removed the ` isInsideTrans
[ drools - 6662 ] fix package name resolution for boot - inf class
added an assumption to skip tests when the Runtime version is 19 and above to ensure compatibility with newer features in the test environment
removed unused parameters from the assignTargetsForSplitScreen method and related logic to simplify the method signature and improve code clarity
refactor LeaderLatch class to improve code readability and maintainability
added methods to initialize ZooKeeper parameters and log parameters in SolidityNodeHttpApiService to enhance ZooKeeper parameter management and improve
removed unnecessary calls to setConfidence in Transaction and added a new getDepthFuture method in TransactionConfidence to streamline transaction confidence handling and enhance
updated variable names from longtitude to longitude in multiple classes to improve clarity and consistency in naming conventions
initialize platformName to " ios " to ensure platformName defaults to " ios " when it is not provided
refactor PageEditClient class to improve code readability and maintainability
updated conditional checks in Graphics2D . java for improved readability to enhance code clarity and maintainability
refactor CreateVisibleSignature class to improve code readability and maintainability
added a try - catch block around the outgoing frame processing to handle potential exceptions during execution
replaced the try - catch block with a privileged action that uses AccessController for obtaining the caller class loader to enhance security by ensuring the caller
added logic to set the parent of a feed category to null if it matches the current category to ensure the correct parent category is set for child categories
added title functionality for contribution types in ContributionManagerDialog to enhance user experience by providing context - sensitive information
added a vwap variable and updated Ticker constructor to include it in the Ticker class to enhance the Ticker class to support the vwap
added a TextView for displaying no widgets and updated bottom inset handling in SearchAndRecommendationsScrollController to enhance user experience by providing a
add api to facilitate render graph api
added setColor ( primaryColor ( ) ) method to NCFirebaseMessagingService to ensure the service uses the correct color theme
refactor ShadowUsbManagerTest class structure to improve code readability and maintainability
updated calculations for training and evaluation in ` AbstractDifferenceRecommenderEvaluator ` and ` AverageAbsoluteDifferenceRecommenderEvaluator ` to
added a call to update the selected configuration in Rocket . java to ensure the selected configuration is properly updated
updated bounds calculation to include a minimum value for stroke widthUpperBound to ensure stroke bounds are constrained to a maximum of 1 to prevent rendering issues with negative values
replaced HashMap with LinkedHashMap for options in multiple classes to ensure predictable iteration order of options
replaced nativeClosureManager with closurePool for closure management to improve resource management by using a dedicated closure pool
( chore ) camel - jbang : migrate to junit 5
added a new file WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java to implement integration tests for K8s WebSocket
added a generic type set for RecordType in AbstractImportMetadataSourceService . java and a corresponding test case in DSpaceServiceManagerTest . java to
refactor authentication equality check into a separate method to improve code readability and maintainability
added a conditional check to return false when the " jnr . ffi . compile . x86asm " system property is not set to true to ensure
replaced ` callNode . getType ( ) ` with ` callNodeType ` for improved clarity to enhance code readability and maintainability
added an @ Insecure annotation to the MessageBuffer class to indicate that the class is subject to be subject to security exceptions during serialization
added new configuration variables for various Hive configurations in HiveConf . java to enhance configuration management and support additional Hive features
initialize ` scopes ` and ` policies ` with a new HashSet and a null check for ` rs . getPolicies ( ) ` in ` DefaultResourceSet
made decrefOnClose final and updated constructor parameters in MultiReader to enhance immutability of decrefOnClose array to improve thread safety
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsASynchronousSocketChannelImpl , TestFrameSize , and Test3 classes to improve code
danielwagnerhall : fix flaky test inputfieldtest
removed unnecessary canonicalization for parameterized types in the ` getFirstTypeArgument ` method to simplify type argument handling and improve code clarity
changed method signatures from Set < Integer > to KeySet and values in Int2IntHashMap . java to improve clarity and consistency in method signatures
added a duration parameter to the FlipTransition class and updated motion motion logic to allow customizable background color values to enhance flexibility in transition animations
removed unnecessary logging of subsAreValidForStreaming in DLNAResource . java to streamline code for better readability and maintainability
bump forge version to 9.10 . 10 ( # 9139 )
replaced System . err . println statements with LowLevelLogUtil . log for warning messages related to Sun . Reflect . Reflection . getCallerClass and added
added support for java 16 and java 17 postprocessors ( fixes # 16 )
updated padding calculation logic in ExpansionViewHelper . java to ensure correct background presentation based on replies ' index
do n ' t invoke backup replica anti - entropy operation if there be no callback
added metadata handling to SeedUrl and SeedResource classes to enhance metadata management in the application
added a null check for the declaration before setting the pattern to avoid potential NullPointerExceptions during pattern binding
[ hotfix ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
added package name handling to the ActionConfig builder in AnnotationActionValidatorManager to ensure the correct package name is used for validation
updated assertions in IterableTest to pass as a null array instead of a list to enhance type safety and prevent potential null pointer exceptions
added stream ( ) and parallelStream ( ) methods to MapIterable and PrimitiveObjectMap classes with default spliterator and parallelStream implementations to enhance
replace return statement with a clone method for notifInfo to ensure that notifInfo is not modified externally to prevent potential data loss
[ wip ] fix nullpointerexception in appw
refactor AEADBlockCipher class to improve security and maintainability
added a method ` isVariableLocal ` to check if a variable is local in ` ILocalVariableAwareVariablesMap ` and ` WebVariablesMap
added a null and empty check for ` id ` in ` PackageResourceTable . java ` and changed ` DEFAULT ` from best to legacy in ` Ro
None
refactor SignPlugin to accept a ServerCodecConfigurer parameter to enhance flexibility in handling HTTP message readers
refactor Int2ObjectCache class to improve performance and maintainability
added validation for the remote repository in StandardMavenAuthenticationProvider . java to ensure that the remote repository is validated before proceeding with authentication
refactor AudioNode class to improve code readability and maintainability
added SSL context initialization and exception handling in LinkyHandlerFactory and EnedisHttpApi to enhance security and error management during SSL connection attempts
added imports for SQL functions and refactored the HiveFunctionRegistry implementation to enhance functionality and improve code clarity
no effective change - code cleanup - fix typo
updated the ` getBuildTargetForAlias ` method to accept a ` possiblyFlavoredAlias ` parameter and adjusted the alias handling logic to enhance flex
camel - 14263 : camel - olingo2 - allow to configure olingo2 endpoint to return all the feed entry ( # 797
added a map for retrieving Hive version and its equivalent version to ensure compatibility with different Hive versions
server : do n ' t try to expunge a vm that do n ' t have the right to expunge a vm ( # 3948 )
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that certain classes are outdated and should not be used
updated notification handling in ONDashClockExtension and AlarmReceiver to use getNoteTitle method to improve clarity and maintainability of note title retrieval
renamed ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and updated column types from " varchar " to " nvarchar
replaced ` commit ( ) ` with ` apply ( ) ` in multiple classes to standardize method calls and improve code clarity
updated AsyncTimeoutTest to use TestIdleListener instead of null to enhance test reliability by tracking idle connections
[ beam - 8470 ] fix flaky testbigquerytable in bqioit
added background resource setting for the predicted icon in HotseatPredictionController and set it to null in BubbleTextView to improve visual clarity by resetting the
mondrian : fix typo in property name .
add a new abstracttestnativesystemqueries test for native query runner
refactor LIMEExplanation to use a map for retrieving active features to improve clarity and maintainability of the code
added a new command - line argument list to the AppleSimulatorController and InstallCommand classes to enhance flexibility by allowing users to specify command
refactor LineSelection to use GenericStyledArea for better readability to improve code clarity and maintainability
added checks for the availability of the Lifecycle state in ContainerBase and StandardContext classes to ensure proper handling of Lifecycle instances to enhance stability
added clipping to the outline of the QsbWidgetHostView to improve the visual appearance of the QSB widget
added flag processing logic in SQLManager and updated import statements in BlockTypeListFlag and PlotArea classes to enhance flag conversion performance monitoring and improve
refactor FloatingTextRenderer to conditionally set OpenGL depth based on floatingText ' s occlusion status
rename target _ com _ oracle _ truffle _ nfi _ backend _ libffi _ libffi _ libffi _ libffi _
no effective change - code cleanup
refactor regularization handling in the configureBaseLayer method to use L1Regularization and L2Regularization to improve code clarity and
added try - catch block to handle potential exceptions during read / write operations to improve error handling and logging clarity during write operations
changed the access modifier of the colorStack array from static to instance variable to allow dynamic assignment of the colorStack variable
updated method calls from false to true in Configuration . java to ensure compatibility with updated API requirements
convert currency parameter to lowercase when retrieving depths
updated MQTT publish value tests to reflect new version adjustments to ensure compatibility with new MQTT protocol versions
removed the ` versionedHashes ` field from the ` EngineNewPayload ` method and related tests to simplify the method signature and improve code clarity
reset trigger price on offer creation
modify studentfeedbacksubmissioneditsaveaction to redirect to home page when an error occur
removed debug print statements from I18NPageController to clean up the code and improve readability
hbase - 2663 addendum addendum to addendum to fix checkstyle error
fix for # 169 - enh : add support for lazy load on many bean
added a boolean field ` _ alwaysSaveUri ` and corresponding getter / setter methods in ` FormAuthenticator ` to control the behavior of URI handling based on
added methods to set layer type and paint in ShadowRenderNode to enhance functionality for setting rendering options
updated import statements and added popup menu visibility logic in LWChoicePeer . java to enhance popup menu visibility handling based on accessible context
refactor insert handling in StressProfile . java to ensure proper initialization of insert to prevent null pointer exceptions
updated method calls from ` asScalaIterable ` to ` collectionAsScalaIterable ` in ` ExamplesJavaTestWrapper ` and ` CoreTestWrapper
added null check for requests before processing in MockServerEventLog and added logging in HttpForwardObjectCallbackActionHandler to enhance stability by prevent
log warn when unable to load property file
refactor SessionDataSet initialization to use a try - with - resources statement to ensure proper resource management to prevent potential memory leaks
do n ' t set outgoing if the network be down
updated String instantiation to include the length parameter to enhance flexibility in command string handling
added methods to set latest consume time and energy in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to improve resource consumption management
added a method to set an invalid session strategy in SessionManagementConfigurer to enhance flexibility in handling invalid session strategies
enhanced error message for missing token in protobuf serialization
added a new test class ` MapAssert _ containsKeys _ Test ` for validating keys in assertions to ensure correct functionality of keys in map assertions
added a new ` JDBC4TemporaryPreparedStatementMethods ` interface and updated method signatures in ` JdbcProxyGenerator ` to use this interface to enhance
added a new method ` ensure ( Server server ) ` to ` ServerWebSocketContainer ` and updated the ` start ` method to accept a `
changed the type of ` result ` and ` langFlags ` from ` ImmutableMultimap ` to ` ImmutableListMultimap ` in ` CxxFlags .
pdfbox - 4892 : avoid npe if curvetoreplicateinitialpoint be false
added EMPTY array and updated hooks initialization in Method . java to ensure proper handling of empty method hooks
added a grantAccess parameter to MockAuthenticationManager and modified the return logic in MockAuthenticationManager to allow users to deny access to enhance security by allowing
updated JobListener methods to accept JobExecution as a parameter to enhance flexibility in job execution handling
added a check for file execution before checking file permissions in SharedLibraryLoader . java to ensure that only writable files are processed to avoid potential errors
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
bug 56689 - csv export : use event object when unmarshalling work
added new constant values for BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , and PROFILE _ NAME in BundleConstants
change the parameter type of applyRule method from Hashtable to Map to improve flexibility in applying rules to multiple bib entries
mow - 169 move audio to correct place
updated texture filters and modified container dimensions in JoglGraphics . java and ProjectiveTextureTest . java to enhance texture processing accuracy and improve texture
changed the return type of the setResourceToDelegate method from a void to a File object in MultiResourceItemWriter . java to allow the method to
camel - 14263 : camel - core - optimize routedefinitionhelper to support property placeholder .
updated the condition in ActionScheduler to check if the last attempt time is equal to the current time and adjusted the expected value in TestActionScheduler to ensure
updated dbg _ zip assignment to use a temporary directory to avoid null pointer exceptions
update notification overlay to listen to rendering debug config .
replaced the gate reset method with a resetGate method in BlockGenericPipe . java and added a resetGate method in Pipe . java to improve gate management
replaced direct instantiation of TestSupplementary with a try - finally block to ensure Locale is reset after each test execution
fix the team color in the demo
replaced HashSet with ArrayList and added logging for activeMatchedStates in SequenceMatcher . java to improve performance and enhance debugging capabilities
updated the condition to check if the annotation is null to ensure that the method correctly handles null annotations
updated error handling in StorageResources and added logging in StoragePluginRegistryImpl to improve error reporting and enhance debugging capabilities
refactor ` CallTreePrinter ` to introduce a new method ` toCsvFile ` for CSV file generation to enhance code readability and
added null checks for note and noteTmp in DetailFragment . java to improve code robustness by preventing potential NullPointerExceptions
added a peakTasks counter and modified how loaded tasks are calculated in AssetManager . java to ensure accurate loading ratio based on the number of tasks
simonstewart : make the native event support work on window
added metadata properties for score and fetch interval in Injector . java to enhance scoring and fetch interval functionality in the crawling process
updated import statements from ` org . apache . commons . collections . listUtils ` to ` org . apache . commons . collections4
added a method ` isShareSchema ( ) ` to the ` CoreContainer ` class and a corresponding test method ` testShareSchema ( ) ` in
updated size calculations to use a boolean parameter for better flexibility to ensure accurate size representation across different scenarios
added a assertNull method to the VersioningTest class to ensure that versioning tests correctly handle null values
updated SQL query preparation in Field . java and modified SQL query in AbstractJdbc2DatabaseMetaData . java to ensure compatibility with PostgreSQL versions
[ java ] do n ' t log leadership term event if there be no leader .
added a method to build the media type for the ServerWebExchange to ensure the correct content type is used based on the request headers
replaced ` fillUsingLengthPrefix2 ` and ` fillUsingLengthPrefix2 ` methods with ` fillSlice ` in multiple classes to enhance
removed redundant checks for isCompactedBase in AcidUtils . java and added a new test for compaction in TestCleaner . java to
update immutableStorageScheme initialization to use a default value of one - cell qualifier encoding scheme to ensure consistent handling of null values for immutable storage scheme
added new files PojoProducersCustomized . java and RestProducersCutomized . java to extend PojoProducers and RestProducers
updated the retrieval of " http _ client _ tls _ cert " and " http _ client _ tls _ key " to use CACHE _ SECTION _
fix ( aesgcmsmvkeymanager ) : do n ' t register aesgcmsgivprotoserialization
added a new item to the replacements list for the wooden slab in Oredictionary to enhance the functionality of the Oredictionary
refactor multiple session - related classes for improved organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed the ` SourcePathResolver ` parameter from the ` UndefinedSymbolsLinkerScript
prepare next release 3.2 : update doc tree
no effective change - remove unused test
updated spriteBatch drawing position in HelloWorld . java to correct the positioning of the sprite for improved rendering accuracy
refactor PlayerFunctions and PlotId classes to improve permission handling and format string concatenation to enhance readability and maintainability of the code
added a deprecated version constant for Lucene 8.5 . 0 to indicate that this version is outdated and should not be used in new development
updated print statement formatting in SSLSocketImpl . java to improve readability of the output
added a new test method for casting a signed integer to a signed integer in SelectTest . java to ensure correct handling of signed integers in SQL queries
changed the type of ` dependenciesType ` from ` String ` to ` SemanticGraphCoreAnnotations . DependenciesType ` and updated related logic to
refactor ` NoSuchBuildTargetException ` to use ` parseContext . makeTargetDescription ( buildTargetName , ParseContext parseContext ) ` instead
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` TestOutOfMemory . java ` to improve test coverage for memory allocation scenarios
increased the capacity of configBlocks from Block . blocksList . length to 256 to accommodate larger data sets to enhance performance by allowing more
replaced logging statements with system . out statements and updated version checks in BukkitMain . java to improve clarity of log messages and ensure
added support for escaping PostgreSQL questionmarks in SQL statements to enhance SQL escaping functionality for PostgreSQL queries
added methods ` ofAll ` and ` withAll ` to the ` MutableBagFactory ` and ` MutableBagFactoryImpl ` classes to en
added validation for HTML escape codes in file names in BuildNavAndPDFBody . java to ensure proper handling of file names to prevent runtime exceptions
updated MqttBrokerConnection initialization to include a boolean parameter to enhance flexibility in connection configuration
updated ChangeSet retrieval logic to ensure root change log is used if none is available
( chore ) camel - rocketmq : fix checkstyle issue
added HiveMetaStoreClient to drop a database in TestHiveMetaStorePartitionSpecs . java and TestObjectStore . java to enhance database management by
added a " order _ currency " parameter to the BithumbAuthenticated class and updated the BithumbAccountServiceRaw class to include this parameter to
deleted the SSEFluxWebConfig . java file to remove unused configuration related to SSEFluxWebConfig
updated JsonBuildHelper and IDocBuildTemplate to use isVoid ( ) instead of getReturnType ( ) . getFullyQualifiedName ( ) to
added a method to list YAML - based detection configurations and updated YAML _ READER to use it to improve the functionality of YAML - based detection
removed public access modifier from equals and hashCode methods in Marker . java to enhance encapsulation by restricting method visibility
refactor thread creation to use a lambda expression for better readability to improve code clarity and maintainability
added unit tests for the ` PersonWithAList ` class and created a new ` PersonWithAList ` class with a list converter to
mow - 162 fix applet panel size sync issue
added a delay to set toolbar visibility to GONE after a delay to improve UI responsiveness
refactor the ` initFirstPageReader ( ) ` and ` isExistOverlappedPage ( ) ` methods in ` SeriesReader . java `
server : if vr be not running , do n ' t try to save password on vm that do n ' t have a running vr
reset variables related to output and character encoding in Response . java to ensure proper resource management to prevent potential memory leaks
added a check for assignment side effects in GroupDialog . java to enhance error handling during assignment side effects
updated JSON and JSONObjectConvertor classes to improve code clarity and maintainability
updated condition in FileUploadApiController to check for maxWidthWithMargin instead of maxHeightWithMargin to ensure icon dimensions do not exceed maxWidthWithMargin to en
refactor methods in RegisteredServiceProperty , JwtTokenCipherSigningPublicKeyEndpoint , and JwtTokenCipherSigningPublicKeyEndpointTest to improve
added mime type checks for UNIX and Windows environments in Basic . java to ensure proper handling of content types for different operating systems
improve netty compression / decompression performance
added a new method ` doesClassLoaderDescendFrom ` to ` Util `
removed unused imports and simplified the connect method in ChannelProvider and ProxyChannelProvider to enhance code readability and maintainability
added a new test for handling empty final columns in CSV output to ensure proper handling of empty final columns in the CSV output
added compass gravity and margins to NearbyMapFragment to enhance user experience by providing better compass positioning
added a new test method for interpolation calculations in GeoPathTest . java to ensure accurate distance calculations between legacy and legacy points
added exception handling for Parquet filter predicate conversion in multiple classes to improve error handling and provide clearer diagnostics for unsupported filters
added a condition to set the language of the current audio track based on the stream type and its lang setting to ensure correct language handling for video tracks
added warning log when schemas in new version be less than the old version .
replaced System . arraycopy with addAll for array manipulation in multiple array classes to improve code clarity and reduce redundancy in array
no effective change - code cleanup
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a map of registrations instead of a list to enhance
added a method to reset the UI state in SchemaUpgradeHelper to ensure the UI state is properly managed
added a new boolean field ` failedStep ` and modified conditions for handling pending exceptions in ` JUnitReporter ` to enhance error reporting by
fix entity selector not allow . in entity selectors
added Closeable interface to Selector class to enable closing operations to prevent memory leaks
updated MaxConcurrentStreamsTest to use MultiplexConnectionPool for improved connection management to enhance performance and flexibility in managing concurrent streams
added multiple stringType ( ) calls in CoreOptions . java to ensure consistent string type handling across the codebase
updated HQL query rendering logic to include character and parameter handling based on context checks to enhance query parsing accuracy and compatibility with EclipseLink ' s
updated HTTP status checks to include SWITCHING _ PROTOCOLS _ 101 , NOT _ MODIFIED _ 304 , and replaced SC _ OK with NOT _
pdfbox - 4892 : fix typo find by codespell on fossies . org
improve performance of hikaricpcollectortest
refactor ParquetFormatPlugin and ParquetGroupScan to improve metadata handling and cache management to enhance code clarity and maintainability by
updated the ` isSuccess ` boolean initialization and added compilation mode handling in ` Jsr199Javac . java ` to improve compilation behavior and enhance
added a listener to the BaseTableModelListener class to notify listeners of table changes to enhance event handling for the SortedTableModel
updated server configuration to allow integers between 49152 and 65535 to accommodate larger values
added document provider authority handling in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with devices running KitKat and above
removed redundant logging call in MainApp . java to streamline the code for better readability
added ThrowableAnalyzer to handle wrapped RequestRejectedException in FilterChainProxy to improve exception handling for wrapped RequestRejectedExceptions
updated method calls to use ' this . ' instead of ' length ' for clarity to improve code readability and maintainability
pdfbox - 2576 : throw illegalargumentexception if filterlist be empty
add a new class TbStopWatch to manage Stopwatch functionality to provide a structured way to manage time and last task time in the application
corrected the initialization order of the PListStore class to ensure consistent behavior during initialization
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new development
set the current thread context classloader to ensure proper class loading for the current thread
fix checkstyle issue in forgehooks
updated minSdk from VERSION _ CODES . P to VERSION _ CODES . O _ MR1 in ShadowRttCallTest . java and Shadow
corrected the spelling of ` indexInTickArray ` to ` tickArrayIndex ` to improve code readability and maintainability
# 1686 - enh : add beanpropertydescriptors . getsimplename ( ) ... for query plan
updated JavaScript and CSS resource paths in response rendering and added a new WroSassProvider class to enhance resource processing capabilities to improve resource management and
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` to verify the functionality of retrieving the
rename ` ` appContextLocation ' ' to ` ` contextConfigLocation ' ' for clarity
modified exception handling to check for ` CertPathValidatorException ` before throwing ` CertPathValidatorException ` to ensure proper exception handling for specific exception types
benchmark : make writeoutputsolutionenabled configurable
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to verify the reopening of a mapped file volume with page size and node size to ensure proper
added a new recipe to the game registry for the slime ball in BuildCraftTransport . java to enhance the visual representation of the slime ball
added bounds checking for elements in the SequentialAccessSparseVector class and introduced a test for iterators in AbstractVectorTest to enhance robustness
added handling for Shulker entities and updated entity management logic in BukkitMain and EntitySpawnListener to ensure proper cleanup of entities and
added a getDebugLogger method to DIHWriter and implemented it in SolrWriter to provide access to the debug logger for better debugging
log warn if destination name be longer than ' maximumfilenamelength ' system property
updated UpToTagChangeSetFilter instantiation and added a method to check if a tag is already seen in the Liquibase class to enhance tag
fix checkstyle issue in util / gearpump / gearpump / translator / gearpumpsource . java ( #
refactor BrokerRoutingManager to improve clarity and maintainability of the code
updated volumePaint and upPaint values from gray to GREEN to improve visual clarity and consistency
refactor InsettableFrameLayout to use LayoutParams directly instead of FrameLayout . LayoutParams to improve code clarity and maintainability by
added duration functionality to BuildTargetDurationListener and updated corresponding tests to enhance rule duration tracking and improve test coverage
updated database profile checks in migration test classes to use a unified assumption for active profiles to enhance clarity and maintainability of database migration tests
added null check for user before processing claims in OAuthConfirmationController to prevent potential NullPointerException when user is null
camel - 16400 : camel - core - allow to replace route from endpoint to another endpoint .
use non - blockingset instead of concurrentskiplistset in cassandraconnection
api : add networkid parameter to listpublicipaddresses api call ( # 3948 )
added functionality to ignore battery optimizations in ShadowPowerManager to enhance the power manager ' s ability to manage battery optimizations
updated version property retrieval in Jetty . java to ensure compatibility with the current build properties
added unit tests for verifying invocation order in the VerificationModeBuilder to ensure robustness of invocation verification logic
refactor debug force evaluation logic in TRegexExecNode to improve clarity and maintainability of the code
added " - foreground " to the profile start argument in NewProfileExtensionConnection . java to enable foreground mode for profile execution
replaced TimeUnit with IOUtils for thread management in MiniSolrCloudCluster . java to improve resource management by utilizing IOUtils for closing the executor
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` for better performance and clarity
updated log messages to use the file name instead of the file object to improve clarity and consistency in logging
updated skipped entries in ClassFileReader and JdepsTask to include exception message format to improve error reporting for skipped entries
added LinkStorage and modified FetcherMain to use GermanAnalyzer for document storage to enhance document retrieval capabilities and improve German
modified the ` populateBubble ` method to include an existing bubble parameter and adjusted related calls to enhance bubble population functionality and prevent potential null pointer
updated exception handling in ScheduledJob and CronScheduledRoutePolicy classes to improve clarity and consistency in error reporting for scheduled job execution failures
refactor ` buildRpcExt ` and ` buildRpcExtJson ` methods to use ` buildRpcExt ` and ` buildRpcExtJson
[ java ] use nak _ multicast _ delay _ generator instead of nak _ max _ backoff _ default .
updated Gson creation and expiration handling in ClientInformationResponseView . java to include client information and expiration properties to enhance the response to include additional client
added a check for zero amount before setting the average price in limitOrders to avoid potential division by zero errors in order processing
removed rawExecutionReports ( ) method from executionReports subscription in BinanceStreamingMarketDataService to simplify the subscription logic for execution reports
added a fail method to the LdapTimeoutTest class and updated related test assertions to enhance error handling and improve test reliability
added checks for existence of the user dictionary file before reading it to avoid potential errors when the user dictionary does not exist
added a check for a password file or credential store alias before updating the password configuration in AmbariServerConfigurationHandler to ensure the password configuration is only
added SegmentChecker import and implemented isParsed method in SegmentChecker to skip parsing segments that have already been parsed
[ hotfix ] [ yarn ] make application _ attempt _ failures _ validity _ interval configurable
do n ' t unload h2 driver if it be not present
hbase - 26937 tablesnapshotinputformat # getscannerreadtype ( ) should set default readtype to stream
added fixed height and width options to the LoginInstanceRequest class to enhance flexibility in managing instance login configurations
added a cornerRadius parameter to the update method across multiple classes to enhance functionality by allowing customizable corner radius values
updated COMMANDS _ TO _ REMOVE list to include formatted tables , indices , and databases to enhance command filtering capabilities for better resource management
added a retry mechanism to handle connection attempts based on the ` doRetryOnConnPool ` flag to improve reliability in retrying connections on connection failures
renamed the method ` txnEnsureReserve ` to ` txnCheckReserve ` and introduced a new method ` txnEnsureBackupReserve ` to enhance cl
added a new field ' strings ' with a char [ ] [ ] representation of the strings array to the FirstOfStringsMatcher class to enhance the
updated DELETE statements to use " DELETE CLIENT SELECT " instead of " DELETE ROWS " and added a new ExplainPlanTextTest class for
added a retryable check for SocketException in BaseServiceException to enhance exception handling for retryable exceptions
added support for rapid install types in AdbHelper and RealAndroidDevice classes to enhance flexibility in managing rapid Android applications
updated the regex pattern for generating the SeedPattern in SortTest . java to ensure correct formatting of the generated SeedPattern to enhance readability and maintain
refactor MultimapSubject to use a factory method for better clarity and maintainability to enhance code readability and facilitate easier
updated return statement in Workspace . java to adjust the positioning logic for hotseat to correct the logic for determining display position
added support for transcoding audio and video in Transformer and TransformerInternal classes to enhance transcoding functionality based on media item count
added localization functionality using UIManager in Picker . java to enhance internationalization support for string inputs
( chore ) camel - cxf - cxfrs : fix npe in defaultcxfrsbinding
hhh - 16625 add support for pessimistic lock acquisition in postgresql dialect
added null check for queryId and improved error handling in TestJdbcDriver2 . java ;
[ beam - 8470 ] add useunboundedpcollections category to parardotest
updated text formatting in GpsSimpleViewFragment to use formatted file names instead of folder names to improve clarity of file names for better readability
[ java ] remove unused leadershiptermid parameter .
refactor HttpExchange initialization to use a local variable to improve code readability and maintainability
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit 5
corrected the method name from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to ensure consistency
added null check for the Tree object before accessing its properties to prevent potential NullPointerException when the Tree is null
pdfbox - 2576 : use double instead of float for font size
changed email handling from a single email string to an array of email strings to improve flexibility in matching email addresses
refactor Exclusion handling in RawMavenResolver to use a HashSet for better clarity to enhance code readability and maintainability by
added DSXExchangeInfo and quotedCurrency fields to DSXAdapters , DSXPairInfo , and DSXBaseService classes to enhance
refactor multiple test classes to improve code organization and maintainability
[ drools - 90 ] fix incremental compilation failure when kiemodule pom be invalid
updated the initialization of ` copy ` to use ` finale - k ` and added a conditional check for ` sobj . has ( k ) `
camel - 15836 - fix typo in jaxb dataformat javadoc
truffle / instrumentation : fix compilation error in hostfielddesc
added a method parameter annotation for " java . util . concurrent . CompletableFuture " in the database to specify the type of completion stage to enhance type safety
updated mFreezeCheckPoint calculation to adjust the duration threshold based on the duration threshold from 9000ms to 10000ms to accommodate more time for
added Whitebox annotations to the PowerMockRunner and removed unused imports in PowerMockRunner to streamline the code by eliminating unused dependencies
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure compatibility with the real type
refactor indentation logic in TabsAndIndentsVisitor to improve clarity and structure to enhance readability and maintainability of the code
updated TestSingleTokenTokenFilter to extend TestCase instead of LuceneTestCase to ensure compatibility with the latest testing framework version
added a new column ' wrappedText ' class to the HtmlProcessInformationsReport to enhance the report by including text wrapping functionality
added LobHandler and LobCreator to JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository to enhance execution
added a conditional check to prevent adding a new media folder if the new media folder visibility is disabled
added null checks for ` actor ` and ` firstWidget ` and ` secondWidget ` parameters in ` SplitPane . java ` to ensure proper handling of
added support for parameterized types in RemoveUnusedImports . java to enhance type handling for parameterized Java types
updated debug logging statements to use ` this . getVersion ( modInfoList . get ( 0 ) ) ` instead of ` getModFileInfo ( ) ` to
changed the logger declaration from ' this . getClass ( ) ' to ' TicketGrantingTicketImpl . class ' to ensure proper logging context for the
updated timeseries creation syntax in PhysicalPlanTest . java to enhance clarity and accuracy of timeseries creation
added a method to check if a value is present in AttrData and updated valueFor handling in Converter to improve value validation logic and enhance error handling
updated conditional logic in CPlatformResponder . java and added methods in LWCToolkit . java to check for character modifiers in US international PC
[ java ] add publication connection timeout environment variable .
added a condition to check if the request URI starts with " / css " , " / images " , " / favicon " , and " /
added assertion to verify that the wellbeing test apk installation is successful to ensure that the device is rooted before proceeding with the installation process
no effective change - code cleanup - remove oracleansisqlrowslimiter
added MultiMap support to TestSimpleBodyHandler and TestVertxTLSBuilder to enhance testing capabilities for multi - threaded environments
updated Java library path references in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with different Java library versions
added a boolean flag to control dismissed haptic runs in TaskViewTouchController to improve control over haptic dismissed state during transitions
improve handling of world explosion cause . close # 951
removed stable ID handling from SymbolInputAdapter to streamline the code for better readability and maintainability
updated API endpoint parameters from limit _ bids to limit _ asks in Bitfinex . java
added a check for backslashes in the result string to ensure proper handling of backslashes in the result string
added toString ( ) method to KubernetesLeaderElectionDriver and ZooKeeperLeaderElectionDriver classes to provide a human - readable representation
refactor SqlSessionFactoryBean to improve session management logic
[ 3.0 ] fix tripleinvoker return wrong argument type ( # 9059 )
replaced error logging with a new exception throwing mechanism to improve error handling and provide clearer error reporting
added a method to check if the threadlocal Deadline has been started and updated the Deadline class to utilize this method to improve timer management to
added handling for ClosedChannelException to improve error messaging for closed channels in NettyRequestExecutor
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException
[ flink - 18552 ] [ checkpointing ] do n ' t call master hooks reset in region recovery
fix entitydatajsonformat # extractmap ( object , object , string ) for mappedcontainers
[ iotdb - 6570 ] fix walnode crash when there be no unpinned table in active wal ( # 6570 )
added a test for retrying the same host on callback failures in HttpTest . java to ensure proper handling of callback failures in the endpoint
truffle : fix typo in package - info javadoc .
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server escape query functionality to ensure correct behavior of escape characters in SQL Server queries
added @ NonNull annotations to constructors and methods in CamelModule to enhance null safety and prevent potential NullPointerExceptions
use util . wait instead of synchronized block
move parameterflags from com . kenai . jaffl to com . kenai . jaffl . provider . parameterflags
refactor CropperUtils to use a dedicated method for creating CropperBehaviour instances to improve code readability and maintainability by reducing dup
removed appName parameter from the configure method signatures to simplify method calls and improve code clarity
add test to cover issue # 19.3 - dev
replaced ` setHeadless ( true ) ` with ` addArguments ( " -- headless = chrome " ) ` in multiple test classes to standardize
updated the value assignment in VersionedValue . java to intern the value before setting it to ensure proper internationalization of the value
added a check for " MOVE " in the condition to enhance functionality to support MOVE requests
updated time formatting for US _ MONTH _ DAY _ YEAR2 _ TIME and ISO8601 _ PERIOD _ MICROS in FixedDateFormat .
removed the shaded imports from multiple test classes to simplify dependencies and improve code clarity
[ hotfix ] fix checkstyle violation in hsbuffercontext
added a permission check for the untrusted visit flag in the plot to enhance security by preventing untrusted visit permissions
do n ' t try to register a jabber protocol if it ' s n ' t register .
update BasicURLNormalizer to handle curly braces correctly to ensure proper normalization of URLs containing curly braces
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation and restrict access to subclasses
added a condition to check if ` res ` is equal to ` enc1 . getClockRate ( ) ` before comparing ` enc2 . getClock
added a method to retrieve the project path and updated the ` generateProjects ` method to return an ImmutableSet of generated project paths to enhance
refactor calendar ID retrieval logic in HostLocaleProviderAdapterImpl . java to improve code clarity and prevent potential ArrayIndexOutOfBoundsException
added a new file MSwingUtilities . java to display exception messages and scaled images to target dimensions to enhance user experience by ensuring images are
camel - 14263 : camel - mail should use async so you can do it yourself
added @ RefreshScope annotations to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enhance resource management and authentication handling capabilities
added unit test base on user forum issue
added Main class and ScriptRenderer class to handle scripting templates to facilitate the execution of scripting templates in the application
added a condition to check if the request is not in the ` _ inputState ` when encoding ` MimeTypes . FORM _ ENCODED
added checks for width and height in BitmapFont , added isDescendant method in Group , FlickScrollPane , and SelectBox classes to enhance
refactor deployment failure reporting to use a context shutdown hook to ensure proper termination of the context during deployment failures
add a forceignore parameter to the lexicon recipe mapping to allow the lexicon to be ignore
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to allow more time for operations to complete before timing out
updated import statements in LoincHandler . java to use a wildcard import for StringUtils . isNotBlank and StringUtils . trim to enhance code read
use classloader . getresource instead of hardcoded class
added a new file ` FieldUtils . java ` to implement reflection - based access control for field access to enhance the functionality of field access
updated assertion in DeferredAttr . java to check for speculative type mode and added a new class DoubleStaticImport . java with a test method to ensure
changed the layout inflation from workspace _ custom _ content to workspace _ screen and added padding to custom content to enhance the widget appearance by
add save last account setting functionality to xabber account manager .
added a new method ` setvar ( LineReader lineReader , PrintStream out , PrintStream err , String [ ] argv ) ` to the ` Commands `
fix animal tame not be send to the player in passive mode . close # 2328
added null check for value in WindowFrame . java to ensure proper handling of invalid unsigned values
pdfbox - 2576 , pdfbox - 2576 : fix bug , a suggest by valerybokov
added a method to set the application mode in PageListController to ensure the application displays the current mode
added methods to handle build arguments in the ImageFromDockerfile class and created a corresponding DockerfileBuildTest class to enhance flexibility in
added a null check for threadInfos [ threadId ] before creating a new ThreadInfo instance to avoid potential NullPointerExceptions when threadInfos [ threadId
updated condition in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of negative to improve precision in determining pie chart visibility
[ hotfix ] [ checkpointing ] log recovered input channel during checkpoint
added new schema attributes to the Schema class to enhance schema management capabilities for better data handling
added a minimumSimilarity parameter to the FuzzyQuery constructor and updated related methods to enforce a valid similarity threshold to enhance flexibility in fuzzy
replaced the ` addActionsView ( ) ` method with ` setActionsView ( ) ` in ` RecentsView . java ` to clar
log a warning if immediate flush be set in the enclosing appender .
updated AutoConfigureAfter annotations to include additional configurations for Rabbit and Kafka auto - configurations
added null check for the component parameter in JLayer . java and created a new test class bug6875716 . java to ensure proper handling of null
replaced ` avro . shaded . com . google . common . base . Function ` with ` com . google . common . base . Function `
refactor block management in BciBlockMapping and improve block handling in GraphBuilderPhase to enhance clarity and functionality of block processing and
added legacyRenderer property and methods to control the legacy rendering of the icon to enhance flexibility in handling legacy icons in the application
refactor ` intToFourBytes ` method to use ` Ints . toByteArray ` instead of ` intToFourBytes ` to improve
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is null
removed the Comparable type from the Comparator constructor in TypeTest . java and added a new Department class with a comparator method in TypeTest . java
refactor DocIdSet class to improve code readability and maintainability
updated the end time assignment in UserRuleAnomalyFunction to use the currentKey bucketMillis instead of null to ensure accurate time representation
added error handling for NumberFormatException in VisualScoreTagTest to ensure that the test fails gracefully when NumberFormatException occurs
added class loader setting for enhancer to ensure proper class loading for mock objects
added a new ` OriginalFormat ` class to ` ConverterWithEnumFormat ` for string manipulation of ` obj ` in ` ConverterWithEnumFormat `
updated SimpleDateFormat initialization to use a constant for the pattern " yyyy / MM / " to improve code readability and maintainability
refactor JAWTRenderer class to improve code readability and maintainability
camel - 14263 : camel - aws2 - * : enable autowire on the autowire on the aws2 - lambda client , reg
server : fix npe in user _ vm _ get _ public _ ip _ address _ generation ( # 6663 )
added a condition to check for " Authorization " header in ProxyServlet to ensure proper handling of authorization headers in HTTP requests
use delegate . execute ( ) instead of submit ( )
added getDetails ( ) and setDetails ( ) methods to Authentication , AbstractAuthenticationToken , and UsernamePasswordAuthenticationToken classes to provide detailed information about authentication
updated random boolean initialization to include a likelihood of zero to enhance variability in random number generation
replaced ` appendDot ( ) ` with ` endSentence ( ) ` in multiple classes to standardize the method naming for better clarity and
make timeformat . formatforconsole locale - independent
replaced specific imports with a wildcard import and modified the handling of parsed arguments in GroovyParserVisitor . java to enhance code clarity and ensure correct
added inset bounds for top and bottom inset pixels to ensure proper layout adjustments based on inset boundaries
refactor GestureState initialization to use a dedicated factory method to improve code clarity and maintainability by centralizing state management
[ llap ] use java . time . instant instead of java . time . date
refactor Openblas and Openblas _ Nolapack Java files to improve code clarity and maintainability
replaced IOUtils with try - catch for closing the piece storage to improve error handling by catching potential IOException
added synchronized keyword to the initTxnMgr method to ensure thread safety when initializing the HiveTxnManager
increased the timeout duration for recoveries from 120 to 480 milliseconds and increased SO _ TIMEOUT from 20 seconds to 4 seconds in AbstractFullDistribZk
added a new class ` SearchResults ` to handle search results to provide functionality for retrieving and processing search results
refactored thread CPU refresh handling in CPUSamplerSupport . java to use a Refresher instance to improve code clarity and maintainability by
initialize body if necessary
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwardsCompatibility . java
updated the ENABLE _ TWOLINE _ ALLAPPS feature flag from DISABLED to TEAMFOOD and modified the AppIcon method to use textContains
added a new API endpoint to retrieve tenant pools for the current instance to enhance functionality by providing access to tenant pool information
added methods to early terminate sorting based on Doc ID and prefix in TopFieldCollector to enhance termination logic to prevent null pointer exceptions
added ` isToString ( ) ` method to ` InlineBytecodeGenerator ` and updated test cases in ` InlineByteBuddyMockMakerTest ` to
added logging statements in CxxCompileStep and CxxPreprocessStep classes to improve error handling during compilation and preprocessing processes
add utility method to remove a character from a string ( like ` ` - ' ' ) .
[ 3.0 ] fix metadata service protocol not support ( # 9059 )
[ drools - 7670 ] add datatransformer interface to make it easy to use in kie - client
change data type from Collection < ? > to Collection < Number [ ] > in DistributionGraph . java from Object [ ] to Number [ ] to improve
removed the ` interesting ` check from the ` FormatStringChecker ` class to simplify the class logic for better readability and maintainability
updated initialization of SolrCore in ElectionContext . java to ensure consistent initialization of the SolrCore instance
refactor ITestDbTxnManager class structure to improve code readability and maintainability
refactor database connection handling to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a new method ` testMapModel ` to ` CodeFirstPojoClient ` and updated ` CodeFirstPojo ` to utilize
pdfbox - 2576 : improve error message , a suggest by valerybokov
added null checks for selection and scaleOffsets before setting selection options to improve code robustness and prevent potential NullPointerExceptions
change method name from ` updatePlayerStepStatus ` to ` tickBelt ` in ` ItemTravelBelt ` to clarify that the b
added logging for lack of appearance stream creation in AppearanceGeneratorHelper . java to improve error handling and provide better diagnostics during appearance stream creation
changed the type of keys from SortedSet to LinkedHashSet to ensure predictable iteration order for hash sets
increased the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 and updated its usage in CancelEventTimer . java
updated preload values in dc1394 . java from " libdc1394 - 22 " to " libdc1394 - 25 " to reflect the
added a conditional check for agentSupport before setting all constructors to public in MainMockTransformer . java and created new classes MockStaticWithPrivateCtorTest and
pdfbox - 2576 : avoid classcastexception , a suggest by valerybokov
add a method to set the window title to the default toolkit
modify depth calculation based on pixel size to ensure correct depth value is assigned for different color models
added error handling for unsuccessful responses in OkHttpDataSource to improve error reporting and provide clearer context on response errors
added a static method ` exit ` to ` TopLogging ` and replaced ` TopThreadGroup . exit ( ) ` with ` TopSecurityManager . exit (
updated start calculation logic in NativeRegExp . java to ensure correct starting index based on regex state
ignore test until optaplanner - 468 be fix
[ hotfix ] fix checkstyle violation in defaultallocator
added a method to clean entries without feeds in DatabaseCleaner and updated FeedEntryDAO to remove entries without feeds in FeedEntryDAO to enhance the
changed the return type of the appendToLabel method from void to AtomicCounter to allow the method to return itself to enhance method chaining functionality
[ java ] : replace busy spin idle strategy with noop idle strategy .
added handling for NOT _ MODIFIED responses in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure that headers are not written if they are
instrumentationpartialevaluationtest : rename spliceinstrumentlistener to toolevalnodefactory
removed the paintTabArea method from SynthTabbedPaneUI to simplify the code by eliminating unused functionality
modified KrakenMarketDataService and KrakenTrades classes to accept an additional argument for depth retrieval to enhance flexibility by allowing
camel - 14263 : camel - ftp component should use platform - independent file separator for file path normalization .
added a new method ` build ` to ` JavaProvenance ` and updated ` MavenProjectParser ` to utilize this new method to
added tracing and logging for registered Hive UDFs in HiveFunctionRegistry . java and implemented a new test for this functionality in TestInbuiltHive
increased loop iteration count from 100 to 200 to enhance test reliability by allowing more time for state updates
do n ' t send mutation if we ca n ' t find cf
added a check for writable output file before executing the command in NativeErrors . java to prevent errors when the output file is accessed as a root writable test
added error handling for package information retrieval in LauncherModel . java to ensure robust access to package information when accessing components
cloudstack - 10770 : do n ' t throw exception when fail to upgrade the database
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and update tests in FaultTolerantChunkOrientedTasklet
updated the condition to check for case insensitivity during string matching in LineReaderImpl . java to enhance flexibility in handling case - insensitivity options
added imports for SourcesFileErrors and refactored data table handling in Recipe . java to improve data table management and enhance code clarity
added import for Overview and modified task dismiss logic in TaplTestsTaskbar . java to manage overview tasks more effectively to enhance user experience
db upgrade : add dbupgradesystemvmsmatematexception to dbupgradechecker
removed unnecessary null checks in LdapClient . java to simplify the connection handling logic
refactor index handling in SequenceAction . java for clarity to improve readability and maintainability of the code
make cassandraserver . login ( ) thread - safe
added a check for synthetic fields in ReflectUtils . java to skip processing for fields marked as synthetic to improve performance by preventing processing of synthetic fields
added LoggerProvider to enhance logging capabilities to support application - wide logging in the application
changed the data type of ` builder ` and ` values ` from ` ImmutableMap < String , String > ` to ` ImmutableMap < String , Object > `
added a deprecationWarningIssued flag to indicate that multiple glue classes can be configure to indicate that the spring context cannot be re -
added a new method ` deepStart ` to ` Startables ` class to facilitate deep starting start functionality for startable objects
remove reserveprimitiveextensionarray ( ) , deprecate since 20.2 .
fix laser table not extend blockbuildcraft . api . power . ilasertargetblock
refactor the condition for checking object names to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
[ java ] do n ' t consume 2 * pageSize mem in memorylimittest .
removed null checks for handlerName and normalized length in RequestHandlers . java to simplify code logic and improve readability
updated logger retrieval in ProxyServlet to ensure consistent formatting of servlet names to improve readability and maintainability
updated python environment builder to filter only Python path variables to enhance flexibility in managing Python modules
updated audio format handling and error checking in DirectAudioDevice and Toolkit classes to ensure robust audio data processing and prevent runtime exceptions
added null check for enums in ElasticSearchStringLookupService to ensure safe handling of null values to avoid potential NullPointerExceptions
improve error message for unexpected end of segment
added initialization of policy in WebSocketSession to ensure proper handling of WebSocket session policies
removed the check for static fields of the current type in the Java2TypeScriptTranslator to simplify the initialization logic for variable declarations
added a webroot argument to the StaticHandler instantiation in UserService . java to allow dynamic configuration of the web application context
( chore ) camel - spring - consumer : migrate to junit 5
[ netbeans - 4071 ] use editorregistry instead of registry to get component list
replaced ` printHeaderObject ` method with ` createHeader ` method across multiple formatter classes to standardize header creation logic and improve code clarity
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and provide a
reset the buffer in the ReduceRecordProcessor class to ensure proper state before processing new records to prevent potential memory leaks
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground or mOriginalBackground are null
updated condition checks in FloatingDecimal . java and added a new ToString class for testing floating - point number conversion to ensure correct validation of decimal exponent values to
updated property type validation in PropertyDescriptor . java and added a new Test7189112 . java file with a test for property setter functionality to ensure correct
removed maxVersion parameter from getVersions method to simplify version retrieval logic
added a condition to set the origin header if it does not already exist to ensure the origin header is set correctly based on the security scheme
updated animation logic in RecentsView and added modal animation in TaskView to enhance user experience by providing visual feedback during modal transitions
updated error messages in ORCRecordReader for clarity and consistency to enhance readability and maintainability of error reporting
added new sample URLs for TearsOfSteel and Bipbop 4x3 variants in DemoUtil . java to enhance video playback
no effective change - code cleanup - remove unused variable
updated log messages to use the correct class name for HBaseRPC and RPCEngine in ExecRPCInvoker and WritableRpcEngine to improve clarity and maintain
added diagnostic logging to TestSpecificCompiler for diagnostic warnings to enhance error handling and reporting for specific compiler warnings
refactor WebSocket session creation logic in WebSocketEndpoint and add a test for session closure in WebSocketIT to improve session management and ensure proper handling of
updated delay values and method names for consistency and clarity to improve code readability and enhance maintainability
ww - 3473 update to support apache strut .
added conditional logic to stop the video stream based on the stream ' s stop property to ensure proper termination of video tracks when the stream is stopped
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new enum ` BittrexChartDataPeriod
gml example : remove unused import
updated the method call from ` s . SubStream ( 200 ) ` to ` s . Skip ( 200 ) ` in ` TargetType58 . java
hhh - 10956 - fix nullpointerexception for composite identifier
rename findfulltextaction to downloadfulltextaction for clarity
[ type : refactor ] optimize registeruri ( ) method ( # 6663 )
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code clarity and maintainability
added a check for non - blank OSDB hash before calling getInfoFromOSDbHash to ensure that the hash is not blank before proceeding with
added token transfer functionality to RuntimeImpl and MUtil classes to enhance token management for smart contract transfers
camel - 14263 : camel - ftp - use the current directory when delete a file
corrected a typo in the method call to improve code readability and maintainability
added validation for empty result sets in MapJoinOperator and updated join logic in HybridHashTableContainer to enhance robustness of join operations and
updated the constructor of ` HTTPSPDYAsyncEndPoint ` to accept an ` AsyncEndPoint ` instead of a ` Stream ` to enhance flex
added intent extras for tweet IDs in multiple adapter classes to enhance functionality by associating tweet IDs with their values in the intent
added handling for user proxy authentication in HttpURLConnection to ensure proper disconnection of the WebSocket connection when using a proxy
updated the ` _ numChildren ` variable to use ` AtomicInteger ` instead of ` int ` and increased the ` _ children _ per _ request `
added JWT support to multiple plugin classes to enhance security by ensuring compliance with JWT standards
disable fail test by default
[ drools - 7 ] remove unsupportedoperationexception from resourcefactoryserviceimpl
updated predicate classes to use NOT _ IN instead of IN , NOT _ IN , NOT _ IN , NOT _ IN , NOT _ IN ,
updated exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to use the OwnCloudAccount class to improve error handling clarity
added null check for witnessService before calling validateWitnessPermission to avoid potential NullPointerException when witnessService is null
updated the string construction for taggedCol in JoinDesc . java to include the expression string representation to enhance readability of the generated string
added a check to ensure the Javadoc is not present before setting the JavaDoc to avoid potential null pointer exceptions
renamed ` holderMethod ` and ` holderKlass ` to ` holderMetadata ` and introduced a new ` RedefineInterfaceCall ` class with
simplified the revalidate method calls to enhance readability and maintainability of the code
[ hotfix ] [ kafka ] replace unsupported metricgroup with unregisteredmetricsgroup
updated the calculation of the y - coordinate in Polygon . java to use the old x coordinate instead of a new one to improve clarity and maintainability
updated cache creation to accept a Configuration object to enhance flexibility in cache configuration handling
added a length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 class for testing URL resource retrieval to
refactor ShadowCookieManager to improve cookie management functionality
added a new authorization check for dropping an external table in Hive to ensure that external tables are not affected by backward compatibility
removed the WebGL type check from the condition in the if statement to simplify the condition for better readability and maintainability
sulong : cache byte order to improve performance
updated PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " to align with the
updated ` initWebViewLogin ` method to accept a ` baseURL ` parameter for web view login to enhance flexibility in handling web login requests
corrected the spelling of " output " to " output parameter . " in the exception message to improve clarity and accuracy of error reporting
removed the ` @ RequestParam ` annotation from the ` @ AuditEventsMvcEndpoint ` method and updated the ` AuditEventsMvcEndpointTests ` to include
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` and update references accordingly to clarify the purpose of the timer class
added functionality to remove a soft body from the dynamics world to ensure proper resource management and prevent memory leaks
changed interface declarations to public for SinkFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider interfaces to allow external access to these interfaces
[ hotfix ] [ log ] fix typo in log message
add a test to see if a jingle stanza have a non - redundant namespace . smack - 8
added a null check for redPlasma in the BuildCraftEnergy and BCStatCollector classes to enhance robustness by preventing potential
add x - http2 header support to response
updated member and denied handling logic in Remove . java to improve clarity and consistency in member and denied removal conditions
updated delimiter calculation and string formatting in SimpleReport . java to improve clarity and consistency in reporting elements
removed the option to ignore symbol files in the JavapTask and added a new test class T6863746 with a main method to verify functionality
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class to streamline the demo '
removed unnecessary try - catch blocks and added null checks for contract creation and contract error
do n ' t create input3d for applet that have intel _ realsense feature
ignore flaky kinesis integration test
scripttagpayloadreader : do n ' t throw parserexception , just return false
added an @ Override annotation to the getRepositoryFactoryClassName method to ensure that the method overrides the superclass implementation
updated the ` getExecutableCommand ` method to return a list of command strings instead of a single string to enhance flexibility in specifying executable
updated initialization of IOSGLES20 properties to ensure proper assignment of values
refactored UploadPathActivity to extend FolderPickerActivity and removed unused imports to streamline the codebase by eliminating unused components
updated return statements to conditionally return - 1 for DOCS _ ONLY index options to ensure correct handling of term frequency based on index options
fix ( jdttreebuilder ) : implicit constructor should not be set
added a database parameter to populateValidateNullable , populateValidateUnique , and populateValidateForeignKey methods to enhance validation logic to include a specific database type to
refactor Database class to improve code readability and maintainability
refactor SpringApplicationBuilder to improve code readability and maintainability
removed the ` indexOptions ` parameter from ` DefaultIndexingChain ` and updated the iterator assignment in ` PointInSetQuery ` to streamline the code
[ schematic ] remove too long schematic name ( # 1486 )
added a switch statement to handle specific collection types in AbstractCollectionAssert . java to enhance error handling for unmodifiable collections
[ hotfix ] fix checkstyle violation in processexecutor
refactor Compose and ComposeActivity to use AlertDialog for handling characters with a twit longer than zero to enhance user experience by
replaced the ` toggleKeepInSync ( ) ` method with a call to ` getFileOperationsHelper ( ) . toggleKeepInSync ( ) ` for
refactor ImageUtil to use MimeDecoder for Base64 decoding and add unit tests for embedded Base64 images to enhance image processing capabilities and
added new classes ` ControllerCounter ` and ` DBCallback ` to handle controller and database operations to facilitate monitoring and database operations in the application
added ' final ' modifier to the parameters of the deleteTicket method in EhCacheTicketRegistry . java to enhance code clarity by indicating that
added a new file FlywayMigrationRunner . java that includes a main method for testing FlywayMigrationRunner with XML configurations to facilitate
replaced ` isEmpty ( ) ` with ` size ( ) ` in ` HashMap . java ` and added a new ` OverrideIsEmpty ` class to
updated the version number from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to reflect the
added nullability annotations to the modifiers parameter in CompressionCodec and ZlibCodec classes to enhance code robustness by preventing null pointer exceptions
added null check for main manifest attribute in LauncherHelper . java and implemented a new createJar method in TestHelper . java to enhance robust
rename test classes to improve clarity and consistency in naming conventions
do n ' t allocate graal node count if not support
bug 56842 : make xssfsheet . cellcopypolicy independent of other policy
added a method to reset the icon load result in FloatingIconView . java to ensure proper state management during icon loading
updated formFieldValuesToCaps method to use getRawValueCharSequences ( ) instead of getValues ( ) to ensure accurate capitalization of field values
updated IconRecentsView to conditionally set the top and bottom margin based on the orientation of the item views to ensure proper item visibility for landscape
deleted the AddAdapter . java file to the functionality was no longer needed in the launcher
refactor constructor code handling in NonStaticLifter . java to improve clarity and maintainability of the code
added a boolean parameter ` processSortCols ` to the ` listBucketCols ` and ` listBucketCols ` methods to control sorting behavior based
refactor TestLogWatcher to use a dedicated looper method for message verification to improve code readability and maintainability by reducing duplication
added a print statement for the " < any > " token in Java2TypeScriptTranslator . java to enhance the output formatting for better readability
updated SDK version from " 4799589 " to " 4913185 " to reflect the new release version
set the Spring AOP proxy target class to " true " in the map to ensure compatibility with Spring AOP proxy configuration
removed a singleton lock from TypeCachingBytecodeGenerator to simplify the code by using a default lock based on configuration
added new method names for response and forward callbacks with string parameters in CallbackActionExamples . java to enhance clarity and usability of callback functionality with
modified the ` writeFile ` method to include an ` append ` parameter for controlling file appending behavior to enhance flexibility in file writing
updated MavenExecutionContextView to check for null mavenSettings and refactored MavenRepositoryMirror to streamline mirror application logic and improve
added a ` name ` parameter to ` PathSourcePath ` and updated constructors to accept a ` String ` name to enhance flexibility by allowing
updated OAuth20CallbackAuthorizeEndpointController to use the redirect URI directly instead of retrieving it from the servicesManager
replaced instances of ` EMPTY _ ANNOTATION _ ARRAY ` with ` AnnotationParser . toArray ( ) ` in multiple classes to streamline annotation handling by
updated methods in UserManagerCompatVL to use getBadgedIconForUser instead of getBadgedDrawableForUser and getBadgedLabelForUser for improved
updated the default value for the " line . separator " system property to specify the line separator for output
do n ' t implement interface or class that we ' re not interested in
sanitize the request string before putting them into the model
chore : update java and python dependency ( # 419 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` and added functionality to check its output to enhance error handling and
refactor CountersReader class to improve code readability and maintainability
refactor AllAppsRecyclerView and UserEventDispatcher to directly set containerType and log deep shortcuts open to improve code clarity and reduce redundancy
hbase - 26975 add deprecation warn to bytebuffallocator
fix flaky native query in testnativewindowqueries
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types based on generic information to improve type handling for synthetic and non
refactor TestFSTs class to improve code readability and maintainability
updated fillRect parameters to use getLabelTop ( ) and getLabelTextHeight ( ) instead of getLabelTop ( ) and getLabelTextHeight
hbase - 26975 hbase split policy should use initial size instead of flush size
added a call to reset the loaded state and start a loader in LauncherClings . java to ensure a fresh state for the model to enhance
removed null list of keys and updates from ManagedSelector . java to streamline code by eliminating unnecessary initialization
added a set of excluded datasources to the SpringDataSourceBeanPostProcessor class to allow users to exclude specific datasource configurations
added undo info to TableValuesView and removed null check for the callback in TableValuesPanel to improve code clarity and prevent potential null pointer exceptions
camel - 14263 - camel - aws : use client instead of create a new one internally
refactor channel handling logic in VelbusSensorHandler to use a loop for generating channel identifiers to improve code readability and maintainability by
disable unfavorable benchmarks by default
added a test for illegal database names in IoTDBSessionSimpleIT and updated PartialPath to throw an IllegalPathException for empty paths to ensure proper
added a call to resetNewFiles ( ) in GarbageCollector . java to enhance garbage collection functionality
renamed ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and introduced ` getHorizontalMarginPx ` method
reformatted code for consistency and clarity in CharTokenizer . java to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 419 )
api : fix typo in xenserver label
updated libGDX version from " 1.5 . 5 " to " 1.5 . 6 " and removed " 1.5 . 7 -
added a private set of metric names and a getMetricNames method to the SolrCore class to provide access to metric names for external use
updated MavenManifestFactory to use Fs . fromUrl instead of URI for resolving paths to improve compatibility with file system URLs
replaced direct call to ` System . getProperty ` with a constant for macOS detection to improve code readability and maintainability
refactor JdbcAggregationRepository to improve code readability and maintainability
added a slotList addition operation to the Frame class to ensure the slotList is updated with the contents of another Frame instance to enhance the functionality of
initialize m _ predCount to - 1 to ensure proper initialization of predicate count
added a mergeProperties method to ConfigurationSpringInitializer to merge configuration properties effectively
updated the ` setupLogging ` method to accept a ` org . slf4j . Logger ` instead of a string representation to enhance flexibility
replaced HashMap with LinkedHashMap for aliasToWork in multiple classes to ensure predictable iteration order of the results
added logic to lookup the JDBC handler map based on the class type and its superclass to improve type handling for JDBC connections
added debug logging statements to HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter classes to enhance trace
updated locale parsing logic to trim trailing semicolon from the well - formed string to ensure correct parsing of language range values to prevent potential parsing errors
added context handling in Http2ServerResponseImpl and VertxHttp2Handler to ensure proper context management during server shutdown
bug 56689 - xssfevaluationworkbook # gettable ( string ) : cache xssfevaluationworkbook table , to reduce memory usage
updated schema text formatting from VERBOSE to BASIC to improve clarity and consistency in schema text formatting
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to ensure compatibility with the latest MongoDB
replaced HashSet with LinkedHashSet for roots and leaves to maintain insertion order for better uniqueness
removed redundant assertions in SkewJoinOptimizer . java to streamline the code for better readability and maintainability
added a null check for the client ID in the DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to utilize this check to
reset the achievement list after achievement have be add to it
initialized default values for user and product name , version , and connection URL in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure default values are set
updated method name from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottomSheet
added LongBuffer support to ByteBuffersDataInput for reading long data to enhance memory management and prevent potential buffer overflow issues
renamed variables and methods related to file time handling in UnixFileAttributes to improve clarity and functionality to enhance code readability and maintainability by using
added a new file TestNoEagerReclaimOfHumongousRegions . java that includes a new class TestNoEagerReclaimOfHum
added functionality to conditionally hide the search bar based on user preferences to enhance user experience by allowing dynamic visibility of the search bar
use routes ( ) instead of router ( ) in envfeature
added null checks for cur and next variables in LineChartRenderer to prevent NullPointerExceptions during execution
added a new action ` ReloadPageAction ` to handle page reload functionality to enhance user experience by allowing dynamic page reload actions
changed log level from info to warn for non - existent entries in ` plot _ rating ` , ` plot _ helpers ` , and ` plot _
bump minimum spring version to 3.2 . 8 . release
added null check for currentClusterConfigForService to ensure configuration types do not have a selected version
use serviceloader instead of factoryregistry
added a finalize method to the HiveHBaseTableInputFormat class to ensure the table is properly closed after use to prevent resource leaks
added a stop statement executor method to JdbcConnector and invoked it in HiveViewImpl to ensure proper cleanup of resources to prevent potential memory leaks
updated feature settings in DocumentFactory and modified hints initialization in ComplexElementHandler to enhance compatibility with external DTD handling and improve flexibility in
updated JdbStopThreadidTest to use OutputAnalyzer for handling application exit status to improve test reliability and ensure correct output verification
added a method to retrieve the type of a ContentProvider in ShadowContentResolver and corresponding tests in ContentResolverTest to enhance type retrieval functionality to ensure
updated references in ExpressionThreadPoolManager to use a Future < ? > instead of Runnable to improve clarity and correctness of future handling
updated DEFAULT _ HTTP _ PORT property from " port " to " vertx . httpPort " to ensure correct configuration for the HTTP server
removed the capture listener from the buttonTable to simplify the listener setup for better readability
increased DEFAULT _ BATCH _ SIZE from 10 to available processors * 3 to optimize resource usage for better performance
[ hotfix ] fix checkstyle violation in taskexecutor
[ hotfix ] fix checkstyle violation in lambda rewriter
updated IllegalArgumentException message format in ProgressBar . java to improve clarity and consistency in argument validation
added an owner parameter to the onMessage method across multiple classes to enhance flexibility in telegram message handling
added new interfaces Cursor , Database , and Row classes to provide functionality for managing cursor states in the database
updated multiple assertion classes to improve consistency and clarity in naming conventions
# 1686 - enh : add setbeanid ( object bean , object id ) and getbeanid ( object bean , ... )
updated the method call from " tools / xslt / add - menu - to - site - descriptor . xsl " to " getAddToSiteDescriptorX
added a list of request matchers to the HttpSecurity class to enhance request matching functionality to support multiple request matchers
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing of ContactResource objects
remove unused request / response field
updated log messages in FileManager . java to provide clearer insight into the state of the persistable ' s state
added a teardown method in TestIndexSearcher to ensure proper resource management during tests
updated source file retrieval methods in SyntaxTests . java to improve clarity and consistency to enhance code readability and maintainability by standardizing
refactor ConnectionModel and ModeledConnection classes to improve code readability and maintainability
tika - 4071 -- remove unused tikainputstream . get ( ) call
do n ' t allow fml class to be call in a fml context that do n ' t exist
removed unused parameters from AccountUtils , IndexedForest , and CustomPopup classes to streamline code for better readability and maintainability
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and CoreApiMapping . java to improve clarity and
added a new test method ` testJsxComment ` to ` JsLexerJsxTest ` and updated the parsing logic in ` Parser `
added ScreenRecordRule import and annotation to AddWidgetTest . java to facilitate screen recording during widget addition tests
added tests for handling missing BuckConfig in BuildEndToEndTest and CxxEndToEndTest to ensure proper error handling for missing Buck
added imports for OperatingSystemMXBean and implemented physical memory size checks in TestStringBufferAndBuilderGrowth . java to enhance resource management and ensure
deprecated the ConversionService class and added a new constructor to MapToLocalDateConverter to en
added success flag set to true in HiveMetaStoreClient to ensure successful execution of the operation
updated the inclusion rule to use ` equals ` instead of ` = = ` for string comparison to ensure proper handling of special characters in included resources
updated tweet text checks to include " amp . twimg . com / v / " alongside " vine . co / v /
areareference : mark area reference a deprecate
refactor ElementType and Target classes to improve code readability and maintainability
added assertions and refactored reference kind handling in MemberName . java to improve error handling and ensure accurate reference kind changes
changed the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization in ` runChange ( update ) `
modify conditional check for MouseEvent in EditNodeTextField . java to ensure proper handling of mouse events to enhance event processing reliability
camel - 16400 : camel - spring - boot - add support for static bean to bean expression .
refactor multiple classes for improved clarity and consistency to enhance maintainability and readability of the codebase
refactor exception handling in AgentRunnerTest to improve code readability and maintainability
added getter and setter methods for descriptions in various classes to enhance clarity and usability of project property descriptions
refactor activeGroup face addition logic in ObjLoader . java to improve clarity and maintainability of the code
refactor ProcessEngine class to improve code readability and maintainability
[ ci ] use lock . lock ( ) instead of lock . lock ( )
updated the ` getBomReference ` method to include a ` mavenPackaging ` parameter and modified related method calls to enhance flex
updated back ( ) method to use getComponent ( ) instead of getComponent ( ) to ensure correct component context is used for event processing
simplified the certificate verification logic in SASLAuthentication . java to improve code readability and maintainability
updated annotations in ObjectArraySubject and StandardSubjectBuilder to use generics for better type safety to enhance code clarity and maintainability by standardizing
replaced ` NutchConf . get ( ) . get ( " mapred . task . timeout " , " . " ) ` with ` get
replaced the removal of the BoardsPane with a deselection method in SheetAssembly . java and updated the assembly selection logic in StubsController . java
added a method to retrieve the session ID to provide access to the session ID for external use
added null checks before setting time interval in Node and Edge classes to prevent potential NullPointerExceptions during execution
removed the " - logLevel INFO " prefix from the command in MockServerContainer . java to simplify command execution for better readability
updated error logging to include exception message to improve error reporting for better debugging
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` for managing robots honoring policy in ` DispositionProcessor `
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
( chore ) camel - package - scan : fix unit test
added alternativePath method to ExpectNewDemo . java to provide a way to specify an alternative input stream for audio playback
replace input . init ( ) with input . getFirstFilter ( ) . init ( ) in LogEntryParseTester . java to ensure that the first filter
[ hotfix ] [ runtime ] fix checkstyle violation in bufferalignmentagent
added dispose ( ) method to waterripples to ensure proper resource management and prevent memory leaks
added a new configuration option to disable semi - joins for external tables in Hive to enhance performance by preventing unnecessary optimizations on external tables
updated the authorization header description in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
updated wallpaper offset settings in Workspace . java to ensure correct offset adjustment based on scroll range
updated SybaseASADatabase and CreateSequenceGenerator classes to
nifi - 10979 - fix npe in putsql when autocommit be set to false
added parent directory creation for the file in SnapPuller . java and implemented necessary assertions in TestReplicationHandler . java to ensure that the created directories
updated AppTarget identifier from " id : launcher " to " launcher : launcher " to ensure consistency in app target naming conventions
improve framer . frame ( ) to accept a buffer instead of bytebuf
removed unnecessary parameters from OAuth2AuthorizationRequestRedirectFilter constructor calls to simplify constructor signature and improve code readability
updated descriptions in GenericUDFStringToMap to include an extended description to enhance clarity of error messages regarding key - value pairs
updated the ` formatInstance ` method to truncate the ` instantString ` to milliseconds to ensure accurate representation of the current time
[ java ] add a close ( ) method to the agentrunner to wait for the agent to close .
hhh - 16625 use methodhandles . privatelookupin instead of reflection
updated Mockito library version to ensure compatibility with the latest testing framework
updated log message from " Closing proto event file " to " New proto event file " in HiveProtoLoggingHook . java to clarify the
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable the test due to insufficient sample results
fix illegalargumentexception when row or column be negative
refactor DecisionNode and WagonCART classes to improve string concatenation and return values to enhance code readability and maintainability by
added functionality to display bound sheet records in the XLS2CSVMra and BoundSheetRecord classes to enhance the user interface by providing
refactor impulse calculation in ThrustCurveMotor . java for clarity and consistency to improve code readability and maintainability
replace setinputmanager ( ) with setinputmanager ( inputmanager ) in niftyjmedisplay .
refactor hashCode field offset calculation in UniverseBuilder . java to improve clarity and ensure offset is valid to enhance code robustness and prevent potential
block : remove deprecate getmesh ( ) method
[ hotfix ] fix typo in yarnapplicationmasterrunner and yarntaskmanagerrunner
added an option for empty word options in the line reader to enhance flexibility in matching empty words
update pushViewReplicaUpdates logic to include writeCommitLog condition to ensure replica updates are pushed only when writeCommitLog is false
added preference handling for auto - open web preferences in CaptureActivity and updated preferences handling in PreferencesActivity to enhance user experience by providing a default button ID
added a new test method ` testBatching ` in ` JoinedTableTest . java ` to verify the functionality of posting a board with a
added handling for duplicate timestamp errors in JpaPersistenceService to improve error logging for item persistence failures
removed deprecated -- format option and updated RuntimeOptions to use -- plugin instead to encourage the use of the -- format
removed the save ( ) method from the PMS class to streamline the code by eliminating unnecessary operations
added a condition to check if the back key is pressed in the ExtendedEditText to enhance user experience by preventing keyboard interactions
updated capacity calculation in AbstractStringBuilder and added a new Capacity class for testing capacity calculations to enhance performance and maintainability of string manipulation
updated the method call from ` goHome ( ) ` to ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to
added support for endnote references in XWPFDocument and XWPFParagraph classes to enhance support for endnote relationships in XWP
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent to enhance event details for better context during authentication process
added a test method ` testVersion ( ) ` to ` BridjOGRDataStoreTest ` to verify the version of the OSGi library to ensure
added a new file Lifecycle . java to manage network error events to provide a structured way to handle network errors during the application lifecycle
make deviantart more resilient to 404 error
removed unused imports from BodyTubeShapes and RocketFigure classes to clean up the code and improve readability by eliminating unnecessary dependencies
added support for retina rendering in the PJOGL implementation to enhance visual quality by allowing differential scales for canvas operations
show offline project information if pub . dartlang . org not available ( # 4104 )
replaced the use of ` PackedInts . FormatAndBits ` with a static block size of 16384 in ` DiskDocValuesConsumer . java
refactor DefaultRouteBuilder to use SortedSet instead of Collection for sorting routes by status to improve performance and clarity to enhance code readability and maintain
removed unused imports and streamlined data handling in GoAwayTest . java to improve code readability and maintainability
added a method to set properties for maps and implemented a test for FluentSetterBean with a FluentSetterBean to enhance flexibility and ensure
updated the return type of the post method from ListenableFuture < ? > to HttpResponse < HttpResponse > in BlockingHttpEndpoint and HttpEndpoint
refactor FileSortByExpressionTest and FileSortByIgnoreCaseExpressionTest to use a dedicated prepareFolder method to improve code readability and maintainability by
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity on task ID retrieval
added support for writing image scaling information to the rtf document
added logic to aggregate paths based on SQL parameter to enhance flexibility in processing paths
updated ` Nested2 ` and ` Base ` classes to extend ` WithNestedTests . AbstractNestedTest ` instead of ` LuceneTestCase ` and added
added logic to set the xCapEnableBox based on the registration status of the registration to ensure the xCapServerUri is correctly set for the registration
ww - 3975 add option to turn off exception handling
added methods to stop text editing in CodenameOne , Display , TextArea , and AndroidImplementation to enhance user control over text editing behavior to improve
nifi - 10979 - fix bug where group attribute be not be set on flowfile
updated the ` showDialog ` method to include a new ` isNewComponent ` parameter and changed the ` selectPreset ` method to public to en
added error logging and synchronization for sending messages in ChatAnnotation . java to improve error handling and ensure thread safety during message sending
added a condition to check if the OS type is not Windows before executing the HTMLDataFlavorTest to ensure that the test is only for Microsoft Windows to
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the TransactionIsolationLevel configuration to support SNAPSHOT transactions
replaced the method of offering a new recid with a while loop that continues until a specific condition is met to improve responsiveness to concurrent access issues
[ ci ] use zip file instead of jrecompat
added a null check for the command class before creating a service instance to enhance stability by preventing potential null pointer exceptions
use ignore disk failure policy instead of best _ effort
removed the ` public ` access modifier from the ` rip ` method in ` RipperInterface ` and removed the ` public ` access modifier from
do n ' t filter out 127 . 0 . 0.1 if it be not an ip address
no effective change - remove unused method
updated the AutoRebalanceStrategy to use ClusterDataCache and added ClusterDataCache import in PinotSegmentRebalancer . java to enhance data management
added auto - remove functionality to the container configuration and removed the DeleteContainer class to enhance container management by allowing automatic removal of unwanted containers
simonstewart : allow the default selenium command to produce pipe - separated command .
test : add test for multiple - attempt gloss creation
updated schema references from ` allOfRef ` to ` COMPONENTS _ SCHEMAS _ REF ` to ensure consistency in naming conventions for schema references
updated entitydeletedevent to use json serialization
added a new constant for GOP support in FormatConfiguration and updated DLNAMediaInfo to handle this new GOP value to enhance media handling by
added a new test class TestProfileReturnTypePrinting for testing return type printing functionality
refactor ParseConfigUtils to use a ReentrantLock for thread - safe access to improve concurrency handling during configuration refresh operations
fix release column segment operator in minmaxvaluebasedselectionorderbycombineoperator ( # 9662 )
simonstewart : remove the @ ignore annotation that be no longer need
added @ return annotations to retrieve display density and navigation bar properties in HasAndroidDeviceDetails . java to enhance clarity and usability by providing more
do n ' t add dead bug to projectstats
bugfix # 26921 , add disabled text to the import panel
removed multiple duplicate @ Override annotations in CacheControlImpl . java to streamline code by eliminating redundancy
added a check for empty recurrence in ScheduledAction . java and implemented a test for weekly actions without weekday set in ScheduledActionTest .
refactor upload button handling in ShareActivity to improve clarity and functionality to enhance user interaction by enabling single - start upload tasks
refactor multiple classes related to message expression handling to improve code organization and maintainability
added InputStream handling to MeXBTExchange and RippleExchange classes to ensure proper metadata loading in the exchange classes
added a new ` WritableSerializer ` class to serialize ` Writable ` objects in ` CrawlDbReader ` to enable serialization of ` Writable `
removed unused TesterRequest class to clean up the code and reduce unnecessary complexity
update mdnsdiscoveryservice to use service - level configuration
added null check for messageItem before calling scrollToPositionWithOffset to prevent potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in TestBPIndexReorderer to use a custom ForkJoinWorkerThread to improve fork join performance to enhance
added checks for DATANODE and NAMENODE roles in RoleCommandOrderTest to ensure correct handling of dependencies involving DATANODE and N
added a new method ` dedupWithTableInfo ( ) ` and a method ` restoreLocalInfoFromTableInfo ( ) ` in ` PartInfo . java
no effective change - code cleanup
added Matrix4 transformation for sprite scaling and flipped the logo sprite to ensure consistent sprite positioning during rendering
[ streamphysicalpythongroupwindowaggregate ] exclude built - in python aggregate
removed the ` hasPendingEcho ` variable and related methods from ` EndpointState ` , ` Gossiper ` , and ` Server ` classes
added a method to retrieve unreachable token owners from unreachableEndpoints in Gossiper . java and updated method names in StorageProxy . java to improve cl
simplified the expression evaluation logic in CoordMultiplyReplacer . java and added a new test for non - multiplicative expressions in GeoSymbolicTest
updated content type handling in FormAuthenticator and SavedRequest classes to ensure a default content type is used when none is provided to enhance flexibility in content
changed the visibility of ` _ display ` from static to instance variables and added null checks for ` localEnv ` and ` device ` in ` XToolkit
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
refactor lock handling in EnvironmentImpl to use ReentrantReadWriteLock for improved concurrency to enhance thread safety for concurrent access to meta data structures
added a test method to read an identity provider from a zone using an access token to verify that the identity provider correctly uses the authorization code for
updated scheduleJob method to use ExpireJob and added null checks for timestamp to enhance job expiration handling and prevent potential NullPointerExceptions
removed unused import of Service to clean up the code and improve readability
[ issue # 4833 ] update subscription version after rebalance ( # 4834 )
chore ( cairo ) : update cairo to support detached mkdir
[ java ] re - enable stable follower test when there be no follower .
[ jabref ] fix typo in preference key
updated DBinaryDescription and DLibraryDescription classes to utilize CxxPlatforms for parsing time dependencies to enhance dependency management for C++ targets
refactor GoogleCloudAPI to properly dispose of OAuthClientService to improve resource management and prevent potential memory leaks
camel - 14263 : camel - core - file - consume - do option should not delete the complete do file
added a new boolean variable ` reopenReaders ` and modified the condition in ` SolrCore ` to check for reopening readers to allow configuration of re
[ freeplane ] add dialect version to mapwriter
added methods ` currentDate ( String key ) ` and ` currentTimestamp ( String key ) ` to the ` Update ` class to enhance
added a dup method to ResultInfo and created a new class PrimitiveTypeInBoundForMethodRefTest for testing to enhance type - checking functionality to
refactor ` AddConfigWidgetTest ` and ` RequestPinItemTest ` to use a new interface ` Condition ` instead of ` AbstractCondition
replaced ` Term ` with ` ConstantScoreQuery ` and updated search behavior in ` TestFacetsCollector . java ` to use ` MatchAllDocsQuery `
removed unused imports related to Java ' s invoke package to improve code clarity and reduce unnecessary dependencies
renamed the method ` providesUploadController ` to ` providesDirectNearbyUploadPreferences ` and introduced a new method ` providesUploadController ` to en
added support for SYSIBM and DERBY modes in SQL queries to enhance compatibility checks for SQL statements in the database
refactor logging statements in TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration to improve readability and maintainability to enhance code clarity
added functionality to track the last pid in WorkbookProperties and updated the getLastPid method in POIXMLProperties to ensure accurate tracking of the last
tmi - geotiff : handle nan and infinity in nodata range
refactor CliDriver to improve error handling and streamline process status execution to enhance clarity and maintainability of the code
( chore ) camel - mock : use schedulers instead of concurrentsubscriber
added a new method ` selectByRuleIdSet ` to ` RuleConditionMapper ` for partitioning ` ruleIdSet ` to enhance flexibility
added a method ` addExitDescription ` to ` ExitStatus ` and updated ` AbstractJob ` and ` AbstractStep ` to use this method
added a condition to check if the event ' s entityPlayer is the player in the MultiblockRenderHandler to ensure correct handling of the right click block
renamed ` columnFamily ` to ` columnFamilyColumn ` for clarity to enhance readability by using a more descriptive variable name
removed unnecessary import of collections in PlotConfiguration . java to simplify the code and improve readability
refactor DefaultIOSInput to use UIAlertController instead of UIAlertViewDelegateAdapter for improved clarity and functionality to enhance the
[ py ] use native linkable instead of params
updated the parameter name from ' arrayValue ' to ' values ' in the ofArray method to improve clarity and consistency in method naming
added a null assertion for the message returned by the service in AdvServiceTest . java to ensure proper validation of the message returned by the service
refactor key handling in MappingMongoConverter to improve clarity and maintainability of key conversion logic
updated Timber logging format in NearbyMapFragment . java to improve readability of log messages
camel - 14263 : camel - yaml - dsl - add support for deprecate java type column
updated FuzzyLikeThisQuery to use Terms for accessing field terms instead of a field directly to improve efficiency by avoiding null pointer exceptions
refactor the ` writeApplicationsLinks ` method to accept a boolean parameter for tabularization and update related logic accordingly to enhance flexibility in handling
( scott phillips ) use identifierservicefactory instead of dspace
updated assignBytes calls to use bw . getLength ( ) instead of bytes . length to ensure compatibility with the updated buffer length
modified the getDisplayScript method to return null instead of an abstract method to provide a default implementation to prevent the method from being overridden
replace keyToPress and keyToRelease with a sequence in RemoteWebDriver . java and update ignore annotations in BasicKeyboardInterfaceTest . java to enhance
pdfbox - 4892 : fix arrayindexoutofboundsexception , a suggest by valerybokov
added synchronization when waiting for active interfaces in NetworkConfigurationWatcher to ensure thread safety when waiting for network configurations
refactor HSSFWorkbook to use a dedicated method for retrieving embedded objects to improve code readability and maintainability
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve readability
updated role parameter handling in AmbariManagementControllerImpl . java to improve clarity and consistency in role parameter management
added a condition to check if the base font is " Symbol " before returning true to ensure proper handling of font types starting with " Symbol "
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourglass . java ` to
refactor LiveTvGuideActivity to utilize a Calendar instance for starting and ending dates to improve code clarity and ensure accurate tracking of guide
updated MockGateway and MainMockTransformer to use Whitebox for method access and added new test classes for common parent and child classes to enhance
added dlopen calls for libfreetype and libfontmanager in JREUtils . java to enhance resource loading capabilities for improved font management
refactor expression node handling in FunctionParser to improve readability and maintainability to enhance code clarity and facilitate multi - variable
loop safepoint elimination : add guard for non - overflow guard
improve type analysis for ` ` isinstance ' ' method
added a new class ` LocalizedString ` and updated ` Attr ` to utilize it for method argument handling to enhance localization support for
add serverconfig option to disable classpath search
replace System . arraycopy with Arrays . copyOf for better performance to enhance memory efficiency by avoiding unnecessary array copying
change default retries value from 0 to 2 in Reference . java and update assertions in AnnotationPropertyValuesAdapterTest . java to ensure retries values do not exceed
added settings functionality to TexturePacker to enable dynamic configuration of texture packing settings
added view bindings for uploaded images and wiki textview in AchievementsFragment . java to improve UI responsiveness to enhance user experience by ensuring images
added logging statements for annotation processing round boundaries in TranslatingJavacPhaseTracerTest . java to enhance traceability and debugging capabilities during annotation processing
added a new ` CategoryInfo ` class and updated ` MwQueryPage ` to include it as a new field to enhance category information generation to
corrected the spelling of " username " and " password " in AuthzAuthenticationRequest . java to ensure consistency and accuracy in validation logic
added accessibility support to manage taskbar visibility in TaskbarStashController to enhance user experience by ensuring taskbar visibility accurately based on
added a check for the character ' ^ ' in the signature validation logic to ensure that the signature does not contain a closing parenthesis
updated access flags handling in ClassVisitorDriverFromElement and added tests for generic interface and enum stubbing in StubJarTest to ensure correct
added null check for input parameter in IntervalFilter and null check in LowpassIntervalsSource to enhance robustness by preventing potential NullPointerExceptions
added tests for the ` EntrySetIterator ` functionality in ` MapInterfaceTest ` to ensure correct behavior of the ` EntrySetIterator ` iterator with different
added a serialVersionUID field to TreeMap class to ensure compatibility during serialization
change image creation time from milliseconds to seconds to improve accuracy in image data representation
updated GROBCOVs from " grobcovC1 " to " grobcovC0 " and refactored locus
added decryption keys for private and public keys in AccountRemovalJob to enhance security by ensuring sensitive data is removed
refactor keep - alive header handling to use a dedicated method from AsyncHttpClientConfig to improve code readability and maintainability
skip postjoinmapoperation when there be no interceptor
no effective change - remove unused processor
removed the ` spillEnabled ` parameter from multiple ` LongHybridHashTable ` and ` BinaryHashTable ` classes to simplify the hash join logic by
refactor EnvironmentVariableHelper to use process environment variables instead of reflection to enhance flexibility in managing system environment variables
ww - 3951 fix typo
added SerializableMode import and modified formatting in PluginSwitch . java to enhance serialization support and improve code readability
added instrumentation for nullable field values in AbstractBeanDefinition to ensure proper handling of field values during field injection errors
refactor isolation clause parsing into a separate method called parseIsolationClause to improve code readability and maintainability by reducing duplication
replaced ` HiveConf . ConfVars . HIVE _ SERVER2 _ TRANSPORT _ MODE . varname ` with ` hive . server2 . transport . mode
added a method ` isCacheable ( LeafReaderContext ctx ) ` to ` GlobalOrdinalsWithScoreQuery ` class to provide a way to disable caching
added a new file TestStrangeControl . java with a main method that demonstrates the behavior of StrangeControl using a Thread with a delay to
updated file paths in JsFile and JsLibrary to use " % s . jsfile " and " % s . jslib " instead of " %
added selection methods to ShadowEditText to enhance text selection functionality for better user experience
refactor GRPC server initialization to use Closeable instead of void to improve resource management and prevent potential resource leaks
added a new method ` use ( String path , Class < ? > routeClass ) ` to ` Jooby ` and updated ` Router ` and
added a null check for fst in FreeTextSuggester . java to ensure stability by preventing unsupported lookups
updated string formatting in T4975569 . java and modified URL verification in T6729471 . java to handle MalformedURLException to ensure consistent
added ABI writer support to processor bundle
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethodIsAlwaysInverted in
added a check for the shutdown status of the scheduledExecutorService before executing the pull request immediately to ensure that the scheduledExecutorService is only executed when the
refactor EnergyEndpointer class to improve code readability and maintainability
refactor preset selection logic in ComponentPresetChooserDialog to use a unified list of displayed columns to improve code readability and maintainability by
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to clean up the code and reduce unnecessary dependencies
camel - 14263 : camel - google - sheets - fix switch / cases indentation see camel - 14263
added a default value for exported header style in C++ library processing to ensure the correct inclusion and exclusion of specific header styles
deleted the Constants . java file and removed the DistanceUtils . java file to remove unused code to streamline the project
refactor key extraction from a string using a regex pattern to improve code readability and maintainability
svm : fix build - time initialization issue
added a test for inline role bindings in RoleBindingTest . java and refactored create method in RoleBindingOperationsImpl . java to improve
added debug logging for session cookie configuration in UaaSessionCookieConfig . java to enhance traceability and debugging capabilities during session cookie configuration
updated the file name generation logic in HotseatFileLog . java to ensure correct formatting of file names based on the current calendar date
updated the condition in ObservableBlockingSubscribe to check for the variable ' v ' instead of ' o ' to ensure correct handling of the variable ' v '
added error handling for invalid usage of an option in JavapTask and created a new T8033711 class for testing to improve robustness by
removed redundant calls to ` Collectors . toList ( ) ` in multiple Java files to streamline code by eliminating redundancy
changed log level from error to warn for exceptions in TaskDriver . java to improve logging clarity and handle shutdown gracefully
[ hotfix ] [ network ] add enabletieredstorage parameter to inputgatespecutils
replaced the static final SUCCESS _ CODE with a utility method isNotSuccessStatus to improve code readability and maintainability
added a configuration option to use OpenGL 2.0 in Cuboc . java to enable compatibility with OpenGL 2.0 in the application
simplified the return statement check in JimpleBody . java to improve code readability and maintainability
refactor OutputMacroExpander to streamline rule resolution and error handling to enhance code readability and maintainability by reducing redundancy
fix flaky test due to light job count mismatch
added a condition to check if the input file does not contain a directory containing duplicate words to ensure that only valid input files are processed
[ # 7807 ] instructorfeedbackresultsbundle : fix typo ( # 7808 )
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
added a new file ` TestEscapeThroughInvoke . java ` containing a class ` TestEscapeThroughInvoke ` with methods for escaping and saving objects using `
replaced manual skipping with IOUtils . read for stream reading to improve code readability and leverage existing utility methods
http : / / issues . apache . org / jira / browse / amq - 4607 - add interceptor support for jdbc
changed catch block from Exception to Throwable to handle broader range of exceptions
lrublockcache : fix block cache eviction issue .
removed unnecessary check for task count in RecentsView . java to simplify the code and improve readability
added instance config change listener to HelixBrokerStarter and increased sleep duration from 1000ms to 5000ms in HelixServerStarter to enhance
added CoinmateMetadataServiceRaw and CoinmateMetadataServiceStatic interfaces and implemented remoteInit method in CoinmateExchange to enhance
refactor DefaultModelValidator to improve path validation logic and add a warning for unresolved system paths to enhance clarity of error messages and ensure
pdfbox - 4892 : fix bug , a suggest by valerybokov
add ptransform . setdisplaydata ( list < itemspec < ? > > ) to allow ptransform to set display data
replace DefaultSubject with assertThat for checking isNull ( ) and ignoreCheck ( ) methods in SubjectTest . java to improve clarity and functionality of assertion checks
disable md2 algorithm by default
added checks to ensure options cannot have more than 25 choices for an option in the OptionData class to enforce the maximum number of options for an option
updated module - info . java files to improve module organization and clarity
added error handling for server connection issues in IOSImplementation . java to improve robustness by throwing an IOException when an error occurs
updated event handling in LauncherInstrumentation and LogEventChecker to ensure proper cleanup of resources to improve resource management and prevent potential memory leaks
refactor exception handling and improve error logging in FileSinkOperator . java to enhance clarity and error reporting during file writing operations
added diagnostic handling to SchemaGenerator to improve error reporting during task execution
replace RuntimeException with OptiqSemanticException in SemanticAnalyzer . java to improve error handling for unsupported column references
refactor DataSourceMonitorTests to improve test coverage and maintainability
added a HashSet to track loaded resource paths to prevent duplicate loading of resource paths during the scanning process
refactor TestServiceUtil to handle null test instance retrieval and log error messages to enhance error reporting by providing clearer context on service initialization failures
added null check for ` o ` in ` RoutingInBoundHandler . java ` and updated response handling in ` RoutingInBoundHandler . java
added a NATIP annotation and updated EkeyUdpPacketReceiver initialization to include the IP address to enhance logging clarity by providing more context on the
replaced deprecated ArrowBuf imports with ArrowBuf in multiple classes to ensure compatibility with the latest version of the Apache Arrow library
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added null checks for header and body buffer before setting the state in HttpConnection to prevent potential NullPointerExceptions when handling invalid input
refactor the subscription handling in MultiTimeout . java to use AtomicReference for upstream and downstream subscriptions to improve thread safety and clarity in handling timeouts
optimise leveledcompaction : do n ' t try to compact starved sstables
added @ Test annotation to TestOrcTimezone1 . java to enable the TestOrcTimezone1 test method
refactor metrics and timers handling by introducing findMatch method to improve clarity and maintainability of the code
added error handling for JSON processing exceptions in PinotSegmentRestletResource . java and updated return statements in TraceContext . java to improve robustness by
modified the method to return the default renderer for null class and added a new test class for JTable functionality to ensure proper handling of null superclass
update IDEService to conditionally include shell commands based on the presence of the SHELL environment variable
increased the maximum number of subscriptions from 10 to 1 in the deleteWithoutSubscriptions method to allow for a more efficient deletion process
changed the type of ` testInstances ` from ` List ` to ` Set ` in ` MockitoExtension ` from ` LinkedList ` to ` LinkedHashSet `
refactor FieldMonitor class to improve code readability and maintainability
updated BTreeMapTest to use transactionDisable ( ) and fileMmapEnableIfSupported ( ) instead of deleteFilesAfterClose ( ) to ensure
modified the iterator initialization logic in SortedIntList . java and added a new test class SortedIntListTest . java with a test for iterator allocation to
unregister the object name in DefaultRemoteProxy and modify exception handling in JMXHelper to improve error handling clarity and maintainability
reduced the default write buffer size from 4MB to 64MB in RocksDBConfigurableOptions to optimize memory usage for sorted on - disk files
removed unnecessary parameters from the constructor of the Style class to simplify the constructor call for better readability and maintainability
updated the argument name from " message " to " addArgumentNoEncoding " in FacebookShare . java to improve clarity and consistency in argument handling
ambari - 21142 . remove pipelinejsonrenderer . tojsonstring ( ) from samza runner ( dili )
use mouseinput . button _ left instead of hardcoded 0
refactor LoopRotateBadNodeBudget class to improve code readability and maintainability
added a ` convertToMongoType ` method to both ` AbstractMongoConverter ` and ` MappingMongoConverter ` classes to enhance type conversion functionality
apps - 2082 remove complex input box ( use i )
kristianrosenvold : fix sendkeystoactiveelement to work with empty key
added a method to calculate a scaled version of a BufferedImage based on target dimensions to ensure that negative target sizes do not cause illegal argument exceptions
no effective change - remove unused method
added updateShiftStateNow ( ) method to AnySoftKeyboard to enhance state management during keyboard interactions
removed the ` DETECTED _ ACTIVITY ` constant and related methods from multiple classes to streamline code by eliminating unused
replaced ` ExtensionConfig ` with ` ExtensionConfig ` from ` ExtensionConfig ` to ` ExtensionConfig ` across multiple files to align with the new
removed unused import of Buildable from AaptPackageResources . java to clean up the code and improve maintainability
removed unused start _ pc , end _ pc , and catch _ type from CodeException , ConstantInvokeDynamic , ConstantMethodHandle , and ConstantMethodType to
improve exception message for invalid websocket upgrade
updated the blockMode assignment logic in P11Cipher . java to ensure correct parsing of the algorithm ' s block mode
updated Mockito library version to ensure compatibility with the latest testing framework
removed redundant checks for owner ownership in Merge . java to streamline permission handling for plot merging operations
remove deprecate getconversationid ( ) method from request , response , and request .
updated import statements in DummyFreeTTSVoice . java and modified phoneSet initialization in DummyFreeTTSVoice . java to utilize MaryProperties
replaced ` throws SemanticException ` with a new method ` stripQuotes ` in ` BaseSemanticAnalyzer ` and ` PartitionSpec ` and ` PlanUtils `
refactor rendering context handling in DLNAResource and Request classes to improve code clarity and streamline rendering updates
added a list of remote artifact repositories to the DefaultPluginManager to enhance the plugin ' s capability to manage artifact repositories more effectively
camel - 15836 - camel - cxf - cxf - r client factory - fix unit test failure on window
refactor PhysicsClient class to improve code readability and maintainability
ignore flaky test until fix
added a new File object instantiation in ZipFile . java to enhance file handling functionality
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to provide a way to handle multiple types efficiently
fix npe when default constructor be miss
added StackTraceUtils class and updated imports in GenericDAOImpl , ForumServiceImpl , and ReflectionUtils to enhance stack trace logging and
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution by eliminating unnecessary tests
mondrian : do n ' t call unparse method if there be no paren .
refactor ` GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY ` to use a Multimap for
corrected the spelling of " supressWarnings " to " suppressWarnings " and added a conditional check for " jdk . internal . misc .
refactor JsonTreeReader to improve token peeking logic and add unit tests for nextJsonElement to enhance error handling and ensure correct behavior
added an option to ConsumeAllOptionsHandler to handle unexpected arguments after the ' -- ' command in the external runner
added deduplication and indexing methods to SolrDeleteDuplicates and SolrIndexer classes to enhance functionality for deduplicating and indexing Solr queries to improve
[ hotfix ] [ table - planner ] support flink planner in streaming mode
added a call to clear the database in MssqlIntegrationTest . java to ensure the test environment is reset before further operations
updated Progress class to allow dynamic display of progress indicators based on showPercentages
added a check to ensure the parent file exists before checking its existence to prevent potential errors when the parent directory does not exist
added methods for writing and closing output streams in IOUtils . java to enhance document writing capabilities to improve resource management and prevent potential memory leaks
updated print statements in JavaBuild . java to include newline characters for better readability to enhance clarity of output during debugging
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` dots Per Point ` to enhance
modified the ` apply ` method in ` CustomQueryFilterFactory ` to include a ` final ` parameter for user filtering to enhance flexibility
added default ports functionality to NettyHttpServer , DefaultRouteBuilder , DefaultRouter , FilteredRouter , and UriRoute classes to enhance
refactor SnmpTargetHandler to streamline status updates and improve resource management to enhance code readability and maintainability while ensuring accurate status
add submit privilege to instructor ' s session list
added @ Deprecated annotation to AvailableSettings class to indicate that the class is outdated and should no longer be used
refactor FileResolverImpl to streamline path processing and improve clarity to enhance readability and maintainability of the code
updated log message format in DocumentsWriterPerThread . java to improve clarity of newFlushedSize for better debugging
updated print statement to use getUnlocalizedName ( ) instead of func _ 149739 _ a ( ) to improve clarity of block name retrieval
updated variable names from " stripWhitespaceX " to " stripWhitespaceY " in ImageProcessor . java to improve clarity and consistency in variable naming
increased the maximum number of threads used for weak locks from 1 to 10 to accommodate a larger number of concurrent access scenarios
updated TsFileSequenceReader to use exactSearch instead of false for metadata deserialization to enhance accuracy in metadata retrieval
no effective change - code cleanup - remove unused parameter
added preferred size configuration for the pane in NavigationShareTab . java to improve UI layout for better user experience
replaced ` startOffset ` with ` state ` in ` BeiderMorseFilter ` and added assertions in ` TestBeiderMorseFilter `
refactor Upnp - related classes to improve code organization and maintainability
fix wrong position for lens warp
added JUnit Jupiter API assertions and implemented a new toJson method in JsonTest . java to enhance testing capabilities for dynamic JSON
refactor MutableContextDataSupplier to improve data handling efficiency
updated exception handling to catch Throwable instead of Exception to improve error handling by logging a warning for missing LogWatcher
updated KubernetesServer to include HTTPS parameter to enhance security by enabling HTTPS connections
defaultjavaloweringprovider now correctly include the timestamp of the call .
updated DefaultServlet to handle GET , HEAD , OPTIONS , and POST options instead of METHOD _ NOT _ ALLOWED and METHOD _ NOT _ ALLOW
tika - 3748 -- add locale . us to decimalformat usage
updated exception handling in ShowFileRequestHandler to return NOT _ FOUND instead of BAD _ REQUEST and added a test for 404 via HTTP in Show
added new methods to handle Throwable and InvocationTargetException in ReflectorClassWriter to enhance exception handling capabilities in the reflection framework
added a clamp method to the Vector class and updated the Vector2 class to include a new method for clamping between specified min and max values to en
added OAuth2 authentication handling in ChainedTokenGranter . java to ensure proper scope management during token creation
refactor BC _ instanceof method to improve code readability and maintainability
added a logger for better error handling in EditorBottomSheetBehavior to improve debugging and monitoring of file operations
updated UaaUrlUtilsTest to use JUnit 5 annotations and integrated PollutionPreventionExtension to enhance test structure and ensure compatibility
hhh - 15836 - fix nativequery scalar return type cast to basicdomaintype
added caching for font anti - aliasing information in SunLayoutEngine to improve performance by avoiding redundant calculations
use arraylist to improve performance
simonstewart : use the remote webdriver instead of htmlunit
refactor BrokerRequestUtils for improved clarity to enhance maintainability and readability of the code
refactor InjectorBuilderImpl to use a map for managing injectable instances instead of a list to improve code readability and maintainability
updated the ` RawTargetNodeFactory ` and ` BuildTargetToRawTargetNodeTransformer ` to use ` buildTarget . getBasePath ( ) ` instead of
added null check for the value before parsing to prevent potential NullPointerExceptions during parsing
do n ' t leak connection to jabber when disconnecting .
updated DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to adjust load factor for improved performance
added a method to retrieve physical variations for DataTypePhysicalVariations in VectorizationContext and updated related classes to utilize this new method to
changed package declarations from ` com . google . zxing ` to ` com . google . zxing . client . j2se ` to
refactor conditionals in OverviewState . java for clarity to improve readability and maintainability of the code
added @ Entity annotation to BaseActivityEventEntity to facilitate the handling of activity - related events
added TraceHelper for partitioning touch intents in NavBarSwipeInteractionHandler and modified SYSTEM _ TRACE initialization in TraceHelper to enhance debugging capabilities and
added a new file ` InvalidOptions . java ` that tests the behavior of the ` javap ` program with various options to ensure that
added a check to ensure the number of displays matches the expected number of supported bounds to improve debugging and error handling for inconsistent displays
refactor OAuth client ID and client secret retrieval into a separate method in OAuth20Utils to improve code readability and maintainability by encapsulating
changed the ` _ unwrapServletException ` variable from false to true in ` ErrorPageErrorHandler ` and added a call to ` AsyncContextTest ` to
added a condition to set ShortcutInfo status to DEFAULT in PackageUpdatedTask . java to ensure proper handling of shortcut information updates
camel - 14263 : camel - seda - optimize to use linkedblockingqueue to improve performance
added calls to ` app . update ( ) ` method in ` Kernel ` and ` app . updateStart ( ) ` and ` app . updateEnd
added HttpClient support to ThirdEyeApplication for improved HTTP client management
added getSort ( ) and setSort ( ) methods to JobInstanceFetchRequest to enhance sorting functionality in JobInstanceFetchRequest
modified the CryptoFacilitiesTradeService to retrieve and adapt the order cancellation logic to ensure the correct currency pair is used for the order ID to enhance
ggb - 2118 hide keyboard when click on av input ( on web )
refactor memory move method to use NativeFunctionHandle instead of separate parameters to improve code readability and maintainability
reformatted code in BindLdapAuthenticationHandler . java for improved readability and consistency to enhance maintainability and clarity of the code
added a tooltip block option in ToolTipManagerW and updated ModeToggleMenu to use this option to enhance user experience by allowing tooltips to be
updated DefaultDateTypeAdapter to accept date and time styles as parameters to enhance flexibility by allowing customization of date and time formatting
updated playerSet appending syntax for improved readability to enhance code clarity and maintainability
added a check to return ( this ) if the list is empty to prevent potential NullPointerException when accessing the List
added exception handling for CommandException in ParametricCallable to improve error handling for command execution failures
updated getLikeExpression method to include a boolean parameter for like expression handling to enhance flexibility in searching for string columns based on like expressions
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponent classes to provide functionality for starting and stopping stream suppliers
added a listener to set the locale dynamically based on available locales to enhance locale management for better test reliability
refactor multiple PG - related classes to improve code organization and maintainability
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating logic
added a test for route building in the OSGi framework to ensure proper functionality of the camel - blueprint
nifi - 2594 : fix test to pass on window and linux
refactor return type substitutability logic into a separate method to improve code readability and maintainability
added throttleType enum and related getter / setter methods in TestExecutor . java to enhance flexibility in processing throttled templates based on
removed redundant assignment of pixel and argb in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to streamline code
refactor Annotation and AnnotatedElement classes to improve code readability and maintainability
added a new interface Model in the org . apache . poi . hssf . model package to encapsulate model - related classes within the
camel - 14263 : camel - cxf - optimize header filter to use camel - core filter
added a ` clearEntityManager ` property to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` to control the emptiness of entity
added null checks for ShortcutInfo and improved error handling in Launcher and LauncherModel to enhance robustness by preventing null pointer exceptions and
updated TwoDimensionalCollectionValuedMap initialization to accept a boolean parameter to enhance flexibility in collection creation
updated exchange specifications to reflect the correct host and exchange name to ensure accurate representation of the exchange being used in the application
added null checks for column readers in OrcEncodedDataConsumer and enforced null checks in EncodedTreeReaderFactory to prevent potential NullPointerExceptions during
added null check for segment files in SegmentInfos . java and implemented a test for opening a reader after deletion in TestIndexReader . java to ensure robust
updated date range in HSearchSortHelperImpl and modified FhirResourceDaoR4SearchWithElasticSearchIT to use ITestDataBuilder to
refactor BigDecimal conversion to use a variable for percent value to improve code readability and prevent potential rounding errors
updated limit validation from ` < 1 ` to ` < 0 ` in ` RangeInputStream ` and ` RangeReader ` to ensure
( chore ) camel - rocketmq : use stopwatch when collect all route
refactor methods in HlsChunkSource to improve clarity and structure to enhance readability and maintainability of the code
replaced ` TestCase ` with ` TestNumericRangeFilterBuilderTestCase ` in multiple test classes to standardize test structure and improve code clarity
added a new stateful map function and updated the output handler to set the next input in OutputHandler and implemented state management in StatefulOperatorTest to
removed null check for fill and stroke in Area . java and Line . java to simplify the code and improve readability
added dbExists ( ) method to Blockchain class and updated import statements in BlockchainTest . java to facilitate database existence checks and
trim whitespace from the group of matched values in SQLPlusSupport . java to ensure consistent formatting of matched values
set the socket ' s asynchronous mode to false to improve performance by preventing synchronous operations
update divider location calculation in DockSplitPaneW . java to improve layout responsiveness
added health check metrics in ControllerMeter and PinotControllerHealthCheck to enhance controller health monitoring and provide better diagnostics during health checks
added visibility control for shared avatars in LocalFileListAdapter to improve user experience by hiding shared avatars
move mow . scss to mow - toolbar . css and dialog - styles . css to mebis / web / resources
updated argument length checks in BurstSendReceiveUdpPing , ReceiveSendUdpPong , and SendReceiveUdpPing classes to use ' < = '
do n ' t execute command if log level be fine
replaced CountDownLatch with assertWaitUntil for span completion verification in EventBusTracingTestBase . java to improve reliability of span completion verification
removed the locale parameter from the QueryParser constructor and added getter and setter methods for locale in the QueryParser class to simplify the constructor and enhance flex
replaced ` Arrays . asList ( ) ` with ` Collections . singletonList ( name ) ` in ` EntryCustomizationDialog . java ` and changed `
jbrules - 2623 : add support for betanodeconstraint to rulebaseimpl
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` to handle unauthorized certificates to enhance the functionality of OCSP
replaced a fixed sleep duration with a loop that checks server state to ensure proper handling of server failures to prevent unintended behavior
added a new constant for the open connection count and updated related methods in SourceCounter and AvroSource classes to track the number of open connections
make graphqlinterfacetype . fields ( list < graphqlfielddefinition > ) public to allow subclassing
added a new method ` getSrcRoots ( ) ` to the ` DefaultJavaPackageFinder ` class to provide access to source root paths to enhance
replaced OutputWriter instantiation with PrintWriter instantiation to enhance output formatting for better readability
[ hotfix ] [ test ] fix random failure in filesourcetextlinesitcase
added support for DataTable in JRubyStepDefinition to enhance data handling capabilities in the step definition
changed visibility of author and author nodes from GONE to VISIBLE in SearchImagesRenderer . java and modified API calls in ApacheHttpClientMediaWiki
refactor ReadSentimentDataset class to improve code readability and maintainability
improve error message for parse near char in formula
added methods to retrieve and set the socket bind address in WebSocketClient to enhance flexibility in binding the WebSocket connection to a specific address
[ java ] do n ' t delete aeron directory on cluster shutdown .
refactor WidgetGroup to use a dedicated setSize method to improve code readability and maintainability
changed the type of sessionFixationAttribute from string to Boolean to allow for more flexibility in session fixation handling
refactor LALogicLinesFragment to use edgeOption instead of parameter passing to startOneChannelLA method to improve code clarity and maintainability
danielwagnerhall : add linear backoff to chromedriver .
added HttpMethod and httpRoute attributes to the TraceExchangeFilterFunction and ClientResponseWrapper classes to enhance the tracing capabilities for HTTP requests in the
use integer . min _ value when purge = false
updated rendering intent return values and modified color conversion logic in ICC _ Profile and ColorConvertOp classes to ensure correct handling of rendering intents
update contribution question question detail template to reflect new restriction
added multiple calls to PublicMethed . waitProduceNextBlock in ContractInternalTransaction003 . java to ensure proper block production during transaction processing
added SuppressFBWarnings annotation and removed Serializable interface from KafkaRecord class to enhance error handling by suppressing specific exceptions
added support for PostgreSQL connections in PooledConnectionImpl to enhance compatibility with PostgreSQL ' s database connection handling
refactor PropertyTable and CloseIgnoringInputStream classes to improve code clarity and maintainability
updated log messages to clarify the presence and absence of the token encryption secret for services to improve clarity and provide clearer insights during
marked the Hazelcast class as deprecated to indicate that the class is outdated and should not be used
updated Kerberos server action to include a new event handling mechanism to enhance stability and error reporting during server operations
added ITERATOR constants and refactored iterator handling in NamedListCodec to improve data processing capabilities and enhance iterator functionality
when assign completely lost partition , log a warning
added inclusion rule to the ApiExample class to enhance schema inclusion control for API documentation
updated the expected value in the StreamExpressionTest from 3.0 to 7.0 to reflect the accuracy of the mean squared deviation
refactor SDO creation to ensure valid coordinate sequences before creating a linear ring to enhance robustness by preventing invalid ring creation
added methods to retrieve the base name and dimension count from the constant pool to enhance functionality for better resource management
added a method to set debug evaluation output for the next evaluation to enhance debugging capabilities in the application
test ( refactor ) : migrate java 8 to 1.8 ( # 2451 )
updated ExoPlayerProfile instantiation in LegacyMediaManager . java and modified PlaybackController . java to conditionally check live TV preference to ensure compatibility with
added a return statement in DynamicStyleBar . java to ensure proper termination of the program execution
added SLF4J logging for REPL DUMP properties in Utils . java to improve monitoring and debugging capabilities during replication
refactor ReactiveAuthorizationManager to improve code readability and maintainability
added a check for boolean types in MethodEmitter to ensure proper handling of boolean types during object promotion
truffle : fix npe in null ( ) method
refactor multiple Java files to improve code organization and maintainability
add a new test class CaffeineCacheDefaultConfigurationTestSuite for testing CaffeineCache configurations to ensure proper functionality and validation of cache specifications
added a method to calculate a bounding box for vertices in a Mesh class to improve collision detection and bounding box calculations for vertices
added a target hash function to the TargetsCommand class to provide configurable hashing options for file hashing
refactor DefaultConfigurationProperties to improve code readability and maintainability
added high light color and alpha settings for data visualization in ListViewMultiChartActivity and modified highlight paint behavior in BarChart to enhance the visual appearance
added a line to store the sgPathPlanMap in a variable before adding it to the pgSgPathPlanMap to ensure the sgPathPlanMap
[ hotfix ] fix checkstyle violation in infinispanremoteproducerit
refactor MavenArtifactFetcher and MavenDependencyResolver to improve artifact fetching and lock management to enhance concurrency handling and ensure proper synchronization during
updated fragment shader syntax in SpriteBatch . java to ensure compatibility with OpenGL ES specifications for shader rendering
updated RSGroupInfo to use Set instead of SortedSet for servers to enhance flexibility in handling server collections
added error handling for JSP page loading in TagLibConfiguration to improve stability by preventing application crashes due to missing TLD processor
added version awareness filter to CustomAnalyzer and updated TestCustomAnalyzer to use a custom TokenFilterFactory to enhance version handling and
added a test for retrieving application information from a set package archive info to ensure that the application information is correctly stored and returned
replaced direct calls to ` method . invoke ` with ` MethodUtil . invoke ` for package access checking to enhance security by ensuring package access
added imports for ProjectConfigurationStartEvent and TaskStartEvent and implemented progress listener functionality in Main . java to enhance event handling for project configuration updates
danielwagnerhall : remove unnecessary synchronization in androidwebdriver
do n ' t throw poolinitializationexception when initialization fail
removed the timeout parameter from the getResult method to simplify the method signature and improve code clarity
changed the ` isNative ` boolean field from a read - only boolean to a transient boolean to ensure that the ` isNative ` field cannot be modified
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of exception handler declaration
rename ruleenablehandler to ruleenablementactionhandler for clarity
no effective change - code cleanup - remove unused variable
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to clarify credential handling and authentication request processing to enhance logging clarity
updated method names from ` getBasicSourceOptions ( ) ` to ` getBasicSinkOptions ( ) ` and ` getFullSourceOptions ( ) `
replaced direct repository ownership check with a try - catch block for null repository retrieval to improve error handling and provide clearer feedback on repository not found
added support for additional font file extensions in SunFontManager to enhance compatibility with additional font file formats
refactor annotation matching logic in AnnotationMatcher . java for improved clarity and consistency to enhance readability and maintainability of the code
change grep command from off to severe
added a check for debug logging before logging input write attempts in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation
refactor variable name from " includes " to " excludes " for clarity to improve readability and maintainability of the code
added a condition to check if ` onHomeIntent ( ) ` is called based on the presence of ` shouldMoveToDefaultScreenOnHomeIntent ( )
updated maximum bitrate from 110 to 30 in PMS configuration to improve performance by allowing more audio
removed duplicate options from the getOptions ( ) method to streamline code by eliminating redundancy
trim whitespace from the description returned by the method to ensure consistent formatting of the returned value
updated the output filename format in XOMParserTest . java to ensure compatibility with the updated file naming convention
[ minor ] remove unused process . pid ( )
added a protected method ` getLoadedMusic ( ) ` in ` MusicLoader ` and ` getLoadedSound ( ) ` in ` SoundLoader ` to
no effective change - code cleanup - remove unused import
added ScreenRecord annotations to RequestPinItemTest . java to enhance test coverage for screen recording functionality
added null checks for lrPauseButton in CPUFeature and MemoryFeature classes to ensure proper button selection behavior
replaced ` PreferenceMultiline ` with a private ` PreferenceCategory ` for managing account preferences to simplify preference management and improve code readability
do n ' t send unavailable message for xmppconnection
modified StringBuilder initialization to use appropriate initial capacity based on utflen to optimize memory usage when utflen is below Integer . MAX _ VALUE
disable statsd export by default
refactor InterruptedException handling to improve code clarity and maintainability
refactor ServiceTicket class to improve code readability and maintainability
simplified SSL verification logic in ConnectionCheckOperation . java to enhance code readability and maintainability by reducing redundancy
updated the logic for determining if a string can be converted to a map by introducing a conditional check for the String type in ArgumentArrayMessageMapper
updated DSpaceObject handling in SolrServiceCommunityCollectionItemFilterPlugin . java and changed expected status from forbidden to ok in ItemOwningCollectionUpdateRestController
updated PasscodeManager to set flags to FLAG _ ACTIVITY _ REORDER _ TO _ FRONT instead of adding AuthenticatorActivity to enhance
refactor PatternParameterConfigurator to remove deprecated annotations to improve code clarity and maintainability
changed the return type of ` beginDraggingWidget ` from void to boolean and added a null check for the drawable in the ` beginDraggingWidget ` method
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable the test due to known issue LUCENE - 4488
added null check for root in DynamicStyle . java to prevent potential NullPointerException when root is null
add a way to write a confusion matrix to the text file
bug 56842 - fix thread context lookup for last sample ok
added unit tests for ` getConnectedDevices ` and ` getConnectionState ` methods in ` ShadowBluetoothHeadsetTest ` to ensure correct functionality of
corrected a typo in the method name from " # autowire " to " # autowired " in PropertyBindingSupportTest . java
updated objectMethods to include " clone " , " toString " , and " finalize " methods in addition to " objectMethods " to enhance functionality to
added null checks for Counters object in IntegrationTestBigLinkedList . java to ensure proper handling of null Counters to prevent potential NullPointerExceptions
added support for referring object references in the debugger connection
updated the setRegisteredServiceFilter method to include a serviceId parameter to enhance the filtering logic to include specific service matching logic
added a null check for the activity before running the Runnable in PhotoFragment to prevent potential NullPointerException when accessing shared resources
corrected the spelling of " LOGGER " to " logger " across multiple Java files to ensure
added string type handling in DatabaseAdaptor and changed access modifiers of session table schema and table creation methods in JDBCSessionDataStore to enhance flexibility
updated UIMAUpdateRequestProcessorTest to replace " language : english " with " suggested _ category " and modified the test method to include
refactor thread name management by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods to improve thread
refactor TaskletAdapter class to improve code readability and maintainability
drools - 2222 dmn dmnmodel # evaluate ( dmncontext , object , string ) should return null if negative ( #
updated texture map creation and progress handling in TextureMap . java and changed default enable check in SplashProgress . java to ensure consistent behavior across different operating
added a tooltip text for the showCGCP checkbox in RocketPanel . java to enhance user experience by providing guidance on checkbox visibility
updated method calls from ` getTypes ( ) . add ( e ) ` to ` addType ( e ) ` in ` EnumFactory ` and `
add text and description to flutterretargetaction and hotreloadflutterapp
do n ' t use the default spreadsheet label if it ' s null
changed BRIGHTNESS _ FACTOR from intValue ( ) to double in BindingConstants . java to improve precision in brightness calculations
refactor SSCMHistoryParser to simplify regex pattern matching and improve clarity to enhance readability and maintainability of the code
added an ` isAdmin ` parameter to the ` createUser ` method in ` HomekitAuthInfoImpl ` to enhance user management functionality to allow users
added null checks and equality checks for indexedWriteMethod in IndexedPropertyDescriptor and Introspector classes , and created a new Test6723447 class
mondrian : fix typo in dynatraceexporterv2 .
updated method signatures in ` Context . java ` , ` Request . java ` , and ` Response . java ` for improved clarity and consistency to
fix mixin ItemStack to use capabilities from spongebuilder
updated assertions in LifecycleUtilsTest to ensure correct execution ID retrieval from binding
added checks for contract type and improved contract validation logic in Wallet . java and GetContractServlet . java to enhance contract validation and ensure
added new package - info . java files for image , module - info . java , and module - info . java in the com . ibm . d
refactor the add method in DocumentsWriterDeleteQueue to improve clarity and maintainability of the add method
added a HashSet to track duplicate JavaFileObject instances to ensure that duplicate JavaFileObjects are ignored during parsing
changed the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to ensure that the host portion of
added support for additional user parameters in the LoginServerTokenEndpointFilter to enhance flexibility in handling OAuth token credentials
added a new constant C _ KEY in LanguageFactoryTest and updated conditional checks in LanguageFactory to include C _ KEY in addition to CPP _ KEY to
replaced the use of ` ThreadPoolExecutor ` with a custom executor service that utilizes ` MoreExecutors . newSingleThreadExecutor ( )
added caching headers and modified response handling in LoginService , FormAuthenticator , and ConstraintTest classes to ensure proper caching behavior and improve response logging
enhanced error logging to include exception details to improve debugging by providing more context in error messages
updated HSSFTests to use TestAreaReference , TestCellReference , and TestRKUtil instead of AllHSSFUtilTests , and modified
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output file before accessing its absolute path to prevent potential NullPointerException when accessing the output file
added ExternalResourceControlPriority imports and set access controller priorities to enhance resource access control during external resource resolution
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure that tests do not fail on Windows machines due to specific error handling
updated HotspotThreadMBean to be final and refactored CPU time testing logic to improve thread CPU time validation and enhance error handling
tabsandindentsvisitor : fix bug with empty comment
updated assertions in TestTriggerIntegration and TestDistribStateManager to enforce limits on collectionRate and totalReplicaRate to improve test reliability and ensure accuracy of
updated change set comparison to be case - insensitive for file path and author comparison to ensure case - insensitive comparison for change sets
added a method to retrieve a string value from the map by key to enhance functionality by allowing retrieval of string values
added date and time formatting based on user preference for military time in TweetActivity to enhance user experience by ensuring accurate date and time representation
nifi - 1979 - fix npe in standardprocesssession when there be no connection
refactor focus request logic into a separate method to improve code readability and maintainability
updated the method of setting the extra class path for files to ensure the correct canonical path format is used
mow - 162 fix synchronization issue
added import statement for org . springframework . integration . core . Message to enhance message handling functionality in the GenericMessage class
refactor SQL query construction to use TaskAttemptFields for joining tasks to improve code readability and maintainability by leveraging built -
updated file filter selection logic in AquaFileChooserUI to ensure correct filtering behavior based on user input
fix potential deadlock when create ice stream
updated ArrayPtg to return " TRUE " for boolean values and added a new testToFormulaString method in TestArrayPtg to enhance functionality
updated imports in PGtokenizerTest . java to use specific assertions methods to enhance test reliability and maintainability
refactor Java2TypeScriptTranslator to improve handling of class declarations and variable assignments to enhance code clarity and maintainability by separating
added support for auto - increment columns in PostgreSQL to enhance database compatibility with PostgreSQL
updated byte reading logic in DataInput . java to correctly handle negative byte values to prevent potential errors
updated assertions in ImageParserTest to check for both VerticalPhysicalPixelSpacing and HorizontalPhysicalPixelSpacing dimensions to ensure accuracy in measurement of physical spacing dimensions
updated parent retrieval in Component . java to ensure the correct parent is accessed
updated import statements in AddNotNullConstraintChange . java and modified schema comparison logic in StandardDiffGenerator . java to enhance clarity and consistency in schema
replaced ` ENGINE _ finish ( engine ) ` with ` ENGINE _ free ( engine ) ` and replaced ` ENGINE _ finish ( dynEngine ) ` with
added iteration event firing functionality across multiple controllers to enhance user interaction by allowing iteration events to be properly handled
release httpcontent on release
added a call to delete logs in TestRecovery . java to ensure proper cleanup of log files during recovery
added conditional logic to load the URL based on the " twitter : / / " URL in BrowserActivity to ensure proper handling of URLs containing " tw
[ hotfix ] [ test ] fix checkstyle violation in deploymentgrouptest
changed log result from false to true for listing labels to ensure that the list of labels is accurately reflectable
increased the maximum number of auto retries from 0 to 25 in RestTemplateRetryTests to enhance test reliability by allowing more retries
removed unnecessary System . out . println statement from TranslatorSupportTest . java to streamline output for clarity and maintainability
added support for a fraction resource type in multiple classes to enhance resource loading capabilities for fraction resources
added a confirmation check for file writing in BasicFrame . java to ensure that the file is written correctly to prevent errors during file operations
added assertions for tagGroupId and artifactId in the findNewerDependencyVersion method to ensure that groupId and artifactId are valid to prevent potential NullPointer
hbase - 26975 quotaExceededException should n ' t be throw if namespace table do n ' t have sufficient table quota ( # 4
refactor multiple Java classes to improve code organization and maintainability
refactor TestFuzzPreLoop class structure to improve code readability and maintainability
added a check for negative f0 in HTSVocoder . java to ensure f0 is not negative to prevent potential errors during processing
added null checks for ` pkColumn ` and ` fkColumn ` in ` ForeignKeyRetriever ` and ` TableRetriever ` classes to
improve performance of b2cconverter
added SharedPreferences functionality to control empty screen behavior based on user preferences
deprecate cucumber - needle in favor of cucumber - jakarta - cdi2
replaced TestActivityWithAnotherTheme with Resources . Theme and updated theme handling in ShadowThemeTest and ShadowArscAssetManager to streamline theme
updated error messages in VerifyFast . java to use Arrays . toString instead of Arrays . toString for better clarity to enhance readability and maintainability
no effective change - remove unused migration
updated proto retrieval methods in ScriptObject and related classes to improve clarity and consistency in proto handling logic
fix testfilterdirectoryreader to use random ( ) instead of collections . shuffle ( readers )
added conditional logic to retrieve display name based on user name to improve clarity of remote clarification based on user context
updated path formatting in CookieRetrievingCookieGenerator to handle blank paths gracefully
removed redundant closing brackets in multiple Java files to improve code readability and maintainability
updated cache name retrieval to use total backup count instead of backup count to ensure accurate backup count reporting for partition loss events
updated the comparison logic in ValidationResult to check for non - zero page numbers to ensure accurate validation of page number comparison
added a condition to check if the focused widget is the same as the currently focused widget to enhance the functionality of the UIDropdown
reformatted the playSoundAtLocationExcept and playSoundPitchRange methods to improve code readability and maintainability
refactor ApplePackageDescription to use FlavorDomain instead of FlavorDomain < AppleCxxPlatform > to enhance flexibility by allowing
add test case for show ololoed format with tab separator
changed method names from onConnect to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory to improve clarity and consistency in naming conventions
refactor EnglishPTBTreebankCorrector class to improve code readability and maintainability
added a new file ` testGetLoggerNPE . java ` to test logger behavior with Java AWT to ensure proper handling of logger retrieval and
added a ConcurrentHashMap for storing application context data to enhance thread safety and prevent concurrent access issues
do n ' t call getsafemode ( ) in staticobject because it ' s not thread - safe
added support for recognizing " NEXT VALUE FOR " in expression parsing to enhance flexibility in parsing SQL expressions with varying next values
improve error message when access resource bundle that be not pre - cached
refactor BoundedLocalCache to improve node removal logic and add a new test for pending writes to enhance cache management and ensure pending writes
added Leverage _ Level parameter to QuoineExchange and implemented order direction handling in QuoineNewMarginOrderRequest to enhance order management functionality
added a method ` boundInitialization ( Class < ? > beanClass ) ` to ` PropertyDescriptor ` and created a new test class ` Test
refactor LwjglApplicationConfiguration to use LwjglGraphics . SetDisplayModeCallback instead of failsafeWidth and failsafeHeight to
added null check for buttonsAwatingRelease in Tabs . java to ensure proper handling of release button management
refactor wrap width calculation in LineCell . java and update StyledTextAreaSkin . java to improve
updated string formatting in XSLTErrorResources _ it . java to improve readability of error messages
replaced HashMap with LinkedHashMap for parameter values in CustomChangeWrapper and CustomPreconditionWrapper to ensure predictable iteration order to maintain predictable iteration order
updated string formatting in multiple classes to use String . format for consistency to improve readability and maintainability of the code
replaced ` getNamespaceContext ( ) ` with ` getNamespace ( prefix ) ` in ` StaxXmlPullParser . java ` to streamline namespace URI
added nestedJoins configuration to multiple test classes to enhance flexibility in managing nested joins configurations
updated condition in QueryManagerImpl to check if caller is not of the root admin account type instead of the normal account type to ensure that only root admin
added imports for JavacFileManager and updated CompletionTaskProcesor constructor to accept a cursor parameter to enhance flexibility in processing compilation tasks
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to enhance security
replaced the usage of ` assert . assertthat ( ) ` with ` assertthat ( ) ` in KuduIOIT and XmlIOTest classes to
use util . createhandler ( ) instead of create a new handler
update offsetMemSize calculation to use Long . BYTES instead of Long . SIZE and add a new test for symbol file mapping in LineTcpConnectionContextTest
removed redundant print statements in TermFilterTest . java to clean up the code and improve readability
deleted the ` Reflection ` class and removed the ` TypeConverters ` class to streamline the codebase by eliminating unused components
refactor ThreadlessExecutor to encapsulate finished and waiting states in a dedicated method to improve code readability and maintainability by reducing dup
formatted DateTimeFormatter to handle null context and error index correctly to ensure proper error handling and prevent potential NullPointerExceptions
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ kb ` and introduce ` chunkLengthInKB ( ) ` method to
added a new class ` T7034495 ` with multiple interfaces ` A ` , ` B ` , and ` C ` with generic types ` W
simplified the loop structure by removing unnecessary braces to improve code readability and maintainability
added a break statement for hop characters in TransclusionDecideRule . java to ensure proper handling of specific hop characters in the decision logic
remove ` micronaut . version . micronaut _ prefix ` from ` micronaut . java `
added unit tests for Area3DPtg in TestBugs . java to ensure correct handling of name definitions and their relationships
updated MindIcon creation to include a description for better clarity in resource bundle retrieval
updated onHomeIntent method to accept an additional boolean parameter to enhance flexibility in handling the internal state of the launcher
removed redundant calls to getPreferDependencyTree ( ) in CxxBuckConfig . java to streamline dependency tree retrieval logic
added a new method ` showDetails ` to ` FileDisplayActivity ` for displaying file details based on the active tab index to enhance the
corrected spelling of " $ apply " and " applyStatic " across multiple files to improve code readability and consistency
added a capacity check and a randomized state generation method in MinimalEncoder . java and updated corresponding tests in HighLevelEncodeTestCase . java
updated header description and parameters in SourceBuilder . java to include " | - " and " | - " for clarity to enhance readability and
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to enhance data synchronization functionality
added a method to set the default WAL sync mode in ShadowSQLiteConnection to enhance control over synchronization behavior
updated the condition in RemoveJavaDependenciesAdapter to check the erasure of the target expression type and added assertions in Collections . java to enhance type safety
removed several AWS - related methods from DefaultS3CrtAsyncClient to streamline the code by eliminating unused parameters
updated corrupted stream length check from 447 to 66 in ParserTest . java to ensure compliance with updated validation requirements
improve error message in hazelcasttestsupport
graphbuilderphase : do n ' t generate a goto if the condition match
mow - 169 fix image load issue in desktop
refactor SQLXML class to improve code readability and maintainability
added a limit parameter to the getOrderBook method in YoBitMarketDataService to allow for more control over order book retrieval
move gotothomeexception to vm . share . gc for consistency
added StreamReadConstraints to enforce maximum string length constraints to enhance data serialization flexibility
updated the method of retrieving the engines string to accept an empty string as a default value to ensure that the application defaults to an empty string when no engines
renamed ` FullIterator ` and ` WheelIterator ` to ` WheelIterator ` and updated method implementations to
added error handling for customized bug pattern generation
[ hotfix ] [ test ] fix flaky localchunkprovidertest
changed the visibility of the menu item from true to false to disable the uncomplete checklists functionality
refactor DefaultResultSetHandler to resolve discriminated result maps and add a new Contract class for handling result maps to enhance result map resolution
added null checks for defaultHome and unregistering the receiver to enhance stability by preventing potential NullPointerExceptions
removed VertxGen annotation from PumpImpl . java to streamline code by eliminating unused dependencies
removed unnecessary type casting when sending downloaded files in FileDetailFragment and OCFileListFragment to simplify code and improve readability
trim trailing and leading spaces from a token in ConfigAttributeEditor and add a test for this functionality to ensure that configuration attributes without trailing or leading spaces are
refactor ClassUsingAuxiliary and selfClassWithAux files to improve code organization and maintainability
svm : fix classnotfoundexception in dynamichub . getunnamedmodule ( )
modified DatabaseMetaData handling to differentiate between " SYSTEM TABLE " and " TABLE " based on the presence of " pg _ " prefix
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated the argument type from short to short for rqst in ThriftHiveMetastore . java and modified exception handling in HiveMetaStore . java
added a new module - info . java file for the core module in the com . speedment . runtime . core package to define module dependencies and exports
added checks for idle flush state and interested state in SslConnection to ensure proper handling of encrypted output during SSL operations
updated Log4j2LogDelegateFactory to implement LogManager and added a new NoExceptionInInitializerErrorTest class to enhance logging functionality
refactor execution environment handling to use boolean variables for server and client VM checks to improve code readability and maintainability by reducing duplication
refactor methods in ExecutableFindOperation , ReactiveFindOperation , and ReactiveMongoOperations classes to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to PGProperty . java by default to enhance compatibility with PostgreSQL ' s
disable flaky interprocess semaphore test
added sorting functionality for resource names in EditableResources . java to improve readability and maintainability of the code
added a new class OSvTerminal and integrated it into TerminalFactory to support OSV terminal emulation for users
added support for additional file types in ClassType to enhance compatibility with additional file formats
changed ` HashMap ` to ` TreeMap ` for ` combinedVectors ` and removed duplicate entries in ` DrillTestWrapper . java ` to
added a condition to skip processing if names or values do not match to enhance performance by avoiding unnecessary iteration
refactor WebSocketPolicy class to improve code readability and maintainability
corrected spelling of " readPhoneStatePermissionGranted " to " accessWifiStatePermission " across multiple classes to improve code readability and
add ability to customize message resolution behavior
replaced ClassVisitor with Class < ? extends MethodVisitor > for creating a new visitor instance to enhance type safety by explicitly defining the class type
added a new class LoggingAuditService to handle user authentication logging to enhance auditing capabilities for user authentication processes
added nullability annotation for temperature and fahrenheit parameters in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to en
no effective change - code cleanup
camel - 14263 : camel - http - add support to configure http proxy .
updated MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to reflect the latest encoding requirements
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to enable serial filtering functionality to enhance debugging capabilities
camel - 14263 : camel - core - optimize the pool size to reduce object allocation
removed the ` forceFinished ( true ) ` method from ` StaggeredWorkspaceAnim ` , ` WorkspaceRevealAnim ` , and ` PagedView
updated the parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` in the ` ensureRealtimeClusterIsSetUp ` method to ensure
added ` isError ( ) ` method to ` ValidationReport ` and updated error handling in ` DisallowValidator ` and ` RefValidator `
refactor inline QSB handling in InvariantDeviceProfile . java to use a dedicated boolean array to improve code clarity and maintainability by
added URL decoding functionality to the createClassPath method to ensure proper handling of special characters in location URLs
updated regex patterns in TransformSteps . java to enhance flexibility in method argument handling
fix npe in pgraphicsjava2d when image be null
increase timeout for fault tolerance test
updated package - info . java files to improve documentation clarity
set the Docker image URL in Environments . java to enhance image configuration flexibility
kristianrosenvold : fix memory leak in knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock files to improve code organization and maintainability
added a copyFile method to handle file copying in SnapshotTaker to ensure the target file exists before copying to prevent errors when copying files
renamed the ` appendToDescription ` method to ` getDescription ` across multiple classes to improve clarity and consistency
[ api ] fix npe when call todevice ( ) on the same thing multiple time
added a condition to check if ` xml ` is an instance of ` Xml . Document ` before calling ` FindIndentXmlVisitor ` and ` FindLine
updated imports in NotesHelperTest , GeocodeHelperTest , and ReminderHelperTest to use AndroidJUnit4 instead of InstrumentationTestCase
added GasLimitRule and ParentGasLimitRule to the list of rules in CommonConfig . java to ensure proper handling of gas limits based on the
changed the access modifier of ` setupData ( ) ` method from public to private and removed the ` setupData ( ) ` method from multiple test classes
renamed the ` autocommit ` variable to ` runInTransaction ` in the ` ChangeSet ` constructor to clarify the purpose of the variable
added null check for listener before closing deframer to prevent potential NullPointerException
updated references from " . / . / ops / state / task _ failure _ recovery " to " { . Site . BaseURL } " in Restart
added a new test method ` testIssue154 ` to verify SQL parsing and deparsing for discount discounts in ` SelectTest . java ` to ensure
refactor Common class to improve code readability and maintainability
refactor launch handling in Launchable . java to use a try - with - resources statement for better resource management to ensure app launches are
[ hotfix ] fix checkstyle violation in streamexecdeduplicate
( chore ) camel - kafka : log exception when send kafka message to topic
added PersistentPropertyAccessorFactory and setPersistentPropertyAccessorFactory methods to SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to enhance data mapping capabilities to
changed the return type of the setCoord method from void to boolean and updated its implementation in GeoCoordSys1D and GeoSegment3D classes to
added scroll event handling logic in AskGestureEventsListener . java to improve user interaction responsiveness during scrolling
modified the comparison logic in NGramEstimator to prioritize keys in ascending order to enhance the accuracy of score comparison
updated imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to align with the
updated method calls to retrieve folder icon properties from the folder icon to ensure accurate representation of folder icon properties
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to improve cl
add a new file TestSkeletonPredicates . java for testing skeleton predicates to facilitate testing of loop predicates with different parameters
refactor SelectionHighlighter to improve equality checks and add a hashCode method to enhance code clarity and maintainability by standardizing equals method implementations
added a new ` StringResultConverter ` class to convert ` String ` to ` String ` with a specified charset to enhance flexibility in
camel - 19751 : camel - core - spi should not run test on apache ci
updated the condition in JansiWinSysTerminal from checking if the object is non - zero to checking if it is zero to ensure correct handling of object
added null checks and reset buffer limits in BufferUtils . java to ensure proper buffer management and prevent potential NullPointerExceptions
updated data directory path assertion to use File . separator for cross - platform compatibility
updated OS detection logic in AutoUpdaterServerProperties to support macOS and mac
updated lock instantiation to use getAbsolutePath ( ) instead of getFile ( ) for better clarity to enhance readability and maintainability of the code
updated waitForLauncherObject method to use " apps _ view " instead of " appIcon " to improve clarity and functionality of the launcher object
updated references from ` Invocable ` to ` ClientDatagramEndPoint ` for consistency and clarity to improve code readability and maintainability by
updated the SQL query in the GET _ STEP _ EXECUTIONS constant from " oreder by STEP _ EXECUTION _ ID " to " order
changed button return value from LEFT to - 1 and added a check for unknown buttons in LwjglInput . java
added tests for task submission with approve and reject permissions in TaskRestRepositoriesIT . java to ensure proper handling and validation of task claimed tasks
replaced the logger variable with a static logger for OpenIdServiceResponseBuilder to improve logging consistency and maintainability
removed the validity period from the expiration date in SsoAccessTokenProvider . java and updated method visibility in SsoAccessTokenProviderTest . java to
do n ' t run test on macos due to github build
added methods to create and retrieve alarm suppressions in GreetResourceMockedTest . java to enhance monitoring capabilities for alarm suppressions in
removed redundant lines in JFrame . java to improve code readability and maintainability
refactor database connection handling by using a try - with - resources statement to improve resource management and avoid potential null pointer exceptions
refactor metrics context handling in SuggestComponent to improve clarity and consistency in metrics context management
refactor OCFileListFragment to improve file and folder count handling to enhance readability and maintainability of the code
changed " HashKnownHosts " from " yes " to " no " in ScpServerTestSupport . java and updated loadKeys method to return an
refactor SourceVersion class to improve code readability and maintainability
added a new test class ` ThreadFactoryTest ` for verifying thread creation and error handling to ensure that the ` QueuedThreadPool ` behaves
refactor lock period retrieval to use a dedicated method to improve code clarity and maintainability by centralizing lock period logic
added a ticket model instance in EditTicketPage . java to enhance ticket management functionality
enable dimiss apps from predicted list by default
updated constructor parameters in multiple assert classes to include a self type parameter to enhance type safety and prevent potential ClassCastExceptions
added MENU _ QUOTE option and modified MENU _ DELETE _ TWEET , MENU _ OPEN _ WEB , MENU _ CLOSE _ WEB , and
make thread interrupt lock more robust
use decrypt - only codec instead of passthrough
added a conditional check for result before offering failure in ServerHTTP2StreamEndPoint . java to ensure failure handling only occurs if a result is available
updated the German XSLT error message from " Stiller Modus " to " Silent - Modus " to enhance clarity and
[ hotfix ] fix checkstyle violation in checkpointcleaner
replaced ` rx . Observer ` with ` rx . Subscriber ` for subscription handling in ` MockRestAdapter ` and ` RestAdapter `
reformatted the creation of the components . yml file in ComponentPresetManager . java to improve code readability and maintainability
added support for unique column names in JDBC tests to enhance test coverage for unique column names in Hive results
refactor MaryClient and MaryGUIClient to streamline voice selection event handling to improve code readability and maintainability by reducing
added validation for session validity and implemented a test for invalid sessions to ensure that invalid sessions do not cause exceptions to occur during session handling
deleted the ExceptionHelper . java file to remove unused code that is no longer needed
increased the key pair generation capacity from 256 to 255 to accommodate longer key pairs and improve security
updated TestBlockPostingsFormat3 to set the codec to Lucene41PostingsFormat to ensure compatibility with the latest Lucene standards
[ hotfix ] add log for empty checkpointrange header
added support for RSA / ECB / OAEPPadding algorithms in the asymmetric wrapper implementation to enhance compatibility and error handling during algorithm creation
updated platform checks from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with both DARWIN _
refactor exception handling in DebugSourcesResolver for better clarity and logging to improve error handling and provide clearer warnings for unresolved URIs
modified the UNIX socket return logic in AbstractTest . java to ensure correct values are returned for non - UNIX operating systems
updated FileUploadUtils and ControllerConf to set JERSEY _ ADMIN _ IS _ PRIMARY to true and modified upload logic to ensure
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple classes to ensure proper memory management and avoid potential memory leaks
enable fastsyncchaindownloader by default
updated time zone handling in SimpleDateFormat . java and added a new class Bug7130335 . java with a test method for date parsing to
refactor icon selection logic in AllAppsView . java for clarity and consistency to improve readability and maintainability of the code
server : fix npe in getdefaulthypervisors method ( # 5663 )
refactor StringBuffer class to improve code readability and maintainability
[ drools - 641 ] add uid to the rule resource
added a null check for the listener before unsubscribing from the registry to prevent potential NullPointerException when the listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class to allow configuration of pretty printing for JSON transformations
change access _ table access _ table from private to public to allow access to the access _ table array from outside the class
updated error messages in DataSourceInitializer and its tests to clarify resource existence to improve clarity and accuracy of error reporting
do n ' t swallow ioexception , just throw it
refactor multiple Java classes to improve code organization and maintainability
added ` effectiveClusterVersion ` and ` isUpgradeSuspended ` parameters to various methods in ` AmbariManagementControllerImpl ` to enhance clarity
added a copyright notice for the Google Inc . to prevent further updates to the code
removed the declaration of the final List < Field > wfields to streamline the code by eliminating unnecessary field declarations
added default key sizes for encryption and signing in OAuthProperties to enhance flexibility in key sizes for improved security
hbase - 26937 use getcolumnfamilycount ( ) instead of getfamilies ( ) . length ( ) in hbase -
updated the alias checking logic in SampleWebJspApplicationTests to use a lambda expression to improve readability and maintainability of the code
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , Serializable , and package - info files to improve code organization and maintainability
added a reset method to Cluster interface and implemented it in ClusteredServiceAgent to provide a mechanism for resetting the cluster state
updated the currentChunkID initialization in ChunkedWriter . java to correctly increment the currentChunkID to ensure proper sequence file generation for the current chunk
added a new abstract class ` AbstractJobExecutor ` to manage job executions in the ` JobExecutor ` class to enhance job execution management to improve
[ hotfix ] fix checkstyle violation in recoverystrategy
rename huge - static - base to static base for good clarity
( chore ) camel - consul : fix checkstyle issue
updated hashSalt generation to use SecureRandom for secure random number generation to enhance security by preventing collision attacks
improve traceability of parse failure during runtime compilation
updated time calculations in TimeOnTimeComparisonHandler to account for aggTimeBucketMillis to ensure accurate time interval handling
added imports and modified the answer method to include a globally configured answer for abstract methods in CallRealMethods . java to enhance functionality to
refactor package access checks in NashornScriptEngine and Context classes to enhance security by ensuring proper package access validation
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup to enhance plugin functionality and ensure proper error handling during plugin
renamed ` dtm ` to ` model ` for consistency and clarity to improve code readability and maintainability by using a uniform font
added support for the " has - touch - interaction - service " interaction protocol in QuickstepTestInformationHandler and LauncherInstrumentation to enhance testing capabilities
refactor ConnectAction to use a mutex for writing access to the connection dialog to improve thread safety during concurrent access operations
updated the ` computeShowOptions ` method to use ` BuildTarget ` instead of ` String ` and ` DisplayOptions ` instead of ` String `
[ wasm ] add miss package declaration .
added support for home and end cases in the Home and End cases in the Less . java file to enhance user navigation functionality for better usability
removed synchronization and simplified the loop structure in PlotHandler . java to improve code readability and maintainability
refactor intent creation in Utilities . java to use Intent . createChooser for better activity selection to enhance code readability and maintainability by
removed the public modifier from the Roster constructor to allow access to the constructor from other classes
added basic constraints to certificate generation extensions to enhance security by ensuring basic constraints are not violated
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to ensure correct handling of fixed transform offsets in text rendering
removed unnecessary checks for multi - valued fields in TrieDateField and TrieField to simplify code logic for better readability and maintainability
removed the TaskbarStateHandler class and updated related imports in BaseQuickstepLauncher and TaskbarStateHandler to streamline taskbar state management
added a new file ` ArrayLength . java ` that tests the behavior of ` getFields ( ) ` and ` getDeclaredFields ( ) ` methods
wait for hazelcastprocess # destroyforcibly ( ) to complete before kill it
refactor ApplicationSettingsService to use @ PostConstruct instead of @ Singleton
updated assertions in Safepoint . java for value validation to ensure correct handling of negative values
updated thread name field initialization from " [ C " to " Ljava / lang / String ; " to " Ljava / lang / String ; "
updated DEFAULT _ RAND _ SEED value from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hnsw
add stroke object to pgraphicsjava2d to allow customization of stroke style
refactor SqlValidatorImpl to encapsulate the expansion of dynamic star columns into a separate method ` expandDynamicStar ` to improve code readability
added a method to find interested children in the Comment2000 class to enhance the functionality of Comment2000 to support structured child records
added import for Messages and set a warning status icon in the HTTP server to enhance user experience by providing a clear indication of the issue
fix ( opengl ) : use getmodifiersex ( ) instead of getmodifiers ( )
node cost : use 3 cost instead of 6
camel - 14263 : camel - as2 - should not set content - transfer - encoding header when disposition setting be not apply .
refactor Locale class to improve code readability and maintainability
added a method to clear the log message in ErrorConsoleController and implemented a clear method in ErrorConsoleViewModel to enhance logging functionality to improve user experience
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
updated caption handling to use LocaleHolder instead of ConsolePlayer to improve clarity and maintainability of caption management
added connection pooling support to multiple test classes to enhance resource management and prevent potential memory leaks
simonstewart : add support for operaBlink in the default driver session
improve error message when download fail
added multiple new Lifx product models including " Lifx Beam " , " LIFX Color " , " LIFX Switch "
added asynchronous request handling for replica creation in OverseerCollectionProcessor and CollectionsHandler to enhance asynchronous collection creation capabilities
updated PGSQL _ PK _ BYTES _ LIMIT and PGSQL _ PK _ SUFFIX variables in PostgresDatabase . java and PostgresDatabase
updated LogPage and SummaryPage to use objectId instead of repositoryName and added a default reference ID if none is provided to enhance flexibility by
updated bone model space rotation multiplier from UNIT _ Y to UNIT _ XYZ to improve clarity and accuracy in bone representation
added a new method ` browserDestroy ` to ` AndroidImplementation ` for managing the destruction of the browser component to improve the responsiveness of the
added a wait for the " readApiTestViolations " collection in AutoScalingHandlerTest . java to ensure the test accurately reflects the
updated ScreenTerminal . java and Tmux . java to handle foreground and background attributes correctly to improve terminal character processing and ensure correct foreground and background
updated SoftResetAction to check controller states in addition to idle and hold states to ensure correct reset behavior based on the current controller state
disable on - disc stream cache to speed up texture pack reloading .
added logic to retrieve the parent folder resource in both Request . java and RequestV2 . java to ensure correct resource retrieval based on media renderer availability
rename ' isPersistent ' to ' persistent ' for clarity
added a close method to FileOutputStream to ensure FileOutputStream is properly closed to prevent memory leaks
added error handling for 403 responses in StandardGitHubRepository . java to improve robustness by catching potential exceptions related to HTTP 403 responses
log4j2 - 1343 add getoriginal ( ) method to messagefactory2adapter to allow messagefactory2adapter to be wrap in messagefactory
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to multiple test classes to suppress serialization warnings during serialization tests
updated regex in Version . java to match the minor version to ensure accurate version matching for minor releases
removed initial delay and dismiss delay settings from ToolTipManager in ExtractionModelFrame . java to improve application stability by reducing UI responsiveness
refactor ProjectCommand to use immutable sets for passed - in targets and target graphs to enhance code clarity and maintainability by reducing
updated TimeTest . java to set the timezone from UTC to UTC and added an assertion to verify the correct formatting of the time
refactor MediaSessionConnector class to improve code readability and maintainability
updated the SSL support retrieval method in Http11NioProcessor to use the correct SSL implementation from the handler
updated GpsLoggingService to display altitude and accuracy based on user preference instead of hardcoded values to improve clarity and usability of accuracy text
added a method to check if Futures _ Enabled is enabled in BinanceExchange and updated relevant account services accordingly to enhance future exchange metadata
refactor admin account management helper to use instructorcoursestable instead of accounts
set accept queue size to max worker thread in thrift connector
replaced ` getClass ( ) . getName ( ) ` with ` getProperty ( PROPERTY _ DISABLE _ WATCHER ) ` in ` PathWatcherService .
camel - 14263 : camel - jms - allow to turn off ssl by default
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated exception handling in ` TestWindowFunctions
removed assertion for duration calculation in GCInspector . java to ensure duration does not exceed zero for a really fast collection
fix nodewithjavadoc to return empty javadoc instead of null
added a method to check if the operating system is macOS and refactored memory reservation logic in WhiteBox . java to improve compatibility with macOS
added multiple calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing or splitting scenarios
hbase - 2593 addendum add procid to exception message
camel - 15836 - camel - cxf - allow to set the service class for the wsdl service factory bean . thanks to joao for
modified YamlChangeLogSerializer to serialize change sets as a map instead of a string to enhance flexibility in handling YAML change logs
replaced the println statement with a newline in SchemaPrinter . java to ensure consistent formatting of output for clarity
refactor DebugRoadRegen and SchematicHandler to streamline road regeneration process to improve code readability and maintainability by reducing
updated HomeFragment initialization to use getActivity ( ) instead of Context to ensure compatibility with the current activity context
added GenericGenerator annotations to several Java classes to provide a standardized way to generate generic types for generated values
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature and improve code clarity
modified the writing method in BZip2Codec to include position and remaining in uncompressedData and adjusted ByteBuffer allocation in TestBZip2Codec to enhance
move start of applet from web to desktop
added a new constant VALUE _ TYPE _ EMPTY and modified the creation logic in Value . java to ensure a default empty type is used when needed
use equal instead of = = for group comparison
refactor Liquibase and LiquibaseDropAll classes for improved clarity to enhance maintainability and readability of the codebase
refactor SimplexNoise class to improve code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating instances of ` TargetNode ` objects to enhance flexibility
fix typo and minor cleanup
added a new ` ArtifactVersionAdapter ` to the ` Gson ` builder and changed ` ModContainer ` to be transient to enhance serialization and deserialization
added a boolean flag ` hasPrevious ` to track and manage the previous value of a key in the ` NativeArray ` to ensure proper handling of the
updated file saving logic to use the parent file ID from the storage manager to ensure the correct parent file is set for the current upload
added a new test class UTF8ReaderBug for validating supplementary XML characters to ensure correct parsing of supplementary XML characters in XML input
added unit test base on user forum issue
updated assertions in BinanceIntegration and BinanceUsIntegration to include depth20 and depth20 channels to ensure correct handling of trading depths in the
added resetAllocation method to Wrapper class to reset allocation state effectively
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
refactor property handling in the Agent class to synchronize access to system properties to ensure thread safety when accessing system properties
[ hotfix ] fix checkstyle violation in modelutils
refactor AbstractDoubleArrayAssert for improved clarity to enhance maintainability and readability of the code
updated text width calculations in Legend . java to account for additional space adjustments based on label positioning
added delay and abort methods to CodeFirstSpringmvcIntf , TestResponse , and SpringMvcIT classes to enhance control over delay and abort
updated method calls to use getValues ( fieldName ) instead of getValues ( fieldName ) for better clarity to improve code readability and maintainability
replaced the direct call to ` ruleResolver . requireRule ` with a new ` BuildTargetSourcePath ` class to improve code clarity and maintainability
do n ' t download message if versioning be disabled
changed return type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` variable to track the number of
removed the " - b " argument from the AidlStep and GenAidlTest files to simplify command execution and improve readability
add a new test case for issue79 for detect bug .
added a todo comment for the flaky test
replaced error handling with revoke leadership in EmbeddedLeaderService to ensure leadership is released when an error occurs
3 . x : optimize compositediscoveryclient # getinstances ( ) ( # 6022 )
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in method naming
[ hotfix ] [ doc ] update jobmanageroptions description
refactor ` updateNoWidgetsView ` and ` updateNoSearchResultsView ` methods to improve clarity and functionality to enhance readability and
added class loading for WstxOutputFactory in XmlUtil . java and updated tests in MultiVersionXmlParserTest . java to enhance
added setup method before the test method in AuditAliasCommandIntegrationTest to ensure the test environment is properly initialized before running tests
added logging statements to ` WidgetsFullSheet . java ` and ` WidgetsRecommendationTableLayout . java ` for better visibility and debugging to enhance
( chore ) camel - cxf : disable fail test
added a try - catch block around the update ( ) method to handle potential exceptions during the periodical refresh process
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to use Lombok ' s RequiredArgsConstructor and improve provider
added a method to check default background fills in HSSFCellStyle and updated related classes to utilize this method to improve code clarity and
refactor ZonedDateTimeFormatterBenchmark class structure to improve code readability and maintainability
refactor DistributedUpdateProcessor to use a new method for buffering updates and add a new test class for it to improve code readability and
added a null check for the stage in the simulation list handler to ensure that the simulation logic handles scenarios where the stage does not exist
modified the edit command to include a boolean parameter for allowing all allowed blocks to enhance flexibility in block replacement functionality
refactor ExtendedMasterSecretExtension class to improve code readability and maintainability
changed the declaration of the processor variable to be final to ensure that the processor variable cannot be reassigned after initialization
added a listener to handle write failures in WritableKeyProcessor to improve error handling during write operations
added " CUBE " to MySQLDatabase . java to enhance functionality for CPU usage monitoring
added a try - catch block around the rm method call to handle potential IOException during file removal
refactor ExperimentalRobolectricTestRunner to MultiApiRobolectricTestRunner and rename TestClassRunnerForParameters to TestRunnerForApiVersion to
refactor DefaultOkHttpClientFactoryTest to use getter methods for connection timeout , read timeout , follow redirects , and connection pool to improve code clarity and
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code clarity and maintainability
added a null check for the output stream to prevent potential NullPointerExceptions during execution
g3d - 390 : fix bug in av ' s splitpane when resize .
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified the ` jailerMain ` method to include a
refactor HttpRequest class to improve code readability and maintainability
added a shared preference to track unread pull notifications in TalonPullNotificationService to improve tracking of unread pull notifications for better user experience
added a check for the object ' s kind in the IsNullNode class to ensure that the first input is always null to prevent potential NullPointerExceptions
updated delta time and memory calculations in Box2DTest . java and improved camera initialization in Pong . java to enhance accuracy of
updated layout manager initialization logic in ViewPostDetailFragment . java to ensure proper handling of comments recycler view based on device orientation
[ hotfix ] [ client ] change log level from trace to warn
added debug print statement in JimpleBodyBuilder . java to facilitate troubleshooting by providing insight into method instance flags during execution
ggb - 2118 mouse touch gesture now work on ie +
added device ID parameter to the getNotificationUsers method to enhance notification user filtering based on device ID
updated the base URL in CGIARProvider from " v4.1 / 5x5 _ TIFs " to " srtm . csi
removed the removeAll ( ) method from the file chooser and added a new class bug6520101 to implement a test for bug 6520
change the return type of the ` handle ` method from ` void ` to ` boolean ` in multiple UI - related classes to ensure that the
refactor BuildRuleResolver methods to improve type safety and error handling to enhance clarity and maintainability of rule resolution logic
hide the transport spinner when making a shortcut .
added null check for attributes _ field in mmm Attr . java and created new annotations T7043371 . java and T7073477 . java
added a return statement to the backPressed method in BookmarkFragment , BookmarkListRootFragment , CategoryDetailsActivity , ExploreFragment ,
added support for long view index type in query services to enhance query capabilities for long view index functionality
corrected a typo in the append method call from " V " to " v " to ensure proper formatting of the output value
updated the path handling in PrivateKeyParserTests to use StringUtils for clearer path formatting to improve code readability and maintainability
removed the columnPosition parameter from the diffDropColumn method signature to simplify the method signature for better readability and maintainability
updated IndexWriter and IndexWriterConfig initialization to use TEST _ VERSION _ CURRENT instead of VERSION . LUCENE _ 40 to ensure compatibility with the latest
hbase - 26975 add a configuration option to disable column family check
[ java ] : use logsubscriptionid instead of logrecordingchannel in archive recording .
replaced calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent ) ` and added visibility handling for voice button proxy to en
added a conditional check for the presence of a " i " text value in the JSON node from PoloniexStreamingService . java to prevent processing
refactor Procedure class to improve code readability and maintainability
added Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) to ResourceBundle getBundle calls in Toolkit and Window classes to enhance resource
[ j2kt ] normalize array creation by kotlin
added checks for zero counts in PerSegmentSingleValuedFaceting . java to ensure
replace Optional . fromNullable with Objects . firstNonNull for handling authorList to improve null safety to enhance code clarity and prevent potential NullPointerExceptions
added a new requirement for the ` sun . misc ` import and created a test class ` OSGiTest ` for verifying dependencies to ensure
refactor control service enabling logic into a separate method to improve code readability and maintainability
hbase - 26709 hbase - 26711 hbase - 26711 hbase - 26711 hbase - 26711
refactor ( jdt ) : update jdt package to match late refactorings ( # 2451 )
simplefeature # hasuserdata : add hasuserdata ( ) method to simplefeatureimpl
removed the ` throws HiveException ` clause from method signatures in ` ExplainTask ` and ` DDLPlanUtils ` classes to simplify the exception handling
refactor RelyingPartyRegistration class to improve code readability and maintainability
removed the ` enableLogging ` method from ` JavaCompiler ` to streamline logging configuration for better readability
added a new class ` InJavaSourceSet ` for handling Java source sets to facilitate the inclusion of Java source markers in compilation unit
test gdalparser : fix broken test
added a new method createGetter to the ReflectionHelper class to provide a way to create getter methods for object attributes
removed the use of external storage from the SDK condition to simplify the SDK version check for compatibility
added a new constant INDEXER _ NO _ COMMIT to IndexerMapReduce and updated related classes to utilize it to enhance indexing capabilities by
api : fix createvolume api to not require both disk offeringid and snapshotid
updated content assignment in ToHtml . java and modified assertion in BaseTestCellComment . java to check for non - empty notes instead of empyy
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime `
added a new test class for handling specific error types in requests to ensure proper error handling for specific error types in requests
replaced the signum method with a static signum method in PositionUtils . java to simplify the code and improve readability
added visibility handling for the holder text in AttachmentAdapter to improve user experience by hiding the text when it is hidden
fix : fix nullpointerexception in ctimport # getimportkind ( # 8761 )
simonstewart : fix the firefox driver to use the actual firefox profile
added a new class ` LiquidBlock ` that extends ` BucketPickup ` and modified access modifiers for ` FlowingFluid ` and ` Fluid
no - jira - fix amq - 2902 test
updated time zone from PST to America / Los _ Angeles in LocaleProviders . java to ensure accurate localization for the application
renamed ` existingObservation ` to ` distinctObservation ` for clarity to enhance readability and maintainability of the code
updated system property retrieval to use annotations from Nightly , Weekly , AidsFix , and BadApple classes to enhance flexibility by allowing
renamed ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and updated logger instantiation logic in ` SQLEditorSupport . java ` to
added denyAccess method calls for Class , Field , and Proxy in GraalContext . java to enhance security by denying access to specific classes
bugfix : do n ' t call getrgb ( ) if it ' s not support
updated the method call from ` table . getSd ( ) ` to ` partition . getSd ( ) ` in ` HiveUtilities . verifyAndAddTransactional
refactor ` shouldScrollOverlay ` logic to include a check for ` mLastOverlaySroll ` to improve clarity and functionality of overlay scroll handling
hhh - 15836 - enh : add batchhhh - 15836 - add batchhhh - 15836 - add support for
do n ' t reach here during analysis
added a test for spying on a class retaining static state in PartialMockingRetainsStateTest . java and created a new MockWithStatic
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to verify SQL parsing and deparsing with brackets and
added null check for ugi before performing an action to enhance robustness by preventing potential NullPointerExceptions
added error handling for AL _ NO _ ERROR in OpenALMusic . java to improve error reporting for audio buffer allocation failures
camel - 14263 : camel - spring - start should use endpointhelper . resolveparameter ( ) instead of endpointhelper . reslovestringparameter
refactor decimal literal creation logic to improve precision and scale handling for decimal types
None
updated assertion in WalletTestAccount003 to use Long . toString ( now ) for better clarity to improve readability of test account updates
refactor selection handling in BasicFrame and DesignPanel for improved clarity and functionality to enhance code readability and maintainability by using
added support for long running time configuration in Args . java to enhance flexibility in managing long running processes
updated conditional check in FindRefComparison . java and added a new class Ideas _ 2012 _ 05 _ 21 . java with a hashCode method to compare
replaced usage of ` sun . misc . Service ` with ` java . util . ServiceLoader ` for service loading in ` ScriptEngineManager ` and updated
changed ` DecimalBinding ` from ` toString ( ) ` to ` toPlainString ( ) ` in ` XSDecimalBinding . java ` and
removed unused Expectations instance and simplified assertions in TestRestClientRequestImpl . java to improve code readability and maintainability
updated the condition in MissingUniqueConstraintChangeGenerator to include equality check for referenceDatabase to ensure correct handling of unique constraint additions
refactor IjProjectTemplateDataPreparer to streamline Android constants and improve asset path handling to enhance code clarity and maintainability by
replace assertEquals ( 0 , s1122 . getRequests ( ) ) with await ( ) . atMost ( 5 , TimeUnit . SECON
added user _ args and timestamp to the ImmutableMap builder in ChromeTraceBuildListener to enhance the information provided to the build process for better traceability
svm : use arraylist instead of arraylist for static library
corrected the spelling of " match limit " to " match order " to ensure consistency and accuracy in logging
added a new file TheRockMetaDataDemo . java to demonstrate exchange metadata retrieval for TheRockExchange
changed FloatingDecimal and FormattedFloatingDecimal classes from public to strictfp and added strictness test in ParseDouble . java to enhance precision
removed unparseIdentifier method call from columnNamesBuilder to simplify identifier handling for better readability
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and updated method signatures in ` BlockStatementTemplateGenerator `
added a check for non - synthetic methods in InstantiateStaticClass . java and implemented a new test method in Bug1282 . java with a Property3
removed the call to projectFilesystem . getPathForRelativePath ( basePath ) in WorkspaceAndProjectGenerator . java to simplify the path retrieval process
added pending rescues management in IkStepDefinition . java to ensure proper handling of control flow exceptions during execution
removed the ' final ' modifier from the ' equals ' and ' hashCode ' methods in various type classes to enforce immutability of ' this
added a method to retrieve the SyncLevel enum based on a string representation to enhance flexibility by allowing dynamic configuration of sync levels
[ controlcommands ] fix flaky test ( # 2593 )
added a condition to check if the state is not equal to the recovery slice ' s state to ensure that only valid slice states are processed
updated the create method call in OpenCV _ Core . java to ensure consistent image creation parameters
added sdkPath to AppleBundle and updated ProcessExecutorParams to include SDKROOT in environment to enhance process execution parameters to include SDKROOT
refactor TransientBlobCleanupTask to accept a cleanup callback instead of a File object to enhance flexibility by allowing cleanup callbacks to be
server : do n ' t acquire lock when create static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code clarity and maintainability
added conversion logic for sort and union types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of row types
refactor BetterBlockPos class to improve code readability and maintainability
updated the method to retrieve the class loader for the ServletContext to ensure the correct class loader is used for proxy retrieval
updated version handling in MainWindow and ConnectionSettingsPanel to use Version . getVersionString ( ) instead of Version . getTimestamp ( ) to improve cl
added support for OracleDatabase in LoggingExecutor and JdbcExecutor to ensure proper handling of duplicate entries in SQL statements to prevent data loss
add a config option to disable null deref analysis
fix port number in maintest
updated BLOB _ SIZE , SLIDER _ MARGIN , SLIDER _ MARGIN , and modified slider length calculations in DrawAudio
added a method to add a multifactor authentication provider bypass to the DuoSecurity multifactor provider bypass configuration to enhance security by integrating
corrected formatting of method parameters in MaxRectsPacker . java to improve code readability and maintain consistency
jbrules - 2623 : fix javadoc warning in kbase module
added help page functionality to PMS and updated HelpTab and LooksFrame to utilize this new help page to enhance user experience by providing
added GeocodeProviderFactory and Constants interfaces to facilitate the creation of GeocodeProvider and Constants within the project
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to ensure consistency with the new package structure
refactor exception handling in OptionTest and ResourceManagerImplTest classes to improve clarity and functionality of exception handling in tests
updated GATEWAY _ SERVER _ ID to use Protocol . GATEWAY _ SERVER _ ID instead of a hardcoded string to enhance code clarity
removed unnecessary condition checks in SegmentsInfoRequestHandler . java and updated collection creation in CollectionsAPISolrJTest . java to streamline code
updated the calculation of numPredictiveAppCols to account for phone devices to ensure accurate predictive app columns based on device type
added a method to check for scalar subqueries in JoinUtils and updated related classes to utilize this method to improve code clarity and maintain
add blockbuildcraft to handle removal of item from inventory .
updated layout parameters for drag targets in DeviceProfile . java to ensure proper alignment with the search bar layout parameters
replaced ` . run ( ) ` with ` . start ( ) ` in ` YahooSession . java ` to ensure the session starts correctly to avoid
added null check for the client variable in HiveMetaStoreClient to ensure proper handling of potential null pointer exceptions
updated getDisplayScript method to use a default category for Locale . DISPLAY and added a test for bug 77079486 in LocaleCategory . java to
updated import statements and removed redundant constants from ZkCoreNodeProps to streamline code and improve readability
replaced ThreadLocalRandom with Random for generating random boolean values to improve performance and readability of the code
added a check for ` launcherIsReady ( ) ` before calling ` backupFavorites ( ) ` and ` backupScreens ( ) ` methods to ensure
improve error message when space < 0 .
added unit test base on user forum issue
renamed variables and methods related to body and bar space from " mBodySpace " to " mBarSpace " to clarify the
refactor ShadowProcess class to improve code readability and maintainability
added TemporaryFolder import and updated assertions in FileMessageHistoryTest . java to enhance test coverage for temporary folder functionality
added multiple debug loggers in Grasscutter . java to improve logging visibility for better troubleshooting
changed the visibility of ` highlightCnstScrRngQuery ` from instance to static in ` SpanScorer . java ` and updated related methods to
updated state check in Workspace . java and added getState method in Launcher . java to improve state management to ensure workspace state is correctly retrieved to enhance
refactor multiple assertion classes to improve code organization and maintainability
only notify new template when cache be enable
added constants for SOLR core scope and document scope in multiple classes to enhance scope management and improve data import functionality
added a primary key constraint to the measurement table in DatabaseMetaDataTest . java to ensure the measurement table has a unique primary key associated with it
rename -- permissions - config - path to -- permissions - config - file
refactor session creation logic in HttpSessionContextIntegrationFilter to streamline session creation checks to enhance clarity and maintainability of session management
added a new file TestIfWithDeadRegion . java that includes a new test class TestIfWithDeadRegion with a Supplier for string retrieval and
rename english _ ud to english _ uSD to avoid confusion
added high resolution timer enabling and disabling in SnowflakeIdGeneratorTest to ensure thread safety during concurrent access testing
added a static UI preference to the AppSettings class and modified the MainFragment to conditionally show the toast bar based on user preferences to enhance user
refactor the drop method to return a lambda expression to improve code clarity and ensure proper resource management
updated parameter handling in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` to use ` setParameterIfAbsent ` instead of `
updated error message handling in MEncoderVideo , NavigationShareTab , and PluginTab to use a localized string for dialog messages to improve internationalization support
tika - 3059 -- add mime type for tika - ooxml and tika - ooxml - spreadsheetml file
refactor Runner , FeaturePathFeatureSupplier , and Test classes to improve type safety and logging to enhance code clarity and maintainability
camel - 14263 : camel - eip - documentation - enricher - maven - plugin - add eip documentation enricher
do n ' t wait for migration to complete when an endpoint be remove
added debug logging for the presence of the " notify " and " playback " device in DeviceConfiguration . java to enhance visibility into device management
added WebsocketConfig to manage WebSocket connection settings to enhance flexibility in managing WebSocket client configurations
enhance cache validation listener to run test on suite start
updated contentLength handling to trim whitespace before adding it to the document to ensure that the content length is only included if it is not empty
replaced synchronized block with a dedicated method ` solvingTerminated ( ) ` to encapsulate the solvingTerminated ( ) method to improve code readability and
refactor createTimeseries method to use internalCreateTimeseries method directly to improve code readability and reduce duplication
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check if a boolean is returned to
changed access modifiers of several methods from public to protected in Shadow classes to enhance encapsulation and restrict access to internal methods for better encapsulation
server : do n ' t allocate private ip address when listpublicipaddresses be set to false
updated the handling of the ` _ valueString ` assignment in ` HttpParser ` and modified the test method names in ` HttpParserTest `
added a new method ` threadCompleteInitialization ( ) ` in ` J9VMInternals . java ` and removed it from ` Thread .
added a method to create a public directory for external storage and created a corresponding test class to enhance functionality for managing external storage and ensure
jbrules - 2623 : add a mvel type coercion test for mvel 2.1 . 0
removed unnecessary spacing in logging configuration files to improve code readability and maintainability
include exception message in log when construct fails
added a check to trim trailing " tel : " from the toNumber string to ensure proper formatting of the toNumber input
refactor visibility logic for shared files in FileListListAdapter to improve code readability and maintainability
removed the deprecated HIVEOPTSORTDYNAMICPARTITION configuration and updated TestTxnCommands3 to utilize the new settings
refactor configuration overlay handling in ExecuteStatementOperation and Operation classes to enhance clarity and maintainability of configuration overlay management
refactor BTCMarketsStreamingAdapters and BTCMarketsStreamingService to use Arrays . asList instead of Lists to enhance code readability
test : fix ogr data store test
removed the onErrorInStep method from StepListenerSupport . java to simplify the code by eliminating unused functionality
refactor Wallet class to improve code readability and maintainability
camel - 14263 : camel - netty - http should use http instead of localhost
test : use log instead of system . out
added a check to ensure the row index is within the bounds of the connection list to prevent potential ArrayIndexOutOfBoundsException
pmd : report violation for method with same name a enclosing class
added functionality to retrieve and proxy platform mbeans from ExtendedPlatformComponent to enhance flexibility in managing platform mbeans within the application
added SQL string replacement for single quotes in BasicQueryTest . java to ensure proper handling of single quotes in SQL queries
updated paths in BleutradeDtoTest , BleutradeDtoTestSupport , BleutradeExtendedDtoTest , and B
refactor TextEscapeUtils to improve code readability and maintainability
added a filter parameter to the FilteredQuery instantiation in AbstractSpatialFieldType to allow users to filter results based on distance in spatial queries
added progress handling for auto email sending in GpsLoggingService to improve user feedback during email sending
replaced ArrayList with HashSet and added an iterator method in Inlinks class to improve memory management and enhance iteration functionality
added synchronization around the stopScan method to ensure thread safety during the stopScan operation
updated the ` testFilterForPartition ` method to accept a boolean parameter for controlling filtering at server side to enhance flexibility in filtering behavior based
added Abandon and On _ Hold statuses to TicketModel and updated TicketPage to include these statuses in TicketModel and TicketBasePage
removed initialization of columnAliasPrefix in multiple platform classes to streamline code by eliminating unnecessary initialization of columnAliasPrefix
updated LlapRowRecordReader and LlapRowInputFormat to use BytesWritable instead of Text to improve performance and memory efficiency by utilizing
add non - native jvmti detector for 64 - bit jvm
refactor conditional statements in PdfCopy . java to improve readability and maintainability of the code
added a new daemon option " DAEMON " to the OptionEnum and implemented it in TerminalClient to provide a web pendant UI to enhance
added a new FlushIndexTask class to flush the next buffer in the IndexWriter to enhance performance monitoring during benchmarking
update getflushpath ( ) and getflushpath ( ) to include estimatedsize
added a condition to check for SEASONS in the media library output validation to ensure that SEASONS is only returned when the expected output
added a new file LocalSocketAddress . java to test network interface availability for IPv6 connections
updated grid size coordinates in GridSizeMigrationTask . java to ensure correct grid size points for migration tasks
removed unnecessary ` getName ( ) ` and ` getFields ( ) ` methods from ` SerializerPojo ` and ` getField ( int serialId ) `
added READ _ ONLY mode to the Context class to allow transactions to be committed or modified in read - only mode
refactor LookAndFeelCommand class to improve code readability and maintainability
updated logic for determining the last run end in BlockBoxing . java to use ceiling instead of floor to ensure correct handling of boundary conditions
updated assertions in GracefulStopTest to include specific exception types for EOFException and EofException to enhance test coverage for handling edge cases
replaced the use of ReentrantLock with direct put and remove operations for HTTP response listeners to simplify the code and improve readability by reducing
refactor NetworkParameters class to improve code readability and maintainability
added support for account asset optimization in DynamicPropertiesStore to enhance asset management flexibility
added a new constant J9 _ GC _ POLICY _ NOGC with a default value of 0 to set the GC policy to NOGC
remove invalidprotocolbufferexception from transactioncapsule .
delete exceptiontypechecking . java which be no longer need
updated resource path in HelpContent . java to include " en / " as a language prefix and added logging for missing localization to enhance localization support and
added a new class ProcessorInfo to calculate available CPU cores based on available processors on non - Linux operating systems to enhance CPU management capabilities for
added - html and - xslt options to the PrintingBugReporter
make logbackloggingsystem . logbackxmllocation final and deprecate it
updated ` HostLevelParamsHolder ` to use ` ServiceComponentRecoveryChangedEvent ` instead of ` HostLevelParamsHolder ` to enhance clarity
updated SleuthTagPropagationAutoConfiguration to use a new method for creating handler by default and added a new test for handler creation with YAML configuration to
refactor RustDepType assignment to use a switch statement for different dependency types to improve code readability and maintainability
updated oauth2LoginLinks method to accept a MultiValueMap of query parameters to enhance flexibility in handling authentication error responses
added functionality to retrieve the first key from the file reader to enhance the efficiency of key retrieval in the file reader
added @ GenerationTiming annotation with a default value of GenerationTiming . ALWAYS and deprecate the old method with a default value of GenerationTime
add a test case for nan and inf normalization in layernorm
refactor showShareFile methods to use getFileOperationsHelper ( ) instead of mContainerActivity to improve code readability and maintainability by central
add a new test class LiquibaseUpdateMojoExecutionTest for testing LiquibaseUpdate functionality to ensure proper configuration and execution of Li
convert proxyType to uppercase to ensure consistency in proxy type handling
feat ( minecraftforge ) : add mod _ minecraftforge class to facilitate forge versioning
added a counter to track the number of columns fetched and refactored caching logic in JdbcDatabaseSnapshot . java to improve performance and efficiency
added a new container for labels in CSSBorderTest . java to enhance the visual presentation of border elements in the UI
added RetryAutoConfiguration and RetryInterceptorAutoConfiguration classes , and introduced a new RetryStatusCodeException class to enhance retry behavior and improve error handling
changed the superclass initialization from FILL _ PARENT to MATCH _ PARENT to align layout behavior with the intended intended behavior
update parentTaskName generation to use current time instead of nanotime to improve clarity of task name generation
added error handling for invalid AddServiceRequest inputs in ServiceResourceProvider . java to improve robustness by ensuring that exceptions are properly managed and logged
modified the logic for determining if a versioned file is accepted based on the environment ' s index versioning to ensure that only versioned files are accepted in the
[ giac ] fix ggbround ( x ) for complex input
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
added multiple @ Deprecated annotations to the ProducerTemplate class to indicate that these classes are outdated and should not be used in new development
refactor JLayer class to improve code readability and maintainability
fix flaky evictiontest ( # 16400 )
refactor encodeInternal method to use saltedPass instead of input to improve clarity and maintainability of password encoding
removed the global layout listener from the view tree observer to streamline the view tree observer ' s lifecycle management
refactor Response class to improve code readability and maintainability
update maxTimestamp value from Long . MIN _ VALUE to Long . MAX _ VALUE in SSTableMetadata . java to ensure maxTimestamp does not exceed
set the size of the security panel to improve the layout of the security panel
added null and empty checks for replies in TweetActivity , TimeLineCursorAdapter , and TimelineArrayAdapter to enhance code robustness by preventing
added ` toString ( ) ` methods to ` HitbtcBalance ` class and modified ` equals ( ) ` and ` hashCode ( ) ` methods
fix ( griffin ) : fix order by in where clause with in statement
replace return s with return addrs . toString ( ) in RetriesExhaustedWithDetailsException . java to improve clarity and consistency in return values
bugfix # 26921 , close open file after edit gcode
updated imports from ` org . apache . http . config . Registry ` to ` org . apache . hc . client5 . http
updated energy calculation logic in PipePowerWood . java to use the minimum energy stored to ensure energy does not exceed the requested energy limit
added a check to delete the output file if it exists to ensure that the output file is no longer used to prevent potential issues
added an " id " field to the ` BitstampWebSocketTransaction ` constructor and updated the ` BitstampStreamingMarketDataServiceTest ` to include
[ hotfix ] fix checkstyle violation in replaysubject and replayprocessor
updated expectedCitation string in CitationStyleGeneratorTest . java to ensure consistency in expected citation format
added new SQL columns for metadata insertion in MediaTableFiles . java to enhance metadata retrieval for media files
ggb - 2118 show equation definition for exam start in exam
added a null check for the component in the SIPCommTextFieldUI to prevent potential NullPointerExceptions during execution
added caching behavior for meta scan scenarios in MetaReader to optimize performance by avoiding unnecessary scans when scan root is false
rename q _ test _ init . sql to q _ test _ init _ for _ minimr . sql for clarity
refactor Math . java and StrictMath . java files to improve code clarity and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags to enable transient taskbar functionality
[ hotfix ] fix checkstyle violation in executionvertex
added conditional density adjustment in IOSGraphics . java to ensure proper scaling of graphics based on scaling factors
rename ' optional ' to ' vararg ' for clarity
hbase - 26937 addendum add more logging to regionstatestore
refactor assertions in TestClusterUpgradeUtils to use a lambda expression for better readability to improve code clarity and maintainability
updated logging messages in AsyncHttpConnection and renamed AsyncContextTest to LocalAsyncContextTest , and added a new SelectChannelAsyncContextTest class
added an ' showArrow ' parameter to the ' SearchUiManager ' constructor to control the visibility of the arrow in the UI
added a condition to set lockMode to read _ committed and removed the test method from TestRowLocks to streamline lock management forMVStore
skip test for linux / amd64 only
added type checks for StringValue and IntValue in Scalars . java to improve type safety and prevent potential runtime errors
updated the primary key validation logic in CreateTableStatement . java to handle cases with multiple primary keys more accurately to improve error handling for invalid requests
added conditional logic to set drawable resources based on LMP status in CellLayout , Hotseat , Launcher , and SettingsButton classes to enhance button
improve error message when no isolate be query for view . ( # 4104 )
added new header writer methods for X - Content - Type , X - XSS - Protection , and X - Frame - Options headers to enhance header
refactor ObjectEnumerableAssert for improved clarity to enhance maintainability and readability of the code
[ java ] fix devtools connection leak
added a type attribute to the @ AggregatableRoot annotation in EventSourcingRepositoryTest to enhance the annotation ' s flexibility for aggregating
added support for package prebuilt Python libraries in PythonBinaryDescription and related classes to enhance functionality for managing prebuilt Python libraries in the application
added support for client authentication in NetServerOptionsConverter and related classes to enhance flexibility in handling client authentication configurations
updated paths in HiveConf and MetastoreConf to use user . name instead of " / user / hive / repl " to ensure correct user identification
refactor task view retrieval logic in RecentsView . java to improve clarity and maintainability of the code
http : / / issues . apache . org / jira / browse / amq - 4682 - add timeout to amqptransformertest
removed the call to clearAll ( ) in DataTableTopComponent . java to eliminate unnecessary data clearing operations
change variable name from ` controller ` to ` flowController ` for clarity to improve code readability and maintainability
updated exchange summation handling in OperatorTreeGenerator and added a new test for consumption all children pipeline builder with exchange in PipelineBuilderTest
added uses of ClassLoaderHandler in mmm module - info . java and ppp module - info . java to enhance class loading capabilities in Gradle
added a setSolution method to the SolutionBusiness class and updated the solve method to accept a planningProblem parameter to improve flexibility in managing the
added JsonIgnore annotation to ApplicationSettings class to prevent serialization of sensitive data during JSON processing
added a null check for the throwable variable in PlotListener . java to prevent potential NullPointerException when throwable is null
added null check for queryInfo before retrieving it to avoid potential NullPointerException when accessing queryInfoMap
fix npe in auto work bar when there be no crafting material
added a check for ` parser . hasNext ( ) ` before setting ` hdop ` in ` Gl200TextProtocolDecoder ` to ensure ` position
refactor time column name handling in AvroRecordToPinotRowGenerator to
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token004 . java
added a new interface ` Initializable ` and integrated it into ` ContainerImpl ` for initializing beans of type ` Initializable ` to facilitate
add error tag to longtask timer sample ( fixes # 568 )
changed the data type of SYNC _ DELTA _ RATE from float to double and updated fetch time calculations accordingly to accommodate double precision for fetch time
deprecate unwrapped fragment expression in thymeleaf - core
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread - safety when accessing shared resources
include acknowledge message size in log
added new color constants for main and secondary colors in ColorExtractionAlgorithm . java to enhance color extraction functionality to support dark text hints
added accessibility check for the dataFolder in SketchBuilder . java to ensure srcFolderPathList is populated when the dataFolder is accessible to enhance
updated the ` appendContent ` method to include a ` boolean ` parameter for title inclusion to enhance functionality by allowing toggling of title
removed instantiation of SessionRegistryImpl from ConcurrentSessionControllerImpl to simplify the sessionRegistry initialization process
updated the subscription scheduling in NettyStreamingService to include logging for reconnection failures to improve error handling and provide clearer logging for reconnection failures
use javassistproxyfactory instead of net . sf . cglib . proxy . factory ( # 224 )
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` for thread management to improve thread - safety and performance in concurrent scenarios
updated exception message formatting to include both host and port to improve clarity and accuracy of error messages for better debugging
added a check to ensure that the view path is not under the repository directory before proceeding to prevent errors when attempting to access a view that is under
[ jabref ] fix bug where drag - and - drop do n ' t close the tabbed pane
added multiple instances of " - XX : + UseCompressedClassPointers " and " - XX : + UnlockExperimentalVMOptions " to
peersync : do not log error if peer be not in active or replay state
deleted the ConnectionHook . java file to remove unused code related to connection handling
removed redundant calls to ` TestInjection . waitForReplicasInSync ` in multiple test classes to streamline tests by eliminating unnecessary synchronization checks
( chore ) camel - rest - dsl - generator - java : fix wrong parameter type assertion
update version number in apex language module to use current external version
updated multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
added a new instance of ` AggregateEngine ` and updated ` OverflowQueryEngine ` to use this instance instead of a fixed thread pool to improve thread management
updated WebSocketAsyncConnection constructor to accept ByteBufferPool instead of using StandardByteBufferPool to improve flexibility in buffer management
added scrolling functionality based on index in UploadActivity to enhance user experience by allowing dynamic scrolling to the appropriate thumbnails
fix ( griffin ) : timestamp column be override by other column in sample by ( griffin )
refactor onDraw method in LauncherAnimUtils to streamline animation handling to improve code readability and maintainability by reducing redund
added a conditional to disable default user agent in HttpClient based on HTTP client configuration to enhance user experience by allowing users to bypass default user agent settings
added support for pubsubhubbub in FeedRefreshUpdater and ApplicationSettings to enhance feed refresh functionality
changed the access modifier of the finalize method from public to protected to allow subclasses to access and override the finalize method
added a check for synthetic classes in the ` isAnonymousOrLocalClass ` method and updated the ABI calculation in ` CalculateAbiFromClassesStepTest
( scott phillips ) add a new dspacewebapp class for the rest web application
added null check for leftTableAlias and implemented a method to retrieve the table alias containing a column in RowResolver to enhance error handling for missing columns
[ hotfix ] [ table - planner ] fix typo in jobgenerator
wallet : log broadcast transaction successfully
test : migrate basicmaptest to new api
corrected the spelling of " rcfileOptimizedWriterEnabled " to " rcfileWriterValidate " to ensure consistency and accuracy in configuration settings
added a new enum ` TlsClientCertPolicy ` and updated ` GitBlitServer ` to utilize this enum to enhance flexibility in
removed redundant condition checking for " alert " message in KrakenFuturesStreamingService . java to streamline the subscription process by eliminating unnecessary
added headers and subProtocols to the ProxyWebSocketHandler to enhance WebSocket request handling to support additional WebSocket protocol configurations
added debug logging for fetch request in HiveQueryResultSet to improve visibility into query results during debugging
simplified dimension handling in HolidayEventFormatter to improve readability and maintainability of the code
renamed the test method ` innerClassFieldMadeFinal ` to ` ignoreInnerClass ` and introduced a new inner class ` InnerStaticClass ` to
[ hotfix ] fix typo in unexpectedjobexecutionexception
deleted the unused export of ` module - info . java . extra ` to streamline the codebase
updated maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer classes to improve clarity and accuracy of maxCost
added a registration for GeoDegeneratePath class in classRegsitry to enhance error handling for GeoDegeneratePath instances
removed the preFill parameter from the constructors of ParticleEffectPool , FlushablePool , Pool , and ReflectionPool classes to simplify the pool initialization
updated taskbar state management in TaskbarLauncherStateController and modified taskbar flags in TaskbarStashController to enhance app state handling and improve
added null check for the default style before comparison to avoid potential NullPointerException
modified the ` setMaximumSize ` method to return a ` setPreferredSize ` method and added a new constructor for ` MarqueeLabel ` to enhance
refactor FileTreeViewHolder to streamline file icon retrieval based on file type to improve code readability and maintainability by reducing redundancy
updated assertions in ParallelUniverseTest to check for " v18 " and " large - land - v18 " instead of " v18 " to ensure
fix concurrent bug in xmlreporter
add test case for native probability function
added a call to deregister the shutdown thread to ensure proper resource management during shutdown
added a method ` dropTemporaryTableAfterUse ( ) ` to ` SybaseASE15Dialect ` to provide a way to drop temporary tables after use
eranmes , on behalf of andreashaas , on behalf of andreashaas , on behalf of andre
updated multiple Java files for consistency and clarity to improve code maintainability and readability
refactor LinksIndexingFilter to improve code readability and maintainability
updated hex string format for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve clarity of memory allocation logs
improve ad playback state handling for skipped ad groups
replaced a direct equality check with a suppression warning for the equality contract in MultimapSubject . java to improve code readability and maintainability
updated ` fetchPropertyValue ` method to use ` unit _ hz ` instead of ` deg _ text ` and ` unit _ hz ` instead of ` deg
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
[ hotfix ] fix typo in testlabeloptions
added a new constant NORMAL _ 4F and updated vertex format handling in VertexLighterFlat . java to improve code clarity and ensure proper validation of
updated TracingClientInterceptor , ITTracingClientInterceptor , ITTracingServerInterceptor , and GRPC tracing classes to enhance span visibility and tag
replaced ` ZoneId . of ( String ) ` with ` TimeZone . getTimeZone ( String ) ` in ` ScheduledTrigger . java ` to ensure
added new classes AsyncBucket and InMemoryExtension for managing asynchronous and custom time measurements in the Bucket4j library to enhance functionality and support for
refactor class directory retrieval logic in resexhausted003 . java to use a regex pattern for matching test classpath paths to improve flexibility and error handling
removed redundant lines in AbstractConnector . java to improve code readability and maintainability
refactor OngoingStubbing class to improve code readability and maintainability
added an ` Optional < WebServer > ` parameter to the ` Daemon ` constructor and refactored web server reuse logic to enhance flex
renamed variable ` productConstructor ` to ` constructor ` for clarity to improve readability and maintainability of the code
added a check to clear the thread allowlist if it is not empty before proceeding to ensure that the allowlist is cleared to avoid potential memory leaks
updated the method call from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the processor
[ drools - 624 ] ignore gap hit policy in dmndtanalyser
added a test for sliding window combine functionality in CombineTest . java to ensure proper functionality of sliding window combine operations
added a conditional check for app changes before binding app icons to ensure app icons are only bound when necessary
added a check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to ensure the test correctly verifies the server ' s running status
reformatted the main method in the Solution class to improve code readability and maintainability
refactor AquaMenuBarUI to conditionally use the useScreenMenuBar property based on the LWCToolkit version to enhance security by ensuring
fix setrawlocation ( ) to correctly set fall distance
refactor SimpleJpaRepository to use a CriteriaQuery for improved query handling to enhance code readability and maintainability by reducing complexity
added timestamp , parent hash , nonce , and number to blockchain args in BlockUtil . java to enhance blockchain input handling for genesis block functionality
do n ' t generate loop safepoints when gensafepoints = false
added null and empty checks for children in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to enhance robustness by preventing potential NullPointer
changed class visibility of ArtifactResolver from package - private to public to allow external access to the ArtifactResolver class for broader usage
added thread termination handling in ClientConnectionHandler and improved error logging in ChunkProcessingPipeline to ensure proper resource management and prevent interruerruerruerruption
added validation to ensure maxBufferedDocs is at least 1 to prevent runtime exceptions during indexing operations
added functionality to manage the login state in LoginActivity to ensure that the login process is only performed when the login is still in progress
added null checks for source element and value extraction in Pump . java to ensure proper handling of null values to prevent NullPointerExceptions during value extraction
added methods to create a load balancer and a thread pool executor in HttpShardHandlerFactory to enhance flexibility in configuring Solr server instances
updated ` BaseAuthenticationServiceSelectionStrategy ` to use ` Ordered . HIGHEST _ PRECENCE ` instead of ` Ordered . LOWEST
added imports for Server and ContextHandlerCollection , and implemented a HandlerList for the JNDI server handler in TestJNDI . java to en
reformatted code for consistency and clarity in SortedDynPartitionOptimizer . java to improve readability and maintainability of the code
changed return value from checking if the loop is an NioEventLoop to always returning true to simplify the logic to avoid unnecessary event loops
updated calculations for newNumNulls and set it based on ratio to ensure accurate handling of nulls based on row limits
camel - 14263 : camel - yaml - dsl - add kamelet option to camel - endpointdsl
replaced ` OkHttpOAuthConsumer ` with ` AuthorizationState ` and ` AtomicBoolean ` for token handling in ` OSMJob . java `
pdfbox - 4071 : remove debug print statement , a suggest by valerybokov
added client authentication support to IoTDBRestServiceConfig and RestService classes to enhance flexibility in managing client authentication settings
refactor mock injection logic in PropertyAndSetterInjection . java and add a new test class ChildWithSameParentFieldInjectionTest . java to
refactor BloomUriUniqFilter to use InitializingBean instead of BloomFilter32bitSplit and update expected and hash counts to
updated cursor adapter from false to true in HomeFragment and added a preference to refresh me in TweetPager to enhance user experience by refreshing the
updated the height ratio for the intermediate header in the scroller from 1f to 75f to improve the visual quality of the user interface
replaced RuntimeEvent with RecompilationEvent and added RecompilationEvent class to track recompilation events to enhance event tracking capabilities for better debugging and
added support for system - prepared host configurations in the execution command to enhance flexibility in managing system - prepared environments
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog ` and created a corresponding test
added a loop to delete the ' / ' character from the location string to ensure proper handling of trailing slashes in location
added properties for entity and score handling in StaticPipeline to enhance pipeline functionality by allowing customizable pipeline properties
updated filename handling in Frame . java and added enabled configuration in WhoopsModule . java to enhance flexibility in source locating and enable
[ geos - 10646 ] catalogrepository now throw an exception if the data store lookup fails
refactor assertions in Assert . java to improve code readability and maintainability
renamed MultiLineTests to MultiLineGridlikeTextTests and added new test classes for multi - line text management to enhance test coverage for multi
( chore ) camel - test - infra - activemq : fix unit test
refactor measurementScheams initialization and write method parameters in TsFileWriteAlignedWithTSRecord , TsFileWriteAlignedWithTablet , and
adjusted loop condition in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to correct memory usage calculation based on survivor alignment
updated logging JAR file reference from " slf4j - log4j12 - . * \ \ \ \ ] logging [ / \ \
[ huebridgethandlerosgitest ] wait for osgi status detail to be available ( # 2591 )
updated package structure from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple files
[ drools - 1276 ] ignore kiecontainersolverfactorytest until drools - 1276 be fix
added a constructor to PullRequestMergedEventsStream that initializes Avro schema from a file and provides a StreamDataProducer to enhance flexibility in handling
refactor AbstractExpressionPart class to improve code readability and maintainability
[ hotfix ] fix checkstyle violation in taskslot
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` listener with ` CLOSE ` listener in ` NettyWebSocket ` and ` Netty
added error handling for lock removal in MoveTask . java to improve robustness by logging exceptions when attempting to release a lock
replaced InputStream with ResourceBundle for accessing GEM _ PATH and RUBY _ VERSION in JRubyBackend . java to improve localization support for Cucumber J
replaced the static byte array ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY for the receiveAddress assignment to ensure proper handling of null or empty
refactor ClassGraphClassLoader to streamline class loading logic for better readability and maintainability
added unit tests for blob storage directory creation and deletion to ensure that the blob storage directory exists before proceeding with the test execution
chore ( deps ) : upgrade gapic - generator - java to 2.15 . 0 and update gax - java to 2.16 . 0
added a Bundle extras to the FileDisplayActivity builder to ensure proper handling of extras during file display operations
changed the condition from ` break ` to ` continue ` in ` ParticleEmitter . java ` to ensure ` particle ` is processed correctly to prevent potential null
updated the expected number of cluster instances in AmbariManagementControllerImplTest from 4 to 3 to accommodate more accurate testing scenarios invol
removed nullable column from the @ Column annotation in TransientSessionTicketImpl . java and added NoResultException handling in JpaTicketRegistry . java to
updated Bug4823811 . java file to improve code clarity and maintainability
updated RmStep . java to use a Function for path reordering based on project filesystem context to enhance flexibility in handling file deletion patterns
[ deconz ] change deconz . requestfullstate default value to false
added an ` attribute ` property to the ` ShibbolethCompatiblePersistentIdGenerator ` class and modified the ` getPrincipalIdAsString `
removed the @ Inject annotation from RequestValidationService to streamline the service initialization process
refactor hide keyboard message handling to use a bundle for statistics logging to improve code readability and maintainability by reducing duplication
removed duplicate lines in FileNodeProcessor . java and MManagerBasicTest . java to improve code readability and maintainability
refactor NavigableMap and NavigableSet classes for improved readability to enhance maintainability and clarity of the codebase
add unit test for slurpFile ( ) method
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and fix checkstyle issue
refactor span retrieval logic into a separate method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added a new converter for DateWritable and updated related classes to utilize this new converter to enhance date handling capabilities in Avro serialization and
updated style parsing to use COMMA _ SEPARATOR for consistency to improve readability and maintainability of the code
apps - 2082 fix error message for invalid input
refactor semantic analysis logic in SemanticAnalyzer . java to improve clarity and maintainability of the code
refactor score update logic in WANDScorer . java for improved clarity and consistency to enhance readability and maintainability to ensure correct
refactor Correspondence class to improve code readability and maintainability
updated import statements in PaintSetEnabledDeadlock . java to streamline dependencies and enhance code clarity
initialized ` curPixVal ` to a default value of ` 0xFF000000 ` and added a new test class ` WhiteTextColorTest ` to
refactor biome dictionary to use collection instead of list
corrected variable name from ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and maintainability
added test stability rules for LOCAL and PLATFORM _ POSTSUBMIT flavors in TaplTestsLauncher3 . java to enhance test stability testing
updated package - info . java files to improve documentation clarity
added a check to ensure the logFileSuffix is not empty before processing to prevent potential errors when the logFileSuffix is null or empty
refactor PythonBuckConfig class to improve code readability and maintainability
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of system shared library names in the ShadowPackageManager
[ meiligao ] fix meiligao command interpretation ( fix # 169 )
added null check for tile before checking power status to prevent potential NullPointerException
added a new TrimCache class to trim cache operations to enhance cache management by allowing users to delete cached items efficiently
replaced usage of ` com . google . api . client . util . Lists ` with ` com . google . common . collect . Lists `
updated exception handling in BasicAuthAccessControlFactory and ZkBasicAuthAccessControlFactory to throw NotAuthorizedException instead of returning false to improve error handling
added a new method ` schedulePeriodically ` to the ` Scheduler ` class and updated existing calls to use this method to enhance flexibility
replaced refreshing the list of files with a call to the onItemClicked method to enhance user interaction by allowing file selection from the remote file system
added conditional logging and improved error handling for multiple input streams in StreamUtil . java to enhance reliability by choosing a random input stream and
refactor create _ table method to accept CreateTableRequest instead of EnvironmentContext to simplify table creation process and improve code clarity
added a boolean field ` aborted ` and modified ` start ` and ` abort ` methods to handle the ` aborted ` state to improve thread safety to ensure
updated indentation handling in multiple parser classes to ensure consistent formatting to enhance code readability and prevent potential issues with indentation limits
added NetworkWifiStatusReceiver and ChangeWifiStatusEvent classes to handle network WiFi status updates to enhance functionality for managing network status updates
remove control frame check from framegenerator
added visibility control for collapse handle in WidgetsBottomSheet to improve user experience by ensuring the collapse handle is visible
added new file ` Issue475 . java ` and modified ` XSS . java ` to escape HTML and JavaScript characters to enhance security by ensuring
added a condition to return early if the scrolling unit is zero to optimize performance by avoiding unnecessary processing
updated condition to check if the contract list size is not equal to one to ensure correct validation of contract list size before proceeding
added ` add ` and ` put ` methods to ` JsonArray ` , ` JsonObject ` , and corresponding tests in ` JsonArrayTest ` and `
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class for testing service equality to ensure consistent hash codes for print services
hhh - 16699 - db2idialect should use getversion ( ) instead of getiversion ( )
added a condition to check if the platform fee is greater than zero before enabling transactions to ensure transactions are only enabled when the platform fee is valid
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code clarity and maintainability
improve performance of buffer processing in mediumcodecrenderer
no effective change - code cleanup - remove public modifier
added Retrofit import to Part and PartMap classes to enable Retrofit functionality in the Part and PartMap classes
refactor JsonBuildHelper to use a common method for building JSON parameters and improve parameter handling to enhance code readability and maintainability while
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of available taskbar types in AbstractFloatingView . java to enhance functionality by
fix : update gapic - generator - java with mock service generation fix ( # 49 )
updated alpha calculation in ClipAnimationHelper and added hasRecents functionality in RemoteAnimationTargetSet to improve animation behavior based on target activity type
removed unnecessary parameters from the createRenderScript method call to simplify the method signature for better readability and maintainability
refactor PMD class to improve code readability and maintainability
refactor PluginListCellRenderer and related classes to use a utility method for checking system bundles to improve code readability and maintainability by red
refactor IntegrationTestSparkBulkLoad to improve readability and formatting to enhance maintainability and clarity of the code
add low false positive rate to keychaingrouptest
refactor configuration handling in Overview . java to use a Configuration object instead of rocketConfiguration to improve code clarity and maintainability by
fix npe in agentmanagerimpl . isalive ( hostid )
added a null check for the value before processing to avoid potential NullPointerExceptions during data conversion
improve error message for npe during host discovery
updated NO _ NAME and NO _ VALUE strings to include NAME _ ATTRIBUTE + VALUE _ ATTRIBUTE to enhance clarity and consistency in parameter name handling
updated constructor parameters in BaseStubbing , ConsecutiveStubbing , OngoingStubbingImpl , and OngoingStubbingImpl to use invokedMock (
refactor method name handling by introducing a new method ` stripMethodParams ` to improve code readability and maintainability
update version name and code to reflect new release
replaced List with Set for allowedCommands in OutputFilter . java to enhance flexibility in managing command collections
[ geot - 6570 ] add label reuse option to labelmblayer
ggb - 1975 fix popup in landscape
updated error messages from " Function : cannot return more than one value " to " Function - " and " Start function : invalid index " to
added a new instance of ` StartingWindowListener ` with a transition manager to manage task launching states to improve flexibility in managing task transitions
added a doc comment inherited from MBeanServerConnection to improve code clarity and maintainability
updated exception messages in CheckPackageAccess . java to provide clearer context for expected SecurityException and PackageDefinition security exceptions
increased awaitTermination duration from 30 seconds to 90 seconds and added an assertion for thread termination in ThreadSafetyTest . java to enhance test reliability
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a new test class ` XRLogTest ` to ensure logging
added @ JsonIgnore annotations to Schema . java to exclude sensitive JSON fields from serialization
increase timeout for non - transaction index test
modified the ` train ` method in ` SimpleNaiveBayesClassifier ` to use ` null ` instead of ` AtomicReader ` to en
added AuditLoggerModule to the CheckHelper and CheckController modules to enhance auditing capabilities during database operations
refactor Prototype class to improve code readability and maintainability
added a null check for ` tableIsTransactional ` in ` SemanticAnalyzer . java ` to ensure ` tableIsTransactional ` defaults to ` true ` when
[ java ] use onblock instead of onwrite for record fragment .
improve ecdecoder to handle negative subtitle
added " alias " to the " metricName " list in KairosDatastoreTest and implemented a getAlias method in DatastoreMetricQueryImpl to
updated currency pairs in VaultOfSatoshiBaseService from BTC _ CAD , LTC , LTC _ USD , PPC
hhh - 16625 close the entitymanager on test failure
updated import statements for KafkaSender from Kafka11 to Kafka in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to ensure compatibility with
added GwtBinaryIntegrationTest . java and A . java files for testing GWT binary integration to facilitate testing of GWT binary
modified visibility logic for loading causes in BrowserContentPane and SQLConsole to ensure loading causes are only visible when the query builder dialog is not null to improve
updated the ` EnhancedRandomImpl ` and ` EnhancedRandomImplTest ` classes to include additional randomizer types to enhance randomness
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to manage security properties to enhance security management by utilizing
added new interfaces ` InterfaceWithDefaultMethod0 ` and ` InterfaceWithDefaultMethod1 ` with default methods ` InlineDefaultMethod ` , ` Subtype ` ,
updated regex patterns in SqliteFieldPredicateView to use GLOB instead of ESCAPE to improve compatibility with wildcard matching for LIKE and GLOB queries
[ drools - 7 ] make dmn assembler protect
fixed - rscript . load ( ) method do n ' t return the result of redisson # writeallasync
simplified print statements in EspressoLanguage . java and refactored setWordFieldVolatile method in StaticObject . java to improve
updated debug log statements to use size ( ) instead of format string to improve clarity and reduce verbosity in log messages
fix memory leak in fmloutboundhandler
added a constant for HTTP Jetty server handlers in ExecConstants . java and updated thread pool initialization in WebServer . java to allow dynamic configuration of
replaced ` Map < String , ShortcutInfoCompat > idsToShortcuts ` with ` ArrayList < > ( ) ` for storing shortcuts to simplify shortcut
( chore ) camel - http - client : remove unnecessary type check
removed case handling for home navigation in DetailFragment to streamline navigation logic for better readability
added a check for Android market before including play services in the condition to ensure that play services are included only when available for the current market
refactor TableBlockParser to improve cell parsing logic and add a test for outside white spaces after the header to enhance code readability and
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enhance project generation capabilities for bridging headers
replaced the use of ` Path ` with ` Set < JavaType . Method > ` for managing unused methods in ` PotentiallyDeadCode `
added support for findDiamond ( ) method in Attr . java and new classes DiamondRedundantArgs1 . java and T69
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` onStartSendRequest ( ) ` in ` HighwayClientFilter
removed unused imports and added debug logging for caching metrics to clean up the code and enhance performance monitoring functionality
added exception handling for AuthenticationException in LdapCtxFactory to improve error handling for authentication failures
updated floating - point comparison logic in Test6796786 . java to improve accuracy in determining zero values
added a local configuration file for the " logback . dev . xml " in JoobyMojo . java and updated Main . java to include
added a new class JaasEventCheck to handle authentication failure and success events to enhance event tracking for jaas authentication failures and success events
refactor QuickstepTransitionManager to streamline view animation logic to enhance readability and maintainability of the code
updated the ` ConjunctionSolrSpellChecker ` to compare ` stringDistance ` instead of ` stringDistance ` and added a new test class `
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` to enhance flexibility in handling multiple fetchers
[ hotfix ] remove unused constant from defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
server : allow to wait for ready command to return from libvirt server ( # 3948 )
updated JDBC table parameters to use scoped _ db and JDBC _ SCHEMA instead of scoped _ db + " . " + tableName to ensure consistency
corrected the spelling of " SQL Update " to " SQL Update " across multiple files to improve code readability and maintain consistency in naming conventions
replaced WeakHashMap with synchronized Map for schemaTypeCache to improve thread safety when accessing schema types
refactor header addition logic in StaticServerHttpHeadersWriter to handle cases - insensitivity to ensure headers are only added when they are not already
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable the test due to file availability issues
added a check to ensure the storage directory exists before creating it to avoid potential errors
set chunked streaming mode in StarTreeJobUtils to improve performance during streaming operations
added new syntax checker classes for basic and multiple types to enhance JSON schema parsing capabilities for different input types
hbase - 26937 addendum addendum for addendum for hbase - protobuf
added a new test method to verify that populating a Node with a recursive structure does not cause stack overflow exceptions to ensure that the node ' s value
added IOException to the getRemoteName method signature to enhance error handling during remote name retrieval
updated exception handling and HttpClient creation in UserAccountManagerImpl , ClientFactoryImpl , and ConnectivityServiceImpl to use HttpClient instead of OwnCloudClient
refactor WebSocketConnection and ExplicitDemandTest classes to improve code clarity and maintainability
added support for aspectJ mode with protect - pointcut definitions in GlobalMethodSecurityBeanDefinitionParser to ensure compliance with Spring Security ' s aspect
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security and control over hostname verification
added a method to remove an item from the OHLC series to enhance functionality for removing an item from the series
replaced ` invoke ( ) . invoke ( ) . joinInternal ( ) ` with ` invokeUrgent ( ) . invokeUrgent ( )
removed the last JointEdge from the joint list in the World class to streamline the removal of joints from the world ' s JointEdge
refactor search filter logic in SearchFilter . java to improve clarity and ensure phone number matching is only performed when searching for phone numbers to enhance
[ flink - 18552 ] [ test ] add license header to sourcereadertestbase to allow test to run
added null checks for file existence and parent folder existence in DocumentsStorageProvider . java to enhance error handling and prevent potential NullPointerExceptions
added a new interface ` HookDefinition ` and a class ` JavaHookDefinition ` with a method to invoke a hook with a specified method to
refactor flushIfDeadlockRisk method to use a dedicated flushIfDeadlockRisk method to improve code clarity and maintainability by encaps
updated setExoOptions method to include an allowTs parameter to enhance flexibility in exo options setting based on device type
remove ' from ' identifier from the identifier collection in DMRDecoderState to streamline the decoding process
added an ' INVISIBLE ' constant and updated the toString method in Color . java to include an ' INVISIBLE ' constant in RailButtonShapes .
updated null handling logic in CountAggregationFunction and added integration test for null handling in NullHandlingIntegrationTest to
added a deep attribute to the InternalTransaction class to enhance transaction management by allowing deep transactions
escape the name of the StreamInitiation class to ensure proper XML escaping for better compatibility
updated file initialization to use a configurable work directory to allow dynamic configuration of the work directory
added a deprecated attribute check in RuleSetFactory and a corresponding test in RuleSetFactoryTest to ensure the rule is marked as deprecated when it has a
sulong : do n ' t bind to code buffer when jmp call
updated TimeRange class to use static final constants for minStamp and maxStamp , and added checks for range construction to improve code clarity and
refactor BitDocIdSet class to improve code readability and maintainability
refactor connection handling in AbstractTimelineMetricsSink to use a dedicated emitMetricsJson method to improve code readability and maintainability by reducing
updated MIME type checks in DetailFragment and GalleryActivity to improve code readability and maintainability
refactor tank drain logic to check if the player is in a remote environment before draining liquid to improve fluid management and prevent potential
updated CsharpLibrary to handle RuleAnalysisLegacyBuildRuleView differently for CsharpLibrary and PrebuiltDotnetLibrary to improve compatibility with DotnetLibrary
of - 2499 : add support for get / set pep service .
truffle : fix npe in intrinsificationphase when runtime be null
do n ' t refresh active work if it ' s empty
pdfbox - 4892 : store last object key in bfsearchcosobjectkeyoffsets , a suggest by valerybokov
added a new constructor to LwjglApplet that accepts an additional canvas parameter and initialized LwjglNativesLoader with a canvas to enhance
refactor string representation of DockerClientConfig in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve readability and maintainability of the code
added password policy handling to the LdapAuthenticationHandler to enhance authentication flow by applying password policies based on user context
refactor Int2ObjectCache class to improve performance and maintainability
added a private String variable ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to set the ` resolveFromAttribute
refactor Readable class to improve code readability and maintainability
updated JsoupNonVisualRegressionTest to use TestSupport . WITH _ FONT instead of a built - in font to improve test coverage for page breaks
updated menu item icon from ' share _ menu _ item ' to ' ic _ menu _ share ' to improve clarity and consistency in naming conventions
refactor JVM version checks to use constants from java . util . StringTokenizer to improve
added catch blocks for AbstractMethodError and NoSuchMethodError in PoolUtilities . java to ensure proper handling of JDBC41 compliant drivers to enhance robust
refactor GenericContainer class to improve code readability and maintainability
replaced HashSet with ArrayList for the filteredSet and filteredList to improve performance and memory efficiency
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , AbstractCasProtocolValidationSpecification , and AbstractCasView
added closing parenthesis to PNG and GIF declarations in ChartProvider . java to improve code readability and maintainability
fix bug in appenddatabaseaction and opendatabaseaction where work directory do n ' t exist
removed a NOPOS block from the return statement in JavacParser . java and added a new class ExtraSemiTest . java with a Java
added support for ' after ' and ' BEFORE ' keywords in JpaQueryCreator , User , and UserRepository classes to enhance user
updated Test15FloatJNIArgs . java file to improve test coverage and maintainability
updated plot version and author information in mmm plugin . java and ppp plugin . java to ensure accurate version and author information for plots and
fix mockprocesscontext . encrypt ( ) and mockprocesscontext . decrypt ( ) to account for last character
[ java ] prevent reentrant call during archive callback .
added null check for inp _ dep before merging it to ensure it is not null to prevent potential NullPointerExceptions during dependency merging
increase timeout for sslbytesservertest
peer : fix typo .
added methods to retrieve and convert realtime segment information in RealtimeIndexingCoordinator to enhance clarity and functionality of realtime segment management
added null check for exportedData before calling writeTo to prevent potential NullPointerException when accessing exportedData
refactor RecyclerViewFastScroller to improve popup visibility handling and scroll thumb calculations to enhance user experience by preventing out - of - bounds popups
updated command execution message and added a method to check if the tool window is instantiated to improve clarity of command execution and ensure proper tool window state management
added a condition to check if the system is a Windows platform before enabling the sleep checkbox to ensure that the checkbox is only displayed on a non - Windows
updated import statements from javax . servlet . http to jakarta . servlet . http in HttpConfigurationAuthorityOverrideTest . java to ensure compatibility with
added vertical bar layout adjustments for window dimensions in QuickstepAppTransitionManagerImpl . java to improve layout handling for window transitions based on device
added full - screen exclusive mode functionality to XWindow and related classes to enhance window management by allowing exclusive access to security warnings
correctly format played duration string in umm util
added credential management functionality to DagUtils and ReduceWork classes to enhance security by ensuring URIs are marked as needing credentials
( chore ) camel - jbang : use entryset instead of keyset
trim the last element of the names array before setting the current thread name to ensure that the application does not exceed the session limit
updated error message in GpsMainActivity to clarify that the description cannot be added until the next point has been logged to a file to improve
refactor Job class to improve code readability and maintainability
added a new ` Unused ` class and a method to test for unused types in the ` Main ` class to ensure that the ` Object ` type is
updated HBASE _ MASTER _ HOST key from " hbase _ master _ host " to " hbase _ master _ hosts " in componentTo
deleted files EventReaderDeserializer . java and EventWriterSerializer . java to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of ` GenericRecord ` instead of ` GenericRecord ` to enhance flexibility in handling multiple
updated the handling of the MAX _ DELEGATE _ LOCK _ PERIOD in ProposalUtil and adjusted related constants in DynamicPropertiesStore to
kvm : do n ' t try to set default network rate if it ' s 0
removed empty constructor and overridden applySpecification method in CmcExchange class to streamline the exchange specification handling
updated configuration handling in GossipLocalNode to use a comma - separated IP list instead of a single IP address to enhance flexibility in IP address
enable client tpc by default
update swagger - ui version to 3.18 . 2
modified the division logic in MutableBigInteger to handle larger magnitudes and added a ModInvTime class for computing the modular inverse to enhance
refactor key assignment logic in NamedObjectList to improve clarity and maintainability of the code
refactor cleanupEmptyDir calls to use cleanupEmptyTableDir instead of cleanupEmptyDir for consistency to improve code clarity and maintainability by
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it with Kryo to enable Kryo serialization for RCFileInputFormat functionality
added methods for obtaining Java type and category in TypeMapperComponent to enhance type mapping functionality for column types
added error handling for invalid host header parsing in Request . java and implemented a new test for invalid host headers in RequestTest . java to improve
updated ShadowTimeZoneFinderTest to use ReflectionHelpers for retrieving time zones instead of libcore . util . TimeZoneFinder to improve compatibility with Robo
remove addoutgoingvalues ( ) and forEachoutgoingvalue ( ) from standardop
refactor segment directory initialization to use a private variable to improve code readability and maintainability
added a method to check for the presence of main thread profile transactions in the aggregate DAO to enhance the functionality of the aggregate management system
added a validation check for annotation definitions in a Buck rule with required _ for _ source _ abi set to True to ensure that annotation definitions are not
corrected the spelling of " greekLowerCase " and " irishLowerCase " to " greekLowercase " and " irishLowerCase "
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
( scott phillips ) add dspace 4.0 discovery support to the search servlet
added a list of string identifiers to the BasicDateTime class to ensure unique identifiers for date and time entries
updated SurfaceSyncGroup instantiation to include a custom class name to improve clarity and maintainability of the code
removed unnecessary casting of ObjectId when deleting GridFS file in GridFsTemplate . java to simplify code and improve readability
added unit tests for the ` getTotalSize ` and ` getBytesSoFar ` methods in ` ShadowDownloadManagerTest ` and implemented corresponding methods in
refactor text insertion logic to use a boolean variable for clarity to improve readability and maintainability of the code
do n ' t hide the group node if it ' s the same a the target
refactor the ` afterSetStatements ` method to streamline statement handling and improve clarity to enhance readability and maintainability of the code
added hashCode ( ) method implementations in IntervalXYDelegate and XYSeriesCollection classes to ensure proper hash - based object comparison for collections
fix clientqueueDisruptiontest to not shutdown hazelcastclient
refactor CloudWatchAppender and related classes to improve clarity and structure to enhance maintainability and readability of log group descriptions
updated Gson serialization method to use serializeSpecialFloatingPointValues ( ) instead of serializeSpecialDoubleValues ( ) to ensure proper serialization of floating - point values
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduceNextBlock ( blocking
added checks for language tags and updated language tag handling in Locale and LanguageTag classes to enhance language tag validation and improve code clarity
kvm : allow ssh to agent by default
removed the ' public ' access modifier from several constructors and methods in SchedulerWhen . java to allow external access to these constructors for better encapsulation
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to ensure compatibility with the latest version of the project
added a condition to check if the string does not contain the " - " character in the filter to ensure that the filter does not contain unwanted characters
updated sortColumnsLabel text to use " Natural column order " instead of " natural order " to improve clarity and consistency in sorting columns
replaced the use of ` Arrays . copyOf ( in , 6 ) ` with a call to ` Arrays . copyOf ( in , in ) `
replace direct call to ` write ` with a call to ` htmlEncodeButNotSpace ` in ` HtmlSessionInformationsReport . java ` to
update item state trigger handler to use smarthome / items
removed the synchronized block from the synchronized block in FastHttpDateFormat . java to improve performance by reducing unnecessary synchronization
added thread management for file moving in Hive to improve performance by allowing multiple move tasks to complete successfully
added a new method ` trigger ` to the ` WrapTimer ` class to trigger a specific timer based on a specified trigger period
added support for LOCAL _ DATE and LOCAL _ TIME types in TypeStringUtils to enhance type handling for SQL date , time , and
added a verbose error message option to AbstractStatusReporter to enhance error reporting by displaying more detailed error information
updated ClickStartHandler initialization to include a boolean parameter for menu visibility to enhance menu toggle functionality based on app state
s2s vpn : limit vpn connection to account and domain
removed unnecessary exception handling in CursorReadingTask to simplify error handling logic and improve code clarity
pdfbox - 3017 : check if pdf be encrypt before create a thumbnail , a suggest by valerybokov
[ 3.0 ] fix curator watcher not properly shutdown ( # 9059 )
updated AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code clarity and maintainability
updated HostsList to use the correct identifier for the item instead of the current selected item to improve clarity and functionality of the delete method
updated Java6Assertions and Conditions classes to improve code clarity and maintainability
changed the parameter type of ` replaceOrderBulk ` method from ` Collection < ReplaceOrderCommand > ` to ` List < BitmexPrivateOrder >
refactor enterDefault method to enterIdentNode for improved clarity to enhance readability and maintainability of the code
added a new class J9ConstantHelper with a method to retrieve a long value from a reflection field to facilitate the retrieval of extended
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for concurrent invocation verification to ensure proper handling of concurrent modification exceptions in
remove unavailable roster item from the roster . jm - 102
updated method calls from ` getProperties ( ) ` to ` getOverlayedProperties ( ) ` in ` MapOperator ` and ` PartitionDesc ` classes
updated method call syntax in FunctionObjectCreator . java to improve code readability and maintainability
added null check for extTypeCustomDesers before creating a new ExtensionTypeCustomDeserializers instance to avoid potential NullPointerExceptions when extType
added a system property to set the logging level from " WARN " to " WARN " to improve logging clarity during development
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test execution by eliminating unnecessary annotations
removed unused JettySolrRunner creation in AbstractSolrMorphlineZkTestBase . java to streamline the code by eliminating unused components
updated scoreMap and groupSortValues to use a map for score and groupSortValues instead of a single score to enhance flexibility and maintainability
updated comparison logic for long parameters in U64 . java to ensure correct handling of negative values to prevent potential errors
set headline style to red to improve readability
updated notifyChange logic to include support for dark text checks to enhance the responsiveness of dark text notifications
[ flink - 18552 ] [ checkpointing ] fix npe in checkpointrequestdecider
reduced the maximum pool size and increased the keep alive timeout duration from 1000 milliseconds to 15 minutes to enhance performance by allowing more time for idle threads to
updated filtering logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use ' anyMatch ' instead of ' count ( ) ' to improve clarity
added checks for Windows ServerCore container requirements in OpenCVImageFactoryTest to ensure tests are only run on supported operating systems
resolve http : / / issues . apache . org / activemq / browse / amq - 2679 - fix test failure
modified the ` getReturnValue ` method to include a ` Throwable ` parameter and updated exception handling logic to improve error reporting for Python Proxy exceptions
added a new annotation ` Issues ` with a repeatable annotation ` Issue . Issues ` in the ` Issue . java ` file to enhance
updated user property key from " hcat _ user " to " webhcat _ user " in ` BlueprintConfigurationProcessor . java ` and
updated socket connection to use InetSocketAddress based on system property for SOCKS proxy host to enhance flexibility in connecting to SOCKS proxy server
[ hotfix ] fix checkstyle violation in slotreport / slotstatus
removed unused import of ClassUtils from ReflectionUtils . java to clean up the code and improve maintainability
replaced HashSet with LinkedHashSet for several protocols and cipher suites in SslContextFactory to ensure predictable iteration order for hash sets
added a static variable ` systemResource ` and initialized it to ` r ` if it matches ` Resources . systemResourceLocation ` to improve resource management by
added a new constant for PLAINTEXT _ SEGMENT _ EXTRA _ SIZE in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecrypting
added a test for invalid fallback exceptions in the circuit breaker integration tests to ensure proper handling of invalid fallback URIs in the application
use sslconnectionsocketfactory instead of hardcoded one
replaced the reset ofBytesReadCounter ( ) with a call to setSizeLimit ( 0x7FFFFFFF ) with a call to setSizeLimit ( 0
added a ` preferAES ` property to ` ProtectionPolicy ` and removed the ` isPreferAES ` method from ` StandardProtectionPolicy ` to
( chore ) camel - opentelemetry : use logger instead of system . out
remove flaky testloadbalancerinstanceoperationstest ( # 2298 )
corrected the spelling of " setAlarm " to " setRingtone " to ensure consistency and accuracy in method naming
added error handling for file creation in DiacriticTest to ensure stability by preventing application crashes due to invalid paths
hhh - 16625 followonlockingtest fail on oracle 11
improve error message when atlas file can not be read
added a locking mechanism to manage service changes in AmbariManagementControllerImpl . java to ensure thread safety during service change operations
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a new test method to verify that ResultSet is closed in HiveQueryResultSet to ensure proper resource management and prevent potential memory leaks
disable inputstream . marksupport ( ) for now . some feature will not work .
added logic to handle pre - deleted databases in the database schema response to ensure that only non - deleted databases are removed from the response
removed " chunkedWriter " from pipeline in Http1xUpgradeToH2CHandler . java to simplify pipeline management by eliminating unnecessary operations
added a confirmation dialog for item deletion in FullDetailsFragment to enhance user experience by providing users with the ability to delete items
replaced ` RuleFinder ` with a new ` RuleBank ` interface for managing CSS rules to improve modularity and encapsulation of CSS rule
added a try - catch block around the encryption process in JcaTlsCrypto . java to handle potential SSL related exceptions during encryption
added TestMonomorphicObjectCall . java and Object . java files for testing object finalization to facilitate testing of object finalization
replaced ` removeMetaDataSource ( session ) ` with ` toFront ( ) ` in ` DataBrowser . java ` and added a method to ` Desktop
hbase - 26937 addendum fix nullpointerexception in defaultmemstore
[ hotfix ] [ runtime ] remove unused parameter in taskmanagerservicesconfiguration
updated AlterTimeSeriesStatement constructor to accept a boolean parameter for altering time series to enhance flexibility by allowing control over time series alteration
# 394 add ability to specify regex for match text
[ hotfix ] fix checkstyle violation in helixbrokerstarter
added null checks for parameter values in HttpClientIntroductionAdvice to enhance robustness by preventing potential NullPointerExceptions during execution
( chore ) camel - jms : use char [ ] instead of string
api : fix issue with recursive search of domain ( search by keyword )
added methods to convert Counter < E , Double > to a sorted list and updated equality checks in CountersTest to enhance sorting functionality and
updated the initialize method to accept an original SimulationStatus instead of returning a new status to enhance clarity in handling simulated status updates
LLVMAMD64SyscallClockGetTimeNode . java to use getCurrentTimeMillis ( ) instead of System . currentTimeMillis ( ) to improve clarity and
refactor PrettyPrinter to use a variable for the variable ' var ' instead of a hardcoded value to improve code readability and maintainability
added null checks for indexToNode array to prevent potential NullPointerExceptions during node traversal
refactor DatagramSocket and DatagramChannelImpl to improve filtering logic and error handling to enhance reliability and clarity of socket operations
test : migrate testquerydns to junit 5 ( # 6663 )
added a new class NutchServerInfo with properties related to job start date and running jobs to provide structured information about the response to enhance the
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource for improved attribute management to streamline token filtering logic
added timestamp handling to CqlInserter , ThriftInserter , and SettingsColumn classes to enhance timestamp management for database interactions
updated DSA parameter generation logic to use BigInteger . ONE instead of BigInteger . valueOf to improve clarity and consistency in handling prime strength values
updated ` floatToIntBits ` and ` intBitsToFloat ` methods to use ` longBitsToDouble ` instead of ` intBitsToFloat ` to
updated masking condition in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior for different IP address formats
added checks for SQL constraints in DefaultJdbcOptimisticLockingExceptionMapper to enhance error handling for SQL violation violations
no - jira - fix review comment
added a new method ` addTab ` and refactored the ` createTab ` method to utilize ` FontImage . setIcon ` for better
fix arrayoutofboundsexception by use zero - sized array
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironmentbuilder and mockenvironmentbuilder
refactor conditional checks in MavenVisitor . java for improved readability to enhance code clarity and maintainability
updated ZookeeperDataChangedListenerTest to use " MOCK _ APP _ SECRET2 " , " MOCK _ APP _ NAME2
added a new test class FormatCheckingTest to verify class format errors to ensure that the application correctly handles illegal class names
updated line number handling in CodeGenerator to use the current line number directly to improve clarity and maintainability of line number management
added a try - catch block around the result retrieval of the service property to handle potential exceptions gracefully
added methods to create a RadioButton with specified text , icon , and command combinations in RadioButton . java to enhance the functionality of RadioButton with
updated LRUCache to use dynamic cache size and increased CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 to improve performance and reduce memory usage
int - 1651 , int - 1652 , int - 1653 , int - 1656 , int - 1657 , int - 1656 ,
added null check for symbolicName before quoting it to avoid potential NullPointerException
add support for load mode from resource
[ flink - 18552 ] [ yarn ] fix race condition in yarnsessionfifoitcase
updated RobolectricTestRunner to support AndroidManifest . xml instead of a hardcoded projectRoot to enhance flexibility in managing Android manifest
do n ' t propagate non - existent header to reply producer
refactor CompareMode class to improve code readability and maintainability
added HasTests interface implementation to Arg class in RustBinaryDescription and RustLibraryDescription to enhance testing capabilities for Rust targets
updated placeholders and error messages for the recent image in FileMessageVH . java to improve clarity and consistency of image display
refactor OnExitTest class to improve test clarity and maintainability
added a method to recreate the taskbar when the user preference changes
refactor HotSpotMBean dumping logic to differentiate between Ibm VM and JDK VM dumping to improve compatibility with different JVM versions
( chore ) camel - mybatis : fix potential resource leak
simonstewart : make the ie driver more robust to intermittent failure
updated imports and trigger patterns in IteratorToFor . java to ensure compatibility with Java 5 for iterator operations
set application state to unavailable to improve application stability
updated buffer manipulation logic in ByteBufferAs , Direct - X - Buffer , and Heap - X - Buffer classes to use position and limit instead of remaining
removed the call to ` toUri ( ) . toString ( ) ` when handling split strings in ` ConditionalResolverMergeFiles . java ` to simplify the
added conditional checks and methods for setting empty arrays in NativeArray , ArrayData , ArrayFilter , DeletedRangeArrayFilter , and ObjectArray
changed enum Protocol and Transport from enum Protocol to public to allow external access to these enum values
updated document additions in TestMultiPhraseQuery to include additional fields to enhance test coverage for multi - phrase queries
modified the ` assignTickets ` method to include an additional condition for payment method status checks to ensure that only pending tickets are assigned based on payment
added a thread - safety check for the onTimeout listener in HttpChannelState . java to ensure that the listener is only invoked on the current
replaced printStackTrace ( ) with logger . warn ( ) and added debug logging in various test classes to improve error handling and enhance debugging capabilities
updated package - info . java files to improve documentation clarity
use local _ quorum for read consistency when read from paxos
added a check for both " HEOS " and " Home " models in HeosDiscoveryParticipant . java and updated the logic in HeosPlayerHandler
added a ` wait ` property and corresponding getter and setter methods to ` PlainSelect ` , and created a new ` Wait ` class with timeout
added AttributeController and AttributeOrigin imports and refactored node and edge data handling in Neo4j to improve attribute management and enhance
added null check for serverName in SessionManager . java to ensure robustness by preventing potential NullPointerExceptions
nifi - 10861 : move rocksdb - metronome - related class to controller repository to avoid circular dependency
updated the method for retrieving the grantable status from a string to ensure the correct retrieval of the grantable status from the results object
updated the condition to check if the URL starts with " javascript : " and added logging for asynchronous execution to improve clarity of URL checks and enhance
( chore ) camel - cxf : fix unit test on macos
added a check for a new column descriptor before modifying it in LoadTestTool . java to ensure that the column descriptor is added or modified based on the
added Disposable interface implementation to Texture class to enable the Texture class to be serialized efficiently
added null checks for tldBundleLocation and updated references in WebappRegistrationCustomizerImpl , FragmentActivator , and OSGiAppProvider to
check that -- genesis - file be specify for goquorum compatibility
replace IOException with Throwable for better error handling to improve clarity and accuracy in error reporting
added a condition to exclude " JP " from the country validation for Thailand in LocaleTest . java to ensure correct handling of era changes in
replaced ` HostResponse . Wrapper . class ` with ` HostResponse . HostResponseWrapper . class ` in multiple files to standardize response handling
updated filtering logic in FilteredQuery . java to include boost comparison to ensure correct handling of boost values during query processing
reformatted the constructor parameters in FileMenuFilter to improve code readability and maintainability
ggb - 2118 text edit now work for debug
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
only create forge event if there be an entity
updated JdbcCursorItemReader and related classes to implement ItemPreparedStatementSetter instead of KeyMappingPreparedStatementSetter to enhance clarity and consistency in
refactor compaction test to use identityqueryfilter instead of bytetoken
added null check for the ' type ' attribute in MiniAapt . java and implemented a test for invalid item resources in MiniAaptTest . java
added a new operator " SPEL " to the OperatorEnum and implemented a new SpELJudge class to enhance expression parsing capabilities for
[ hotfix ] fix checkstyle violation in localexecutionplanner
bugfix # 26921 , use eventqueue . invokelater instead of service . providers ( )
updated certificate and hostname verifier classes to improve consistency and clarity to enhance code maintainability and readability
removed redundant checks for resource name resolution in AttributeResolution9 . java and simplified start _ offset initialization in ShadowArscAssetManager9 . java to stream
added " - target " and " - source " options to the fullOptions list in SetupHid . java to enhance flexibility by allowing different
changed access modifier of extractMetadataColumns method from private to public and refactored projecting logic in PushProjectIntoTableSourceScanRule to
added imports and sorted localized names references in AboutActivity . java to improve code clarity and ensure consistent ordering of displayed names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 1 with @ betaapi annotation
added a conditional check for live streaming before updating shared preferences to ensure refresh behavior only occurs when live streaming is disabled
updated the exception handling in the AuditConfiguration class to include the original exception as a parameter to improve error reporting for better debugging
( chore ) camel - core : fix flaky test
updated generic type parameters in CompositeType and related tests to enhance type safety and clarity by using wildcard generics
added support for transport protocols in GitClientApplication and refactored URL handling in RepositoryUrlPanel to enhance transport support functionality and improve code
added detailed information about the long press navigation handle feature across multiple input consumer classes to enhance debugging capabilities for long press navigation handles
added null check for mavenMetadata before retrieving available versions to avoid potential NullPointerException when mavenMetadata is null
added a check for " Large Page Support " in TestLargePageUseForHeap . java to ensure proper handling of memory usage during testing
cloudstack - 2222 : do n ' t copy all event during event migration
added IOException handling in the getTestParameters method of BrokerXmlConfigStartTest to improve error reporting for Windows - specific configurations
added a new test class ` TestObjectStreamClass ` for serialization and deserialization of ` ObjectStreamClass ` to facilitate testing of object
[ java ] fix nullpointerexception in discovery filter .
change error log level from error to warn
added a toString ( ) method to the Generator class to provide a readable string representation of registered generator instances
refactor URI handling by introducing a separate variable ` dontquote ` to improve code readability and maintainability
added a check for null or empty resources in ClusterControllerImpl and implemented a test for NoSuchResourceException in ClusterControllerImplTest to ensure that
added null check for response and improved error logging in AccepttoApiUtils . java to enhance robustness and provide clearer diagnostics during
added Android version check for byte buffer allocation in VertexBufferObject to ensure proper buffer handling for Android versions below 5
refactor SybaseASADatabase class to improve code readability and maintainability
added a forceProjection parameter to the HashJoinInfo constructor and updated related methods accordingly to enhance the flexibility of projection handling in the join operations
added a new method getStringDistance to the SpellChecker class to provide a way to retrieve the string distance from the SpellChecker class
added immutable and immutable flags to PendingIntent in AndroidImplementation . java to ensure proper handling of push notifications based on Android version compatibility
added methods to append and retrieve read column IDs in HiveFileFormatUtils to enhance configuration management for read column IDs
updated method names from ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java
added a method to display a temporary toast message in SavedExperiments . java to enhance user experience by providing a clear indication of pending operations
added version handling in ServiceModule and a corresponding test in ServiceModuleTest to ensure correct version resolution for the service module
added a new test class RawSerializationTest for Gson serialization to ensure proper handling of various data types in JSON serialization
simonstewart : replace the seleniumserver instance with a sslcertificategenerator interface
refactor loop to iterate through replies instead of for - each to improve code readability and maintainability
increased the timeout duration from 3 seconds to 60 seconds to allow more time for the resource access to complete successfully
added a testNGramFilterPayload method to TestNGramFilters . java to verify that the NGram filter processes payloads correctly
refactor AclImpl class to improve code readability and maintainability
added a test for different array sizes in the EasyRandom class to ensure that different arrays of different sizes are randomly generated with different sizes
bug 10689 : do n ' t throw exception when vm fail to stop
added a ThreadLocal for handling write retries in SslConnection to improve thread safety and control over write operations
refactor actor visibility checks to use a dedicated method to improve code readability and maintainability
added logging for rolling - update failures in RollingUpdateOpFactory to improve debugging and monitoring of deployment group updates
[ hotfix ] [ table - planner ] fix checkstyle violation in table - planner
added exception handling for UsernameNotFoundException in DAOAuthenticationProvider and introduced AuthenticationFailureUsernameNotFoundEvent in LoggerListener to enhance security by publishing
refactor AtMostXVerificationTest class structure to improve code readability and maintainability
updated default QType from " lucene " to " luceneQParserPlugin . NAME " and added new argument " defType " in multiple test
updated SimpleDateFormat initialization to include Locale . US to ensure consistent formatting of date strings across different locales
added the ` isInitialized ( ) ` method to ` ILanguageServer ` and implemented it in ` JavaLanguageServer ` and created a new test class
updated the parameter name from ` idToken ` to ` shouldHaveIdToken ` in the ` test _ fetch _ token _ from _ authorization _ code
added beginTransaction ( ) and endTransaction ( ) methods to DatabaseAdapter and modified GncXmlHandler to check for root account equality to en
replaced byte array handling with ByteArrayOutputStream for improved efficiency in MimeType . java to optimize memory usage by directly writing data to a byte array
refactor exception message handling in MessagingTemplate . java for clarity to improve readability and maintainability of exception messages
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to check if a ` SourceFile ` is an instance of ` CompilationUnit ` to
updated TestIndexWriterMergePolicy to set maximum buffered documents and RAM buffer size to improve performance and resource management during indexing operations
added a clear method to manage witness capsules and implemented a test for updating witness capsules to ensure proper handling of witness capsule
added handling for NoSuchElementException in CopyOnWriteMap . java to ensure safe iteration behavior when accessing elements
remove log4j . Level . DEBUG from flumenode . logversion ( ) and flumenode . logenvironment ( ) ( #
updated BasicAuthIntegrationTest and DaemonStream to enhance collection management and authorization metrics to improve test reliability and ensure accurate authentication metrics during re
use linkedhashmap to maintain predictable iteration order
added error handling for InternalServerErrorException in JerseySupport to improve application stability by providing a clearer error response for internal server
refactor header validation logic to use a separate validateHeader method to improve code readability and maintainability
added a switch statement to handle specific system properties based on their key to enhance flexibility in managing system properties for different Java versions
changed parameter types from String to CharSequence in StringSubject methods to enhance flexibility in character sequence checks
fix checkgraalintrinsics for jdk 11 +
rename IntUtilsTest to PrimUtilsTest to improve clarity and consistency in naming conventions
updated DataSource usage in PersistenceManagerProvider to use a different connection factory to enhance flexibility in managing data sources
refactor DeploymentOptions class to improve code readability and maintainability
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable . ConstantState ` instead of ` Drawable . ConstantState ` for drawable parameters to
( chore ) camel - yaml : use try - with - resources
added support for coalesce functions in RexNodeConverter and SqlFunctionConverter to enhance SQL query processing for coalesce functions to ensure correct handling of co
( chore ) camel - aws2 - iam : fix unit test
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader to ensure proper class loading for proxy factory creation
refactor DefaultDateTypeAdapter to remove constructor parameters to improve code clarity and enforce thread safety
removed unnecessary parentheses from method declarations in DocumentUtil . java to improve code readability and maintainability
refactor HttpClientRequestBase to simplify query handling and improve clarity in URI management
added a method to filter old entries based on a minimum of 50 entries to enhance data retrieval efficiency by preventing duplicate entries
changed log level from fatal to warn in FSHLog . java to provide more granular logging during append operations
refactor NodeMap implementation to implement Iterable interface and simplify iterator behavior to enhance code readability and maintainability by reducing complexity
replaced RouteDefinitionLocator with FilterDefinition and added a new PredicateDefinition subPredicate in DiscoveryClientRouteDefinitionLocator . java to enhance filtering capabilities and improve
added a check for non - empty fields before adding aggregation operations in MongoRecordReader . java and modified return logic in RexToMongoTranslator . java to
add admin to the admin list if it do n ' t exist
replaced MultiFields with SolrIndexSearcher for term retrieval in IGainTermsQParserPlugin , SignificantTermsQParserPlugin , and TextLogisticRegression
improve bean tostring ( ) to include class name and hash code
simplified null check for primitiveType in GroovyParserVisitor to enhance code readability and prevent potential NullPointerExceptions
svm : remove uninterruptible code from frameinforesultquery
increase offer timeout for seda block when full test
added a new package - info . java file for the test resources package to provide package - level documentation for testing resources
updated the calculation of readLen based on buffer size to ensure readLen does not exceed buffer bounds
updated import statements for Nullable in HttpClientTimingInstrumentationVerificationTests . java to ensure compatibility with the latest Micrometer library version
updated SQL query to include user and component details in IconCache . java to enhance data retrieval by including user serial details
( chore ) camel - defaultmq : fix typo
added a boolean parameter ` isClassfileOnly ` to the ` addWhitelistedResource ` method and updated related logic accordingly to enhance resource
added foreign key constraints for baremetal and Pxe devices in Upgrade410to420 . java to ensure proper management of database tables related to external
removed the IJava2DRenderer interface from Java2DRenderer to streamline the code by eliminating unused interfaces
added an onTearDown method to DefaultAudioSink to call onOffloadBufferEmptying when the audio track is no longer playing to ensure proper cleanup of
added scheduling functionality for upstream tasks in UpstreamCacheManager to improve efficiency in managing upstream tasks efficiently
refactor StreamType class to improve code readability and maintainability
updated assertion message in Recording . java to clarify the expected output to improve clarity of error messages for better debugging
updated FilestorePage and RootPage classes to use RequiresAdminRole and modified message formatting in FilestorePage . java to enhance admin role
( chore ) camel - elasticsearch : ignore flaky test
added a check for the declaring class type in the accept method to ensure proper handling of lifecycle methods to prevent potential ClassCastExceptions
updated button texts from " leftButtonAltcoin " and " rightButtonAltcoin " to " buyAltcoin " and " sellAltcoin "
( chore ) camel - restlet : fix restlet invalidurl exception
refactor createNextBlock methods to accept nullable parameters for address and coinbase values to enhance code clarity and prevent potential NullPointerExceptions
removed the Serializable interface from the DBNavigableSet implementation and updated serialization cloning logic to ensure proper exception handling during serialization cloning operations
added null check for exception cause in error logging
reformatted the conditional statement in Main . java to improve code readability and maintainability
updated indexOf method to use mFiles . indexOf instead of mFilesAll . indexOf to improve code readability and maintainability
deleted the PlainVerifier . java file to remove unused code that is no longer needed in the project
added a condition to close system windows when triggered from an Alt tab to enhance user experience by preventing application crashes
replaced the deprecated ` showDialog ` method with a call to ` show ` method in ` DialogFragmentIT ` and removed the ` setOnShowListener
updated MimeUtil . parseCharset calls to specify " UTF - 8 " encoding explicitly to ensure proper handling of non - UTF - 8 characters in MIME types
added a call to super . deinitialize ( ) in TextField . java to ensure proper cleanup of resources to prevent memory leaks
updated LogFormatTest to use TestUtilities for serialization and deserialization to enhance test reliability and maintainability by utilizing TestUtilities for serialization
fix ( sql ) : fix group by fill bug
added checks for negative and non - positive lengths in JAXWSExceptionBase . java to ensure proper exception handling for negative array sizes
test : migrate ctresolvedimporttest to junit 5 ( # 2451 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow more time for tasks to complete successfully
[ hotfix ] [ runtime ] set default scheduler strategy factory to pipelinedregion
added title handling methods to ShadowActivity , ShadowAlertDialog , ShadowDialog , ShadowTextView , and ShadowToast classes with i18nSafe = false to
use poi log instead of common log
updated alarm handling logic in InstarHandler . java to utilize CHANNEL _ LAST _ EVENT _ DATA to improve clarity and functionality of alarm
add latency metric to map . delete ( ) ( # 16400 )
updated enum declaration and modified response status check to use a switch statement to improve code readability and maintainability
refactor JavaFileManager . Location retrieval to use a centralized findJavacLocation method to improve code readability and error handling
add project name to flutter create additional setting ( # 9441 )
added a new test class ` DeprecatedStubbingTest ` to verify stubbing behavior to ensure that stubbing methods are marked as deprecated
updated import statements from ` org . eclipse . jetty . server . DispatcherType ` to ` javax . servlet . DispatcherType ` to align
added NML and NX to the list of accepted NP annotations in EnglishGrammaticalRelations . java and englishGrammatical
add system property to allow rsa key exchange
refactor BufferedReader initialization to use variable names for clarity to improve code readability and maintainability
refactor PubSubAPI and SDMAPI to use a dedicated OAuthFactory for managing OAuth client services to enhance code maintainability and
updated the interpolator used in TaskbarEduView from AGGRESSIVE _ EASE to EMPPHSIZED to improve animation responsiveness
added support for UpdateRegionLocation plan in ConfigPhysicalPlan , ProcedureManager , RegionMigrateProcedure , and DataNodeInternalRPCServiceImpl to en
added a new file ` FileDialogLeakTest . java ` to test the ` finalize ` method of ` FileDialog ` to ensure that the ` File
hbase - 27455 move testopentableincoprocessor test to hbase - testing utility ( addendum )
truffle / instrumentation : add uninterruptible support to trufflefeature
[ hotfix ] [ protobuf ] remove unused method in pbcodegenrowdeser and pbcodegenrowser
added a null check for the disi variable in DrillSidewaysScorer . java to ensure robustness by preventing potential null pointer exceptions
fix fakemediasource . setsourceinfo race condition
added JVM specification version handling and support for minimum Java version checks to enhance compatibility checks based on Java version requirements
updated FileReporterTest to accept String as a parameter to enhance flexibility in reporting null values
enable end - to - end encryption by default
added menu item options for the home button in DirectMessageConversation to enhance user navigation by allowing users to navigate to the home page
added GET _ USER parameter and updated PROTOCOL _ VERSION from 5 to 6 in RpcServlet . java , and implemented getUser method in RpcUtils .
added an @ EnabledIfSystemProperty annotation for the OS architecture in TestJdbcPluginWithMSSQL . java to ensure compatibility with both amd64 and x
updated the method call from ` strategy . notFound ( startClass ) ` to ` strategy . notFound ( originalStartClass ) ` to ensure the
updated error message format and added local variable handling in DexBody . java to improve clarity of error messages and enhance local variable management
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl .
fix nurserostering look and feel when switch to nimbus
updated version string format in AppPage . java to ensure proper formatting of version identifiers for compatibility
refactor AnimatorListenerAdapter to streamline animation end listeners for better readability to enhance code clarity and maintainability by reducing red
dumpedprivatekey : fix typo
updated the extra map retrieval from offerPayload to newOfferPayload to ensure compatibility with the new offer functionality
updated TicketPage to set milestoneParameters based on whether the milestone is open or not to ensure proper parameter handling for milestone visibility
updated RFBattery initialization from 640x640 to 80x80 to improve the responsiveness of the pipe items
refactor getStateMachineClusterInstance method to include additional parameters for blueprintName and blueprintRev to enhance clarity and maintainability to improve code
None
updated XML element name scans to use ATTRIBUTENAME instead of ATTRIBUTE to improve clarity and consistency in naming conventions
added a configuration to simulate system library loading in the Library class to enhance flexibility in loading native libraries dynamically
refactor AppsCustomizePagedView and LauncherModel to use getAppNameComparator instead of APP _ NAME _ COMPARATOR to improve code cl
added closeEntry ( ) method to DefaultPlatformManager and modified FileOutputStream initialization in FatJarStarter to ensure proper directory creation to enhance resource management
updated test method signatures in TestSecretKeyCredentialHandler . java to improve clarity and consistency in assertion messages
( chore ) camel - spring - blueprint : use springcamelcontext directly
polish ` ` only apply scope format string for push - based reporters ' '
hbase - 26937 addendum fix flaky testfulllogreconstruction
added a ` reuseAddress ` option to the ` DatagramSocketOptions ` class to enhance flexibility in managing datagram socket configurations to allow for
update server shutdown message to include migration setting
deleted the Locatable interface from the internal package to the interface is no longer needed in the project
updated error messages in VersionInfo . java to clarify that fields must be searchable and not have docValues to improve clarity and accuracy of
replaced equalityPredicateColumns with predicateColumns for improved clarity to enhance code readability and maintainability by using more descriptive variable names
reformatted the initialization of the channel in HandshakeHandler . java to improve code readability and maintainability
removed trailing semicolon from the Navigator . java file to ensure proper formatting of the output
updated access modifiers of record reader classes from private to default in RecordReaderFactory . java and added a new test class in RecordReaderFactoryTest
added case handling for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL criteria in MongoQueryCreator to ensure correct query creation for
refactor group by clause validation logic into a separate method to improve code readability and maintainability
updated FileChannelLinesSpliterator to use AtomicInteger for memory management to improve resource management and prevent potential memory leaks
refactor variable name from ' validator ' to ' validator ' for clarity to improve code readability and maintainability
added a new method ` schedule ( ) ` to ` CircuitBreakerImpl ` and updated the ` testCircuitBreaker ` method to use a
removed FLAG _ ACTIVITY _ NEW _ TASK from intent flags in Launcher . java to simplify intent handling by removing unnecessary flags
updated property name from " ajax " to " progressbar " in SubmissionController and FileUploadRequest classes to clarify the purpose of the property
added a JUnit 5 @ Disabled annotation to TableExtRetrieverTest to temporarily disable the test due to insufficient privileges to enhance test reliability by
added synchronized keyword to methods in EntityGraph to ensure thread safety during concurrent access
updated import statements for IntRangeUtil1 . requireNonNegative to ensure consistency with the new package structure
modified the handling of illegal characters in HttpParser and added a new test for encoded headers in HttpParserTest to improve error handling and ensure proper
updated the layout reference in ConfigurePagerActivity from trends _ activity to configuration _ activity to align the activity with the new configuration structure
updated print statement in SLWTTextListing . java to include the position of the SLWT element in the document
refactor ForceLeaderTest to conditionally use TLogReplicas for querying leader indexes to enhance test reliability by allowing more time for leader
refactor Thread class to improve thread management functionality
refactor template file suffix handling to use constants instead of hardcoded strings to improve maintainability and reduce hard - coded values
camel - 14263 : camel - cxf - optimize to avoid string . equals ( ) call
formatted the constructor of YamlRepresenter for consistency to improve code readability and maintainability
updated date formatting in ToChar . java and added a test for truncation in TestFunctions . java to improve clarity and functionality of date conversion functions
added validation checks for transaction IDs in GenericUDTFGetSplits to ensure that only valid transactions are processed
removed unnecessary length checks for columnNameProperty and columnTypeProperty to simplify code and improve readability
added null check for bookPath and improved error handling in DataHolder and Picture classes to enhance robustness and prevent potential NullPointerExceptions
refactor SSTDeserializer and TestSSTDeserializer classes for improved clarity and consistency to enhance code readability and maintainability while ensuring
added a constant for the default grid column in AppPreferencesImpl and updated grid column retrieval logic in ExtendedListFragment to improve code clarity and ensure grid
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java for clarity to enhance user understanding of line break character differences
added a boolean variable ` waitingForKeys ` and updated conditions in ` ClippingMediaPeriod ` and ` SampleQueue ` to manage the buffer ' s
removed leading slashes from API endpoints in OkexV3 . java to simplify API path formatting for consistency
removed redundant calculations for x1 and y1 in LineUtilitiesTests . java to streamline code for better readability and maintainability
added error handling for varargs and old array syntax in JavacParser and created new classes T6569633 and T6569633T6569633
added a ` Looper ` parameter to the ` DefaultDrmSession ` and ` DefaultDrmSessionManager ` constructors to enhance thread
added a new method and updated variable context handling in VariableContext . java to enhance functionality to support method calls and improve variable context management
add unit test for invalid compilation unit
update buffer limit calculation in Piece . java and SharingPeer . java to ensure correct position handling for buffer operations
added HttpClientProperties to enhance response timeout handling in NettyRoutingFilter to improve response management and error handling during HTTP requests
refactor CxxLibraryFactory and NativeLinkTargetGroup to use a dedicated method for target retrieval to improve code clarity and maintainability
added unit test base on user forum issue
added support for field access in the ASTConverter and refactored RexNodeConverter to handle ExprNodeFieldDesc to enhance support for field access in
replaced the use of ` QueryLogEntry . values ( ) ` with a static final array of ` QUERY _ LOG _ ENTRY _ VALUES ` to improve performance
refactor webclient request builder to use relativizenoproxy ( ) instead of preparerelativizeuri ( )
updated PKCS12KeyStore to handle null certificate chain and improved certificate loading logic to enhance robustness by preventing potential NullPointerExceptions during
added reflection access checks and updated method names in NativeObject , Bootstrap , and ReflectionCheckLinker classes to enhance security by ensuring proper reflection access
removed the public modifier from the constructors of the CollisionMap class to enforce encapsulation within the class
added @ Deprecated annotation to the getRawInputFromTransactionInput method to indicate that the method should no longer be used
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch statement to improve readability and maintainability of log level constants
do n ' t rely on region _ id , just use uuid ( )
added encryption handling for old Excel files in OldExcelExtractor to ensure compatibility with Excel encryption features
[ gr - 36400 ] add extra - exports = all - unnamed to mx _ java _ benchmarks . py .
removed unnecessary else clause in TimeLineCursorAdapter . java to simplify the code for better readability and maintainability
increased sleep duration from 10 seconds to 1 second to allow more time for tasks to complete before proceeding with uploads
modified the creation of the EXTERNAL _ FILES _ DIR to handle null type and refactored directory deletion logic to improve code clarity and
refactor exception factory initialization to use Class . forName ( " org . mockito . exceptions . verification . opentest4j . AssertionFailedError
increased WAIT _ TIME _ MS from 10000ms to 60000ms in LauncherInstrumentation . java to allow more time for instrumentation to complete successfully
added support for audience claims in ConnectOAuth2RequestFactory and updated ConnectTokenEnhancer to utilize it to enhance JWT claims to include
( chore ) camel - kafka : remove default value
added a new constant for selectable item background color to enhance UI customization options
replaced individual imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and provide a default implementation
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type is used when record is null
added resumablerandomaccessfilelistener to allow resumable download
change basepackage to abstractaccesslogvalve to avoid circular dependency
added methods to set and retrieve format strings in HSSFDataFormat to improve data format management and ensure accurate retrieval of format information
[ hotfix ] deprecate flinkkafkaproducer interface
updated the condition for determining compressed chunk length in CompressedInputStream . java to ensure the integrity of the checksum against the maximum compressed length to enhance security by
added a new class ` RedisStringIdempotentRepository ` to manage Redis idempotency in the ` Redis ` processor to enhance the Redis
fix container repair metadata for vanilla use metadata . close # 781
added a real local repository check to the legacy repository management logic
added task manager initialization check and logging in LocalTaskManager and JobManager classes to ensure that the task manager is only started if successfully initialized
added detailed information about the deployment process in AbstractArtifactResolutionException to enhance error messages for better debugging and troubleshooting
replaced ` getTemporalPath ( ) ` with ` getInternalTemporalPath ( mContext ) ` in ` FileStorageUtils ` and added a new method to
added a new method ` findByEntries ` to ` FeedEntryStatusDAO ` to retrieve FeedEntryStatus objects by their IDs to enhance
added execution timing handling in VertxThread and BlockedThreadCheckerTest to improve thread management and ensure proper blocking execution in the Verticle deployment process
updated the ` instantiate ` method to accept a ` String ` argument for better flexibility to enhance flexibility by allowing optional output argument handling
updated file reading logic in LoadContactsTask to handle different Android SDK versions to ensure compatibility with devices running Android O and above
updated the ` setRemoteAddress ` and ` setRemoteHostname ` methods to remove redundant parameters to improve code clarity and reduce redundancy
added null check for realClass in Robolectric . java to ensure that shadowClass is not null to prevent runtime exceptions
added a condition to check if mutual authentication is required in both NettySslContextFactory and ExampleNettySslContextFactory to enhance security by
updated import statements and added a test for SSL exceptions in BasicHttpTest . java to ensure proper exception handling for HTTP requests with SSL exceptions
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance flexibility in Kafka resume functionality
refactor event handling in PageChangeListener and FrameRenderer for clarity to improve code readability and maintainability
changed log message from " email " to " SMS " in CommunicationsManager . java to clarify that SMS settings are not configured
no effective change - add optimise method for draft query
added exception handling for resource availability in MultipartBody . java to improve robustness by catching potential IOException during write operations
fix ( zipfolder ) : fix arrayindexoutofboundsexception in executablefactory
updated multiple Java files for consistency and clarity to improve code maintainability and readability
fix attach file dialog to work in current directory
added LoadOptionsBuilder to SchemaCrawlerOptionsBuilder for improved schema info level configuration to enhance flexibility in schema loading capabilities
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and added a
replace throw statement with return null in TestReader . java to simplify error handling by returning null instead of throwing an exception
added properties for name , enabled , expanded , and collapsed states in ProjectProperty . java to enhance the functionality of the ProjectProperty class
fix potential resource leak in dbms operation handler
[ hotfix ] fix typo in datastreamjob
replaced FileOutputStream instantiation with a try - with - resources statement to handle ErrnoException to improve resource management and prevent potential memory leaks
camel - 15836 - camel - cxf : use the real class to determine the service class
added a condition to check for h2 - 14 protocol in the HTTP2ServerConnectionFactory to ensure proper handling of h2 - 14 connections
refactor LambdaToMethod to use a ListBuffer for parameter symbols and enhance method parameter handling to improve code readability and maintainability
corrected the spelling of " WHNP " to " what " in the SBARQ regex pattern to ensure accurate matching of Grammatical
increase timeout for dl4j inception test
added setSlop method call to mpq to enhance query parsing functionality
increased sleep durations in LongPressMouseListenerTest from 10 milliseconds to 100 milliseconds to enhance test reliability by allowing more time for long press
updated the default value of metricsServers from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink
terasology : add scheduleparallel ( ) method to screengrabber to make it more efficient
updated visibility checks for edit options in EditShareFragment to ensure proper visibility logic based on edit options availability
added progress calculation to the DepthController to improve the accuracy of depth progression
remove unused session . packetreceived ( )
added debug logging for authentication failures in DefaultCasDelegatingWebflowEventResolver and refactored authorization handling in DelegatedAuthenticationGenerateClientsAction
added null check for the service object before accessing its properties to avoid potential NullPointerException when service is null
enable account level permission via smart contract ( default : true )
added a doNotInstrumentClass method to exclude the CoroutinesRoom class from instrumentation to enhance code clarity by excluding unnecessary functionality
added synchronization to the isSupported method in NegotiateAuthentication . java to ensure thread safety when checking the isSupported method
no effective change - remove unused setter method
( chore ) camel - core - reply - manager : configure max concurrent consumer per thread
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added handling for tagged PDF documents in PdfDocument . java to ensure proper rendering of images in the PDF document
log4j2 - 1343 add patternselector support to patternlayout
kristianrosenvold : remove unsupported operation exception in iehta test
added MwThankPostResponse class and updated MwThankPostResponse to extend MwResponse instead of MwPostResponse to enhance
added a new interface ` SocketBased ` and modified ` ChannelEndPoint ` to extend it to implement ` SocketBased ` instead of ` AbstractEndPoint ` to
replaced direct calls to ` RevokingStore . getInstance ( ) ` with ` revokingStore . disable ( ) ` and ` revoking
added tests for implicit joins in HQL to ensure correct handling of call history retrieval for implicit joins
updated assertions in NonVisualRegressionTest to normalize expected and actual values before comparison to ensure consistent formatting of expected and actual values to enhance readability and
refactor IndexWriter to use a collection for files to commit instead of a single file to improve code readability and maintainability by reducing
added @ final annotation to several methods in BaseError . java to ensure immutability and prevent potential thread safety issues
added validation for percentage consumption in ConsumeUserResourcePercentActuator to ensure the new percentage value is within the [ 0 , 100 ] range to prevent
added a condition to check for a boolean resource before displaying the legacy login feature to enhance flexibility in displaying the login feature based on user preference
[ hotfix ] fix checkstyle violation in streamnetworkthroughputbenchmarktest
simplified the response page logic in EditTeamPage . java to improve code readability and maintainability
updated debug log message in PMS . java to include exception details to improve clarity of error messages for better debugging
refactor shutdown logic in ConnectionManager to ensure proper shutdown of the server socket channel to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code readability and maintainability
added a new method ` createDynPartSpec ` to check for dynamic partition specifications in the ` BaseSemanticAnalyzer ` class to improve code clarity and
refactor round hack logic to use a boolean flag for scientific formatting to improve code readability and maintainability by centralizing scient
added a new method ` visitDirectory ` to ` JarDirectoryStep ` and updated ` DirectoryTraversal ` to include this new method to en
added a new class JWKSetEditor to handle JWK set as text to enable editing of JWK settings in the application
refactor term writing methods to use PendingTerm instances instead of BytesRef objects to improve code clarity and ensure proper handling of pending terms
truffle : do not invoke invokeeppressonode . getparameterklasses ( ) if
set fetcher . threads . per . host . by . ip to false by default
removed redundant condition checking for queryTimeout in StatementUtil . java to streamline the code for better readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and modified path generation logic in HaskellGhciRuleIntegrationTest to include target configuration hash
refactor ReplicaPosition class to improve code readability and maintainability
bug 10698 : fix npe in stats update when initial delay be negative
updated animation interpolators to use a constant FINAL _ FRAME instead of a hard - coded value to improve code readability and maintainability
updated swipe length calculation in the navigation bar to accommodate display density adjustments to improve user interface responsiveness
added a new module - info . java file for the Jetty HTTP3 server module to provide module - level dependencies and initialization
updated JsonType to handle null values and changed variable names from " myJsonObj " to " bigJsonObj " to improve null safety and
removed unnecessary parentheses from InitialContext initialization in ResourceResolverBean . java to streamline code for better readability and maintainability
[ hotfix ] fix checkstyle violation in executioncheckpointingoptions
renamed parameter ` typeElement ` to ` topElement ` in the ` reportInnerClassReferences ` method and updated related logic to enhance
updated command string concatenation in TimestampCheck . java to ensure correct syntax for command line options
replaced FluentIterable with Arrays . stream for file listing to improve performance and readability of the code
[ 3.0 ] fix dubbo config export for service config ( # 5511 )
end all session when otr be disable .
added NODE _ LABEL _ OUTLINE _ SIZE , NODE _ LABEL _ OUTLINE _ TRANSPARENCY , NODE _ LABEL _ OUTLINE _
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
changed the boolean value from false to true in Win32FontManager . java to ensure consistent font rendering behavior
added a null check for the TreeVisitor before calling visit method to avoid potential NullPointerExceptions when v is null
added IErrorHandlingPolicy implementation based on the environment ' s classpath to enhance error handling behavior when no classpath is available
added content alignment and text anchor properties to the LabelBlock class to enhance layout flexibility by allowing customizable text alignment
refactor Class and Parameter classes to improve code readability and maintainability
refactor IndexReader class to improve code readability and maintainability
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and updated related logic in ` NetworkInterface . java ` to improve cl
added Locale parameter to the fromRfc1123DateString method and updated its usage in Rfc1123DateDeserializer and KrakenServerTime
update filedownloadviaproxytest to support pdf file extension
added a new property ` OUTPUT _ NO _ HITS ` to ` AbstractJsonQueryElasticsearch ` and modified ` handleHits ` method to include
server : remove aggregation ratio from vm usage update ( # 5663 )
[ java ] fix race condition in election .
remove call to uncheckrun ( ) in readfilesp and streamfilesp ( # 2593 )
refactor widget event handling in PageChangeListener . java to improve clarity and structure to enhance readability and maintainability of widget event processing
added isWriteProtected ( ) method to Workbook , FileSharingRecord , and HSSFWorkbook classes and modified username truncation logic in FileSharing
added error handling for unregistering invalidated sessions in PluginMonitoringFilter to improve stability by logging exceptions during session unregistration
refactor CategorizationFragment to improve code readability and maintainability
[ hue ] change bridge report light as unreachable to not reachable
add fmlclienthandler . loading to check if the server be still loading .
updated return statements to use localization for mil , k , and thousands to improve localization support for currency display
refactor MessagePackParser to use a switch statement for different data types and add a new class for reading binary strings to enhance flexibility in handling
added a new test for using reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure that queries with
added tests for serialization and deserialization of a map using Gson to ensure correct handling of nested maps in JSON format
fix off - by - one error in geometryutils
refactor sorting order dialog to use a new method for setting sorting order to improve code readability and maintainability by consolidating sorting order
do n ' t crash on empty testplan
updated method names from " dbmsName " to " getDbmsName " and " tableName " to " getTableName " and " columnName
added null check for argIdent in Parser . java to prevent potential NullPointerExceptions when argIdent is null
update default protocol from " SSL - HTTP / 1.1 " to " SSL - HTTP / 1.1 " to ensure compatibility with the current SSL
set default value of displayVolume to true in VolumeVO . java to enable volume display functionality
modified the version method to accept a boolean parameter for full versioning to enhance flexibility in specifying version messages based on full or full options
refactor ChangeLogParameters to improve clarity and structure to enhance readability and maintainability of the code
change log level from warn to debug for transaction lookup failure
hhh - 16625 skip test that cause exception during sql string formatting
added startHandshake ( ) and setSoTimeout ( ) methods in sslSocket to ensure proper socket timeout settings for SSL connections
updated the calculation of ` mActionBarSize ` to account for ` MainActivity . isPopup ` in multiple fragments to ensure consistent status bar height
changed the CHA option key from false to true in EspressoOptions , DefaultClassHierarchyOracle , NoOpClassHierarchyOracle , and No
resolve http : / / issues . apache . org / activemq / browse / amq - 2593 - fix classloading issue in test
refactor JodaTimeRangeRandomizer tests to include a new test for generating local date and time randomizers to enhance test coverage
refactor WebDescriptor to conditionally redirect XSD resources based on servlet version to enhance flexibility in handling different servlet versions
fix readiness check for node
updated loops to use handler . endpoints instead of liveEndpoints to improve clarity and maintainability of the code
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new RPC version being introduced
added null check for System . getSecurityManager ( ) before checking package access to enhance security by preventing potential NullPointerExceptions
removed unused imports and simplified method implementations in Utils . java to improve code readability and maintainability
refactor DefaultMetricsTagProvider to use a unmodifiable map for tags instead of returning an immutable map directly
added a new test suite entry for MockBrowserTest to the suite to enhance test coverage for the MockBrowser class
changed the default logging level from OFF to ERROR in the Launcher class to provide clearer error handling during execution
changed fields from non - final to final in IconNormalizer . java to ensure immutability and improve code clarity
added support for the ` firstCallPrepareDo ` parameter in the ` PrepareInterceptor ` class to enable conditional execution of the ` prepare ` method
refactor showWorkspace and showOverview methods to use a boolean variable for focus state management to improve code readability and maintainability by reducing
added Singleton annotation to AuthWithStoreFeature . java and removed eager singleton binding from Auth . java to simplify the binding process and improve code clarity
added an option to ignore invisible associations in the incomingAssociations method to enhance the flexibility of association retrieval based on conditions
bug 12609 : do n ' t remove private ip capacity from the db
updated ProfileServlet to include detailed command information for profiling commands based on Linux version to enhance user understanding of profiling capabilities on different operating systems
refactor ModelResolver to streamline required field handling and add a new RequiredRefFieldModel class to improve code readability and facilitate
updated class names from ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreStandaloneBootstrap
refactor FeatureFlags class to improve clarity and maintainability
[ hueemid ] add a unique id for humongue id mapping ( # 9669 )
added caching for Picture resources in TimeLineCursorAdapter and TimelineArrayAdapter to ensure images are loaded from memory before processing them to improve performance by reducing
updated description of compaction configuration in HiveConf . java to clarify that compaction on insert - only tables will always run via queries
added a null check for the storage path in the condition to ensure stability by preventing potential null pointer exceptions
refactor vectorization checks in multiple classes to use a dedicated check for resizeThreshold to improve code readability and maintainability by separating resize
refactor LDAP connection handling to improve code readability and maintainability
added @ Deprecated annotations to the @ XmlAttribute annotation in AggregateDefinition . java to indicate that the annotation is outdated and should no longer be used
added debug tracing logs in TouchInteractionService and updated the NO _ BACKGROUND _ TO _ OVERVIEW _ TAG constant in TestProtocol to enhance debugging
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated assertions from ` hits . length ( ) ` to ` hits2 . length ( ) ` and ` hits3 . length ( ) ` in `
added a new class LucenePackage with a private constructor and a getter method to the LucenePackage class to facilitate the retrieval of the L
updated the subtraction operation for sizeInBytes in RAMDirectory . java to correct the logic to correctly account for negative size values
updated calculations in ` StatsRulesProcFactory ` , ` GenericUDAFBloomFilter ` , ` GenericUDAFEvaluator ` , ` BloomK
added a null check for the drawerToggle before executing the animation to avoid potential null pointer exceptions during execution
added @ SuppressWarnings annotation to the convertToAuthentication method signature to suppress the warning about the unused method
added support for enabling module scanning based on override classpath and loader configurations
mbib export : fix bug with latex - free field
added a method to cancel core recoveries in the CoreContainer class to ensure proper termination of core recovery processes when ZooKeeper is active
replaced System . currentTimeMillis ( ) with a custom currentTimeMillis ( ) method for improved clarity to enhance code readability and maintainability by
updated null and size checks in RepoEditView . java to improve code clarity and prevent potential null pointer exceptions
updated connection parameter descriptions in PGProperty . java for clarity to improve readability and maintainability of the code
added security evaluation capabilities with trust resolver and role hierarchy in SecurityEvaluationContextExtension to enhance security evaluation by ensuring default role prefixes are applied when
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize defaults to primeSize - 1
refactor file handling logic in SynchronizeFolderOperation , UploadFileOperation , and FileStorageUtils to use a dedicated method for retrieving usable space to improve
refactor ` DistinctSqlAggregation ` to use a for - each loop for value accumulation to improve code readability and maintainability
added a test method to verify the execution of post - login activities for a user with a successful authentication to ensure that the user service correctly handles successful authentication
extractorframesrisare : make extractorspanishstrippedverb work with dictionary path
refactor CharArraySet methods for improved clarity and consistency to enhance readability and maintainability of the code
updated track count validation logic in MuxerWrapper . java to ensure correct handling of unsupported track formats
updated JsBundleGenrule and JsBundleGenruleDescriptionTest to use AndroidPackageable instead of JsBundleAndroid to enhance compatibility with Android
updated character encoding handling in PinotClientRequestServlet and StringDictionary classes and added a new test for UTF - 8 characters in DictionariesTest
updated the case name from " Logical Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to enhance clarity and consistency in
refactor AbstractVector to use a static instance variable for vector class instantiation to improve code readability and maintainability
removed redundant syncMetaLeader ( ) method call to streamline code by eliminating redundancy
[ # 7807 ] feedbackquestiondetailspageui : show no response to contribution question ( # 7808 )
added TestLoggingExtension import and annotation to DiagramRendererTest . java to enhance logging capabilities during test execution
updated the ` applyAutomaticMappings ` method to include a ` mapUnderscoreToCamelCase ` parameter for property mapping to enhance flexibility in
[ miio ] add viomi . waterheater . e1 ( viomi . waterheater . e1 ) to miio
updated variable names for clarity and consistency to improve code readability and maintainability
added a new file CreateNewSpreadsheet . java to create a new XSSF spreadsheet with multiple cells to implement functionality for creating a new spread
fixed - spring . cache . redis . ttl = PT15m and redis . redis . time - to - live = 15000 . #
updated content URIs in LauncherBackupHelper and LauncherModel to use CONTENT _ URI _ NO _ NOTIFICATION instead of CONTENT _ URI to
bump version to 2.27 . 2 for wiremock test
corrected synchronization issue in SunFontManager . java to ensure thread safety during font synchronization
added a condition to check for the character ' < ' in the condition to ensure proper handling of opening and closing angle brackets
removed unnecessary String . format call from Workspace . java to simplify the code and improve readability
added a message to the user when no validation errors are found to inform users that no validation errors are available
added WebMergedContextConfiguration to configure web resources in IntegrationTestContextLoader to enhance resource loading flexibility for web applications
modified scroll handling logic in Component . java and modified component retrieval in JavaSEPort . java to improve responsiveness and functionality of component responsiveness
updated the formatting of the UUID check in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated method signatures to use ` String ` instead of ` Long ` for type safety to enhance
updated regex patterns in CellContentConverter to handle newline characters correctly to ensure accurate conversion of newline characters to string literals
updated regex patterns in SeleneseTestCase . java to improve glob matching accuracy to enhance clarity and accuracy of glob matching tests
refactor MondrianProperties class to improve code readability and maintainability
added error handling and improved stack trace printing in ProcessTools . java and CustomLauncherTest . java to enhance robustness of process startup
removed the testEmbeddedImage method from TumblrRipperTest to streamline the test by eliminating unnecessary functionality
added a check for slot presence before converting the storeType to avoid potential NullPointerExceptions
modified the handling of the ` nextLoadPosition ` in the ` ContainerMediaChunk ` and ` InitializationChunk ` classes to ensure accurate extraction of
replaced direct usage of ` IndexWriterConfig ` with a custom ` PrintStreamInfoStream ` for better encoding handling to enhance compatibility with UTF - 8 encoding
tika - 1623 -- add support for load error handle in tika config
updated DocLint . java to import javax . tools . Diagnostic and added package - info check in DocLintTester . java to enhance error
added import command support in DataImportHandler and DataImporter classes to enhance functionality by allowing dynamic command execution
added a test to verify that inner classes are not modified if ` ignoreDefinition ` is set to ` true ` to ensure that inner classes are not modified
removed unused import of android . util . Log to clean up the code and improve readability
modified the ` checkItemPlacement ` method to accept an ` ArrayList < Long > ` for workspace screens instead of a single value to en
simonstewart : add a new servlet to kill the JVM when quit quit quit
refactor row processing logic in LLRealtimeSegmentDataManager to utilize a transformed list instead of a single object to improve clarity and efficiency in
added a check to skip processing for Windows and Teredo display names to ensure that only Teredo display names are processed
added a check to ensure the protocol provider is registered before proceeding with the AddContactDialog to enhance user experience by preventing errors when attempting to
updated the registration of the USER _ DETAILS _ SERVICE _ FACTORY bean in AuthenticationConfigBuilder to use a new BeanComponentDefinition to
updated drawBitmap method call to use null parameters to ensure compatibility with different bitmap rendering behaviors
fix ( meitrack / totem ) : fix invalid date format
changed method visibility from default to protected in SunFontManager and X11FontManager classes to allow subclasses to access font path methods
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these classes are outdated and should not be used in new development
updated exception handling in ClientMapStoreTest to catch ExecutionException instead of ReachedMaxSizeException to improve error handling clarity and ensure proper exception validation
added a boolean parameter ` keepEmptySentences ` to control whether empty sents should be processed to enhance flexibility in handling empty sentence
improve error message when artifact subdirectory creation fails
removed the LazyTreeLoader implementation from ReusableCompiler and updated JavaLanguageServer to use NO _ MODULE _ COMPILER to simplify the code
added null answer handling in DirectAgentAttache . java to ensure a default answer is returned when the resource returned null answer
removed exception handling for sending email in the sendEmail method to simplify the method signature and improve error logging
added a new package - info . java file for BuildCraftAPI with API level 1.0 and updated PipeItemsObsidian . java to handle null
updated DateMathParser constructor parameters to accept a Locale parameter to ensure compatibility with different locale settings for date parsing
added functionality to include decals in storage options to enhance user experience by allowing users to choose between them
updated generateDocumentation method to accept a nullable parameter to enhance flexibility in documentation generation
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to utilize dynamic queue configuration and improved performance logging functionality to enhance flexibility
removed the ` < checkIntegrityAtMerge > ` option from ` SolrIndexConfig . java ` and updated log messages in ` DocExpirationUpdateProcessorFactory
update ignoreRecordAttribute to use a specific MAJOR _ VERSION string to ensure compatibility with the latest version of the class file
added a new test class ` LdapPasswordAuthenticationTest ` for testing LDAP password authentication to ensure correct functionality and validation of LDAP connection setup
replaced OrcInputFormat with BasicStatsNoJobTask for footer scan checks to improve clarity and functionality of the code
do n ' t show project / editor when save all project / editor ( # 9481 )
refactor VisibleAdvance class to improve code readability and maintainability
fix : do n ' t try to reconnect if there be a terminal exception
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance data visualization flexibility for dynamic number columns
added null checks for groupId and version in ResolvedGroupArtifactVersion constructor to enhance code robustness by preventing NullPointerExceptions
updated API assignment to handle null values to improve robustness by preventing potential NullPointerExceptions
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added shader lighting effects and a dispose method to FlameRenderer for improved resource management to enhance the visual representation of textures and
fix for issue # 505 : add a context menu item for add method
added a length check for the last character in the CSS parser to ensure proper handling of characters beyond the length of the input
added a new boolean property ` isDecorated ` to determine if the UI look and feel isDecorated to ensure that the UI look and feel is
removed the ' NOT EXISTS ' condition from the SQL query in the COMPLETED _ REQUESTS _ SQL to simplify the SQL query for better readability
updated F2 _ TEST , F6 _ UNKNOWN , F5 _ TRANSPONDER _ TEST _ REPLY , F6 _ TRANSPON
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and maintainability of swipe detection logic
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to utilize a more efficient color storage implementation
refactor methods in String class to improve code readability and maintainability
removed unused SLF4J logger imports and constants from various classes to improve code clarity and reduce unnecessary dependencies
added a method ` getGlobals ( ) ` to return an array of ` Entry [ ] ` objects from the map to provide access to global data for
added assertions to verify the sending of a coin with a witnesses key in MultiSign34 . java to ensure the witnesses key
[ hotfix ] [ test ] migrate cufiltertest to junit 5
replaced hardcoded classpath separator with a system - independent constant to improve maintainability and readability of the code
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow the method to be called without an instance of the class
added assertions for presence of fields in the Metamodel in InheritanceTest . java and updated field retrieval in TestUtil . java to ensure proper validation
removed conf parameter from Outlink instantiation in multiple parser classes to simplify outlinks initialization by using default configuration values
removed unnecessary parameters from the ` ensureUniqueNamesIn ` method and related calls to simplify method signatures and improve code readability
added import statements and modified type expression handling in UseLambdaForFunctionalInterface . java , and modified TypesInUse . java to exclude lambda types to enhance
removed appendClassSelector method call from m _ classFilesets to streamline the code for better readability and maintainability
added a check for Aggregate root input in HiveCardinalityPreservingJoinOptimization . java to prevent unsupported operations on aggregate inputs
fix npe in registryevent when registry be not active
corrected the assignment syntax for x3 and y3 in Intersector . java to ensure proper syntax for variable assignment
added default methods for SBE decoding in MessageDecoderFlyweight to ensure compatibility with unsupported SBE versions to prevent unintended behavior in SBE
updated ElasticsearchContainerTest to use a constant for the ELASTICSEARCH version instead of a hardcoded version to improve maintainability and clarity
replace direct byte array copying with ByteBuffer wrapping for peerMessage parsing to improve performance and readability of message processing
updated cluster name and version ID handling in ClusterDefinition and related tests to improve clarity and functionality related to versioning in cluster definitions
camel - 14263 : camel - ftp component should use source code generate configurer to avoid reflection configuration .
[ zeppelin - 4978 ] fix npe in zeppelin - server .
added a conditional check for ` noLocalsMustBeReservedForDCEedVars ` in ` Gen . java ` and created a new test class `
added basic constraints check for targetCertConstraints in ForwardBuilder . java and created a new class BuildEEBasicConstraints . java to enhance certificate
added a method to init after the first database connection in JdbcPostgresqlDAO to ensure values with the same time will be upserted based on
added a maximum message size limit for WebSocket requests to enhance flexibility in handling WebSocket messages
lucene - 4892 : do n ' t rollback undelete all deletions in indexreader
added null check for scopes and updated test assertions accordingly to enhance robustness by preventing null pointer exceptions during validation
added null checks for orderBy before adding it to the explanation to avoid potential NullPointerExceptions during execution
[ hotfix ] fix checkstyle violation in clusterentrypointtest
server : do n ' t try to create a vm if the vm be not in the back - up state ( # 4823 )
added logging for the initialization of Hive log4j to improve debugging and monitoring of Hive operations
added a check for an empty list before processing tasks in AssetManager . java to avoid potential NullPointerExceptions when accessing tasks
change return type of pubsubmanager . deletenode ( ) from void to boolean .
updated TsKvLatestEntity and related classes to use KvEntry and LongDataEntry instead of TsKvEntry to enhance data
added checks for empty or null images in Code128Reader and Code39Reader to ensure robust error handling for empty or null barcode results
replace TreeSet with LinkedHashSet for cipher suites to ensure predictable iteration order for cipher suites
updated control character validation logic in Escaper . java to improve handling of control characters and ensure proper output formatting
added a check for ` CharSequence ` return type in ` ProviderSqlSource . java ` and changed return type handling in ` SqlProviderTest .
added null check for aliasChildren in InternalMNode . java to prevent potential NullPointerExceptions when accessing children and avoid potential NullPointerExceptions during execution
added a method to calculate the layout transition offset for a specific page index in PagedView . java and updated scroll delta calculation in Workspace . java to
refactor compilation unit handling and formatting logic in JavaTemplate . java to improve clarity and functionality of template processing to enhance code readability and maintain
added accessibility to the method in WidgetInterceptor to enhance security by ensuring the method is accessible
added a condition to check if the field ' s raw name equals " database . server . id " before setting the literal initializer to ensure that the field
simonstewart : use appleWebKit / 537 . 36 for cross - platform compatibility
added a web interface menu item to browse the server URI to enhance user experience by providing access to the server ' s web interface
added a new variable ` actualValueName ` and updated references in ` HandleGetter . java ` to use this variable to enhance clarity
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by gracefully handling potential ArrayIndexOutOfBoundsException
updated debug logging statements in Queue . java and FileCheckpointIO . java for clarity and added additional debug logging in FileCheckpointIO . java
load BattlePassManager before avatar postload to avoid null pointer
updated Docker image version from 1.0 . 0 to 1.1 . 0 in PortForwardingContainer . java to ensure compatibility with the latest features and
added garbage collection functionality to the ThresholdTest class to ensure a full - gc of the system to avoid resource leaks
updated logging condition checks in StdErrLog . java and added new debug log test cases in StdErrLogTest . java to enhance logging functionality and
fixed - rremoteservice . getremoteserivce ( ) method throw an illegalargumentexception if redisson . redis _
added methods ` isSelected ( ) ` and ` setSelected ( boolean b ) ` to the ` MultiButton ` class to enhance functionality for setting
replaced UpNextActivity with NextUpActivity in CustomPlaybackOverlayFragment . java to reflect the new NextUpActivity functionality
do n ' t fence replicasmanager when controller mode be disable
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection closure to improve resource management and ensure proper cleanup of Redis connections
refactor background color retrieval into a separate method to improve code readability and maintainability by reducing duplication
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencememberships
refactor type adapter registration in ToolingApiLauncher . java to improve clarity and maintainability of type adapter creation
updated test cases in TestPayloadCheckQuery . java to reflect changes in payload validation logic
refactor ConsoleReader to conditionally use a mask variable for printing characters to improve code readability and maintainability by reducing redundancy
added user context and command logging in BaseCommand . java to enhance error handling and provide context for user cancellation
move test to api instead of test . test
[ hotfix ] remove unused slotsharinggroup constructor
added a check for Java version in StreamExInternals . java to ensure compatibility with Java 8 without dropping while functionality
updated texture references from " data / wheel . png " to " data / sys . png " and modified song duration from 22 to 8.12 .
refactor registration and unregistration of the system dialogs receiver to improve code clarity and ensure proper cleanup of the receiver after use
updated import statement for Cluster in HostsRemovedEvent . java to ensure correct usage of Cluster class
updated ` reuseRefreshToken ` to true and added ` allowIntrospection ` property to ` ClientDetailsEntity ` , modified ` ChainedTokenGr
added a method to HTML encode the session attribute name and content to enhance security by preventing special characters in session attribute names
added link classes for PhraseQuery , PhrasePrefixQuery , and SpanQuery in Query . java to enhance query documentation for better clarity
updated condition checks from size ( ) to isEmpty ( ) in CommentsInserter and CommentsParser to improve clarity and correctness of character validation logic
simplified type checking logic in NoValueOfOnStringType . java to improve code readability and maintainability
changed parameter types from A to Object for consistency across multiple assertion methods to enhance type safety and clarity in assertion methods
updated the ` ThrowingFunction ` interface to use ` ThrowingFunction < T > ` instead of ` Lambda ` and ` Exception ` to enhance
added ` getUploaderBehaviour ( ) ` and ` setUploaderBehaviour ( ) ` methods to ` AppPreferences ` and updated preference handling in ` UploadFiles
fix ( prettyprinter ) : do n ' t print final field in constructor
updated BitmapDrawable initialization to use Robolectric for Bitmap instantiation to enhance compatibility with Robolectric graphics library
corrected the spelling of " isValidSEnding " to " isValidEnEnding " in DutchStemmer . java to ensure accurate validation
updated PageMarkerResources to use ic _ pageindicator _ current instead of ic _ pageindicator _ add to enhance clarity of page indicator functionality
added a reinvocations variable and updated log messages in BasicInvocation . java to include the number of reinvocations to provide clearer insights into
update topPadding calculations in DefaultLookAndFeel . java to ensure correct vertical alignment of text elements
added a break statement in the Recognize . java file to ensure proper exit from the switch statement
added haptic feedback functionality for the home screen in multiple classes to enhance user experience by providing feedback during drag operations
added support for handling FORMULA cell type in ExcelBatchReader to enhance flexibility in processing Excel formula results
fixed a bug in immutablefield where assignment in anonymous inner class method be not work .
added a user agent field to CommaFeedConfiguration and updated HttpGetter to retrieve the user agent from application settings
camel - 14263 : camel - avro - add required attribute to all dataformat to ensure that the dataformat can be configure
changed log level from info to debug for file not found error to provide more granular logging during development
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated checkVersion initialization to use OfflinePlayer class to ensure compatibility with the latest version of Bukkit
camel - 14263 : camel - yaml - dsl - add support for include pattern to routecollector
added vertex color support to PShape3D . java
added a new boolean parameter ` isPkColumnFiltered ` for filtering primary key columns in ` SchemaDotFormatter ` to enhance filtering capabilities for
removed unnecessary import of ShadowMatrix to simplify the code by directly accessing the matrix value directly
removed unused imports from PythonDslProjectBuildFileParser and related classes to clean up the code and improve maintainability
refactor class definition handling in GroovyEngine . java to improve clarity and maintainability of the code
move hawtio - plugin - context to hawtio - branding - plugin - api
removed redundant print statement in NativeCodeGenerator . java to streamline output for clarity
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with a call to fireChangeEvent ( ) in FlightConfiguration . java to improve
added a test to verify that the cause of an assertion is different from the expected cause in the ThrowableAssert _ hasCause _ Test class to ensure that
updated automatic dependency handling to use flattenName and packageName methods to improve clarity and maintainability of the code
updated scope validation to use ' allowedScopes ' instead of ' requestedScopes ' to ensure that ' requestedScopes ' defaults to ' allowedScopes '
marionette : add ability to set profile and homepage in firefox driver
camel - 16400 : camel - jmx - allow to specify route description via route . description
refactor JavacTreeMaker class to improve code readability and maintainability
added a line to set the weight of the edge in ImporterCSV to ensure the edge ' s weight is appropriately set
updated QuotaManagerImpl to use a dedicated method for calculating the cost per hour to improve code clarity and maintainability
updated SQL query to include an additional dependency on pg _ attrdef to ensure compatibility with PostgreSQL ' s attribute naming conventions
added a null check for binarized sentences in SentimentAnnotator to ensure that errors are thrown when binarized sentences are not built correctly
added detailed information about user state in the User class to enhance debugging by providing more context on user permissions
updated body extraction logic in MessageHelper . java to handle null messages to improve error handling by providing a default message body
[ hotfix ] [ runtime ] fix typo in taskdeploymentdescriptorfactory
of - 2499 : fix roster access to subscribed group
added a reference to the Maven test classpath in AbstractJRubyMojo . java and removed an unused suppression annotation in CucumberMojo
removed unnecessary type casting for MethodType in MethodHandleImpl . java and added a new test for user class in signature in MethodHandlesTest . java
added imports for StopFilterFactory and HTMLStripCharFilterFactory in various classes to enhance analysis capabilities and improve documentation clarity
changed width and height checks from " greater than or equal to " to " greater than " in URLImage . java to ensure consistency in image dimensions
added a condition to check if the class name does not start with " META - INF / " and modified package name extraction logic to ensure proper handling
added imports for Display and modified the createImageToFileSystem and createImageToStorage methods to include a final boolean parameter to enhance flexibility
updated assertions in StackWalkerTest to use the expected version check to ensure compatibility with version checks for improved functionality
changed the visibility of the addViewportJob method from protected to public to allow external access to the method for enhanced functionality
removed the ` partitions ` parameter from the ` buildFlow ` method and related calls to simplify the method signature and eliminate unnecessary partition handling
removed server restart settings and server status checks in TestDatabase . java to ensure proper server shutdown behavior during tests
added null and empty check for the block in NodePathsConvertOperator and modified the return logic in SchemaQueryMergeOperator to handle null and empty cases to
added total harvesting time functionality to multiple transport manager classes to provide users with insights into the time taken for call playback
updated FPS and count values in ParticleEditor . java to improve animation effects to enhance user experience by providing better visual feedback during animations
added support for " hadoop - env " configuration in UpgradeCatalog240 . java and corresponding tests in UpgradeCatalog240Test . java to en
added a transparent color for the background in SvgViewerFactory to enhance visibility by allowing the background to be transparent
removed the minimum SDK requirement from ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify test configuration by using the latest SDK version
updated the ` containsExactly ` method to accept a list of varargs instead of a single object to enhance flexibility in determining collection containment
added a check for null keys in the Bucket4jFilterFunctions to prevent potential null pointer exceptions during bucket creation
added support for external stopwords in GermanAnalyzer , GermanStemmer , and WordlistLoader to enhance text analysis capabilities
added support for post - exec hooks in query processing to enhance query optimization for materialized views
added error handling for NoClassDefFoundError in REngine . java to ensure supported = Boolean . FALSE when NoClassDefFoundError is encountered to
refactor ` TraceWebFilter ` to utilize ` SpanAndScope ` for managing span and span scopes to improve code clarity and
updated exception handling to check for null cause before setting exception message to improve robustness by avoiding potential null pointer exceptions
updated exception throwing in CommonsHttpSolrServer to include the base URL of the Solr server to ensure the server is accessible from the correct context
updated print setup logic to invert the orientation of print setup records
modify return statement in JavaVoidObjectInspector to handle null values safely to enhance robustness by preventing potential NullWritable exceptions
added validation to prevent invalid argument names in ArgDesc
added support for a background location listener in AndroidLocationPlayServiceManager to enhance location updates by managing background location updates efficiently
updated conditional check for primitiveType from GL _ POINTS to GL _ POINTS to ensure correct handling of primitive types in MeshBuilder
trufflestring : fix index out of bound exception
added a line to set the command list in the ComboBox to enhance user interface usability
nifi - 10978 - escape the file name in tl toolkit standalone . this close # 10978
updated ZkCLI command execution to use localhost instead of the default SOLR environment to enhance flexibility and maintainability of the Z
updated equality checks for progress and status details in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler classes to ensure accurate comparison of status values
added a conditional check for the remote gRPC status before posting an event to ensure that the build fails due to a missing dependency to improve reliability by
updated method parameters in the XYItemRenderer class to include XYPlot as a parameter to enhance functionality by allowing XYPlot to be
add an entityid to the chunk ' s entityid when it ' s not null .
added a method to retrieve error messages for specific EGL types in GLSurfaceViewAPI18 . java to enhance error handling by providing specific error
added a method to retrieve supported locales from FeatureRegistry and updated InfoRequestHandler to include a list of supported locales to enhance the functionality by providing users with
updated server URI formatting and assertion in RFC2616BaseTest . java to improve clarity and consistency in URL formatting
added a call to addToHelperList in the Construction class to enhance the functionality of the helper list
added handling for the " [ [ " escape sequence ] " escape sequence in GlyphLayout . java to ensure proper processing of the first character of the input
added security permissions for setting the context class loader in mmm Transport . java and mmm TCPTransport . java to enhance security by ensuring
refactor directory handling in ReceiveExternalFilesActivity to improve clarity and structure to enhance maintainability and error handling during file synchronization
None
removed debug log statement from BarrowmanCalculator . java and simplified the calculation in TubeCalc . java to improve code clarity and reduce complexity
added null check for the object before accessing its properties to prevent potential NullPointerExceptions when accessing properties
added a method to register extra components for the BrokerAdminApiApplication to enhance functionality by allowing the registration of additional components
added a new test method ` testBug4658 ( ) ` in ` MultiCfQueryExecIT . java ` to verify functionality related to
peergroup : skip peer that do n ' t support witness
add cycle tracking to tileabstractbuilder , close # 489
removed hardcoded value for configNodeSimpleConsensusSnapshotTriggerThreshold and replaced it with a Supplier for RatisRetryPolicy to enhance flexibility
refactor multiple Java files to improve code organization and maintainability
added a check for the ManagedService annotation before unregistering and registering JMX instances to ensure proper registration and unregistration of JMX resources based on the
tika - 1623 -- hanlde non - Unicode entry name for zip archive entry in packageparser
added a new file TestSplitThruPhiDivMod . java that implements a modular number division algorithm to address problematic division as part of
added methods to lookup generic interface and superclass types in TemplateRegistry to improve type resolution for generic types in parameterized types
updated ByteArrayOutputStream initialization from 512 to 1028 to optimize memory usage and improve performance
updated language exclusion list in PlayerSettingsScreen . java to include additional translations for Chinese , Arabic , and Persian symbols to enhance clarity
increase transfer buffer size to improve performance
updated window focus listeners to use WindowAdapter instead of WindowFocusListener to improve clarity and maintainability of the code
added null check for the source node of the alias before throwing an INVALID _ TABLE exception to enhance error handling by preventing potential NullPointerExceptions
skeletonrenderer : use correct bounding box for skeletal mesh
added ` getSolrHome ( ) ` methods to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to retrieve the Solr home
added ComponentScan annotation to SpringWebConfig to enable component scanning functionality in the application context
added a method to retrieve the platform account in UserListItem to provide access to the user ' s personal account details to enhance functionality by providing access to
added tests for installing and checking package defaults in ShadowPackageManagerTest and ShadowApplicationPackageManager to ensure proper handling of package installations and
refactor AvailableSettings class to improve code readability and maintainability
added TransactionTrace constructor parameters and initialization and finalize methods in TransactionTrace . java to enhance transaction handling capabilities in the application
add property to control random member list shuffle in cluster listener
replaced Text with CrawlDatum in SegmentReader . java to utilize CrawlDatum instead of Text to improve data processing efficiency
refactor JsonDeserializer to improve code readability and maintainability
updated configuration strings and changed fetchSize from int to ThreadLocal in QueryProcessExecutor and OverflowQueryEngine to improve thread safety and performance in fetching fetch sizes
updated error message from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument " to " trunc ( ) only takes STRING /
removed unused import of ExecutionContext to clean up the code and improve readability
initialize title to an empty string to avoid null pointer exceptions when title is accessed
fix npe when response have no body
add a new interface for embedddedededededede to make it easy to use embedded server
use reflection to register mac event in jabrefframe instead of o x
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and replace ` populator ` with ` securityToken
added a return statement to the toEnum method in HandlerLibrary . java to ensure that the method returns the enum value instead of null
changed the visibility modifier of the hideUnprivilegedObjects variable from private to final to ensure that the variable cannot be reassigned after initialization
do n ' t fail audio data source test
added a check for Android Q before saving Giphy videos to ensure compatibility with newer Android versions
[ activiti rest ] fix deserialization of variable instance in service task
refactor multiple service classes to improve code organization and maintainability
refactor logger retrieval logic in MavenLoggerFactory to use computeIfAbsent for better thread safety to simplify logging instance creation process
hbase - 26937 remove unused dataoutputstream from hbase -
updated transaction IDs from 1 to 2 in TestAcidOnTez . java to reflect the correct row ID in the table
change log level from info to debug for class enhancement success logging
added a method to retrieve the default provider name based on the platform type to ensure compatibility with different cryptographic platforms
added Captor annotation processing to MockitoBeforeTestNGMethod to enhance testing capabilities by processing Captor annotations that are not annotated with @ C
added checks for enabled test cases and exception handling for missing test cases to enhance clarity and prevent runtime exceptions during test execution
refactor GroovyAutoComplete to streamline prefix checks and improve code clarity to enhance readability and maintainability of the code
use the osm graph instead of the default one
kristianrosenvold : use httpclientconfig . defaultconfig ( ) instead of httpclientfactory . createhttpclient ( url )
changed the visibility modifier of mHideSysUiScrim from final to non - final and added functionality to handle top shadow visibility based on user preferences
modified the ` enqueue ` and ` execute ` methods in ` Call ` , ` OkHttpCall ` , and ` CallTest ` classes to
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and maintainability of swipe detection logic
added extend org . springframework . security . web . util . matcher . RequestMatcher to the RequestMatcher interface to enhance customization of request matching
added " IF " and " THEN " conditions to DeferredAttr . java and created a new test class ImplicitLambdaConsideredForApplicabilityTest .
[ j2kt ] fix checkstyle issue in main
added tests for populating display metrics with default and density values in DeviceConfigTest . java and implemented a method in DeviceConfig . java to
updated exception handling in ExternalViewReaderTest and PinotDataTypeTest to use RuntimeException instead of IOException and modified timestamp initialization in PinotDataTypeTest to improve
updated the icon used in the RootCursor from logo to ic _ launcher to improve the visual appearance of the launcher
added content text setting in FileUploader . java to enhance error handling by providing clear content
refactor ConcurrentHashMap implementation to improve performance and maintainability of the code
added methods to adapt user trades and user trades in AbucoinsAdapters , AbucoinsTradeService , and AbucoinsTrade
removed call to callRemovePlot in PlotSquared . java and updated claiming logic in Claim . java to streamline plot claiming process and enhance
simonstewart : allow the htmlunitdriver to work with the firefox driver
added support for VARBINARY data type in BlobType to enhance type handling for VARBINARY data types
refactor version handling logic in SetCookieSupport . java to streamline cookie version checks to improve code readability and maintainability
added synchronization to the array type information creation in LibFFIContext . java to ensure thread safety when accessing language . simpleTypeMap
replaced ` Context ` with ` ContextInternal ` and updated related methods to utilize ` VertxThread ` instead of ` Context ` to improve thread handling
updated timeout settings and added a timeout test method in LdapTimeoutTest . java to improve test reliability and ensure tests do not hang indefinitely
updated usage message from " UniocdeData . txt " to " UnicodeData . txt " in CharacterName . java and Properties . java to cl
camel - 15836 - camel - cxf : set operation name to inout header for relay test
refactor multiple UI classes for consistency and clarity to improve maintainability and readability of the Synth class
added support for BoosterSet in ComponentAssemblySaver and updated BoosterSet return value in BoosterSet . java to ensure correct handling of booster
[ jabref ] add proxy support for requestor type = proxy and user property set
refactor MetricsUtil to use a consistent naming convention for blockchain fork count to improve code readability and maintainability
replaced an InternalError exception with a return value of false to provide clearer error handling for unsupported compilers
replaced Mortbay log imports with Log4J logging in TestIPCUtil . java to streamline logging and improve code readability
removed chunked transfer handling from NettyRoutingFilter to simplify the request processing logic for improved performance
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure attributes are reset before processing new patterns
added a polling period parameter to the VerificationAfterDelayImpl constructor and updated related methods to enhance flexibility in handling verification failures based on the
added compaction functionality to Hive configuration to enhance security and control during table masking operations
[ zeppelin - 4071 ] check for existence of interpreter jar file in zeppelin home
hbase - 2593 addendum cleanup catalog tracker after hbaseadmin # gettableregion ( )
added an @ Ignore annotation to the PartialEscapeAnalysisTest class to temporarily disable the test due to potential issues
removed unnecessary methods for calculating x bounds in BarLineChartBase and CombinedChartRenderer to streamline chart rendering logic to improve code clarity and maintain
added a try - finally block to release XML reader resources in SimpleSAX . java to ensure proper cleanup of resources to prevent memory leaks
release the header buffer to prevent potential memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and updated ` Java17TypeSignatureBuilderTest ` to use it to
added a null check for the ResultSet before closing it to prevent potential NullPointerException when the ResultSet is not initialized
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 to reflect the new major and minor version of the database
fixed usestringbufferlength false positive when there be no literal
removed logging statement from RemoteSparkJobMonitor . java to streamline error handling
refactor the ` createDb ( ) ` method to return a ` Connection ` object instead of void to improve resource management by closing the database connection to
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 26975 addendum make off - peak compaction size configurable
added null check for " address " in BitstampDepositAddress . java and created a new DepositAddressJSONTest class for unmarshalling JSON
replaced IllegalStateException with a response abort method for buffer overflow to ensure proper handling of buffer overflow scenarios
changed the method call from ` linkInDeletedDirectories ` to ` linkPath . toAbsolutePath ( ) ` in ` ProjectView . java ` to ensure
replaced ` Event ` with ` InvocationType ` in ` InvocationFinishedEvent ` and updated
refactor network interface selection to include multicast support to enhance network interface selection functionality
removed duplicate lines in ChangeSet . java to streamline code for better readability and maintainability
added a clone method to the BufferedChecksumIndexInput class to provide a way to remove the original IndexInput instance
updated the Circle class to include radius calculations to ensure that circles within defined radius are represented correctly
updated frequency band assignment logic in P25Channel and added @ Override annotations in P25ExplicitChannel to improve code clarity and ensure proper method overriding
rename ` tapSquareSize ` to ` tapRectangleWidth ` and ` tapRectangleCenterX ` and ` inTapSquare ` to improve cl
change default replication on write to false by default
added a new query parameter " lastFillTime " to CryptoFacilitiesAuthenticated and implemented a method to format dates in Util . java to enhance date
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests in ` TraceCallableTests `
updated error handling in FileActivity and added synchronization event handling in FileDisplayActivity to improve user experience by notifying users when a share file is
added support for writing to a stream in both ForeignIncubatorQuicheConnection . java and JnaQuicheConnection . java to en
updated method call to include a boolean parameter to enhance flexibility in context handling
removed negative values from TableCell constructor parameters to simplify constructor calls and improve code clarity
added a new class ` TracingAutoConfiguration ` to manage tracing capabilities to enable automatic configuration of tracing in the application
updated the content addition to use a separate Para object to improve code readability and maintainability
refactor ` getPrunedQueryableSegments ` method to accept a list of ` IndexSegment ` objects instead of retrieving them directly from ` instanceRequest
[ hotfix ] fix checkstyle violation in vertxbuffertest
refactor MessageSubmissionChunk to improve date extraction logic and add a new test class for HSMF messages to enhance code clarity and
changed the access modifier of the ' mContext ' variable from private to protected to allow subclasses to access and modify the ' mContext ' variable in subclasses
removed unused imports from ShowTablesOperation and ShowViewsOperation classes to clean up the code and improve readability
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use this exception instead of ` DataIntegrityViolation
[ hotfix ] fix checkstyle violation in jobcoordinationservice
refactor bitsToHumanReadable method to use mimeType2HUMANReadable for better readability to enhance code clarity and maintainability by
removed conditional check for TieredMergePolicy in TestUpgradeIndexMergePolicy . java to simplify the merge policy initialization process
added a conditional check to return early if mOverviewStateEnabled is false to optimize performance by avoiding unnecessary operations
add link to deeplearning4j . org / cpu for more detail
modified the ` loadSettingModels ` method to accept an ` InputStream ` instead of a hardcoded input stream to enhance flexibility by allowing the loading of
added null checks for incoming fields and terms in FilterLeafReader to ensure input parameters are not null to prevent NullPointerExceptions
add key size check to jcecmfencryptorbuilder to ensure aes - 128 - > aes192 - > aes256 -
updated IOException handling in NetSocketReader and SoftEndOfStreamException classes to improve error message formatting to enhance clarity and maintain consistency in exception handling
removed unnecessary ` @ Inject ` annotations from multiple classes to streamline code by eliminating unnecessary dependencies
updated the expected size in BundledDistributionTest from 9 to 10 and added assertions for database users and attributes in PostgreSQLTest to enhance test coverage
[ hotfix ] [ runtime ] make pipelineoptions . name configurable
updated scale calculation based on device profile type to ensure correct scaling behavior for different panel layouts
change ice lains biome to extend snowybibiome instead of grassymbiome . close # 489
removed unnecessary timezone parameter from ` getMinTime ` and ` getMaxTime ` methods in ` DataUpdateManager ` and ` StorageUtils ` to
[ j2kt ] add support for qualify type in thisreference .
[ xhamster ] fix xhamster ripper to work
fix memory leak in glowworld
hhh - 17455 oracledialect . gettablename ( ) return wrong result when schema be empty
remove trail whitespace in consolefilter ( # 4961 )
added a new variable ` mNumberOfAllFiles ` and updated the constructor parameters in ` FileMenuFilter ` to track the number of all files
[ java ] : fix term offset calculation for network publication .
guildupdateownerevent : fix typo
updated inPortalTicks logic in Player and Entity classes to conditionally incrementing inPortalTicks based on creative status to ensure inPortalTicks does not
added compression functionality and updated chart spacing calculations in ClusterMonitorTileSkin . java to enhance chart rendering by allowing compressed chart data to be displayed
refactor multiple codec templates for improved clarity to enhance maintainability and readability of the codebase
changed data types from int to long for length calculations to ensure correct handling of large data sizes
removed null check for header in RendererConfiguration . java to simplify the condition for handling null renderers
server : skip disk offering change for custom service offering ( # 6663 )
updated imports in Order . java and HitbtcAdapters . java to replace wildcard imports with specific classes to enhance code clarity and maintainability
rename idleCount variable to consecutiveIdleCount for clarity to improve code readability and maintainability
updated the description URI for the JRuby scripting service from " jruby " to " jrubyscripting " to clarify the purpose
[ hotfix ] fix typo in configcategory
updated the condition in ParticipateAssetIssueActuator to allow negative values for preciseExchangeAmount to ensure correct handling of exchanges with negative values
removed an integer variable ` i ` and added a conditional check for ` i ` in ` FeedUtils . java ` to ensure that the loop does not
added a new test method ` testHDF4 ( ) ` in ` HdfParserTest . java ` to verify the functionality of ` HDF
added a new constant ` CALCITE _ 6092 _ FIXED ` in ` Bug . java ` and updated ` SqlOperatorTest . java `
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency in formatting
added a method to quietly close all AutoCloseable instances in a list to improve resource management by avoiding null pointer exceptions
updated the confirmation button resource from posBtn to common _ yes to enhance user experience by providing a clearer yes message
added a null check for source dimensions before drawing to avoid potential null pointer exceptions
replaced ReflectionHelpers with ProtectionDomain for method invocation in UnsafeAccess . java to enhance security by ensuring compatibility with Java security practices
updated regex pattern for fqdn validation in ` GUIUtil . java ` and added corresponding unit tests in ` GUIUtilTest . java ` to ensure correct validation
replaced the boolean variable ` conflict ` with a long variable ` conflicts ` and updated related conditions to ac
update version check logic to use min supported sdk version 0.0 . 3
added a conditional check for the reference object before assigning it to the memory to enhance the handling of the reference object
added validation for seed files in the Injector class to ensure
added a condition to hide the original view if hideOriginal is true to enhance user experience by preventing unnecessary visibility of the original view
update maxNodes calculation and condition in DefaultLoopPolicies . java to ensure maxNodes is constrained to a maximum of zero to prevent potential overflow issues
added a logging mechanism for texture coordinate type support in CombinedTexture . java to enhance error handling and provide clearer diagnostics when unsupported UV
added error handling and validation for barcode deletion in EncodeActivity , SupplementalInfoRetriever , and DecodedBitStreamParser classes to improve robustness and
( chore ) camel - tracing : add miss seek ( ) method
updated SQL query to use a variable for the oldPrefix length to improve clarity and maintainability of the code
replace list . addall ( ) with list . addall ( ) in jsonserializers
added a deprecated constructor to AbstractTimer with a pause detector parameter to deprecate the old constructor and provide a default implementation
added a condition to display a warning message when the Universal Gcode Sender is down for nightly builds to inform users about features and improvements
added ability to sort response by team name ( question )
improve ` unnecessarythrows ` message
deleted CacheApplication . java and updated CommonsApplication . java to use CommonsApplication . cacheData instead of CacheController to streamline cache management by
replace calls to ` realObject . getApplicationContext ( ) . startService ( ) ` with ` RuntimeEnvironment . application . startActivity ( intent ) `
refactor StatisticsServlet to improve code readability and maintainability
updated RuntimeEnvironment to conditionally update configuration settings for KitKat and above
added a new constant for the existence of a stack repository update link in VersionDefinitionResourceProvider to ensure that the link is only set when the stack repository
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
add null check for oldIndexName in CFMetaData . java to prevent potential NullPointerException
added new package access checks in CheckPackageAccess . java to enhance security by ensuring required packages are available
renamed methods from ` save ` to ` add ` across multiple classes to improve clarity and consistency in method naming
loop exit : replace first input with loop begin
updated RecyclerView type from RecyclerView to WidgetsRecyclerView and added a method to set the current RecyclerView to WidgetsRecyclerView to enhance
added a check to ensure terminal support is available before proceeding to enhance reliability of terminal operations
changed data types of ` fiveSeconds ` and ` timeAllowed ` from ` long ` to ` int ` and added time exceeded checks in `
added a validation check for the session validity before flushing the session to ensure that the session is only flushed when the session is valid
added null checks for columnNames in ChangedIndexChangeGenerator . java to enhance code robustness by preventing potential NullPointerExceptions
replaced Vector with ArrayList for buttons and added action listener methods to enhance flexibility and control over button management
updated UserManagerCompat and UserManagerCompatVL classes to use UserManagerCompatVM instead of UserManagerCompatVL to enhance compatibility with newer
added getDatabaseMajorVersion and getDatabaseMinorVersion methods to MockDatabase , AbstractDatabase , and Database classes to provide access to database major and minor versions
refactor ActionGraphCache to use the lastActionGraph ' s second action graph and improve rule mismatch reporting to enhance code clarity and
added new classes ` LockDatabaseDesc ` and ` UnlockDatabaseDesc ` to handle database locking and unlocking to provide a structured way to manage
updated RankingTopComponent , RankingUIModel , RankingToolbar , and Workspace classes to utilize new model attributes for better data management
added handling for DisCONNECT messages in HandshakeHandler and updated related logging in NodeImpl to improve reliability of disconnect messages and enhance error handling
added a test for the deletion of storage groups in the IoTDB authorization system to ensure that the system correctly handles deletion of storage groups and
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added checks for method declarations and variable declarations in ` Assertions . java ` and implemented ` isAllowedToHaveUnknownType ` method in ` Find
added methods to afterTestClass and beforeTestClass in StepScopeTestExecutionListener to enhance test lifecycle management during test execution
updated the ` CountersManager ` constructor to include a ` Charset ` parameter for better handling of metadata buffer sizes to enhance code clarity
removed the ` toString ( ) ` method implementation from ` MultiSteps ` , ` SendEmail ` , and ` SendEmail ` classes to simplify the code
added logic to clone joinKeys if joinKeys is not null to ensure proper handling of joinKeys during query execution
added PrincipalResolver to WebAuthnConfiguration to enhance flexibility in authentication handler registration
added an additional search path parameter to the ` addSettingsFromFile ` method in ` XcconfigStack ` to enhance flexibility by allowing
changed variable declarations from non - final to final in Oracle . java to enforce immutability and enhance code safety
[ hotfix ] [ checkpointing ] disable unaligned checkpointing until rescaling of unaligned checkpoint be complete
fix unsupportedoperationvisitor to not throw illegalargumentexception
add log to compiletheworldtest to help troubleshoot
added a check for LocalVariable type in LambdaRewriter . java to ensure proper handling of LocalVariable instances to prevent runtime exceptions
added a condition to handle MySQL databases in CreateTableGenerator to ensure correct SQL generation for timestamp columns in MySQL tables
added context class loader management in EnvConfiguration to ensure proper class loading behavior for the current thread
added a condition to set ejection delay based on stage number in SimulationListHandler to ensure ejection delay is set to plugged delay when
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related methods to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class to improve code readability and maintainability
updated issuer validation methods to accept an Optional < OAuthRegisteredService > parameter to enhance flexibility by allowing issuer resolution based on registered services
added null check for the DocCollection reference in ClusterState . java to improve robustness by handling potential null pointer exceptions
updated alignment setting in TextArea to use getAllStyles ( ) instead of getStyle ( ) to ensure consistent styling across the application
added foreign database and schema names to ForeignKeyColumn and related classes to enhance functionality for managing foreign key columns in the database
[ java ] do n ' t fail election if ready follower fail to notify leader .
replaced the static import of ` Shadows . shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice
drill - 4192 : fix selection bug in fileselection
deprecate oninventorytick in favor of onarmortick
fix zip export to work on window
added a null check for the SherlockActivity before calling invalidateOptionsMenu to prevent potential NullPointerException
refactor AppsCustomizePagedView and Launcher classes to use a unified options bundle for widget binding to improve code clarity and maintainability by
added new CAPABILITY _ AIR _ PRESSURE , CAPABILITY _ AIR _ QUALITY , CAPABILITY _ AIR _ QUAL
removed unnecessary braces from conditional statements in OperationSetServerStoredContactInfoFacebookImpl . java to improve code readability and maintainability
added environment variable " AAPT " and " AAPT2 " to Genrule . java and updated test assertions in GenruleTest . java
only dump access table if enable .
added null check for message before disposal to prevent potential NullPointerException when message is null
updated fields in TronStoreWithRevoking and TxCacheDB classes to be final and changed init method visibility to public to enhance encapsulation
log4j2 - 1343 disable logwatcher until log4j - 1349 be implement
replaced printStackTrace ( ) calls with return statements in CategoryPlotTests . java to improve error handling by returning early instead of throwing an exception
added a new class ` SmallByteArrayOutputStream ` and modified ` IOSImplementation . java ` to utilize it for byte array writing to
- use intmap instead of hashmap for good performance
updated the connection string from " territory = en _ US " to " shutdown = true " to ensure proper shutdown behavior for the database connection
added null checks for ` FirstExchangeCompletedTimestamp ` and ` LastExchangeCompletedTimestamp ` attributes in ` RouteInfo . java ` to ensure robustness by
updated TestHtmlTag and TestUseOption classes to use the default locale and added new test cases to enhance localization support and improve test coverage
added a condition to check if the result is incomplete and has a maximum of 10 items to enhance validation logic to prevent processing too many items
updated usage instructions in HybridClusterIntegrationTestCommandLineRunner to use ` timeColumnName ` instead of ` timeFieldSpec ` to enhance clarity and
updated output format handling in TestUtility , OutputOptions , and SiteSnapshotVariationsTest
updated condition in DeviceProfile . java to check for non - QSB conditions to ensure proper handling of QSB visibility
added ` equals ` and ` hashCode ` methods to ` AnimationList ` , ` SceneKey ` , and ` GltfModelKey `
added a ` _ date ` field and related methods to the ` AbstractGenerator ` , ` Generator ` , and ` HttpGenerator ` classes to set the
replaced Adler32 with CRC32 in Store . java to utilize a more efficient CRC32 implementation
updated the heartbeat interval parameter from " any # of seconds " to " null " in the XenServer self - fencing configuration to ensure compatibility with
added a new warning constant for zero area in the Warning class and updated conditions in FinSetCalc to use this constant to improve code clarity and
refactor ElasticsearchIO to use a custom Serializer for DocumentMetadata serialization to enhance serialization flexibility for different data formats
hhh - 16625 add support for truncate function in oracle dialect
added error handling for memory pool not found in MetricUtils to improve robustness of gauge conversion warnings
added a boolean parameter ` useJavaScript ` to the ` ensureSignedUp ` method and updated exception handling in ` UserContext ` and ` FileTreeNode `
updated validation error messages to use the class name with enclosing names instead of annotations to en
[ te ] use replay instead of generateanomaliesInRange ( # 2593 )
updated PrecompiledContracts . java to use a new DataWord ( 1 ) . getData ( ) instead of returning a new DataWord ( ) instance with
refactor AllAppsContainerView to use getChildCount ( ) for child views and apply badge state for BubbleTextView to improve code clarity and ensure
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
updated start method calls in ResourceService , ResourceHandlerTest , and ServletContextHandler to ensure consistent starting behavior after context initialization
added a condition to check if the custom drawing identifier matches the WORKSPACE _ CUSTOM identifier to ensure proper handling of custom drawing scenarios
remove assertion from trufflejdkservices . lookupmodule ( ) .
added JUnit @ Ignore annotation to ClassicSuperHandlingTest to temporarily disable tests that are not applicable to unshadowed classes to ensure tests are not
updated import statements for ItBitExchange in multiple demo files to reflect the correct package structure for the ItBit exchange service
ww - 3975 fix nullpointerexception
made class fields final in Utils , AsyncSocketFactory , AsyncSocketFactory , Whois , and Whois classes final to enforce immutability
add try - with - resources in order to prevent resource leak
updated object type handling in Util . java to use " java . util . Hashtable " instead of " java . util . Vector " to improve
added tableNameWithType parameter to log warning for invalid retention time in RetentionManager . java to enhance logging clarity by including the table name
added trimming to fragmentList validation to ensure fragmentList is trimmed before processing
fix resourcepacknotfoundexception when the mod file do not exist
refactor transformer group selection logic in PartitionToolbar . java to improve clarity and maintainability of transformer button display
added a condition to check if the task view is focused and not fully visible in RecentsView . java to enhance user experience by preventing
refactor CalculatorEndpoint and CalculatorRestEndpoint to accept a SystemInfoService parameter and update calculate methods to utilize it to enhance
removed unnecessary Comparator . comparing ( Comparator . comparing ( Entry < TargetNode < ? > , Integer > : : getKey ) )
fix hay bale damage not take into account floor
refactor environment symbol handling and improve code clarity to enhance readability and maintainability of the code
added support for custom plugin properties in OptionsParser to enhance flexibility in configuring plugin configurations
added a check for non - empty hashTable before proceeding with join operations to ensure that join operations only proceed when the hashTable is not empty
added a condition to check if seconds are negative in Timestamp . java and updated related tests in TimestampTest . java to ensure correct timestamp formatting to enhance
[ java ] clarify archive context usage in cluster service agent .
added a condition to check if the class is not compiled before evaluating the COMPILE _ THRESHOLD in LambdaForm . java to ensure that the
added new test cases for image mosaic handling in AbstractTest and GeoRasterOnlineTest classes to enhance testing coverage for image mos
added a new feature toggle for the launcher namespace in TogglableFlag . java and updated related methods in BaseFlags . java to enhance
updated log messages to use placeholder syntax for better readability to improve logging clarity and reduce verbosity
added a condition to return early if the current platform is not ANDROID to ensure compatibility with different Android versions
updated assertions in RoutesTest to use containsString for string comparisons to enhance readability and maintainability of test assertions
added new functional interfaces for BytePredicate , FloatPredicate , ShortPredicate , and ShortToLongFunction in the com . speedment . common . function package to
updated the ` getSubsColor ` method to return a ` String ` instead of an ` int ` and modified the ` setSubsColor `
added a conditional check before deregistering the invocation future to ensure that the invocation future is only deregistered when it is complete
replaced the instantiation of ` ControlFrameBytes < Void > ` with a direct call to ` output ( null , nop , ... ) ` to streamline
added handling for " redirected " status in LoginActivity and SignupActivity to ensure WelcomeActivity is only launched when necessary
added a new ShadowCheckedTextView class to enhance testing capabilities for CheckedTextView functionality
updated ParserState class to implement Serializable and changed access modifier of getter _ cache from private to transient to enhance serialization and prevent serialization issues
added " identrustdstx3 [ jdk ] " to the VerifyCACerts class to enhance certificate validation for identrustdstx3
removed duplicate setAttribute calls in WebInfConfiguration . java to streamline code by eliminating redundancy
fix occupant nick not parse correctly . smack - 8
removed the context parameter from the QuicSession constructor and related instances to simplify constructor parameters and improve code clarity
replaced calls to ` writer . getMergeScheduler ( ) ` with calls to ` writer . getConfig ( ) . getMergeScheduler ( ) `
refactor ICU4JImpl and TextPosition classes to improve type safety and clarity to enhance code readability and maintainability by using
added imports for ComputedDateValue and ComputedNumericValue , and refactored default value assignment logic in AddDefaultValueChange . java to
refactor NbtScoreboardIoService class to improve code readability and maintainability
updated resource handling in SAML2 configuration to ensure proper validation and error logging to enhance reliability and clarity of metadata storage operations
changed the visibility of the printer variable from private to protected and added a createPrinter method to enhance flexibility in printer initialization based on the PrintIdeal
added BigDecimal import and updated average price calculation in HuobiAdapters . java to ensure accurate price representation for order cash in the order
updated projection handling in ` ProjectionOperation ` and ` TypeBasedAggregationOperationContext ` to use ` fields . getTarget ( ) ` instead of `
modified the ` addViewer0 ` method to include a check for a player in the ` viewers ` list to ensure that ` addViewer0 `
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable classes to enhance state management and prevent potential memory leaks
refactor SPDYClient to improve connection handling and session management to en
fix ( protostuff ) : handle nullpointerexception in protostuffobjectoutput # writeobject ( object )
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactor BarrowmanCalculator class to improve code readability and maintainability
ggb - 2118 do n ' t show ax when there ' s no z axis in the plot .
replaced calls to setFilter with unsafeSetFilter for improved performance to enhance memory efficiency by using unsafeSetWrap for setting filters
[ ds - 3952 ] fix typo in xml : returntoworkspace ( )
added SSL context handling for HTTPS connections in CustomUrlJob . java and created a new CustomUrlTrustEverything class for testing SSL connections to en
refactor encoding handling to use real used clock rate strings to improve clarity and consistency in encoding usage
refactor TextureAtlas class to improve performance and maintainability
updated ProjectGenerator to use getModuleName ( ) instead of getProductNameForBuildTargetNode for clarity and added a method to set a module name in Apple
added lock management around release process in TestSlot to ensure thread safety during release process
fix for findids ( ) with inheritance
updated WebSocket response handling in WebSocketServletRFCTest . java to improve readability and ensure proper buffer management during parsing
[ wasm ] fix stack overflow in wasm function .
[ type : bugfix ] add ttl to clickhouse log collect config ( # 3209 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and enhanced getSerializableFields and getSerializableFieldValue methods in CustomPreconditionWrapper and
replaced ` QueuedThreadPool ` with ` HandlerCollection ` and added Jetty server setup and teardown methods in ` DeploymentExceptionTest . java ` to
added error handling for Timber initialization in CommonsApplication and modified VectorDrawableCompat creation in NearbyController to handle potential exceptions to improve stability
modified the return statement to handle null or empty objectName gracefully to ensure that objectName is not null or empty before proceeding
updated exception message from " could not find " to " could not open " in UserDataException to provide clearer context for file opening issues
[ hotfix ] [ table - planner - blink ] fix wrong planner and executor factory usage
updated variable names for clarity and added null checks for dname to improve code readability and prevent potential NullPointerExceptions
mark RuntimeOptions as deprecated to indicate that it should no longer be used
replaced byte array handling with direct string conversion for UTF - 8 encoding to simplify code and improve readability
added a new interface ` PermissionEvaluator ` to provide permission - based access control within the Spring Security expression
added a new option ` ERASE _ LINE _ ON _ FINISH ` to the ` LineReader ` class and modified ` LineReaderImpl ` to
fixed - npe in masterfilesystem . getservers ( ) if server do n ' t exist
updated exception types from SIGN _ ERROR to BLOCK _ MERKLE _ ERROR in P2pException . java and TronNetDelegate . java to
refactor ExpandWar . java to use URLConnection for jar file handling and improve resource management to enhance code readability and maintainability by
do n ' t emit httpclientresponseexception if exception occur after handler complete
changed the layout of the spinner wrapper from center to centerAbsolute to ensure the spinner position is relative to the center of the layout
[ flink - 18552 ] [ network ] fix networkbufferpool . recycle ( ) to recycle all memory segment
refactor MBeanServer initialization to use a static variable for the new MbeanServer instance to improve code readability and maintainability
replaced the @ RunWith annotation with a RetryTestRule annotation in AbstractIT . java to enhance test execution with a retry mechanism
refactor QueryStateMachine constructor to remove autoCommit parameter and simplify constructor parameters to enhance code clarity and maintainability by reducing redund
updated import statements in multiple Java files for consistency and clarity to improve code readability and maintainability
added support for " javax . microedition . khronos . opengles . GL " as a distinguished name parser in InstrumentationConfiguration
[ hotfix ] remove unused callback in streamtasktimertest
added null checks for _ uri and modified request handling logic in Request . java , and added unit tests in RequestTest . java to enhance
refactor storage point retrieval to use a dedicated method for legacy storage points to improve code clarity and maintainability by centralizing storage point retrieval
added methods to handle session availability and unavailability in the SessionManager to improve session management functionality
added a call to ` addPackageToScan ( " liquibase . pro " ) ` to include the " liquibase . pro " package
replaced ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` method in ` SyncedFolderProvider ` to streamline the deletion of synced folders
updated the ` loadWithNewGlobal ` method to accept an additional variable for additional arguments to enhance functionality by allowing more flexible argument passing to the
updated the ` regionMatches ` method calls to include a ` startIdx ` parameter for better readability to enhance code clarity and maintain
updated the weigher method to return the retained size instead of the length of the footer to ensure accurate retrieval of the retained size in the weigh
renamed methods and variables related to randomization depth from ` hasRandomizedType ` to ` hasAlreadyRandomizedType ` and updated corresponding
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor to ensure unsupported functions are handled correctly and provide clearer
clear the headers of the proxyRequest to ensure proper resource management
added a check to ensure SA attach is expected to work to prevent test failures
added null check for bgColor and introduced TranslucentWindow class for managing fullscreen windows to enhance robustness by preventing potential Null
updated user info handling in UserInfoActivity to include validation for phone , email , and webpage to ensure that user info is only displayed when
added PrecompiledHeaderSerialization to prevent serialization of precompiled headers on different machine
[ flink - 18552 ] [ table - planner - blink ] make kafkasourcesinkfactorytest . validateupdatemode ( )
added a new test class MultipleOutputsIntegrationTest for testing named output groups to ensure that named outputs can be used in source processing scenarios
updated regex pattern in FileSettings . java to improve content formatting to enhance readability and maintainability of the code
nifi - 6668 : fix statelessflow and statelesscontrollerserviceinitializationcontext to use versionedprocessgroup
replaced ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java ` to
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode switching functionality
added device status entries for " leaving - dock " and " energy - save - mode " in DeviceStatus . java to enhance the device ' s
refactor exception handling in ModelLoader to use a custom ItemLoadingException class to improve clarity and maintainability of exception handling logic
removed unused imports and added an @ Ignore annotation in KrakenFuturesStreamingPublicDataTest . java to streamline test code by eliminating
bugfix : do n ' t set current surface scale for 2x graphics
refactor RussianLowerCaseFilter class to improve code readability and maintainability
refactor CsvBulkLoadToolIT to use PropertiesUtil for setting server and client properties to simplify property management and improve code clarity
replaced occurrences of ` File . separatorChar ` with ` File . pathSeparatorChar ` in ` FileDisplayActivity . java ` to ensure consistent handling of
- add resettableinputstream to allow wav file to be load into memory
added a boolean property ` repeatFirstLineIndent ` and modified indentation logic in ` ColumnText ` to allow customizable indent settings to enhance flexibility in
cast the ` oid ` to ` Object ` before comparison to ensure compatibility with different object types
removed redundant calls to setMetricsTrackerFactory ( ) and registerMBeans ( this ) in HikaripPool . java to streamline code by
loopex : fix typo
set focus painted to false in WindowsPlacesBar to improve user interface responsiveness
added a condition to check if the object is an instance of UniqueConstraint , PrimaryKey , and ForeignKey along with a " backingIndex " field in
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and updated ` AccountAPI ` to
( scott phillips ) add support for dc . title to grouprest .
refactor GapInsertionDetector to handle empty utterance cases to improve robustness by preventing exceptions when no words are available
added unit test base on user forum issue
updated thread count from background to database update to ensure correct thread management for database updates
updated FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 to improve scrolling performance for better user experience
replace ` System . class . getName ( ) ` with ` Ljava / lang / System ; ` in ` HotSpotResolvedJavaField . java `
hhh - 13644 avoid npe in procedurecallimpl # getresultstream ( )
added null check for apiProperties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing configuration properties
added BinaryFrameGenerator and TextFrameGenerator classes to generate binary and text WebSocket frames to provide a structured way to send binary and text WebSocket frames
eranmes on behalf of andreashaas : fixing flaky test on firefox .
make random geo3d shape generate consistently between 180 degree and 270 degree
added a keepAlive method to manage ClassLoader references to ensure proper resource cleanup and prevent potential memory leaks
changed the return value from false to true in SQLiteDatabase . java to ensure correct behavior of the method
updated bug reporting logic to differentiate between Ljava / util / concurrent and Ljava / util / concurrent / CopyOnWriteArrayList to improve
added MkdirStep to handle file creation paths in AndroidAar , AppleBundle , ApplePackage , FatBinary , and FatBinaryTest to ensure
updated coordinate calculations in MeshLeveler . java to use yCoord instead of xCoord and added error messages to improve clarity and debugging of
[ drools - 7861 ] skip kie - pmml parsing and compilation when jpmml lib be not available on classpath ( # 2
updated condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure correct handling of power status updates
updated the temporary directory creation logic to differentiate between macOS and Windows environments
added a flag to control memory mapped buffer usage across different operating systems to enhance compatibility with Windows environments
added validation to ensure that plugis have an organization in the pom . xml file to prevent runtime exceptions
added a contributor license agreements comment to SepPostingsWriterImpl . java to clarify the contributor ' s license terms to
deleted the TerminateWebSessionListener . java file to the functionality was no longer needed in the current implementation
updated the method to retrieve the class path from the system property instead of an empty string to enhance flexibility by allowing dynamic class path retrieval
updated cryptKey initialization and md5Salt arrays to use zero - sized arrays to optimize memory usage by avoiding unnecessary array instantiation
added a test method to verify that the Javadoc does not change
turn on launcher3 PHYSICS by default
added a new ` < div class = ' noPrint ' > ` element to the ` HtmlThreadInformationsReport ` to enhance the report
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and updated TEST _ VERSION _ CURRENT from "
added ` symbolicator ` and ` task ` variables to ` BsdDebuggerLocal ` and updated platform detection logic in ` PlatformInfo ` to enhance
use weakreference to prevent memory leak
added a condition to log specific exception messages based on the presence of " Connection reset by peer " to improve error handling for Muted NetworkDispatcher exceptions
[ java ] initialize admin buffer in client conductor when
added a break statement in TouchImageView . java to ensure proper exit from the switch statement
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed unused SSL handshake listener implementation in FeedableBodyGenerator . java to simplify the code and improve maintainability
added checks for the " java . lang . Object " type in TypeUtils . java to ensure correct assignment to " java . lang . Object " to
use concurrentskiplistset instead of nonblockingset in memtablespendingflush
added null check for ` tree . errs ` before invoking ` memberEnter ` in ` MemberEnter ` and created a new ` ParseErrors ` class with
changed the background color of the browser from NO _ BACKGROUND to NONE to improve the visual appearance of the browser in the application
replace finish ( ) with dialog . cancel ( ) in AboutActivity . java to ensure proper dialog cancellation functionality
updated the calculation of ` newLowerBound ` and ` newUpperBound ` in ` IntegerStamp . java ` and added unit tests in ` IntegerStamp
added a new method ` readStream ( InputStream is ) ` to ` ITextUserAgent ` for reading binary data from an input stream to improve efficiency by
added local variable handling in SwitchCompiler and updated ExprGenerator to remove unused variables to improve code clarity and ensure proper scope management to enhance code maintain
refactor RSAClientKeyExchange to use a try - catch block for initializing the cipher to handle potential exceptions to improve error handling and provide clearer
removed " psapi . lib " from the " AdditionalDependencies " attribute in WinGammaPlatformVC10 . java to streamline dependencies by eliminating
updated comments to use the system ' s line separator to ensure consistent line formatting across different operating systems
updated TemplateEngineFreemarker and ApplicationController to use UTF - 8 encoding and modified expected content in tests to ensure compatibility with newer Ninja versions
refactor CRDGeneratorTest to use a byte array for serialization to improve performance and readability of the code
make holdsamples final in samplesenderfactory
disable emailablereporter by default
added a quoted flag to the CommandLineBuilder class and updated related tests to ensure proper handling of quote quotation marks to enhance command line argument parsing to
changed interfaces from public to package - private in multiple Java files to restrict access to these interfaces for better encapsulation
added functionality to set the number of reduce tasks in FreeGenerator to improve resource management
refactor schema generation helper to use field definitions instead of default object fields
updated FILEVERSION constant from " 505365 " to " 532077 " to reflect the latest version of the software
added support for OES _ texture _ float and GL _ ARB _ texture _ float extensions in FloatTextureData . java to ensure compatibility with OpenGL
add fileserver # write ( string , string ) so it can be call multiple time
added a null check for outputDirectory and jarStream before setting them to avoid potential NullPointerExceptions when accessing them
added a performance measurement for SQLite operations in ShadowSQLiteConnection to enhance performance tracking during database operations
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest ` and ` J
add resourcenotfoundexceptionhandling enum for good error reporting
lucene - 8470 : do n ' t throw eofexception when seek beyond end of index
updated error handling in DefaultServlet and JspServlet to include a message for missing resources to improve error reporting and provide clearer context for missing resources
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread handling to enhance thread management by allowing
increased CHECK _ EVERY _ N from 10000 to 0xFFFF and added logging statements for free memory checks to accommodate larger memory limits and improve
hbase - 26937 fix flaky testsplittransaction ( addendum )
added null check for currentSelectionArea before checking selection enable status to prevent potential NullPointerException when currentSelectionArea is null
added a new test method ` testJaasDemo ` in ` DemoModulesTests . java ` to verify the functionality of Jetty '
added checks for spanX and spanY in CellLayout . java to ensure correct calculation of spacing between cells
refactor CacheOffHeap class to improve performance and maintainability
add a test to see if a later table can be reference later
added a check for extra XML gid values before parsing in TiledLoader . java to avoid extra XML gid values being ignored due to corrupt map errors
added synchronized keyword to the setWorkingSet method to ensure thread safety when modifying the working set
added a new Java class to calculate the number of steps based on the minimum and maximum values
added a new interface ` AddressChecker ` and modified ` TrackerRequestProcessor ` to accept an instance of ` AddressChecker ` to enhance address validation logic
fix miss call to rendertype . gettranslucent ( ) in multilayermodel
remove tag from config element help text . ( # 9481 )
changed the data type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and updated ` Capability ` to
added null check for recieptents before attempting to send a mail to the receiver to avoid potential NullPointerException when recieptents is null
refactor isSingle method into a separate isSingle method to improve code readability and maintainability
added a new method ` client ( boolean failFast ) ` to ` DockerClientFactory ` and improved logging in ` RemoteDockerImage `
added resourcesMode parameter to AndroidMetadata constructor and updated related methods to include resourcesMode as a string to enhance flexibility in managing resource modes
no effective change - code cleanup
updated the import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure the correct core is used
added error handling for CommandFailedException in LiquibaseCommandLine to improve user feedback during command execution failures
refactor TreeMap class to improve code readability and maintainability
added methods to enable asynchronous stack traces in the Display class to enhance debugging capabilities for asynchronous operations
added a method to set the glow color in BubbleTextView and updated Folder class to use this color to enhance visibility control for items in the
added styling for link and description elements in LinkedFilesEditor to enhance the visual presentation of file links and descriptions
updated AbstractJdbc2ResultSetMetaData to return " java . lang . Short " and added a new test for class matching in ResultSetMetaDataTest to ensure correct
removed error handling for file writing in Lucene40LiveDocsFormat . java and simplified file deletion in SimpleTextLiveDocsFormat . java to improve code
added null check for _ info before accessing its status to avoid potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class that accepts a provider string to facilitate dynamic configuration of the provider
added a condition to set maxRAM based on device RAM size to ensure maxRAM does not exceed 2048MB limits for 32 - bit devices
update localmapstatsprovider and mapstatisticsawareservicetest to account for miss data
add log to fileprofileactivator for troubleshoot
use invalid _ instead of noname1234
changed the type of " roles " from " list " to " set " in GuildImpl . java to ensure consistent iteration order for role IDs
updated the return value in ExpandableUploadListAdapter to reflect the maximum number of uploads shown to ensure proper handling of uploads based on availability to
added assertions to verify deletion of records in the DashboardUserMapper to ensure
update instructorfeedbackresultspagedata to use primary - to - secondary association instead of recipient
sulong : fix dereferencing address
added a method to retrieve the buffer size in BufferedIndexOutput to provide access to the buffer size dynamically for better resource management
add -- headless option to help text
removed redundant switch statements in DrawerActivity . java to streamline code for better readability and maintainability
refactor CommandLineParserTest to improve test clarity and maintainability
added new animation interpolators for ALL _ APPS and ALL _ APPS _ SCRIM _ OPAQUE _ THRESHOLD in
refactor method call to use javaNameFromExternal for better clarity to improve code readability and maintainability
added native methods for setting and releasing a window and Rectangle2D in CWrapper . java to enhance window management capabilities within the application
added validation for constant values in ReferenceTree and introduced a new ValueTest class for testing constant types to enhance code robustness by preventing
refactor MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code clarity and maintainability
removed null check for constructors in PojoUtils . java to simplify the code for better readability
refactor JiraConfiguration class to improve code readability and maintainability
updated error handling messages in UploadBuild . java to improve clarity and consistency in reporting failure scenarios
updated bounds calculations in DeviceProfile . java to ensure correct positioning of search bar elements based on available width and edge margin to improve layout responsiveness and
corrected the spelling of " PulseAudioAudioSource " to " PulseAudioClient " to ensure consistency and accuracy in logging messages
refactor OverviewCommandHelper to use getLauncher ( ) for launching activities on the UI thread to improve code readability and maintainability
added a method to retrieve the source group as a Pair < String , ImmutableList < AppleSource > > in AppleSource . java to provide access to the
increased the timeout duration for triggerFiredLatch from 22 seconds to 32 seconds and increased the await duration from 60000 to 90000 milliseconds to accommodate
updated variable names from outputPositionCount to positionCount in FloatSelectiveStreamReader . java to improve clarity and consistency in naming conventions
added a square check for the distance between bestSoFar and MIN _ DIST _ PATH in AbstractNodeCostSearch . java to ensure that the returned path is
added a condition to skip processing for specific UI components to improve performance by avoiding unnecessary processing for specific UI components
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java ` to utilize
added a null check for commitPoint in ReplicationHandler . java to ensure that the latest commit is used when it is null
added IMEI and MEID retrieval methods to ShadowTelephonyManager and ShadowTelephonyManagerTest classes to enhance telephony functionality by
added debug logging for HTTP request processing in SimpleHostRoutingFilter to improve traceability and debugging capabilities during request processing
added a ` destory ( ) ` method to ` OfflineResourceDataManager ` , ` IndexSegment ` , and ` BitmapInvertedIndex `
[ issue # 4842 ] fix npe in normalmessagenreceiveandsendit ( # 4843 )
updated Charset usage from Charset . forName ( " UTF - 8 " ) to StandardCharsets . UTF _ 8 in StatVisualizer . java to improve
hbase - 26975 bulk load can fail if a file do n ' t exist ( addendum )
added a commission parameter to DefaultWithdrawFundsParams and updated RippleWithdrawFundsParams to include the commission value to enhance functionality by
removed unused import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and reduce unnecessary dependencies
updated catch blocks to include additional exception types for SolrServerException and IOException in LoadSolrBuilder and SolrLocator to enhance error handling to improve robustness by
added a check for overloaded methods in Java2TypeScriptTranslator to ensure proper error handling for abstract overloaded methods
replaced direct disk sweep with a try - with - resources statement for better resource management in TestFileSessions . java to ensure proper logging and resource cleanup
added serialization support for SqlDataType and refactored XML entity handling in Entities to enhance data serialization and improve code clarity
rename SubExactLConstantTest and SubExactLNonConstantTest classes to improve clarity and consistency in naming conventions
added null check for claimRequestString before parsing to avoid potential NullPointerException
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve compatibility with HIVE builder configurations
updated the ` processTypeHintForNestedDocuments ` method to improve null handling and added tests for mapsNullValue correctly for Java 8 date types to
updated CoreAdminResponse usage to use CoreStatus instead of CoreAdminResponse to improve clarity and maintainability of core status retrieval
initialize transformers and locators with empty lists to ensure proper initialization of collections to avoid potential null pointer exceptions
updated error message formatting in AbstractQuerydslProcessor . java to improve readability of error messages
pegraphdecoder : make pegraphdecoder more informative
( chore ) camel - resttemplate : use copiedsetof instead of setof
( chore ) camel - mail : remove useless null check
fix nullpointerexception in prefetchsubscription
added a call to setIsPropertyName ( ) in getIdentifierName ( ) to ensure the identifier name is validated as a property name to enhance validation
added a new ` WaveGeneratorActivity ` class and modified ` InstrumentsFragment ` to use ` WaveGeneratorActivity ` instead of ` Toast . makeText
added logging for null and non - existent sheets in KeyedProperties and SheetOverlaysManager to enhance error handling and provide clearer diagnostics
test : add test for pod log and exec watch
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to ensure that no writer is detected and create a new one
fix flaky graal kernel test
updated DnsClient , MxRecord , and DefaultDnsClient classes to implement Comparable interface and sort records based on priority to enhance sorting functionality to
refactor thread creation in XToolkit to use a privileged action for thread creation to enhance security by ensuring thread groups are properly managed
added validation and validation for the select box in SelectBox . java and set the dropdown selection in UITest . java to enhance user experience by ensuring
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve stack trace handling to enhance error reporting for better debugging
added a parentSplit parameter to the createState method and updated related logic to enhance state management by allowing the creation of SplitState instances with
change connectionState variable from int to volatile to ensure thread safety when accessing connection state
increase polling period for integration test
refactor memory allocation methods for ASCII and UTF - 16 encoding in MemoryStack and MemoryUtil classes to improve code readability and maintainability by
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error reporting and error handling
[ java ] unusedmodifier : fix false positive with enum declaration
refactor code to use method reference instead of lambda for clarity and consistency to improve readability and maintainability of the code
updated parameter name from " ssl = { 0 } " to " ssl = { 1 } " in AbstractHttpClientServerTest . java to enhance cl
added error handling for transformation exceptions in TransformationHelper . java to improve robustness by logging warnings when transformation fails
updated method call from ` getUserPermissions ( ) ` to ` getActiveConnectionPermissions ( ) ` in ` ActiveConnectionRESTService . java ` to ensure correct
replace equality check with EqualsBuilder for better clarity to enhance readability and maintainability of the equals method
added a null check for outputRoot in the process method to prevent potential NullPointerExceptions when outputRoot is null
pdfbox - 4892 : add annotationfilter interface , a suggest by valerybokov
refactor StackTraceCleaner class to improve code readability and maintainability
updated Content - Disposition header in PluginServlet to set specific content types based on file extension to enhance flexibility in handling different file formats
hhh - 16625 skip testliteralinselectexpressiontest on oracle dialect
renamed parameter ` slot ` to ` slotSize ` and updated related logic in ` ForkController . java ` to improve clarity and functionality to
added ` getStats ( ) ` methods to multiple classes and updated ` DocBuilder ` to use ` AtomicLong ` instead of ` AtomicInteger ` to
[ scb - 2576 ] add longpolling support to kie client ( # 2576 )
added accessibility test for scrolling in PagedView and updated gesture handling in BaseOverview to enhance user experience by verifying gestures are
updated unlocks dialog implementation and added a button to pause the dialog to enhance user experience by providing a clearer unlock option
added a call to clear drops in PlayerEventListener to ensure dropped items are properly cleared
added a new constant DEFAULT _ PARAM with a default value of " inputName " to establish a default parameter for stream results
updated the exception type in the testNormalizeOrder method from MalformedURLException to IOException to enhance error handling by providing a more specific exception type
updated TsFileSketchTool to include chunk type in marker output and adjusted the buffer size in LocalTsFileInput to enhance clarity of marker information
added headersToExclude to exclude Swift . h files to improve filtering of unwanted headers from being processed
renamed the method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java ` to improve cl
added encode ( ) method to RequestPlugin class to enhance request processing capabilities
mondrian : fix mondrian . sql . dialect . isdb2 ( ) for mondrian .
added null or blank password validation in LdapAuthenticationProviderImpl and created a test for empty or blank passwords in TestLdapAuthenticationProviderImpl to ensure
pdfbox - 2576 : fix typo , a suggest by valerybokov
added a condition to clear the complex writers list in ProjectRecordBatch . java to ensure proper resource management by clearing the buffer
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress serialization warnings to enhance code readability and maintainability by suppressing
removed public access modifier from ClassGraphClassLoader and updated null check condition to enhance encapsulation and prevent potential NullPointerExceptions during class loading
added handling for " _ errors " in ErrorResponseException to ensure proper error reporting for schema errors
added a constructor to the EventSourcingRepository class that initializes its properties to ensure that the eventStore is not null to prevent potential null pointer exceptions
refactor symbol handling in binary node creation to improve clarity and maintainability of symbol definition logic
modified text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure search text is splittedtedtedtedtedtedtedtedtedted
[ nuvo ] do n ' t send off / on command when not essentia
tmi - tiff : use chunky planar by default
added a call to close the is resource to ensure proper resource management and prevent potential memory leaks
added a new utility class to calculate average value for laser / craft table .
added new classes SigInt and SigIntBarrier to handle integer signal registration to enhance signal handling capabilities within the Agrona concurrent library
added support for hierarchical graphs in the ExporterGEXF class to enhance edge retrieval capabilities for hierarchical graphs
replaced byte array with Text for null handling to improve handling of character encoding issues during string writing
[ 1.19 . x ] rubric : fix out - of - bounds index in rubric response
updated the schema and catalog case comparison logic in CatalogComparator . java to improve clarity and correctness of schema comparison
simonstewart : reset the webdriver proxy after each test so that it do n ' t fail
[ drools - 6662 ] fix numberformatexception in critical error message ( # 2663 )
removed duplicate reset calls in InPlaceEditView . java to streamline code by eliminating redundancy
trufflestring : fix typo in javadoc
[ hotfix ] [ gelly ] fix typo in outedgesfunction
refactor multiple assertion classes for improved clarity to enhance maintainability and readability of the codebase
deleted the file ` Class Á . java ` and created a new test class ` DiacriticTest . java ` to implement a
replaced CountDownLatch with CyclicBarrier for thread safety to ensure proper handling of concurrent executions in cluster membership tests
[ mng - 6674 ] mng - 6674 : mng - 6674 do n ' t allow mng - 6
updated SSL verification logic in ServiceRegistryConfig and improved test assertions in TestServiceRegistryConfig to enhance SSL validation and ensure correct port configurations
updated Mockito library version to ensure compatibility with the latest testing framework
removed unnecessary whitespace in the constructor signature of Jdbc3Connection
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure servlet instances are only instantiated when necessary to enhance thread
added time expiration logging and modified server time calculation in BinanceExchange and BinanceBaseService classes to enhance debugging capabilities by tracking server time
added a condition to check if the binding starts with " Nonstop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 "
replaced direct call to getComponentForm ( ) with a null check for the current form before deregistering animated elements to ensure that the current form is
added options parameter to the decodeResource and decodeByteArray methods in ShadowBitmapFactory and ShadowCanvas classes to enhance bitmap creation flexibility by allowing
[ java ] change example publisher and subscriber to use executor rather than direct call .
added a ` preventNextClick ` flag and modified tweet text handling in ` TimelineArrayAdapter ` to utilize ` HtmlUtils . linkifyText `
added " text " to the list of unmodifiable data types in PostgresDatabase and updated related logic in NumberType to ensure compatibility with Post
fix entryprocessorbouncingnodestest ( # 3683 )
updated state checks to use isRemovableState instead of isHardDeletableState to improve clarity and consistency in state management logic
added a null check for the thingRegistry before adding it to the inbox to prevent potential NullPointerExceptions during bridge reinitialization
refactor Robots expiration checks to use a consistent variable for CrawlServer to improve code readability and maintainability
updated display name checks to avoid null pointer exceptions to enhance code robustness by preventing potential NullPointerExceptions during execution
updated SpriteBatch constructor to accept a default shader program instead of a default one to enhance flexibility by allowing custom shader configurations
added synchronous commit options to the properties to enable synchronous commit functionality in tests
added elementTypeCoercer to enforce type coercion for collections and improve error handling for duplicate elements to enhance type coercion reliability and
refactor confirmation messages for file and folder confirmation in RemoveFileDialogFragment and RemoveFilesDialogFragment to enhance clarity and maintainability of user
updated URL path encoding condition to ensure only valid characters are accepted to enhance security by preventing invalid characters
updated the registration of fragment storage address in UserContext . java to use a random port based on the current time to enhance flexibility in fragment storage
updated the expectation in HostResourceProviderTest to return an empty map instead of an empty list to ensure that the test correctly verifies the expected cluster state
[ hotfix ] remove unused logger from yarnentrypointutils
refactor SIPCommFrame to encapsulate initialization logic into a separate method to improve code readability and maintainability by reducing duplication
deleted the ShadowHtml class from RobolectricBase . java to the functionality was no longer needed in the project
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory ` interface to provide a
updated logger variable names from " org . eclipse . jetty " to " org . eclipse . jetty . http3 " and
changed the access modifier of the ' addListeners ' method from private to public to allow external access to the ' addListeners ' method from other classes
[ hotfix ] fix checkstyle violation in statehandlestore
updated import statements for Constraint in multiple test classes to ensure compatibility with the latest Jetty version
continue issue # 1070 [ instructorcourseenroll ] allow team to be edit in 2 different section
fix resource leak in jmeterutils
camel - 1145 : camel - core - allow to configure a port number for the wsdl to be pass to camel - core
added support for ABI jar parameters in the Java library build process
corrected the spelling of " https : / / www . rabbitmq . com / ssl . html " to " https : / / www
added pageSizeVal retrieval from getPageSize ( ) method to ensure pageSizeVal defaults to 100L when not provided
added handling for the CLOSED event in IteratingCallback . java to prevent further processing when the callback is closed to enhance stability by preventing
added a boolean field ` isAuthorized ` and updated access control context initialization in ` AccessControlContext ` to track whether the access control context is authorized to
refactor OSGi deployment handling to include a check for non - OSGi applications before registering as OSGi services to enhance robustness by
added support for " tiff " codec in DLNAMediaInfo to enhance media type handling for different content formats
refactor argument assumption handling in OptimizedCallTarget . java to improve clarity and maintainability of argument assumption management
added a new file ` CubocDesktop . java ` and modified ` Map . java ` and ` ImmediateModeRenderer20 . java
updated PolicyMonitor initialization to use target directory instead of test resource directories to ensure correct file paths are used for monitoring resources
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure the trashbin list is updated correctly after changes
updated the virtual machine manager from ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) ` to ` com . sun . j
truffle : make checkglobalvariablestoragenode more generic
added an Intent parameter to the createLauncherEvent method and updated relevant event details to enhance event tracking by including package and component hashcodes and predicted ranks
updated BurningManPresentationService to use a constant for maximum burn target lower floor to improve code readability and maintainability
updated the ` UniqueConstraintSnapshotGeneratorSnowflake ` to utilize ` H2Database ` and replaced specific imports with a wildcard import
modified the item assignment logic in DMLTransformer . java to handle empty insert statements correctly to ensure proper formatting of SQL queries based on empty insert statements
updated service ticket URL from " http " to " https " to enhance security by using secure pgt URLs
modified the ` getDefaultValidFunctionName ` method to include a boolean parameter for statement context to enhance flexibility in function name generation based on statement context
refactor JarLauncher class to improve code readability and maintainability
[ hotfix ] [ runtime ] fix generic generic in repeat class
do n ' t send hole punch packet if peer be not a call
added a test method for updating a PostgreSQL object with a PGobject in ResultSetTest . java to verify the functionality of the updateObject method to ensure
updated PasswordResetEndpoints to return BAD _ REQUEST when the user is not authorized to create a password reset endpoint to enhance security by preventing
changed method call from ` getFirstChild ( ) ` to ` getDocumentElement ( ) ` in ` XMLUtils . java ` to ensure correct retrieval of
refactor Cache class to improve performance and maintainability
change variable name from timeInSec to timeMillis and prevTimeInSec to prevTimeMillis in Isochrone and SPTResource classes to
fix an issue with light relay not be able to bind .
added a new class ` Chainer ` and updated ` CollectionSubject ` to return a ` Chainer < T > ` with chained items to enhance
refactor Model class to improve code readability and maintainability
update recordedTime calculation to include 619315200000L to ensure accurate time tracking for recorded time
added a condition to resize the status if the terminal type starts with " Windows " to ensure proper resizing behavior for Windows terminals
updated HostVersion state handling in UpdateDesiredStackAction . java to ensure host versions are only set to INSTALLED if they are not REQUIRED to
[ j2kt ] use bundle _ deploy . jar instead of javatests
use linkedhashset to maintain predictable iteration order
changed variable declaration from ' op ' to ' final ' for clarity to improve code readability and enforce immutability
reformatted the call to resolvePropertyConfigurerResolver in KnativeEnvironment . java to improve code readability and maintainability
fix typo : commitlog _ archiver
added a call to connect ( ) in CloudSolrClient and implemented a test for upload configurations in TestCloudSolrClientConnections to ensure proper handling
added synchronized blocks around adding and removing bindings in Breakpoint . java and DebuggerSession . java to ensure thread safety during concurrent access to allBindings
added caching functionality and improved file handling in ShadowContext to enhance performance and maintainability of file operations
added TreeMap . class to the list of styles in SecureXStream . java and implemented assertions in XStreamPersisterTest . java to enhance
[ drools - 705 ] allow to pass a kiemodulemodel to kiemodulebuilder and kiehelper
added a check for Farmland type and modified block data validation in BlockEventListener . java to ensure that the soil ' s dry moist
added a default method ` getLocalIp ( ) ` to the ` FinishedSpan ` class with a default implementation to provide a default implementation that returns ` null
updated JdbcStepExecutionDao to deserialize binary data using SerializationUtils and added a new test for integer handling in AbstractStepExecutionDaoTests to improve data
corrected calculation of b0 and b1 for consistency and clarity to improve code readability and maintainability
* add ` - python - gpu ` and ` - python - gpu - lib ` to the list of supported python libraries for tensorflow
refactor PluginTab to streamline plugin management by using a JTable instead of ArrayList to improve code readability and maintainability by reducing
changed log level from info to warn for error reloading , saving , and error trimming errors in DefaultHistory . java to provide more granular
vmware : fix npe in vmwarestorageprocessor when volume be delete
( chore ) camel - sftp : fix flaky test
refactor ExperimentalMockitoJUnitRunner class to improve test clarity and maintainability
updated GpsSettingsActivity to conditionally set the serial option based on the presence of a serial ID to enhance user experience by providing cle
updated the implementation of the swapGBuffers method to improve memory management and performance
added null checks for spatial and skeleton control before removing them to improve code robustness and prevent potential NullPointerExceptions
added a method to set smart replies in ShadowRankingTest and updated ShadowRanking to utilize the reflector for setting notifications channels to enhance
[ java ] do n ' t add file to archive directory if it do n ' t already exist .
[ hotfix ] fix typo in carrotclusteringengine
added null check for testRect in WindowsTreeUI . java and created a new bug8004298 . java file for testing functionality to ensure
updated ASM API version from ASM7 to ASM9 to ensure compatibility with newer ASM versions
throw exception instead of return null
added ClientInfo to SurrogateAuthenticationEventListenerTests for improved test coverage to ensure accurate client information retrieval during tests
added a boolean variable ` isUserView ` to ` CardPresenter . java ` to manage user view status effectively
removed unused imports and simplified the isGraphvizJavaAvailable method in GraphvizJavaExecutorUtility to enhance code readability and maintainability by
corrected the spelling of " constructBatch " to " syncLogTimePerRequestHistogram " to improve code readability and maintainability
added a new module - info . java file for SQLite connector in the com . speedment . runtime . connector . sqlite package to define module dependencies and
added a sleep of 500 milliseconds in StreamResetTest . java to introduce a delay for better test reliability
removed unnecessary conditional check for " api " in the permissionsManager initialization to simplify the code for better readability and maintainability
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method to get the depth value in SpringLoadedState to provide a depth measure for state transitions
replaced manual array copying with a constant for minimum size to improve code readability and maintainability
[ hotfix ] fix typo in executiongraph
added notification removal functionality in NotificationActivity and removed it from NotificationRenderer to streamline notification management and improve code clarity
None
fix ( glowcontainer ) : make lock optional
replaced MethodHandle lookup with reflection for setting the target field to improve compatibility with Java ' s method access
changed the type of ` value1 ` and ` value2 ` from ` int ` to ` Integer ` for both ` value1 ` and ` value
updated return statements in BaseEmailContentFormatter to prepend " - " with " - " instead of " metrics " and " metrics " and " datasets "
added a JPanel to manage the layout of a layout node to ensure proper visibility and display of the component in the layout
added a null check for the location variable in the condition to ensure robustness by preventing potential null pointer exceptions
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added validation to ensure key parameters are not missing to prevent CertPathValidatorException
refactor MediaTypeRequestMatcher to use a dedicated method for ignoring specific media types to improve code readability and maintainability
updated task number handling in LlapBaseInputFormat . java to improve clarity and consistency in task number assignment logic
added properties to the SpringBootTest annotation to allow bean definition overriding in tests
added null check before closing the indexReader to prevent potential NullPointerException when indexReader is null
changed package declarations for BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , and BTCMarketsStreamingMarketDataService from ` service ` to ` btc
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest ` to verify that the rendered code does not have BRs
added a new file CompatibilityTest . java to verify the integrity of internal DTD definitions to ensure compliance with XML standards and enhance
added new utility classes for push notification functionality to enhance the application ' s capability to manage push notifications
refactor replicas handling in TableRebalancer to use a loop for clarity to improve code readability and maintainability by reducing repet
bump version to 2.7 . 0 and update release note
log4j2 - 1343 fix unit test to use system property line . separator
added handling for SocketTimeoutException in AjpAprProcessor to ensure proper error management by throwing an appropriate exception when the read timeout occurs
change default value of friction , restitution , density , and isSensor from 0.2 f to 0.2 f and set isSensor to
updated anomalyClassifier and related classes to use anomalyFunctionSpecMap instead of anomalies to enhance clarity and maintainability
added error handling for broadcast idle commands in LauncherInstrumentation . java to ensure robustness by logging exceptions when waiting for broadcast idle
added unit tests for font and link tags with attributes in ResourcesTest . java and updated the return value in ResStringPool _ span to correctly account for
move stats component out of the work directory .
added permission check for call - phone request in Launcher . java and updated PendingAddItem handling in Utilities . java to ensure proper handling of phone
updated simulation panel return values and added styled labels in PlotDialog , BasicEventSimulationEngine , and Startup classes to enhance user interface by
updated GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and GeoEncodingUtils classes to enhance performance and
added a synchronized method to check if the Docker client is available to ensure thread safety when accessing the Docker client
removed the VPX constant from CodecTypes . java to streamline the code by eliminating unused variables
added a coordinator address option to DistBuildFactory and updated its usage in DistBuildRunCommand to allow configuration of the remote coordinator thrift server to
added a matching method for file path matching in FsUtils to enhance file path matching functionality in WrapTimer
added a condition to check if the ent . getValue ( ) is non - negative before adding it to labelValues to ensure that the total value is only
added null check for result and improved output formatting in App . java to enhance code robustness and readability
removed the @ Test annotation from TestPerfBenchMarkDriver . java to streamline the test execution process
added functionality to set materialization time in ObjectStore and a corresponding test in TestObjectStore to ensure correct handling of materialization times during object
added handling for UnsatisfiedLinkError in VoskSTTService to improve error logging and provide clearer diagnostics for missing native dependencies
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48338 - remove one - way
update break weight logic in GlyphView . java to handle edge cases more accurately
refactor synchronization logic in RCFile . java to use a buffer for byte array operations to improve performance and efficiency in reading sync data
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 related to issue tracking
replaced direct calls to ` steps . getSortedByCounts ( ) ` with a LinkedList for processing steps and processors in ` ToePool . java `
removed redundant parameters from the ` setToSortedDataFlavorArray ` and ` keysToDataFlavorArray ` methods in ` DataTransferer `
hbase - 2581 add - infoport option to thrift test ( addendum )
added a check for EOF in the RegExpScanner implementation to prevent further processing when EOF is encountered
added checks for enabled metrics and timers in Debug . java to ensure metrics and timers are only processed if they are present to avoid potential NullPointerExceptions during
fix nullpointerexception when try to send a message with no nickname .
added null and empty checks for the filename variable in PApplet . java to improve error handling for missing or inaccessible files
refactor refresh token creation into a separate method ` createRefreshToken ( ClientDetailsEntity client , AuthenticationHolderEntity authHolder ) ` to improve code
updated error message formatting in BuckConfig . java to provide clearer context for path transformations failures
[ hotfix ] remove unnecessary lock in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a way to retrieve the hardware buffer
updated BTCChinaExchange to use SSL URI for market data service to ensure secure communication to the BTCChina API
pmd : fix illegalargumentexception in cpdtask
added OauthController and Oauth2PluginTest classes for handling OAuth2 requests to enhance OAuth2 integration testing capabilities within the application
refactor SemgrexPattern class to improve code readability and maintainability
added flatMap and flatCollection methods to AbstractStreamEx , EntryStream , and StreamEx classes to enhance stream processing capabilities for improved
( chore ) camel - core - rest - java : improve error logging
updated the class name check in RobolectricClassLoader to include " scala . " for both org . specs2 and org . scala .
updated the conditional check to exclude non - transmittable audio encodings to ensure that only relevant audio encodings are processed
updated the type check for ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` and added a new test for ` Default
[ geos - 10979 ] add unit test for checkstation3gml31 and checkstation3gml32
added a volatile boolean field ' wasInvoked ' and modified related methods in NetworkTestUtils and UaaHttpRequestUtilsTest to enhance thread safety and
added a check for configuration before expanding regex mappings and changed return types of fieldProcessorMap and featureProcessors to unmodifiableSet to enhance
updated the method ` splitIntoThirtyParts ` to ` splitIntoThirtySecondsPart ` and refactored the ` splitIntoTh
added XLCDCommunicator and XLCDController classes to handle G - code communications to enhance G - code communication capabilities within the
[ drools - 6054 ] move kie - maven - plugin xsd to kie - api
updated conditions in EventQuery001 , EventQuery002 , and EventQuery003 to check for non - empty ` retryTimes ` instead of `
refactor WorkerProcessPoolTest to use a separate join method for thread joining to improve code readability and reduce redundancy in thread
refactor ` DelegatingMethod ` to use ` equals ` and ` hashCode ` methods instead of ` equals ` for improved clarity and
updated constants for freezev2 , unfreeze , and delegate resource from 20000 to 10000 to accommodate new resource requirements for improved performance
added exception handling to the command method in DownloadPlugins . java to ensure the configuration is saved and reload even when an error occurs
deleted the SpringTransactionHooks class to the functionality was no longer needed in the current codebase
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValueTarg . java ` that demonstrates the behavior of ` GetUninitializedStringValue ` with an uninitialized ` String `
added support for provided dependencies query functionality in AndroidLibraryDescription to enhance dependency management by allowing retrieval of first - order dependencies
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags for synchronizing keyboard open and close animations between home and all apps
replaced the retrieval of system anomaly message with a static boolean flag to control the saving of the bugreport to improve code readability and maintainability by
added support for cinepack format in the media info parser
added camera bobbing configuration and modified movement animation logic in the Player . java file to enhance the player experience by allowing control of camera bo
replace data . describe ( ) with digest . toString ( ) in GrpcCasBlobUploader . java to improve clarity of blob data representation
deleted HSQLDBServerFilesFilter . java and updated TestUtility . java to use a custom FilenameFilter instead of HSQLDBServerFilesFilter to
walletappkit : fix nullpointerexception
updated method call from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` in ` MediaTableTVSeries . java `
added a typeExists flag to the visitMethodInvocation method to prevent duplicate visiting method invocations for the same qualified class name
updated AmbientCubemap to use a constant for NUM _ VALUES instead of 6 * 3 to improve code readability and maintainability
[ netbeans - 4071 ] add a dialog to reset the current profiling mode
added checks for zero values in GenericUDFMask classes to ensure correct masking behavior for various numeric types
test : use temporary folder for derby test
add isItemStackDamageable ( ) method and getHasSubtypes ( ) method to ItemStack class to enhance the functionality of the ItemStack class
fix line width in renderstate ( # 7807 )
danielwagnerhall : set the default startup page to " 0 " in firefoxdrivertest .
updated condition in Http1xClientConnection to include CONNECT , GET , and Upgrade requests to enhance connection handling for improved functionality
updated task acceptance from " compile " to " process - classes " in JoobyMojo . java to clarify the purpose of processing
do n ' t close idle connection on shutdown
added a check for aggregate function identifiers before creating a new Metric instance to ensure metrics are only created for non - aggregate function identifiers
added a method to set fullscreen parameters in TaskOverlayFactory and updated corner radius retrieval in TaskView to enhance functionality by allowing dynamic adjustment of fullscreen parameters
added a new Java class to calculate the number of occurrences of a given string to provide functionality for counting occurrences of a given string
initialize socketchannel to null to avoid potential nullpointerexception
refactor MutisignOperationerGodicTest class structure to improve code readability and maintainability
added exception handling around readToStartFragment ( ) and readToEndFragment ( ) in StaxEventItemReader to ensure graceful handling of NoSuchElement
replaced specific imports with a wildcard import and added null checks for qualifiedResourceName in TestAttributeSet to enhance code clarity and prevent potential NullPointerExceptions
updated import statements from com . nimbusds . jose . shaded . json . JSONArray to net . minidev . json . JSONArray in
updated OS detection logic to handle AIX and Linux - s390x - 64 correctly to ensure compatibility with AIX systems in PKCS11 tests
server : use router control ip when listpublicipaddresses ( # 6663 )
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate synchronous execution of a Runnable without blocking execution
deleted the PresenceMessageComboTests . java file to the test class is no longer needed in the project
updated PortraitPagedViewHandler to use Math . round for rounding calculations to ensure consistent rounding of width and height to improve code readability and maintain
removed redundant parameters from KMeansDriver calls in TestClusterDumper . java to streamline code for better readability and maintainability
updated ClassSize alignment logic and added null check for rowCache in KeyValue . java to enhance code clarity and prevent potential null pointer exceptions
camel - 14263 : camel - jbang - add typeconverter to camel - default
added support for ConditionalTask in SparkCrossProductCheck to enhance task execution for conditional tasks
removed the ACTION _ MANAGED _ PROFILE _ ADDED and replaced it with ACTION _ MANAGED _ PROFILE _ REMOVED in multiple classes
added a condition to check if ` jsonResponse ` is false when ` accountChooserNeeded ` is false in ` LoginInfoEndpoint . java `
added a method to return a descriptive string representation of the state and timestamp for better debugging to enhance visibility into the state and timestamp for better trouble
added ` result ` field to ` HuobiAccountInfo ` and updated relevant methods in ` HuobiAccountServiceRaw ` to en
added a reserve word for the " PERIOD " column in MariaDBDatabase and implemented a test for adding a period column in AddColumnStatement to
[ beam - 8470 ] add environment variable to portable worker description
added new version logs for Android 7.1 to clarify changes to the dictionary loading mechanism for Android 7.1
changed the visibility of the NUM _ MILLIS _ IN _ DAY constant from private to public in TestUtil . java to allow external access to the constant
remove system . out . println from imageresourceloader
[ java ] use the invoker of the conductor client rather than the default one .
added validation for implicit lambda parameters in mmm Attr . java and created a new NoWarnOnImplicitParams class with two interfaces for testing raw types to
refactor menu item visibility and enable / disable logic in FileMenuFilter to improve code readability and maintainability by reducing duplication
added reserved BTC _ deposit , BTC _ withdrawal , and reserved3 , credit , and payment to BTCETransHistoryResult to enhance
replaced List with Set for handling HTTP status series and exceptions to enhance performance and flexibility in handling HTTP status exceptions
added @ Deprecated annotation to PluginLoader . java to indicate that the class is outdated and should not be used
added a condition to check if ` chunkMetaData . getEndTime ( ) ` is greater than ` version ` in ` LastQueryExecutor . java
updated the string appended to the request string in HttpResponse . java to ensure consistent formatting to improve readability and maintain consistency in string handling
added a static block to set the error log property to " ERROR " in BuildImageMojo . java to improve error reporting during build execution
added safe area setting for title bar to enhance text visibility in the chart
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to ensure correct processing of the last element in the list
added SQL renaming for columns in the ALTER TABLE statement to ensure correct parsing and deparsing of column names in SQL syntax
make copystate public to allow subclassing
fixed - redissonexecutorservice . scheduleatfixedrate ( ) method throw concurrentmodificationexception exception . # 3906
added a new constant SUFFIX _ SPLIT _ FILE and updated file suffix handling in FileLister and FileSystemSplit classes to improve code clarity and maintain
[ hotfix ] [ table - common ] fix checkstyle violation in table - common
corrected spacing in CompareFunctionsProcessor . java to improve code readability and maintain consistency
updated the ` reduceScopeForLimitedSpace ` method to accept a ` long ` expected size instead of ` long ` for better precision to en
added ` toString ( IndexReader ir ) ` methods in ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes
added a check for invalidated states in AbsSwipeUpHandler and unregistered the task stack listener in TaskAnimationManager to ensure proper handling of gestures during
added ` getLockTimestamp ` and ` setLockTimestamp ` methods to ` AppPreferences ` , ` PreferenceManager ` , and ` PassCodeManager `
updated the artist retrieval logic in MediaInfoParser to ensure the correct artist is used based on the general stream kind and metadata
added null check for remoteMessage before accessing its data to avoid potential NullPointerException when remoteMessage is null
nifi - 6078 added null check for splitinfo in splittext
added support for Windows - specific keystore type in HttpsConnectorFactory to enhance keystore management for Windows - specific configurations
increased the DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to ac
added a condition to ignore the FILE _ NOT _ FOUND result code when checking if a remote folder is not found to enhance the robustness of
added interpolation functionality to the Slider class for better animation control to enhance user experience by allowing customizable animation durations
reformatted assertions in LineSeparatorProcessorTest to improve code readability and maintainability
changed maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to accommodate larger texture pack sizes
added a test for handling negated ternary expressions in UnwrapParentheses to ensure proper handling of ternary expressions in the rewrite logic
camel - 15836 - camel - hazelcast : do n ' t set body to null in hazel
added TextFeedbackTest to the AllTests suite and implemented tests for it to enhance testing capabilities for TextFeedback functionality
replaced Math . round with Float . compare for score comparison to improve accuracy of score comparison
updated display density constants and refactored resource saving logic in AddAndScaleMultiImage . java and ResourceEditorApp . java to enhance
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and updated ` ArrayCopySnippets ` to use
added logic to skip processing if there are no lines to report
added support for remote SCM in Configuration and RuntimeEnvironment classes to enhance flexibility in managing remote SCM settings
added support for Rinsehold state in MieleApplianceHandler to enhance the application ' s state management functionality
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for logging launcher and task events to standardize logging format across the application
[ hotfix ] fix typo in localzookeeper
added tests for ProjectGenerationEvent events to ensure correct serialization and deserialization of ProjectGenerationEvent objects
ggb - 2118 fix selection of special point for selection of point
refactor JavaCompiler to improve code readability and maintainability
added a check to ensure the remaining time is non - negative before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to
refactor multiple Java files for improved clarity and organization to enhance maintainability and readability of the codebase
added " -- gc - sections " and " -- nocreate " options to ldflags in NdkCxxPlatform . java to enhance garbage collection
updated ` SpringCloudCircuitBreakerFilterFactory ` to use ` ServerWebExchangeUtils . expand ` for generating fallback URIs and added unit tests
refactor multiple test classes for improved clarity and organization to enhance maintainability and readability of the code
added null check for ` uri ` in ` ReadOnlySharedStringsTable . java ` to prevent potential ` NullPointerException ` during string comparison
added a method to retrieve the account network using HTTP in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to
added a check for ` availTextWidth ` before returning ` clipString ` in ` SwingUtilities2 . java ` and modified the Look Look and Fe
refactor FlatteningIterator to use a singleton pattern and improve iterator behavior to enhance code readability and maintainability by reducing object creation
updated the title and body to replace special characters with HTML color codes for better consistency to enhance readability and maintainability of the code
doc : generate sample code in the java microgenerator ( # 438 )
add test for delete an exist question
updated return values in HSSFSheet . java and added assertions in BaseTestSheet . java to ensure correct handling of row numbers and validate functionality
added permission checks for launcher activities in InstallShortcutReceiver and updated PendingAddItemInfo handling in Launcher to enhance security by preventing malicious
[ java ] send an ok event when the cluster session be connect .
added a hashCode ( ) method to AbstractParquetMapInspector to ensure proper comparison and hashing of ParquetMapInspector instances
added a condition to flush the buffer when remotelyClosed is true to ensure proper resource management and prevent potential memory leaks
updated the SplitReader interface to extend AutoCloseable instead of void to enhance resource management and prevent potential memory leaks
removed the deepCopy ( ) method from GsonBuilder to streamline the code by eliminating unnecessary duplication
return not _ found instead of null when scan unknown source file
refactor file handling in RestClientRequestImpl to utilize asynchronous processing of uploads to improve performance and readability of file operations
updated the ` dispatchStatusString ` method call in ` GrblController . java ` to ensure consistent formatting to improve code readability and maintainability
added a new class ` SearchingClassLoader ` and modified ` MockFactory ` to utilize it for class loading to enhance class loading management
* added a new test class ` TestRefreshFlagBug ` for managing refresh flags in a scene graph to verify that the in - between node '
added LEFT _ SEMI _ JOIN type check in ConstantPropagateProcFactory to ensure proper handling of left semi joins in join conditions
replaced direct calls to ` exchange . responseComplete ( null ) ` with ` HttpStatus . CONTINUE _ 100 ` in ` HttpReceiver . java
updated method calls to use arrayOopDescLengthOffset instead of arrayLengthOffset across multiple classes to ensure accurate offset retrieval for array object descriptions
http : / / issues . apache . org / jira / browse / amq - 4682 - add default policy to brokertestsupport
updated multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
added a check to ensure the application context is not running before stopping to prevent potential errors when attempting to stop the application context
modified the drawItem method to return a GlyphLayout instance instead of void to enhance flexibility in rendering the item
added MetricsPublisher to the SpringmvcClient and updated metrics retrieval logic to enhance metrics monitoring capabilities and improve error handling
updated safe account age date handling in AccountAgeWitnessService to ensure accurate retrieval of account age data
refactor StructureHeader and StructureReader classes to improve readability and structure handling to enhance maintainability and clarity of the code
added ` ResourceUrlProviderExposingInterceptor ` to ` CasWebflowContextConfiguration ` and updated ` DefaultLoginWebflowConfigurerTests
introduced a new DexReturnInliner class and integrated it into DexBody . java to enhance the handling of return statements in the
refactor ruleresource to use getproperties ( ) instead of getconfiguration ( )
added LinkOption . NOFOLLOW _ LINKS to PathResource . java and updated argument definitions in AliasCheckerSymlinkTest . java to enhance resource verification
[ flink - 18552 ] [ table - planner ] remove unused sql dialect property
replaced ` ImmutableSet ` with ` Supplier < String > ` for ` rDotJavaPackages ` with ` Supplier < Boolean > `
add unit test for astpackagedeclaration annotation
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor to enhance control over unsequenced data processing
[ hotfix ] fix checkstyle violation in runtime / resourcemanager
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify that the
updated URI creation in ZipResource . java to handle URI syntax exceptions and added unit tests for feature file parsing to improve robustness of URI creation and ensure
refactor ExpandableUploadListAdapter to improve thumbnail generation logic and enhance upload status handling to ensure thumbnails are dynamically generated based on upload
refactor ` RobolectricTestRunner ` to merge ` Config ` annotations with parent class and method configurations to enhance configuration merging functionality for
updated list initialization to filter only non - null registry names to enhance data integrity by preventing null pointer exceptions
refactor ` AbstractDataChangedListener ` , ` WebsocketDataChangedListener ` , ` WebsocketCollector ` , and ` SyncDataService `
updated JSONPojoConvertor to handle enum values and enhanced color retrieval in tests to improve support for Enum types and ensure correct color representation in JSON
added a warning message indicating that the ` -- view ` option is deprecated and will be removed soon
changed the data type of originalPayload from String to byte array and updated GWTRequestWrapper to utilize ByteArrayOutputStream for payload handling to improve performance
updated GyroControl class to implement OrientationCorrectionListener and introduced OrientationCorrectionListener to adjust mouse coordinates based on device orientation changes to enhance
change BIOME _ LIST _ SIZE from 256 to biomeGenBase . getBiomeGenArray ( ) . length to ensure correct array size for
changed print statements to print statements in GetInterfaceTest . java to ensure consistency in output formatting
removed duplicate declaration of Environment in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ByteToLongCollector to provide a collector for converting byte stream to long
added preload parameter to MMapDirectoryFactory to allow customization of preload behavior
added custom metrics for various components in BukkitPlatform to enhance performance metrics reporting for various components
refactor QuickConnectREST class to improve code readability and maintainability
added aspect ratio and a default card image drawable in CardPresenter . java to enhance card presentation functionality
( scott phillips ) fix count of implicit auth method
updated VectorHashKeyWrapper to handle zero - length arrays for decimal values and byte lengths to improve robustness by preventing potential ArrayStoreException
added methods to test System . nanoTime ( ) and System . nanotime ( ) during CRIU checkpoint and CRIU restore to en
added null check for the line parameter in MultiPartFilter and included a print statement in MultipartFilterTest to enhance robustness by preventing potential
add livingexperiencedropevent to allow player to drop their experience .
[ openuv ] update openuv status to offline when apikey not configure ( # 15831 )
[ sql - planner ] remove unsupportedoperatorsvisitor because it be not support
refactor GraphEnhancementQueryEnvironment to include RdepsFunction and streamline node retrieval to enhance dependency management and improve code clarity
refactor Character class to improve code readability and maintainability
added functionality to conditionally select a rocket component based on selection criteria to enhance flexibility in scaling rocket components
replaced ` Arrays . toString ( bytes ) ` with ` assertEquals ( bytes , rs . getBytes ( 4 ) ) ` in ` UpdateableResultTest
added time boundary information retrieval for offline and realtime tables in BaseBrokerRequestHandler to ensure proper handling of time boundary queries for hybrid tables
do n ' t add socket to poller if not async
updated EightmusesRipper to replace " Sex and Porn Comics " with " Akamoto " and modified
replaced ` mDevice . wait ( Until . hasObject ( ... ) ) ` with ` TestHelpers . wait ( ... ) ` for
updated conditions in QuickstepLauncher to include phone profile validation to ensure proper layout behavior for phone devices
updated assertions in PartTreeJpaQueryIntegrationTests to use query . unwrap ( QueryImpl . class ) instead of getValue ( ) to ensure compatibility with
replace direct calls to ` Files . readAllLines ` with a new method ` readMatchingLines ` for reading matching lines to enhance security by ensuring
added a dynamic check for the " getResultStream " method in JpaQueryExecution . java to ensure proper method invocation based on the " dynamicCheck "
added null check for entity before continuing in PhysicsProcess . java to prevent potential NullPointerException when entity is null
fix entryprocessortest when value attribute be not indexed
add operationsetjitsimeettools to allow jitsi - conference - room join
updated color calculation in Utils . java and changed HTML message format in UtilsTest . java to improve clarity and consistency in color formatting
disable normalize name menu item when input text be empty
updated scratch path generation in Aapt2Link . java to include a new directory structure for symlinked links
replaced instances of ` Capture < Supplier < Tool > > ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java `
g3d - 358 : clear selection before clear geos ( fix )
added exception handling for MarkedYAMLException and EmptyStackException in YsldValidator . java to improve error reporting for CQL parsing errors
added isCanceled ( ) method implementations across multiple classes to standardize cancellation handling across the application
removed the ` isAnnotationPresent ` method across multiple classes to simplify the method signature and improve code clarity
added a default implementation for the removeAllWidgets method to indicate that the method is not yet implemented and should not be used
[ hotfix ] [ test ] fix yarnsessionfifoitcase failure
update output size calculation in OpenSSLCipher . java to ensure correct output size based on input length
added conditional logic to force a transcode of high - res content based on Fire TV Stick status and video stream availability to enhance user experience by
[ spark dataset runner ] use mock data source instead of current transform
updated GpsLoggingService to use a set of listeners based on preference to improve flexibility in managing GPS listeners
changed the parameter type of ` putString ` method from ` boolean [ ] ` to ` byte [ ] ` in ` vt320 . java
added support for BaseItemDragListener in FolderIcon to enhance drag - and - drop functionality in the application
added a createEmptyArtifact method to RepositoryConnector , AbstractRepositoryConnector , and SignavioConnector classes to handle type casting for String , Boolean
( chore ) camel - rabbitmq : fix typo
removed conditional check for the validity of the " . m3u8 " video link in VideoViewerActivity
( chore ) camel - sftp : fix path compaction issue
increased the timeout duration for the mocked endpoint from ` assertIsSatisfied ( ) ` to ` assertMockEndpointsSatisfied ( 20 , TimeUnit . SECON
updated variable name from groupSortStr to sortWithinGroupStr for clarity to enhance code readability and maintainability
added a condition to check for LARGE _ FERN alongside the DOUBLE _ TALLGRAS constant in BlockDoublePlant . java
changed the focus setting from focusable to request focus enabled in TranscodingTab . java to improve user experience by preventing unintended focus behavior
do n ' t re - throw vm exception on shutdown
added acceptLicense method to DB2TestSystem and modified condition in DockerDatabaseWrapper to check if the test system is an instance of DB2TestSystem
changed ` units ` from ` final ` to ` private ` and implemented ` setUnitGroup ` method in ` DoubleModel ` and ` General
added a new static final CurrencyPair BTC _ ZMW with BTC / ZMW as a base currency to the CurrencyPair class to support trading with
add sample count to pbrlighting test
removed redundant calls to assertTasklet in StepWithSimpleTaskJobParserTests to streamline test assertions for better readability and maintainability
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to enforce immutability of the variables
simplified the string concatenation syntax in ExpressionNode . java to improve code readability and maintainability
added multiple calls to ` addServiceOutput ( ) ` and refactored error handling in ` DDLSemanticAnalyzer . java ` to improve service
jbrules - 2623 : fixing objectcreationexpr coercion for bigdecimal
added " org . eclipse . jdt . " to WebAppContext . java to hide JDT used by jetty to enhance security
simplified the return statement in the NegotiateAuthentication class to simplify the logic for determining authentication caching
pdfbox - 4892 : capitalize the namespace , a suggest by valerybokov
camel - 14263 : camel - direct - should use directconsumernotavailableexception for backwards compatibility
added null check for zooKeeper before setting it to null to prevent potential NullPointerException when zooKeeper is null
modified the progress bar step message in Loader . java to ensure consistent formatting to improve readability of the progress bar output
refactor vibration handling in AllSetActivity to use a dedicated method for UI helper thread execution to improve code readability and maintainability
added a call to update the last remote stream ID in HTTP2Session to ensure accurate tracking of stream status updates
enable antialiasing for text in preference dialog
[ java ] do n ' t rely on term window size when report flow control over run subscription .
refactor : remove unused static import of enums in ctannotationimpl . java ( # 2760 )
refactor ExoPlayer class to improve code readability and maintainability
updated getRGBPixelImpl method to include a Rectangle parameter to enhance pixel retrieval capabilities
added a new method to set output stream encoding based on system properties to enhance flexibility in handling output stream encoding
updated vibrate duration from 1 to 25 in TouchableMovementMethod . java to improve user experience by allowing more time for vibration
added import statements for java . util . Date and Key in AppEngineSqlCloudSession . java and FlybushDataClearer . java to
removed the executor parameter from the WebSocketClient constructor to simplify the constructor signature and improve code clarity
simonstewart : fix the issue that the i18n test be fail on the ci server
updated exception handling methods to use ` handleLoadConstantException ` instead of ` handleIncompatibleClassChangeError ` and ` handleBootstrapMethodError `
added a call to restore authentication system state in XmlWorkflowServiceIT to ensure proper state management during test execution
added a custom comparator for case - insensitivity in CoNLLUFeatures to ensure features are processed in a case - insensitive manner
refactor parse method to accept a list of source file objects instead of an Iterable to enhance flexibility by allowing multiple source file objects to
simonstewart : fix the flaky test toggling option in a multi select
added validation for the length of keys in HighestKvno . java to ensure data integrity and prevent potential errors
added error handling for attribute retrieval in HDF5BatchReader to ensure only valid BTrees with 1 record are supported to enhance robustness by prevent
[ beam - 8470 ] use writeresult . in ( pipeline ) instead of pdone
updated the method name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added API parameters for template upload to enhance clarity
added a new file TestMultiANewArray . java for testing multi - new array functionality to verify the behavior of multi - new array operations
ambari - 21142 . ambari agent should not deploy secondary storage vms per zone ( rlevas )
refactor block ID retrieval logic in SyncBlockChainMsgHandler . java to improve clarity and structure to enhance readability and maintainability of the
set the theme for the preview tab in PreviewTabView to ensure the preview view displays correctly based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a test for HTTP idle timeout and implemented a new test for EchoHandler in ConnectorTimeoutTest . java to ensure proper handling of idle
add dictionary property to allow customization
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` in ` DocCommentParser
updated generic type declarations in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests for clarity and consistency to improve code readability and
reduce log level from warn to debug
refactor ColorExtractionService to utilize a dedicated method for retrieving the hotseat pallete to enhance code clarity and maintainability
added setter methods for default DataTableEntryTransformer and TableCellByTypeTransformer in TypeRegistry to enable customization of data table entry and cell transformations
added assertion to verify that newAvailableShared does not exceed initShared limit
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a boolean field ` projectGenerated ` to ` ProjectGenerator ` and updated ` WorkspaceAndProjectGenerator ` to call ` isProjectGenerated ( ) `
removed the check for AUTH _ HEADER from the condition in DriverUtils . java to simplify the condition for user property validation
added contact form functionality to the application and created a new Contact class to enhance user interaction with contact management in the application
guacamole - 195 : use objectpermissionset instead of set for objectpermission .
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version of the software
[ drools - 7 ] fix typo in traitfactory method
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` for clarity and consistency
replaced manual closing of per - document consumers with IOUtils . closeSafely to improve resource management and prevent potential memory leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in ExpansionViewHelper to enhance user interaction by allowing the overflow button to be shown
updated error messages related to null and non - null references in Subject , OptionalSubject , and SubjectTest classes to improve clarity and accuracy of
ggb - 2118 update line height of help button in av help
test : move protobufferutilstest to core
fix divider positioning in jabref window . close # 189
refactor getNewFileImpl to return an array of strings instead of returning a single object to enhance flexibility in handling different object types and
[ geos - 10979 ] use serializable metadatamap instead of map < string , object >
renamed extractTypes to dataTables in RecipeDescriptor . java to improve clarity by using a more descriptive variable name
added a method to handle avatar avatar updates in multiple classes to enhance contact avatar caching functionality and improve event handling
updated import statements for Command class in ShellCommand and ShellFactoryImpl classes to ensure compatibility with the new command class structure
added a test for cleaning up the audit log table post parameters by position in AuditLogTest . java to ensure proper functionality of the clean - up of
updated inject method to return an object instead of a generic type to enhance type safety by suppressing unchecked warnings
added regex pattern matching for comment lines in ` ACLFileParser ` to enhance parsing accuracy for comment lines with leading and trailing spaces
updated the ` isReadable ` method to include a ` FileSystemPlugin ` parameter and modified the return type to ` DrillTable ` to enhance functionality
added ancestor dimension values to the node name and logging in StarTreeNodeImpl to enhance clarity and debugging of node splitting operations
added user unlock check in TouchInteractionService and implemented closeOpenViews method in BaseQuickstepLauncher to ensure that open views are only closed when the user
updated condition to check for positionStr instead of widthStr to ensure proper validation of positionStr to prevent potential null pointer exceptions
refactor PKIXValidator logic for improved clarity and structure to enhance code readability and maintainability
[ hotfix ] [ test ] add archunit test for the test code
corrected the package name from ` alibaba . dubbo ` to ` test . alibaba . dubbo ` in multiple test
vpc : do n ' t list private gateway in listnetworks api call
[ hotfix ] fix runtimetypeadapterfactoryfunctionaltest failure
added methods to control and store undo information for properties to improve control over property state management
replaced direct access to ` XRCompositeManager . java ` with a privileged action using ` AccessController . doPrivileged ( new PrivilegedAction < String
test : fix flaky streamclosetest
removed the doAfterFlush method implementation and added null checks for perFields to ensure thread safety and prevent potential NullPointerExceptions
added JSON deprecation support for non - deprecated entries in ConfigurationMetadataGenerator to enhance metadata generation for better compatibility
refactor capacity and mask variables to be final in BiInt2ObjectMap and Int2ObjectHashMap classes to enhance code clarity and maintain
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 in HiveConf and modified file renaming logic in Hive . java to
[ nio ] add more logging to the nio sender to help debug problem
added a null check for the context before creating a new SchemeAndroidIDE instance to prevent potential NullPointerExceptions during execution
refactor native image class loader handling in NativeImageGeneratorRunner and NativeImageBuildServer to improve clarity and maintainability of class loader management
changed return type of modifyGrantedAuthorities methods from void to List in SwitchUserAuthorityChanger and SwitchUserProcessingFilter classes to enhance
refactor JaxrsIntegrationTest to JaxrsIntegrationTestBase and introduce RawJaxrsIntegrationTest , JaxrsSpringMain , and
use setquerytimeout instead of isjdbc41Compliant
added DataProviders for general and supplementary character tests in XslSubstringTest . java to enhance test coverage for XSL substring functionality
updated the close method in StaxEventItemWriter to use delegateEventWriter instead of eventWriter and added a close method in NoStartEndDocumentStreamWriter
added support for MariaDB sequences and updated sequence handling logic in CreateSequenceGenerator to ensure compatibility with MariaDB versions prior to 10.3 to
removed unnecessary spacing in error messages to improve readability and maintain consistency in formatting
added TableDataManagerProvider to multiple test classes to utilize offline metrics for better data management
updated SSLExtension to include MFLN extension checks to enhance security by enabling MFLN during SSL operations
replaced ` ObjectIterator < T [ ] values > ` with ` ObjectHashSetIterator < T > ` for improved iterator functionality to enhance
updated text calculation for charRemaining in Compose . java and TweetFragment . java to correct the length calculation and add 23 for the shortened URL
added a new constant for datapoint TTL and refactored related data point handling in CassandraDatastore and WriteBuffer classes to enhance data
updated the ` checkForAndKillXcodeIfRunning ` method to include an ` enablePrompt ` parameter for better control over Xcode prompt behavior to
added a method to retrieve terrain at a specific cell in the TerrainGrid class to provide access to terrain data for a specific cell within the terrain grid
added default value printing functionality in ` Pretty . java ` and created a new class ` T6665791 . java ` with a test for
add error log when questencryptionkeys . json not find
added a condition to check if the request is not a push request to ensure proper handling of push requests in the request processing logic
refactor PointValue class to improve code readability and maintainability
remove signing of local witnesses in blockutil
modified FileSystemView and Win32ShellFolder2 classes to return the first root or null if no roots are available to enhance security by preventing access
updated row height retrieval and refactored content copying logic in ColumnText . java and PdfPRow . java to improve code clarity and
replaced undoTrash with undoArchive and introduced a SparseArray for undoNotesList to improve clarity and maintain insertion order for notes
update backup data to include new feedback question
added null check for data in getTransferData method to ensure data is not null to prevent potential NullPointerExceptions
no effective change - remove unused pstmtdelegate interface
replaced mLauncher . getPaddingForWidget with AppWidgetHostView . getDefaultPaddingForWidget for widget padding calculations to utilize the default padding
refactor MethodHandle initialization and add consStringFilter method in NashornBeansLinker . java to improve clarity and functionality of method handles for
refactor ClassGraph and ScanResult classes to improve code clarity and maintainability
rename CountDownLatch to CountDownLatch for clarity to improve readability and maintainability of the code
updated assertions in IterableSubjectTest to use hasMessageThat ( ) instead of hasMessageThat ( ) to improve clarity and functionality of failure messages
replaced ThreadLocal with null - safe access for the currentBook variable across multiple classes to enhance thread safety and prevent potential NullPointerExceptions
added support method for MethodInvocation in ContactSecurityVoter to enhance functionality by allowing voting on specific object types
removed unused imports from DataLoader . java to clean up the code and improve readability
added an AtomicInteger to track the number of rows affected and modified postUpdateLog method to accept an int parameter to enhance message clarity
mow - 1070 fix margin - left and margin - top in dock panel
set foregroundFPS and backgroundFPS to 60 to improve responsiveness of the application
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog classes to ensure proper management of object releases in the logging process
replaced DefaultWebSocketFrame with ChannelFutureListener for closing the WebSocket connection to ensure proper handling of the close frame to enhance the stability of the WebSocket
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` and introduced a new ` Interceptor
refactor SettingsActivity to use a dedicated method for setting the list background to improve code readability and maintainability by reducing duplication
[ rme ] fix nullpointerexception in rmethinghandler
added a new method ` accumulate ` to ` JavaUserDefinedAggFunctions ` to handle weighted average accumulation with specified weight and string parameters to enhance functionality
[ hotfix ] fix checkstyle violation in put / replicationsink
replaced Set with Map for the REGEXP _ CACHE to improve thread - safety for regular expression matching
added a reset method to the GameThread class to provide a way to reset the game thread instance
added a check to ensure the digest matches the authentication service ' s realm to prevent authentication failures
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and functionality to enhance code readability and maintainability by consolidating
updated logging messages to use the correct variable name for clarity to improve readability and maintainability of log messages
[ java ] remove unnecessary wakeup in commitlog and haservice .
added a condition to exclude Android O devices in PhotoViewerActivity and updated UserAutoCompleteHelper to use AutoCompletePeopleAdapter to enhance compatibility with Android O
updated schema info level from minimum to basic to improve clarity and consistency in schema information
refactor XML output stream handling in SaveTask . java to use BufferedOutputStream for performance to improve resource management and prevent potential memory leaks
refactor TestPayloads to use UTF - 8 encoding for generating random byte strings and replace direct byte manipulation with a utility method to improve code cl
fix mc - 103516 ( # 193516 )
[ ci ] remove unused container adapter
[ drools - 6670 ] fix compiler warning for multi - accumulate accumulate
simplified comparison logic in NowSearchTerm and SearchTermBuilder classes to improve code readability and maintainability
pdfbox - 4071 : fix typo , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for method and headers to improve URL resolution and enhance header handling
added a new method ` newResponseBuilder ` to ` SearchHandler ` for creating ` ResponseBuilder ` instances to streamline the creation of ` ResponseBuilder
added a notification for command start in AsyncBackgroundTaskManagerTest to enhance task management functionality
refactor preview drawing parameters handling in PreviewItemManager to improve code clarity and encapsulation
refactor LukeRequestHandler to use CharFilterFactory instead of TokenizerFactory for improved token filtering to enhance flexibility and maintainability
added null checks for ' plot ' , ' generator ' , and ' hotspot ' parameters in AbstractCategoryItemRenderer to ensure proper handling of null values
added verbosity control to the createSubContext method to enhance flexibility in context handling based on verbosity level
added a condition to convert schema to uppercase if it is " oracle " to ensure compatibility with Oracle database types
log4j2 - 1343 add logmanager . getcontext ( false ) . getsimplename ( ) to the contextdesc
added a new file TestShrinkToOneRegion . java to implement a shrink - to - one operation for garbage collection
replaced string splitting with Splitter for better consistency to improve readability and maintainability of the code
updated the ` AnalyzingInfixSuggester ` to use ` context . utf8ToString ( ) ` instead of ` utf8ToString (
updated the attachment handling logic in PushsaferMessageBuilder to correctly encode the content type based on the presence of " data : " prefix to ensure correct
no effective change - remove unused command
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
removed the ' final ' modifier from static function declarations in multiple test classes to simplify the code and improve readability
updated the evaluate method to accept a double instead of a long to improve precision in evaluating floating - point numbers
[ jsscripting ] remove dependency on openhab ' s config api
changed class visibility from package - private to public in Test1 and Test2 classes to allow access to these classes from other packages
updated PlayerEventListener to use " deny . no _ enter " instead of " permission . no _ permission _ event " and improved variable naming for cl
updated the ` getAdditional ` method to include a session parameter for session handling in ` ConditionAndOr ` and ` ConditionInConstantSet ` expressions to
replaced instances of ` TestNormsVersusStoredFields ` with ` TestNormsVersusDocValues ` in ` BaseNormsFormat
added random variables for box , circle , and contact in Box2DCharacterControllerTest to enhance test coverage for dynamic body , circle , and contact
added tests for ` ThreadBufferSizeExceedMemorySize ` in ` FLIGHT _ RECORDER
updated assertions in ObjectAlignment and Options classes to check for power of 2 instead of a power of 2 constraint to ensure correctness in alignment validation logic
added a method to extract the target package from the manifest and updated related classes to utilize this method to improve flexibility in managing Android
refactor DocHelper class to improve code readability and maintainability
updated the initialization of acceptableThrowawayItems to use an ArrayList instead of an Arrays list to improve flexibility in setting initialization
updated method calls from ` mh1 . < > invokeExact ( x ) ` to ` mh2 . < > invokeExact ( x ) ` to
removed unnecessary spacing in MessageHandler . java to improve code readability and maintainability
refactor inflection class to improve readability and maintainability
added methods to retrieve and set the locale in EvaluationContext to enhance flexibility in managing locale settings
removed unused import of Plugin from SummaryPrinter . java to clean up the code and reduce unnecessary dependencies
added a break statement in DrawerActivity . java to ensure proper exit from the switch statement
updated import statements in MongoQueryCreator . java for clarity and consistency to enhance readability and maintainability of the code
added a system property to define a custom LoggerFactory for XWork logging to enhance flexibility by allowing custom LoggerFactory configurations
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
updated @ ConditionalOnMissingBean annotations to use a consistent name for bean properties to improve clarity and consistency in bean naming conventions
make localpstoreprovider thread - safe
refactor deleteFiles method to encapsulate file deletion logic to improve code readability and maintainability
refactor ServiceLoaderSpliterator to use ServiceProvider instead of Provider for improved clarity and consistency to enhance code readability and maintainability
improve error handling in javainteropreflect . findfield and javaobjectmessageresolution .
added isToolchainCreated method to both ToolchainProvider and DefaultToolchainProvider to check if a toolchain is created to ensure that the daemon
added a boolean flag ` contextAddedToEngine ` to control context removal to ensure thread safety when context is added to the engine
updated condition checks to use ` contains ` instead of ` indexOf ` for better readability to improve code clarity and maintainability
updated linker flags in PrebuiltCxxLibraryDescription and added a new test for exported linker flags in CxxPythonExtensionDescriptionTest to ensure
updated the method name from ` onConfigurationChangedInternal ` to ` updateRecentsRotation ` and removed the ` onConfigurationChangedInternal ` method to improve
updated listener types to use wildcard generics for better type safety to enhance code readability and reduce potential runtime errors
abstractblockchain : use getchaingroup ( ) instead of getsplitpoints ( )
defaultmessagestore : use getstorepathphysic ( ) instead of getstorepathcommitlog ( )
fix resource leak in micrometermetricmanager
increment message transferred and miss message count in compaction log
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used
added methods to check for system UI presence in AbstractLauncherUiTest to enhance test coverage for system UI functionalities
changed logger from static to final in SessionRegistryImpl . java to enforce immutability and prevent potential thread safety issues
added checks for empty cookie jar in InMemoryCookieStore and NullUriCookieTest to ensure that the removeAll method returns false when the store is empty
added toString ( ) method to BonsaiValue class and improved debug logging in BonsaiWorldStateUpdater to enhance readability
changed the parameter type from String to CharSequence for the getText method in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes
unignoring a test until we can fix it
added a try - finally block to ensure the connection is returned to the destination after handling exceptions to enhance resource management and prevent application crashes
renamed ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and updated related references to improve clarity and
added synchronized block around heartbeat executor service initialization to ensure thread safety during concurrent access to the heartbeat executor service
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce ` wrapWithTracingAndCancellation ` method
added a method to update the first line showing in the TextArea to ensure that the text area does not exceed its bounds
added work directory configurations for testing in TestInformationSchemaWithPrivilege . java to
refactor graphics configuration retrieval logic into a separate method to improve code readability and maintainability by reducing duplication
tika - 2298 -- fix oom issue in legacy mode
camel - 14263 : camel - core - optimize the pipeline to reduce the number of method call
refactor PrintTagList to allow specification of a model file with - model to enhance flexibility by allowing users to specify a model file without
updated InsertDeParser to append the table name as a string instead of a fully qualified name and added a new test for SQL parsing with an alias in
fix eofindexrecover eofrecovery test
[ java ] fix startfromtruncatedrecordinglogtest flakiness .
updated the calculation of the outer rectangle by changing the variable type from int to float to improve precision in rendering calculations
added a check for both null and empty galleryImages in the PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerExceptions during execution
added a new column " DEPLOYMENT _ ID " to the " DEPLOYMENT _ ID " table in the CreateDatabaseChangeLogTable
updated usage instructions for PrintFields and SetField classes to reflect the new package structure to ensure compatibility with the interactive form functionality
removed the second parameter ` false ` from the ` canUseIndex ` method calls in ` AlterTableAddConstraint . java ` to simplify
added provisional engine management to QuickfixjComponent to enhance flexibility in managing multiple QuickfixJEngine instances
added displayZoomControls functionality to RoboWebSettings to allow dynamic control over the mixed content mode
add corporea - spark and corporea - spark to the block system . close # 189
refactor ConnectionFactory class to improve code readability and maintainability
added EnableDisableMenuItems method to GpsMainActivity to manage menu item visibility based on app settings for GPX and KML logging to enhance user
updated the message for empty lists in ExtendedListFragment to include a new constant for favorite list names to enhance clarity and maintainability of the
hhh - 5977 - fix test failure on oracle with oracle 6.2 . 0
updated MotorMountConfigurationPanel to use subpanel instead of this object to improve flexibility in managing the MotorMount configuration panel
updated LINE _ SEPARATOR initialization from System . lineSeparator ( ) to system . getProperty ( " line . separator " ) to improve flexibility by allowing
added getter and setter methods for creator and subject in POIXMLProperties and implemented a test for document properties in TestPOIXMLProperties to
removed duplicate call to super . doStop ( ) in HandlerWrapper . java to improve code readability and maintainability
[ java ] do n ' t fail on empty cnc file .
refactor ` UnsatisfiedTypeBounds ` to use ` FooCommand ` instead of ` Marker ` and ` Foo ` instead of ` NonMarkedFoo
added methods to handle Jmod - specific class names in the ClassFileSourceImpl class
added nullability check for the canonicalizer parameter in TreeBackedElement and TreeBackedEnter classes to enhance code robustness by preventing potential
replaced direct assignment of the client ID with a PublicTokenRequest instantiation in Saml2TokenGranterTest and UserTokenGranterTest to
fix arrayindexoutofboundsexception in abstractfrompropertyvaluerangedescriptor
added synchronization methods to ZooKeeperWatcher and ZKAssign classes to enhance ZooKeeper synchronization functionality
added a check for EGL _ NO _ CONTEXT in the EGL14 exception handling logic to ensure compatibility with different EGL contexts
[ drools - 624 ] do n '
added a return statement in HystrixDashboardConfiguration . java to ensure proper execution flow in the HystrixDashboardConfiguration
removed exception handling for PipeNotExistException in DropPipeProcedure . java to simplify the code and improve readability
fix clientqueueDisruptiontest to not shutdown hazelcastclient
refactor : migrate ctreferenceimpl to use defaultjavaprettyprinter ( # 765 )
changed the visibility of the validateInstance method from public to protected to allow subclasses to access and override the validateInstance method
lucene - 6930 : decouple geopointfield from numerictermenum from geopointprefixtermsenum
added a new class FakeBuildable to provide a mock implementation of AbstractBuildable for testing purposes
use itemstack . isempty ( ) instead of itemstack . getitem ( ) for good readability
rename ` path ` to ` timeseries ` for clarity
added a check for negative velocity values in TubeCalc . java to prevent potential issues with negative velocity values
refactor Blob retrieval methods in GcsPinotFS . java for improved clarity and consistency to enhance code readability and maintain
removed redundant closing of the Vert . x context in TestHighwayTransport . java to ensure proper resource management and prevent potential memory leaks
# 3082 - ddl generation for postgres - based view should drop the view if exists
updated the expected value of the clustering engine from 2 to 3 to accommodate changes in clustering engine configurations
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored because the test needs to be rewritten
updated ParserCacheCommand to use ParserStateObjectInputStream instead of ObjectInputStream and added a new ParserStateObjectInputStream class to enhance deserialization capabilities
added null checks for ` changeLog ` and ` objectQuotingStrategy ` in ` ChangeSet . java ` and updated ` DatabaseChangeLog . java
updated Metainfo parsing method from parsing to using fromXmlStream to improve compatibility with XML stream processing
deleted the CsrfControllerAdvice . java file to remove unused code related to CSRF token handling
refactor endorsed argument handling to use quotePathList method for better readability to enhance clarity and maintainability of the code
added a scrim animation to the launcher and updated related classes to utilize it to enhance user experience by allowing the launcher to transition to
updated Long . parseLong check from 2 ^ 24 to 1 ^ 24 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added validation for UNC paths in WindowsPathParser to ensure proper handling of long and UNC paths to prevent runtime errors
( chore ) camel - promiscuous : remove unused variable
removed redundant calls to writer . close ( ) in TestWildcard . java to streamline code for better readability and maintainability
replace return statement with a clone method for nBits to ensure nBits is not modified externally to prevent potential data loss
changed the visibility of the deriveCollectorName method from private to protected and added assertions for custom collector names in TestProfilerCollector to enhance encapsulation and
datamongo - 2043 - ignore type hint when write simple type .
added performance measurement for the createProxyFactory method to enhance performance tracking during proxy creation
added multiple @ SuppressWarnings annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling to include the original exception as a parameter to improve error reporting for better debugging
refactor reinflateWidgetsIfNecessary ( ) method to use getWorkspace ( ) instead of LauncherModel . getWidgets ( ) to improve code
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to ensure that the ` FileDialog ` behaves
lwjgl : do n ' t flush message when autoflush be set to false
improve instructorstudentlistpageuitest to show the student profile picture .
added environment variable handling in TestIgnorance . java to enhance test execution control based on system properties
removed the pointer parameter from the fling method signature to simplify the method signature for better usability
added null check for pageable in QueryDslJpaRepository to enhance robustness by preventing null pointer exceptions
added a computeMemorySize method to MemoryManager to allow dynamic memory allocation
( chore ) camel - jms : fix flaky test
refactor SnowballAnalyzer class to improve code readability and maintainability
removed unnecessary initialization of previousBatch in StreamingAggTemplate . java to simplify the batch - related code and improve performance
throw an error if the plugin do n ' t require a receiver
added a new method ` stream ( TableIdentifier < ENTITY > tableId , computeIntensityDefault ( ) ` to ` StreamSupplierComponent . java `
updated logging messages to reflect played and fully played states in MediaMonitor . java to improve clarity and functionality of file moving operations
updated method visibility from private to public in InjectorProxy , ReflectionUtil , StandardInjectorProxy , and InjectorTest classes to enhance access
[ hotfix ] [ table - planner ] fix typo in flinkstreamingcreatefunction
added tests for parsing and deparsing SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest classes to ensure correct parsing and
return empty list instead of null
updated the description in NamedSetTest to include Quality Distribution to enhance clarity and accuracy of test results
added a check for ` websocketReconnect ` in ` DeconzBridgeHandler . java ` and updated connection state handling in ` WebSocketConnection .
replaced setAttribute calls with removeAttribute calls for authentication and target URL attributes in AbstractProcessingFilter to streamline session management by removing unnecessary attributes
hbase - 26937 testregionreplicasputputputputputputputputputputputputputputputputput
added initialization of PmsConfiguration in FormatRecognitionTest . java to ensure PmsConfiguration is properly managed during test execution
cloudstack - 4892 : do n ' t fail vm template creation if it ' s already on disk
updated PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 and replaced SpringBootTest with SpringJUnit4ClassRunner to en
added multiple @ Override annotations to CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to enhance code clarity and ensure
added a PRIMARY KEY constraint to the UPSERT INTO UPSERT INTO UPSERT statements in AppendOnlySchemaIT . java to ensure
added a check for document count consistency in SegmentReader to ensure correct handling of deleted documents during segment processing
added a method to log exceptions and added methods to log trace in the SipLogger class to enhance logging capabilities for better traceability
added a new constant ` 0.9 , but shorter length is required for staves w / no starting barline to clarify the requirement for
removed the default value of ` handleFileUploads ` from ` VertxPlatformHttpServerConfiguration ` and updated ` VertxPlatformHttpEngineTest `
added a test for default CSRF protection matchers in CsrfFilterTests to ensure correct handling of request methods in CSRF filters
refactor hotspotobjectconstantimpl to not use static field
replaced ` add ` method with ` addFrequency ` method in ` SpellCheckComponent ` , ` AbstractLuceneSpellChecker ` , and ` Direct
[ beam - 8470 ] add watermark to fileio . withwatermark ( ) method ( # 8470 )
modified the ` SqmCteStatement ` class to include a ` cteDefinition ` parameter and updated the ` registerCopy ` method to use a
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData functionality
updated library output format to include the project filesystem root path to enhance clarity of library output for easier troubleshooting
updated slider model parameters in RailButtonConfig . java to use Math . PI instead of 180 and 270 to improve the visual range of the slider
updated drawEnclose position in OverlayRenderer and added exception handling in Saves to improve rendering accuracy and ensure robust error handling during save operations
added expressionLanguageSupported ( true ) to KerberosProperties . java to enhance property support for expression language support
removed unnecessary null check for remoteMountPointComponent in ThirdPersonRemoteClientSystem . java to simplify the code and improve readability
updated the ` setupViews ` method to accept a ` ScrimView ` parameter across multiple classes to enhance the flexibility of view setup
[ flink - 18552 ] [ state ] add option to disable periodic materialization
added a ` value ` property with getter and setter methods in ` ProtocolParameter ` and updated ` List ` and ` ParamTagHandler to utilize this
add unit test for chunking servlet with head
added a boolean field ` isBumped ` and modified the ` parseDetails ` method to return a boolean value indicating bumped status to en
added " Content - Type " header with " application / x - www - form - urlencoded " in SwitchToPostInterceptor and SearchRequestUnitTest to
refactor EmbeddedClientConnector class to improve code readability and maintainability
added logging for ignore setFetchSize ( ) in PhoenixResultSet to improve debugging by providing clearer error messages during execution
added initialization of AndroidNet in AndroidDaydream . java to ensure proper network setup for devices running Android
[ hotfix ] fix typo in llRealtimesegmentDataManager
removed the boolean parameter " false " from multiple getDepositAddresses calls in KrakenAccountService . java to simplify deposit address retrieval by
hbase - 26975 remove prefixtreecodec from hbase - tablemapreduceutil ( addendum )
added handling for inflation failures in DesignerActivity to ensure proper back navigation behavior when an inflation fails
refactor PushbackInputStream class to improve code readability and maintainability
do n ' t create a guard if the node be lowerable
updated error message to use sync folder status instead of download
updated Makefiles . java to use a new parser for line endings and introduced a new constant for NEWLINE in MakefilesTest . java
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and updated null check for ` delDocs
updated refresh flag handling in SimpleBatchNode to incorporate RF _ TRANSFORM to ensure correct refresh behavior during transform operations
use isuninterruptible ( ) method instead of isguaranteedsafepoint ( )
added GLFWFramebufferSizeCallback for setting window size and framebuffer size in LwjglWindow . java to ensure proper handling of window sizes and framebuffer sizes during
updated translation calculations in LauncherAppTransitionManagerImpl . java to use centerTaskParallaxOffscreen and otherAdjacentTaskParallaxToRight animations to improve
updated the ` newInstance ` and ` newInstance ` methods to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` to enhance cl
added setLength method implementations in FSDirectory and IndexOutput classes to ensure accurate file length tracking during file operations
updated AndroidNdkScriptGenerator and AntScriptGenerator to use " memcpy _ wrap . c " instead of " SpriteBatchShaderTest . c
camel - aws2 - s3 : use source bucket / key instead of copy
added support for " * " role in authorization plugins to enhance security by restricting access to specific collection requests
added null and empty checks for data in ZookeeperClientServerRegisterRepository . java to improve robustness by preventing invalid registration paths
refactor methods in ReturnsDeepStubs for clarity and consistency to improve readability and maintainability of the code
updated byte array conversion logic to handle empty call values to ensure proper handling of null or empty values to prevent potential runtime exceptions
bibentry : fix typo in debug log message
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and changed the algorithm name from ` AES _ 128 ` to `
tmi - tiff : fix off - by - one error in tiffreader
added validation for job parameters in CommandLineJobRunner to ensure that job parameters are provided to prevent runtime exceptions
( chore ) camel - mail : fix typo
updated case statements in ExtendedConnectionDataSourceProxy . java to enhance readability and maintainability of the code
replaced the ` lastSequenceId ` with an ` AtomicLongFieldUpdater ` for better concurrency management to improve thread safety and performance in concurrent scenarios
added a new file Test . java with a static method for computing the sum of two integers to implement functionality for computing the sum of two integers
updated configuration parameters in ShadowWifiManagerTest and changed access modifiers of fields in WifiUsabilityStatsEntryBuilder to enhance encapsulation and
added a new Java class called Solution that reads an integer array from an input stream and prints a boolean indicating failure to determine if a query fails to improve
fix concurrentmodificationexception in cassandra . patch by jbellis ; review by brandonwilliams for cassandra -
refactor taskbar recreation logic into a separate boolean variable for clarity to improve code readability and maintainability by reducing duplication
refactor SyncFutureCache class to improve performance and maintainability
update DUBBO protocol version from 2.0 . 1 to 2.0 . 2 and update LOWEST _ VERSION _ FOR _ RESPONSE
[ java ] uselessstringofvalue false positive for literal string .
added a new test method ` testEllipseNoseconeDrag ` in ` SymmetricComponentCalcTest . java ` to verify the functionality of the
add targetmaxtypeshardsize option to hollow producer ( # 2593 )
added new test cases for version " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in TestBackwards
refactor CompilationTask class to improve code readability and maintainability
updated assertions in TestSemanticAnalysis and DDLTask to check for " mydb . db " instead of " mydb . db " and
added a call to execute a ClearDatabaseChangeLogTableStatement for the Liquibase catalog and schema to ensure that the change log is cleared for the
added version handling functionality to the RestClient and updated CallPath to use this new version to ensure accurate representation of the call ' s version and
updated exception handling and added a closed state check in PhoenixDriver . java to improve error messaging and ensure proper
g3d - 390 : remove unsupportedoperationexception from touchapp ( fixes problem with touchcontroller )
added an after method to delete existing files in ConflictsResolveActivityIT and implemented a screenshot test in FolderPickerActivityIT to enhance test coverage
[ gr - 21844 ] fix deoptimization optimization when run in dev mode .
added a check for empty string in StringHelper . java and implemented a new test for removing leading and ending quotes in StringHelperTest . java to ensure
updated JpaQueryCreator to handle both NOT _ CONTAINERING and NOT _ CONTAINERING keywords and improved parameter metadata handling to en
do n ' t try to push branch ID if it ' s too long
added a dispatch method for P25MessageFramer to process incoming messages to enhance message processing capabilities
added null checks for the handler before invoking checkClosed ( ) in WebSocketImpl . java and implemented a new test for clearing client handlers in WebsocketTest
[ ds - 3952 ] fix test failure in discoveryit
updated widget padding calculations to use dynamic values from the app widget provider to enhance flexibility in widget layout by allowing custom padding values
added hideAllApps ( ) method to TaskbarUIController and modified closeOverlay ( ) method in BaseActivityInterface to enhance taskbar visibility management
removed the synchronized keyword from the launch ( ) method and replaced it with a direct call to the launcher ' s join ( ) method to simplify the method
updated point calculations in JavaSEPort . java to use canvas . x and canvas . y directly instead of canvas . x and canvas . y to ensure
refactor notification handling in UploadService to use startForeground and stopForeground methods to improve code readability and maintainability
fixed excessive public count test to not fail
hbase - 26937 set the number of retries for thrift client to 3 ( addendum )
( chore ) camel - core - optimize log level
added exception handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve logging clarity and
added a new class ` BittrexTickersResponse ` and updated ` BittrexMarketDataServiceRaw ` to include it to enhance
refactor enumConstants retrieval in EntityEntry . java to use a private array for better encapsulation to improve code clarity and maintainability
refactor wssession registration to use endpointclassname instead of endpoint
updated character list in FileUtils . java to include additional Unicode escape characters to enhance compatibility with additional Unicode standards
added support for stylesheet handling in ResourceService and updated related tests to enhance flexibility in stylesheet management and improve test coverage
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
updated method name from " getAddress " to " address " in X86MethodGenerator . java to improve clarity and consistency in method invocation
updated condition in CreateSequenceGenerator to check for CockroachDatabase instead of MariaDBDatabase to ensure compatibility with different database implementations
removed the isEnum check from the ObjectStreamClass condition to simplify the condition for better readability
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and added a new SymbolNotFoundError class in SymbolNotFoundError . java to enhance error handling
added a condition to handle non - pseudo fields in the BinaryResponseWriter based on returnFields ' s preference to ensure correct document retrieval for specific field types
added handling for the PING case in WebSocketImplBase . java and implemented a new test for the PING case in WebSocketTest . java to ensure
updated the regex pattern for identifying non - identifier escape sequences in the RegExpScanner class to enhance the accuracy of regular expression matching
added caching functionality to DnsResolverProvider and updated related test methods to enhance server selection flexibility based on cache options
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration to conditionally enable messaging tracing
removed conditional quoting for SQL identifiers in SqlQuery . java and updated SQL query syntax in BasicQueryTest . java and CompatibilityTest .
updated import statements in multiple Java files to reflect the new package structure to ensure compatibility with the latest version of the codebase
added handling for the ' / ' character in XMLLightweightParser to ensure proper verification of the close tag status
removed the setVisibility ( GONE ) method call to simplify the input handling logic
added null check for getCurrentUser ( ) before comparing IDs to prevent potential NullPointerException
[ wasm ] fix indexoutofboundsexception in jsobjectlinker
refactor ` DefaultUniqueTicketIdGenerator ` to use ` DefaultLongNumericGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to
added @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should not be used
added @ Deprecated annotations to various classes to indicate that these classes are outdated and should not be used in future development
deleted the JoglDebugAdaptor . java file and updated RocketFigure3d . java to remove unused debug logging functionality to streamline
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and ` AWSPropagation ` classes for better string representation to enhance debugging capabilities
added PendingIntent for content updates in FileDownloader and FileUploader to enhance user experience by allowing notifications to be sent
refactor nextOrd method to use a dedicated set method to improve code readability and maintainability by encapsulating logic
refactor DateTimeFormatter class to improve code readability and maintainability
updated desktop properties for autoscroll functionality to ensure compatibility with the new Win32 shell folder manager class
added null and empty checks for the administrator credentials in KerberosOperationHandler to ensure proper authentication validation and provide clearer error messages for null or
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGE _ SCREEN in BaseWidgetSheet . java to accommodate different device profiles
added rendering calls to PSurfaceJOGL using sketch window color to enhance visual feedback during rendering operations
refactor Hashing class to improve performance and maintainability
modified the accept method to accept a folder path instead of a string to enhance flexibility in processing file names
updated UserInfoActivity to include user information properties as strings to enhance clarity and maintainability of user information display
added a null check for the type before creating a new instance of JavaType to ensure type safety to prevent potential NullPointerExceptions during type creation
increased ACTIVITY _ START _ DELAY from 500 to 800 milliseconds to improve responsiveness during application startup
added a new constant for the WEBAPP _ HOME directory in SolrJettyTestBase . java and updated references in JettyWebappTest .
removed null check for ` mount ` and initialized ` selectedMotorSet ` to null to streamline code by eliminating unnecessary null checks
added import for BufferUtil and implemented BufferUtil . clearToFill method to ByteBufferPool to ensure buffer is cleared to fill before use
add test for alarm trigger creation via rest api
updated group attributes from " authorization . ldap . groupBase " to " authentication . ldap . groupObjectClass " and " authorization . ldap . groupNamingAttr
http : / / issues . apache . org / jira / browse / amq - 4979 - fix bug in durableontransient
[ hotfix ] [ test ] fix bulkslotproviderimpltest failure
refactor connection handling in PingService and ServerInfoService to improve error handling and provide clearer feedback on connection failures
refactor CompositeHandlerAdapter to improve performance and maintainability of the code
refactor Quartz2Adapter to improve code readability and maintainability
added error handling for IllegalStateException in SulongLibrary . java to improve robustness by preventing application crashes due to IllegalStateException
updated schema version from 6.2 to 6.3 in SecurityNamespaceHandler and XsdDocumentedTests to reflect the latest schema changes to ensure compatibility
updated the constructor of ` DiscoveryClientNameResolver ` to accept ` Args ` instead of ` NameResolver . Helper ` to enhance flexibility
added handling for non - empty annotations in JavacParser and created a new TestAnnotatedAnonClass class with a deprecated method to improve code clarity and
added " com . sun . naming . internal . " to the list of package names in CheckPackageAccess . java to enhance package access checks to
changed the strict variable from false to true to enable strict validation for XML parsing operations
added an ` isExhausted ` array and modified the ` readPartition ` method to accept an ` boolean [ 1 ] ` parameter to enhance
[ hotfix ] fix checkstyle violation in actionresetingpool
added a check for null ` lightState . getXY ( ) ` before calling ` fromXYZtoHSBType ( lightState ) ` to ensure
refactor CellLayout to utilize a new method for creating folder creation based on target cell dimensions to improve code clarity and maintainability by
added loading dialog functionality to FileOperationsHelper and OCFileListFragment to enhance user experience by showing the loading dialog directly
added a null check for uigestureFile before loading logs to prevent potential NullPointerException when uigestureFile is null
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for case - insensitive matching to ensure consistent behavior across different locales
added listeners to the result object to enhance the functionality of the XmlSuite class
added a new method ` loadWithNewGlobal ` and refactored existing MethodHandle implementations in ` Global . java ` to enhance global context
added methods to convert a JSON string to a StarTreeIndexSpec instance to enhance JSON serialization and deserialization capabilities in StarTreeIndexSpec
added ObjectPostProcessorConfiguration import and updated multiple security configuration classes to enhance security configuration handling and improve code organization
replace backslashes with forward slashes for file names in AndroidFileHandle , GwtFileHandle , and FileHandle classes to ensure compatibility across different operating systems
[ drools - 5670 ] fix npe in inoperator when there be no fire
added import for FieldCache and invoked purgeFieldCache method to ensure there ' s only one segment to avoid FC insanity
added unit test for boundary message event on subprocesses and inside subprocess
updated method parameter names and added support for static calls in ` resolveInterfaceOrVirtualCall ` and ` resolveStaticCall ` methods to enhance method resolution
use messagegrouphashbucketcount instead of simplemessagegroupmap
refactor slot handling in Secmod . java to use constants and improve clarity to enhance maintainability and readability of the code
added an alignment parameter to the add method and updated the startRenderering method to return a boolean value to enhance flexibility in widget addition functionality
[ hotfix ] ignore unalignedcheckpointitcase for now
added checks for specific MIDI and sequencer types in JDK13Services . java to ensure proper handling of specific MIDI and sequencer types
added a check for the existence of the keyword before adding it to the keywordToReference map to prevent duplicate occurrences of the same keyword
camel - 14263 : camel - core - optimize multicast to reduce memory consumption
removed unused methods from SegGraph , SegToken , and WordDictionary classes to improve code clarity and reduce unnecessary complexity
escape telegraf character in flavorstatsdlinebuilder ( fixes # 644 )
[ tribes ] fix incompatible client broadcasting on the same multicast address .
rename operatormulticast to operationmulticast to avoid confusion
increased the send timeout duration from 1ms to 100ms in EventBusTracerTestBase . java to improve test reliability by allowing more time for event
added a try - finally block for proper resource management in the VertxTestBase . java file to ensure proper cleanup of resources after node start failures
hhh - 13666 fix memory leak in sessionfactoryserviceregistryimpl
refactor methods to use ` openLocalhost ( ) ` and ` openRemotehost ( ) ` instead of ` openHomePage ( )
[ pytorch ] fix ivalueutilstest . testtuple ( ) for tensor
added a task stack listener to manage the visibility of pinned tasks in RecentsView to ensure that pinned tasks are cleared when the animation starts
pdfbox - 4892 : fix bug , a suggest by valerybokov
camel - 15836 - camel - cxf : fix nullpointerexception when configure endpoint
refactor pending animation handling into a separate method to improve code readability and maintainability
added logging and current play time calculation in LauncherAnimationRunner . java to improve debugging capabilities for animation durations
added BailoutOnException handling to C1XCompilation to improve error reporting during compilation
changed signup URL from " / forgot _ password " to " / forgot _ password " and updated assertions in IdentityZoneConfigurationBootstrapTests to
[ hotfix ] rename previousexecutiongraphallocations to reserveallocations
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and added a method to retrieve the format to enhance flexibility in
added NoDataContainer handling for NoDataContainer in GeoTiffReader and corresponding tests in GeoTiffReaderTest to ensure that the NoDataContainer
[ gr - 26937 ] fix npe when write a function with no source section .
replace ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ` in ` JdbcExecutionContextDao . java ` and
replaced blockUntilConnected ( ) with a CountDownLatch for connection state verification in TestPathChildrenCache . java to ensure proper handling of connected events to improve reli
added a null check for the result array in ArrayTypeHandler to prevent potential NullPointerExceptions during array type handling
refactor RegexpTunnel to use reflection for accessing the " prefix " method of REProgram to enhance flexibility by allowing direct access to the
updated application type from null to Application class to ensure correct application type is used for application selection
[ drools - 5670 ] avoid npe on mutable global variable creation ( # 5681 )
added validation for asset name and description in AssetIssueActuator and TransactionUtil classes to ensure asset names and URLs are valid for asset issuance
fix copypaste bug with textfield
[ lgtwebos ] fix error message for unknown host ( # 9059 )
updated node configuration to include seeds , active nodes , trust nodes , and trust nodes in TronNetService to enhance network configuration flexibility
tregex : fix bug in basetokenstreamtestbase that cause thread to fail
refactor getNextTime method to include a modulus parameter for calendar increment to enhance functionality by incorporating a modular calendar increment
added methods to perform item click on a specific item containing a specified text in ShadowAdapterView and removed it from ShadowListView to streamline item
pdfbox - 4892 : fix typo find by codespell on fossies . org
added a null check for loopScope in GraphDecoder and updated PEGraphDecoder to override the afterMethodScope method to enhance method scope handling to improve
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) for better clarity and efficiency to improve code readability and
added a test for changing the service name in Zipkin to a manually provided one in HttpZipkinSpanReporterTest . java to ensure that
added logging statements for excluding classes from the JAR in JavaInMemoryFileManager and JavacToJarStepFactory to enhance visibility into class exclusion
corrected the spelling of " SeparatedProjectGenerator " to " SeparatedProjectsGenerator " across multiple files to ensure consistency and
increased timeout duration for lock acquisition from 4 seconds to 10 seconds to allow more time for lock acquisition to complete successfully
added DEFAULT _ CACHE _ CAPACITY constant and updated return statements in ConfluentSchemaRegistryDeserializerProvider . java to use DEFAULT _ CACHE _ CAPACITY
replaced the ` remind ` checkbox with a ` checkAtStartup ` checkbox in ` UpdateInfoDialog . java ` to enhance the user interface by
added methods for key , value , expireAfterWrite , expireAfterWrite , and weighed properties to NodeGenerator to enhance node generation
hhh - 13807 optimise istransient check in cascadingactions
added methods for retrieving and setting ScriptObject properties in ScriptObject . java to enhance property management for ScriptObject objects
updated DEFAULT _ READ _ MODE from " heap " to " mmap " in CommonConstants . java and modified ImmutableSegmentLoader . java to return a new
added import for ByteArrayTemplate and implemented byte base class handling in ArrayTemplateBuilder to enhance data serialization support for byte arrays
added Hipchat support to SamlServiceProviderProperties and created a new CasSamlSPHipchatConfiguration class
replaced List < URL > with Set < URL > for commandRegistryUrls and updated resource retrieval to use resources from " tools . command . properties " to
updated warning log messages to include the current context to improve clarity of warning messages for better debugging
removed checkLoggedIn ( ) method from SvnRepositoryConnector and set loggedIn to true in SftpRepositoryConnector to streamline authentication process by elimin
( chore ) camel - jms : fix issue with lazy create transaction manager
vmware : fix typo in error message
refactor Timers class to improve code readability and maintainability
replace overwrite _ existing with append _ to _ zip
removed deprecated UAX29URLEmailTokenizer constructor parameters to clean up the code and improve maintainability
removed the ` Map < Object , Object > ` parameter from the ` ScriptObject ` class and related assertions in ` ContextTest ` to simplify the class
refactor EventBusMetrics class to improve code readability and maintainability
[ ds - 3952 ] do n ' t use default locale if no language specify
updated JaversTransactionalDecorator class to implement InitializingBean and modified ensureSchema method implementation to enhance bean initialization and ensure schema is properly managed
removed null check for pgTypeName to simplify the code by assuming pgTypeName is not null
added server settings for handler instances in ScopedHandlerTest . java to ensure consistent server configuration between different handler instances
make calltimeoutexception more resilient to timeout
updated the condition to check if the login request password is empty to enhance security by preventing potential null or empty passwords
changed permissionNode comparison from ` Objects . equals ` to ` equals ` for better readability to enhance code clarity and maintainability
renamed ` encoding ` to ` sourceCharset ` and updated related methods to improve clarity and consistency in character encoding handling
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` and updated related methods from ` byte [ ] ` to
added imports for GenericComponentModifier and FinSet , and simplified simulation management in GeneralOptimizationDialog . java to enhance code clarity and
camel - 14263 : camel - core - allow to turn off reload on context reload .
updated log4j configuration parameters in CommonTestUtils . java to improve clarity and consistency to enhance logging configuration for easier troubleshooting and
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment to improve code readability and maintainability
added a check for ` markSupported ( ) ` before invoking ` invokeSafely ( nonCloseable : : reset ) ` in ` RequestBody .
added a check for ` EmbeddedNeo4jServer . isEnabled ( ) ` and modified bean handling logic in ` DefaultBeanContext . java ` to
add player health and health control to character movement command
[ type : refactor ] optimize randomloadbalancer . random ( ) to use half - length weight . ( # 9751 )
removed unnecessary StringBuilder usage and simplified return logic in GsonParser . java and MetricsResourceTest . java to improve code readability and maintainability
added documentation for gcmsort and gcmdir
replaced ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` and ` pulseTransactionCoordinator ( ) ` across multiple
refactor PipeTaskCoordinator to use PipeTaskCoordinatorLock instead of ReentrantLock and introduce a new PipeTaskCoordinatorLock class to improve thread
added conditional logic to use pre - instrumented JARs based on a system property to enhance flexibility in specifying pre - instrumented JAR
removed the ' ! isSilent ' condition from the if statement to simplify the conditional logic for better readability
added checks for default and required values in IndexSchema to ensure that dynamic fields can not have default values or requirements
removed the random read repair check from the repair response handler logic in StorageProxy . java to simplify the code and improve read repair handling
refactor PrebuiltCxxLibrary to use Iterables for transforming include directories to improve code clarity and maintainability
updated ` AdaptableX509CertSelector ` to initialize ` startDate ` and ` endDate ` as ` null ` and added ` isSKIDSensitive `
log4j2 - 1343 replace integer . parseint ( string , int ) with abstractappender . parseint ( string , int )
deprecate 1.16 in GuiScreenEvent . java to prepare for removal in version 1.16
added methods to add and remove categories in CategoryEditSearchRecyclerViewAdapter to enhance category management functionality within the application
# 1686 - enh : add servercachetype enum to support different type of cache
[ refactor ] fix npe in rocketcomponent
do n ' t close the compiler on shutdown
refactor MultiThreadedBuildRuleResolver to use a Supplier < V > for task computation to enhance flexibility in handling task tasks
[ flink - 18552 ] [ replication ] fix race condition in wan replication service
added null checks for tPartition and table to prevent potential NullPointerExceptions during execution
refactor task executor usage in LocalServiceRegistryClientImpl and RemoteServiceRegistry to use lambda expressions to improve code readability and maintainability
added a new test class ` FilesTest ` for testing file deletion functionality to ensure that file deletion does not throw an exception when attempting to delete
removed exception handling for socket closure in ServerSocketAdaptor and SocketAdaptor to simplify code by directly closing the socket without catching exceptions
updated the condition to check if the class name starts with the logger class name to ensure compatibility with different logging framework implementations
replaced clear ( ) method with addWorkingDir ( f . toString ( ) ) for better clarity to improve code readability and maintainability
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to enhance robustness by prevent
changed the access modifier of the String variable from public to private to restrict visibility to enhance encapsulation
updated Java - Durl and json - Dtype values in SimplePostTool . java for consistency to ensure uniformity in data handling across the application
apps - 2942 fix max / min command toggle logic
added shutdown thread registration in JavaxWebSocketClientContainerProvider and implemented doStop method in JavaxWebSocketClientContainer to ensure proper shutdown of the client container
updated conditional check to include null check for type to enhance clarity and prevent potential NullPointerExceptions
fix memory leak in test
added a method to retrieve the search string from the request URI and refactored resource retrieval logic to improve search functionality and enhance code read
removed visibility setting for neutral button in SetupEncryptionDialogFragment to allow the neutral button to be shown directly without hiding it
[ ds - 3952 ] add itemdao . countitems ( context , list < collection > collections , boolean includeArchived , boolean include
updated CREATE TABLE statement to use quoted identifiers for table names and columns to improve SQL syntax consistency and clarity
added exception handling capabilities to CheckTokenEndpoint to improve error reporting for OAuth2 exceptions
updated multiple Java classes for consistency and clarity to enhance maintainability and readability of the codebase
updated ` IdentityZoneEndpointsIntegrationTests ` and ` JdbcIdentityZoneProvisioningTests ` to use ` exchange ` instead of ` postForEntity
updated dismiss delay from 20ms to 10 seconds and added tooltip text for variable assignments in SQL console to improve user experience by providing clearer context
added support for JUnit 5 in the TXT _ Run _ Single _ method warning panel to ensure compatibility with JUnit 4 and improve user
changed exception handling from HumanReadableException to RuntimeException for communicating with external process to improve error handling by providing a broader range of exceptions
[ hotfix ] [ table - common ] make flink - table - common annotation experimental
refactor StreamCepstrumSource class to improve code readability and maintainability
updated index calculation in List . java to ensure proper handling of index bounds to prevent potential ArrayIndexOutOfBoundsException
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to improve clarity and consistency in expression type validation
added confirmation type to the DebugPaste command to enhance flexibility in command creation
( chore ) camel - jersey : fix checkstyle issue
ggb - 2118 fix for newradiobuttonTreeItem . createnewradiobutton ( )
updated GoBinaryDescription to replace ` Arg ` class with ` GoBinaryDescriptionArg ` and removed unused imports to enhance code clarity and
added logic to retrieve the application environment from a configuration file to enhance flexibility in managing application environment variables
refactor SimpleRetryExceptionHandler to implement RetryListener instead of RetryListenerSupport and update related tests to use SecondDummyRetryListener to enhance retry
report whole count with decimal ( fixes # 498 )
refactor Contribution class to use final variables for email and author to improve code clarity and enforce immutability
refactor JUnitFormatter to use a loop for appending a period instead of a for - loop to improve code readability and maintainability
updated the initialization of the elements list to handle different types of collections to improve type safety and prevent potential ClassCastException
updated exception messages in StaxEventItemReader to include the URL of the resource to enhance clarity of error messages for better debugging
improve performance of testmultireactor
added a null check for the current client before attempting to retrieve it to avoid potential NullPointerException
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
added BigInteger parameters to KeyStoreManager for cryptographic operations to enhance security by enforcing cryptographic constraints
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` Mesh
set the engine version of the persisted process definition to activiti 5
updated resource loader and loader properties in SpecificCompiler . java to improve clarity and consistency in resource loading configurations
added verification for thread attachment in CEntryPointSnippets and updated related methods in VMThreads to enhance thread verification functionality and improve code clarity
added null check for the map object in GenericUDFMapValues . java and created a new TestGenericUDFMapValues class with a test for
polish ` ` rename interceptors to handlerinterceptors ' '
make oil well generation rate configurable
added a file check for the " . clean - me " directory in the ImportContext class to ensure the directory is eligible for cleaning before proceeding
added a string parameter to the LifecycleException throwing to provide a context - based message for better error handling
removed unused import statements in CRLDistributionPointRevocationCheckerTests . java to clean up the code and improve readability
replaced hardcoded zip entry extended timestamps with constants from ZipConstants64 to improve code maintainability and readability
refactor the newFileSystem method to utilize a dedicated ensureFile method to improve code readability and maintainability by reducing duplication
updated conditionPanel addition to use horizontalGlue instead of verticalStrut to improve layout spacing to enhance readability of the condition label
added an @ Override annotation in FailoverUpdateURIsTest . java to ensure proper method overriding and improve code clarity
added Gson serialization annotations to ServiceOsSpecific . java to enhance data serialization capabilities for service objects
added a method to delete a book and refactored related code to streamline database deletion process and improve code readability
refactor multiple Java files to improve code organization and maintainability
pdfbox - 4892 : correction correction , a suggest by valerybokov
stop the admin console server context if an exception occur .
refactor WebSocket connection handling by removing unnecessary unregisterHandlers ( ) method calls to improve code clarity and maintainability by reducing unnecessary synchronization
added properties for device ID transformation method , enable ID table logging , and log file configuration to IoTDBDescriptor
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and added a new delayingSearchComponent class to enhance test coverage and
updated the condition to check if the access error is null in TestSignatureInfo . java to ensure that the method correctly handles null access errors
refactor script creation code to use ScriptBuilder instead of ScriptBuilder for improved clarity to enhance maintainability and readability of the
added " / schema / types / fieldType " to the expression in IndexSchema . java to support additional field types in the schema
added a null check for valueCompleter in mmm Completers . java and created a new OptionCompleterTest . java file with a test for
( chore ) camel - s3 : fix checkstyle issue
change data type of ` sourcePeerId ` from ` String ` to ` int ` and update related methods to use ` int ` instead of ` String
refactor FtpHelper to streamline file upload process by introducing a separate UploadFile method to improve code readability and maintainability
updated the alpha value of the reply button from 0.5 f to 1.0 f to improve user experience by allowing smoother transitions
added mocking for ` AccessLogContext ` in ` AccessLogSupportTest . java ` to enhance test coverage for timestamp logging functionality
update maryCacheFile path to use " tmp / testfiles - deleteme " instead of a hardcoded value
refactor subscribers handling to simplify null and empty checks for subscribers to improve code readability and maintainability
added null check for the marshaller in AbstractSamlObjectBuilder and AbstractSaml10ResponseView classes to ensure robust initialization and prevent potential null pointer exceptions
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error logging for better debugging
added a check for the existence of the assetsDirInDevMode in AssetsController . java and implemented unit tests in AssetsControllerTest
[ hotfix ] [ checkpointing ] fix rocksdb checkpointing problem
updated the DEFAULT _ FORMAT string from " value - tag - index " to " value - index " to standardize the format used for value indexing
updated the initialization of GraphHopper and hints in MainActivity . java to ensure consistent usage of hint settings and improve code clarity
enable native secp256k1 by default
rename ` DuclsSandboxTest ` to ` SandboxTest ` and update references accordingly to clarify the purpose of the test class
( chore ) camel - cxf : remove unused import
changed the visibility of the forwardPropagateTree method from package - private to public to allow access to the method from other packages
updated SQL query syntax in JDBCExample . java to enhance clarity and consistency in group by expressions
polish ` ` allow $ { project . basedir } expression in profile activation ' '
refactor Style class to improve code readability and maintainability
added handling for zoom key events in ShareActivity to ensure proper navigation when back key is pressed
added a check for the @ Deprecated annotation in Json . java to skip processing for fields marked as deprecated to avoid processing that should not be processed
added fade - in and fade - out animations to the send layout based on floating compose settings to enhance user experience by providing a smo
[ hotfix ] fix checkstyle violation in yarn - cluster - java
added Progressable parameter to several methods in Utilities to enhance progress tracking during file writing operations
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
added a call to remove a contribution from the panelByContribution map to update panel ordering and colors after adding a contribution
renamed ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and updated its class name from ` HyervisorTemplateAdapter ` to
added a check for empty directory paths in RegularFileObject . java to ensure the application uses the user ' s current directory as a fallback
defaultaudiosink : set sample rate to 48000 if not specify
log4j2 - 1343 remove unnecessary call to stringmap . contains ( )
refactor VerificationInOrderWithCallsTest to improve test clarity and maintainability
correct typo in quaternion # setfromaxis ( )
updated COLLECTION _ DELIM constant from " colelction . delim " to " collection . delim " to ensure consistency in naming conventions
curator - 48 : add connectionstatelistener to ensure listener be connect at start
bugfix # 55355 - fix documentation generation for intersection type
refactor one - handed mode checks into a separate method for clarity to improve code readability and maintainability
added onDetachedFromWindow method to AppsCustomizePagedView to ensure proper cleanup of running tasks after detached views
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter constructors to enhance flexibility by allowing
removed redundant count and thrown variables in ResultSetTest . java to streamline test logic for exception handling
updated initialization message to use an empty string instead of " debug " to improve clarity of project initialization messages
refactor exception handling to use AtomicBoolean instead of AtomicReference for preventedByLocking and preventedByMVCC to improve thread safety and
refactor tooltip text handling in ComponentTreeRenderer to improve clarity and maintainability of component tooltip text management
increased timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests to allow more time for the zipkin server to become available
added username and password configuration in DeviantartRipper to enhance deviantart authentication with configurable credentials
refactor Google package signing methods to use constants for platform and app keys to improve maintainability and clarity of the signing process
replace ` commonApp . solutionBusiness ` with ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirSolveAllTurtleTest . java
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes
added emailDescription to templateData in EntityGroupKeyContentFormatter and set detection description in TestEntityGroupKeyEmailContentFormatter to enhance email content formatting
replaced the method call to ` data . remove ( sel ) ` with a call to ` data . remove ( data . remove ( sel ) ` to
updated getISO3Language ( ) method to handle cases with 3 characters in the language string and added validation for its return value to ensure correct language code
refactor Liquibase . java to use a dedicated method for creating UpdateVisitor instances to improve code readability and maintainability
added a check to return early if screen pinning is active to improve performance by avoiding unnecessary operations when screen pinning is disabled
added text fields forNoDataText and mNoDataTextDescription in the Chart class to enhance the visual representation of unavailable chart data
added synchronized block around the checkHeadWritten method in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety when checking the response
refactor chunk handling logic into a separate method ` chunkHandler ` to improve code readability and maintainability by reducing duplication
updated HTTP header limits to include " http " as the " scheme " header to ensure proper handling of HTTP headers in tests
feature - add redissonlocalcachedmap . keyset ( string , int ) and keyset ( string , int ) for localcache
camel - 14263 : camel - jpa should use source code generate configurer to avoid reflection configuration .
updated jumpSpeed assignment in PhysicsCharacter . java to ensure consistency in jumpSpeed assignment
added a null check for reparsedFunction in the condition to ensure that the function is only reparsed when reparsed successfully
updated logging statements and refactored order book adaptation in BitstampPusherService . java to enhance code readability and maintainability
added deprecated methods for retrieving old upload segment URIs in FileUploadDownloadClient to enhance code clarity and maintainability by removing obsolete functionality
updated the method call to include a filter parameter to enhance filtering functionality in MongoDBTailTrackingManager
added a protected method ` assertPredicateFails ` in ` LanguageTestSupport ` and updated test assertions in ` JuelLanguageTest ` to enhance predicate
added bounds checking for alpha in RecentsView to ensure alpha is within valid range to prevent rendering issues
updated the import - package format in ManifestReversion . java to correct the string concatenation syntax to ensure proper formatting of version numbers for better readability
[ hotfix ] fix checkstyle violation in datasyncconfiguration
added import for JavaSnippetRepository and initialized it in JavaLanguageServer . java to facilitate snippet repository initialization in the application
updated the loop structure in StarTreeRecordStoreCircularBufferImpl . java to improve readability and maintainability of the code
simonstewart : update chromedriver to use storage . googleapis instead of code . google . com
camel - 14263 : camel - pgevent - use prepared statement to execute sql statement
close the input stream to prevent leak
added Content - Length header handling in TransferCompletionHandler and updated NettyAsyncHttpProvider to utilize this new method to improve request processing by utilizing
refactor Dialog class to improve code readability and maintainability
removed the constructor from EnhancedRuntimeException to simplify the exception handling logic
added CountDownLatch functionality to handle event processing in SocketAppenderTest to improve thread safety during event processing
( chore ) camel - jbang : remove unused reference to eventadminbuilderfactory
updated method signatures to use byte [ ] instead of byte [ ] for array comparison to enhance type safety and clarity in handling byte arrays
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to enhance user experience by preventing interference with input
removed the @ Ignore annotation from RestletDomainServiceTest . java to temporarily disable the test due to issue CAMEL - 6770
removed the currentIdx parameter from the resizeAndRehashIfNeeded method to simplify the method signature for better readability
fix unit test due to modulepath change
refactor getCompiler method to include source directories in JavaLanguageServer and JavaServerConfiguration to enhance clarity and functionality by providing more context about source
updated the menu item ID from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to enhance user experience
updated method names from ` nodeIsAncestorOfItself ` to ` nodeIsNotDescendantOfItself ` and modified assertions accordingly to enhance clarity
modified block Y - coordinate calculations to ensure minimum values are set to zero to prevent potential errors due to out - of - bounds positions
added PathNotExistException to selfCheckDataTypes and selfCheckDataTypes methods to enhance error handling for missing data schemas during insert operations
removed unnecessary quotation marks to improve code readability and maintainability
[ hotfix ] remove unused mailboxexecutor from continuousfilereaderoperatorfactory
hbase - 26937 addendum add rpc precheck for settablestateinmeta ( addendum )
updated meter ID mapping to improve clarity and consistency in meter ID output
updated BlockJUnit4ClassRunner constructor to use getJavaClass ( ) instead of getTestClass ( ) to ensure compatibility with Java class naming conventions
[ hotfix ] [ kie ] use lasttimedata instead of remoteitems
adjusted calculation of allAppsCellWidthPx by adding 2 * allAppsCellPaddingPx to improve layout consistency by incorporating cell padding
[ hotfix ] [ core ] add parent first logging pattern to coreoptions
updated variable assignments in BooleanScorer2 . java to use ' this . doc ( ) ' instead of ' doc ( ) ' to improve clarity
added a call to forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the multi - phrase enumeration functionality
added @ Closeable annotation to the Session interface and changed return types of close methods from Connection to void in multiple classes to enhance resource management by allowing
updated GetLocations class to improve location retrieval functionality
simplified exception handling by removing unnecessary printStackTrace calls to improve code readability and maintainability
updated exception handling to use the ignore variable instead of throwing an unchecked IOException to improve error handling clarity and maintainability
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android versions
ruby flavor : fix bug in emit snippet
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
remove the usecache option from nio2channel since it ' s not need .
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for database reading to improve resource handling and avoid potential NullPointerExceptions
improve test coverage of instructorfeedbackresultspageuitest
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to enhance functionality by enabling optimization for raw scans
removed public access modifier from several methods in ApprovalStore and ApprovalControllerService to enhance encapsulation by restricting access to
added a new boolean variable ` mStartedDownload ` to track and cancel the download process in ` FileDownloader . java ` to ensure proper handling of download
updated method calls from ` getOpenView ` to ` getAnyView ` in ` AbstractFloatingView ` and added a new method in ` Taskbar
updated project version from 1.0 . 11 to 1.0 . 13 in JFreeChartResources . java to reflect the latest release of the software
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve thread handling by utilizing
refactor GsonBuilder to improve serialization and deserialization performance
added null check for centerGeo before adding it to fixedPoints to prevent potential NullPointerExceptions when centerGeo is null
remove espresso . espresso . home option from espressoproperties and make espressohome configurable
doc : fix javadoc warning ( # 765 )
made the DeleteSessionAction class final and updated session handling logic to enhance immutability and simplify session management
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and accuracy in
updated JoinQParserPlugin and SolrIndexSearcher to initialize ` result ` with an empty ` SortedIntDocSet ` and modified ` TestJoin ` to
added a file parameter to the triggerMediaScan method to enhance media scan functionality by including the file object
removed conditional printing of test results based on verbosity in TestRunning . java to simplify the test result post - execution logic
added custom G - code settings for G - code text in MainWindow to enhance user experience by allowing custom G - code text selection
( chore ) camel - jaxb : use bufferedwriter instead of printwriter
refactor JsonElement class to improve code readability and maintainability
added JUnit test imports and reset exception Ignores in TestBadConfig . java to ensure proper exception handling during testing
added a method to remove fragments and action bar in GpsMainActivity to improve fragment management and action bar visibility
fix broken spanish tokenization test
updated Range parsing methods to use ` Range . Byte ` instead of ` Range . Long ` to improve compatibility with byte range handling and ensure end
updated G - code file naming and modified bounds printing in VisualizerCanvas . java and GcodeViewParse . java to enhance clarity
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwardsCompatibility . java
corrected spacing in assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency in formatting
added a condition to close the exchange client if the query state is done to ensure proper resource management and prevent potential memory leaks
use meta to expand file path in integrity check
removed the import of SolrClient and added shardToClient map to ChaosMonkey . java to eliminate unused dependencies and enhance functionality
added null check for the file object before accessing its properties to avoid potential NullPointerException when accessing the properties file
reformatted the list of subfolders in the NestedRepositoryTreePanel to improve code readability and maintainability
made the ` ExtensionTypeHeader ` constructor public and added validation for the ` type ` parameter to ensure it is within - 128 to 127 to enhance
pdfbox - 4892 : remove unnecessary try - catch , a suggest by valerybokov
rename pushonshutdown property to push on shutdown
added trigger callback functionality to ReactiveStateMachineExecutor to enhance error handling for state machine trigger errors
added a test for when multiple Python executables on the path are used in BuckConfigTest to ensure that the correct path to Python executables is
added a default button to the root pane in the InitialAccountRegistrationFrame to enhance user experience by providing a direct access to the sign in button
added TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN configuration to HiveConf and updated TezCompiler to include
updated error logging messages to include the exception as a parameter to improve error reporting for better debugging
move reflection - related code to util package , no functional change
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding unit tests to enhance
removed the ' center ' declaration from multiple Circle , Ellipse , Polygon , and Rectangle classes to streamline code by eliminating unnecessary variable assignments
simplified the condition for checking the collection name in RegisterAndProcessBundleOperation . java to improve code readability and maintainability
refactor SslContextFactory to improve SSL context management
updated configuration properties to use defaultMaxExpectations ( ) and defaultMaxLogEntries ( ) to improve clarity and consistency in expectation checks
change return value from " access _ confirmation " to " access _ confirmation _ error " to clarify the purpose of the confirmation error message
[ 3.0 ] fix classnotfoundexception when call with referenceconfig . classloader ( # 4809 )
added a ` copyRowHeight ` parameter to the ` shiftRows ` method and modified the ` shiftRows ` method to include a ` resetOriginalRowHeight `
rename rollover icon to rolloverpressedicon for clarity
refactor grid translation handling in TaskViewUtils and TaskViewSimulator to utilize setGridTranslationY method to improve code clarity and maintain
refactor Assertions class to improve code readability and maintainability
added null checks for currentDateTimeFunction in multiple database classes to ensure robustness by preventing potential NullPointerExceptions
added an ` anonymousPath ` method to ` IOUtils ` and updated ` Log4jUtils ` to utilize this method to improve path
updated the ` call ` method to include a ` contentDescription ` parameter and modified related logic in ` DigitalWellBeingToast ` and ` TaskView
increased wait time in CatalogTracker from 0 to 50 milliseconds to accommodate a longer timeout duration for meta availability
updated LineNumberTagAggregator and TestDominance classes to improve code clarity and maintainability
replace null return with a default conversion method in GenericItem . java to ensure correct conversion of state to type class
added integration test for FetchPostAndDetailsProjection in BidirectionalOneToOneNPlusOneTest to ensure proper handling of PostDTO projections
added a call to remove an extra empty screen from the workspace in Launcher . java to ensure that the search page index is zero when workspaceScreens
updated initialization of ` baseDerivedRefs ` and ` derivedRefsOther ` to use the size of ` other . baseDerivedRefs ` and added null check
updated string formatting in GoogleLineChart and GooglePieChart to ensure proper handling of special characters in decimal numbers
refactor wait execution logic in SendingAccountor . java to improve clarity and handling of interruptions to ensure proper handling of interruptions during
added position functionality to WALPrettyPrinter to enhance debugging capabilities by allowing seeking to the specified position
updated the parameter of the NettyTransceiver constructor from a fixed value to zero to ensure that the transceiver starts at the correct port
sort event by start time before generate a report
added a new test method to verify CSV line description contains a double quote with an escaped quote to ensure correct formatting of CSV lines with escaped quotes
make the coref output consistent with the output path
do n ' t allow to send the same jid twice on the same server .
removed the @ JniImpl annotation from VM . java to streamline the code by eliminating unused annotations
updated calculations for ` last ` in ` Fetcher2 . java ` to ensure correct handling of maximum crawl delay based on maxThreads
added a condition to check if the video header format is " dolbyvision " in FFMpegVideo . java and updated print statements in Media
asttests : fix typo
fix worldeborder . setdiamonight when percentage < 0 .99
hbase - 26937 addendum hmaster . getwalgroupsreplicatetransportogressionstatus ( ) should return replication
kristianrosenvold : remove call to getloginoperation ( ) . getview ( ) when checkopen ( ) succeed
refactor RoutingTableTest to use generateInstanceConfigs for generating instance configurations to improve clarity and maintainability of instance configuration generation
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
add unit test for read erroneous maven project contain reference
removed redundant null checks for oldProto and history in PropertyMap . java to simplify the code for better readability and maintainability
refactor the ` getControllerId ` method to accept an ` @ Nullable ` configId parameter across multiple classes to enhance flexibility by
replaced sessionFactory . close ( ) with session . close ( ) to ensure proper resource management by closing the session object directly
removed the condition for generating refresh token in the OidcConsentApprovalViewResolver
removed debug print statement from Http2SolrClient to clean up the code and improve readability
None
refactor ConditionalOnEnabledResourceChain class to improve code readability and maintainability
added a condition to check if the treeRoot has children to ensure that the BarrowmanCalculator only processes rockets when it has children
update sequenceinputstream to use getunfilteredstream ( ) instead of getfilteredstream ( )
updated log messages and added intent result listener functionality in FacebookImpl . java to improve logging clarity and ensure proper handling of Facebook session state changes
updated return statements in ShadowICU . java and added a new test for DatePicker functionality in ShadowICUTest . java to ensure correct behavior of DateTimePicker
removed the KeyguardManager reference and simplified the device lock check condition to streamline the code for better readability and maintainability
server : fix npe in case of no disk offering with the name cloud . com . custom
updated UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel for improved asynchronous handling to enhance performance by utilizing synchronous file operations
removed unnecessary lines in SigInt and SigIntTest classes to improve code readability and maintainability
g3d - 390 : re - enable text bound box resizing , a suggest by valerybokov
updated return value from - 1 to 0 to correct the asset return value logic
updated the benchmarking logic to use a customizable number of iterations instead of a fixed size to improve flexibility and maintainability of the benchmarking process
added onRefreshListener to UploadListFragment to notifyDataSetChanged when data changes
change bibdatabasecontext to use path instead of file
replaced ` emitters . items . items . i ` with ` emitters . get ( i ) . get ( i ) ` for better
refactor tomcat to use findservices ( ) instead of findservice ( )
updated string literals in BuildRuleFactoryParams and Console classes to improve clarity and consistency to enhance readability and maintainability of the code
added a conditional check to return early if playback state is not PLAYING to optimize performance by avoiding unnecessary processing
updated the method for retrieving ServiceComponentDesiredStateEntityPK to use findById instead of findByPK to simplify the entity retrieval process
refactor Java2TypeScriptTranslator to improve handling of inner class field clashes and add a new InnerClassFieldClash class to en
added logging and follow redirect filter properties to DockerClientFactory and DockerClientProfile classes to enhance configuration management for Docker client behavior
replaced direct call to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure thread safety during
updated NationalizedScalarQueryTest to use SQLServer2008Dialect instead of DB2Dialect and PostgreSQL81Dialect to ensure compatibility with SQL Server 2008
added a try - finally block to ensure the input stream is closed after verifying the zip header to prevent potential resource leaks
changed the visibility of the storeClassFile method from private to public to allow access to the method from outside the class
added a new test class for asserting NO _ MORE _ ORDS behavior in SortedSetDocValues to ensure correct handling of missing values without a check
updated error messages in CGIHandler . java and added JavaVM callback handler in JavaVM . java to improve error handling and ensure proper execution of JavaVM
added support for additional newline characters in the LineReaderImpl class to enhance functionality to handle additional line endings
updated method signatures to use Set instead of List and changed data types from List to Set to improve performance and flexibility in handling hash codes
added a check for zero vertex count in OGLESShaderRenderer to prevent rendering issues when no vertices are available
updated method name from ` shouldUseArgumentTypeWhenOverloadingPuzzleDetectedByVerificationInOrder ` to ` shouldPrintArgumentTypeWhenOverloading
replace FileUtil . createData ( root , menuPath ) with FileUtil . createFolder ( root , menuPath ) for creating a new folder to ensure the
remove unused import and fix typo .
refactor JsonObject class to improve code readability and maintainability
updated idle time validation in SelectChannelEndPoint . java and modified low resource retrieval logic in HttpConnection . java to ensure idle time is accurately checked
fix farmlandblock . cansustainplant ( ) not take into account direction
added a new table " SALTEDTABLE123 " with primary keys and modified related queries in QueryDatabaseMetaDataIT and ConnectionQueryServicesImpl
updated the SimpleDateFormat constructor to accept Locale . US and added a new class B6791927 for testing cookie expiration validation to ensure correct handling of cookie expiration
removed multiple redundant database closing statements to streamline resource management and improve code readability
increased the timeout duration for processing and recovery from 1 second to 5 seconds to allow more time for processing or recovery to complete successfully
[ economy ] economyallocationstage constructor accept optionvalues .
refactor key binding logic in SourceTab and CodeAreaKeyBindings to improve readability and maintainability of the code
added a static block to set the line separator for ObjectMapper initialization to ensure consistent line separation across different operating systems
updated path handling in NativeEnvironmentRepository to correctly convert backslashes to forward slashes to ensure consistent path formatting across different operating systems
removed the Application reference from multiple test classes to simplify the test code by eliminating unnecessary Application usage
[ java ] : remove unused recordlog . validateexistinglog ( ) .
chore : update java and python dependency ( # 419 )
remove unnecessary sleep and print memory usage
added a private boolean variable ` reverseImage ` and removed it from shared preferences to streamline the retrieval of the reverse image preference
refactor conditional checks in multiple classes to improve code readability and maintainability
added a predicate to exclude certain fields from being replaced in TerserUtil . java to enhance functionality by allowing fields to be replaced based
updated JUnit imports and method visibility from public to package - private in AuthenticationSuccessListenerTests . java to align with the Jupiter API changes to
h2 console : fix indexoutofboundsexception in settypes ( )
refactor TypeUtil class to improve code readability and maintainability
updated the way triggerTime is formatted by using LocalDateTime and TimeZone to ensure proper time zone handling in the context
added a method to create a MethodHandle error handler for abstract methods in MethodHandleResolver . java to enhance error handling for method signatures with specific modifiers to improve
camel - 14263 : camel - ognl - improve the validation of simple language expression .
remove unnecessary check for empty target graphs in AbstractParser . java to simplify the code and improve readability
( chore ) camel - jclouds : use ioutil for copy stream
( chore ) camel - consul : remove unused @ ignore annotation
added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest with ACC _ STRICT flag validation to ensure all methods have the
[ java ] increase driver timeout for channel validation test .
added a new class FileExtensions for managing language file extensions to provide a structured way to handle language file types in the application
refactor DateFormatUtil to use ThreadLocal for creating DateFormat instances to improve thread - safety and maintainability of date formatting
updated VMDeprecatedOptions to use new memory limits and deprecate experimental tests to enhance memory management and improve test clarity
added displayName property to DelegatedClientIdentityProviderConfiguration and updated related classes to utilize this property to enhance flexibility in managing display names
added EarlyTerminationException to multiple operator classes and updated exception handling in CombineGroupByOperator and CombineSlowOperatorsTest to utilize it to improve error handling
removed unnecessary whitespace in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency in formatting
updated response handling in ` HttpBindServlet ` , ` HttpConnection ` , and ` HttpSession ` to utilize ` consumeResponse ` method
add null check to capability dispatcher to prevent npe .
removed KeyCrypterException from the catch block in WalletTool . java to simplify exception handling for better clarity
marked the AsyncCompletionService and SubmitOrderedCompletionService classes as deprecated to indicate that these classes are outdated and should not be used in new implementations
updated the length handling in the HyphenationTree class to ensure the correct length is retained after processing
add a delay of 200ms to fix test failure
move the resource management service into a separate package so that it can be reuse by other package .
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED constant from " For queries with named parameters " to " Use j
added a boolean variable ` providersChanged ` to control the state of providers during configuration changes
added a method to quote identifier tokens in SemanticAnalyzer to ensure that identifiers are properly quoted based on configuration
pdfbox - 4892 : fix npe , a suggest by valerybokov
changed the type parameter from ` AbstractAnalysisFactory ` to ` T ` in ` SolrResourceLoader . java ` to improve type safety by explicitly casting the
modify condition in Window . java to correctly handle edge cases to ensure proper functionality and prevent potential null pointer exceptions
added null check for appManifest before accessing its target SDK version to avoid potential NullPointerException when appInfo is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to improve JSON serialization and deserialization to enhance error handling and ensure proper handling of unknown
added userName property and corresponding getter and setter methods in Driver and HiveSemanticAnalyzerHookContext to enhance flexibility in managing user credentials
added methods to set transformer input / output streams in XsltBuilder to enhance flexibility in transformer configuration
added HadoopShim integration and updated FragmentCompletionHandler to use it in multiple classes to enhance compatibility with the Tez Hadoop shim implementation
updated test cases for ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to remove unused variables to improve code clarity and maintain
added null check for context before logging access in CoyoteAdapter to avoid potential NullPointerException when context is null
( chore ) camel - throughput : reduce cpu usage
updated VM version checks in CompilerConfigFileWarning and ConfigFileWarning to use Platform . isDebugBuild ( ) instead of system . getProperty ( "
replaced ` MeterStatisticsManager . statisticsOperationMap . clear ( ) ` with ` MeterDetailStatisticsModel ` in ` DefaultLogPublisher
updated logback configuration file handling to improve flexibility in logging
added @ NotNull annotations to various methods and classes to enforce non - null constraints to enhance code robustness and prevent potential NullPointerExceptions
updated Escaper references from BASH _ ESCAPER to SHELL _ ESCAPER across multiple files to ensure compatibility with Windows - specific escaping
refactor ` waitUntilReadyAndSucceed ` and ` HttpWaitStrategyTest ` to use try - with - resources for better resource management to
renamed the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class for better under
updated formatting in RelativeDateFormatTests . java to improve readability of test cases
added a new method ` generateShieldAddress ` to ` RpcApiService ` to generate a shield address to facilitate the handling of shield
changed return types of readConsoleInput methods from byte [ ] to String and updated charset usage in AbstractWindowsTerminal to improve compatibility with UTF - 8 encoding
updated regex patterns in TestStabilityRule . java to improve accuracy in testing stability rules
updated DefaultSolrHighlighter to limit fragments to specific values and added a new HighlighterTest for multi - valued fields to enhance fragment selection logic to
modified the ` tryToLogin ` method to accept username and password as parameters to enhance security by allowing credentials for authentication
added null checks and improved entity handling in the HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp classes to enhance
( chore ) camel - jms : fix checkstyle violation
removed the wrapCollection parameter from the update method call to simplify the method signature for better readability
added logging for unknown currency exceptions in BTCEAdapters . java to improve error handling and logging for better debugging
( chore ) camel - durable : do not include clientid / subscription name in subscription list
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a ` useTenantIsolation ` parameter to the ` startController ` method and updated related test methods to enhance flexibility in managing
simplified the return statement by directly returning the value of response . getValue ( )
added a check for non - empty ` attrs ` size in ` ProjectWorkspace . java ` to ensure that only valid attributes are processed
added methods to retrieve project JDK name , JDK type , and language level , and replaced BuckConfig with projectConfig in Ij
updated exception message in HiveSessionProperties . java to clarify that optimization is not allowed when bucket count is compatible but not the same
added a test for resolving effective ACLs with user details in GrantedAuthorityEffectiveAclsResolverTests to ensure correct handling of roles with user details in
update method resolution logic to use the correct Java language object
added functionality to determine the number of buttons based on the maximum number of buttons supported in XlibWrapper to ensure buttons do not exceed a maximum limit
updated import statement for Asserts in RedefineInterfaceCall . java to ensure compatibility with the new library version
added a new ` MessagePackFactory ` class and modified ` MessagePack . java ` to utilize it for message packing to enhance
add desert / cave tag to biome tag provider ( # 4647 )
renamed the ` present ` method to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
updated layout adjustment logic in ComponentGroup . java to ensure correct UIID assignments based on horizontal and vertical conditions
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( ) ` in ` DO
replaced ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput
[ java ] close commit position counter when cluster service be shut down .
add a new entity UserSite with a UserSiteId and a note and version to the UserSite entity to provide a structured way to associate
added error handling for MalformedURLException in HttpConverterRegistrar . java to improve robustness by ensuring proper port resolution based on the address format to enhance
apiresponsehelper : ignore storage pool if they be not in the ignore list
replaced ` openInput ` with ` fileLength ` in ` NRTCachingDirectory . java ` to ensure correct file length retrieval from the directory
updated the ` JavascriptCompiler ` class to be final and modified the ` generateClass ` method to accept a ` Map < String , Integer >
removed synchronization from the UISettings class to ensure thread safety during object serialization
added a check for native input support and focus handling in TextField to prevent focus loss during text editing
fix spannerio exception handling for concurrent transaction
removed unnecessary generic type declarations in multiple Java files to improve code readability and maintainability
updated array types from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray class for cloning arrays to
oidc : fix npe when replay attack be detect
added a check for relationship fields in DCInputSet to ensure correct handling of relationship fields in the input set
added server slogan capability and updated related classes to utilize this capability to enhance user experience by allowing server smoother access to
refactor conditional checks in DrawerActivity for better readability to enhance code clarity and maintainability
added a JUnit assume statement for network exception handling in SolrRequestParserTest to ensure tests do not fail if a network connection is not available
added a check to return early if no symbol events are available to optimize performance by avoiding unnecessary processing when no symbols are available
added new columns " Data 5 - 4 " , " Data 3 - 4 " , " Data 5 - 4 " , " Data 5 - 4 "
added a warning log for empty data providers in the Parameters class to improve debugging by providing clearer warnings when a data provider returns an empty array or iterator
( chore ) camel - jbang : use empty list instead of collections . empty _ set
update version number from 1.9 . 0 to 1.9 . 8 in FreeplaneVersion . java and update selection style handling in MapStyleModel
update physicsrigidbody to use restitution instead of mass
added a new file AutoFtpActivity . java to implement FTP testing functionality to enable automated testing of FTP commands in the application
refactor token type handling in BaseSemanticAnalyzer to improve clarity and maintainability of the code
added getter and setter methods for imageX , imageY , and componentState in ImageViewer , OnOffSwitch , Component , and GenericSpinner
added a new class RemoteExecutionEnabled that implements custom field serialization and deserialization to enable remote execution functionality for buildable objects
pdfbox - 2576 : fix typo find by codespell on fossies . org
replaced FileReader with InputStreamReader and added UTF - 8 encoding for file reading in ImportCsv . java to improve compatibility with UTF - 8 encoding to enhance file
added assertWorkingScoreFromScratch method to AbstractScoreDirector to ensure that shadow variables are not stored in the working score
updated the configuration key from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " in HiveConf .
added SLF4J Logger to ignore message content as it be not an io . netty . buffer . ByteBuf instance to enhance
updated file removal logic in SynchronizeFolderOperation and improved error handling in FileDisplayActivity to enhance user experience by notifying users when
added assertions to verify the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly retrieved from the exception
added a deprecation annotation to the ISchemaRegion class and updated the test method name from " constructSchemaBlackList " to " testDeleteTimeseries
throw a rendererexception if samplemimetype be null
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` wait ( ) ` in ` Abstract
added onConstructor _ = { @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) } to AllArgsConstructor annotations to enhance JSON
phoenix - 5978 add support for create index on view ( addendum )
added a new Website class with properties for name , url , and URI , and updated PopulatorImplTest to reflect this new class to
added a setup method to set the default locale to " en " to ensure consistent locale settings in the application
added a filename filter to detect badly downloaded jar files to improve debugging by providing clearer information about download issues
updated assertions in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve readability and maintainability of the test
added a check for single parameter tokens in the SimpleExprGenerator to ensure proper handling of variable expressions to enhance the functionality of the parser
added a volatile boolean field ` createdVertx ` and modified the conditional check for ` vertx ` to ensure that ` vertx ` is only used
updated writeAttributes method to use NodeModel instead of null to ensure compatibility with updated NodeModel usage
updated logging statements in SynchronizeFolderOperation . java for consistency and clarity to improve readability and prevent potential null pointer exceptions
added an ' ignoredReadStatus ' field to the ' entries ' object and updated relevant classes to set ignored read status based on keywords , tag , and
replaced ` MavenTestingUtils . getTargetPath ( ) ` with ` MavenPaths . findTestResourceDir ( " webapp " )
[ type : fix ] fix illegalargumentexception in registerserverconsumedexecutor ( # 6663 )
updated the condition for determining if the sound is playing to ensure that the sound is only play when it is paused
added permissions for admin area administrators in the MainCommand class to enhance security by restricting access to the area being used
refactor ServerRequestPlanVisitor to use a dedicated updateQueryOptions method for setting query options to improve code readability and maintainability by reducing
updated file name comparison logic in multiple parser input file object classes to ensure accurate file name validation for parser input files
updated assertions in ResourcesTest to include pure emoji and text to enhance test coverage for emoji - related attributes
changed the NMTWaitForDataMerge method to NMTOverflowHashBucket and added native methods NMTMallocWithPseudoStack to enhance memory management
[ hotfix ] [ serializer ] deprecate eitherserializersnapshot in favor of nestedserializersnapshot
updated AddressResolverOptions to use constants from AddressResolver for default variables to enhance maintainability and clarity by centralizing option handling
added a call to ` super __ associate ( context ) ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplateTest
pdfbox - 2576 : avoid npe , a suggest by valerybokov
updated XML namespace references from " liquibase / parser / core / xml / dbchangelog " to " www . liquibase . org / xml
truffle / commonmimetypelocator : move commonmimetypelocator to test package
updated repository version state from INIT to NOT _ REQUIRED and changed return values from INIT to NOT _ REQUIRED in multiple classes to ensure correct handling of
updated the CompareControl instantiation to include additional schema comparisons to enhance the comparison process to include additional metadata during schema comparisons
updated import statement from ` org . junit . Test ` to ` org . testng . annotations . Test ` in ` TestBackwardAnoamly
added a new file ProgressiveJPEGTest . java to implement GdxTest for testing progressive JPEG rendering to facilitate testing of JPEG
updated MaterialLoader to use alpha discard threshold instead of fall off and set properties for ambient , emissive , and texture names to improve resource management and
abort native - image compilation on x86
added a null check for the text before setting its size to avoid potential NullPointerException when text is null
update readVarInt ( ) to use a multiple of 1 _ 000 _ 000 instead of a fixed value to ensure correct representation ofVarInt ( )
added ' final ' modifier to constructors of PushUtils and ThumbnailsCacheManager classes to enforce immutability of these classes
removed bounds checking from the RocketPanel class to simplify the code and improve readability
removed unnecessary casting to MockDirectoryWrapper to simplify code and improve readability
updated regex pattern for loading CSV presets in componentPresetDao to ensure compatibility with varying regex patterns
added a condition to announce for accessibility only if the duration is greater than zero and updated icon handling logic in FloatingIconView to enhance accessibility
updated the initialization of homeNode to use RefreshTask instead of Args . getInstance ( ) to improve node discovery functionality
pmd : allow ant task to target jdk 1.3 and 1.5
updated QuotaResponseBuilderImplTest to use MockitoJUnitRunner instead of PowerMockito for testing quota tariff functionality to improve test reliability
added error stream and output streams to TestSchemaToolCatalogOps to allow for better diagnostics during schema validation
added DFSClient parameter to SaslNegotiateHandler constructor to enhance flexibility in SASL negotiation process
added RepositoryMetadata parameter to MongoQueryMethod constructors to enhance query method functionality to include repository metadata
refactor Digester to use EntityResolver2 instead of EntityResolver directly to improve compatibility with XML introspection utilities
updated import statements in MetaDataEndpointImpl . java for consistency and clarity to enhance maintainability and readability of the code
increased allowed _ repeated _ repeated _ deadlocks from 5 to 10 in TxnHandler . java and added a retry interval for handling deadlock scenarios to
updated variable assignments in BarChartActivity and LineChartActivity to improve clarity and functionality to enhance code readability and maintainability
added checks for non - printable characters and implemented a method to validate them to ensure that only printable characters are processed and improve error handling
rename selenide . in ( ) to selenide . using ( ) for clarity
added support for process plugin configuration in the DefaultMaven and DefaultProjectBuilder classes to enhance project building flexibility and control over plugin processing
change return value type from int to double in ProxyConnectionManager and ServerTrafficCounter classes to ensure correct conversion of byte values to double
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.16 . 0
updated return statements in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added a method to retrieve the remote host
( scott phillipson ) add ' admin _ button ' attribute to community list request
replaced direct instantiation of ` longCompactions ` and ` shortCompactions ` with an AtomicInteger ` AtomicInteger ` for thread naming to improve thread naming
updated the method of obtaining the package name from the application to ensure the correct resource package is used for better resource management
refactor Near . java to use a private method for retrieving players in plot visibility to improve code readability and encapsulate player visibility logic
refactor AndroidManifest , ResName , ShadowMediaPlayer , ShadowActivity , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest class structure to improve code readability and maintainability
updated references to ` OperatingSystemImpl ` to ` OPERATING _ SYSTEM _ IMPL ` in ` JNIRegistrationManagementExt . java ` to
corrected the attribute name from " referencedContainer " to " referencedContainer " in the SchemeGenerator class to ensure consistency in referencing the referenced container
removed encryption key and initialization vector handling from UploadFileOperation . java to streamline key and initialization vector generation logic for improved security
added @ Stability annotation to WorkProfileTest . java with flavors = LOCAL and platform _ postsubmit flavors to enhance test stability for
removed conditional check for bucketing version in TezCompiler . java to streamline the code for better readability and maintainability
replace setCursorPosition method call with input . setCursorPosition method call to ensure cursor position is correctly set from the input object
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and introduced a new class ` LockFreeBucket _ FinalFields _
add a method to print thread pool stats in nodeprobe
updated max bitrate retrieval to use user preferences instead of hardcoded values to ensure correct bitrate configuration based on user preferences
updated ZipkinHttpSpanExtractor to conditionally check for presence of ` traceId _ Name ` and ` spanId _ Name ` to en
remove unnecessary duplication of user payment account
refactor code to use withtypeiconRightAligned ( ) instead of withtypetext ( ) for clarity
added a call to set the project in the filesystem to ensure the filesystem uses the correct project configuration
added ProjectFilesystem parameter to JsBundle and related classes to enable the use of the project filesystem for building JavaScript bundles
refactor multiple Java classes for improved consistency and clarity to enhance maintainability and readability of the codebase
refactor MetricsDSLContext class to improve code readability and maintainability
refactor VersionBuckConfig to use ImmutableSet for universes instead of a generic VersionConfig interface to enhance immutability and simplify the
added a try - catch block around the bindShadowClass method to handle TypeNotPresentException to improve error handling for type not present exceptions
changed the visibility of the validateTypes method from static to public and updated the exception message format to improve accessibility of the method and enhance clarity
fix : update gapic - generator - java with mock service generation fix ( # 1382 )
added SLF4J logging to SimulationStatus class to enhance traceability of simulation status updates
updated VERSION _ POSITION _ Y from 138 to 150 and adjusted VERSION _ FONT from 138 to 150 to improve the visual quality of the application
added a runLater ( ) method to the notifications collection in UserInterfaceComponentImpl . java to ensure notifications are executed in a background task to improve respons
updated the ` ReturnsElementsOf ` method to include additional return values to enhance the mock ' s functionality with additional return values
updated error message to clarify that dropping partitions for non - string partition columns is not allowed
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` for line - file documentation generation to ensure correct handling of
added a method to retrieve the version code in MainApp and updated FeatureList to use it to ensure compatibility with MainApp ' s version code retrieval
camel - 14263 : camel - spring - boot - add support for beanexplicitmethodinvocationstring and beanexplicitmethodinvocationinputstream to avoid
updated assertions in MultiPartInputStreamTest to use getSubmittedFileName ( ) instead of getContentDispositionFilename ( ) for better clarity to enhance readability
added buffer ownership support to IndexBufferObject and VertexBufferObjectWithVAO classes to enhance memory management and prevent potential memory leaks
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset functionality
refactor JerseyClientConfiguration to improve clarity and maintainability of the code
int - 1678 remove unused characterstreamreadingmessagesource class
updated print statements in InstanceOfPatternMatchTest and removed redundant type casts in RemoveRedundantTypeCastTest to improve code clarity and reduce unnecessary type
added methods to initialize columns and rows based on the last column and row indices in StringDict and Table classes to ensure proper handling of empty string entries in
added @ Deprecated annotations and implemented AutoCloseable interface in GenericContainer class , along with a new method for customizing command hooks in GenericContainer
updated logging level from info to error in MediaInfo . java and modified exception handling in RendererConfigurationTest . java to improve logging clarity and
added support for schema pattern configuration in BundledDriverDatabaseConnector and
return empty byte array instead of null
refactor bitmap scaling calculations in AndroidGraphics . java to improve readability and maintainability to enhance clarity and correctness of bitmap dimensions calculations
refactor Base64 class to improve code readability and maintainability
sulong : add fallback assumption to sulong _ get _ stack _ from _ threadnode
danielwagnerhall : ignore test that fail on iphone
refactor FlowBuilder and its tests to improve code clarity and maintainability
changed the type of ` resName ` from ` ResName ` to ` int ` in ` AttributeResource ` and removed the ` ResName
refactor DefaultDockerClientConfig to use Optional for context TLS file resolution and streamline TLS verification logic to enhance flexibility in managing TLS
( chore ) camel - elasticsearch : fix failing test
modified the site capture logic in ` ppp Attr . java ` and added a new class ` T6450290 . java ` with a main method to
added logging configuration options for default logging level in LoggingFlags and LoggingOptions classes to enhance logging functionality by allowing customizable log levels
added logging statements and changed the return type of deleteItemsFromDatabase method from Iterable
added an ` allFilesOption ` method to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` classes to enhance
added methods for forEachOperation and hasMatching in MutationOperationGroup with default implementations to enhance flexibility in handling mutation operations with associated behaviors
updated the calculation of numPredictiveAppCols to account for phone devices to ensure accurate predictive app columns based on device type
updated string initialization to use UTF - 8 encoding to ensure consistent character encoding handling
added new ` RequestMatchers ` class and corresponding test cases in ` RequestMatchersTests ` to enhance the functionality of ` RequestMatchers ` for
do n ' t hide input box in applet mode
updated calculations for height and width in ProgressBar to account for bgBottomHeight and bgRightWidth adjustments to ensure proper positioning of knob elements
updated PrestoSparkNativeQueryRunnerUtils to use a dynamic file path for external functions JSON definition to improve flexibility in accessing external functions JSON
added final modifiers to extra _ L0 , extra _ L1 , extra _ L2 , extra _ L3 , and extra _ L4 variables
added a condition to check for invalidated states in the gesture handling logic to ensure proper handling of swipe gestures when the state handler is invalidated
updated layout handling in DynamicGrid and adjusted metrics calculations in Workspace to improve layout management for landscape and portrait layouts
added a condition to check if the robot file is the " / robots . txt " file in the redir condition to ensure correct handling of robot
[ netbeans - 4071 ] add warning icon to nb - javac library
updated the method name from " continue " to " createWorld " in AdvancedGameSetupScreen . java to improve clarity and consistency in naming conventions
added null check for ' b ' in UDFOPDivide . java and created a test class for division by zero in TestUDFOPDivide . java to
formatted code for consistency and clarity to improve readability and maintainability of the code
updated filterProcessesUrl and logoutRequestMatcher configurations to use a new matcher to enhance authentication request matching functionality
added onDestroy method to ShareActivity and ContributionsActivity to ensure proper cleanup of upload service connection to prevent memory leaks
replaced ` thumbNail . getTag ( ) ` with ` thumbnail . getTag ( ) ` in ` WallpaperPickerActivity . java `
refactor multiple Java classes for improved consistency and clarity to enhance maintainability and readability of the codebase
added request timeout configuration to RaftServerConfigKeys to enhance request management during RPC requests
updated logging level from error to debug and modified resource management logic in TsFileResourceManager to improve logging clarity and ensure all time index resources are
added system properties to MavenModuleLoader to ensure proper configuration of system properties
added readiness check metrics to ServerMeter and HealthCheckResource classes to enhance monitoring capabilities for service status updates
added modelhandler registration for animated torch . close # 189
added null check before closing the writer to prevent potential NullPointerException when writer is null
added a new method ` getHiveOnTezConfFromDir ` to retrieve the Hive configuration from a specified directory to facilitate testing
added a link to mute users in the features activity to enhance user experience by providing a direct user experience option
added initialization for " jdk . reflect . useDirectMethodHandle " to initializedProperties to disable direct method handle usage in reflection operations
hbase - 26937 splitonleadingvarcharcolumnspolicy now extend steppingsplitpolicy ( addendum )
[ hotfix ] [ yarn ] fix checkstyle violation in abstractyarnclusterdescriptor
update getpronunciations method to retrieve pronunciations directly from the dictionary
updated JSON string formatting in JsonUtilsTest . java to enhance readability and maintain consistency in formatting
added extra to the Compose class to store the tweet ID in the Compose data structure
add a warning log when a reliable topic be terminate
improve exception message when no class be find to analyze
updated import statement for PublicKey from Key to PublicKey to ensure compatibility with the latest security standards
updated the initialization of the isIncompatible variable to ensure that the correct boolean value is set for compatibility checks
updated the parameter type of the createAccount method from Account to AccountCreateContract to ensure compatibility with the new contract structure
pdfbox - 4892 : avoid npe , a suggest by valerybokov
log dlq ' d message cause in debug log instead of error
updated ` enableOffHeapFormat ` to true and updated default star tree format version from " ON _ HEAP " to " OFF _ HE
updated title handling in FeedUpdateService to ensure it does not exceed 2048 characters to prevent exceeding content limits
updated JColorChooser to utilize ColorChooserComponentFactory for preview panel retrieval to enhance flexibility by allowing customization of the preview panel
changed log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity during extension checks
added a null check for the reusable bitmap before setting bitmapFactoryOptions in AndroidTileBitmap . java to avoid potential NullPointerExceptions during bitmap creation
added a layoutParams field and a getLayoutParams method to FakeView . java to provide access to layout parameters for better layout management
added exception handling for illegal state exceptions in DefaultCursor and implemented a test for iterator behavior in CursorSimpleTest to ensure proper exception management when a Cursor is
pdfbox - 4892 : avoid infinite loop if there be no page in a page dictionary
( chore ) camel - aws2 : disable flaky test
added a private String field and getter and setter methods to the Message class to provide access to the timestamp associated with the message
[ opengrok ] fix genericexceptionmapper to return an error response
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
isochrone : fix issue with legacy parameter not be remove
changed class visibility from public to package - private in multiple test classes to restrict access to these classes for broader testing capabilities
refactor CSRF handling into a separate method to improve code readability and maintainability
added a bootstrap flag to the EclipseLoaderPatcherTransplants class to allow dynamic loading of ShadowClassLoader based on the specified class name
[ jbrules - 2633 ] support numeric disable in drl file ( e . g . xlsx )
changed log level from info to debug for default value logging to reduce log verbosity and improve performance during development
added null checks for axes and buttons in Lwjgl3Controller and implemented joystick management in Lwjgl3ControllerManager to enhance robustness by
replaced ` cucumber . api . java . ObjectFactory ` with ` io . cucumber . core . backend . ObjectFactory ` in `
refactor port forwarding saving logic in PortForwardListActivity to use HostDatabase for saving port forwards to enhance code readability and maintainability by
added a new global configuration option ` SHOULD _ SNAPSHOT _ DATA ` to control Liquibase snapshot data behavior to enhance the flexibility of
added a null check for the file name before saving in SyncedFolderObserver . java to avoid potential null pointer exceptions during job execution
refactor LocationMarshaller to improve code readability and maintainability
updated touch event handling logic in StatusBarTouchController . java and TouchInteractionService . java to improve
refactor VectorReader and LlapInputFormat classes to remove unnecessary imports and simplify class instantiation to enhance code clarity and maintainability by
removed unnecessary ` ArgumentMatchers ` imports from multiple test classes to streamline dependencies and improve code clarity
updated PathSourcePath methods to use getRelativePath ( ) and getRelativePath ( ) instead of getRelativePathName ( ) and getRelativePathName ( )
updated ` completeMapAndTransformRow ` method to accept ` RecordReaderFileConfig ` instead of ` GenericRow ` to enhance flexibility
added a null check for the extractor before iterating over annotations to avoid potential NullPointerExceptions when extractor is null
server : fix max secondary storage for account and domain ( # 6663 )
send shift potion effect to the correct player . close # 3088
added a deprecated option ` cold _ reads _ to _ omit ` to ` SizeTieredCompactionStrategyOptions ` and removed it from uncheckedOptions
added a call to leech . stop ( ) in ClientTest . java to ensure proper termination of the leech process
[ issue # 5979 ] optimize pop metric ( # 5981 )
refactor KeyboardAddonSettingsFragment to improve code readability and maintainability
added JUnit Ignore annotation to ShadowDateUtilsTest to temporarily disable tests related to date handling functionality
refactor MongoReactiveAutoConfiguration to NettyDriverMongoClientSettingsBuilderCustomizer and rename EventLoopGroup to NettyDriverMongoClientSettingsBuilder
added session upgrade handling in UpgradeConnection and JettyTrackingSocket classes to ensure proper request and response processing in the WebSocket connection
added connect timeout functionality to AndroidImplementation to manage connection timeouts effectively
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to utilize ` RegistrantType ` for permission retrieval to
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to verify SQL parsing with quoted cast expressions to ensure correct handling
added a conditional check for root operations in the file validation logic to ensure that the file is writable only when the operating system is root
added configuration properties for thread group and thread per group in FixedThreadExecutor . java to enhance flexibility in managing executor groups and threads
added null check for the field variable in AbstractChangeGenerator . java to prevent potential NullPointerException when field is null
updated CasEventListener and related classes to use InitializingBean instead of CasEventListener to enhance event handling capabilities and maintain compatibility with Spring
refactor endAnimation method to encapsulate endAnimation logic into a separate endAnimation method to improve code readability and maintainability
added a close method to the DeflaterOutputStream to ensure proper resource management by closing the deflater output stream
added a new test class ` gsp001 ` for retrieving system properties to verify that ` getSystemProperty ` can retrieve certain system properties at early phase
refactor BeanDefinitionInjectProcessor to use concreteClassMetadata for improved clarity and maintainability to enhance code readability and facilit
* add camerode . readsavable ( ) and lightcontrol . readsavable ( ) to camerode and light
refactor PopupNotificationPanel to utilize a customized panel title to
refactor exception handling to use InferenceException instead of NoInstanceException to improve clarity and maintainability of exception handling
added a method to retrieve the feature value to provide access to the feature value from other classes
changed the parameter type from int to long in VerificationAfterDelay method from int to long to accommodate larger time periods to enhance flexibility in
added onBuild and executionDriver properties with their respective getters and setters in ContainerConfig and Info classes to enable configuration of onBuild and executionDriver
updated toolbar icon to differentiate between RTL and non - RTL layouts
added support for enabling position increments in StopFilter to enhance flexibility in stopping filter configuration
[ test ] use internet address for test
added a new variable ` mTryShareAgain ` and set it to false to reset the share attempt state to false after a successful share attempt
added support for using TTY name based on version in JansiNativePty . java to enhance terminal management by allowing dynamic terminal identification based
updated bandwidth calculation to use a dynamic size based on dynamic properties to enhance flexibility in bandwidth management for virtual machines
replaced direct calls to getSpan ( ) with Awaitility . await ( ) for better synchronization to ensure thread safety during asynchronous tasks
move api . easee . com / api to easee . com / api for consistency
updated sleep duration in KafkaIOIT and added startup attempts in KafkaContainer to improve stability of Kafka integration tests
updated the hasJsonPath method to use a is method for better clarity to enhance readability and maintainability of the code
added SSL context and trusted certificates to OkHttp . java to enhance security by ensuring secure connections are enforced
refactor button click listener to use a dedicated method for handling button types to improve code readability and maintainability by reducing duplication
added a new file ` HyperlinkFormula . java ` and updated ` StringPtg . java ` to use it for parsing hyperlink formula
added nullability checks for stdout and stderr in ShellStep . java to enhance code robustness by preventing NullPointerExceptions
increase timeout from 1000ms to 2000ms in AsyncAppenderTest . java to allow more time for asynchronous operations to complete successfully
refactor escapeDatabaseObject methods to use a more descriptive object name parameter to improve code readability and maintainability by reducing redund
added a boolean variable ` inputChanged ` and modified input validation logic in ` MaterialRenameDialog . java ` to conditionally update the title length based on
added a test for state changes in ShadowDisplayTest and implemented setState method in ShadowDisplay to ensure proper handling of display state changes in KitKat
jbrules - 2623 : add directinvocationservice interface to make it easy to implement
gwt : fix for ctrl + x and ctrl + y not work
modified SQL query construction in PgDatabaseMetaData . java to include conditional filtering based on server version to ensure compatibility with PostgreSQL 9.0
[ hotfix ] fix checkstyle violation in queuechannel
updated method signatures and variable types in FileUtils . java to improve clarity and consistency to enhance code readability and maintainability
added support for monitoring in the RemoteCollector based on application type to enhance monitoring capabilities for different collectors
added a method to resolve attribute resolution for " disabled " and " defaults - disabled " in HeadersBeanDefinitionParser to enhance attribute resolution for
protobuflogreader : do n ' t seek to the end of the wal if the first byte be negative
shutdown nacos nameservice on destroy
camel - 14263 : camel - mybatis should use source code generate configurer to avoid reflection configuration .
added support for SPDY version in GoAwayGenerator and GoAwayBodyParser to enhance error handling for different protocol versions
refactor AuditEvent initialization and assertions in AuditEventTests . java to improve code readability and ensure consistency in JSON handling
added bounds checking for float rounding errors in Interpolation . java to ensure robustness by preventing negative rounding errors
change the default path to be relative to the root directory of the forge . json file ( # 10861 )
updated the way the dx executable is retrieved by adding it to the builder
added assertions for PointRangeQuery instances in TestPointQueries . java to ensure correct equality checks for PointRangeQuery instances
hbase - 27455 testhfilecleaner . testhfilecleaner . testhfileappender . testhfileappender (
modified the file name assignment logic in ReceiveFileConversationComponent . java to ensure the correct file name is displayed based on file transfer request requirements
removed throw statement from JedisClusterCommand . java to streamline error handling by eliminating unnecessary exceptions
[ hotfix ] [ table - planner - blink ] fix rowtimeminibatchassgineroperator to use chain strategy always
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap and added new test cases for single URL
added HashMap functionality to QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWriteBenchmark classes to enhance performance
added a new HashMap G _ SCH _ B to HybridPlotWorld . java to initialize the G _ SCH _ B variable to enhance
added null and empty checks for fields , and refactored identifier processing logic in GroovyEngine . java to enhance robustness by ensuring identifiers are
do n ' t draw dependent number when click on it
added support for TCP keepalive configuration in HiveServer and HiveConf to enhance server performance by allowing connections to the server based on configuration settings
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to clarify the purpose of the method being called
no effective change - remove unused code
refactor RealtimeSegmentRelocatorExecutorService to use lambda expressions instead of ThreadFactory to improve code readability and reduce boilerplate in
vpc : do n ' t start vpc if fail to start
modified the calculation of windowAlpha in WindowTransformSwipeHandler . java to ensure windowAlpha is clamped to a maximum of 0 and updated condition in Floating
updated fatal error message to reflect the new version of Spring Security to ensure compatibility with the latest schema changes
updated multiple assertion classes to improve consistency and clarity in naming conventions
( chore ) camel - disruptor : make field final
added a new test class ` TestConfigureUDF ` and updated ` ExprNodeGenericFuncEvaluator ` to utilize it to enhance UDF configuration
updated regex pattern in LogMessageWaitStrategy and added JUnit test parameters in LogMessageWaitStrategyTest to enhance pattern matching functionality and improve test coverage
replaced direct logger calls with logger . getLogger ( internal _ LOGGER _ NAME ) . debug ( msg , throwable ) and logger . info ( msg ,
updated method names from ` updatePurgedShardNodes ` to ` deletePurgedShardNodes ` across multiple classes to improve clarity and consistency
added new JavaLanguageHandler versions " 17 - preview " and " 17 - preview " to JavaLanguageModule to support new features and bug fixes related to
added a constant for waiting for compression job completion and implemented a stop method in TimeBasedRollingPolicy to ensure proper handling of compression job completion and
[ hotfix ] [ runtime ] fix checkstyle violation in volatilereadnode
added a method to return an unmodifiable list of steps and updated formatting of the getStep method to enhance code readability and maintainability
corrected the spelling of " fromBase58 " and " toBase58 " to ensure consistency and accuracy in Base58 encoding
refactor currency pair creation to use a variable for clarity to improve code readability and maintainability
update LongTaskTimer to use baseTimeUnit ( baseTimeUnit ( ) ) instead of TimeUnit . NANOSECONDS for duration measurement to ensure accurate measurement of duration
[ euphoria - euphoria - flink ] do n ' t partition tuples when the partitioner be not hash
changed the type of ` colorValues ` and ` colors ` from ` String ` to ` CharSequence ` in ` HostEditorActivity . java ` to improve
renamed IncompatibleDatabaseHandler to DatabaseVersionHandler and updated related methods to improve clarity and consistency in handling database version configurations
added a constant for maximum tweet count in ExansionViewHelper to prevent exceeding the allowed number of tweet results
increased the refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow for more time for LDAP authorization to refresh
added a test for retrieving persisted byte size for fully acked tail pages in the Queue class to ensure correct byte size retrieval for fully acked
change return value from getClass ( ) to GlowServer . class . getImplementationTitle ( ) to ensure compatibility with the new class structure
refactor the grow method in DataIO to improve code readability and maintainability
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method to retrieve the submitted file name from a part to enhance functionality by providing access to the uploaded file name
added a call to markReadForLoad ( ) in LauncherFragment . java to enhance load management functionality
added exception handling for negativeArraySizeException in JarInstrumentor . java to improve error reporting for class instrumentation failures
added a method to check the spill possibility of a partition in HashAggTemplate . java to ensure proper handling of partition spill operations
changed the variable declaration of ` dsName ` from ` String ` to ` final ` and removed redundant calls to ` IndexFileNames . segmentFileName ` to
added a default value for ` DEFAULT _ NAME _ ID _ FORMAT ` in ` SamlProfileSamlNameIdBuilder ` to ensure that ` name
added error handling for password change abortion in ChangePasswordPage . java to improve user feedback during password change operations
removed unnecessary closing brace in Deadlock2 . java to improve code readability and maintainability
added a method to retrieve the maximum idle time in NioReceiverMBean to provide access to the idle time for better resource management
deleted the FontScalingTest . java file to the font size functionality is no longer needed in the project
updated date filtering logic in RRD4jPersistenceService . java to ensure
added checks for non - positive numVectors in GenericUDAFComputeStats . java to prevent further processing when numVectors is zero
test : migrate executablereftest to junit 5 ( # 4104 )
added null checks for view and glass pane before setting to null to avoid potential NullPointerExceptions when view or glass pane is null
camel - 14263 : camel - core - optimize to use wire - tap expression to improve performance
change visibility of setAction method from public to protected to allow subclasses to access and override the method
[ calcite - 1623 ] pushlimittotopn : add topn option to planner settings ( add to system option )
[ java ] remove redundant call to aerondirectoryname .
fixed - rconnection . setqueue ( true ) and rconnection . setblockingcommand ( true ) do n ' t set queued flag to false .
replaced ByteArrayInputStream with a URL for configuration variables in HiveConf . java and removed the LoopingByteArrayInputStream . java file to improve resource management and
updated model creation to use criteria . getDevice ( ) instead of using Device . defaultDevice ( ) to ensure compatibility with different device configurations
added onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to streamline menu inflation to improve code readability and maintainability
refactor CertificateValidator class to improve certificate validation logic
use hawtio . dirname instead of . hawtio in main
added a condition to return SINGLE _ SPACE when comments are empty and whitespace is empty to ensure proper handling of whitespace in the Space class
changed mClosed variables to volatile in multiple dictionary - related classes to ensure thread safety during concurrent access
removed printStackTrace ( ) call from Throwable constructor to clean up the code and improve readability
refactor CustomItemDropTest to extend BaseTest and integrate with MinecraftRunner to enhance test coverage and improve test reliability
added a check for partition existence in DDLTask and DDLSemanticAnalyzer to ensure that partitions are only added when they are not already present
updated NfsSecondaryStorageResource . java to improve input handling and reset buffer during reading to enhance resource management and prevent potential memory leaks
remove unused control request stream id from echoservicenode
[ geos - 10979 ] add spatial operator support to wfs getcapabilities request
added LuceneTestCase . AwaitsFix annotation to BasicDistributedZkTest . java to address issue related to SOLR - 2161 in the test
added a preface match check in Http11InputBuffer . java to ensure proper handling of client - specific parsing behavior
[ java ] set is ingress exclusive to false by default .
replaced hardcoded off - heap cache configurations with an array of cache keys to enhance flexibility in handling different configurations for HBase storage
added a method to increment the running record count and updated the exception context in JSONRecordReader to include the current record number to enhance error reporting by
added a year filter to the merged items in CategorizationFragment to ensure only relevant items are removed from merged items
updated drawColor method calls in CacheableTextView , CellLayout , and HolographicOutlineHelper classes to use PorterDuff mode instead of
added checks to ensure compatibility with OpenGL ES 2.0 to prevent rendering issues with incompatible graphics
added a call to ActionContext . setContext in BackgroundProcess . java to ensure proper context management during execution
added a ` prependDefaultDB ` parameter to the ` getUnescapedName ` method and updated related logic to ensure the table name is prepended
added a connection timeout configuration in TestConnections . java and made the count variable final in StubConnection . java to improve connection management and enforce immutability
added assertions for percentile calculations in TestHiveAggregationQueries . java to ensure correct percentile calculations to enhance test coverage for percentile calculations in aggregation queries
updated DEFAULT _ IDLE _ TIMEOUT constant and refactored idleTimeout and idleWriteTimeout handling in WebSocketChannel to improve code clarity and
updated the method to retrieve shares with the user ' s account to ensure compatibility with platforms specific account handling
replaced ` Enumeration ` with ` Enumeration < InetAddress > ` for better type safety to enhance code clarity and prevent potential ClassCastException
refactor playback control view methods to use setButtonEnabled instead of disableView for improved control over button visibility to enhance clarity and
updated the method signature of ` isPresent ` to accept a ` long ` session ID instead of a ` Session ` instance to enhance clarity and
changed method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
change the default value of UseExceptionProbability from true to _ ___ to enhance flexibility in exception probability handling
updated the method of setting the new plate color based on whether the app is themed or not to enhance the app ' s appearance by
ticket # 269 : mysqluser . touserwithblob ( ) do n ' t require password to be inject .
updated aliases in Middle . java to include " center " and " centre " alongside " center " to enhance clarity and organization of
added a new import for DirectUpload and made the DirectUpload class public in CommonsApplicationComponent to enhance accessibility of the DirectUpload class
added space constraints for left and right axes in BarChartActivity and updated legend position logic in BarLineChartBase to enhance chart layout flexibility and
added support for Java ABI features in AndroidLibraryDescription and JavaLibraryDescription to enhance library functionality by including verification capabilities
added operation event status type to request parameters in ` OnlineHubService ` to enhance logging functionality by including operation event status type
added debug logging for method parameters and introduced a boolean flag for annotation presence in DexAnnotation . java to enhance visibility annotation handling for method parameters
( chore ) camel - jmsio : fix typo
refactor ProcessBuilder instantiation to include a classpath variable for better clarity to enhance readability and maintainability of the code
updated the loading mechanism in PackageResourceLoader to use a dynamic separator based on the resource package name to enhance flexibility in resource path handling
refactor methods in DataSet for improved clarity and consistency to enhance code readability and maintainability
ignore flaky work profile test ( b / 243855320 )
updated error message formatting in ` ShouldHaveMessage ` and added a new test for percent encoding in ` ShouldHaveMessage _ create _ Test ` to ensure
fixed - jcachemanager . geturi ( ) return null if jcachemanager . createcachemanager ( ) return null
do n ' t log technical exception when close command context
updated the initialization of the ALPNClientConnectionFactory for improved clarity to enhance maintainability and readability of the code
packet : use base value instead of current value
fix notification sound uri for sonos speaker
increased the timeout duration for countdown latch from 500 milliseconds to 5 seconds in both ContextRegisterListenerTest and SpringMvcClientBeanPostProcessorTest to
changed log level from info to debug for effect light type determination in LightThingHandler to provide clearer guidance on what ' s wrong
do n ' t return to the queue if the db . properties file ca n ' t be read
updated method signatures and exception messages in Reporter for clarity and consistency to enhance readability and maintainability of error reporting
changed the parameter type of ` generate ` method from ` Frame ` to ` DataFrame ` in ` DataGenerator . java ` to improve clarity and consistency
updated multiple package - info . java files with consistent formatting to improve code readability and maintainability
added a check for non - empty physicalColumnNames before matching against DEFAULT _ HIVE _ COLUMN _ NAME _ PATTERN in OrcPageSourceFactory .
added a call to mixPlay method in the Engine class to enhance audio playback functionality
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
updated calculations in FinderPatternFinder and added new test cases in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to improve accuracy of
simplified the condition for checking leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability
corrected the spelling of " matrixVectorMultiplicationShouldUseBrackets " to improve code readability and maintainability
kristianrosenvold : add $ $ search $ , $ $ , $ $ , $ $ , $ $ , $ $ , $ $
defaultaudiosink : set sample rate to 48000 if not specify
added getFormula ( ) and setFormula ( String formulaText ) methods to XSSFName class and updated references in XSSFName class to enhance
increased the timeout duration from 60 seconds to 120 seconds in HighDimensionsTest . java to allow more time for tests to complete successfully
swapped the length check for constraints in SimpleTypeGT . java and added a test for pattern schema parsing in GMLParserTest . java to ensure
added a new test class ` ClassPathXmlJobRegistryContextTests ` to validate the functionality of ` ClassPathXmlJobRegistryContextTests ` to ensure
changed the data type of ` mHistoricTimes ` from ` float [ ... ] ` to ` long [ ... ] ` and updated related calculations accordingly to
camel - 12320 : camel - restlet - allow restlet producer to get invalid request body .
( chore ) camel - log : remove unused parameter
refactor ChromeTraceBuildListener to use a dedicated method for writing metadata events to improve code readability and maintainability by reducing duplication
added checks to ensure only non - canceled , filled , and non - rejected limit orders are added to the limitOrders list to prevent duplicate orders from being
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct handling of pixel sizes and improve image layout validation
ruby timestamp ext : use rubytimestamp ext library
added a condition to check if the resource path ends with a slash and implemented a test for the absence of a real path in WebAppContext to
updated the type handle in ScriptFunctionImpl from " ERROR _ THROWER _ SETTER " to " ERROR _ THROWER _ GETTER "
refactor JEditTextArea to use a local variable for scrollAmount instead of accessing it directly to improve code readability and maintainability
refactor GraphDecoder to improve variable naming and clarity to enhance code readability and maintainability
test : migrate sniperjavaprettyprinterjavaxtest to junit 5 ( # 4104 )
refactor URLOutputStream instantiation to use try - with - resources for proper resource management
added multiple @ Entity annotations to the Mail class to enhance entity handling capabilities in the code
updated default values of " Defaults to false " , " Defaults to true " , and " IncludeTablespace " to true in Main . java to allow
added methods to retrieve MetaDataBuffer and valuesBuffer in CountersReader to enhance functionality by providing access to relevant buffer types
added a boolean flag to track if an empty file has been read in ScanBatch . java and implemented a test for handling empty JSON directories in TestJsonReader
updated failure handling in StringSubject to include custom name comparison to enhance flexibility in failure reporting based on the
[ pytorch ] [ pytorch ] fix pytorch cuda library detection
updated exception handling to use Exception and Error instead of NoClassDefFoundError and NoClassDefFoundError to improve error handling specificity
hbase - 27455 masterfilesystem . getfilestatus ( ) hang for long time on slow machine
updated error messages in TranslatingJavacPhaseTracer to include the exception class name and message to improve debugging by providing clearer context for loading errors
added a caching mechanism for plugin descriptors in DefaultPluginCache to improve performance by reducing redundant plugin descriptors
update presence status of jabber contact after offline status change .
removed unused parameters from the withResourceAndParams method in ServletRequestDetails to simplify the method signature and improve code clarity
added integration test for fetching account information in BTCEExchange to ensure correct functionality of account information retrieval in the BTCE exchange
added mouseWheel functionality to VDUInput and vt320 classes to enhance mouse wheel functionality for improved user interaction
updated library path handling in Natives . java to improve clarity and maintainability of library path configuration
no effective change - code cleanup - remove unused annotation
set the skin flag to HumanEntity in MetadataIndex and skip processing for player skins in GlowPlayer and MetadataIndexTest to ensure compatibility with
updated LoadBalancerWithServiceTests to use SLF4J logging instead of RequestFieldMatcher and improved service URL handling to enhance logging clarity
reformatted code for consistency and clarity in the createSimpleEntryView method to improve readability and maintainability of the code
replaced System . getProperty with AccessController . doPrivileged for obtaining OS version to enhance security by using privileged access control
added a configuration option for the freemarker suffix in TemplateEngineFreemarker to allow customizable file suffix configurations
updated hashCode calculation and added multiple order IDs for message selection in SelectMessageQueueByHash and SelectMessageQueueByHashTest to ensure correct hashCode calculation and enhance
added an AnimationCallback to manage layout animations to improve UI responsiveness during drag - and - drop animations
refactor bindConditionally to use EasyBind for better readability to improve code clarity and maintainability
added declaredPlatforms field and updated related methods in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to util
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` across multiple classes to standardize parameter accessors for better consistency and clarity
added null check for passwordAttribute before setting it to avoid potential NullPointerException
added support for creating an array of default values in DataUtilities to enhance functionality for handling array default values
updated SslContextFactory to handle null address and client authentication more robustly
updated assertions in TestFSTableDescriptors to use exclusive upper bound for cache hits to ensure accurate validation of cache hits in tests
danielwagnerhall : do n ' t delete cookie by path , just by name
added a boolean field ` mHasEndedLauncherTransition ` and modified the logic for determining if the launcher transition has ended to ensure that the launcher transition does
updated HTML output in HTMLListWriter and HTMLWriter to include UTF - 8 character encoding to ensure proper HTML encoding for meta tags in the output
refactor IndexReader class to improve code readability and maintainability
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path handling in multiple operator classes to
added a new class ` bug6337518 ` that extends ` BasicComboBoxUI ` and implemented a main method ` bug6337518 `
refactor TestRandomAccessBuffer class to improve code readability and maintainability
refactor UserInfoActivity to improve code readability and maintainability
added HomeContentProvider notifications to multiple services to ensure proper handling of content URI changes in the application
added a boolean field ` mStayPressed ` and modified related methods in ` BubbleTextView ` , ` Launcher ` , and ` Bu
added Throwable parameter to the getFallbackResponse method across multiple policy classes to enhance error handling by providing specific exceptions to fallback policies
removed the ` _ compile _ only ` check from the ` DumpBytecode ` condition to simplify the condition for better readability
added null checks for tags array to prevent potential ArrayIndexOutOfBoundsException when accessing tags
updated JAVA _ REGEX _ SPECIALS string format and added new test cases in TestSqlPatterns for SQL pattern matching functionality to enhance
added a new constant for the action bar title in FileActivity and updated it in FileDisplayActivity to ensure the action bar title reflects the current file
updated type retrieval in PythonDslProjectBuildFileParser to use ` Iterables . getLast ` instead of ` Iterables . getOnlyElement ` for
updated the hour parameter from " * " to " 0 " in the @ Schedule annotation to set a default hour for the scheduled task
added table partition validation logic and error handling in TransactionalValidationListener . java to enhance table partition validation and improve error messaging for better
refactor ReplicationHandler and SnapPuller classes for improved clarity to enhance maintainability and clarity of replication operations
changed the data type of ` generatedKey ` from ` int ` to ` long ` and modified SQL execution to use ` ResultSet . getGeneratedKeys (
refactor the ` computeIfAbsent ` method to return the result of ` _ rc . get ( ) ` instead of ` rc . get ( ) `
updated test assertions in multiple classes to reflect failures to improve clarity and accuracy of test failures during inline operations
increase keep - alive timeout from 60 to 10
deleted the HttpTestAccount001 . java file to the functionality was no longer needed in the project
updated exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and modified test assertions in ` DispatcherTest . java `
camel - 14263 : camel - cxf - allow to configure attachment . xop to be set on message with cxf message .
added a case for the ' ~ ' character in ClientUtils . java to enhance functionality for handling edge cases
camel - slack : add consumer delay option to slack endpoint
fire blockharvesting event for drop block . close # 951
updated layout constraints for the FormLayout in TranscodingTab . java to accommodate new audio passthrough checkbox for different operating systems
added a new file ` bug8057791 . java ` that implements a GUI list model with a custom Nimbus look and feel
updated flag logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and structure to enhance code
test : add test for when engine api add ethsubscribeavailable ( # 2298 )
added null check for the ' to ' variable to prevent potential NullPointerException when ' to ' is null
added a conditional check for using a dictionary in ParquetFixedWidthDictionaryReaders . java to ensure correct handling of dictionary values during reading
refactor divider calculation logic in PortraitPagedViewHandler . java to improve clarity and functionality based on device orientation to enhance readability and
added a new annotation ` Log ` in the ` org . apache . shenyu . examples . springcloud . aop ` package
do n ' t dump thread state when there be no trace
added implementation parameter to the ` combinations ` method across multiple classes to enhance cache generation flexibility based on cache specifications
added totalFrameSize ( ) to the ReferenceMap creation in FrameMap . java to ensure correct frame size calculation for reference map creation
refactor TypesafeConfigurator to improve type safety and maintainability
add karaf test base on user forum issue
added two new test methods for reporting bugs related to RFE2891944 in RFE2891944 . java to enhance debugging capabilities by providing
removed unnecessary encoding of entry key and value in HttpClientIntroductionAdvice . java to simplify the code for better readability and maintainability
replaced the unsupportedPlatformTool method with a custom UnsupportedPlatformTool class to encapsulate platform - specific exception handling to improve code clarity and maintainability by
changed the type of loopCount from double to int and updated the recovery delay calculation to use TimeUnit for better clarity to enhance code readability and
added size ( ) method to FlightConfiguration and implemented it in FlightConfigurationImpl to provide a way to retrieve the size of the map
[ drools - 7 ] fix kieaddressmanagertest and addressmanagertest so they can be run in parallel
updated VLCVideo . java to include new column and row specifications for layout adjustments to enhance the visual appearance and consistency of the
fix link to bitsquare ' s bitcoin ' s issue
updated AUTHORITY string from " talon . provider " to " twitter . provider " to align with the new provider architecture
updated user configuration paths and refactored user model parsing logic in MBoot . java to ensure correct user configuration and enhance code clarity
added a call to bind the bufferHandle in VertexBufferObjectWithVAO . java to ensure proper memory management during vertex buffer operations
refactor ServerHttpSecurity class to improve security measures
added a JUnit 5 @ Disabled annotation to the PostgresStoredProcedureIntegrationTests class to temporarily disable tests that are not ready for execution
added default HTTP headers to HttpClientProperties and updated CasCoreHttpConfiguration to set
add user password not valid exception to authentication error response
deleted the NoOpConfigPathGetter . java file to the class is no longer needed in the project
updated signingKey initialization to use Bytes . fromHexString instead of Codec . base16Decode to improve compatibility with hexadecimal encoding
updated FloatUtil to handle float values and update inline styles accordingly to ensure proper handling of float values and improve layout management
move planning fact and fact property to the correct package
updated getDefaultHeaders ( ) method to return MultiMap instead of a single Map to enhance flexibility in handling multiple default headers
rename ` enc ` to ` charset ` in ` ProxyServer ` and ` Realm ` classes to improve clarity and consistency in character encoding
added a method to retrieve the job ID from the StepExecution to ensure StepExecution is validated before accessing job information
updated comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use Long . compare for consistency to improve code readability and maintainability
switch from error to debug for http response to reduce log verbosity
updated imports in LegacyAuthenticationHandlerAdapter . java to reflect the new authentication handler structure
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
added a check for the owner public key of the filter before removing it from the network to ensure that the filter is only removed from the network
added a method to wrap an InputStream in BCPGInputStream and removed the static wrap method from PGPPublicKeyRing and PGPSecretKeyRing to simplify
use bufferedoutputstream to improve performance
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and updated column qualifier handling in ` HiveBaseResultSet
updated FocusTransitionTest . java file to improve test coverage for focus transitions
changed import statement for GWT from org . gwtproject . core . client . GWT to com . google . gwt . core . client
added a type check for ` sourceTask ` before retrieving counters in ` CounterStatsAggregator . java ` to ensure proper handling of ` MapRedTask `
added null check for readListener in HttpInput . java to ensure readListener is not null to prevent potential NullPointerExceptions during runtime
added a method to change the color selection model and refactored color handling in AppearancePanel to improve color management and enhance error handling
updated constructor argument from ' false ' to ' hidden ' in TaskHelper . java to enhance flexibility by allowing visibility of hidden tasks
make failovertimeouttest more robust by disable exponential backoff
pdfbox - 4892 : fix resource leak , a suggest by valerybokov
added DefaultParameterHandler import and updated BoundSql , SqlSource , and LanguageDriver classes to enhance parameter handling in SQL scripting functionality
updated spill state logic in LinearScanWalker . java to include loop depth checks before setting spill state based on optimization options to enhance flexibility in sp
add test case for micronaut - server compile groovy script
fix pgresultset . closeoncompletion ( ) to properly close pgresultset
[ hotfix ] set serviceadvisortype to python in serviceinfo
[ hotfix ] fix genericdatumreader thread issue
updated Path constructor to accept a List instead of a Collection and changed return type to ArrayList in PdfContentStreamProcessor to enhance flexibility in
refactor the addOutput method to use a memo variable instead of a new byte array to improve code clarity and maintainability by eliminating unnecessary
added a method to set personalisation parameters based on date , locale , email address , and distinguisher to enhance flexibility in specifying personalization options
removed redundant if statement in CodeGenerator . java to streamline the code for better readability and maintainability
removed unnecessary margin parameters from the scroll method calls in AllApps , BaseOverview , and LauncherInstrumentation to simplify method signatures for better readability
changed the access modifier of the pointer variable from private to public and added reset methods in FlatRecordReader . java to allow external access to the pointer variable
rename ` ` contentdigesthistory ' ' to ` ` bdbcontentdigesthistory ' ' for clarity
replaced specific imports with a wildcard import and modified type casting logic in CastExpression . java to streamline type handling and improve code clarity
replaced ArrayList with a boolean for determining accepted media types to improve clarity and maintainability of the code
added a new boolean variable ` false ` to the ` TaskView ` class to provide a default behavior when the variable is not set
added a method to determine if a column is auto - increment or not to ensure proper handling of auto - increment columns
improve error message when internal server error occur
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and utilize VM options to enhance performance testing capabilities
replaced ` toSimulate . add ( currentStatus ) ` with ` toSimulate . push ( currentStatus ) ` in ` BasicEventSimulationEngine
added AJP connector configuration and logging for AJP port binding in GitBlitServer . java to ensure proper handling of AJP connections and en
added type coercion logic for IntersectionClassType in TransTypes . java and created a new Intersection03 class for testing to enhance type coercion
renamed the class ` EmbeddingTest ` to ` EmbeddingITest ` to clarify the purpose of the class in the documentation
replaced direct thread creation with a native method to start the toolkit thread to improve performance by avoiding unnecessary thread creation
do n ' t compress the bundle in parallel
set surface visibility based on platform type in PApplet . java to enhance compatibility with different operating systems for surface visibility management
updated the temporary directory used in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability of the temporary
added support for both full and solidity HTTP node configurations in the application to enhance flexibility in node configuration management
added a service property to GoogleCloudFirestoreTicketDocument and implemented countTicketsFor method in GoogleCloudFirestoreTicketRegistry to enhance ticket retrieval
refactor Generate . java files to improve code organization and maintainability
removed nullable parameters from the @ ScalarFunction annotation in JsonFunctions . java and added tests for handling null values in JsonFunctionsTest . java to ensure correct
updated badge width calculation to account for DOTS _ ONLY flag to enhance flexibility in badge rendering by allowing only digits only
removed the ' final ' modifier from the ' getConfiguration ' method in FreemarkerManager . java to allow for method overriding in subclasses
add a test for invalid excluded package name patterns
added conditional logic to set ` deviceUdid ` based on platform name and SDK name in ` AppleTest ` and ` IdbRunTestsStep `
None
added null checks before binding and binding root scripts in AllAppsView . java to prevent potential NullPointerExceptions during script initialization
added a condition to exclude TEXT _ BURN from rendering in the Utilities class to enhance rendering control when text is not being printed
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database tables and views after tests
added a new variable ` parser ` to the ` SecurityNamespaceHandler ` class to retrieve the parser associated with a given namespace name to enhance functionality by
updated the conditional check in BoundedLocalCache . java and added a new test method in BoundedLocalCacheTest . java to enhance
refactor RawConnection and WebSocketAsyncConnection to extend WebSocketConnection and implement complete and flush methods to improve WebSocket connection handling and provide a mechanism for
added tests for ` all _ assertions ` methods in ` SoftAssertionsPerfTest . java ` to enhance test coverage for assertions involving specific conditions
added a new constant for TEST _ FAILURES _ EXIT _ CODE and implemented the execute method in PythonRunTestsStep to handle exit codes with specific error
added caching for xAdvances in GlyphLayout to improve performance by avoiding repeated calculations when markup is disabled
refactor score handling in TestBooleanRewrites to use Java Streams for improved readability to enhance code clarity and maintainability
update enumClass assignment to use getSuperclass ( ) instead of getEnclosingClass ( ) to ensure correct class hierarchy for anonymous classes
remove unnecessary flush ( ) call .
added a boolean flag to control drawing execution to improve performance by preventing multiple draw listeners from being removed
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java for better clarity and added a check for NOT _ APPLICABLE status to enhance code readability
changed the default value of MEDIAPARSERV2 from false to true to ensure compatibility with newer media formats
added isAcceptable method to BeanDefinitionInjectProcessor to enhance bean selection based on stereotype annotations
added permission checks for TRUNCATE TABLE operation in FolderPermissionBase . java to ensure proper permission handling for table truncation operations
refactor the ` handleProviderRegistered ` method to include a ` dueToRegistrationStateChanged ` parameter to enhance flexibility in handling provider registration states
updated random number generation in PastelColor to use a specific base color to improve precision in color generation
refactor ScriptEngineFactory class to improve code readability and maintainability
updated image rendering logic in HolographicViewHelper to utilize original and outline bitmaps instead of getDrawable ( ) to improve visual clarity and
refactor request handling to use HttpMethod . fromString for improved clarity
improve handling of phrase yield in the multi - word preprocessor
[ hotfix ] fix checkstyle violation in iochannelutilstest
added conditional logic to retrieve the output class based on the Hive Pass - through output format class name to improve flexibility in handling different output formats
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated length validation in DOMBuilder . java to ensure valid input bounds to prevent potential ArrayIndexOutOfBoundsException
updated conditional checks and method calls in ClusteringCoefficient , EigenvectorCentrality , Diameter
camel - 14263 : camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , camel - aws
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing the interface ` InterfaceWithStaticAndDefaultMethods ` with a default method implementation to
camel - 14263 : camel - core - optimize keyselector to resolve property placeholder .
replaced instances of ThreadDeath with ThreadDeath in LogResolverBean . java to ensure proper exception handling for ThreadDeath exceptions
refactor multiple Java classes to improve code organization and maintainability
updated JGit version from " 1.0 . 0 . 201106090707 - r " to " 1.1 . 0 .
updated HttpClientIntroductionAdvice to use clientKey instead of clientId directly to improve clarity and maintainability of the code
int - 1682 add transformer namespace support for messagechannel
updated BACK _ FACTOR to REWIND _ TIME and modified duration comparison logic to improve clarity and accuracy in duration calculations
added ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` and implemented it in ` JavaSEPort ` and ` Codename
updated usage and usage formatting in UtilityCommands and DocumentationPrinter classes to enhance readability and maintainability of the code
updated request attribute setting in CommunityListServlet . java to ensure consistency in attribute naming
updated method signatures in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to use mergeFiles instead of seqFiles to improve clarity and consistency in file
removed duplicate @ Override annotations in Observation . java to streamline code by eliminating redundancy
refactor ruleset synchronization logic in ProjectPropertiesModelImpl . java to improve clarity and maintainability of the code
refactor code to improve readability and maintainability by simplifying the field access logic
support snake - case naming convention for elastic meter registry ( fixes # 568 )
added GcodeCommandCreator and related methods to IController , TinyGController , and BackendAPI classes for managing job length estimates to en
add unit test for huge horizontal rule
replaced System . out . print statements with TTY . print calls in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to standardize output formatting
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability
updated condition to check if frameLength is non - negative to ensure frame length is valid before proceeding with operations to avoid potential negative values
updated return statements in IntFloatMap and IntIntMap to use default values instead of zeroValue to ensure proper handling of zero values
refactor ImageDownloadService to call display . callSerially ( new Runnable ( ) { public void run ( ) { ... } ) for
added null check for the registered variable to prevent potential NullPointerExceptions during execution
removed the native ` hasNextSibling ( ) ` method from multiple node classes to simplify the node traversal process and improve code clarity
fixed - npe be throw if redisdistributedmapcacheclientservice . getresults ( ) method call with null redisdistributedmapcachec
added logging statements for enabling and disabling the MobFileCache to improve visibility into cache management during development
refactor ColConvCCMTest class to improve code readability and maintainability
replaced ` Target ` with ` Source ` and added support for ` allowCovariantReturns ` to enhance flexibility in handling covariant return scenarios
pdfbox - 4892 : improve type safety , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new class ` X ` with
[ hotfix ] fix checkstyle violation in genericfileconsumer
added EventQueue . invokeLater ( new Runnable ( ) { { try { ... } catch ( final Throwable throwable ) { ... } finally { ... }
updated maxSize calculation to use maxTextMessageSize instead of maxTextMessageSize to ensure compatibility with binary message buffer sizes
updated steeringValue calculations in TestAttachDriver , TestFancyCar , and TestPhysicsCar to correct the steering value calculations to ensure
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison in ` PasswordEncryptionService ` to improve performance by using built -
updated JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp conversion to ensure accurate representation of date and time in seconds and milliseconds
updated the VERSION byte from 2 to 3 and modified metadata handling based on version to ensure compatibility with metadata processing for version 3 and above
added FlywayInitializerJpaDependencyConfiguration and modified FlywayAutoConfiguration to conditional on LocalContainerEntityManagerFactoryBean to enhance flex
added sorting functionality to the ClassesImpl class to ensure the classes are processed in a consistent order
added a method to retrieve the current stable state in LauncherStateManager and updated AbstractLauncherUiTest to utilize this method to improve code clarity and
refactor SharedInformer class to improve performance and maintainability
updated TestCloseScope0 . java to use MemoryScope and ResourceScope implementations for improved memory management to enhance compatibility with different Java versions
increased the timeout duration for the AdaptServerSocket test from 500ms to 5000ms to allow more time for the server to become available before failing tests
refactor CaptchaChannelProcessorTests to improve test coverage and maintainability
added a conditional to update the owning collection in MetadataImport to ensure that the item ' s owning collection is correctly updated when changes occur
added a retry mechanism for saving properties to enhance reliability of property saving failures
updated the parameter name from ' mergeDirectory ' to ' directory ' in TrackingDirectoryWrapper instantiation to improve clarity by using the correct directory reference
pmd : fix unusedimportsruletest to work with generics
added validation for Iceberg bucketed Iceberg tables in HiveIcebergStorageHandler to ensure that insert overwrite queries are only performed on
updated assertions in BootstrapTests . java to reflect changes in SAML configuration and default zone configuration
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and added a check for static classes to enhance cl
refactor getAddressVector method to use getAddressVector ( ) instead of synchronized
removed unused comments from CommentsParser . java to improve code clarity and reduce unnecessary complexity
refactor release methods in IndexWriter , Lock , and NativeFSLockFactory to include IOException handling to improve error management and ensure proper resource cleanup
changed package declaration from ` test . jdbc . datasource ` to ` org . springframework . test . test ` in ` DataSourceInitializer . java `
added a check for unary operators before transforming them in ` SpelExpressionTransformer ` and removed unnecessary imports in ` OperatorNode ` to simplify
disable type validation by default
refactor AnnotationSetScanner to use TypeElement instead of DeclaredType to simplify type handling and improve code clarity
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and MySQLTableLockTest to ensure stability
refactor logging application listener to ensure log file properties are applied to system properties only if they are not null
added a method to check for HTTP redirects and refactored the request method to accept a HttpURLConnection object to enhance HTTP redirect handling and
added constants for service and version mapping in ServiceCombConstants and updated microservice initialization in MicroserviceFactory to enhance code readability and
updated the method call from ` proc . getName ( ) ` to ` proc . getBeanName ( ) ` to ensure the correct bean name is used
updated DB _ PATH _ REGEX to static and changed DB _ PREFIX from " test _ " to " test _ " to improve memory
updated the method to retrieve unread count from HomeDataSource instead of returning numberNew to improve accuracy of unread count retrieval
added a new test method for virtual thread pool previews in DistributionTests . java to enhance testing capabilities for virtual thread pools
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and updated price list building logic in Wallet to enhance flexibility
added null check for the user before retrieving user settings to prevent potential null pointer exceptions
updated LocalFileSystem to use ` getAbsoluteFile ( ) ` for resolving relative file paths and added a new test for relative wildcard matching to enhance file
added constants for maximum dimensions and updated bound calculations in ComponentBuilders to ensure component dimensions do not exceed defined limits
added logging for maximum retries in CommonsHttpSolrServer and marked a deprecated method for setting connection manager timeout to improve error handling and clarify the
added exception handling for document creation errors to improve error reporting for document creation failures
refactor filename formatting in CrateType . java to use a lambda expression for improved readability to enhance code clarity and maintainability
added checks for empty or non - numeric words in SpellChecker . java to ensure robustness by preventing invalid spelling of words
corrected a typo in the constant name from " HelloWorld . message " to " HelloWorld . message " to ensure consistency in naming conventions
refactor FileDisplayActivity to use a dedicated method for retrieving OCFileListFragment to improve code readability and maintainability by reducing duplication
added exception handling in the SnapPuller class to improve stability by preventing application crashes during replication
updated the method call syntax in StoreCachedTest . java to ensure compatibility with the updated serialization method
updated the constructor of StreamerLoader to use theMaterials instead of materials to ensure correct handling of materials when initializing the StreamerLoader
updated GWT version references in DependencyBank . java to ensure compatibility with new library versions and improve code clarity
added device profile and recycled view pool configurations in AppsContainerRecyclerView . java to optimize app recycling behavior based on device profile settings
added a new test method to verify that the Android binary cross - cell integration tests work correctly
improve baritone control ' s ability to cancel feet . close # 169
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality and error handling during procedure creation
added null handling for bitmap filtering in FilterOperatorUtils and implemented a new test for range filtering in NullHandlingEnabledQueriesTest to enhance functionality
added validation for method signature in JDynamicInvokeExpr . java to ensure bootstrap method signature requirements are met correctly
( chore ) camel - jms : use http instead of localhost
added a call to clear runtime options formatters in CucumberInstrumentation . java to ensure proper formatting of output values during instrumentation
updated contact list type from RegisteredServiceContact to DefaultRegisteredServiceContact and refactored username retrieval logic in PrincipalAttributeRegisteredServiceUsername
updated workspace label adjustment logic in DeviceProfile . java to ensure proper visibility of workspace labels based on icon positioning
updated assertions in ReplicationFactorTest for clarity and consistency to enhance readability and maintainability of test cases
llvm : fix context extension patching for pre - initialization
added JUnit @ Ignore annotations to ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to temporarily disable tests
replace RuntimeException with JsonIOException in Gson . java to improve error handling for JSON serialization issues
replaced ` Integer . valueOf ( values [ 0 ] ) ` with ` Integer . parseInt ( values [ 1 ] ) ` in ` VisualScoreTagTest
updated error messages related to copying attributes to clarify error context for better debugging
[ hotfix ] fix check for low level consumer segment name
added startActivity and startActivityForResult methods to ShadowFragment and corresponding test cases in FragmentTest to enhance activity management functionality and ensure proper
updated the return statement to use the current time instead of the current time to ensure accurate time representation for accurate date handling
updated target CPU options to include " x86 _ 64 - none - linux - android " to ensure compatibility with additional Linux environments
added a method to delete all file in an account and implemented deletion logic in ManageAccountsActivity to enhance file management functionality and improve error handling
updated command line option syntax in SchemaCrawlerCommandLine to improve clarity and consistency in command execution
added a static method ` createSuiteDescription ` to create a ` Description ` instance with a ` uniqueId ` parameter to enhance flexibility by allowing
replaced MultiFormatReader with a direct call to decode barcode using MultiFormatReader to streamline the image decoding process to improve performance and reduce memory usage
removed the ` ImmutableList < String > ` parameter from the ` BuckTarget ` constructor and related classes to simplify the constructor signature and eliminate unnecessary
added tests for range checks past end in GWCZoomContextFinderTest to ensure correct functionality of zoom context retrieval
added a new configuration key for dependency tracking to enable conditional activation of dependency tracking based on configuration settings
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
do n ' t announce new keyspace if already exist
replaced ` bgImage ` with ` BufferedImage ` for improved image handling in ` WelcomeWindow . java ` to enhance image rendering efficiency
updated tuner configuration handling to include a name parameter for clarity to enhance readability and maintainability of tuner configuration management
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a new test for sh binary functionality to enhance test coverage for sh binary rules
added a condition to set includeString to " db : hsqldb " in TestFilter . java to ensure compatibility with HSQLDB databases
modified the peek method call in JavabinLoader . java to ensure proper handling of the input stream peeked
do n ' t materialize host exception if there be no stack trace
refactor service loading logic in GraalServices . java to ensure proper handling of service loading based on Java version compatibility
add test case for duplicate command handler resolution
[ flink - 20865 ] [ runtime ] add fine - grained resource management feature
fix entityfish not be able to render a block inside an entity . close # 703
camel - 14263 : camel - ftp component should use source code generate configurer to avoid reflection configuration .
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class to clarify the purpose of
added a check for empty items in AppsContainerRecyclerView to prevent further processing when no items are available to enhance stability by preventing unnecessary processing
added a conditional bean definition for the reporter bean in ZipkinAutoConfiguration to ensure the reporter bean is only instantiated if it does not already exist
[ log4j2 - 1343 ] fix xmllayout to use stringbuilder instead of string
added support for " omitHeader " parameter in multiple response writer classes to enhance response handling by allowing specification of response headers
update getPropertyName method to use getPropertyNumber ( ) instead of _ id and add a new test class TestEscherProperty for property naming functionality to
updated method call from ` getBuildRuleType ( key . getSimpleName ( ) ) ` to ` getDescriptionType ( key . getSimpleName (
refactor soothierarchy . remove ( m ) to make it more efficient
added null checks for ` disputesPerTradeIdItems ` and ` disputesPerDelayedPayoutTxIdItems ` to ensure robustness by preventing
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified ` DatabaseSchemaCrawler ` to
wallet : set confidence type to not _ seen _ in _ cache for send transaction
refactor HttpClientIntroductionAdvice to streamline argument handling for Body and Header annotations to improve code readability and maintainability by reducing
fix craftinghelper . processconditions ( ) for json file with conditions
hbase - 2594 addendum try to catch exception in hregion # close ( )
refactor length checks in Credential . java for improved readability to enhance code clarity and maintainability
[ java ] do n ' t create image subscription if it do n ' t exist .
modified the destroy method to throw an exception instead of returning a boolean to simplify the process destruction logic
added a condition to check if the database type is Oracle to ensure compatibility with Oracle database types
( chore ) camel - mail : do not try to connect if store be null
throw parsecancellationexception if there be more than one token in the query that have not be consume
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete
added a method to retrieve the data file name in Model . java and updated HMMModel initialization in Voice . java to improve code clarity and
added email domain property and getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enhance flexibility in managing email domains
added REQUEST _ READ _ TIMEOUT , REQUEST _ CONNECT _ TIMEOUT , and REQUEST _ READ _ TIMEOUT properties to Configuration . java and updated ViewRegistry . java
added a conditional check for deferred concepts before executing the processDeferredConcepts method to ensure that deferred concepts are only processed if they are not empty
added Redis category functionality to RedisServiceRegistryTests to enhance test coverage for Redis services
updated ` FindDeprecatedMethodsTest ` to use ` ParameterizedTest ` with ` @ NullAndEmptySource ` and ` @ ParameterizedTest ` for
updated paintComponent method calls in OverlayPanel and WaterfallPanel classes to ensure proper rendering of component elements in the rendering pipeline
removed unused imports from multiple classes to clean up the code and improve maintainability
updated event signature handling in ContractEventTriggerCapsule and LogEventWrapper classes to include event signature full and event name details to enhance clarity
updated the filter condition to ensure the filename ends with " _ " sessionId to enhance filtering accuracy
replaced the clearRect method with a fillRect method to customize the background color to enhance visual clarity by using a customizable background color
added an else clause to handle cases where no invoker is available in the PackageBuilder class to improve error handling for cases where no invoker is available
removed debug print statements from multiple Java files to clean up the code and improve readability
added a null check for scoreDocs [ 0 ] and scoreDocs [ 1 ] in TestFieldCacheSort . java to ensure that scoreDocs [ 0
replaced ` getEntityKeys ( ) ` with ` Set . copyOf ( ) ` for copying entity keys in ` DeviceState . java ` to ensure
added a check for zero - time values in ColumnSnapshotGenerator and implemented a utility method for handling zero - time values to ensure proper handling of
changed variable names from offererMultiSigPubKey to offererBtcPubKey and takerBtcPubKey for consistency to improve clarity and
updated generic type declarations from ` Map < ? , ? > ` to ` Map < ? , ? > ` for ` vsContext ` across
[ drools - 6662 ] fix incorrect ksession configuration when edit a kbase
updated HiveMetaStoreClient instantiation to use ' this . conf ' instead of ' conf ' to ensure proper configuration handling for the HiveMetaStoreClient
added a condition to return early if modalness matches mModalness to optimize performance by avoiding unnecessary operations
added a test for creating codec capabilities from profile levels in ShadowMediaCodecListTest to ensure proper handling of codec capabilities with different profile levels
fix # 5460 ( when enter key use , focus be wrong )
added validation for width and height parameters in SunVolatileImage , X11SurfaceDataProxy , and XRPMBlitLoops classes and created a new
updated the string from " . " to " \ u00a0 " in FormatData _ uk . java to ensure compatibility with Unicode standards
updated AsyncStressTest and StressTest classes to use AtomicInteger instead of int arrays for loops to improve thread management and enhance concurrency handling
added handling for beta flavour in AchievementsFragment and LeaderboardFragment to improve user experience by providing clear feedback on unavailable a
added access , name , and desc attributes from the context in SearchMethodVisitor to enhance the context handling in the Search class
added sleep functionality and exception handling in IoTDBInsertWithoutTimeIT to improve test reliability and handle interruptions gracefully
removed redundant checks for externalProcess before setting duration in DLNAResource . java to streamline code for better readability and maintainability
updated XML element names from " @ XmlElement " to " @ XmlRootElement " in ResequenceDefinition . java and StreamResequencerConfig . java to
refactor transaction handling by introducing acquireTxn ( ) and acquireTxn ( ) methods to improve transaction management and enhance error handling during
flume - 1623 . thrift thrift client should use ssl . keymanager . algorithm property to determine default key manager .
refactor PrimitiveWrapperClassConstructorToValueOf to use TreeVisitor instead of JavaIsoVisitor for single source applicability testing to enhance test
do n ' t exit the blockmania when the tab key be press
updated access specifier constants from PACKAGE _ PRIVATE to NONE across multiple files to ensure consistency in access specifier handling across the codebase
renamed the method ` unHandled ` to ` unhandled ` and updated error logging to use ` log . error ` instead of ` diags
updated stripe retrieval logic in OrcInputFormat . java to ensure correct retrieval of stripe statistics from orcTail
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
fix myhentaicomics ripper to use https instead of http
added functionality to display the current JAR version in the application
replace split ( ) with splitTokens ( ) in Sketch . java to improve token processing accuracy
added default rotation settings based on keyboard selection in ConsoleActivity and updated input connection handling in TerminalView to enhance user experience by allowing customizable
changed the type of ` hq ` from ` HitQueue ` to ` PriorityQueue < ? extends ScoreDoc > ` and added a suppression warning
added null check for ownerConnectionAddress in ClientSmartListenerService to prevent potential NullPointerExceptions to enhance stability by preventing potential NullPointerExceptions
( chore ) camel - base - engine : add support for headermapfactory property to camel - base - engine
updated formatting in JavaCompiler and Diagnostic classes to improve code readability and maintainability
int - 1682 add support for jms queue to jms outbound gateway
updated the parameter from ` i + 1 ` to ` i + 2 ` in the ` expecting ` function call to correct the argument number for proper functionality
added null check for additionalClasspathURLs and improved error handling in AbstractScriptProcessor . java to
added support for PostgreSQL statement handling in PooledConnectionImpl to enhance compatibility with PostgreSQL connections
make cassandraiotest more robust by refresh size estimate
log warn instead of error
relaxed the ordering of candidates in CompactionController and added a new test for aggressive fully expired TTLs in TTLExpiryTest to ensure
fixed - rBlockingDeque , rBlockingQueue , rRedisQueue , redissonblockingdeque , redissonblockingqueue , redissonblockingdeque
updated printMap calls to remove " Env " and " Ports " parameters to simplify output formatting for better readability
refactor Engine class to improve code readability and maintainability
replaced Stream . of with entrySet ( ) . stream ( ) . sorted ( ) for clarity to improve code readability and maintainability
[ issue # 4833 ] remove unused acl rpchook ( # 4834 )
updated condition from " numIndexDims " to " numDataDims " in BKDWriter . java to ensure correct handling of dimension counts
[ hotfix ] fix checkstyle violation in notebookserver
updated the formula parameter from ' funN ' to ' lt ' in the ExpressionNodeEvaluator to correct the formula evaluation logic
[ hotfix ] fix checkstyle violation in nodeidaccessor
improve error message when volume be not attach to a storage pool
changed method visibility from public to package - private in ItemWriter . java to allow external access to these methods
updated the variable name from " empty " to " test " in RoombaHandlerTest . java to clarify the purpose of the variable
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest ` to
replaced FSDirectory with RAMDirectory in TestNorms . java to utilize a more efficient directory structure for testing
added a static mLineHeight variable and modified the calculation of lineHeight to ensure lineHeight does not exceed predefined limits
refactor WalletAppKit class to improve code readability and maintainability
no effective change - remove unused variable
replaced the method of removing the JCheckBoxMenuItem with a local variable to improve code readability and maintainability by reducing duplication
added resolve ( String var ) and replaceTokens ( String template ) methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes to enhance
do n ' t set bsqblockchainexplorer if it ' s n ' t there
added session attribute management methods in StandardSession and Session classes to enhance session management by allowing retrieval and modification of attributes
added assertions to verify the name and along values of the plain bean in TestDbJson _ List to ensure accurate representation of the bean ' s properties
updated averages initialization to use initialPageCount instead of pageSize to ensure averages accurately reflect the initial page count
refactor CommandLineLauncher to improve code readability and maintainability
added JDBC data source configuration and transaction manager in MetricsApplication to enhance database management capabilities for HSQLDB connections
changed the HTTP service implementation from UnauthenticatedHttpService to HttpService to align with the updated HTTP service implementation
pdfbox - 2576 : apply non - stroked java composite instead of stroked white
removed synchronization from the close method in DocumentsWriter to simplify the method signature and improve thread safety
added getter and setter methods for property properties and validation constraints in UiBinding . java to enhance UI component functionality to improve flexibility in managing UI
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for better clarity and consistency to enhance readability
do n ' t update the stored copy of the tree for a full save
replaced the ` condition ` string with a ` Pattern ` pattern in the ` parseAffix ` method across multiple classes to enhance flexibility
updated KrakenFee lists to use diamond operator to improve code readability and maintainability
removed unused import of CharTermAttribute in DefaultIndexingChain . java to clean up the code and reduce unnecessary dependencies
refactor NBJavacTrees class to improve code readability and maintainability
added a check for unsupported encoding in VectorizedPrimitiveColumnReader to ensure proper error handling for unsupported encoding
added MarkerFactory for better logging in HttpSolrCall . java to improve clarity and maintainability of log messages
destroy the metadata service proxy after service instance change
add default value for maxlevel to prevent infinite recursion
updated error message construction to check for null changelogId before recording to improve clarity of error messages for better debugging
test : add try harder hint
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompile
updated event handling logic in ObjectStore to ensure events do not exceed defined limits to prevent exceeding the maximum number of events
no effective change - code cleanup - remove unused import
fix memory leak in entityawairedworldprovider
intrinsifyarraycopyphase : remove unnecessary type check
[ test ] remove unused logger
updated stack trace handling in Reporter and removed unused WantedAnywhereAfterFollowingInteraction class to improve clarity and maintainability of stack trace
added validation checks for ownerAddress and key address in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure ownerAddress and key
( scott phillips ) fix sorting of command .
chore ( deps ) : upgrade gapic - generator - java to v2.20 . 3 ( # 269 )
removed redundant properties from metadataProperties in BaseSingleTreeBuilder . java to streamline metadata handling and improve code clarity
updated AsmLoader constructor to accept a parent class loader parameter to enhance flexibility by allowing dynamic class loading
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated Java2TypeScriptTranslator to conditionally export the namespace declaration based on whether the class is a definition scope to ensure correct declaration handling for non -
replaced the EmptyServerHandler with an AbstractHandler for handling requests in HttpClientTest to improve request handling and ensure proper output stream management
updated listener parameters in HelloInput . java to streamline input handling for pause and rotation actions
added a null check for the ` lhs ` variable in ` AbstractSqmPath . java ` to ensure ` getLhs ( ) ` is not
updated package declarations in multiple test classes to ensure consistency and clarity to improve code organization and maintainability
refactor image creation logic in AwtCanvas . java for improved clarity and efficiency to enhance code readability and ensure proper handling of
add hotspotgraalruntime . startuplibgraal ( ) and hotspotgraalruntime . startuplibgraal ( ) method .
[ beam - 8470 ] fix flaky pardo test
replaced the removal of an element from responses with a poll ( ) method and added a null check for the response to improve responsiveness by ensuring responses are
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
log warn if max size configuration do not allow any data in the map
update return statements to use " LST " instead of " AST " in multiple Java files to enhance clarity and consistency in error reporting
updated calculations for scoreablesPerThread and nThreads in ThreadedAcousticScorer . java to correct the logic for determining the
nethooks : return null instead of throw an assertionerror
fix test failure on window
added a new method ` makeString ( Function < ? super T , Object > function , String start , String separator , String end ) `
updated OidcServicesManagerRegisteredServiceLocator to use a constant for the default precedence
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related classes to conditionally filter weak associations based on a specified rule to
refactor Deflater class to improve compression handling efficiency
added error handling for IOException in Font . java to ensure that IOException is properly propagated to the caller
added a check for null or empty content in VersionTypeBinding . java to return a new Version instance when the content is empty
changed the return type of loadAttractionsFromLocation from List < Place > to List < Place > in NearbyListFragment . java to simplify
convert content - type check to be case - insensitive
add support for openssh - dsa signature format ( ssh - dsa ) .
updated updateItemLocationsInDatabaseBatch method to accept a boolean parameter for folder suggestion to enhance flexibility in managing folder names based on
replaced specific imports with a wildcard import and added a new annotation for third access in JPA to streamline imports and enhance entity management functionality
updated ` DefaultOAuth2RequestFactory ` to ` DefaultOAuth2RequestFactory ` and added a new method ` getUserApprovalRequest ` in ` Tof
fix influx tag value not apply to delegate ( fixes # 645 )
refactor to use a new dump method for better readability
updated cookie key check from " Cookie " to " Cookie2 " to ensure correct identification of cookies
added a static method classMetadataUnsupported ( ) in Platform . java and updated references in Subject . java to use Platform . classMetadataUnsupported ( ) instead
added a button to clear all tasks in OverviewActionsView to enhance user experience by providing clear - all functionality
updated the ` desiredRepoVersion ` variable to be final and modified related logic in ` ClusterStackVersionResourceProvider ` to enhance code cl
remove memoryleaktest because of memory leak
updated the URL generation in ServletTester to use localhost for dynamic dynamic IP address retrieval
added a condition to check if ` MVdWPlaceholderAPI ` is enabled in ` ServerListener ` and updated ` BAN _ DELETER `
wait for cluster size eventually before start node
added a singleton holder for FFI provider and a singleton method to retrieve it to enhance flexibility in managing FFI provider instances
add unit test for hierarchical w / o file list
added null checks for ` objectToSave ` and ` collectionName ` while handling null values in ` MongoTemplate ` to ensure robustness by preventing potential
updated position initialization to use NODE _ LIST instead of NOT _ ITERABLE for better clarity to improve code readability and maintainability
added an accTradeValue field and corresponding getter method in BithumbTicker . java to track accTradeValue in BithumbTradeServiceRaw .
updated log messages in RealtimeSegmentDataManager for clarity and consistency to improve readability and maintainability of log messages
replaced hardcoded maxParallelThreads with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to improve code readability and maintain
replaced ArrayList with CopyOnWriteArrayList for header and data readers to improve thread safety and performance in concurrent scenarios
refactor multiple dictionary - related classes for improved consistency and clarity to enhance maintainability and readability of the codebase
added null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during execution
( chore ) camel - msv : fix flaky test
updated condition to check if ' accountCapsule ' is greater than ' currentCycle ' to ensure correct validation of ' beginCycle ' to prevent potential errors
increased the maximum number of generated random value strings from 6 to 10 in JdbcExpiringCodeStore and updated assertions in tests to accommodate
added a check for UniqueConstraint in the StandardObjectChangeFilter class to ensure that the filter matches the table associated with the UniqueConstraint object
refactor MediaDetailFragment to improve handling of language descriptions and descriptions to enhance readability and maintainability of the code
log recoverable exception instead of arrayindexoutofboundsexception
added support for filtering images by reference and values in ListImagesCmd and ListImagesCmdImpl to enhance functionality by allowing users to filter images
camel - 14263 : camel - jms - add support for jms error handler option to all endpoint - jms component
added checks for " # ifndef " , " # endif " , and " opsToExclude " in OpExclusionUtils . java to ensure proper handling
added return statements in DatabaseCommand . java to ensure proper handling of database operations
updated HonestPoliticianExample to use new Politician instances and added additional Politician parameters to enhance clarity
use stringutils . isnotblank instead of length > 0
camel - 14263 : camel - restlet should use port number if specify
removed unused import statements from SchematicFormat . java to streamline the code by eliminating unnecessary dependencies
added a system property " hive . query . max . length " set to 100MB in QTestUtil . java and removed overridden configurations in SessionState .
changed access modifier of ` userName ` and ` securityMgr ` from public to private and refactored the ` createHttpConnector ` method to
( chore ) camel - kafka : fix typo
updated condition in HiveSparkClientFactory to check for " spark . app . name " instead of " spark . app . name " to ensure correct application
changed variable name from whiteName to includedName for clarity to improve code readability and maintainability
simonstewart : restoring a window ' s size after it ' s restoration and added a new maximize window handler
updated methods to use ` getMainCellBuckOutBaseDir ( ) ` and ` getCellBuckOut ( ) ` instead of
added an assertion to verify the presence of " entity expansions " in the error message to ensure that the error message accurately includes " entity exp
updated table offset and length calculations to use bitwise operations to ensure consistent unsigned comparison for integer values
added a customizable check for the form ' s customized state in DirectMethodHandle . java to ensure that the form ' s customized state is
refactor LineChartRenderer to improve coordinate extraction logic to enhance readability and maintainability of the code
refactor flavors handling in AndroidBinaryDescription to use a unified for loop for checking flavors to improve code readability and maintainability
updated buffer index from offset to i in LwjglGL11 . java to ensure correct buffer generation for the correct OpenGL context
added new classes for Property , PropertySuper , and TestClassResolutionFail to enhance error handling for NoClassDefFoundError during property resolution
only remove shutdown hook if enable
updated FilterChainProxy to use FilterChjainProxy instead of FilterChainProxy and simplified constructor parameters to enhance clarity and maintainability of the
replaced ` Collections . sort ( intermediateResult ) ` with ` java . util . Arrays . sort ( values , 0 , size ) ` for improved
added checks to ensure the schema is loaded before loading tables in MetaDataBasedSQLCompletionProvider to prevent potential errors when attempting to load tables
initialize baseType to null in DatabaseInfoRetriever and set literalPrefix , literalSuffix , and localizedTypeName in MutableColumnDataType to ensure baseType is set to
updated HTML links in multiple Java files for consistency and clarity to improve code readability and maintainability
updated instance retrieval methods in EvaluatorFactory to use final static INSTANCE to enhance immutability and enforce immutability of the INST
updated target platform references from " osx _ x86 - 64 " to " linux _ x86 _ 64 " in BuildCommandIntegrationTest
added sound effect management functionality to AllAppsView to enhance user experience by allowing customizable sound effects
changed the exception type from Exception to IOException in the main method to handle potential IOException during execution
added a line to enable granularity for left axes in BarChartActivitySinus to enhance chart visibility for better user experience
refactor version comparison logic into a separate method to improve code readability and maintainability
updated ContextHandlerGetResourceTest to utilize MavenTestingUtils for target testing directories and added OS _ ALIAS _ SUPPORTED check to ensure tests are only
added ` close ( ) ` method to ` Connection ` , ` JsonAsyncHttpPinotClientTransport ` , and ` PinotClientTransport ` classes
refactor ` awaitAppend ` method to use ` BlockingQueue < ILoggingEvent > ` instead of ` int ` for event count to
[ beam - 4142 ] make hadoopresourceid test more robust
removed unused imports from IsometricStaggeredTiledMapRenderer . java to clean up the code and improve readability
removed duplicate call to handleService . unbindHandle in ItemServiceImpl . java to streamline code by eliminating redundancy
refactor Config and Attribute classes to improve code organization and maintainability
simplified the condition for touch tracking in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated NavbarButtonsViewController to set the taskbar navigation button ' s tint based on the UI mode
replaced the abort method with a throw statement in PolyBenchLauncher . java to improve error handling by throwing an exception instead of aborting
replaced manual byte extraction for bootstrap method index , nameAndType , and member index with local variables to improve code readability and maintainability
added BlockFormattingContext parameter to the findBox and findElementBox methods to enhance flexibility in managing block formatting contexts
added a method to retrieve the error output from the launched process and improved error handling in WorkerProcess and WorkerShellStep to enhance error
added a null check for the operator in CheckedListReplaceAll . java to ensure that NullPointerExceptions are handled correctly to prevent runtime exceptions
added conditional logic to handle write operations based on the _ testFill variable to improve reliability of write operations during SSL connections
added listener registration and default value handling in DeviceFlag and FeatureFlags classes to improve responsiveness to device configuration changes
added JUnit Ignore annotation to GatewayRSocketIntegrationTests to mark the test as ignored due to version 2.2 . 0
removed unused import of MalformedURIException from StandardRequestHandler . java to clean up the code and improve readability
update instructorfeedbackeditpage to use javascript instead of javascript
refactor synchronization and subscription handling in KrakenStreamingTradeService to improve code readability and maintainability
replaced System . err . println with System . out . println for clarity in ChangeableUrls . java to improve readability of log messages
modified SparseRowMatrix constructor to accept a randomAccess parameter for creating random access vectors to enhance flexibility in initializing the SparseRowMatrix with
cloudstack - 4823 : do n ' t persist usage event when volume be delete
updated file input / output stream initialization to use dynamic Hive job configuration to enhance flexibility in handling different Hive job contexts
[ beam - 8470 ] use the late guava version in udftestprovider
refactor memory call graph builder to use a dedicated resetInternalState method to improve code readability and maintainability
fix nullpointerexception in conference chat manager
save ( ) now throw illegaluseractionexception if file can not be write
added a new ` FolderSyncActivity ` class and integrated it into the ` DrawerActivity ` to manage folder synchronization functionality to enhance
[ hotfix ] [ test ] close network buffer pool in sequentialchannelstatereaderimpltest
make spanishtreenormalizer more robust to punctuation
use getPackedValueSlice instead of reader . pointvalue ( ) in simpletext bkdwriter
added a new ` LocaleRandomizer ` class and corresponding tests in ` InternalRandomizerRegistry ` and ` LocaleRandomizerTest ` to en
added assertions for font types in MimeTypes . java and implemented a method to validate font metadata to ensure correct MIME type handling and validate font metadata
[ netbeans - 4071 ] upgrade to version 9.0 . 0 and auto upgrade
removed unnecessary lines of code in TCPTransport . java to improve code readability and maintainability
modified the read method to set the read timeout to zero based on the block condition to ensure that the socketWrapper does not timeout when blocking
updated WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to increase the initial delay for better metrics monitoring
no effective change - fix typo in exception message
added imports for DateTime and DateTimeFormat , and implemented date parsing for custom field entries in ThirdEyeJiraClient to ensure proper handling of date values
refactor HeadersGenerator and PriorityGenerator to utilize a new PriorityGenerator for managing priority frames to improve code clarity and maintainability by
added a constant for maximum scalar replacement size and updated the condition for scalar replacement to ensure scalar replacement does not exceed defined limits
added DATE _ TAKEN to the projectionTest array and modified sorting conditions for folder and file sorting in MediaProvider . java to enhance media retrieval
updated drawImage parameters in TexturePacker2 . java to correctly account for image dimensions to ensure correct positioning of images in the packing process
added a ServletContextHandler for handling WebSocket upgrade filters in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to enhance
added shutdown calls for validateSignService and trxHandlePool in Manager , NodePersistService , and NodePersistService classes to ensure proper resource management and
added RawJsonRequestBodyAnnotationProcessor to JaxrsSwaggerGeneratorContext and implemented RawJsonRequestBody processing in Echo to enable processing of raw JSON
added a new method ` newTarget ( int targetType , TargetExtension extension ) ` to create a ` Target ` instance with specified target type and extension to
updated the return type of ` ListBeanContainer ` to an array and added a new test class ` BeanContainerTests ` in ` AllUtilTestsSuite
hbase - 26937 addendum fix typo in testmetricsregionserver
camel - 14263 : camel - core - optimize to reduce memory usage
added deviceId setting to position in TeltonikaProtocolDecoder to ensure the position is correctly associated with the device ' s ID
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( buildFile , Charset . UTF _ 8 ) . readFirst
added a null check for the ' operator ' in the ' visitAssignop ' method and created a new test class for it to ensure proper handling of
added a boolean variable ` enableAccountHandling ` to ` FirstRunActivity ` and updated ` BaseActivity ` to conditionally call ` mixinRegistry . onCreate
refactor IsochroneResource to use heuristically find the main connected component of a MultiPolygon to improve polygon selection logic and enhance
added a path parameter to the DrillViewTable constructor and updated related methods to enhance flexibility in referencing views within and outside schemas
http : / / issues . apache . org / jira / browse / netty - netty / browse / netty - netty -
updated array types from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray class for cloning arrays to
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE in HiveConf and updated LlapIoImpl to use this new thread pool to
added conditional initialization for sun . security . ssl . Debug and sun . security . ssl . SSLLogger based on Java version to enhance security
added bounds checking for latitude and longitude in LatLonGrid and implemented a new test for growing polygons in TestLatLonGrid to enhance
danielwagnerhall : fixing issue with visibility of invisible element .
added an additional parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated related logic to enhance functionality to support insert overwrites during
added a test for retrieving the enclosing object of a Reflector class in ReflectorTest . java to ensure correctness of the Reflector ' s enclosing object
added " auto _ generate _ android _ facet _ sources " configuration to ConfigIgnoredByDaemon and updated IjProjectBuckConfig to use this new
updated HubChangeExecListener to include detailed message messages for execution failures to enhance clarity of failure reporting for Liquibase Hub projects
added properties property support to the Link class and corresponding getter and setter methods to enhance link configuration flexibility by allowing overrides of properties
removed @ EqualsAndHashCode annotations and added toString method in YamlConfigFileDTO to enhance code clarity and provide a readable string representation of the object
[ java ] fix raw type in awaitableserverclientcallconfiguration .
added CallerSensitiveAdapter support to the forName method across multiple classes to enhance class loading flexibility by allowing caller - sensitive class loading
replaced ` isEmptyOrNullString ( ) ` with ` IsEmptyString . emptyOrNullString ( ) ` in ` RequestItemRepositoryIT . java ` to
replaced ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to enhance thread management for better performance
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
refactor TimeStepdefs and related classes for improved clarity and functionality to enhance code maintainability and facilitate future enhance
remove the spark _ isolated and spark _ recessive item from the mod banners pattern . close # 169
updated the ` RestProxyFactory ` to use ` exchangeSpecification . getUri ( ) ` instead of ` exchangeSpecification ` to ensure correct URI
removed debug print statements from RecordGenerator . java to streamline output for better readability and maintainability
( chore ) camel - kafka : disable autocommit by default
updated lock handling in Liquibase and LoggingExecutor classes to ensure proper management of database change logs
updated suppress warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to include deprecation warnings to enhance code clarity and maintainability by
added synchronized keyword to several methods in Database . java to ensure thread safety when accessing shared resources
refactor property handling in SpringBootAutoConfigurationMojo to use a new ResolvedProperty class to improve clarity and maintainability of property resolution
updated currency symbol from ' baseSymbol ' to ' counterSymbol ' in the adaptTicker method to ensure accurate ticker adaptation for the correct currency pair
( chore ) camel - core : fix checkstyle issue
updated the method to retrieve the test ID from a system property instead of generating a UUID to improve flexibility by allowing dynamic retrieval of the test ID
[ hotfix ] fix concurrentmodificationexception in defaultjobparametersconverter
updated package - info . java files to improve documentation clarity
changed the heightScale setting from 256 to heightScale in FractalHeightMapGrid to allow dynamic adjustment of the height scale dynamically
removed unnecessary type check for ` obj ` in ` SecurityConfig . java ` and replaced assertEquals with assertNotSame in ` SecurityConfigTests . java `
make dump - partition - id default to false
added unit tests for UTXOSet functionality in UTXOSetTest . java to ensure correct handling and verification of TX outputs in mock transactions
[ java ] ignore unused variable name for java 9
pdfbox - 2576 : avoid npe , a suggest by valerybokov
updated job restart property handling in JsrJobOperator and added a test for new job parameters in JsrJobOperatorTests to ensure correct behavior of job
added a protected boolean field ` disallowBatchOnCascade ` and a corresponding method in ` DatabasePlatform ` to provide a way to control batch - based batch
removed duplicate initialization of principal in JaasAuthenticationHandler . java to streamline code by eliminating redundancy
refactor MDC logging to use a custom executor service for core closure to improve thread management and ensure proper cleanup of resources to prevent resource leaks
added null check for mActionsView before setting visibility to prevent potential null pointer exceptions
refactor RunIdIncrementer to handle null parameters safely to improve code robustness and prevent potential NullPointerExceptions
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added unit tests for device matching in SchemaRegionUtil to ensure correct functionality of device matching tests
catch exception in metricseventbus # invoke ( runnable ) ( # 5663 )
added a conditional check for max before calculating mCentralities in EigenvectorCentrality . java to ensure mCentralities is only updated when max is non
refactor registry creation and naming for improved clarity and consistency to enhance readability and maintainability of the codebase
updated geometry data handling to use unsigned byte arrays instead of float arrays for vertex and color arrays to ensure proper serialization and deserialization of color data in
updated the Amplifier value from 2 to 0 in BlockEntityBeacon . java to ensure proper alignment of the beacon ' s icon
refactor TubeCalc class to improve code readability and maintainability
change the default value of ` enabled ` from ` true ` to ` false ` in ` HttpClientConfiguration ` and ` ServiceHttpClientFactory ` to
updated DEFAULT _ GROUPS to use wildcard generics for better type safety to enhance type safety and prevent potential ClassCastExceptions
added @ key headful annotation to JList selection in Nimbus L & F to address issue 8057791 related to incorrect colors
make the thread daemon to allow speedment application to exit via main method completion
updated version parsing logic in ItemLexicon . java to ensure consistent parsing of version without leading zeros
added a call to ` ReflectionCheckLinker . checkReflectionAccess ( type ) ` in ` JavaAdapterFactory . java ` to enhance reflection access checking
add lazysessioncreation = true to all test
added ` initIOContext ` method to ` CombineHiveRecordReader ` , ` HiveContextAwareRecordReader ` , and ` RCFileRecord
deleted the ClassLoaderHolder class and updated LoaderManager to use getCurrentClassLoader ( ) instead of getClassLoader ( ) to simplify the code by directly obtaining the
added a method to check if new workspace roots are available and updated file handling logic to ensure that only valid source directories are processed during configuration changes
added exception handling around registerSessionCallback and unregisterSessionCallback to ensure robust error handling and prevent application crashes
updated index creation paths in TestBackwardsCompatibility . java to ensure compatibility with different test configurations
added a new method ` createAndStart ` to ` AkkaRpcServiceUtils ` for creating and starting ` AkkaRpcService ` to
added a retry mechanism in TestExportSnapshot to set a maximum attempt for retry attempts to improve reliability during mapreduce operations
pdfbox - 2576 : fix typo , a suggest by valerybokov
added a new test class SslConnectionTest to verify SSL connection handling to ensure proper resource management and prevent potential resource leaks in SSL connections
added validation for IPv4 and IPv6 addresses in InetAddress . java and NetworkInterface . java to ensure that invalid address types are handled correctly
added a test for date serialization in a collection in DefaultTypeAdapters to ensure correct serialization of dates in a JSON format
refactor Message class to improve code readability and maintainability
nifi - 10979 - fix npe in putdatabaserecord when use prepared statement
updated loop condition in TableOutput . java to correctly account for maxWidth adjustments
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
bugfix : fix va _ format _ string _ extra _ arguments _ passed
[ java ] ignore final loop variable in for - each statement .
added PDF version and full compression settings in PDFExporter and updated sample file to use Java . gexf instead of Les Miserables to en
added unit tests for the LdapUserDetailsMapper class to ensure correct mapping of role attribute values to authorities
make ldap read timeout configurable
refactor TestDescription class structure to improve code readability and maintainability
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check for invalidated states in the gesture handling logic to ensure proper handling of swipe gestures when the state handler is invalidated
updated mMaxDistanceForFolderCreation and mOverScrollPageIndex calculations to improve clarity and functionality of folder creation distance calculations
replaced ` ConfigProvider ` with ` ConfigProviderResolver ` for configuration handling to improve flexibility in managing configuration sources
refactor Testjsig class to improve code readability and maintainability
fix mana not take into account item count
regenerate client with updated copyright year ( # 4382 )
added a suppression warning for the serialVersionUID field in P11TlsPrfGenerator . java to prevent serialization compatibility issues during serialization
refactor validation logic for TsFile in DataRegion . java to improve clarity and handling of empty and non - empty TsFile resources to enhance
added new classes ` Switch21 ` and ` Switch19 ` with methods for pattern matching and guard pattern matching to enhance flexibility for switch
updated error messages in ComparableSubjectTest for clarity to enhance readability and maintainability of error reporting
updated StreamHelper to use the internal XML source and added a new TestStreamHelper class with a test for standalone XML processing to enhance XML
updated the capacity validation logic and improved the equals method in Int2ObjectCache . java to ensure proper handling of array sizes and enhance
updated WebSecurityConfiguration to sort security filter chains and added a new test for ordering on bean definitions to ensure correct ordering of security filters based on
removed the TimeInForce constant from the BinanceTradeService parameters to simplify the parameters for better readability
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer instead of implementing Randomizer directly to simplify range randomization to enhance code clarity and
[ hotfix ] fix rocksdbbuildinfostore key separator
( chore ) camel - jms : fix the issue of camel - jms not return a valid json schema
added error handling for ` NoSuchFieldError ` in ` SourceUtils ` and created a new test class ` testGetBound ` with type bounds to improve robust
refactor filter predicate building logic to use a dedicated method for retrieving filters based on Parquet type to improve code readability and maintainability by
refactor artifact name handling in ` JobContextFactoryBeanPostProcessor ` and add cleanup methods in ` StepContextFactoryBeanTests ` to ensure proper resource
added a loop to read certificates using a certificate serial number and issuer DN in HttpsSegmentFetcher . java to enhance certificate serial number handling and improve
modified the handling of " dns _ fallback " to return a default value if it is null and added a new DnsFallback class for testing to
ww - 3975 make defaulttheme exception more clear
changed the success field from a boolean to a String URL in DepositAddress . java to improve clarity and consistency in the representation of the address
refactor the drop method to return a lambda expression to improve code clarity and ensure proper resource management
removed " address " from the " scope " parameter in CommonOAuth2Provider and its corresponding tests to simplify the OAuth2 provider ' s scope handling
replaced the submit method with a Start class for managing the started state to improve thread management and ensure proper handling of the started state
added a new BigDecimal constant for HUE and saturation in WLedBindingConstants and updated WLedHandler to use these new BigDecimal values to enhance precision
replaced Stream . of ( VectorUtil . class ) with Set . of ( " org . apache . lucene . util . VectorUtil " )
added a new caseJSRInst method to InstSwitch class to enhance functionality for handling JSR - inst instances
added transactionmanager to the subscriptionactivatingsubscriber so that it can be run in a transaction
refactor metadata handling in DBMSProcessor for improved clarity and functionality to enhance maintainability and error handling during metadata updates
added elevation setting for contact view in ContactItemInflater to enhance customization of contact elevation for improved user experience
rename ` typeInformation ` to ` identifier ` for clarity to improve code readability by using a more descriptive variable name
refactor SandboxFileManager to use AccessController for privileged actions to enhance security by ensuring permissions are enforced during file operations
refactor GroovyParserVisitor and GroovyPrinter to streamline initialization and handling of access expressions to enhance code readability and maintainability
updated warning log message format in MetaDataFetcher . java to improve clarity of error messages for better debugging
updated character reading logic in RecordInputStream and UnicodeString classes and added a new test for UML at read time in TestUnicodeWorkbook to ensure correct
added a test for downloading files with norway characters in names to ensure correct handling of file names containing ' ø ' in their names
updated AsyncResource to use CancellationException instead of RuntimeException and added methods to check cancellation status to enhance error handling and provide clearer feedback
added a null check for statistics before calling handleCache to avoid potential NullPointerException when statistics is null
added a new test method for removing an object from a specified collection in MongoTemplateTests to ensure that the removal of an object from a specified collection is
updated copyright year in multiple Java files to reflect the new copyright year for the software
updated string formatting in Coder . java for clarity to improve readability of error messages for better debugging
added a boolean field ` mIsClearAllButtonFullyRevealed ` and updated scroll handling logic in ` RecentsView ` and ` Paged
refactor HiveIcebergMetaHook to use a constant for parameters for ICEBERG table properties to improve code readability and maintainability by
refactor error handling to use a dedicated method for checking address in use to improve code readability and maintainability by centralizing error handling logic
added a call to System . getProperty ( " test . class . path " ) in TestNestmateAttr . java to specify the test class path
updated schema text detail type from VERBOSE to verbose to enhance clarity of schema information for better debugging
added @ Override annotations to various classes in the ReplicatedContext , BackupManager , ClusterManagerBase , and DeltaRequest classes to ensure proper method
fix for nested transaction savepoint not work in oracle
replace integer fetchSize with ThreadLocal fetchSize in QueryProcessExecutor and OverflowQueryEngine to improve thread safety to enhance performance by allowing fetchSize to
[ java ] replace backoffidlestrategy with noopidlestrategy in embeddedpingpongpong .
refactor blocking call handling in HttpClientIntroductionAdvice to use a unified ` handleBlockingCall ` method to improve code readability and
added HDP version property handling in SliderAppsViewControllerImpl to allow dynamic configuration of HDP version to enhance flexibility in managing HDP version
refactor JavacProcessingEnvironment to use a local variable for loaderClass , jusl , and loader , and implement close methods for ServiceLoader to
refactor ParameterizedRobolectricTestRunner to use DeepCloner for cloning parameters and introduce a new DeepCloner class for XML serialization to enhance
added a bind annotation for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to enable stack trace visibility for web requests
added a check for JSType . OBJECT in NativeObject . java to ensure proper handling of object types in the code
replaced the use of ` OopField ` with ` wellKnownKlasses ` in ` SystemDictionary . java ` to resolve ambiguity with
added support for RSAPublicKey and ECPublicKey in the JwkKeyListView class to enhance serialization capabilities for RSAPublicKey and E
do n ' t create objectfile . newprogbitssection when spawnisolates = false
refactor MBeanServerMXBeanUnsupportedTest class to improve test clarity and maintainability
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and improve readability
added getOwnerAddress ( ) method to various actuator classes and introduced getOwnerAddress ( ) method to retrieve the owner address to enhance
add a main ( ) method to make it easy to run the example
updated sendCommand method to include byte array parameters for minimum and maximum values to enhance flexibility in handling numeric range values
fix protobuf serialization of empty edge
[ java ] remove the active correlationid from the set of active command .
added conflict handling logic in FileDataStorageManager and FileDownloader , and updated saveConflict method in FileUploader to include a check for non - down files
updated generic type declarations from ` Map < Object , Object > ` to ` Map < Object , Object > ` across multiple classes to enhance
replaced the use of ` StrUtils . splitFileNames ` with a direct call to ` splitFileNames ` across multiple files to simplify code by removing
added conditional logic to set remarksReporting and useInformationSchema properties based on the driver type to enhance database compatibility with Oracle and MySQL databases
added a handler parameter to the MockMethodInterceptor constructor in SignedSupportingClassProxyFactory to enhance flexibility in handling mocked methods during proxy initialization
updated file watcher logic to use current time and trigger time instead of date to improve clarity and accuracy of file change detection
[ hotfix ] [ table - common ] fix classcastexception in executioncontext
added onBufferChanged method to TerminalTextViewOverlay and updated buffer handling in TerminalView to improve UI responsiveness during buffer modifications
modified the ` processConfigFile ` method to enhance clarity and formatting to improve code readability and maintainability
fix ( freezev2 ) : do n ' t allow tvm freeze v2
added an ` _ insecure ` flag to ` TlsConfig ` and corresponding getter and setter methods in ` TlsUtils ` to control the handling of in
refactor JavadocTool to use standardLocation . SOURCE _ PATH directly instead of conditional checks to simplify the code and improve readability by
updated loop condition from ` nodeColumns ` to ` edgeColumns ` and added ` EdgeColumnsGDF ` for ID and title comparison in ` Exporter
added cascade option to the OneToOne relationship with DefaultAddress to enhance data integrity by allowing cascade operations on the DefaultAddress class
( chore ) camel - core - languages : use arrays . equal instead of hashcode
updated string encoding for the ISO - 8859 - 1 character in the response body to ensure proper formatting and avoid potential issues with special characters
[ hotfix ] remove unused method in rocksdb SerializedCompositeKeyBuilder
added a method to retrieve the static permissions field in ProtectionDomain and updated SubjectDomainCombiner to utilize this field to enhance security protection by ensuring
added null check for recipe in RecipeHandlerBrewery , RecipeHandlerElvenTrade , and RecipeHandlerFloatingFlowers classes
refactor parsing logic in Parser . java to improve readability and structure to enhance clarity and maintainability of parsing operations
added showConnectionErrorPopup method to UploadMediaDetailFragment and updated error handling logic in UploadMediaPresenter to improve user feedback during connection errors
added a new test class ` Issue596 ` and modified ` HttpHandlerImpl ` to return an error for unsupported media types to ensure proper handling of 404
updated bitwise operation syntax in NodeBitMap . java to improve clarity and correctness of bitwise operations
refactor ImportLayoutStyle class to improve code readability and maintainability
refactor ConsoleUIService to conditionally use STDIN instead of gitBashConfigValue to improve flexibility in handling console input based on
refactor ShadowAccountManagerTest to use TestAccountManagerCallback for verifying account manager callbacks to enhance test reliability and maintainability by
refactor enclosingType handling in AnalysisType . java to improve clarity and consistency in accessing the enclosing type
corrected spelling of " getProperty0 " and " getProperty1 " , " getConcatSeparator " , " getConcatSuffix " , and " concat
removed the timeout parameter from the map setting operation to simplify the operation by removing unnecessary timeout settings
[ issue # 5662 ] fix npe when there be no consumer running info ( # 5663 )
[ java ] generate source identity when create a new connection .
added a new class TopTabAction to implement toolbar actions to enhance the user interface by providing a custom toolbar presentation
camel - 14263 : camel - dynamicrouter should utilize servicehelper to start rout engine if enable .
added JUnit assertions and annotations to the AggregateItemReaderTests class to enhance test coverage and ensure proper setup before each test execution
updated the constructor of the Procedure class to use generics to enhance type safety and flexibility in object value type handling
added wikidata edits functionality to AchievementsActivity and updated networking module URLs in NetworkingModule and OkHttpJsonApiClient to en
added validation to ensure len does not exceed Short . MAX _ VALUE to prevent runtime exceptions
added absolute value accumulator and updated bug reporting logic to ensure accurate tracking of load values and improve bug reporting accuracy
updated multiple dataset classes for consistency and clarity to improve code maintainability and readability
updated exception handling in ProvisionClusterRequest to include acceptable credential types to improve clarity of error messages for invalid credential types
updated random number generation logic in TestVectorUtil . java to ensure correct range for vector values
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and updated the time comparison logic to accommodate larger
added support for SSL configuration in TestUtil to enhance security by enabling SSL connections
danielwagnerhall : enabling safe browsing for file downloads on window .
added null checks before setting flight configuration in BaseMotorMount and RecoveryDevice to prevent potential null pointer exceptions
added a condition to exclude transcoding configuration based on configuration settings
added handling for empty gherkin rows in DataTable and updated comparison logic in TableDiffer to ensure correct behavior when dealing with empty gherkin rows
added a static string ` CustomIgnoreTag ` to the ` RobustJavaMethodParser ` class to conditionally remove entries marked with ` CustomIgnoreTag
camel - 14263 : camel - jdbc - add support for optimisticlockingexception to jdbcaggregationrepository
add parent config property support to beandefinitioninject processor ( # 4071 )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added padding adjustments to toolbar and fragment container to enhance user experience by
deleted the ClusterNodeInfo class to the functionality was no longer needed in the Vert . x event bus implementation
updated the return statement in ShieldedTransferActuator . java to ensure consistent formatting to improve code readability and maintainability
added debug output statements for standard and legacy ciphersuites in ServerHandshaker . java to enhance visibility into the SSL suite selection process
refactor template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to improve clarity and maintainability of template selection behavior
added a node label map to track duplicate node IDs and prevent them from being reported as duplicates
added a new file R2303044ListSelection . java to implement a list selection functionality with a specified item name
[ java ] remove unused registration id from publicationregistration .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method for verifying compound property names in StepScopePlaceholderIntegrationTests to ensure correct behavior of property names during execution
updated row count computation to include parent row count to ensure accurate row count reporting for parent statistics
updated SpringBootDocBuildTemplate to format API method paths and query parameters to improve clarity and consistency in API parameter handling
refactor logger initialization to be final and streamline notification handling to improve thread safety and enhance code clarity
changed the type of ` cachingBuildEngineDelegate ` from ` DistBuildCachingEngineDelegate ` to ` CachingBuildEngineDelegate ` and updated related logic
improve exception message when parse fail
added a conditional check for DEBUG before logging messages in WidgetsModel . java to prevent unnecessary logging during development
refactor Console and Scanner classes to improve code readability and maintainability
lucene - 4892 : fix discounted cosine in score comparison
refactor send method calls in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to use ReflectionUtils for method verification to enhance
added " exit " and " quit " methods to Global . java and removed the existing quit method from ScriptingFunctions . java to streamline exit and
refactor LoanBrokerGateway to use a ConfigurableApplicationContext for configuration to improve resource management by closing the application context directly
renamed ` getFirstUnverified ` and ` getLastUnverified ` methods to ` findFirstUnverified ` and ` findLastUnverified `
vmware : fix npe in vmware web service request context when no cookie be present
corrected the spelling of " ROLE _ TELLER " and " ROLE _ SUPERVISOR " to " ROLE _ SUP
updated byte array conversion from r and s to a fixed size of 32 bits to ensure compatibility with larger data sizes
change fml . disabledmods system property to modstates
refactor account selection handling into a separate method called showAccountChooserDialog to improve code readability and maintainability by reducing duplication
improve exception message when try to send back the stream .
added a check for empty result in the validator smart contract call to ensure that an exception is thrown when an unexpected empty simulation result is encountered
added null check for the JsonValue in TexturePackerFileProcessor . java to prevent potential NullPointerExceptions during JSON parsing
no effective change - remove unnecessary null check
updated target memory allocation and window values in TestRefprocSanity . java to use constants for better readability and performance to improve code clarity and
added null checks for currentConsole before writing to System . out or systemErr to avoid NullPointerException when writing to the current console
set credential refresh delay in KinesisConfigUtil to improve resource management
refactor AlertDialog creation to use a dedicated showInfoAlert method to improve code readability and maintainability by reducing duplication
added " - package " argument to the test method to enhance functionality by allowing package - private visibility
update jetty version to 0.0 . 0 _ 00 in tests
replaced specific imports with a wildcard import and modified dependency resolution logic in PluginBundleManager . java to simplify dependencies handling and improve code readability
added a set to manage zip file input streams to ensure proper resource management and prevent memory leaks
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " in multiple files to ensure consistency and accuracy in
added methods to run active and idle states based on key ranges in SequenceGeneratorSource to improve state management during event processing
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " to improve code readability and maintain consistency in naming conventions
replaced ` findAny ( ) ` method with ` findFirst ( ) ` method in ` AnnotatedDelegate ` and ` SyntheticAnnotated ` classes to
added ppc64le architecture support to the architecture validation logic
updated exception message in RoboMonitoringInstrumentation . java to provide clearer guidance on unresolved activities to enhance user understanding of activity resolution issues
use long . max _ value instead of minutes for timeout
( chore ) camel - util : use instant for date conversion
refactor BytesRef class to improve code readability and maintainability
added a toast message indicating YouTube Player does n ' t work on Lollipop until an update is available to inform users to wait for updates
added parsing errors for unterminated dollar and named dollar quotes in SQL statements to ensure proper handling of SQL syntax errors and prevent potential parsing
added a null check for mVibrator before accessing its properties to avoid potential null pointer exceptions
updated table border and cellpadding attributes in DotRenderer . java and modified color assignments in Color . java to enhance table rendering clarity and
added methods to check if a configuration variable is encoded in Hive to enhance configuration handling for query string encoding
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve certificate validation logic
support default uri implementation with proxy uri ( # 3903 )
updated TimeLineCursorAdapter and NetworkedCacheableImageView to utilize a NetworkedCacheableImageView for image loading to enhance image loading
removed unnecessary parameters from the ofFloat method calls across multiple animation utility classes to simplify the method signature and improve code readability
update gdx controllers version to 2.0 . 0 in DependencyBank . java to ensure compatibility with the latest controllers release
refactor LaunchedURLClassLoader class to improve URL class loading efficiency
updated DataSourceHealthIndicator to use JdbcUtils for querying data to improve data retrieval accuracy and error handling
( scott phillips ) add nocache header to response
updated string formatting in ZkController . java to use Locale . ENGLISH for consistency to ensure proper locale - specific formatting of warning messages
refactor SolrQueryParser constructor to accept a default analyzer parameter to enhance flexibility by allowing custom analyzer configurations
add copyright notice for the Universal Gcode sender
removed unnecessary semicolon in MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code readability and maintainability
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector with default size
updated parameter name from ' templateName ' to ' req . getName ( ) ' in StatementGenerator . java to ensure consistency in naming conventions
removed the unused method isTypeMatch in AbstractConfig . java to simplify the code and improve readability
[ java ] set the timestamp on the message buffer in the session decorator .
renamed the method ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` and removed the ` trustAllXForwardedRemoteAddressResolver `
added a new annotation ` NoBootstrap ` in the ` manifold . api . host ` package and modified ` BootstrapInserter . java ` to conditionally
hbase - 26975 tabledescriptorchecker should not use negative maxfilesize and memstoreflushsize ( addendum )
updated commit list filling logic to use a maximum limit based on requested commits to ensure that commit lists do not exceed requested limits
added InvocationTargetException to the main method signature in bug6794831 . java to enhance error handling by explicitly indicating InvocationTargetException
added a constant for the build ID and implemented a method to fill in the origin metadata from cache to improve code clarity and facilitate
removed unused imports from TransactionCapsule . java to clean up the code and reduce unnecessary dependencies
removed duplicate call to markAsDone in HttpProtocol . java to streamline code by eliminating redundancy
added a default TezConfiguration instance and copied it into the TezConfigurationFactory to ensure that the TezConfiguration is properly initialized before use
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException
removed unnecessary condition checking for mIsVisible to simplify the logic for better readability
added a method to forget the most recent sound and updated the logic for stopping it to ensure that the most recent sound is not removed from the buffer
updated SimpleBasePlayer to conditionally set position discontinuity based on new state and first frame rendering to ensure proper handling of discont
added decimal formatting for number units in NumberAxis . java to enhance precision in number representation
refactor TargetGraphAndBuildTargets to use a builder pattern for improved immutability to enhance code readability and maintainability by
removed the ` IndexFileNameFilter ` class and updated conditional checks in ` IndexFileDeleter . java ` and ` IndexWriter . java ` to
fix entity ' s collision bounding box not be check for vanilla behavior
added compressionLevel parameter to ApkBuilder and SignedJarBuilder to enhance flexibility in specifying compression levels
added a test for including static fields in the MirrorTest class to ensure that the MirrorTest class correctly handles static fields in the stub jar
added handling for BYTES data type in FieldSpec and updated related metrics handling in MetricFieldSpec to ensure accurate metric size retrieval for BYTES data types
updated string formatting in multiple test classes to use a consistent newline format to improve readability and consistency of error messages
replaced the use of ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the
added caching functionality to the ` SpringDataJPAJoinFetchPaginationTest ` and ` SpringDataJPAJoinFetchPaginationConfiguration ` classes to
updated filename handling in PronunciationModel to
added a check for empty postBody in SimpleHttp . java and updated HttpApiConfig in TestHttpPlugin . java to ensure proper handling of
added a dispatcher to the ClientSideSlb class and invoked shutdownNow ( ) in ClientSideSlbTest to ensure proper shutdown of the executor service
modified TextureRegion to conditionally set v2 based on flipping mode to ensure correct texture positioning when flipping is enabled
improve error message for miss property on discovery strategy
added a null check for contextPath in MetricsPublisher . java to ensure contextPath is set to " NA " when contextPath is null
[ drools - 6662 ] fix classnotfoundexception when re - loading kiecontainer
added serialization of the B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and updated SerializationHeader . B _ TREE _ MAP _
added support for precompiled headers in the ` AppleDescriptions ` and ` AbstractCxxSourceRuleFactory ` classes to enhance header management and
added security checks for image updates using AccessController to enhance security by ensuring permissions are enforced during image updates
changed the access modifier of ` findNextIndex ` method from public to private and updated its implementation in ` OrderedMap ` to enhance encapsulation and
initialized isDirect variable to false to ensure proper initialization of the isDirect variable
removed duplicate lines of code in MaryClient . java to streamline the code for better readability and maintainability
changed the return type of the localToAscendantCoordinates method from void to Vector2 in Actor . java and Group . java from void to void in
pdfbox - 5764 : use limit instead of capacity , a suggest by valerybokov
added a null check for the context before removing the close hook to prevent potential NullPointerException when context is null
updated border spacing logic in CellLayout and DeviceProfile classes to use folder cell layout border spacing based on container type to enhance layout flexibility
replaced NumberFormat parsing with a custom ValueNumeric class for numeric parsing to enhance flexibility and maintainability of numeric value handling
added a check for deferred authentication in the login process to enhance security by preventing unauthorized requests
updated argument checks to use " -- add - to - start " instead of " -- module - startd - ini "
added a new private variable ` HIVE _ DEFAULT _ PARTITION _ VALUE ` to manage the default partition value to ensure that ` dynamicPartValues `
[ hotfix ] fix checkstyle violation in streamnode and streamoperatorfactory
updated return statements to include classifier and group ID in artifact output to enhance clarity and consistency in artifact representation
added unit test base on user forum issue
handle noclassdeffounderror gracefully
enable email notification by default
doc : fix docstring formatting ( # 419 )
increased the expected message count for LumberjackMultiThreadTest from 125 to 25 to accommodate a larger number of threads and increased the concurrency
only show team name if not dead
refactor Exchange class to improve code readability and maintainability
api : add api key and secret key to updateuser api documentation
refactor switch - case statements in MfaProvider , IdleTimer , JdbcMfaProviderProvisioning , SamlServiceProviderConfiguratorTest , and
updated AbstractMetaDataExportMojo class to improve metadata export functionality
added error handling for SQL integrity constraint violations in Hive to ensure that tables cannot be dropped due to insufficient materialized views to enhance clarity and
updated property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in property naming
added a new class ` RoboExecutorService ` to the ` org . robolectric . util . concurrent ` package to provide a mechanism for
added a check for whether the group is a root group before adding subgroups and sorting subgroups in the menu to enhance the functionality of the group
updated the method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check if the path starts
updated ProcessBuilder initialization to use baseArgs for dynamic number of GCThreads to improve flexibility in configuring Java process execution
changed the type of ` getHostFlavorMap ` from ` ImmutableMap < String , ImmutableFlavor > ` to ` ImmutableMap < String , Flavor
updated SQL statement construction to handle optional table creation options to enhance flexibility in SQL
change the initialization of the background drawable to set alpha to improve the visual quality of the chat background
test : migrate ctiteratortest to junit 5 ( # 4104 )
added token clearing functionality to CharTokenizer , KeywordTokenizer , TokenStream , Tokenizer , and StandardTokenizer classes to ensure proper state management during token processing
add test to prevent crash on block statement
added null and empty check for configurers in StateMachineConfiguration , StateMachineFactoryConfiguration , and StateMachineConfigurerAdapter classes to ensure proper
danielwagnerhall : do n ' t allow locator ` ` link = ' ' to start with ` ` link = ' '
log4j2 - 1343 fix numberformatexception in stringconverter
no effective change - remove unused code
updated touchable insets settings in TaskbarDragLayerController to use region insets instead of content and insets isTouchableRegion to improve UI responsiveness
added a check for the presence of a ~ symbol in the FencedCodeBlockParser to ensure proper handling of syntax tokens in the code block
added socketTimeout property handling in ConnectionFactoryImpl and related classes to support configurable socket timeouts for socket operations
added a sleep delay of 500 milliseconds before retrying element attribute tests to improve reliability of test execution
updated BufferedReader initialization to specify UTF - 8 encoding to ensure proper handling of character encoding in URL input
refactor List class to improve code readability and maintainability
added URI and Path parameters to AsyncFileImpl constructors and created a new AsyncFileImplTest class with a test for writing errors to enhance
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are meant to be part of the execution context
nuage vsp : fix npe in case of npe
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated its implementation for better clarity to enhance the
updated Java version handling in ConstantPoolTagTests to ensure compatibility with Java 9 and remove unnecessary version checks
improve error message for compiler warning
add method to clear the client header map
replaced Vector with ArrayList for argument handling and simplified method calls to improve code readability and maintainability
updated DEFAULT _ GRID _ COLUMN from 4.0 f to 3f in AppPreferencesImpl . java to increase the grid column size for better visual
added a condition to check if the ' forViewCreation ' flag is not included in the ' hasTableDefined ( ) ' method to ensure that the
updated regex pattern in TestHS2HttpServer . java to improve consistency and clarity to enhance readability and maintainability of the code
added a try - catch block around the snippetReflection . asObject ( Object . class , constant ) method call to handle potential exceptions to improve error handling
simonstewart : change the test to use firefox instead of ie
updated the offset calculation in ByteBlockPool and added a new test forTooManyAllocs in TestByteBlockPool to ensure proper handling of buffer allocation limits
make interactionvalueencoder locale - insensitive
added exception handling for unexpected exceptions in TcpTransport to ensure proper error management during exception handling
add @ suppresswarnings to prevent compile error
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify the class structure and improve code clarity
improve error message when database have change
added response type validation and authorization check in OAuth20DeviceCodeResponseTypeRequestValidator and updated error logging in NexmoSmsSender to enhance
added a call to chk ( index , 1 ) in DrillBuf . java to enhance buffer validation logic
added InputFormat parameter to initTableMapperJob method to enhance flexibility by allowing different input formats for job initialization
removed duplicate calls to append in AbstractJRubyMojo . java to streamline code by eliminating redundancy
sulong : do n ' t allow access to internal language .
added support for deprecated reserve commit duration in ReplicationHandler to ensure compatibility with newer Solr versions and improve error handling during commit reservation
rename ` cacheVariableName ` to ` cacheForeignKey ` for clarity and consistency to improve code readability and maintainability by using a more desc
eckeypairgenerator : use object [ ] instead of long array
[ flink - 18552 ] [ state ] add suspend method to restartscheduler
updated RotationTouchHelper initialization to use a new instance of RotationTouchHelper to improve flexibility in managing rotation touch events
refactor port table filtering and override retrieval logic in UniFiControllerCache . java to improve code clarity and maintainability by consolidating
[ bsd ] use unique thread id instead of lwp _ id
do n ' t add an offer to the offer book if it ' s already there
do n ' t use tlsv1.3 in ci
updated MockitoMethodInvocationControl to handle different mock types and modified SystemClassUserTest to use System . class instead of System . nanotime
updated NotLoadedException instances to include the current object as a parameter to enhance exception handling by including the current object in the NotLoadedException
replaced import of DisplayUtils with a direct call to getExtra ( EXTRA _ FILE ) in FileDisplayActivity to streamline code by eliminating
added exception handling and improved file management in StoreDirect and StoreWAL classes to enhance stability and prevent potential runtime exceptions during compaction operations
added a background task execution for screenshot tasks in AbsSwipeUpHandler . java to improve UI responsiveness during task execution
added hidden functionality to CommandArgumentDefinition and updated LiquibaseCommandLine to utilize it to enhance command argument handling to improve flexibility in managing
[ hotfix ] [ test ] change kafka plugin test remoteaddress from 8090 to 9092
[ geos - 10568 ] use catalog from styleinfo instead of styleinfo directly
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being executed
added getter and setter methods for tile IDs in TideMapLoader , TiledMapTile , AnimatedTiledMapTile , and StaticTiledMapTile
refactor Manager class to improve code readability and maintainability
updated JDBC connection URL to include version = V _ 0 _ 13 to ensure compatibility with the latest version of the database API
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance change log generation control for Liquibase schema changes
[ ci ] use put instead of putifabsent
planner - 4071 : use logger instead of error
changed the visibility of the doPutRecord method from final to default to allow subclasses to override the method
fix fileselectorfragment . getpath ( ) to always return root path
refactor FastCGIProxyServletTest to improve response content handling and add new test cases to enhance test coverage for large and slow client
added startService method call to MarkReadService to enable interaction with the ReadInteractionsService service
added a conditional check for ` lintClassfile ` before logging warnings for annotation method not found
added logic to set the SMTP port number based on configuration to ensure a default port is used if none is provided
increased the maximum number of SSLFactory reloading attempts and added retry logic for SSLFactory reloading to enhance reliability of SSLFactory
updated date format in ObjectMapperProvider from " HH : mm ' Z ' " to " HH : mm : ss ' Z ' to improve clarity
updated assertion message in SpyingOnRealObjectsTest to clarify that a private class is due to mocking a private class that is not
added functionality to conditionally handle line ending with a newline in InlineBoxing and LineBox to enhance the flexibility of line endings in the
updated filePathString construction to handle null parent cases to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection from TopicStream . java to clean up the code and reduce unnecessary dependencies
refactor NinjaServletContextTest to streamline input stream creation and add a new test for Windows -1250 parameters to improve code readability
updated properties in AbstractCasEndpointTests to include " management . endpoints . web . exposure . include = * " to enhance test coverage for web
added a validation check for the current graph to ensure that the current graph is a dynamic graph to prevent runtime errors
add miss @ scopeone and @ eagerinit to scopeone
added support for suppressing exceptions in JSON path expressions to enhance flexibility in handling JSON parsing errors
removed redundant call to ControllerLeaderLocator . create in HelixServerStarter . java to streamline code by eliminating redundancy
updated usage messages in CLHSDB and HSDB classes to improve clarity and consistency in command usage
refactor FaultTolerantStepFactoryBean to streamline the configuration of FaultTolerantChunkProvider to enhance code readability and
[ beam - 8470 ] remove unused write . java
refactor AccessibilityManagerTest to use a local AccessibilityManager instance instead of a dedicated method to improve code clarity and maintainability by
add a new metric to display usage statistic
removed the SourcePathResolver parameter from JavaSourceJar and related classes to simplify the class hierarchy by removing unnecessary dependency on SourcePathResolver
refactor enum data type handling in PostgreSQLDatabaseConnector to use a new helper class to improve code clarity and maintainability by centralizing
updated log file path to use File . separatorChar for cross - platform compatibility to ensure compatibility across different operating systems
renamed ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to clarify the
added error handling for unsupported index tables in HiveMetaStoreClient to improve robustness by preventing operations on unsupported index tables
added visibility check for mActionsView to disable scrolling when the visibility state is not VISIBLE
added a condition to set a specific highlight for the SH - REPL in non - Windows environments to enhance text highlighting for non - Windows users
add miss local variable annotation for xss _ request _ parameter _ to _ cookie
replace ` toUri ( ) . getRawPath ( ) ` with ` getPath ( ) . toString ( ) ` in ` HadoopPinotFS
added a space - separated list of stage listeners in the SelectBox class to enhance code readability and maintainability
changed the initialization of _ metaDataComplete from true to false to ensure proper handling of metadata completion status
updated the ` removeTaskTarget ` method to return a void instead of a boolean and modified bitmap creation logic in ` ThumbnailSearchResultView `
added platform and release flavor handling to JsBundleGenrule to enhance flexibility in managing JavaScript bundles
modified type casting logic in ` mmm Lower . java ` and added a new test class ` T6500701 . java ` with a main method
added unit tests for crlfNewLinesInComments and crlfNewLinesInJavadoc in AddImportTest . java to ensure proper handling of
added a HubConfiguration configuration to the AbstractLiquibaseChangeLogMojo
removed unnecessary whitespace in JsrFaultTolerantStepBuilder . java to improve code readability and maintain consistency in formatting
added error handling for checking linkDb existence in IndexerMapReduce . java to improve robustness by logging warnings when indexing fails
replaced manual method lookup for ` IndexWriterConfig . setIndexerThreadPool ` with a dynamic class lookup for ` DocumentsWriterPerThreadPool ` to improve flex
removed the port number from the address string in GameCanvasImplementation . java to simplify the address format for better readability
refactor ` MapJobExecutionDao ` to use a unified ` copy ` method for job executions to enhance code clarity and
added a new test class DownloadTest for testing image loading functionality to facilitate testing of image loading functionality in the application
refactor language handling in multiple classes to ensure consistent normalization of language codes to improve code clarity and maintainability
updated error handling in GenericUDFRound to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and specificity of argument type validation
added null check for selectedVersion in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
added multiple AntPathRequestMatchers to the SecurityConfig class to enhance security configuration options for better asset matching
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
refactor BeanDefinitionInjectProcessor to conditionally visit the concrete class only if it matches the class name to improve efficiency by avoiding unnecessary instanti
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable tests that are not ready for execution
updated SUPPORTED _ THING _ TYPES set to use a fixed delay instead of a fixed frequency in OpenWebNetEnergyHandler and OpenWebNetTh
refactored the execution of the SocketEventProcessor in AprEndpoint . java to use getExecutor ( ) instead of directly using getExecutor ( ) to
deleted the SunToolkitSubclass . java file to remove unused code that is no longer needed in the project
replaced MathUtils with Matrix4 for better rotation and scaling handling to enhance code clarity and maintainability by using consistent mathematical operations
added a new test method ` registerWrapperHandlerBeforePrimitive ` in ` TypeHandlerRegistryTest . java ` to verify the registration of wrapper types before primitive
pdfbox - 2576 : convert alternate color space to rgb , a suggest by valerybokov
updated URLs to use BuildConfig . WIKIMEDIA _ API _ HOST instead of CommonsApplication . HOME _ URL to streamline
added unit test base on user forum issue
fix potential npe in thorn chakram
added a test for altering table with indexes extend primary key in AlterTableWithViewsIT . java to ensure that the table ' s
updated FileFloatSource to use a final offset variable and added random assertions in TestFunctionQuery to ensure consistent handling of document offsets and improve test coverage
removed the ID field from the fields in MongoRecordReader to ensure proper handling of the ID field in the record processing logic
added disconnection methods in YeelightHandlerBase and DeviceBase , and modified connection termination logic in WifiConnection to ensure proper cleanup of resources
added support for AUTO _ INCREMENT syntax in the parser to ensure correct handling of integer values in the database
fix ( informerfactory ) : add re - sync period for informer refactor
server : fix npe in listtemplateversions api ( # 4809 )
replaced ` ImageSizeFromStream ` with a ` RobolectricBufferedImage ` for better handling of buffered images in ` ShadowBitmapFactory ` to improve
removed unused parameters from LauncherProvider and LauncherSettings classes to clean up unused code and improve maintainability
jbrules - 2635 : move data file to example - broker example
added a new variable ` legendTop ` and ` legendBottom ` to track the top and bottom offsets for the legend in ` PieChart . java `
added a condition to return early if the world transform det ( ) is zero to optimize performance by avoiding unnecessary computations when rendering
added a new file MaryScriptCreator . java to demonstrate the creation of MaryDB scripts based on user input
added a session attribute for the remote host in the ListenHTTPServlet to provide access to the remote host during HTTP requests
chore ( core ) : clean up compaction log file after compaction ( # 6662 )
removed the " xlink : href " attribute from the license and location addition in ComponentDescription . java to simplify the code by directly using the " href
( chore ) camel - aws2 - s3 : fix typo
hbase - 26937 addendum addendum to log when cluster shutdown
added null check for the span before logging in Slf4jSpanLogger and updated warning messages in DefaultTracer to enhance stability by preventing
trim whitespace before adding an option to the configuration to ensure valid options are processed without errors
added functionality to control wallpaper depth based on user preferences
added an assertion to verify the success count of the overseer action in OverseerTest . java to ensure that the overseer stats are
removed the method ` getKernelVersion ( ) ` and changed the return value of ` getKernelVersion ( ) ` to always return true to streamline
refactor ExecConstants class to improve code readability and maintainability
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for better test coverage
added a method to set scan attribute for paging in TableSnapshotResultIterator and updated ScanUtil to utilize this method to enhance paging functionality to improve
added a check for lowRange to ensure lowRange is not below 100000000000L to prevent potential errors
changed access modifier of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource and AsyncWriteCache classes to allow subclasses to access and
updated hostResponse . setZoneId ( host . getUuid ( ) ) from host . getUuid ( ) to host . getZoneUuid ( ) to
[ zeppelin - 4898 ] fix livy interpretation of utf - 8 string
replaced the check for the existence of the zPath before removing it to simplify the code and improve readability
changed the type of the ` json ` variable from ` Object ` to ` String ` and updated the ` toJson ` method to use ` gson
increased hard commit timeout duration from 2ms to 5ms in SoftAutoCommitTest . java to allow more time for transactions to complete successfully
try to catch runtime exception in selenidelogger . before and after each event
refactor multiple Dial - related classes to improve code organization and maintainability
corrected formatting of error logging in SyncQueue . java to ensure consistency and clarity in log messages
updated Ryuk container version from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest version of ryuk
updated method calls from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java `
updated path mapping for the " Patchy " library in FMLClientLaunchProvider . java to streamline the retrieval of the " LegacyXMLLay
[ hotfix ] remove unused yarnitcase # createyarnclusterdescriptor
add miss stats ofNoDataIncludedMaps statistic to localmapstatsprovider
deleted the AllTests . java file to the test class is no longer needed in the project
added constants for UNICODECHAR NONBREAKING _ HYPHEN and UNICODECHAR ZERO _ WIDTH _ SPACE in AbstractWordConverter to enhance flexibility for
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory stability on large stack trace invocations to ensure
updated method call from getResultMappings ( ) to getResultMappingsForRowKey ( nestedResultMap ) to ensure correct mapping of result keys for mapped properties
added eventHandled flag to UIText . java to ensure proper handling of events during text input processing
deleted the Controller annotation and renamed the Weldby class to WeldModule to simplify the codebase by removing unused annotations
add option to monitor capture groups in empty check
added a protected variable ` liquibaseProLicenseKey ` and removed the retrieval of the ` LIQUIBASE _ PRO _ LICENSE _ KEY ` from
refactor measures hierarchy member reader assignment to use a dedicated method to improve code readability and maintainability
make debug info value update configurable
refactor MondrianProperties class to improve code readability and maintainability
added support for friend paths in Kotlinc and KotlincStep classes to enhance flexibility by allowing users to specify friend
added aliases for BATK , BRAH , and MAND in Character . java and refactored main method in CheckScript . java
updated equality checks for commandId and role in ExecutionCommand . java and added a new method in StageUtils . java to convert a string to
updated Mockito library version to ensure compatibility with the latest testing framework
refactor OCFile class to improve code readability and maintainability
added a toString ( ) method to SystemScope class to provide a readable string representation of the object for easier debugging
added support for percentage and truncation in the cmyk ( ) function
added unit tests for the ` LocalIndexReverseScanShouldReturnAllRows ` method in ` LocalIndexIT . java ` to ensure correct functionality of
updated imports and methods in BaseAndroidTestCase and BackupHelperTest to use ApplicationProvider instead of InstrumentationRegistry to streamline test context management and improve code
updated toast messages to use string resources instead of hardcoded strings to enhance maintainability and readability of the code
removed unnecessary condition checks in the while loop in RendererUtilities . java and updated test assertions in RendererUtilitiesTests . java to streamline the loop
refactor KrakenStreamingAdapters to use ArrayNode for data structures instead of Iterator to enhance type safety and clarity in data handling
added a try - catch block around SQL execution in FileContentProvider . java to handle potential SQLiteException when upgrading from 24 - > 30
remove system . err . println ( line ) from asyncservletiotest
added hash table load factor calculation and refactored related calculations in ConvertJoinMapJoin . java to enhance memory allocation based on load factor
updated the buildView method to accept a Context parameter to enhance flexibility by allowing customizable background resources
added authentication verification functionality to the SecurityMockMvcResultMatchers to enhance test coverage for authentication validation to ensure that the authentication matching logic behaves as expected when
vpc : do n ' t set vpcid when create a new network
[ beam - 10955 ] fix flaky test in flinksavepointtest
removed the ' private ' access modifier from several fields in various classes to enhance encapsulation by restricting access to these fields
updated loop condition in Actor . java to ensure proper handling of actions to prevent potential index out of bounds
updated BitmexStreamingExchange class to extend BitmexExchange instead of BaseExchange and modified exchange specification initialization to enhance compatibility with Bitmex
( scott phillips ) add support for virtual metadata for relationship between orgunit and orgs
added null check for spatial before processing to prevent potential NullPointerException
updated ConditionalTokenFilter , FixedShingleFilter , TestRandomChains , and TestConditionalTokenFilter classes to improve token filtering logic and enhance
make unsafestorenode stateafter consistently
replace super . putAddress with io . putAddress for better clarity to improve code readability and maintainability
added a condition to verify if the CAS event repository is empty before proceeding to ensure that the event repository is not empty before proceeding with further operations
removed the ' final ' modifier from the parameters in AuthenticationAttrProcessor . java to allow for potential future modifications
added null checks for the specified key in MacOSXPreferences . java and created a new RemoveNullKeyCheck class for testing to ensure that null keys are
added a method to set the typeface in CodenameOneTextPaint to ensure that the typeface is not set in the runtime environment
added InputStream methods to AzurePinotFS , LocalPinotFS , PinotFSFactoryTest , and HadoopPinotFS classes to enhance
danielwagnerhall : remove deprecate webdriverrunner # fail ( string ) method
removed the condition checking item size in SolrRequestParsers to simplify the logic for handling empty responses
refactor DefaultResultSetHandler to use a boolean flag for constructor mappings and streamline result object creation to improve code clarity and maintainability by
updated foreign key constraint in CreateTableGeneratorTest to include double quotes around schema names to ensure compatibility with different database schemas
added a check for the filter mode in the VectorizationContext class to ensure proper handling of boolean expressions in the projection and filtering logic
added generic type parameter to prevent unchecked cast
removed duplicate ReorganizeTableStatement instantiation in ModifyDataTypeChange . java to streamline the code by eliminating redundancy
updated cluster name references from " CLUSTER _ NAME " to " DEFAULT _ CLUSTER _ NAME " and changed references from " CLUSTER _ NAME "
refactor connection handling in PeerGroup to improve error logging and connection flow to enhance debugging and error handling clarity
added support for bold , concealed , and inverse styles in Nano . java to enhance styling flexibility for different UI components
refactor NBT handling in MCEditSchematicReader , SpongeSchematicReader , and DataFixer classes to use Adventure
updated the return message in NoToStringOnStringType . java from " Use ` String ` " to " No # toString ( ) on ` String ` to
testthreadfailure : make test more resilient
updated the return type of the retryFailed method from int to FailureContext and added new DataProviderRetryAnalyzer and DataProviderRetryTest classes to
updated the return value from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to correct the index used for token extraction
simonstewart : implement the selectpopup ( ) and deselectpopup ( ) method in the selenium backed selen
updated the ` doPrintEntry ` method to remove the ` printWarning ` parameter and streamline the certificate verification process to enhance clarity
[ hotfix ] fix checkstyle violation in taskasynccalltest
added opacity and background validation for the dialog in Dialog . java and Frame . java to ensure that the dialog is only visible when it is fully
changed the visibility of the state variable from private to private final in DefaultProjectFilesystem . java to ensure the state variable cannot be reassigned after initialization
refactor connection factory initialization to use Redis standalone configuration to enhance configuration flexibility for Redis connections
add lastseendelayedmessage property to chatroom jabber configuration , if it be set to ` ` false ' ' .
updated the ` notifyContent ` method to use ` Callback . NOOP ` instead of creating a new instance of ` new Callback . Adapter ( ) `
replaced the CreateShareOperation with a custom Intent for sharing operations to streamline share creation process and enhance intent handling
removed unnecessary check for isInjected in BeanDefinitionInjectProcessor . java and added @ Inject annotation in FieldPropertyInject . java to streamline the logic
replaced calls to getMinBuildHeight ( ) with getMainHeight ( ) in ClassicPlotManager . java to streamline code for better readability
added a check for NullPointerException in SmackIntegrationTestFramework . java to ensure proper handling of NullPointerException to prevent potential runtime exceptions
tmi - tiff : fix readexifjpegwithinteropsubdir ( ) to support interop mode
added ENABLED _ LS mode to VersionTargetGraphCache and modified executor initialization in VersionedTargetGraphMode to use DefaultDepsAwareExecutorWithLocalStack to
added a condition to check if the child format is a video format before processing to ensure proper handling of video formats in DLNAResource
doc : generate sample code in the java microgenerator ( # 419 )
added a load method to LwjglNativesLoader and modified the load method in LwjglApplet to enable dynamic loading of native libraries based
added escape functionality to CSVRequestHandler and updated encapsulators and escape handling in TestCSVLoader to enhance CSV processing flexibility and improve handling of
removed validation for authorization grant types in ClientRegistrations . java and updated test assertions in ClientRegistrationsTests . java to ensure only supported grant
improve error message in suppressed exception
added a query to retrieve row counts for a specific byte in aTable to ensure accurate row count retrieval from the database
added RSquare information to the map in RegressionEvaluator and a corresponding test in StreamExpressionTest to enhance the accuracy of regression calculations
added enumeration handling for request header names in ThreadContextMDCServletFilter to ensure proper context attribute retrieval for specific request headers
updated SparkPlanGenerator to use a MapWork instance instead of a generic work variable to improve code clarity and ensure proper handling of map sizes
refactor image handling in PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for retrieving the folder image to
updated caching logic in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer in JwtIssuerAuthenticationManagerResolverTests
updated the resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test for
added a boolean parameter ` isMethod ` to the ` Function ` constructor and updated related methods to accommodate this change to enhance functionality
removed a redundant sleep statement in AbstractBasicMockingIntegrationTest . java to simplify the test execution process
added a new file KernCrash . java to display a KernCrash with specific font attributes to provide a visual representation of a Kern
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure proper error handling during tests
added a method to retrieve interface IPs with a specified prefix in NetUtil . java to enhance network interface information for better filtering of loopback interfaces
[ zeppelin - 10861 ] fix memory leak in housekeeper
no need to check client address , since it ' s already in sync
refactor assertions in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` to verify the functionality of the ` getTreeMap ` method in the ` newFileDB ` method
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doInBackground `
added validation checks for today and birth dates in ValidatorTest . java to ensure that the person ' s age meets max age criteria for maximum validation
added support for processing Grbl responses in GrblController to enhance error handling and provide clearer feedback during command completion
updated return statement to check for zero screens before retrieving the workspace scroll format to improve user experience by providing a specific label when there are no screens
removed the count parameter from the getTrades method in BittrexTrades and BittrexMarketDataService classes to simplify the method signature for better
updated ConsoleReader to strip ANSI escape sequences before returning cursor position
updated the file path construction for jdkPath in JavaBuild . java to ensure consistent formatting to improve readability and maintainability of the code
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple classes to standardize method calls and
updated JFCModel constructors to include a logger for warning messages to enhance logging capabilities and improve error handling during file processing
added a validation check for tolerance in MaximumInscribedCircle to ensure tolerance is non - negative to prevent potential errors
added methods to create and drop a view in TestUtil to enhance functionality for creating , updating , and removing views in the database
added support for stable floats and double expectations in NaNTest to enhance testing capabilities for 64 - bit JVM environments
added a new class DesktopTaskbarUIController to manage the hotseat icon for the DesktopTaskbar
added TaskCountListener implementation and updated ModItemAdapter to implement TaskCountListener to enhance task count management and improve UI responsiveness during mod
refactor methods in Files class to improve code readability and maintainability
refactor interceptor handling in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to use a Collection instead of a Set to improve code
refactor DomainAwareServicesManager to extend ServicesManager instead of implementing it directly to simplify service management by removing unnecessary functional interfaces
add log to help debug packinfo generation
chore : update gapic - generator - java version to 2.1 . 0 ( # 419 )
added grow ( ) and growX ( ) methods with corresponding return values in Cell . java to enhance flexibility in cell resizing functionality
refactor DefaultInputHandler to use a generified bindings map for key - value pairs instead of a simple Map to improve code readability and
resolve http : / / issues . apache . org / activemq / browse / amq - 4892 - fix npe in test
replaced long array with byte array and added memory fail count check in MetricsMemoryTester . java to optimize memory usage and improve test reliability
deleted the JobParametersPrototype . java file to remove unused code to streamline the project
added a securityEnabled parameter to the MappingsTable class and updated related methods to enable security checks during data connection creation
rename the constant APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJC _
changed DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable the DUMP _ TO _ FILE feature during testing
updated codec needsEosPropagationWorkaround method to include codecInfo parameter to enhance codec propagation logic based on security context
[ java ] do n ' t try to connect if there be no spy buffer .
added a condition to check if ` dbInfo ` is null and included a check for ` options . getOutputOptions ( ) . isNoInfo ( )
disable ssl by default
added error output options to the buildDOMSubtree method to enhance error reporting during latex generation
refactor assertions in Assert . java to improve code readability and maintainability
[ java ] : add retain option to session . send ( message ) .
updated JSON serialization format in TestResultSummary . java and EventSerializationTest . java to enhance clarity of test results by including testCaseName in JSON output
[ hotfix ] [ table - planner ] fix typo in sql grouped window function
updated import statements in LatexToUnicodeAdapter . java to ensure compatibility with the latest fastparse library version
added a read - write lock for SSL context management and refactored timeout handling in AbstractSessionContext to improve thread safety and ensure proper synchronization
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` AppModule . java ` and refactored ` Watch
replace CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to utilize AnsiSqlDialect for better compatibility
change log level from debug to trace for no firmware update handler available for thing with UID { 0 , 1 } .
added unit tests for handling null values in date and timestamp queries to ensure correct behavior of
refactor StringSubject , Subject , and CustomFailureMessageTest classes to improve clarity and structure to enhance readability and maintainability of
added a test for retrieving repository permissions with multiple teams in UserModelTest . java to ensure correct permission handling for multiple teams in the user model
added a new Java file ` Test7088020 . java ` with methods to invoke specific stack frames and exception handling to facilitate testing
replaced the ` matchAudienceRestriction ` method with a set of audience URIs for validation to ensure that the integrity of the ` audienceRestrictions ` to
refactor cache refresh logic into a separate method called refreshLocalCache in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code
changed the ` _ stderr ` variable from ` System . err ` to ` null ` in ` StdErrLog . java ` to ensure proper handling of
added a new warning constant SEPARATION _ ORDER in Warning . java and utilized it in BasicEventSimulationEngine . java to enhance warning management
updated the table configuration parameter from offlineTableConfig to realtimeTableConfig to enhance query performance by using real - time data source
refactor aggregation SQL execution in PhoenixHBaseAccessor and add a new property for site normalizer in UpgradeCatalog240 to enhance flexibility
[ hotfix ] fix checkstyle violation in savepointv2 / filestatehandle
added BluetoothClass functionality to ShadowBluetoothDevice to enhance Bluetooth device management capabilities
renames occurrence of playerprofile to avoid confusion
[ drools - 740 ] improve error message when list be empty
updated graphModel . readUnlockAll ( ) method call from graphModel . getGraph ( ) to graph to ensure consistency in accessing the graph object
updated coreNodeName generation in ZkStateReader . java to improve clarity and consistency in node name formatting
chat : add backpressure to chatactivity to reduce memory consumption .
refactor TaggerParserPosTagCompatibilityITest . java file to improve test coverage and maintainability
added a suppression annotation for SimpleText codec in BaseVectorSimilarityQueryTestCase to ensure compatibility with the latest Lucene codec versions
added a condition to check if elemtype ( t ) . tag < = lastBaseTag and created a new class T7005671 with multiple test
updated triangle calculations in DelaunayTriangulator . java and replaced EarClippingTriangulatorTest with DelaunayTriangulator
added @ Override annotations to multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet construction to use builder pattern to improve code readability and maintainability
refactor stack overflow handling in StackOverflowCheckImpl . java to improve clarity and maintainability of the code
added shadow methods for SQLiteDatabase and ContentValues in Robolectric tests to enhance testing capabilities for SQLite databases
* lwjglcanvas now call initiategl ( ) instead of initiateglinstances ( )
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` and updated comparison logic in ` BKDWriter . java ` to utilize a
updated Locale . java to include script , country , and variant properties and initialized default locale if it is null to enhance locale initialization and ensure
updated the return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha in PredictionRowView . java to reflect the last set text alpha
updated warning message in ConfigurationChangeDetector . java to clarify that the number of ConfigMap PropertySources does not match
updated test classes to use UaaJunitRunner . allSuiteClasses ( ) instead of hardcoded values to improve test coverage and maintainability
trim whitespace from token nextToken calls in GzipFilter . java and GzipFilterDefaultTest . java to ensure consistent formatting of input tokens
updated the default output type from WRITER to WRITER to ensure compatibility with updated API requirements
updated regex implementation property from JDK to JONI to enhance compatibility with the Nashorn Regexp implementation
replaced ` LooperExecutor ` with ` Executor ` and updated task handling in ` ViewCapture . java ` to improve concurrency management and enhance
support ' dfki - paveloque - styles ' voice parameter ( dfki - paveloque - styles = ' ... '
added a check to ensure the destination folder exists before creating it to prevent errors when the folder cannot be created
update node discovery bind IP from 0.0 . 0.0 to 127.0 . 0.1 to ensure
( chore ) camel - jbpm : fix typo
pdfbox - 2576 : remove unused import , a suggest by valerybokov
updated AllAppsGridAdapter , AllAppsRecyclerView , WorkModeToggleContainer , and AlphabeticalAppsList classes to improve clarity and consistency in naming
refactor multiple Java files for improved consistency and clarity to enhance maintainability and readability of the codebase
refactor ( prettyprinter ) : fix pretty printing of implicit super class type ( # 2131 )
added a call to free memory in the driverContext to ensure proper memory management during resource cleanup
removed carriage return characters from error messages in QueryByExamplePredicateBuilder and JpaPersistentPropertyImpl to improve clarity and consistency in error reporting
refactor ConcurrentLRUCache to use AtomicLong for eviction counters and add a new add method to enhance thread safety and maintainability of
added a method to run action on JavaFX thread in DefaultTaskExecutor to ensure proper handling of action execution in the application thread
updated the condition to check if intendedDestination is an instance of Inet4Address to ensure correct handling of Inet4Address instances
set data root and source root from db . getdatabase ( ) and db . getsource ( ) in MainFrame . java to ensure compatibility with new
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` methods to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration ` to
[ hotfix ] [ table - common ] fix typo in tableenvironment
updated statement timeout handling in MapperBuilderAssistant and MappedStatement classes to ensure default timeout values are set based on configuration settings
refactor hangingTscTimeout handling in multiple transpiler classes to use options . getHangingTscTimeout ( ) to improve clarity
added GeoLocationRequest and GeoLocationResponse classes to CasCoreAuthenticationComponentSerializationConfiguration to enhance serialization support for Geolocation requests and responses
updated assertions in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to use ` artifactFactory . createBuildArtifact ` instead of ` ImmutableSource
tika - 1623 -- add support for jaxb 2.0
apps - 2088 do n ' t cause concurrent modification exception
fix potential race condition in tcpnioconnection
added equality checks for the ` hasValue ` method in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest `
updated visibility logic in BackgroundAppState and ShelfScrimView to include vertical swipe indicator to enhance user experience by providing a smoother interface
fix npe in matdefeditorlelement when n navigator be null
mow - 169 fix image positioning for mow pin image
refactor ErrorOccuredInOnExceptionRoute class to improve exception handling logic
[ astro ] change location change log level to debug
simplified the assignment of ` irrUnit ` and ` pemUnit ` for clarity to improve code readability and maintainability
( chore ) camel - jms : disable hang test
updated import statements in GuiceFactoryTest . java to reflect new dependencies to ensure compatibility with the latest Gson library and improve test coverage
added support for system features in RobolectricPackageManager to enhance functionality for managing system features in the Robolectric package manager
added a new constant ` PROP _ PATH _ POSTFIX ` and modified ` RCAFrameworkLoader ` to support additional path properties to enhance
[ hotfix ] remove useless log in task . java
added null and empty check for enumerationValues in RADProperty . java to ensure enumerationValues is not initialized to null
refactor inline handling in BoxBuilder and InlineBoxing classes to improve clarity and functionality to enhance code readability and maintainability by
added a new method ` collectAndSendTelemetryDataAsynch ` to collect and send telemetry data asynchronously to enhance asynchronous processing of telemetry data for impro
removed unnecessary database type alteration for TEXT column in UpgradeCatalog260 . java to streamline the code for better readability and maintainability
update error messages for index and temp resources directories to provide clearer guidance on permissions to enhance user understanding of directory creation issues
refactor DatasetUtilities class to improve code readability and maintainability
added a line to append the selector ID to the key in the Matcher class to enhance the output to include the selector details for better context
updated debug logging format in GouraudShadingContext . java to improve clarity and consistency in color representation
updated taskbar visibility and visibility control in the StashedHandleViewController , TaskbarDragLayerController , and TaskbarLauncherStateController classes
removed duplicate elements from KeyExchange . java to enhance code readability and maintainability
added a type check for ` JdbcConnection ` before executing the version query in ` CockroachDatabase ` to prevent potential ` ClassCastException `
updated string handling in ServerMainTest to use a variable for file index to improve code readability and maintainability
added a method to retrieve the media recordering MIME type in CodenameOneImplementation , MediaManager , Display , and ImageIO classes to enhance media
changed the access modifier of the ` useShaders ` method from private to public and updated its usage throughout the ` RenderTileEnchanter ` and
[ calcite - 2692 ] druid adapter should use oracle ' s oracle ' s oracle ' s oracle ' s oracle
removed unnecessary whitespace in ZkStateReader initialization to improve code readability and maintain consistency
pdfbox - 4071 : disable external entity expansion , a suggest by valerybokov
added a new interface ClientRegistrationIdentifierStrategy to provide a mechanism for retrieving client registration identifiers
replaced a condition with a while loop in UrlHelper . java to improve readability and maintainability of the code
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated related logic to enhance clarity
fix border property template to avoid npe
changed log level from info to debug for current reconnect backoff in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during reconnect attempts
updated ` HubUpdater ` to utilize ` HubRegisterResponse ` instead of ` Connection ` for better response handling to enhance clarity and maintainability
replaced ` byte . toUnsignedInt ` with ` Byte . toUnsignedInt ` for unsigned conversion in multiple classes to ensure consistent handling of byte values to
[ hotfix ] fix checkstyle violation in opentracingtransactionproducer
updated caching configuration from ENABLED to CACHE to improve caching efficiency by using a more appropriate cache type
changed the ` rangePannable ` variable from ` true ` to ` false ` in ` CategoryPlot . java ` to disable range pannable functionality to
refactor main active page determination logic in AllAppsContainerView . java to improve code clarity and maintainability to enhance readability and ensure
changed visibility of glCaps and renderer variables from static to private and removed redundant instance variables in Visualizer2TopComponent . java to enhance encapsulation
[ hotfix ] fix checkstyle violation in functiontest
changed constructors of JarFileResource and JarResource to be protected to enhance encapsulation and restrict instantiation to subclasses
refactor DefaultTrackSelector class to improve code readability and maintainability
added a loop to wait for unseq merging status in LevelCompactionTsFileManagement to ensure proper synchronization during unseq merging operations
update fee currency from AUD to BTC in BTCMarketsAdaptersTest to ensure accurate fee representation for user trades
updated SQL queries in Post . java , HibernateDTOProjectionTest . java , and JPADTOProjectionTest . java to improve data retrieval
refactor Unicode class to improve code readability and maintainability
updated the ` installAutoInstance ` method to include a ` Service ` parameter and added checks for the " use . hive . interactive . mode
remove unnecessary call to delegate . oncomplete ( )
camel - 14284 - camel - aws : use builder instead of deprecate deserializer
added handling for BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve value type validation and exception handling for unsupported values to enhance robustness by providing
refactor methods in TreeBackedProcessorWrapper to use ` javacProcessingEnvironment ` instead of ` inner ` to improve code clarity and
removed annotations from the genericParameterType to streamline the code by eliminating unnecessary annotations
added support for AC3 streaming in the PlaybackController and updated playback state handling in the VideoManager to enhance audio playback functionality and improve
modified the return statement to include a JSON content map to enhance the response by providing a structured representation of the response data
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address potential deprecation warnings related to Commons
added a test for selecting a SQL template from a database in IoTDBExtendTemplateIT . java to ensure that the SQL template is correctly
refactor RTimerTree class to improve performance and maintainability
move graphbuilder to core . rules . graphbuilder to avoid circular dependency
fix issue # 1358 , add test case
added a new client thread pool named " clientThreads " and set a name for the executor in the ScheduledExecutorScheduler to enhance thread management and
changed access modifier of ` treePane ` and ` resultPane ` from protected to private and added a checkbox for enabling error logging in ` ViewResultsFull
added phone number descriptions to ScimUserEndpointDocs to enhance documentation clarity for user phone numbers
added a private constructor to the ` DeleteFiles ` , ` IndexFiles ` , ` IndexHTML ` , and ` SearchFiles ` classes to enforce singleton
added null checks for responseMap and status code in JsonHttpPropertyRequest and URLStreamProvider to enhance error logging for HTTP response handling
refactor SolrRequestHandler class to improve code readability and maintainability
added a condition to check if ` parallel ` is not equal to ` DEFAULT _ PARALLEL ` in ` XmlSuite . java ` to ensure that `
vmware : fix checkstyle issue
added handling for SCARD _ E _ NO _ SMARTCARD in addition to SCARD _ W _ REMOVED _ CARD to improve error
added import for LuceneTestCase and annotated the Test2BTerms class with @ SuppressSysoutChecks annotation to enhance debugging capabilities by suppressing unnecessary
camel - 14263 : camel - bindy - add support for multiple bindy key value pair to the model
change default value of useowner and usetimestamp to false by default
changed the parameter type of ` runAndCheckException ` method from ` Runnable ` to ` ThrowingRunnable ` and updated the exception handling logic to enhance
added null checks for ` via ` , ` viaContext ` , and ` pathFromSeed ` in ` CrawlURI . java ` to avoid potential
camel - 14263 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and improved null handling in LiquibaseXMLTransformer
change default certificate expiration to 90 day
added a new variable ` smoothDelta ` and modified calculations related to frame and elapsed time in ` ThreadHandler . java ` to accurately reflect the
added null checks for paginator and table name in HttpBatchReader and HttpScanBatchCreator to enhance robustness by preventing potential Null
added null check for CompactionInfo client in Worker . java and implemented a new test for the findNextCompact functionality in TestWorker . java to ensure
added onSaveInstanceState method to ShadowFragmentActivity and corresponding unit tests to ensure proper handling of fragment state changes during fragment state saving
[ hotfix ] fix checkstyle violation in jobresourcefactorybean
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure correct color parsing functionality
added error handling for NoResultException in AbstractJPAQuery to improve robustness by gracefully handling NoResultException during query execution
refactor Community handling logic to improve clarity and maintainability of the code
updated the wallpaper depth effect retrieval from LawnchairApp to LawnchairApp to ensure compatibility with the current application context
removed redundant import statements in LocalManagementTest . java to clean up the code and improve readability
updated the ` updateTotalEnergyAverageUsage ` method to retrieve the head slot timestamp to ensure accurate tracking of the timestamp for energy usage updates
add null check for extensions before appending them to the string to avoid potential NullPointerException when extensions are null
3 . x : fix flatmap issue for cancelled inner error ( # 6662 )
added connection manager timeout settings in multiple classes to enhance connection management and logging for better troubleshooting
reformatted the declaration of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to ensure compatibility with the latest model architecture
removed duplicate calls to SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and BaseImageService . java to stream
added a test to verify that the output hash calculation is not calculated when caching is not writable
camel - 14263 : camel - netty - add option to use bytebuffer instead of string .
updated the alterPartitions method to use a qualified table name instead of the old name to ensure compatibility with different database contexts
improve error message when use vert . x transport with prefernativetransport = true
add unit test base on user forum issue
streamex : fix typo in javadoc
added hints for Java EE query and lock timeout in SessionImpl . java to enhance query performance and resource management
added a new class ` StaticLoggerBinder ` to provide a logger factory for SLF4J logging to facilitate the integration of SLF4
hbase - 26937 fix npe in hbase - client ( addendum )
added orientation checks in TaskbarManager to ensure correct behavior based on new and old window configurations
fix xmpp room occupant name encode issue
updated the ` longStackPut ` method call in ` StoreDirect . java ` and added a new test class ` Issue265Test . java
added @ SuppressWarnings ( " mutable " ) and @ SuppressWarnings ( " selfassignment " ) annotations to multiple Java files to enhance code clarity
jbrules - 2631 : add miss holder class to make executionflowcontroltest happy
removed unnecessary lines in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability and maintainability
updated NBWriteServlet initialization to include an unlimited flag to enhance flexibility in handling write limits
import : fix invalid block total difficulty
updated action assignment logic in DefaultPlaybackController . java to streamline action handling for current window seekable states
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and updated method signature in SecurityServicesFeature . java to improve thread safety to en
updated the calculation of position and bend angle in AllAppsView . java to improve accuracy of position and bend distance
added a check for the presence of a colon in the key to ensure proper handling of colon - separated URLs
added PrincipalResolver to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance authentication metadata population to support principal resolution to improve flex
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve JSON parsing flexibility and error handling
added a method to remove trailing slashes from a StringBuilder to enhance string manipulation by ensuring proper handling of backslashes
added a new method ` matchesSomePatterns ` to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to enhance
hbase - 26937 loadincrementalhfiles do n ' t check for exist file
added potion handling for WATER potion in BlockFire . java to enhance block fading functionality to improve user experience by firing a fade event
removed unnecessary whitespace in the ` beginOrAdjustReorderPreviewAnimations ` method call to improve code readability and maintain consistency in formatting
refactor calculation of decreaseFactor in ContractStateCapsule and ReceiptCapsule for clarity to improve code readability and maintainability
added readiness checks and improved asynchronous processing in AsyncContentProducer and BlockingContentProducer to enhance resource management and ensure proper handling of
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that the weightField is mandatory to avoid potential NullPointerExceptions
added support for Info . plist substitution in AppleBundle and implemented a test for Info . plist substitution in AppleTestIntegrationTest to enhance plist variable expansion
improve turret bullets and laser turret entity ' s shooting behavior
updated KucoinAdapters to cast to Object instead of using adaptOrder to enhance type safety and prevent potential ClassCastException
added a new test class PreParseGrammarTest for XML parsing functionality to verify the functionality of XML schema parsing
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple classes to enhance suppressing of missing documentation lint warnings
added font overriding functionality in ExtendedEditText to enhance text visibility in the user interface
added a null check for the current user in AuthorizeTag . java and implemented a test for unauthorized requests in AuthorizeTagTests . java to
camel - 14263 : camel - cxf - add warn log when uri contain unsafe character .
added an override for the setUpData method in JDBCGeometryTestSetup class to ensure proper setup of data before running tests
removed unused import of DumpHandler from MultipartFilterTest . java to clean up the code and reduce unnecessary dependencies
[ hotfix ] [ runtime ] fix checkstyle violation in backendrestorerprocedure
add configuration to disable rmi registry creation
replaced String . join ( " , " , anticompactRanges ) with StringUtils . join ( " , " , StringUtils . join ( " ,
added display metrics handling and updated qualifiers in QualifiersTest and RobolectricTest classes to ensure consistent display metrics across different environments
[ java ] : add cluster member id to service heartbeat counter .
added conditional logic to set totalThreadAllocatedBytes based on Java version to ensure compatibility with newer Java versions
added handling for negative and positive infinity in the CustomExpression class to ensure accurate representation of numeric values in hash calculations
updated logging statements in AjaxListener . java for consistency and clarity to enhance readability and maintainability of the code
added authentication routes and methods in AuthenticityController and AuthenticityFormTest to enhance user access control functionality in the application
add assertion to ensure nextnode be not null .
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
replaced direct calls to ` compareFalseFirst ` with ` compare ` in ` DefaultTrackSelector . java ` to improve code readability and maintainability
[ hotfix ] fix checkstyle violation in runtimeserialization
ggb - 1975 crop the image only when it ' s cropable .
refactor UnitOfWorkFactory to improve code readability and maintainability
added a new constant for all apps cell width and updated icon size retrieval to use it to improve clarity and maintainability of the code
tika - 4071 -- add content - type - name header to mail content - disposition - filename field
updated URI generation in ThumbnailsCacheManager . java to include file ID and local ID to enhance thumbnail generation accuracy for file processing
added checks to reset the input stream if mark support is not available to ensure proper resource management and prevent potential memory leaks
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new development
added a configuration property to control error stack visibility in the error page to enhance the server ' s flexibility by allowing users to control error
server : cleanup template in case of domain cleanup failure
sparc : remove unnecessary null check
[ drools - 5058 ] throw unsupportedoperationexception for legacy drool 5.x api
modified onRequestPurchaseResponse method to include a final parameter to enhance flexibility in handling cancellation responses
increased DEFAULT _ TIMEOUT _ MILLIS from 100ms to 1000ms in UnboundedSourceSystemTest . java to accommodate longer timeout duration
updated resource name qualification logic in ShadowAssetManager . java to ensure proper handling of resource names without leading or trailing slashes
deleted the ` MrefStat . java ` and ` MrefStat1 . java ` files to remove unused references to streamline the codebase
added a check for empty scope in DependencyInsight . java to ensure " compile " scope is used when scope is not provided
updated BTCETradeServiceRaw to include error handling for missing trades and bad status messages to improve error messaging for better debugging and error reporting
use hamcrest assertion instead of junit in ci
bitcoinuri : support multiple payment protocol request .
planner - 383 throw illegalargumentexception for collection wrapping
removed duplicate setting of folder info in FolderPagedView . java to streamline the code by eliminating redundancy
[ jfr ] do n ' t call free ( ) on jfrbufferaccess when write success
refactor null value handling in BasicAbstractTuple to use a for - each loop to improve code readability and maintainability
refactor LintUtility to use InputResource for reading linter configurations to improve resource management and enhance error handling during file reading
replaced calls to updateBackgrounds ( ) with updatePaddings ( ) in AppsContainerView . java to ensure backgrounds and paddings are
updated inventory tick handling in the inventory logic to ensure correct indexing of ticked items in the nonnull list
added a case for OCELOT _ BAY in PlayerEvents . java to enhance event handling for OCELOT _ BAY gameplay
[ hotfix ] [ state ] fix checkstyle violation in statettlconfig
added null check for parameter ' x ' in PreparedStatement to ensure proper handling of null values in PreparedStatement
[ java ] print out descriptor for all valid recordings in the catalog .
replace string concatenation with single quotes for newline handling to ensure proper formatting of newline characters in StringBuilder operations
added a new test for serializing and deserializing JSON snapshots in the SiteSnapshotVariationsTest class to enhance test coverage for snapshot serialization functionality
refactor BroadTest to encapsulate transaction and block removal logic into a separate method to improve code readability and maintainability
added conditions to set channel state based on the presence of LensMaskOpen , LensMaskClose , and OnOffType to enhance
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to simplify method
refactor ChangeLogIterator constructor to accept a list of ChangeSetFilters instead of a single ChangeSet to simplify constructor parameters and improve code clarity
exit ( 1 ) when exception be a guest exception
ec2 : use system property instead of env
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization processes
refactor spacing logic in SpacesVisitor . java to improve clarity and maintainability of the code
# 1682 - enh : add support for copy near - cache option ( # 1683 )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest ` for verifying visibility of a hidden border in a floated element
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` ProjectCommand `
updated KucoinExchange to use a dedicated PROD _ URI instead of LIVE _ URI to improve clarity and maintainability of the code
updated regex patterns and exception messages in SpringResourceAccessor . java to improve clarity and correctness of resource path handling
updated MICROGRAM _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARE _ CENTIMERE to
updated vertex mask retrieval to use getMaskWithSizePacked ( ) instead of getMask ( ) to ensure correct masking sizes for vertex attributes
deleted the Tls12SocketFactory . java file to the functionality was no longer needed in the project
refactor texbibentryresolver to use stream instead of set
added a method to check if Robolectric legacy mode is enabled in ResourcesTest . java to ensure compatibility with legacy resources during testing
added a check for FirebirdDatabase before creating a new DatabaseDataType for " DOUBLE PRECISION " to ensure proper handling of double precision data in Firebird
added null checks before setting the transaction manager to prevent potential NullPointerExceptions
added a new package - info . java file for testing stubs to provide package - level documentation for testing purposes
test : add timeout to outputstreamtest
no effective change - code cleanup - use try - with - resources
updated TermScorer instantiation to conditionally use PostingsEnum based on scoreMode needsScores to enhance flexibility in term scoring based on the
None
server : fix npe in uservmdaoimpl . listvirtualmachines
refactor DynamicPartitionPruner to utilize a new method for finding the target object inspector to improve code clarity and maintainability by
added a method to remove build artifacts for specified outputs in ArtifactFilesystem and updated ActionExecutionStep to call this method to enhance artifact management by
added row selection logic in ThrustCurveMotorSelectionPanel to ensure correct handling of selected rows in the table
use assertarraystoreexception instead of assertarraystoreexception in integration test
refactor PropertySource class to improve code readability and maintainability
added user agent support to HttpClientBuilder and HttpClientConfiguration to enhance flexibility in managing user agents for HTTP requests
refactor MemorySessionStore to use a ConcurrentMap for session data restoration to improve thread safety and maintainability of session data management
updated assertions in IssueTest and Reporter classes to expect five distinct test instances and changed the return type of getResults from Set < String > to Set
updated ByteArrayDataSource initialization to use a default content type if none is provided to enhance flexibility by allowing file content type to be null
add event for denial of character activation request
added @ SuppressWarnings ( " serial " ) annotation and refactored code formatting in GraphApplet . java to improve code readability and maintainability
added a method to update the snapshot radius for all task views in RecentsView and removed the private method from TaskView to improve code clarity
added SLF4J logging for 3rd party services and updated schema generation in StaticMicroserviceVersions . java to enhance traceability and debugging capabilities
changed the return type of the put methods from void to int in ArrayMap . java to ensure compatibility with the intended return type of the put method
updated KafkaContainerCluster initialization and improved startup timeout handling in KafkaContainerCluster to enhance stability and reliability of Kafka connections
( chore ) camel - defaultmqpushconsumer : do n ' t try to send back a message back if it fail to send a message back
refactor header addition logic in StaticServerHttpHeadersWriter to handle cases - sensitive headers more robustly to ensure headers are only written when they are not
updated EventListenerList to enhance package access checking for listener type handling
added a custom adapter to handle multiple applications in the ApplicationsFragment to enhance the functionality to support multiple applications in the application list
updated the applyIcon method to include null checks for iconView and task to enhance code clarity and prevent potential NullPointerExceptions
refactor DownloadTracker and DownloadManager to use try - with - resources for resource management to ensure proper closure of resources to prevent potential memory leaks
added a new ` InsertStatement ` in ` BaseSqmToSqlAstConverter . java ` to manage the insertion order of queries to ensure that the
added JUnit tests for HibernateCursorItemReader integration tests to enhance test coverage and ensure proper execution context management
added a poller task to the DataInputStreamWithTimeout class and refactored byte reading logic in DataInputStreamWithTimeout . java to improve message handling
added ENABLED _ TS mode to VersionTargetGraphMode and updated VersionedTargetGraphCache to use ToposortBasedDepsAwareExecutor to enhance sorting
refactor UpgradeCatalog150 class to improve code readability and maintainability
rename networkparameters . testnet3 ( ) to networkparameters . oldtestnet ( )
do n ' t update object panel selection if only one geos be select
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to enhance code clarity and
replaced ` IndexOutput ` with ` BufferedIndexOutput ` and added error handling for resource closure in ` HdfsDirectory . java ` to improve resource management
pdfbox - 4892 : do n ' t set clip when there be no next page
removed unnecessary synchronization in the SocketChannelImpl class to simplify the code and improve readability
added a new method ` addToRow ` to ` TemplateTransformer ` for adding rows with multiple values to enhance functionality to support multi - value
added a method to check if the operating system is Windows and refactored file renaming logic in Wallet . java to ensure proper handling of file names
replaced ` ALPHABET _ STRING ` with ` CHECK _ DIGIT _ STRING ` and updated related constants to use ` CHECK _ DIGIT _ STRING `
added a boolean flag ` hasExecutedUnexpected ` and modified type casting logic in ` NodeGenFactory . java ` to handle cases where ` executedType `
removed unnecessary check for stored field length in IndexingChain . java to streamline code for better readability and maintainability
fix ( griffin ) : fix timestamp with nanos in where clause
removed unnecessary null check for postedRunnableStacktraces in LwjglCanvas . java to simplify code and improve readability
improve documentation for overridden storage url
replaced ` assertInitialized ` method with ` waitUntilInitialized ` method in ` ConnectionPoolTest . java ` for improved synchronization to enhance thread safety
updated directory retrieval to use " single " instead of " null " to ensure consistency in directory naming conventions
refactor UserData initialization and filter count handling in FaultTolerantChunkProcessor . java to improve clarity and functionality to enhance readability and
updated tabbed method formatting and added error handling in T4994049 . java to improve code readability and enhance error reporting for file
refactor ConsoleReaderTest to use a unified assumeTrue method for WindowsTerminal type checks to improve code readability and reduce duplication in testing
removed unnecessary check for user info in GetFeedbackSessionsAction . java to simplify code for better readability and maintainability
adjusted selection logic in AllAppsView . java to correct logic for determining page boundaries
bugfix # 26921 , do not call notifyclientonresultsavailability if there be no profiled app thread
added model loading and refreshed functionality in DataModelManagerDialog , DbConnectionDialog , ExportPanel , and ExecutionContext classes to enhance data management
replaced the ` writeBufferSize ` variable with a static final ` WRITE _ BUFFER _ SIZE ` constant and updated related method calls to improve memory management
updated segment size calculation in DocumentsWriter and added a new test for non - compound files in TestIndexWriter to improve segment size handling and ensure proper
added a validation check for the " dvert " field in ArmatureModifier . java to ensure that the " dvert " field is not null before
refactor FileDisplayActivity to improve code readability and maintainability
added a suppression warning for unsupported operations in ApplySpecialization . java to avoid stack trace filling in stack trace to improve debugging by avoiding unnecessary stack trace
update calculation of line height in LabelPainter to improve accuracy of line height representation
updated RotationTouchHelper constructor to accept a DisplayHolder parameter to improve flexibility in managing display instances
added a check for already quoted strings before appending to the buffer to ensure that quoted strings are not appended to the buffer when already quoted
replaced Long . valueOf ( s , 16 ) with IdConversion . convertToLong ( s ) in ServletHandlerInterceptor . java and added a new
renamed the method ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig ( ) `
updated SQL query syntax in TestSqlEntityProcessorDelta . java to improve clarity and consistency in country code extraction
refactor Cache class to improve performance and maintainability
updated variable names and claims in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in naming conventions
updated the ` doBefore ` method to include a ` false ` parameter and modified the ` seenDocIDs ` set to be final in ` TestUnified
added a new JPanel and JScrollPane to the GcodeTable class with a data button to enable users to add data to a GcodeTable
replaced the constant ` WEBAPP _ CONNECT _ TIMEOUT ` with a dynamic value from ` cfg . getConnectTimeout ( ) ` to improve flexibility by
updated various classes to improve type safety and clarity in URI encoding logic
refactor TestMediaService class to improve code readability and maintainability
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK to the Messages . java file to provide a
add a new file ` MarketsPrintTool . java ` for displaying market information for various cryptocurrency types
added validation for hostname compliance in EndpointAddressInterceptor to ensure that only valid components are accepted to maintain request integrity
added ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods in ` AccountProxy ` and ` HttpAccount ` classes to en
refactor ServerSpanThreadBinder class structure to improve code readability and maintainability
update bulletphysics to use userData instead of getUserPointer ( )
added " the _ geom " and " number " attributes to the Csv2Shape builder to enhance the configuration of geometries in CSV output
updated method parameters from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve code clarity and eliminate unused
refactor Parameters class to improve code readability and maintainability
added functionality to ignore null values in piePlot to enhance data visualization by preventing null values
refactor resource bundle loading logic into a separate method ` putBundleInCache ` to improve code readability and maintainability by reducing dup
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a method to check if editing is allowed during the action execution
added userModified flag to LoginSamlAuthenticationProvider to track user modifications effectively
added a new file TestSealedObjectNull . java to compare the sealed object with a null cipher to ensure that the unseal and compare function correctly
renamed methods in ConnectPromise to setResponse and succeeded in WebSocketClientConnection to improve clarity and maintain consistency in method naming
added a static final Set < Material > SNOW in BlockEventListener . java to ensure compatibility with devices running version 1.16 . 5 and above
added a lastTradeId tracking mechanism and updated Trade creation logic in CryptsyAdapters and CryptsyPublicTrade classes to
added error handling for closing HMS connection in HiveStreamingConnection to improve stability by logging exceptions during connection closure
fix server seed to use securerandom instead of currenttimemillis
added a new device profile " Nexus 5 " to the device profiles in DynamicGrid . java to support additional nexus devices in the application
3 . x : fix possible npe in refcount ( ) ( # 3979 )
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve flexibility in creating SynthContext instances
added a new constant WHITESPACE _ AROUND _ TEXTUAL _ OP and updated formatting token handling in FormatVisitor and TokenFormatter to en
added checks for non - empty file existence in SaveTask . java and implemented test cases in SaveAndLoadTaskTest . java to ensure that
added synchronized keyword to several method signatures in MLogWriter . java to ensure thread safety during concurrent operations
added support for mutablelogevents to smtp manager
replaced LengthLike with NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure proper handling of non - negative lengths
replaced calls to ` getUser ( headers ) ` with a new method ` createContext ( ) ` in multiple resource classes to streamline context creation by removing
refactor sootworldbuilder sootworldbuilder to not depend on soot . unitbox
updated JUnitRunner and AndroidPlatformTarget to improve clarity of error messages regarding build tools and SDK installation to enhance user understanding of build tools
reduced the cache size from 16MB to 8MB in OmniNotes . java to optimize memory usage for better performance
updated condition to include both ' finish ' and ' start ' in InvocationStageTrace . java and modified TestInvocationPublishModelFactory . java to
added a try - catch block to handle potential NullPointerException when loading the key store
updated ServerSocket initialization and modified port handling in UpstreamCheckUtilsTest to improve test reliability by allowing dynamic port assignment
ggb - 2118 fix : do n ' t place split pane above other split pane
added conditional checks for OpenGL constants in shader storage limits based on OpenGL caps to ensure compatibility with different OpenGL versions
refactor PopulatorContext class to improve code readability and maintainability
do n ' t show save all notification for project that do n ' t match the current project ( # 4104 )
added a method to retrieve the character set from the file encoding or UTF - 8 encoding to ensure proper handling of character encoding in JSON output
added a length check for the last argument in the IkStepDefinition class to ensure that the last argument is validated before proceeding with further operations
replaced hardcoded OSSO header values with a constant prefix to improve maintainability and readability of the code
( chore ) camel - generator : deprecate suffix - strategy option
no effective change - remove debug log
try to fix flaky test
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance and readability of the code
updated the handling of " ROLLBACK " operation to be case - insensitive and added checks for " liquibase . hub . mode "
added constants for IBM J9 VM and Eclipse OpenJ9 VM versions in Constants . java and implemented a test for versioning in TestDDR
modified font request logging to accommodate CompositeFont instances and added a new DebugFonts class for testing fonts to enhance flexibility in font handling and
updated import statements in ALPNNegotiationTest . java and NegotiatingServerConnectionFactory . java to use HttpVersion instead of SSLEngineResult
added rate control settings for HTTP / 2 connections in MaxConcurrentStreamsTest to ensure proper handling of rate - limiting during HTTP / 2 tests
added a new file Test6741426 . java that implements a JComboBox with a Nimbus look and feel using NimbusLookAndFeel to
updated the assertion message in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of error messages for better debugging
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure robustness by preventing potential NullPointerExceptions
move s3copyobjectrequest to correct place
refactor category setup methods to use a consistent parameter name for clarity to improve code readability and maintainability by reducing redundancy
updated error message in TemporaryFolderUsageTest to include the file at the root directory to improve clarity of error messages for better debugging
updated type information handling in ` MappingMongoConverter ` to use ` ClassTypeInformation . LIST ` and ` ClassTypeInformation . OBJECT ` instead of `
add test case for clientconfig # addaddress ( string , string ) .
added " keynectisrootca [ jdk ] " to the VerifyCACerts class to enhance certificate verification capabilities for root certificates
refactor compute method to return the number of output events instead of void to improve performance by directly returning the number of processed events
added a conditional check for popup visibility before setting the menu mode to ensure the menu remains open even when the popup is not showing
pdfbox - 2576 : fix off - by - one error
added a new test class FinalizerInfoTest for verifying the garbage collection of finalizer information to ensure that the garbage collection functionality works correctly
( chore ) camel - spring : fix compilation error
refactor BurningManService to use a custom address for compensation proposals instead of the burning man receiver address to en
refactor StringSubject class to improve code readability and maintainability
increased the size of longData array from 1000000 to 1000 to accommodate a larger amount of data to optimize memory usage during testing
corrected the spelling of " maxInboundMetadataSize " in the method name to improve code readability and maintain consistency
updated query handling in RetweetActivity and Search classes to replace " from : " with " from : " to ensure consistency in query formatting
removed an unnecessary if statement to streamline the code for better readability and maintainability
added an import account endpoint to YubiKeyAccountRegistryEndpoint to enable account management functionality in the YubiKey account registry
* lwjglcanvasrenderer now pass the texture parameter to the shader program
added null checks for ` cnt ` in ` paintOnTopLoop ` and adjusted menu positioning in ` SideMenuBar ` to enhance code robustness
refactor AbiWriterProtocol class structure to improve code readability and maintainability
added null check for subName in HierarchyBase . java to ensure caption is set correctly for dimension without a caption
updated data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY to accurately reflect the granularity of data
added null check for the simulation object before accessing its properties to enhance code robustness by preventing potential NullPointerExceptions
replaced the requestBlindVoteListFromNetwork method with a call to send a republish request using the missingDataRequestService to streamline the request
added a new test method ` testCase4 ` to ` PostgresTest . java ` for testing PostgreSQL connections to ensure proper functionality of the
updated substring method from " String . indexOf " to " String . lastIndexOf " in SubtitleUtils . java and RemoteUtil . java to ensure correct
updated line separator handling in DefaultJavaPrettyPrinter to use a constant for regex to improve code readability and maintainability
make singleimplementor snapshot updater thread - safe
added checks to exclude certain queries in the SimpleFacets class to ensure that only relevant queries are included in the results
refactor thinghelper to use bridgeimpl instead of thing
replace printHelp ( ) with error ( ) in Ktab . java to provide clearer error messages for unknown commands
added a check for the existence of the output file before returning it to ensure that the output file is only returned if it exists to prevent potential errors when
added date parsing logic for " T " and " + " to ensure correct parsing of date strings in the DateConverter to prevent potential parsing errors
added a test for retrieving posts by their slugs in SpringDataJPALockTest and implemented a query for fetching posts by their slugs
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a null check for ` can
added SimpleClientHttpRequestFactory to ClientRegistrations for improved request handling to enhance request management and connection timeouts for HTTP requests
updated SourceTest . java to include assertions for file existence and name verification to enhance test coverage and ensure correct file type handling
move graalvm . version to system . setproperty ( graalvm . version ) , since graalvm . version be already available
added logic to reset access and refresh token validity settings based on client properties
updated the return statement to include a default API version check to ensure compatibility with Android API version checks
refactor property placeholder helper methods for clarity and consistency to improve code readability and maintainability
updated string format in Resource . java to include additional information about certificate fingerprints to enhance clarity and usability of certificate fingerprint information
refactor ZkSolrClientTest to improve collection processing logic and synchronization to enhance test reliability and clarity in concurrent scenarios
added BigInteger type to simpleTypes in MongoMappingContext to ensure proper handling of BigInteger values in MongoDB queries
added a condition to check if the button text is the view string before displaying the toast to enhance user experience by preventing potential null pointer exceptions
added a condition to check if MEncoder is disabled based on configuration to ensure compatibility with configurations that do not require out - of - sync
reduce event loop size to improve performance
changed access modifiers of several fields and methods from abstract to protected in CountMin4 , IncrementalResetCountMin4 , and PeriodicReset
updated ExternalFileField to include a method for retrieving file float source and added a new ExternalFileFieldSortTest class to enhance file sorting
improve exception message for connection error
added event source handling to OpenRocketSaver and updated FlightDataBranchHandler to utilize this new source ID to enhance event data
changed the visibility of the check method from private to protected to allow subclasses to access and override the method
added synchronization handling for file synchronization in FileActivity to improve user feedback during file synchronization operations
updated URI generation in ThumbnailsCacheManager to include file name and remote path to improve image preview generation by using encoded remote paths
added a check to ensure the InfiniteContainer is initialized before proceeding with further operations to prevent potential NullPointerExceptions
updated total calculation in IntHashSet . java to correct the total value calculation to accommodate additional values
added a conditional check for lock expiration in FeedRefreshUpdater to ensure feed updates are only performed when the lock is active
refactor ACE handling logic in SolarisAclFileAttributeView . java to improve clarity and maintainability of the code
refactor Edge initialization to use an array for edges instead of a list to improve code readability and maintainability
added IOUtils resource cleanup in ZkCLI . java to ensure proper resource management and avoid potential memory leaks
[ bibtex ] fix issue with invalid bibtex comment ( # 1542 )
added strict parameter handling in Main . java and corresponding tests in MainTest . java to ensure correct parsing of properties with unknown arguments based on strict
fix validation of pojos with @ constraint annotation
( chore ) camel - http : fix typo
added a call to waitForThingsToLevelOut with a delay of 30 seconds to wait for things to level out in TestCloudPivotFacet . java to
removed unnecessary checks for byte length in UBJsonWriter . java to simplify the code for better readability and maintainability
refactor ApplicationTest class to improve code readability and maintainability
replaced String details with StringBuffer details to improve performance and readability of the code
refactor method signatures to use RoboType instead of Type to improve clarity and consistency in naming conventions
[ java ] do n ' t abort on dispatch completion .
added cacheKey and cacheLookup attributes to EntityProcessorBase and updated related methods to enhance cache management by ensuring both cacheKey and cacheLookup
added a new file PutfieldError . java that throws an exception for incompatible class changes to ensure that the Bad class throws an appropriate runtime exception
fix : do n ' t try to translate private address
francoisreynaud : if memtable _ throughput _ in _ mb or memtable _ operations _ in _ millions exceed the
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple
removed duplicate encodedLength ( ) calls in Flyweight . java to streamline code by eliminating redundancy
[ hotfix ] fix checkstyle violation in testmethodresultmapbuilder
added handling for Integer methods in FindNullDeref . java to improve error handling for NumberFormatException and RuntimeException exceptions to enhance robustness by preventing
[ hotfix ] [ runtime ] remove unused field in tasklocalstatestoreimpl
updated return statements in mmm Utils . java to return 1 " m " and 1 " h " instead of 0 " m " and 1
added type checking for DeepShortcutView in Utilities . java and modified drawable assignment in FloatingIconView . java to enhance code clarity and support for
changed the type of the ` validator ` variable from ` String ` to ` Object ` and updated the ` JwtClaimValidator ` constructor to accept a
renamed ` buyQuickRate ` and ` sellQuickRate ` methods to ` getBuyQuickRate ` and ` getCoinmateSellQuick
added a new class ` CoverageConfig ` with a ` CoverageController ` and ` CoberturaCondition ` to manage coverage configurations to enhance the
added a check to ensure the EventBus is registered only if it is not already registered
added ASCII - only validation to normalize methods to ensure compliance with ASCII standards
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL update statistics in SpillableGroupByIT . java and NoOpStatsCollectorIT . java to ensure that the update statistics SQL
( chore ) camel - cometd : migrate cometdproducerconsumertest to camel - test - base
added attributes for OK in 4.01 in HtmlTag . java and updated test cases in ListTagsTest . java and TableTagsTest . java to
added a closing < br / > tag to the HtmlCoreReport class to enhance the output formatting for better readability
updated memory usage calculation to account for null scores to ensure accurate memory usage estimation when scores are not provided
added Gson serialization and deserialization methods for StringHolder in CustomTypeAdaptersTest . java to enhance testing capabilities for custom Gson serialization and
added extra data handling in MergeCoordinator and a corresponding test in MergeCoordinatorTest to ensure correct behavior when using extra data from mining parameters
added a static final map for variable arguments and updated the method to accept parameters to enhance flexibility in argument passing
refactor PathParamServerEndpointConfig class to improve code readability and maintainability
updated threshold retrieval logic in DefaultMigrationAddressComparator and added shutdown logic in MigrationRuleListener to ensure graceful graceful shutdown of the rule management executor to
updated the ` attach ` method to accept ` Object ` instead of ` Part ` to enhance flexibility in handling multipart uploads
move bootstrap - responsive . css and jquery . min . css to twitterbootstrap / css / bootstrap - js / twitterbootstrap .
removed the pPOSTag pattern from SpanishTreebankLanguagePack . java to simplify the code and improve readability by eliminating unnecessary complexity
hhh - 13807 deprecate abstractentityloader . load ( ) and deprecate uniqueentityloader . load ( )
hbase - 26937 clean up futures in regionserverflushtableproceduremanager ( addendum )
bugfix : do n ' t call super . setsize if width or height be 0
fix typo in fillpool ( )
updated assureMatchVersion ( ) method calls across multiple filters to ensure compatibility with the latest Lucene version to enhance flexibility in matching functionality
fix issue with executablemethodwriter . isabstract ( ) return false when it be an interface
jbrules - 2623 : fixing dRL parser to handle comma correctly
refactor multiple subject classes to improve code organization and maintainability
added a check to ensure payload length is non - negative before proceeding with frames with invalid payloads
moved PublishSubscribeChannelParser to a new package and updated its import statements to reflect the new structure to improve organization and clarity of channel configuration management
updated execution ID handling from String to Long across multiple classes to accommodate larger query execution IDs and improve data consistency
update digest with width , height , and height bits to enhance image processing capabilities
removed logging of overlay version in SolrConfig . java and added necessary imports in SolrConfigHandler . java to streamline configuration handling and improve code clarity
increased the delayUntil duration from 24 hours to 30 seconds to prevent frequent synchronous operations
fix checkstyle issue in segmentv1v2tov3formatconvertertest
refactor ` addPathToMTree ` method to accept ` Path ` instead of ` String ` for better clarity to enhance code readability and
added URI handling and improved error logging in DefaultPackageScanClassResolver . java to enhance URL processing reliability and provide clearer error
[ flink - 18552 ] [ table - planner - blink ] add helper function to extract accessed field from composite input type
added a new class SpringSecurityAuthenticationSource to provide authentication source functionality to enhance security by providing access to LDAP user details and credentials
renamed AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve clarity to enhance maintainability and readability of the codebase
updated minimum SDK version from LOLLIPOP to KITKAT to ensure compatibility with newer Android versions
replaced auto - suggest dialog with a cached file suggest dialog in GenericViewFragment to improve efficiency by using a cached file list
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and updated assertions in ` StoreAPITest . java `
removed the collection name parameter from the stream method in the ReadDbObjectCallback instantiation to simplify the callback instantiation for better readability
updated zoom factor calculations and zoom handling in MapOverviewImageMouseHandler . java to improve clarity and consistency in zoom handling logic
added similarity parameter to KNearestNeighborClassifier and updated ClassificationTestBase to utilize LMDirichletSimilarity to enhance accuracy of classification
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing by using a constant score range query
[ hotfix ] fix typo in lowresourcemonitor
updated package - info . java files to improve documentation clarity
added MTU request handling and corresponding tests in ShadowBluetoothGattTest and ShadowBluetoothGatt to ensure correct MTU request functionality in BluetoothGatt to en
added a createServletOutputStream method to the TestPayloadNameRequestWrapper class to provide a standardized way to create a servlet output stream for testing purposes
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling during service initialization
use concurrenthashmap to improve performance
updated resource strings from " u30B5 \ u30AA \ u30D7 \ u30E7 \
updated conditional check for size in JDBCTypeMapping and modified assertions in JDBCTypeMappingTest for clarity to enhance code readability and ensure
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal operations
replaced the ` isScreenReaderActive ( ) ` method with a new ` AccessibilityStateTester ( ) ` for managing accessibility state
added a " SIDE _ NAVIGATION " option to the menu bar ' s behavior conditions to enhance the functionality of the menu
removed unnecessary Disposable declaration from PoloniexManualExample . java and added state change handling in WampStreamingService . java to improve code cl
added validation for energy limit in UpdateSettingForEnergyLimitContractActuator to ensure that energy limit is greater than zero to prevent runtime errors
refactor URL handling in PostmanJsonBuilder to utilize Java ' s URL class for protocol and host information to improve code clarity and maintainability
camel - 14263 : camel - soap - daxb - expose the namespaceprefixref a part of the jaxb data format api
refactor assertions in TestRange to use a constant for better readability and maintainability to enhance code clarity and facilitate easier
added logic to restart the Jetty Solr server in BasicAuthIntegrationTest . java and updated security properties in ZkStateReader . java to ensure
added priceFeed parameter to TradesChartsViewModel to allow customization of market price for trade charts
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to ensure consistent configuration settings for metadata and
replaced the variable ` from ` with ` end ` for clarity and added bounds checking for the ` start ` and ` end ` parameters in ` Native
added FileDataStorageManager to manage file downloads to ensure the file is fully downloaded and stored
[ java ] use randomaccessfile instead of filechannel in mappedrawlog .
added a method to check if the registry is running and a retry mechanism to delete a file if it exists to improve reliability of file deletion operations
added calls to ` componentPresetDao . startLoading ( ) ` in multiple test files to ensure proper initialization of componentPresetDao during testing
removed unused IntBuffer variables and added @ SuppressWarnings annotations across multiple classes to improve code clarity and eliminate redundancy in warning messages
added null check for instances in TraceFeignContext to prevent potential NullPointerExceptions during execution
added TX _ MUST _ BE _ ENABLED _ TO _ SET _ ISOLATION _ LEVEL exception handling for transactions in isolation levels to ensure
added a method to retrieve the TransactionAttribute using DefaultTransactionAttribute in AbstractStepFactoryBean and ItemOrientedStep classes to enhance transaction management
updated CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient and refactored security interceptor to extend SecurityInterceptor to
added visibility control for the ' add category ' menu item in ListFragment and updated navigation drawer functionality in NavigationDrawerFragment to enhance user experience by allowing
renamed the method ` cancel ` to ` cancelMatchingOperation ` and updated its visibility to improve clarity and consistency in naming conventions
pdfbox - 2576 : avoid classcastexception , a suggest by valerybokov
updated font size handling and text size retrieval methods in TerminalView . java and TerminalBridge . java to improve clarity and functionality to ensure consistent font size
added a validation check for the fact before modifying it to ensure that the fact is only modified when it is valid
refactor DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and maintainability
replace the return statement with a new ArrayList instance that initializes the spans list to ensure the spans list is ready for use to avoid potential memory leaks
removed unnecessary lockService usage and simplified change log validation in Liquibase . java to streamline code for improved readability and maintainability
added a method to set a revision in MicroserviceVersions and updated InstanceCacheChecker to set the revision to null to ensure consistent handling of microservice versions
updated foreign key name handling and index creation logic in TableRetriever and AbstractRetriever classes to improve clarity and maintainability of foreign key
camel - 14263 - camel - aws2 - s3 : improve the configuration of endpoint uri override
removed the currency pair parameter from the getBitstampUserTransactions method signature
added a try - catch block around the getComponentInstance method in BlueprintContainerRegistry to handle potential NoSuchComponentException to improve robustness by gracefully handling
make push ( ) return a boolean instead of void
replaced direct calls to ` LegacyAddress . fromBase58 ` with ` BufferedReader . readLine ` for better readability to improve code clarity and maintain
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from other packages
added a Snackbar notification for push notifications in NotificationsActivity to enhance user experience by providing feedback on push notifications
added debug logging and refactored request handling logic in NettyAsyncHttpProvider . java to improve
replace null checks with StringUtils . isEmpty for better readability to enhance code clarity and reduce potential null pointer exceptions
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to issue # 2840
nifi - 6978 - add timezone field to aboutdto to allow toggling of timezone of nifi instance
updated assertions and boundary handling in Splitter . java to improve clarity and correctness of range splitting logic
no effective change - code cleanup
added synchronized block to manage active circuit additions to ensure thread safety during concurrent access to active circuit lists
changed exception type from GdxRuntimeException to IllegalStateException in ShaderProgram . java to ensure proper exception handling for uncompiled shaders
flume - 1623 . remove unused sink variable in eventdrivensourcerunner
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class to improve code readability and maintainability
make sure freehand function return an int instead of double
removed unnecessary whitespace in constructor parameters to improve code readability and maintain consistency
refactor database connection handling in SchemaCrawlerMain and Executable classes to improve resource management and enhance logging clarity
bump default tl version to 1.2 for jdk 17
updated exception messages in CountersManager . java for clarity to improve readability and maintainability of error handling
removed unnecessary call to stopAudio ( ) in MediaManager . java to simplify code and improve readability
updated debug logging in HttpConnection to include the cancelled state to enhance logging clarity by including the connection status
added a new method ` isTransient ( ) ` to ` JpaPersistentPropertyImpl ` and updated related unit tests to consider JPA transient fields as
updated assertions in UpgradeResourceProviderTest to reflect the correct stack version and upgrade repository version to ensure accurate testing of the desired stack version in the cluster
return object instead of symbol to avoid warning
changed the access modifier of ` isBinaryType ` method from private to public and modified output stream handling in ` Proxy . java ` to enhance access
updated TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE configuration to ensure correct maximum data size configuration
refactored the ` findProblem ` method in ` JavaEditor ` to use priority - based problems instead of hardcoded priority values to enhance
updated default off - heap settings in DictionaryIndexType , BloomFilterHandler , and DictionaryIndexConfig classes to ensure consistent default values for memory usage
updated TableWriterTest to use a constant for line separator to improve maintainability and readability of the code
refactor DebugHelper class to improve code readability and maintainability
added a texture ownership check to the ParticleEffect class to ensure that texture properties are properly initialized before use
added additional LDAP configuration properties to HiveConf to enhance LDAP configuration flexibility for users
chore ( ruby ) : update ruby microgenerator to v1beta1 ( # 29 )
updated InputMethodManager usage to use Context . INPUT _ METHOD _ SERVICE instead of Activity . INPUT _ METHOD _ SERVICE to enhance code clarity and
added a test for converting a map of string to integer to a map of primitive to object in DataTableTypeRegistryTableConverterTest to ensure correct
updated size calculation in TestFileSystem to optimize memory usage and increase test coverage
updated error messages in ContentTypeManager . java to provide clearer guidance on the nature of exceptions related to rule M2 . 4 exceptions
updated dropSequences method implementations across multiple database classes to ensure proper exception handling for migration failures
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
refactor field creation in DocumentBuilder to assign the result to a variable to improve code readability and maintainability
bugfix : hierarchicaliconstyping should only be call for active node
datamongo - 540 - added unit test for findone after upsert for non - existent object .
refactor mid calculation to use a local variable for calculations to improve code readability and maintainability
added a method to record launch statistics and refactored broadcasting logic in Launcher and Stats classes to improve clarity and functionality of launch
added graphics drawing functionality to the JavaSEPort class to enhance the visual presentation of the component ' s raster
refactor team - related code to use getTeamMembersFromRoster instead of team - members - in - team
added a check for zero ID and generated an ID if it is zero to ensure player ' s inventory ID is generated correctly
[ hotfix ] fix checkstyle violation in configdescriptionregistry
added null checks for returnType and returnTypeAnnotations in ReloadableJavaParserVisitor , ReloadableJava17ParserVisitor , and ReloadableJava8Parser
refactor TileMapRenderer initialization to handle blended tiles dynamically based on map properties to improve flexibility in managing tile blended tiles
removed unused classes from Probe . java to clean up the code and improve maintainability
IfcTools2D . java : fix npe in getarea
updated lockOnSync initialization and assignment logic to improve clarity and maintainability of the throttle logic
refactor PipeEventBus and PipeBehaviourEmzuli classes to streamline event handling and improve clarity to enhance maintainability and ensure
updated ZkController initialization to increase timeout duration for ZkController instantiation
added a test for verifying passcode authentication with client parameters in TokenMvcMockTests . java to ensure that passcode authentication works correctly with
added constructors for LengthFilter and CharArraySet in TestRandomChains . java to enhance testing capabilities for length filtering and offset handling
remove unused import to clean up the code and improve readability
use integer . tounsignedlong instead of int to avoid overflow
updated btCollisionObjectArray and btRigidBody methods to use btCollisionObject . getInstance instead of btCollisionObjectArray _ at .
added a new constant for the build copyright year and updated OPENROCKET _ URL and OPENROCKET _ URL in AboutDialog
add jetclientinstanceimpl . getdistributedobjects ( ) method to jetclientinstanceimpl to get distributed object information .
updated FinSet . java and MassCalculatorTest . java to reflect new calculations and improve test accuracy
updated memory semaphore initialization from total memory to max memory in SmartDexingStep . java to ensure correct memory allocation based on runtime limits
changed catch block from MetadataException to Exception in StandaloneSchemaFetcher . java and modified parameter name in CreateAlignedTimeSeriesPlan . java to improve error
change genesis output prefix to bisq co - founder
updated input handling in JsonLoaderTest . java to improve clarity and functionality of JSON parsing
updated capacity validation in ObjectSet . java to ensure the required capacity is within acceptable limits to prevent runtime exceptions
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to enhance clarity and prevent potential null pointer exceptions
removed unnecessary @ AddToRuleKey annotations from several fields in AppleTest . java to streamline code by eliminating unnecessary annotations
added exception handling for SecurityException in FileHelper and TextHelper classes to improve robustness by preventing application crashes due to security exceptions
added StyleWithMultipleAttributes constant and a test for resolveAttributes method in ShadowThemeTest to enhance attribute resolution functionality with multiple attributes
update hssfworkbook . doescontainssheetname to return the size of sheet instead of - 1
updated the tint method from primaryColor to elementColor in ManageAccountsActivity . java to ensure the correct color is used based on the selected theme
updated DefaultEventBus to handle null replyHandler and adjusted path resolution in DefaultPlatformManager to improve flexibility in handling null reply handlers
added support for binary collation name configuration in MariaDbDbmsType , MySqlDbmsType , and DbmsType classes to enhance
added a new method ` whenType ` to return an ` Optional < T > ` based on the class type of ` this ` to enhance type
refactor user view destination handling in ItemLauncher to improve clarity and maintainability of the navigation logic
change return type from OK to temporaryRedirect in FeedREST . java to ensure proper redirection to the public application settings service
[ flink - 18552 ] [ kinesis ] fix npe when deserializing non - serializable object
( chore ) camel - spring - xml : fix checkstyle issue
[ hotfix ] properly close zk client in leaderelectiontest
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify the
refactor read method to use a dedicated read method to improve code readability and maintainability
updated ByteBuffer allocation methods to use ByteBuffer . allocate ( length 11 ) instead of BufferUtil . allocate ( length + length + length ) to improve performance and
refactor prepareStreamsToUpload method to return a boolean instead of void to simplify the method signature and improve error handling
updated sorting logic in AbstractConfigLoader and TestMicroserviceConfigLoader to use Integer . compare instead of Integer . compare to ensure consistent ordering of configuration models
added a new class PicOfDayAppWidget to handle app widget updates for PicOfDay to facilitate widget updates for the Pic
initialize internallbvmofferingid to 0 when not pass in
replaced ` RelOptUtil . splitJoinCondition ` with ` HiveRelOptUtil . splitHiveJoinCondition ` in ` HiveParserCalcitePlanner .
[ hotfix ] [ table - planner ] deprecate some operator transformation class
added user credentials and password options to the JMXConnector connection to enhance security by using credentials for remote JMX access
removed unused BytesRef initialization in Stemmer . java to clean up the code and improve readability
updated widget application logic to incorporate page view icon caching based on the number of pages
ggbapiw : use 3d view if available
updated rotation calculations in GcodeRenderer . java to ensure proper handling of rotation values within 180 degree
added a new option ` WORKSPACE ` to the ` OptionEnum ` for managing workspace directories in the ` TerminalClient ` to enhance flexibility
updated the file extension from " options . apt " to " options . html " in CLIManagerTest . java to ensure compatibility with HTML format
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension for user validation to enhance testing capabilities and ensure compatibility with
updated OAuthConfirmationController to use a model instead of an instance of AuthorizationRequest to enhance clarity and maintainability of the code
fix flaky test in hibernateit
refactor EventBusHook class to improve event handling functionality
refactor MultiPaintEventTest for improved clarity to enhance maintainability and readability of the test cases
removed the final modifier from the mNewScale assignment in WorkspaceStateTransitionAnimation . java to simplify the variable declaration and improve code clarity
refactor SyncFactory methods for improved clarity to enhance maintainability and readability of the code
added unique key handling for schema fields in LukeRequestHandler to ensure proper identification of unique keys in Solr queries
added color filtering for stroke and backgroundColor in BorderEditor and updated color handling in EditableResources to include roundBorderColor to enhance the visual representation of border
make assert . neverpartofcompilation ( ) non - trivial .
[ hotfix ] fix checkstyle violation in defaultschedulerbatch[ slotpool ]
added logging statements for pending requests in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes , and modified return values in PingP
added OnMenuItemClickListener to RecentChatFragment to handle menu item click events to improve user experience by providing feedback on the under construction action
updated ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget ` to enhance functionality by
replaced ` add ( scope ) ` methods with ` push ( scope ) ` for better scope management in multiple classes to enhance clarity and consistency in
updated URLs in CommonsApplication to reference commons . wikimedia . org instead of test . wikipedia . org for API and wiki
refactor index increment logic into a separate method to improve code readability and maintainability
removed unnecessary collections . sort call from multiple classes to simplify code and improve readability
added new DateTimePatterns for hour and minute patterns in FormatData _ hr _ HR . java to support additional time and date formats in the application
added a call to clear the focus of clickedView to improve user interface responsiveness
updated spinner selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to ensure language codes are set correctly to prevent null or empty language selections
updated time zone names from " WSST " to " WSDT " across multiple language files to standardize time representation to WSDT
added native methods for registering and accessing global and weak fields in FastGetField . java to enhance functionality for managing field access within the Fast
added handling for UNION and NULL types in ReflectData . java to ensure proper default value retrieval for UNION and NULL fields
increased offer timeout from 300 to 1000 milliseconds to allow more time for the seda queue to become available
added a null check for resourceRClass before remapping it to avoid potential NullPointerExceptions during resource merging
added constructors to HapiFhirDialect and HapiFhirH2Dialect , HapiFhirMariaDBDialect , and HapiFh
camel - 14263 : camel - http - httpproducer should support to explicitly close an http connection .
increase the socket timeout from 60 minute to 120 seconds to allow more time for distributed operations to complete successfully
added an assertion to check that the ticket ' s final price is not zero to ensure that the ticket ' s final price is correctly retrieved from the database
refactor Parser class to improve code readability and maintainability
refactor CasProcessingFilter class to improve code readability and maintainability
use getfirstelementchild ( ) instead of getnestablenode ( ) for backwards compatibility
[ optaplanner - 3481 ] fix lookup strategy not be able to remove enum value
[ java ] wait for cluster instance to shut down before shut down .
no effective change - log info instead
set content type to " application / octet - stream " to ensure proper handling of binary data in response
added a method to retrieve the queue size from the delegate task executor in LazyTraceThreadPoolTaskExecutor to enhance functionality to retrieve the queue size
added envelope validation for coordinate pairs in DistanceOp . java to enhance distance calculations to prevent edge loops
rename ' required ' to ' requiredLabel ' for clarity
replaced the overridden ` next ( ) ` method with a call to ` updateProgress ( ) ` in ` PurgingPartitionIterator ` to streamline the
added a method to get an unescaped path for schema paths in SchemaPath . java
added getHeight ( ) and getWidth ( ) methods to the BaseMonochromeBitmapSource class to provide access to the dimensions of the bitmap source
added validation for local vertices to ensure that the number of points is at least 6 to prevent potential ArrayIndexOutOfBoundsException during vertex assignment
replaced instances of ` new ObjectMapper ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` in multiple files to utilize
added a null check for the coefficient array before initializing it to avoid potential NullPointerExceptions when the coefficient array is null
updated ExternalNameRecord to handle Unicode names differently based on the multibyte flag of the input stream
no effective change - fix typo
added logic to exclude " username " and " passcode " from login prompts in LoginInfo
replaced the ` remove ` method with ` removeIf ` for better clarity to enhance readability and maintainability of the code
added functionality to spin the PieChart using a specific animation option to enhance user interaction by allowing customizable smoother transitions
server : kill vm in secondary storage when copy vhd fail ( # 4809 )
hbase - 26975 hmaster should not try to normalize table that have a namespace quota ( addendum )
removed unused imports and added a resize method to prevent potential memory leaks
added a new method ` propertyValuesOf ` to retrieve property values for a given property name in ` PropertySupport ` to enhance functionality by allowing retrieval
added JUnit Ignore annotation to ClientMapNearCacheTest to mark the test as ignored due to blocking PRs
fix hopperhock so that it do n ' t craft anything
added authentication dialog functionality to SsoWebViewClient to enhance user experience by providing basic authentication options
added new methods for document deletion and querying in TestStressIndexing2 . java to enhance testing capabilities for document deletion and querying functionality
[ flink - 22559 ] [ test ] ignore upsertkafkatableitcase until flink - 22559 be fix
replaced ` get ` method with ` computeIfAbsent ` for initializing types list to improve performance by avoiding unnecessary ArrayList creation
added a configuration option to accept single values as an array in DefaultEntityMapper to enhance data serialization flexibility
updated localization update message to include " BE , UK , and SL . " to enhance clarity of localization updates for users
[ netbeans - 4071 ] allow application category to be override by default
drools - 5339 : fix feel parser to correctly support instanceof expression ( # 4961 )
nifi - 1979 - add content - type attribute to flowfile object in gethttp
fix hapi fhirdao to not create duplicate provenance entity
updated button references from exit _ button to done _ button and added searchable check for searchable property in SearchBookContentsActivity to enhance user experience
refactor NatsConfiguration class to improve readability and maintainability
refactor invalidateStalePartition method to accept a MetastoreContext parameter and streamline cache invalidation process to enhance code clarity and
use circularFifoBuffer instead of boundedFifoBuffer for performance
updated icon from ic _ group to ic _ chat _ bubble in multiple files to enhance chat bubble functionality in the user interface
replaced ` getLong ` calls with ` getLongVolatile ` for accessing ` latestCounterIndex ` to ensure thread - safe access to ` latestRecord `
updated method names and import statements in MocksCreationTest . java for consistency and clarity to improve code readability and maintainability
added a constant for the class name in CSVThirdEyeDataSource and changed the return type of generateDetectionConfig method from DetectionConfigDTO to public to
increased the maximum wait time for the awaiter from 10 seconds to 30 seconds in the awaiter from 10 seconds to 30 seconds and added a sleep
removed the ` BuildSlaveFinishedFinishedStatusEvent ` class and updated ` DistBuildSlaveEventBusListener ` to utilize it to streamline
fix vmware template name to be utf - 8
added a test case to verify the functionality of depositing a workspace item without a workflow
[ hotfix ] [ test ] make classloadersupport . classpath ( ) distinct
added a method to check if a string is a boxed primitive in Unbox . java to enhance functionality for unboxing primitive characters
refactor argument handling in SpecificCompilerTool to use a counter for flags to improve clarity and maintainability of argument processing
added a condition to check if the table is not an external table before deleting the directory to ensure that the directory is only deleted when the table is not
updated configuration parameters for asynchronous execution in HiveServer2 to enhance thread management and improve error messaging during asynchronous operations
added a try - catch block around the dismissDialog method to handle potential exceptions when dismissing the dialog
added EXECUTE _ TASK _ ROLE constant and updated service and component retrieval in UpgradeResourceProvider . java to enhance code clarity and
added a new variable ` diff ` to the ` OperationSetTelephonyConferencingSipImpl ` class to store the current configuration information to facilit
clear log entry in flutterlogview instead of logmodel
added checks for shutdown status in ChannelEndPoint . java to ensure proper handling of socket shutdown scenarios
refactor SetNullableGenerator class to improve code clarity and maintainability
camel - 14263 : camel - report - incidents should use servlet transport by default
replaced specific imports with a wildcard import and added a constant for the CONTENT _ TYPE media type in NettyRoutingFilter . java to stream
added ` hello ` and ` helloWithValue ` methods to ` AbstractBaseService ` , ` IBaseService ` , and ` MyEndpointWith
refactor lifecycle listener handling in Lwjgl3Application to improve thread safety and ensure proper cleanup of lifecycle listeners
updated FG _ FK color value from 90 degree to 200 degree to improve the visual quality of the FG _ FK color
added a requirement for mp3 audio format in the sound manager to ensure compatibility with the new audio format requirements
refactor test to use assertnotmarkedasbuilt instead of assertmarkedasbuilt
pmd : add ' about ' and ' version ' to general preferences page
[ hotfix ] [ test ] use findthrowable ( ) instead of getcause ( )
refactor MediaFormatUtil to improve code readability and maintainability
added a method to check if a cell is editable in the GeneralTab class to provide functionality for cell editing functionality
added an ` isOnlyPrintCommands ( ) ` method to ` AbstractUnusedDependenciesFinder ` and implemented it in ` JavaBuckConfig `
added a counter to track the number of times VocalTractModifier is called and updated the v scales array from 2.0 to 0.85
updated import statements for BaseScalarUdfTest , TestUDFRound , and TestGenericUDFConcat to ensure compatibility with the latest Hive API changes
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper comparison and hashing of UaaAuthenticationDetails objects
- use animcomposer instead of skeletoncontrol in testskeletoncontrolrefresh
rename nodefilter to nodecountfilter for clarity
updated the condition to check if the size of sync block to fetch is less than or equal to the expected number of fetch batches to ensure correct handling of
updated debug expression states and corrected string literals in DebugExpressionParser . java to enhance clarity and accuracy of debug expression parsing
updated the condition in ExcludeDependency . java to include transitive scope checks to enhance dependency filtering based on scope inclusion
replaced ` tmp ( ) ` with ` dst2 ( T v ) ` and simplified the ` lerp ( t , float , float ) ` method
initialize args array to empty instead of null to prevent potential null pointer exceptions
updated RustBinaryDescription to include linker args as an ImmutableList instead of a List to enhance flexibility in configuring linker arguments
update admin email test to work with both travis and appveyor
added configuration for Hive query name in HiveConf and updated logging messages in GenericUDTFGetSplits to include external DDL names to enhance clarity
removed unused import of java . io . File to clean up the code and reduce unnecessary dependencies
added an AtomicBoolean to manage the closed state and refactored output stream handling in EscapeProcessingOutputStream and GradleDaemonExecutor to improve
updated the ` validateQuery ` method to accept an additional parameter for error messages to enhance flexibility by allowing more detailed error messages
updated INDEX _ VERSION from 1 to 2 and refactored the getTree method to use a protected helper method to improve code clarity and
[ hotfix ] [ kryo ] add test for default kryo serializer registration
added null check for property removal before adding it to configTypesUpdated to prevent potential NullPointerExceptions during configuration processing
refactor boolean handling in MetaStoreDirectSql to use BooleanUtils for improved clarity and functionality to enhance readability and maintainability of boolean
hide customization drawer in launcher
replaced the ` hasWarnings ` boolean with a new ` hasWarnings ` variable and updated related logic in ` TermVectorComponentDistributedTest ` to
updated logging levels and improved string concatenation in Compiler . java for clarity and consistency to enhance readability and maintainability of log messages
refactor Expect class to improve readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enhance Docker connection handling for Unix socket access
( chore ) camel - aws2 : fix flaky test
camel - 14263 : camel - core - reactive - do n ' t throw illegalstateexception when there be no active subscription
refactor Vectorizer to utilize TezTask for processing MapWork instances instead of MapRedTask to improve code clarity and functionality by
updated the constructor calls in StringAppender and LogDivertAppender to include a boolean parameter to enhance logging functionality by allowing conditional behavior
do n ' t crash if there be no gui package
[ sulong ] fix problem with weak link in sulong
updated multiple Java files for consistency and clarity to improve code maintainability and readability
add unit test base on user forum issue
added a check for invalid OperationHandle in HiveStatement . java to enhance error handling for server side operations
renamed ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL and updated related commands to
add unit test base on user forum issue
refactor SimpleTree class to improve code readability and maintainability
removed error handling for email sending in UserREST to simplify the error response
added a boolean parameter to the fromContent method to control the behavior of the Result class based on whether the Content object is a subTree
update column width calculation in Sheet . java and add unit tests in TestHSSFSheet . java to ensure correct handling of column widths and
added a configPath parameter to the Commands . less method call to include the path to the configuration file
changed collections from Set to Collection in DotWriter and GraphExecutable classes to enhance flexibility in handling multiple types of tables
( chore ) camel - testcontainers : fix typo
do n ' t fail test if hostid be null
refactor key generation logic in DefaultGroupKeyGenerator to improve clarity and maintainability of group key generation
refactor TestMultiMMap to improve exception handling and seek behavior to enhance readability and maintainability of the code
refactor BCSiliconRecipes to use ImmutableSet for better immutability to enhance code clarity and maintainability
rename put method to putobject to avoid confusion
refactor visibility handling in CellLayout and DragController classes to improve clarity and encapsulation to enhance code readability and maintainability
updated ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` instead of ` o ` for functioning rewrite functions and added a new test for
updated visibility checks in ConstructorFinder , FieldFinder , and MethodFinder to include package accessibility to ensure compliance with package - private visibility requirements
replaced warning logs with trace logs for various SSL handshake events in LoggingHandler . java to improve logging granularity and provide more granular logging
fix whitelisting of wildcards ( # 3348 )
added support for gallery attachment selection in GalleryActivity to enhance user experience by providing quick access to gallery attachments
refactor service creation logic in MongoDBServiceFactory to ensure a single instance of service is used to avoid multiple instances of the same service
fix inlineconstantmutatortest for boolean true / false
added a Blackhole parameter to the decode method to improve memory consumption during decoding
fix : update gapic - generator - java with mock service generation fix ( # 419 )
[ knx ] fix group address / dpt not conform to group address / dpt format
added a call to clear the witnesses list in ManagerTest . java to ensure proper cleanup of the database state
use debug log instead of error
updated stack handling in NativeError . java to utilize ScriptFunction for improved stack management to enhance error handling capabilities
removed a condition that checks if the path name starts with " . " to simplify the path filtering logic
[ te ] rename onboard pinot metric service to auto load metric service ( # 6663 )
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before further operations
updated BOLDWEIGHT _ NORMAL value from 190 to 0x190 in HSSFFont . java to accommodate new bold weight standard
made fThreadGroup volatile and changed fLookForStuckThread to be final in the Timeout class to enhance thread safety and improve thread management
refactor ValueResultData constructor to remove unnecessary parameters to improve code readability and maintainability
updated hash code calculation and equality check in FuzzyQuery . java to ensure proper hash code generation and equality checking
removed debug print statements from PushedResourcesTest . java to clean up the test output and improve readability
changed the return type of the removeFile method from SharedRandomAccessFile to void and updated the return type of the removeDirectory method from SharedRandomAccess
update jdbc driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest
updated the ` retrievePersonAttributes ` method to initialize attributes with zero values instead of an empty map to improve performance by avoiding unnecessary object creation
[ openwebnet ] change log level from info to warn
updated method names from ` intHash ` to ` hash ` across multiple classes to improve clarity and consistency in naming conventions
added a new constructor to the ThumbnailGenerationTask class to enhance functionality for managing thumbnail generation tasks
added a retry limit of 5 times the number of found elements in the GroupSelectionQuery to ensure that the size ( ) method does not exceed the specified
added a new file ` Bug1933922 . java ` implementing a recursive compilation in a Java file to address bug 1933922 related to
removed unnecessary parentheses from conditional statements in multiple series provider classes to improve code readability and maintainability
updated control character range from 33 to 32 in FileResolver . java to ensure valid space characters are processed correctly
added a call to requestFocus ( ) in the Display class to ensure the component receives focus when necessary
update test data for instructor home page ui test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to clarify the purpose of the
modified Crouton cancellation logic to conditionally display a message based on the presence of a message
added a test for schema queries with an unrelated template in IoTDBSchemaTemplateIT . java to ensure that schema queries with unrelated
refactor Dialog class to improve code readability and maintainability
replace Runtime . exec ( ) with ProcessBuilder for command execution to improve flexibility in managing command line arguments
updated HintedHandOffTest to use InetAddress . getByName ( " 127.0 . 0.1 " ) instead of calling getLocalHost ( )
refactor metrics handling to use a separate loop for processing controller names to improve code readability and maintainability by reducing duplication
skip test for macos
refactor jvmciversioncheck to use getrequiredproperty instead of validateproperties
updated Mockito library version to ensure compatibility with the latest testing framework
refactor TestLargePageUseForAuxMemory . java file to improve code clarity and maintainability
updated BinaryParser , PlainTextParser , and ParsingExecutionContextView to accept a Charset parameter and modified parsing logic to include charset handling to enhance flexibility
added MultiPartFormDataCompliance enum and corresponding getter / setter methods in HttpConfiguration and Request classes to enable support for multipart form data compliance in the server
add jdk 17 support to gradle distribution manager
added a method to add types to the snapshot control to enhance type management for database objects
refactor Term class to improve code readability and maintainability
modify return statement to handle null or empty runWith values to ensure proper handling of null or empty runWith inputs
add a test to see if two xarem connection have the same resource
refactor multiple classes to improve code organization and maintainability
pdf417 : use black box instead of luminance , a suggest by valerybokov
refactor color tint setting in TaskView to use a variable for clarity to improve code readability and maintainability
added a new file ` SumZeroFunctions . java ` for aggregating zero expressions to provide a structured way to sum zero functions in the expression
[ flink - 18552 ] [ table - planner - blink ] fix syntax error in blink planner
refactor allocation fail warning message formatting in BucketCache . java to improve readability and maintainability of the warning message
added a null check for the property before setting it in the role object to avoid potential NullPointerException when propValue is null
added @ VisibleForTesting annotations to methods and variables in StatusBarTouchController , RecentsView , and StartLauncherViaGestureTests to en
added methods to log a container with stream functionality to enhance flexibility in controlling streamed logs in the Docker client
testmvstorecacheperformancetest : add performance test
updated LONG constant from " L " to " J " in PrimitiveType . java to ensure compatibility with new Java naming conventions
changed the return type of the delegatingApplicationListener method from a static to a static to allow the method to be called without creating a new instance
( chore ) camel - rest - dsl : fix potential npe
added a new file ` FileDeletingTasklet . java ` and integrated it into ` TaskletJobFunctionalTests . java ` to implement
g3d - 390 : update size keep drawables when create new view ( for plane )
refactor BitUtil , Int2IntCounterMap , and Int2IntHashMap to handle out - of - bounds entries to improve error handling
updated ` sendEventToTest ` method to use ` getStateOrdinal ` instead of ` SwitcHED _ TO _ STATE _ MESSAGE ` to
added user - agent check for video thumbnail request in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests in the
update error handling logic in ErrorCheckerService . java to improve clarity and functionality to enhance user experience by ensuring correct line numbers are highlighted
updated the layout constraints for the menu button to differentiate between top and bottom buttons based on their theme constant to improve the visual appearance of the menu
updated Skia . java to include preload for " libskia " to enhance flexibility in loading Skia libraries
networkparameters : add support for unittest network
added validation to ensure format arguments are not both owner and format without a format specifier in QueryCommand to enhance error handling and provide clearer
refactor IntIterator to use final variables for better immutability to improve code readability and maintainability
updated the ` walkRuleAndAdd ` method to include ` projectConfig . getSrcRule ( ) ` and added a new parameter ` srcTarget ` to
[ netbeans - 4071 ] fix module path override issue
[ java ] remove unnecessary check for protocol version .
updated OwnCloudClientManagerFactory to set default policy based on authentication type to enhance flexibility in managing client policies
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure required resources are provided to avoid NullPointerExceptions
use utils . close ( ) instead of session . close ( ) to clean up resource
refactor AnonymousAuthenticationFilter to utilize a Supplier for default security context handling to improve flexibility and maintainability of security context management
updated removeActor methods to include an unfocus parameter to enhance actor removal functionality by allowing unfocusing of the actor
changed the variable name from " cloudConfig " to " validConfigs " for clarity to improve readability and maintainability of the code
add log level configuration to nettyhttpserver
refactor multiple classes to improve code organization and maintainability
replaced ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` in ` CodeDependenciesPanel . java ` to ensure
camel - 14263 : camel - groovy should cache the result of evaluate the groovy expression .
replaced List with Set for artifact resolution to simplify the code and improve performance by eliminating unnecessary dependencies
changed access modifiers of ARGS _ OPTION and method visibility from static to public in CliFrontendParser and ProgramOptionsUtils classes to allow external access to these
refactor ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and implement ` commit ( ) ` method in ` TestSharedPreferencesTest ` to
removed unused storageAlias assignment from HttpsMessenger . java to streamline the code and improve readability
danielwagnerhall : throw a nice exception if we ca n ' t convert the text to a response
changed method visibility from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the updateImage method
fix block . dropresources ( blockstate , player , itemstack , boolean dropxp ) not support serverlevel .
added native methods for spatial location calculator configurations in DataOutputQueue and depthai classes to enhance functionality to support spatial location calculations in the application
refactor multiple Java classes to improve code organization and maintainability
updated the ` isEmpty ` method to use a dedicated method for checking if the trie is empty
updated foreground and background color calculations in AttributedStringBuilder . java to improve clarity and consistency of color parameters
updated PeerSync to conditionally include a system property for fingerprinting to enhance control over fingerprinting behavior based on system settings
changed the visibility of the moveFunds method from private to public to allow access to the method from outside the class
added ` maybeEmitEvent ( new BeforeConvertEvent < T > ( objectToSave , collectionName ) ) ` to ` MongoTemplate ` and
refactor collectionitem to use readobject instead of writedata
tika - 651 -- fix resource leak in tikacline
updated the error handling in TestCollectionAPIs to use an array of replication rules instead of a single string to improve flexibility in handling API exceptions
removed unnecessary whitespace in the configuration file declaration to improve code readability and maintain consistency
remove longfsname from log message in instructorfeedbackcopyactiontest
[ hotfix ] fix checkstyle violation in externalworkerservice
refactor step handling in HmDatapoint and HomematicTypeGeneratorImpl to improve clarity and consistency to enhance code maintainability
updated logging messages and added exclusive lock acquisition logic in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality of
removed duplicate call to scheduleJobs ( ) to ensure thread safety during job execution
alexeibarantsev : fix test failure on ie .
replaced the static Deque with a ThreadLocal logger for logger management to improve thread safety and maintainability of logger operations
replaced the private method ` convertToCompilationUnit ` with a mock method ` doAnswer ` in ` FunctionInitializerTest ` and updated imports in ` Function
added handling for primitive types and improved type boxing logic to enhance type safety and prevent unboxing issues
updated task orientation handling in RecentsView and TaskView to ensure correct task orientation updates and improve UI responsiveness
hbase - 26937 testflushfromclient should use getregionserver ( ) instead of getliveregionserverthreads ( )
added logic to manage contract details in TransactionExecutor to ensure proper handling of contract changes
updated balance calculations in TokenIssueProcessor and adjusted allowance validation in Program to ensure correct fee handling and improve contract validation accuracy
refactor RealisticRenderStrategy to conditionally clear texture caches based on URI to improve memory management and prevent potential memory leaks
refactor raster handling in Blit . java by replacing direct calls to createWritableChild with a WritableRaster variable to improve code clarity and
added a boolean flag ` isUnselectedStyle ` and a method to calculate string width based on unselected styles to enhance flexibility in
updated initialization of ` val mappings ` , ` currentActions ` , ` scores ` , and ` memcachedHealthIndicator ` to use dynamic size
removed the unused ' flags ' parameter from multiple method signatures in ShadowApplicationPackageManager to simplify method calls and improve code readability
refactor PingRequestHandler class to improve code readability and maintainability
added a new constant for MP4 assets with increasing timestamps in AndroidTestUtil . java and removed unused imports in TransformationTest . java to
[ tradfri ] do n ' t shut down the device client if there be no current firmware
refactor AjaxElementLocator to improve code readability and maintainability
updated BoxLayout and DefaultLayout to include a display condition for " table - cell " to enhance layout handling for different display types
refactor JsonDecoder to correctly handle JsonToken . START _ ARRAY and END _ ARRAY to ensure proper ordering of fields in JSON elements
updated the ` RemovalListener ` to include a ` removalCause ` parameter in the ` releaseLocation ` method to enhance the clarity of the
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
jbrules - 2635 : add miss @ test annotation to droolmvelparsertest
changed fields to be final in ContextRegisterListener . java to ensure immutability of these fields to prevent potential conflicts and enhance code clarity
refactor ObjectHashSet iterator initialization and add caching functionality to enhance performance by avoiding unnecessary object instantiations
added BATCH _ BYTES constant and updated conditions in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to accommodate batch
changed Context . MODE _ WORLD _ READABLE to Context . MODE _ PRIVATE in AppSettings . java and UpdateUtils . java to streamline
updated logging messages in JdbcProxyGenerator for clarity and added exception handling in abort ( ) method to improve log clarity and enhance
updated workspace animation to use mState instead of getState ( ) to enhance accessibility support for better accessibility
reduce log level to debug for malformed edit
updated scope handling in UaaTokenServices and added a test for token revocability to ensure that token revocability does not exceed 1000
updated import statements and modified logger initialization in AvailableJDBCDrivers to streamline dependencies and enhance logging clarity
[ drools - 605 ] add executablecommand interface to allow kie - client to run kie - client in isolation
no effective change - code cleanup - remove unused
added padding getter methods for left , long , and end padding in CellLayout . java and modified bitmap creation logic in Launcher . java to improve padding
added a conditional check for the length of the string before filtering candidates to ensure candidates are only collected when the string is empty
updated SamlMetadataUIParserAction to use Action instead of SamlMetadataUIParserAction and added null check for flow parameter to enhance
added a method to check for open LDAP processes using a specified port to enhance test coverage for LDAP process management
log4j2 - 1343 fix executorservicedeamons shutdown hook issue
refactor URL handling in Fetcher and HTMLMetaProcessor for improved clarity and functionality to enhance code readability and maintainability by
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse . java to ensure
refactor Console initialization to use constructor injection based on parameter types to improve flexibility and compatibility with Karaf Console API
changed the visibility of the getVerticesColors method from public to private and updated its initialization logic to enhance encapsulation and improve code clarity
added a file filter for excluding timestamps in the HTML report generation to enhance data integrity by excluding sensitive reports
refactor DataValidatorTest to use ParameterizedTest for email validation to enhance test flexibility and maintainability
pdfbox - 2576 : remove unused method , a suggest by valerybokov
added null check for bindStatus in FieldUtils . java to ensure proper error handling for invalid form binding expressions
removed debug print statement from JoglInput . java to clean up the code and improve readability
added a flag to allow extracting private fields in FieldSupport and updated related test cases to enhance flexibility in field extraction by allowing customizable
replace " { name } " with device name in WebDataHandler . java to ensure consistency in device name formatting
replaced direct instantiation of Lookup with reflection in Platform . java to improve compatibility with Java 8 and ensure proper method handles are used
added a deprecated method ` weights ( final double . . weights ) ` to ` ZParams ` and renamed ` weightsByDouble ` to ` weightsBy
added a ` Database ` parameter to the ` writeCustomHTML ` method across multiple writer classes to enhance functionality by providing a specific database context
added assertions and refactored key serialization logic in BTreeMap . java to enhance code clarity and ensure proper handling of null values
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to include BalanceInsufficientException and InvalidProtocolBufferException to improve
[ netbeans - 10861 ] do n ' t write zerofile to abstractlongmap
removed error logging and simplified message sending in Main . java to enhance code readability and maintainability by reducing unnecessary logging
updated buffer size from 14 byte to 13 byte in HortonworksEncodedSchemaReferenceStrategy . java to optimize memory usage for schema reference writing
added imports for ChunkListener , ItemProcessListener , BeforeProcess , AfterStep , BeforeRead , OnReadError , OnWrite , and On
refactor code formatting and improve readability in AbstractProviderModule . java to enhance maintainability and clarity of the code
updated print statements in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser to remove redundant calls to getLiveDocs ( ) to streamline
updated Test7005594 . java file to improve test coverage and maintainability
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
[ hotfix ] fix checkstyle violation in topkrollupphaseonejob
server : fix npe when try to map ip address to a vmsnapshot ( # 6663 )
refactor modifier trigger handling in Gamepad . java to use MCOptionUtils for improved clarity and functionality to enhance readability and maintainability
updated the ` iteratesOver ` method to accept an ` Iterable < T > ` instead of a list of expected items to enhance flexibility
camel - 14263 : camel - http - http - basic should n ' t decode header with thanks to dmitriy
added assertions for retrieving COUNT ( * ) queries in ActivityHistorySQLServerStoredProcedureTest to ensure accurate query results are returned from the database
added a new LargeValueFormatter class and updated BarChartActivityMultiDataset and BarLineChartBase classes to utilize it for value formatting to
added a constant for the INNOCUOS _ CHAR and modified character handling in commentsParser to improve code clarity and maintainability
remove @ suppresswarnings ( ` ` argument . type . incompatible ' ' )
fix typo in tracelinearscanLifetimeanalysisphase .
added a TODO comment to the Auto - Generated method stub to improve code clarity and maintainability
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enhance rule key appending functionality to improve rule key generation for Buck integration
added a check for the existence of the SYSTEM _ PROFILE _ DIRECTORY before creating a new system profile directory to ensure that the system profile directory
removed duplicate creation of nioEventLoopGroup in testcontainersdockercmdexecfactory
refactor HttpChannelOverHTTP and HttpReceiverOverHTTP to use synchronized methods for message retrieval to improve thread safety and readability of message counting
added an accepted " image / * " attribute to the ImageFileInputDialog to enhance file input functionality to allow users to select images easily
refactor Elasticsearch client initialization to use PreBuiltTransportClient instead of NodeBuilder to improve
updated ForkController to include witness classes and their names to enhance clarity of witness information for better debugging
added a new test class ` NullPointerAndEmptyArrayTest ` to verify behavior when handling null URLs for ` NullPointerAndEmptyArray ` to ensure
removed the ` getDepToGeneratedSourcesMap ` method and its associated logic from ` IjProjectBuckConfig ` to streamline the
refactor UaaStringUtils to utilize a new method for constructing wildcard patterns with any character delimiter to enhance pattern construction flexibility and improve
added null and size checks for aliasToWork in Vectorizer . java to ensure data integrity by preventing invalid mappings
replaced MockitoJUnitRunner with MockitoJUnitRunner in WeatherQueryTest . java to improve test clarity and maintainability
added error handling for setting firmware settings in TinyGFirmwareSettings . java
refactor getLangs method to return a Set of language strings instead of an array to improve handling of multiple language headers in the RemoteUtil
removed unused imports and updated assertions in LazyTraceScheduledThreadPoolExecutorTests . java to streamline test code for improved clarity and maintainability
hbase - 26937 fix npe in takesnapshothandler ( addendum )
[ j2kt ] fix null pointer exception in implementfinallyviacontrolflow
added a test for the HTTP RPC endpoint in DockerQuickstartTest to verify the correct functionality of the explorer ' s functionality
added a boolean field ` isSuspended ` and updated thread state handling logic to improve thread state management and ensure proper exception handling during thread termination
updated JavadocVisitors to replace ` Javadoc . Since ` with ` Javadoc . Serial ` and ` Javadoc . SinceData `
( chore ) camel - spring - xml - dsl : use objecthelper instead of null
removed redundant @ Override annotations in various security - related classes to streamline code by eliminating unnecessary method overrides
added module import handling in Java2TypeScriptAdapter and updated enum testing assertions in EnumTests to reflect static methods to enhance modularity and clarity
update default language from W3C _ XML _ SCHEMA _ NS _ URI to " http : / / www . w3 . org / 200
added content description display for badge items in BubbleTextView to enhance user experience by providing clear badge messages
added MouseWheelListener to the scroll pane to handle mouse wheel events to improve responsiveness of the scrolling functionality
pdfbox - 4892 : close pdfdocument after test , a suggest by valerybokov
updated currency pair names from BTC _ ETH to XRB _ BTC for consistency and clarity to improve code readability and maintainability by using
updated agent handling from ` VacuumEnvironment . Location . A ` to ` VacuumEnvironment . Location _ A ` and ` VacuumEnvironment . Location
updated currency handling in BitfinexAdapters . java to ensure correct currency code is returned
replaced HashSet with ImmutableSet and updated default value printing logic in JsonFormat . java to improve code clarity and ensure default values are always output
added handling for array types in JacksonXmlFormatMapper to ensure proper serialization of enums as byte arrays
added a new constant ` PARKED _ SUSPENDED ` and refactored thread handling in ` VirtualThread . java ` to
updated DirectoryTaxonomyWriter and NameIntCacheLRU classes to improve cache management to enhance performance and maintainability of the taxonomy writing process
refactor VetoableChangeSupport class to improve code readability and maintainability
adjusted the calculation of the Y - coordinate in the owner ' s height to correctly account for the vertical alignment of the content pane
pdfbox - 2576 : remove invalidpasswordexception from method signature
added tests for setting and getting short and long support messages in ShadowDevicePolicyManagerTest to ensure proper exception handling for SecurityException in setting and getting
ggb - 2118 close button should not hide menu item .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization to enhance maintainability and readability of the codebase
updated sleep durations and added new test cases for G28 _ 1 and G28 _ 2 in GcodeParserUtils to improve responsiveness
updated version retrieval logic in SwingStartup . java to use ReleaseStatus instead of BuildProperties to improve clarity and maintainability of the code
added support for including generated file comments in the migration configuration to enhance migration control by allowing users to optionally include generated files
updated the ` PlayerName ` argument to accept a wildcard ` * ` in multiple Java files to enhance flexibility by allowing multiple player names to be
deleted files BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java to remove unused filters to streamline the codebase
[ hotfix ] fix typo in optionprocessor
added a condition to check if the parallel mode is PARALLEL _ CLASSES in TestNGContentHandler . java to enhance functionality to support parallel execution
( chore ) camel - route - info : fix npe in case of old version broker
refactor : migrate modelelementcontainerdefaultcapacities to spoon . reflect . modelelementcontainerdefaultcapacities ( # 2
added serialVersionUID fields to multiple classes to ensure compatibility during serialization and deserialization processes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated ` ShibbolethCompatiblePersistentIdGenerator ` to include ` CONST _ SEPARATOR ` as a separator parameter and modified ` shaBase64 `
added null check for the SYSTEM _ ACTIONS _ ENABLED parameter to prevent potential NullPointerException
added a new file ` Person . java ` containing a class ` Person ` with a private ` name ` field to provide a structured way to access and
remove redundant call to fBUtilities . getlocaladdress ( ) in gossiper
fix indexoutofboundsexception in abstractclient
added timeColumn and timeUnit retrieval and corresponding assertions in SegmentMetadataImplTest and SegmentMetadataImpl to ensure correct metadata handling for timeColumn and totalDocs
updated the foreground color setting in SimulationPlotPanel to use DARK _ RED instead of a hardcoded color to improve readability and maintainability of the
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper handling of disconnect events
changed the variable name from ` String ` to ` Class < ? extends Annotation > ` in ` DefaultBeanContext . java ` to improve clarity by
danielwagnerhall : fix issue with double overflow when click on a page with double overflow
added a try - catch block around the dismissDialog method to handle potential exceptions when dismissing the dialog
added support for custom JNDI lookup in JtaTransactionManager to enhance flexibility in obtaining the JNDI context
changed access modifier of pickUri method from public to private to restrict access to enhance encapsulation
added a method to check if a function exists in the library to provide a way to check if a function exists in the library
replaced ` enabledCiphers ` with ` result ` and updated cipher suite retrieval logic to improve clarity and maintainability to enhance code readability and
[ beam - 16400 ] use nanos instead of millisecond for sqltimestampvalue
replaced null checks with requireNonNull calls for buffer and userCredentials in Identifiers . java and DatabaseConnector . java to enhance code readability and maintain
refactor coercion logic to use inputMap instead of input to improve clarity and maintainability of the code
added validation for row and column indices in FlightConfigurablePanel to ensure valid range to prevent ArrayIndexOutOfBoundsException
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness during selection events
[ java ] unnecessarylocalbeforereturn - fix false positive
refactor ScriptEngine initialization to use a local variable for the language to improve code readability and reduce duplication
simplified the correlation calculation in EuclideanDistanceSimilarity and EuclideanDistanceSimilarityTest classes to enhance code readability and maintainability by using
fix npe in datatracker when sstable be null
refactor relativize method to accept a Path object instead of a normalized root path to enhance flexibility in relativizing paths by
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType to ensure accurate representation of decimal digits in data types
[ hotfix ] [ test ] exclude current writer head file in dead letter queue writer test
updated hex conversion method from ` ByteArray . toHexString ` to ` ByteArray . toJsonHex ` to ensure proper formatting of hex output
renamed ` ErrorHandlerController ` to ` Error403Controller ` and added a new ` Error404Controller ` and ` Error403ControllerTest ` to
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in ` UnixTerminal . java ` and
improve performance of tiny collection . toArray ( )
refactor connection acquisition logic to improve readability and maintainability of the code
updated date converter methods to use getLdapDateConverter ( ) instead of getDateConverter ( ) to improve clarity and consistency in naming conventions
pdfbox - 4892 : avoid npe , a suggest by valerybokov
improve error message to include classloader
added writer and reader exception variables to the LargeStreamletTest class to improve thread management and ensure proper exception handling
updated MainFragment to conditionally count extra pages based on app settings to ensure that extra pages are only displayed when appropriate
added a try - catch block to handle potential exceptions in AndroidImplementation . java to improve error handling and prevent crashes when processing images
added @ SuppressSubnodes annotation and updated return statement to use string . valueOf ( characters ) instead of String . valueOf ( characters ) to enhance code
use try - with - resources to prevent potential resource leak
deleted the file TestDocInverterPerFieldErrorInfo . java to remove unused error handling code
added a shell command for input keyevent 82 in AbstractLauncherUiTest and removed an assertion for phone lock status verification in LauncherInstrumentation to enhance
added JSON filename mapping functionality to the FileDumper class to enhance the output URL generation for better JSON representation
bugfix # 26937 - reset result notified flag in profilerserver
refactor texture loading methods from ` getTextureFromImage ` to ` loadImage ` for improved clarity and consistency to enhance code
corrected the spelling of " application " in assertions to ensure consistency and accuracy in context ID validation
updated ISBN number from " 9781797745008 " to " 9781797845005 " in RandomizersTest . java to
updated AlarmReceiver to retrieve the sound URI from a preference instead of using a default URI to improve flexibility in setting the notification sound
added a method to report loop count in the RootNode class to enhance error reporting for loop count reporting
added a condition to finalize the stack version for the cluster based on the current stack version in FinalizeUpgradeAction to ensure that the cluster ' s version
vpc : fix vpc state search by regionid
removed duplicate lines in ItemOrientedStep . java to streamline code for better readability and maintainability
added a new file ` CountedLoopProblem . java ` that includes a main method with random number generation using ` Random ` and ` StringBuilder ` to
remove metaspaceMethod parameter from executeCompiledMethod method signatures to simplify method signature and improve readability
initialize pendingfailedspeculationoffset to avoid npe
updated KafkaStreamsTracing class to use ValueTransformerWithKeySupplier instead of TransformerSupplier for peek and mark methods to enhance tracing capabilities by
improve feedbackconstantsumquestiondetails to include received point
removed the call to applyToActivitiesIfAvailable in BaseApplication . java to streamline the application logic for better performance
added thread management and stack dumping functionality to the CloseRace class to enhance debugging capabilities and ensure all child threads complete gracefully
updated IntPointField to return the integer value instead of the string representation of the value to ensure accurate representation of integer values in tests
updated the arcSize variable to use a fraction instead of a fixed value to improve flexibility in button layout calculations
increased the maximum width of the display from 768 to 640 in AddAndScaleMultiImage . java and adjusted the ratio used in ImageBorderCutting
rename ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` in ` SqlSourceBuilder ` and related configurations to clarify the purpose of
refactor ` waitForStateTransitionToEnd ` method calls in ` AbstractLauncherUiTest ` and ` WorkProfileTest ` to improve clarity and
added CasCoreHttpConfiguration , CasCoreWebConfiguration , CasCoreLogoutConfiguration , and CasCoreHttpConfiguration to multiple test
updated volume calculations to use a byte array for reading data to improve performance and readability of volume calculations
camel - 14263 : camel - http - add option to turn off debug log
refactor ClassPath creation in DeclarativeHintsParser to utilize dynamic module boot paths to improve flexibility in managing class paths
add scope provider for audio and voice manager in automation module ( # 1086 )
added methods to get and set the layer manager in AnimComposer and AnimationEvent classes to enhance functionality for managing animations within the Anim Com
added a check to return early if the queue is empty and removed the showDefaultScreen method from Workspace to optimize performance by avoiding unnecessary updates
added null checks for map operation and error handling in MapRecordProcessor and TezProcessor to improve robustness by preventing NullPointerExceptions during processing
refactor CylinderRegion to simplify center handling and improve clarity to enhance code readability and maintainability by reducing redund
refactor TestBadUseCases to use JUnit ' s ExpectedException for better exception handling to improve test reliability and clarity by utilizing a
added a null check for subparams when sending queries in QueryExecutorImpl . java and implemented a test for multi - execute in StatementTest . java to
visualvm - security : do n ' t log customized security environment if it ' s already customize
added Android Edit Request tag to the get request in ReviewInterface . java to enhance functionality by allowing users to view the most recent changes
refactor Test class to improve code readability and maintainability
updated PBEKeySpec initialization to use keyLength instead of blkSize to ensure correct key length is used for encryption
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to enhance the documentation for section definitions
added functionality to discard points with a very large jump in GPS logging
removed debug print statements from TableCellLayout , TableLayout2 , and TableCellLayout classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 348 )
replaced boolean rootNameFn with Object rootNameFn and sourceFilterFnHash in InsightFilter . java to enhance memory efficiency by using
simplified the addition of app info to the data and added lists by removing binary search to improve code readability and maintainability
updated SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and added an intent to start the SettingsActivity to streamline theme management and
updated value class generation to use " UsingUnresolvedD " instead of " HostD " to enhance clarity and maintain consistency in naming conventions
updated assertRootArcs ( ) method call in FST . java to ensure consistency in assertion usage to improve code clarity and maintainability
added an assertion to verify that the security policy exists and is a file to enhance test coverage for security policies
camel - 14263 : camel - olingo2 should use source code generate configurer to avoid reflection configuration .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow for more time for asynchronous operations to complete successfully
removed the exception parameter from the info logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by directly logging the error message
added support for publishing an image via HTTP in the XMPPClient and associated actions to enable users to publish images via HTTP for improved
camel - 14263 : camel - netty - netty should n ' t expose the producer object anymore .
updated URL template regex in BalancedClickhouseDataSource . java and added tests for invalid host names in BalancedClickhouseDataSourceTest . java
disable jsr199 by default
added handling for null values in CSVRecordReader and updated CSVRecordReaderConfig to utilize this new null value feature to enhance CSV output
added @ LiquibaseService ( skip = true ) annotation to multiple connection classes to specify that these services are intended to be used for Liquibase
updated variable handling in ` VariableNameUtils . java ` to ensure correct aggregation of static field names based on the value type
fix itemcommandtriggerhandler and itemstatetriggerhandler to use itemname instead of wildcard
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to standardize exception handling to improve
added a deprecation warning for " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java and updated
fix mana tablet not take into account creative
added functionality to set the identifier collection in the P25P2DecoderState to ensure the current call event uses the correct identifier collection
removed unused imports from TestRandomChains . java to clean up the code and improve readability
updated the thread name from " deriveKeyWithScrypt " to " deriveKeyWithScrypt " in ScryptUtil . java to improve clarity
refactor GeneratedCode class to improve code readability and maintainability
polish ` ` fix typo in typedefinitionregistry ' '
added visibility control for share with me icon in LocalFileListAdapter to enhance user experience by hiding the share with me icon
updated link references from " http : / / getbootstrap . com / docs / 4.0 " to " https : / / getbootstrap . com
added validation to ensure headers are not null to prevent potential NullPointerExceptions
updated assertion message in TestIndexWriterMergePolicy to include segment count details to improve debugging and traceability of document counting validation
[ multilayerperceptron ] deprecate multilayerperceptron and trainmultilayerperceptron in favor of
added context awareness check and refactored session verification logic in CrawlerSessionManagerValve and TestCrawlerSessionManagerValve
modified the getJspApplicationContext method to conditionally return a privileged action to enhance security by restricting access to the application context
updated RocketComponentConfig to use min and max values for component length calculations to improve flexibility in determining component lengths based on bounding box boundaries
updated NonceService binding in OpenIDAuthenticationProviderModule to use singleton scope to enhance flexibility in managing NonceService instances
added a new promise to update child links in the FileWrapper class to enhance the reliability of link management during updates
refactor ` doExecute ` method to improve clarity and formatting to enhance readability and maintainability of the code
increased the publishWithDelay duration from 100ms to 500ms in RetrievalBlockingMessageStoreTests from 100ms to 100ms to accommodate
added a boolean field ` mShiftCodesAlwaysOverride ` and modified the logic for determining shift codes always to ensure shift codes are always applied regardless of remote
refactor isleaderelectionmonitor to be thread - safe
removed redundant whitespace in NearbyActivity . java to improve code readability and maintain consistency
ambari - 21142 . kerberos : do n ' t allow kerberos identity with reference service name ( rlevas )
updated the ` newInstance ` method to accept a ` noop ` parameter instead of ` AbstractCommandOptions ` to enhance flexibility by allowing ` noop `
increased sleep duration from IOException to InterruptedException in TestListenTCPRecord . java to improve stability by allowing more time for exceptions to propagate
updated method call arguments handling in PatchExtensionMethod . java to ensure original arguments are restored after setting the arguments array
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for managing library instances to
int - 1623 add support for ' apply - sequence ' and ' ignore - send - failures ' attribute to messagechannel
removed x509PublishUrl and related methods from ClientKeyPublisherMapping and JwkViewResolver to streamline the publishing process and eliminate unused parameters
refactor reader assignment to use a single SolrIndexReader instance to improve code readability and maintainability
replaced ` ValueSourceParser ` with ` Double2Parser ` for maximum and minimum calculations to enhance flexibility in parsing numeric values
simplified return statements in Container . java to improve code readability and maintainability
removed initialization variables for n and minScore in Highlighter and removed IOException declaration from TokenSources to streamline code by eliminating unnecessary exception handling
cloudstack - 7999 : do n ' t generate uuid when create a user
updated CasMultifactorAuthenticationWebflowConfiguration to use ObjectProvider for flowBuilderServices to enhance flexibility in managing flow builder services
increased the maximum prepared transaction count and increased the maximum connection count in WriteJdbcPTest . java to enhance resource management and improve connection
removed conditional check for " editor . laf " before setting the Look and feel in DefaultPlatform . java to simplify the code for better readability
updated references from ` getStateEntity ( ) ` to ` getStateEntity ( ) ` for consistency and clarity to improve code readability and maintainability by
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability
added a condition to break the loop if the application is not running and updated the status line setting in NavigationShareTab to improve user experience by providing a
update cpucallgraphbuilder to use threadid directly
mow - 1070 fix default perspective probabilties for toolbar
added NetworkAddressChangeListener to HomeKitImpl and updated logging messages for consistency to enhance network address handling and improve logging clarity for troubleshoot
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use getLeaseRenewalTime method instead of LeaseManager to
added ` linkStyle ` and ` prefixHeader ` to ` CxxLibraryDescription ` to ensure proper handling of absent sources
added null check for exception message in ExceptionHandlerRegistryFactory to prevent potential NullPointerException when handling fatal IOExceptions
changed the ` nextID ` variable from ` int ` to ` volatile ` and modified the ` getSize ` method to return ` nextID ` instead of
fix vmtransportnetworkbrokertest failure
updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and ` SourcePathArg ` classes to implement ` HasSourcePath `
replaced StringBuffer with direct concatenation for argument handling to simplify code and improve readability
added support for custom index field name in OrdinalMappingAtomicReader and updated TestOrdinalMappingAtomicReader to utilize this new facet configuration to enhance
fix instant . ofepochmilli ( millis ) to account for negative second
updated attribute retrieval to use the buffer type name instead of the buffer type directly to ensure compatibility with different buffer types
added block update scripts in CopyPaste . java to ensure scripts are processed only when necessary
added a new file TestCMoveLimitType . java with methods for testing buffer manipulation to facilitate testing of loop move limit behavior
added a method to check if a specific recorder type is in the recording list and refactored audio packet processing logic to improve code clarity
camel - 14263 : camel - sql - stored - template - use scaletoken instead of expecttokensequence
updated vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current ownership of the software
refactor console creation logic in Main . java and VersionCommand . java to encapsulate console creation logic to improve code readability and maintainability
refactor token validation logic to utilize EncryptionUtils for hashing to improve security and maintainability of token validation
added EOFException handling in Http11InputBuffer . java to ensure proper error reporting for invalid EOF scenarios
add unit test for delete a group .
( chore ) camel - ftp : remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to the replication protocol is no longer needed in the current implementation
updated variable names from ` BuildRule ` to ` SourcePath ` across multiple classes to improve clarity and consistency in referencing the source paths of
added new demo files for ConstructorArgsDemo and StrictDemo classes to demonstrate the use of private and default secrets in the codebase
do n ' t leak memory when closing templatefeatureiterator
updated assertion in WriteResponseHandler to allow up to 2 * replication factor in response validation
added a null check for the indexNumber parameter in ItemRowAdapter to ensure robustness by preventing potential null pointer exceptions
corrected the spelling of " areAnchestorsShown " to " areAncestorsShown " in multiple classes to improve code readability
added a check to prevent further processing if the app ' s width is below 12 to ensure that the application does not proceed with invalid input
changed the equality check for ` changeLog ` from ` = = ` to ` . equals ( changeLog ) ` in ` ChangeLogParameters . java
changed the loggers map from static to final to ensure that the loggers map cannot be modified after initialization
updated the return statement to call ` getBasePlot ( false ) ` instead of ` p . getPlot ( false ) ` to ensure the correct base plot
updated the ` createUploadDir ` method to include an additional ` initialCreation ` parameter to control the behavior of the upload directory creation based on whether it
added a boolean parameter to ServerGenerator , HttpTransportOverFCGI , ServerFCGIConnection , and HttpTransportOverFCGIConnection classes to
added a condition to check if the comment is empty when handling multi - line comments to ensure proper handling of empty comment scenarios
removed duplicate file types from BuckModule to ensure
replaced specific imports with a wildcard import and changed the return type of the multiply method from ToLong to ToInt in ComposedUtil . java to stream
added error handling for unsupported CPU options in RTMGenericCommandLineOptionTest and updated error messaging in TestUseRTMLockingOptionOn
updated indentation and formatting in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve code readability and maintainability
added a mock import for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate testing of ChannelTypeUID functionality
fix polyglot exception index out of bound
added reset functionality to ShadowFontsContract and initialized systemContext in AndroidTestEnvironment to ensure proper context management during font operations
added support for time granularity in TimeGranularity and updated date filtering logic in PinotDataSourceMaxTime to enhance functionality for handling epoch
added null check for ` _ try . getFinally ( ) ` before visiting body and exit flows in ` ControlFlow . java `
updated assertEquals method to handle array sizes and improved error message formatting to enhance readability and provide clearer assertions for different array types
refactor WindowClickLogic to return a default click type and adjust stack size calculations accordingly to improve clarity and maintainability of click logic logic
updated index calculation in MeshBuilder . java to correct the indexing syntax for proper functionality
nifi - 10979 : remove unused controllerserviceprovider from standardprocessscheduler
added support for Java annotation processor parameters in KotlincToJarStepFactory and KotlinLibraryIntegrationTest to enhance annotation processing capabilities to
updated RESCROLL _ DELAY from 750 to PagedView . PAGE _ SNAP _ ANIMATION _ DURATION 150 and modified page snapping
added a method to check and refresh shortcuts based on the presence of the " hasShortcutHostPermission " permission to enhance shortcut management by ensuring
added handling for the HISTORY _ SEARCH _ BACKWARD case in ConsoleReader . java to enhance the functionality of history search functionality
added null check for core name in CoreAdminHandler and implemented error handling in CoreAdminHandlerTest to ensure robustness by preventing null pointer exceptions and
added marker selection functionality in NearbyMapFragment to improve user experience by hiding the bottom sheet when a marker is selected
added exception handling for Throwable in FileSyncAdapter to improve error reporting and debugging capabilities
refactor test assertions in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve code readability and maintainability
updated FeedQueues . java to enhance feed processing logic based on application settings for heavy load conditions
added a ` Looper ` parameter to the ` DefaultDrmSession ` and ` DefaultDrmSessionManager ` constructors to enhance thread
updated AndroidBinaryDescription to convert packageType to Locale . US and added setPackageType method to AndroidBinaryBuilder to ensure consistent handling of locale
change application / xml to application / xml for wfs3 test
updated configuration file references from ` INSTANCE . confFile ` to ` INSTANCE . confFile ` to ensure consistency in file path usage across instances
removed sleep duration from the waitUntilReadyAndTimeout method call to simplify the timeout handling for improved readability
changed the data type of ` numCountDistinct ` from ` int ` to ` long ` in ` HiveExpandDistinctAggregatesRule . java ` and
added checks for headless graphics in Toolkit . java to ensure proper exception handling to prevent rendering issues
perf ( exoflame ) : do n ' t try to match currentrecipe against furnace ' s world
[ zeppelin - 4892 ] add description for move thread count in solver log
fix regression in ft search with revinclude
added a new test class ` Issue582Test ` to verify the functionality of the ` pumpSource ` method with various features to ensure
[ native ] add test for decimal overflow
refactor LoadingCache class to improve performance and maintainability
added a rule to exclude " AvoidNonConstructorMethodsWithClassName " from the NamingRulesTest to enhance test coverage for non - constructor methods
danielwagnerhall : catch staleelementreferenceexception and return null instead of exception
refactor ViewExistsPrecondition to check if a view exists before creating a snapshot to improve error handling for views that do not exist in the database
refactor DOMUtil class to improve code readability and maintainability
added scaling functionality to TaskViewUtils for better visual feedback during animations
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false to disable the fixed rotation transform feature
added a method to walk through all arcs in the FST file and modify the output writing logic to ensure correct handling of arcs and
added SolrQueryRequest parameter to multiple DocTransformer factory methods to enhance query handling capabilities in the application
added TRIGGER statements for post content and announcement validUntil in SingleTableMySQLTriggerTest . java to ensure proper handling of null values for
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to improve clarity and maintainability of comparator management
updated query builder tests to include additional characters for column date formatting to ensure accurate validation of column date in query results
added Spark initialization to the init method to ensure Spark is ready for further operations
added new storage properties and methods for managing and retrieving total storage pools and used in the DynamicPropertiesStore class to enhance storage management and
added support for specifying Ninja properties in AssetsController to enhance asset loading functionality in development mode
updated the method call to use getMapMarkKey instead of getMapMarkPosition to ensure accurate mapping of map mark keys
added a ` TokenRewriteStream ` parameter to the ` getDefaultValue ` method and updated related calls to utilize it to enhance token rewriting functionality
removed IOException handling from method signatures in JavaCompiler and related classes to simplify error handling and improve code clarity
refactor JxBrowserManager to use fullPath instead of fileName for loading classes to improve clarity and consistency in file path handling
added a check for the " AppVersion " property in IOSImplementation . java and updated image file creation logic to use equals method to ensure proper
[ somfytahoma ] fix npe when try to start a thing that do n ' t have a bridge ( # 9059 )
test : disable flaky test on github
refactor OpenWireConnectionTimeoutTest to use dynamic keystore and keystore properties instead of hardcoded values to enhance flexibility and maintainability by allowing
added warning and debug logging for nan values in DynatraceExporterV2 . java to enhance metric reporting for better diagnostics and error handling
added a call to remove a sessionId to sessionInfo to ensure proper cleanup of associated session data
added null checks for hostname in HeartBeatHandler and modified alert state logging in AlertReceivedListener to ensure that null values do not cause runtime errors
simplified the return logic for buffer flushing in ChannelEndPoint . java to improve code readability and efficiency
[ drools - 720 ] fix kmoduleXSDtest to use correct kie - api resource
added a new test for seeking to the media player in ShadowMediaPlayerTest and implemented the seekTo method in ShadowMediaPlayer to enhance testing capabilities for
rename createTask method to createThrowingTask across multiple executor classes to improve clarity and consistency in naming conventions
added conditional border for tab close button in CloseButtonTabbedPane based on is _ aqua _ laf to ensure proper alignment of close button
added timeout settings and refactored test assertions in TestSignatureInfo . java to improve request handling and enhance test reliability
[ drools - 7 ] add support for wildcard type permission to xstreamutils
added error handling for non - generic diamond types in mmm Attr . java and created a new DiamondRaw class with a main method to
[ calcite - 3282 ] fix typo in reloptutil
updated argument requirements for setting ID and value in Http2Settings . java to ensure valid values for unsigned 16 - bit and unsigned 32 - bit values
deleted the file MapInterfaceTest . java and removed Issue664Test . java to remove unused tests to clean up the codebase
added exception handling for session operations in SessionsPoolTest to ensure that operations are not attempted on disposed sessions to prevent runtime exceptions
swapped the order of the ` jsonWriter . object ( ) . key ( " type " ) . value ( " FeatureCollection " ) ` and `
updated setIndex method to use selectedIndex . intValue ( ) instead of mode directly to simplify code and improve readability
added a method to check if manual unstashing is currently enabled in TaskbarStashController to improve control over stashing behavior in the application
camel - 14263 : camel - core - xml dsl - dsl - dsl - dsl - dsl - dsl - dsl
modified the ` getEventMismatchMessage ` method to include a ` waitForExpectedCount ` parameter to enhance flexibility in event mismatch message handling
added a new class HeaderFixer to handle file processing with a licensing header to ensure that header files are correctly processed and added to the
added broadcast functionality for first load completion in the launcher to enhance user experience by notifying users when a widget is loaded
deleted the SuperJumperAndroid . java file to the game ' s functionality is no longer needed in the project
updated the return value from ` true ` to ` table . isDistributed ( ) ` in ` SystemTableScan . java ` and modified the SQL query
added KeyValuesProviderAware and ObservationConventionAware interfaces to the Observation class to enhance functionality for managing key and observation conventions
add miss item to the list of miss item
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast integer values to long to ensure correct calculations to prevent potential overflow
added caching for dataFormatString in HSSFCellStyle to improve performance by reducing redundant calls to getFormatStringFromCache
updated the filter condition in RemoteAuthenticationEndpointTests to include the username in the response to enhance security by ensuring that only matching users are retrieved
updated the condition from ` def . needsInput ( ) ` to ` def . finished ( ) ` in ` DeflateCompressor . java ` to ensure
updated logger log to include workspace information with container and page index to enhance logging clarity for better debugging
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
deleted the DeadlockTest . java file to the test class is no longer needed in the current implementation
added null check for newViewer and updated marker addition logic in BugContentProvider and BugGroup classes to enhance robustness by preventing null
added a menu item to open the " Reopen in Browser " to enhance user experience by allowing users to open URLs in the browser to improve user
added a new error message for unsupported multiple times in the SemanticAnalyzer to improve error handling and provide clearer feedback for semantic analysis issues
added null checks for EntryAdapter and Predicate in the addEntryListener method to ensure robustness by preventing null pointer exceptions
fix coordinatearraystest to handle empty coordinate array
corrected a typo in the method call from ` setOpen ( false ) ` to ` setOpen ( false ) ` in ` ToolbarPanel
added a boolean variable ` first ` to the ` TestPayloads ` class to control the initial state of payloads
replaced direct call to ` mWorkspace . enterOverviewMode ( ) ` with a call to ` showOverviewMode ( true ) ` to simplify the method
added a line to set the destination of the message dispatch in NetworkRouteTest . java to ensure the message dispatch originated from the correct destination
resolve http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 56749 - messagehandler
updated variable assignments and added suppress warnings in ` NestedArithmeticTest . java ` and ` AMD64FloatConvertNode . java ` to improve code clarity
updated HttpClientRequestImpl to include a boolean parameter for buffer writing to enhance performance by optimizing buffer additions
updated the verboseLevel condition and modified the artifact regex for better clarity to enhance readability and maintainability of the code
pdfbox - 2576 : avoid npe , a suggest by valerybokov
removed debug print statements from ReferenceUtil . java to clean up the code and improve readability
add visible field predicate environment to field visibility schema transformation ( # 886 )
added configuration parameters for solidity HTTP RPC port and enablement to improve flexibility in connecting to the solidity server
added a type check before removing the drop target to prevent potential ClassCastException
refactor stub jar generation logic into a separate method ` createStubJar ` to improve code readability and maintainability by reducing duplication
added new feature descriptions for setup wizard , probe module , and workflow helper in StartPageTopComponent . java and updated existing feature descriptions in GettingStarted
[ hotfix ] fix checkstyle violation in cassandradaemon
removed unnecessary boxing in onlinetestcase . java
changed return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository to ensure correct user retrieval for authenticated users
added null checks for onIdleTimeout and _ onFailure in HttpChannelState . java and updated callback listener handling in HttpChannelTest . java to en
updated CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to ensure compatibility with blocking I / O operations
refactor TABLE _ HEADER _ SEPARATOR regex to use a constant COL for better readability and maintainability to enhance code clarity and
change return value from 32.0 f to 31.5 f in Camera . java to improve accuracy in camera positioning
added a preference for starting on boot setup in GpsSettingsActivity and updated URL formatting in Utilities to enhance user experience by providing clear starting options
increased the client secret length from 128 to 512 to accommodate larger client credentials for improved security
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to use enablePassingNulls ( true ) instead of enablePassingNulls ( true
ignore scheduledmethodmetricstest due to race condition
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods to remove dependency on ` PinotFSFactory ` to simplify
added locale - specific date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting for english users
added MetalLookAndFeel import and set UIManager look - and - feel in bug8032878 . java to enhance the user interface by providing a
added preDestroy annotation and refactored ping task management in Bot . java to improve thread safety and ensure proper cleanup of ping tasks
updated error message from throwable . getMessage ( ) to throwable to simplify error handling by using the original throwable object directly
updated variable names from ` module ` to ` from ` in ` ModuleTable ` and ` PackageTable ` classes to improve clarity and consistency
added exception handling for CmdLineException in PinotAdministrator . java to improve error logging for command line exceptions
replaced super . equals ( o ) with isEqualTo ( o ) and added a hashCode ( ) method to Subject classes to ensure compatibility with deprecated equals and
removed unnecessary whitespace and improved code formatting in CustomPlaybackOverlayFragment . java and ImageButton . java to enhance code readability and maintain
changed zoom level values from 10 to 20 and from 20 to 24 in BasicMapViewer . java to allow for more flexible zoom levels
refactor admin user and group retrieval in DrillRoot . java to use ImpersonationUtil for processing admin users and groups to enhance
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` for improved permission validation to en
added ArgumentExtractor to DelegatedClientAuthenticationAction and updated service resolution logic to enhance argument extraction capabilities in the authentication process
changed the defaultGroup variable from non - final to final in NacosServerRegisterRepository . java to ensure that the variable cannot be modified after initialization
tilesizechangemanger : use destroytilecaches ( ) instead of destroytilecache ( )
removed unnecessary view clearing logic in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline the code for better readability and maintainability
refactor ` cleanEntriesForFeedsWithoutSubscriptions ` to ` cleanFeedsWithoutSubscriptions ` and introduce a new method ` cleanEntriesFor
updated authentication parameters in ImmutableAssertionTests to enhance test coverage for authentication functionalities
nifi - 6663 : use temporary folder for firewall test to avoid test failure
make conic point computation more robust
reformatted conditional statements in RandomAccessReader . java to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to MockitoFields and MockitoBeforeTestNGMethod classes to suppress unchecked
added native image creation methods and modified image handling in CImage . java to improve image processing capabilities and enhance error handling during image creation
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to ensure compatibility with byte array comparisons
renamed ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` and updated related references accordingly to clarify the purpose
refactor equal method to use java . util . Objects for null - safe equality comparison to enhance code readability and reduce potential null pointer
updated class resolution methods to use ` resolveClassFromBinaryName ` instead of ` resolveClassFromCanonicalName ` to improve clarity and functionality
added verification for HTML and FTL HTML properties in NinjaDefaultTest to ensure that the application correctly handles specific HTML and FTL errors
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related logic in ` DeviceProfile . java
updated padding calculations in DetailFragment and adjusted request code constants in ListFragment to improve layout responsiveness and clarify list navigation functionality
updated catch blocks to include Thread . currentThread ( ) for interrupting interrupted exceptions to ensure proper handling of thread interruptions and improve error
added null checks for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure robust handling of
server : check for support of static nat service in the network
added multiple calls to resetHeaderScrollingState ( ) in OCFileListFragment . java to ensure proper state management during fragment scrolling
added a call to remove an extra empty screen in the workspace to enhance user experience by ensuring an empty screen is displayed
added a fixedWidth feature to BitmapFont to support glyph width adjustments based on font size
removed the ` show _ title ` parameter from the ` createFragment ` method and refactored related logic in ` ChangeLogFragment ` to
added state machine interceptor methods for pre and post event and error handling to AbstractStateMachineFactory to enhance state machine interception capabilities for better error management
[ hotfix ] fix checkstyle violation in configdescriptionprovider
updated role creation in TestAuthorizationApiAuthorizer and enhanced HiveConf handling in StorageBasedMetastoreTestBase to improve role management and ensure proper
refactor facet sorting logic in FacetComponent . java to use a boolean variable for count sorting to improve code readability and maintainability
updated properties handling in CheckstyleReport to use overriding properties instead of creating new ones to improve flexibility and maintainability of property management
added functionality to stop active jetty instances in the DeleteInactiveReplicaTest class to enhance test reliability by allowing the deletion of inactive jet
added a file name parameter to the ` newInstance ` method in ` FileActionsDialogFragment ` to allow users to specify a custom title for the dialog
added a constant for INVALID _ DIRECTION and updated reorder direction checks in CellLayout . java to include EXTERNAL DROP mode to ensure proper handling of
updated fields in InnerTransferRequest and AccountAPI to remove " payAccountId " , " recAccountId " , " currency " , " from " , "
add assertjobstatuseventually ( ) and getexecutionidforjobid ( ) to jettestsupport
added a new interface ` EnableAdminClient ` to the ` org . noear . solon . admin . client . config ` package to provide a
replaced specific imports with a wildcard import and added a new visitIdentifier method to handle identifier types to streamline the import statements and enhance the visitIdentifier
updated action text color in AuthenticatorActivity to ensure consistent visibility of the action icon in dark mode
added a new method ` find ` to the ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` classes to enhance
rename ` addTestStepsForPickleSteps ` and ` addTestStepsForBeforeHooks ` to ` createTestStepsForPickleSteps
corrected a typo in the method name from " noArgMethod " to " validNoArgMethod " to improve clarity and consistency in the
added cancellation functionality to the SparkClientImpl and RpcServer classes to enhance client management by providing feedback on client cancellation failures
added getImplicitPreCoercionValue method implementations in SkylarkParamInfo , DefaultConstructorArgMarshaller , ParamInfo , ReflectionParamInfo ,
initialize ` lastDisplayedUser ` with ` Optional . empty ( ) ` to ` Optional . empty ( ) ` to ensure ` lastDisplayedUser ` is
added support for querydsl order specifications in the repository implementation
added null checks before stopping SchemaRegionConsensusImpl instances to prevent potential NullPointerExceptions during shutdown
planner - 575 : fix bug in defaultplannerbenchmark when warm - up fails
added xread and xreadGroup methods to MultiKeyPipelineBase and MultiKeyBinaryRedisPipeline classes to enhance pipeline functionality for reading data
updated read byte count methods in LinkedBufferInput and StreamInput classes to improve clarity and consistency in byte count handling
added WebSecurityCustomizer to CasWebAppSecurityConfiguration and updated CasWebSecurityConfigurerAdapter to use this new customizer to
added a new test class TestJdbcWithDBTokenStoreNoDoAs and modified TestJdbcWithDBTokenStore to extend TestJdbcWithMini
added a method to register a ContentProvider with a authority in ShadowContentResolver and updated ContentProviderController to use this method to improve modularity
[ hotfix ] fix typo in classreader
added a configuration setting for keep - alive settings in SingleConnectionManager to enhance connection stability based on configuration settings
[ java ] use supplier for send sender flow control .
added null check for getCurrentPoint ( ) in DrawLocus and GBasicStrokeD classes to prevent potential NullPointerExceptions during locus rendering
added concurrency support and improved error handling in WebSocket connection handling to enhance performance and ensure proper resource management during asynchronous operations
danielwagnerhall : switch selenium driver selection from firefox to chrome
updated assertions in multiple test classes to use ` assertThat ` instead of ` assertEquals ` for improved readability to enhance code clarity and
trufflelanguage : remove deprecate contextreference method .
refactor StubberImpl to reset the exception as null and add unit tests for UninstantiableThrowable to improve error handling and ensure proper
added exception handling for non - ascendant actors and updated return logic in Actor . java and Group . java to improve error messaging to enhance
added location permission handling in LocationPickerActivity to enhance location access functionality and improve user experience
http : / / issues . apache . org / jira / browse / amq - 2473 - add messagedriven bean
added cookie specifications to the request configuration to enhance security by setting a standard cookie for HTTP requests
simplified the intersection check in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering in AirspyTunerController . java to improve audio
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel constructors to enhance flexibility by allowing users to specify
added a new configuration option for the Kubernetes service creation timeout to enhance the configuration options for service creation
updated NearbyListFragment to use a switch statement for setting the icon based on the description of the place to enhance clarity and maintainability
added null check for type . getPackage ( ) before processing package names to avoid potential NullPointerException when type . getPackage ( ) is null
added a new file PrintInlining . java with a main method to provide a basic way to print a test result to standard error
fix ( javadoc ) : fix brace in javadoc tag
[ java ] remove unused variable from archive test .
updated EdgeDataTable to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) for clarity to improve code readability and maintainability by
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
added Timber . d ( " Setting playback speed to % f " , speed ) to VideoManager . java to provide better visibility into the playback speed
add roomremoved event when clustering start
[ hotfix ] fix typo in autoscalinghandlertest
added key properties for texture key in TextureHelper . java to enhance texture key management functionality
refactor PythonDslProjectBuildFileParser to use EventReportingProjectBuildFileParserDecorator instead of PythonDslProjectBuildFileParser to
[ j2cl ] add library normalization pas to j2cl transpiler
corrected a typo in the method name from ` nextResponseBodyConverter ` to ` responseBodyConverter ` in ` GuavaOptionalConverterFactory
[ hotfix ] fix checkstyle violation in memorysegment and memorymanager
ambari - 21142 . add console session creation time ( rlevas )
added a new file ` Hbs . java ` and ` HbsTest . java ` to implement a custom handlebars template engine to enable
refactor ChatMessageAdapter to handle null or empty hints and update visibility logic for incoming messages to improve message visibility handling for better user experience
changed iteration over header names from keySet ( ) to values ( ) in ImportCsv . java to ensure correct iteration over values instead of keys
added a new test method ` waitsUntilAlertDialogAppears ` to ` AlertTest ` and refactored ` ConfirmTest ` to use
added a null check for distinct column indices in ReduceSinkDeDuplication . java to prevent potential NullPointerExceptions during runtime
added a check to ensure the name does not already exist in the list before processing to avoid duplicate entries and improve error handling during processing
chore ( regen ) : regenerate with update license year ( # 4382 )
updated OSGi bundle groupId and artifactId in TestOSGiUtil . java to reflect the new Jetty WebSocket client version to ensure compatibility with the
changed the return type of the entrySet ( ) method from an unmodifiable map to an unmodifiable map containing all attributes to enhance immutability
do n ' t repaint sketch header if they have change
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return values in multiple classes to simplify code
changed method call from ` resultSet . getDate ( colName ) ` to ` resultSet . getTimestamp ( colName ) ` in ` JdbcDataSource .
added a check for " javax . naming . Context " in the HtmlJndiTreeReport to enhance type safety by ensuring the correct class name
refactor database options creation to use a switch statement to improve readability and maintainability of the code
updated edge type check from " double " to " mutual " to ensure correct handling of mutual edges
removed the static final integer FLAG _ SLIPPERY from StatusBarTouchController . java to simplify the code by eliminating unnecessary flags
truffleconstantfieldprovider : fix array dimension calculation for array type .
added a Google Drive folder path preference to Google Drive settings to enhance user experience by allowing users to specify their own Google Drive folder paths
ggb - 2118 fix shuffle suggestion in equation web
added @ Nullable annotations to method parameters in Truth . java to enhance code clarity by indicating that certain parameters may accept null values
updated case statements in ArrayUtil . java for improved clarity to enhance readability and maintainability of the code
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to instrument constructors only if they cannot be instrumented to en
added functionality to manage and remove anticompactions in StreamIn and StreamInManager to ensure proper cleanup of temporary files during stream processing
added a new boolean property ` isKeyguardSecure ` and implemented related methods in ` ShadowKeyguardManagerTest ` to enhance keyguard
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization of the class
added a check for the length of ` overrideParts ` before parsing in ` GrblUtils . java ` to ensure ` overrideParts ` is only processed
corrected the spelling of " MultipleFailureException " to " MultipleFailureException " to improve code readability and maintainability
modified the checkDrained ( ) method in AsyncFileImpl . java and added a new test for draining after close in FileSystemTest . java to
increased LIGHTS _ NUM and LIGHT _ INTESITY from 4 to 8 and modified shader parameters from " light " to " vertexpath "
replaced ` TestProjectFilesystems . createProjectFilesystem ( ) ` with ` Workspace . getProjectFileSystem ( ) ` in multiple test files to streamline
updated variable types from String to PathWithLines for improved clarity and consistency to enhance code readability and maintainability
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
added a TODO comment to the TEST _ DIRS array to indicate that the array is outdated and should not be used
added a call to close the ParcelFileDescriptor in ShadowParcelFileDescriptor . java to ensure proper resource management to prevent memory leaks
added a method to reset the prefix index in the Stylesheet class and replaced synchronized block with an AtomicInteger for thread - local management to improve thread safety
added logging level for debug messages in TestDistributedStatsComponentCardinality . java to improve traceability of HTTP connections during debugging
added calls to throwIfImmutable ( ) in IntList . java to ensure immutability of the list to prevent potential mutability issues
added @ NotNull annotation to the onApplicationEvent method in GrpcServerRunner and updated ManagedChannelBuilder to use URI for contextPath to enhance
refactor graal demo to support shell command
invalidate the function array only when the assumption be valid .
added platform - specific handling for writing the manifest file on Windows to ensure compatibility with different operating systems
update priority from LOW _ PRIORITY to HIGH _ PRI in FindNullDeref . java and add a new class RFE3531161 with a
added nullability annotations to ConfigDescriptionRegistry and ThingResource classes to enhance code clarity and prevent potential NullPointerExceptions
[ hotfix ] fix checkstyle violation in masterjobcontext
added initialization logic for stream initialization in PageDrawer . java to ensure proper handling of crop boxes during image processing
refactor ManagerBase class to improve code readability and maintainability
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable access all apps from the system Task
replaced the initialization of FragmentActivity with a Robolectric activity controller using Robolectric to streamline activity creation and resume functionality to enhance
renamed ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` get
updated class names from ` ABCase1 _ 1 ` to ` TestABCase1 _ 1 ` and added a new test class ` TestABCase
updated the parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for ' blackholeAddress '
updated the handler setup in OpenRocketViewer to call doSimsChanged ( ) before setting the current Rocket to ensure that simulated simulation changes
added a new class ChangeDependencyGroupIdAndArtifactId to replace references to old and new group and artifact IDs to enhance dependency management by allowing
added validation for input paths in IndexingJob and SegmentChecker classes to ensure that only valid input paths are processed to avoid runtime errors
updated comparison from ` lt ` to ` lte ` for address comparisons to ensure correct handling of address boundaries
refactor PreprocessorDelegate to use Supplier for replacement paths and pathToSourcePathMap instead of ImmutableMap to improve code readability and maintainability by
renamed ` JsonExamples ` to ` Examples ` in ` JsonExamples . java ` and package - info . java to clarify the purpose of
added debug logging statements for extracting , making , and closing streams in ViewExtractor . java to improve visibility into extracting , directory , and output stream operations
refactor methods in FindsByLinkText class to improve code readability and maintainability
added a new Main class to provide a main method for the Java oop entry point to facilitate testing of Java oop functionality
fix synchronization issue with sip provider
removed duplicate continue statements in NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unused imports to
refactor AndroidLibraryDescription to use a Supplier for ImmutableList < BuildRule > instead of ImmutableSet to improve code readability and reduce dependency
updated method call from ` stream ( ) . count ( ) ` to ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added content encoding metadata handling in ExtractingDocumentLoader to ensure correct content encoding is used based on the content type
updated SQL insert statement to use a wildcard ' ? ' for username and domain _ id parameters to enhance flexibility in inserting credentials
added a null check for the slot in WindowListener . java to prevent potential NullPointerExceptions during execution
added support for ignoring transitive repositories in Maven execution requests to enhance control over repository management during execution
removed duplicate @ Inject annotation from ContactsPreferenceActivity . java to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android versions
added null check before closing the selection object to prevent potential NullPointerException when selection is null
added a condition to break the loop if the regex matches the entire string to enhance performance by avoiding unnecessary iterations
added a value of " server . port = 0 " to the IntegrationTest annotation to configure the server ' s port configuration to ensure the test environment
added a new ` UDFReverse ` class and registered it in ` FunctionRegistry ` to provide a reverse operation functionality for users
updated context path retrieval methods to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to improve clarity and
refactor Tracer class to improve code readability and maintainability
[ hotfix ] [ test ] ignore flaky rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java to enhance code readability and maintainability
added synchronized block to clear the buffer in StarTreeRecordStoreCircularBufferImpl to ensure thread safety during buffer operations
changed forecastMinutes , forecastHours , and forecastDays from 0 to 60 and adjusted their values from 0 to 60 in OpenWeatherMapOne
added timeout annotations and updated fetch request time handling in AbstractPageOperationTemplateTest . java to improve test reliability and clarify fetch request
updated RemoteTargetGluer and FloatingHeaderView to improve handling of split task IDs and added animation transitions for all apps content to enhance user experience
updated methods in CucumberPropertiesParser to return Stream instead of Collection and changed return type of parseRerunFile method from Collection to
added livingwood and quartz chiseled materials to the botania creative tab to enhance the mod ' s fluff
updated assertions in TestRadioButtons . java to check the size of optItem , retrievedOptions , and retrievedOptions separately to ensure correct behavior of radio button
added support for " -- file - sizes " argument and updated file size calculations in RCFileCat . java to enhance flexibility in handling file sizes
refactor multiple classes for improved clarity to enhance maintainability and readability of the codebase
[ jna ] fix npe when try to close an already close mxnet NDArray
refactor BlobServer class to improve code readability and maintainability
[ core ] fix unused private constructor bug
rename lexicalscope to lexscope for clarity
int - 1682 add test for sftp inbound autostartup
added ` getLevel ( ) ` method to ` Node ` , ` getRootNode ( ) ` method to ` Quadtree ` , and
updated version parsing logic to handle minor version numbers correctly
added a check to ensure tags are not empty before adding them to the active item to prevent potential errors when tags are not available
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a new method ` fromDateTime ` to ` DateTimeFunctions `
refactor ` disassemble ` method to use ` disassembleForCache ` instead of ` disassemble ` for improved cache handling to en
refactor Log4j2ConfiguratorServlet for improved logging functionality
refactor exception handling in StorageBasedAuthorizationProvider to streamline exception creation to improve code clarity and reduce redundancy
updated CGoCompileStep to use String . join for concatenating command prefixes and added a new test for C++ prebuilt C++ libraries with Wrapped
added Buildable annotation to CustomResource . java to enable the use of Buildable objects in the codebase
removed the @ Override annotation from the Only class to streamline code by eliminating unnecessary overrides
added TIMEOUT _ THREE _ HOURS constant and updated HttpConnectionParams to use it to improve connection timeout duration for better performance
added new configuration parameters for raw target node parsing pipeline in PerBuildStateFactoryWithConfigurableAttributes and RawTargetNodeToTargetNodeParsePipeline to enhance performance
kristianrosenvold : add support for trace constraint to selenium server
removed the @ Singleton annotation from ApplicationController to simplify the controller ' s lifecycle management
updated username retrieval to use OwnCloudAccount for display name to ensure correct username is used based on display name availability
added a test for resuming a paused job execution in SimpleJobLauncherTests to ensure that the job execution resumes execution with paused status handling
added null check for cacheConfig before constructing string values to prevent potential NullPointerException when cacheConfig is null
kristianrosenvold : move dockersession out of kristianrosenvold to master
fix compilation unit context for java . lang package
pdfbox - 4892 : fix npe in nonsequentialdfparser , a suggest by valerybokov
mahout - 4071 : fix test to pass on mac o x
updated HttpServerTestBase . java file to improve test coverage and maintainability
refactor assertions in PortletApplicationMapTest for improved clarity and structure to enhance readability and maintainability of the test code
added a test for dynamoDbIgnoreNulls in BeanTableSchemaTest . java and implemented related methods in NestedBeanIgnoreNulls . java to
add redissonautoconfigurationcustomizers interface to allow customization of redissonautoconfiguration
fix ( indicator ) : fix index out of bound
added new methods ` execInContainerWithUser ` and ` execInContainerWithUser ` for executing commands with specified user credentials to enhance
updated the logic for determining interestedInByteMessages and interestedInTextMessages to correctly account for both WebSocketByteListener and WebSocketTextListener to ensure correct handling
add semgrex test for attribute conjunction and negated attribute
added a broadcast to clear unread unread notifications in HomeFragment to enhance user experience by providing clear unread notifications
removed conditional logic for pre - gingerbread in TouchImageView to simplify the code for better readability and maintainability
added a default profile validation support bean and a flush method to BaseDstu21Config and WebsocketDstu21Config to enhance the flexibility
( chore ) camel - base - engine : avoid infinite loop when veto camelcontext
added FloatingActionButton and associated functionality to manage the FAB menu in ShareActivity to enhance user experience by providing a quick way to access
added a new ` InlineParslet ` class and updated ` ToDateTokenizer ` to use it for parsing formatted date strings to enhance
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated error messages in ErrorMessages _ sv and XPATHErrorResources _ sv for improved clarity to enhance readability and maintainability
added server check state handling in the authentication process to ensure operations service binding is only attempted when the server is checked to enhance user experience by preventing
updated return statements to use node . getBeginLine ( ) and node . getEndLine ( ) instead of node . getBeginColumn ( )
added waitFor ( ) methods to CxxPreprocessAndCompileStep and ManagedThread classes to ensure proper thread management during process execution
added a requireAllRepositorySources property to PrincipalAttributesProperties and implemented a baseAdditiveAttributeMerger in CasPersonDirectoryConfiguration to en
wait cluster for safe state before checkifloaded ( # 16400 )
added support for enabling SSL protocols in the NettyWebServer to enhance flexibility in configuring SSL configurations
replaced AtomicBoolean with AtomicReference for atomic operations in SetOnce . java to improve thread safety and maintainability of atomic operations
updated QueryDslMongoRepository to handle null property and added a test for empty path expressions in SpringDataMongodbSerializerUnitTests to ensure correct
updated assertions in RoundRectBorderTest for improved clarity and consistency to ensure correct behavior of round rect borders to enhance test accuracy and maintainability
added a check for empty genesis configuration and threw an exception if the cluster is empty to ensure that the application does not attempt to verify an empty
remove test that fail in parallel
updated CountDownLatch and List initialization from ` cnt ` to ` min ` and added validation check for ` sign ` in ` PrecompiledContracts . java ` to
updated condition in ProcessInformationsPanel to check for non - windows instead of checking for existing windows to ensure that only active windows are processed
refactor methods in MoreCollectors for improved clarity and functionality to enhance readability and maintainability of the code
added null checks for orderbook in BitmexStreamingExchange , BitmexStreamingService , and BitmexManualExample to ensure proper
added validation checks for lat and lon in GeoPointField to ensure fields are not invalid to prevent runtime exceptions
refactor workflow file handling methods to use getWorkflowFileName and getWorkflowDrafFileName to improve clarity and maintainability of workflow file naming
refactor ResponderId class to improve code readability and maintainability
modified the ` getTableDocument ` method to include a ` withDependents ` parameter to enhance functionality by allowing dependent tables to be included or excluded
added functionality to handle consecutive uploads without coordinates in UploadActivity and UploadPresenter to improve user experience by providing clear feedback on uploads without coordinates
added caching mechanism for profile data in the profile fetching process to improve performance by reducing unnecessary updates to the cache
refactor JpaMetamodelEntityInformation to improve handling of identifier derivation and property values to enhance the robustness of identifier deriv
added index creation and verification for the " I _ " unique name in " UpgradeIT . java " and updated method names in UpgradeUtil .
add register default exception mapper to dropwizardresourceconfig
modified the parameters of the storeFieldAction method to include a boolean parameter to enhance flexibility in handling store field actions
updated the nativeCreateNSWindow method to include an ownerPtr parameter for better control over window pointer handling to enhance flexibility in managing window pointers
updated SQL statement to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to improve clarity and consistency in table naming
added a new STOCK case and updated the CIRCULAR _ PROGRESS enum to include it to enhance the functionality of the Tile class to
fixed - rbuckets . get ( ) method throw classcastexception if redisson . client . codec . stringcodec be n ' t set . #
add detectorUnderTest annotation to Ideas _ 2011 _ 07 _ 03 , Ideas _ 2011 _ 07 _ 24 , Ideas _ 2011 _
refactor LauncherBackAnimationController to utilize BackProgressAnimator for progress updates to improve clarity and functionality of back animation handling
changed the ` _ initialPageNo ` variable to be ` final ` and added logic to handle page limits to ensure that ` _ initialPageNo `
fix crc16 calculation for jedisclustercrc16 ( # 2879 )
added support for comment parsing in FormattedSqlChangeLogParser to ensure correct handling of comments in rollback statements in SQL change logs
refactored the initialization of the JarArchiver in MavenArchiver and added a dependency for JarArchiver in AbstractJarMojo
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to provide clearer error handling for class usage files loading failures
removed unnecessary condition checking for aggregations in TSServiceImpl . java and added a multiAggregationTest method in DaemonTest . java to streamline
added validation for format and type in GwtGL20 . java to ensure only RGBA formats are accepted for GWT backend compatibility
added a new test method for debug information in OutputMemoryTest and VarDump classes to enhance testing capabilities for debugging purposes
refactor exception handling in InlineBytecodeGenerator to improve clarity and maintainability of exception management
instrumentation : add class initialization trace
no effective change - remove unused parameter
( chore ) camel - kafka : use caffeine cache for load topic route
updated createDataSource method to accept a boolean parameter for read - only mode to enhance flexibility in data storage configuration
updated INVALID _ SOURCE _ TARGET _ RELEASE regex pattern and added a fatal error log for invalid target releases to enhance error handling and provide cle
updated URI string construction in DetailFragment . java to include a check for IntentChecker availability before creating a location intent to enhance compatibility with Google Maps
added a null check for inherited parameter contexts in StandardParameterContextDAO to avoid potential NullPointerException when retrieving referenced IDs
refactor ClassLoader class to improve code readability and maintainability
added a method to set the origin response header in ProxyRequestHelper and corresponding test in ProxyRequestHelperTests to ensure correct handling of response headers in the
added a new ProfileSettingDrawerItem instance in GpsMainActivity . java to enhance the navigation drawer functionality
added support for Jasper XML validation in multiple classes to enhance XML parsing flexibility based on application context configuration
simonstewart : fix the firefox driver to work as expected
added a maxRows variable and updated fetch size logic in IoTDBStatement . java to ensure fetch size does not exceed defined limits and improve error handling
refactor ` isCountOptimizable ` method to use ` allActionsAreOptimizableFilters ` instead of ` isCountOptimizable ` directly to improve
added node and mouse left click event handling in StandardVizEventManager to enhance user interaction with selected nodes during visualization
refactor ManyToOneRingBuffer to use a dedicated zeroBuffer method for memory management to improve code readability and maintainability by reducing duplication
[ fix ] terminalnode : do n ' t reuse xorgroup instance
added getHeight ( ) and getWidth ( ) methods to LCDUIImageMonochromeBitmapSource to ensure proper access to image dimensions
refactor SourcePathResolver to simplify path resolution logic and improve clarity to enhance code readability and maintainability by reducing redund
added test for dstu2 encode and decode xml resource
changed the access modifier of ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and added encoded URL handling in ` WebsocketRouting
rename test _ suite _ compile to test _ suite _ execution
refactor CxxPlatform retrieval logic into a separate method to improve code readability and maintainability
added imports for IndexReader and Similarity , Field , and Searchable classes to enhance documentation documentation for improved search functionality
added null check for the current element in ConcurrentLinkedStack and implemented bubble functionality in ConcurrentLinkedStackTest to enhance robustness to prevent potential NullPointer
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes to
added null check for mDirectories before accessing its properties to prevent potential NullPointerException when mDirectories is null
updated condition in RecentsView to check if the overview state is not enabled and not the first layout to enhance user experience by preventing unnecessary
added package - info . java files for various backward codecs to provide package - level documentation for the backward codecs
added localization for the visible auto leveler panel in AutoLevelerTopComponent to enhance user experience by providing context - sensitive information
added postOptimize callback functionality to DirectUpdateHandler and DirectUpdateHandler2 classes to enhance event processing during optimization to ensure proper callback management during updates
updated compression algorithm to use a padded length of zero to ensure proper handling of compressed data with leading zeros
removed the check for user data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to retry logic in RetryingMetaStoreClient to ensure retry attempts only occur for local meta store scenarios
heliosolologservicetest : do n ' t fail on timeout exception
refactor Subject class to improve code readability and maintainability
improve performance of abstractserializationservice by use weak reference
update HSSFPalette to use absolute values for color distance calculations and add a test for finding similar colors in HSSFPalette to ensure
chore ( regen ) : regenerate with update license year
danielwagnerhall : added unit test for find element by numeric id .
added flags parameter to the registerReceiver method across multiple classes to enhance flexibility by allowing registration of flags in the registration process
fix flaky ffmpeg test
refactor OggInputStream to utilize a previous input stream for improved resource management to enhance memory management and prevent potential memory leaks
added a constant for the response was null and updated the failure message assignment to use this constant to improve code readability and maintainability
[ te ] do n ' t run anomaly migration if there be no data
added a showToast method to BaseActivity and replaced it with a dedicated showToast method in DetailActivity to enhance user experience by providing
updated the method retrieval in TracingFeignClient to use delegate . httpMethod ( ) instead of delegate . method ( ) to improve clarity and
added validation for LDAP names and updated exception handling in LDAPCertStore . java to enhance robustness by ensuring only valid LDAP names are processed
refactor socket retention logic into a separate method ` retain ` to improve code readability and maintainability by reducing duplication
renamed the ` AdapterViewTest ` class to ` ListViewTest ` and added a test for item click events in ` DroidSugarAndroidTestRunner
[ hotfix ] fix checkstyle violation in checkpointfailuremanageritcase
deleted the GenericItemUIProvider . java file to remove unused code
added a new private variable ` selectedObject ` and updated the ` setSelected ` method to set the selected object in ` SIPCommSelectorBox ` to
added import for Isolated and annotation to MetaInfConfigurationTest . java to facilitate testing of the FileSystemPool functionality
added a host setting for the server connector to ensure the server connects to the configured host
updated token expiration settings based on client grants in DynamicClientRegistrationEndpoint to enhance flexibility in token management for different client types
added a new class ` CloverInstrumentationFilter ` to ` TestInterfaceAudienceAnnotations ` and modified ` SplitLogCounters ` to check for ` AtomicLong
added support for the Smartmi Evaporative Humidifier in MiIoDevices and updated readmeHelper to use this new CB2
move plausible to break to calculate mining duration
changed the visibility of the setScrollRangeDelta method from package - private to public to allow external access to the method for better usability
added error logging for empty repository information in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that users are aware of potential issues
updated the condition to include missing value checks in the IntHashSet class to ensure proper handling of missing values in the hash set
added Serializable interface to RuleAdministratorImpl class to enable serialization of RuleAdministrator objects
updated ` generateAllowedOrigins ` method to accept a ` Set < String > ` of allowed origin patterns instead of a list to enhance
update g3d test to use knight . g3db
added a check for negative solidified position in the updateLatestSolidifiedBlock method to ensure proper handling of solidified block updates
updated handling of null values in ExecResult and improved test assertions in TestServerCustomProtocol to enhance robustness by preventing null pointer exceptions
added a method to check if a user is authorized to access the specified remote user in HttpServer to enhance security by ensuring that unauthorized users are
refactor ClassMirror and StubJar to use a dedicated method for generating stub class bytes to improve code readability and encapsulate functionality related to
added a TextView to display the share internal link text based on whether the file is a folder or a regular file to enhance user experience by providing a
updated assertion in PredictionTest to use Locale . ENGLISH for locale - specific formatting to ensure accuracy is consistent across different locales
updated the condition to check for SATURDAY instead of SATURDAY in ModelZooTest . java to ensure correct handling of day -
added methods to hide IME in AllAppsContainerView and updated LauncherAllAppsContainerView to log the closure of the ime event to en
added configurer . configureembeddedeventstore ( ) to eventhandlingconfigurationtest
refactor directory handling in BsdFileStore to utilize getmntonname and getmntonname0 methods to improve code clarity and encaps
add test case for issue # 1599 where type solver can not be solve
added a new command ' spawn ' with an additional parameter for x , y , and z coordinates to the SpawnCommand class to enhance functionality to allow
added MIN _ CONTENT _ DIMEN constant and modified content area width calculation to ensure content area dimensions do not exceed minimum values
hotspot crypto substitution test : make test final
replace newDirectory ( ) with newMockDirectory ( ) in TestIndexWriter . java to ensure compatibility with non - Windows platforms
added plugin check class names to the failed checks list in UpgradeCheckRegistry . java to enhance plugin validation during upgrade process
refactor Environment class to improve code readability and maintainability
added import for LuceneTestCase and annotated the test with a BadApple annotation to address issue SOLR - 7421 related to bug tracking
added a check to ensure the home directory does not already end with the file system separator to prevent potential issues with directory traversal
updated FLAG _ IGNORE _ HDMV _ DTS _ STREAMS to FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _ STREAM
updated resource handling in LiquibaseEntityResolver and XMLChangeLogSAXParser to utilize CompositeResourceAccessor instead of ClassLoaderResourceAccessor to improve resource management
added security properties for disabling TLS in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing attacks
updated the ` @ Value . Immutable ` annotation to include ` builder = false , copy = false , singleton = true ` and removed the ` EMPTY `
rename expectedDirectory and actualDirectory lists to actualStubDirectory and actualFullDirectory for clarity to improve code readability and maintainability by using
removed duplicate @ DoNotSub annotations from Int2ObjectHashMap . java to enhance code readability and maintainability
refactor folder name setting logic to use TextUtils for better readability to improve clarity and maintainability of the code
updated UaaResetPasswordServiceTests to include " uaa " parameter to enhance functionality by allowing clients to specify their UAA account
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to enhance encapsulation and restrict access to internal methods
updated string concatenation for clarity in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to improve readability and maintainability of the code
refactor MimetypeIconUtil class to improve code readability and maintainability
corrected the spelling of " supportsViewFor " to " supportsViewsFor " across multiple view provider classes to ensure consistency and accuracy in
added a test for negating instances of J . InstanceOf in UnnecessaryParenthesesTest and updated the UnwrapParentheses class to include a new
added a method to teleport a Location object to enhance functionality for location manipulation
replaced the use of ` Base64 . encode ` with ` Base64Utils . encodeToUrlSafeString ` for encoding modulus and exponent in ` Token
updated imports and method calls in TranslatorManagerHelper . java to include ProjectComponent and Statistics . Event . GENERATE to enhance project reporting functionality and improve
renamed the interface ` ContainerAnnotation ` to ` ContainedBy ` to clarify the interface ' s purpose to accurately reflect the intended
added a null check for the getId ( ) method to ensure that the result is not null to prevent potential null pointer exceptions during execution
refactor the setUpRevampedTweet method to use a dedicated method for handling shuffle users to improve code readability and maintainability by
updated UserProfileActivity to dynamically retrieve verified text based on the addon theme setting to enhance flexibility in displaying verified text based on the current theme
refactor AbucoinsDigest to use a final field for timeDiffFromServer to improve code clarity and encapsulation
camel - 14263 : camel - mongodb - add autowired option to configure mongodb connection .
added ` sourceIndex ` parameter to ` AttributeMapping ` and updated related classes to utilize it to enhance flexibility in attribute mapping by
added error handling for corrupted partition statistics in SemiTransactionalHiveMetastore . java to improve robustness by gracefully managing corrupted partition statistics
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks during authentication
updated multiple classes related to connectivity handling to improve code clarity and maintainability
[ geos - 10646 ] escape email address in geoserverhomepage
refactor modulemanagerimpl to enrich engine ' s reflections with subsystems
refactor JoinModeller to use a variable for the number of features instead of a hardcoded value to improve code readability and maintainability
added a length check for the command before processing it to avoid potential null pointer exceptions when processing commands
( chore ) camel - kafka : avoid log every time
updated action constant references from ` Action _ SET _ PLAYBACK _ SPEED ` to ` PlaybackStateCompat . ACTION _ SET _ PLAYBACK
added automatic separation handling and updated motor instance properties in MotorMountHandler , MotorMountHandler , AxialStage , and FlightConfiguration
tika - 4071 -- add validation for ascii name length
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to temporarily disable the test due to compatibility issues with JDK 1.
refactor lock file creation into a separate method ` createLockFile ( ) ` to improve code readability and encapsulation
updated sync interval settings from version 5.3 to version 5.3 _ 1 in UpdateUtils . java to ensure compatibility with the latest version of the
added null check for FEDERATION _ USER in AuthenticationManager to prevent potential null pointer exceptions during authentication
truffleobject : fix execute method with non - truffleobject parameter .
( chore ) camel - jakarta : cleanup unused import
do n ' t warn if filter chain deny access
refactor Collection and Map classes to improve code readability and maintainability
removed unused import of Version from CreateIndexTask . java to clean up the code and reduce unnecessary dependencies
added logic to handle missing primary key primary key changes in OracleDatabase and AbstractDb2Database to ensure correct schema information is included in the index
added MetastoreException to the exception handling in Msck operation and introduced a new test for invalid partition names in TestMSCKRepairOnAcid
[ hotfix ] [ kafka ] do n ' t retry already commit kafka transaction
[ issue # 4833 ] fix forwardmessagetodlqactivity ( # 4834 )
added support for a list of service names in DockerComposeContainer to enhance flexibility in managing Docker compose services
fix memory leak in export and structcontextdecorator
removed unused HtmlCleaner imports and simplified XML processing in FeedParser . java to improve code clarity and reduce unnecessary dependencies
removed unnecessary condition checking for mAppsCustomizeContent in Launcher . java to simplify code logic for better readability
change data type of ` energyReactiveVArACSumConsumed ` , ` energyRealWACMinusAbsolute ` , ` powerApparent
added a new file ` bug4150029 . java ` implementing a dialog to open a dialog to create a temporary directory and create a sub
added configuration update handling to HiveConf , SparkClient , SparkSessionImpl , and SparkSessionImpl to ensure proper resource management and prevent potential memory leaks
added ` getLongPressIndicator ( ) ` methods to ` AppIcon ` , ` AppIconMenuItem ` , and ` Launchable ` classes and updated
added checks for empty polygons and updated WKB validation methods in WKBWriterTest to ensure proper handling of empty polygons and improve wKB validation
refactor UnflavoredBuildTarget builder to use UnflavoredBuildTarget . builder ( ) instead of UnflavoredBuildTarget . Builder
added a new file ` MultiplyByMaxInt . java ` with a method to multiply an integer by a maximum value to facilitate the handling of larger
added a condition to enable the drawer indicator based on the current file status in OCFileListFragment to improve user experience by ensuring the drawer indicator is only enabled
removed unused imports from TestRAMDirectory . java to clean up the code and improve maintainability
replaced FixedBitSet with BitSet for accept states in Automaton and Operations classes to simplify accept states handling and improve performance
drools - 4892 : add miss message for no expression define for name on node
replaced ` @ ContainedBy ( AC . class ) ` with ` @ Repeatable ( AC . class ) ` in multiple test files
updated the messageForConsole method to include a duration to provide clearer timing information for file sending
updated class name handling in OpenMBeanAttributeInfoSupport to ensure proper package access validation during class loading
refactor readresponseresolver to accept an int parameter for replication factor
update freeSize calculation to improve memory allocation handling
modified the ` areTouchesDisabled ` method to accept a ` MotionEvent ` parameter and updated related logic to enhance touch event handling and improve touch
updated SslContextFactory instantiation to use SslContextFactory . Server instead of SslContextFactory .
removed the PrivilegedSocket implementation from PG _ Stream . java to simplify the socket creation process
refactor InputTest class to improve code readability and maintainability
added pause blur functionality to the DepthController and updated finish methods in AbsSwipeUpHandler to improve user experience by pausing blurs on Windows
added a null check for the current location marker before adding it to the map to prevent potential NullPointerExceptions when curLatLng is null
updated ClientAdminEndpoints to retrieve client ID from the clientDetailsService instead of directly using the client object to enhance clarity and maintainability of the
test : migrate sqlsourcebuildertest to junit 5
http : / / issues . apache . org / activemq / browse / amq - 2679 - fix intermittent test failure
added a test for handling unknown keys in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys during dataset operations
None
lightcontrol : rename controldir enum to control to avoid confusion
updated conditions for hiding stack traces and improved stack trace formatting to enhance code readability and maintainability
added context handling in HttpSessionEventPublisher to ensure that the application context is properly
added semantic exception for CREATE CQ statement in ASTVisitor to ensure compatibility with the new syntax of CREATE CQ statement
[ hotfix ] [ connector / iotdb ] fix typo in flinkiotdbsink
add a counter to track the number of custom simplification node
updated the context parameter for setting the fileIcon ' s type icon to ensure the correct context is used for setting the fileIcon ' s icon
updated indexOrConstraintName to use schema . getName ( ) instead of schema . getName ( ) to ensure consistency in schema name handling
bigquerytableiterator : add support for read timestamp field with utc time
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` classes and corresponding tests in ` ViewGroupTest `
replaced Enumeration with Enumeration < String > for enhanced type safety to enhance type safety and prevent potential ClassCastException
removed unused import of PColumnFamily from IndexTool and related classes to clean up the code and improve maintainability
added new constants for JSON value and JSON creator in DocAnnotationConstants . java and updated method calls in SpringBootDocBuildTemplate . java to enhance
svm : fix resource feature check for jar file
updated CUDA _ R _ 16F , CUDA _ C _ 32F , CUDA _ R _ 8I , CUDA _ C _ 32U
refactor ResourceLoader class to use a list of layout directories instead of a single directory to enhance flexibility by allowing dynamic loading of resource files
refactor the attached face retrieval logic in BlockRedstoneTorch to handle SimpleAttachableMaterialData to improve flexibility in determining the attached face based
added a case for VARBINARY in RelToStageConverter . java to support VARBINARY data type conversion
removed unused import of DateHelper from NoteAdapter . java to clean up the code and reduce unnecessary dependencies
updated backup message handling and error messaging in Backup . java and Captions . java to improve clarity and functionality of backup restoration
g3d - 390 : fix positioning of toolbar button to be relative
removed temporary file creation for the file " pipe " in ShadowParcelFileDescriptor . java to simplify file handling logic
replaced ` offer ` method with ` removeFirst ` method in ` StackBasedSecurityContextHolderStrategy ` and updated related tests to enhance security context management by
updated the rule name from " optimizations " to " controversial " to accurately reflect the state of the inversion state
added tests for xor neutral and reference equality in IntegerEqualsCanonicalizerTest and modified related logic in IntegerEqualsNode to enhance correctness of
removed the static final TYPE _ ARRAY constant from TypeFactory . java to simplify the code by eliminating unnecessary type declarations
refactor AllAppsContainerView , LauncherAllAppsContainerView , LiveSearchManager , StatsLogManager , and StatsLogManager to en
add blockstatecontainer . setbits ( ) to force bit density to fix network issue
updated assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest to improve clarity and consistency to enhance readability and maintainability of
feat : add optimization to get gl _ max _ texture _ size , only calculate once .
[ java ] remove redundant call to trystoplogrecording .
added a condition to set startPosn to 0 if isInTransform is false to ensure proper initialization of startPosn in the SemanticAnalyzer logic
refactor StarTreeUtils to use isSkipStarTree ( ) method instead of isStarTreeDisabled ( QueryContext queryContext ) to improve
added a boolean variable ` lockNearbyView ` and modified the ` refreshView ` method to include a ` lockNearbyView ` flag to control
add maptransformer . of ( map < k , v > ) , inverse ( ) and bimap ( ) ( fixes # 353 )
refactor EmeddedObjects and EmbeddedObjects classes to improve code clarity and maintainability
added a new parameter ` launcherWidgetSpanInfo ` to the ` LauncherPreviewRenderer ` and ` PreviewSurfaceRenderer ` classes to manage widget
replaced ` ChangeEvent ` with ` EventObject ` in ` StageSelector ` and ` StageAction ` classes to utilize ` StateChangeListener ` instead of
added calls to ` getCallingPid ` and ` getCallingUid ` methods in ` ShadowBinder ` and corresponding tests in ` ShadowBinderTest
changed the ` ExpectationFailure ` class to use ` @ Nullable ` instead of ` @ AutoValue ` for message and cause to enhance flexibility
bitcoinserializer : remove useless warn log
updated variable assignments for newWidth and newHeight in ImageReplacedElement . java to improve clarity and handling of width and height based on target dimensions
added support for Markdown escape characters in CoreMarkdownNodeRenderer and adjusted buffer appending logic in MarkdownWriter to enhance markdown rendering flexibility and ensure correct formatting
refactor SharePasswordDialogFragment to use a dedicated setPassword method for setting password to improve code readability and maintainability by reducing duplication
replaced private static final Method MAP _ ADDRESS with static final Method UNMAP _ BUFFER and added error handling for file channel method retrieval to enhance
changed access modifiers of several methods from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java
added new SLIDER keytab and default settings for Slider AM keytab in LlapOptionsProcessor . java to enhance the configuration options for
modified the ` tear - out ` method in ` ExtractionModelEditor ` to include an ` AnimationController ` for enabling animations to en
added a boolean flag ` mHasLoaderCompletedOnce ` and implemented synchronization for binding completion in ` LauncherModel ` to ensure that shortcut bind
refactor ` NodeManageMemoryMergeOperator ` , ` NodePathsConvertOperator ` , ` NodePathsCountOperator ` , and related classes to
updated the ` add ` methods in ` IssueInterface ` to include a ` messageType ` parameter and modified the ` ValidationReport ` class to
added a method to safely retrieve the cipher provider name and improved exception handling in RSAClientKeyExchange . java to enhance error logging and provide
[ hotfix ] use flink rather than dynamic
changed log level from warning to off in CCJSqlParserUtil . java to temporarily disable logging during development
added a condition to append a newline to the output if the index does not match the size to ensure proper formatting of output for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static to public to allow access to these constants from outside the class
added an @ Ignore annotation to the CovariantOverrideTest class to indicate that the test is outdated and should no longer be used
refactor curly method to use Qtype enum instead of BmpCharProperty to improve code clarity and maintainability by centralizing Q
camel - 14263 : camel - yaml - dsl - allow to load route from any kind of file ( e . g . xml )
added space minimum and maximum settings for the X - axis in the ScatterChart to improve visual spacing for better chart appearance
corrected spacing in ExpressionStringBuilder . java to ensure consistent formatting of string literals
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` and implemented it in ` BaseState ` and ` StateManager
added a check for the UTF8 encoding property in CheckEncodingPropertiesFile . java to ensure proper error handling when the UTF8 encoding property is missing
updated logging behavior in TestReproduceMessage . java and added seed decorators in LuceneTestCase . java to enhance test reliability and clarify
added a UI event for long - pressing an AllApps item in the launcher to enhance user interaction tracking for app launch events
added null check for log in StoreWAL . java and created a new test class for double commit functionality to ensure data integrity during commit operations
added a condition to check if the ' showSectorLandInfo ' variable is set to true to ensure that sector land information is displayed only when the '
[ hotfix ] [ table - common ] fix raw type inference warning in compositetypeinfo
refactor Enum class to improve code readability and maintainability
updated the ` buildNearbyRandom ` method to accept a boolean parameter for distribution parameters and added validation for ` randomSelection ` to ensure consistent behavior to
improve performance of temporarycache . get ( ) and remove it from cache .
[ geos - 8477 ] newlayerpage do n ' t show sql view and wms layer import container when store be create
initialize availability _ availability to be unavailable
updated PBFT commit message handling to use BlockCapsule instead of blockNum to improve clarity and consistency in processing commit messages
feat : bump phishing protection api v1beta1 to 2.1 . 0 ( # 419 )
replaced the ` _ freeSpaceReclaimDisabled ` boolean with a ` _ freeSpaceReclaimQ ` integer and modified the ` freeSpaceReclaim
changed KDC _ OPT _ PROXIABLE , KDC _ OPT _ RENEWABLE _ OK , and KDC _ OPT _ FOR
modified the initialization of JsonWriter to ensure proper type handling during writing
updated the methods for fetching mentions and favorites in ProfilePager . java to improve clarity and consistency to enhance code readability and maintainability
renamed the paintBackground method to paintComponentBackground in Slider . java to improve clarity by using the superclass ' s paintComponentBackground method to en
added a method ` valueFromClassConstant ` to retrieve the value of a constant from a class constant to enhance configuration handling for object value constants
( chore ) camel - kafka : log error when fail to initialize kafka service
changed the set of resources to ALWAYS _ ACQUIRE from a new HashSet to an ImmutableSet containing " usr / share / zoneinfo / tz
camel - 14263 : camel - messaging - add auto - create channel option to the message bus
added keywords property handling in HTMLDocument . java and implemented a test for indexing keywords in TestDemo . java to ensure proper
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the initialization of the _ addresses list to handle cases where addresses are not provided
updated the instantiation of CorrespondenceSubclassToFactoryCall to use the class reference directly to ensure compatibility with the expected class type
refactor Builder class to improve code readability and maintainability
improve isbntobibtex fetcher error message
do n ' t swallow throwable , just propagate
added null check for the text before setting cursor position to prevent potential NullPointerException when text is null
add support for simplified model in sentiment model generation
added trimming of whitespace in SuffixURLFilter . java to ensure consistent formatting of URLs
added a condition to return early if the player is not in Godmode to optimize performance by avoiding unnecessary processing when not in Godmode
ggb - 2118 box should not be register / unregistered in text input dialog ( fix )
updated constructors in LinkedHashMapCache and BoundedLinkedHashMap to include an accessOrder parameter to enhance flexibility in cache initialization
removed redundant line breaks in the close ( ) method to improve code readability and maintain consistency
added null checks for keyIndex in FixAcidKeyIndex . java and updated OrcOutputFormat . java to use KeyIndexBuilder to improve
updated exception handling in DirectUpdateHandler2 . java to use Locale . ROOT for string formatting to improve readability and maintainability of error messages
canonicalizer : make store check guard configurable
bciblockmapping : fix reachability check for exception dispatch block
added a method ` getClassificationDisagreement ` to ` AbstractCloud ` , ` DBCloud ` , and ` ViewFilter ` classes to calculate classification
removed unnecessary calls to BuildTarget . copyOf ( unstrippedTarget ) in multiple files to streamline code for better readability and maintainability
refactor SqlRunner class to improve code readability and maintainability
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and updated related
refactor DefaultSdkProvider to use a HashSet for known SDKs instead of a TreeMap for known API levels to enhance flexibility in managing
replaced ProgressIndicator with ConfidenceProgressIndicator in CreateOfferView . java to utilize confidence progress reporting to enhance user experience by providing a more
updated USER _ AGENT header check from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes to ensure
refactor iterateBpt method to accept a forceIterate parameter and update related logic to enhance control over block iteration based on the forceIterate
added constants for message view types and updated onCreateViewHolder method to use these constants to improve code readability and maintainability by reducing hardcoded values
replaced ` memEncodeUTF16 ( ) ` with ` memEncodeASCII ( ) ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
fix for tregex expression with no canonicalization
removed the ` canvas ` parameter from the ` insert ` method and adjusted related calls to simplify the method signature and improve performance by eliminating
refactor RefactorModule to use a default apply method and streamline the refactoring process to improve code readability and maintainability
added methods to retrieve child elements by name in Xml . java to enhance functionality for processing XML elements
added UTF - 8 encoding to HttpSolrServer to ensure proper handling of special characters in HTTP requests
updated SystemUiController to use SystemUiControllerFlags instead of UI _ STATE _ ALLAPPS to streamline UI state management for better maintainability
removed the private ClientConfigurationService variable to eliminate unnecessary dependencies
improve error message when hive split fail
removed the ownerId byte array from NodeEntry . java to simplify the class initialization process
ambari - 21174 . backup - snapshot - rightafter - take snapshot should take effect after take snapshot ( rlevas )
added score calculation to the merge method in TextFragment to ensure the text fragment ' s score accurately reflects the merge operation
removed the private Digester variable from Md4PasswordEncoder . java to streamline password encoding functionality
added a validation check for maximumUnimprovedStepCount to ensure it is non - negative to prevent illegal argument exceptions during execution
added a check to return early if the currently opened editors are empty to improve performance by avoiding unnecessary operations when no editors are currently open
added ` verify ( ) ` methods to ` BDDMockito ` and corresponding test cases in ` BDDMockitoTest ` to enhance Mockito
updated classLoader retrieval from Thread . currentThread ( ) to PathScanner . class . getClassLoader ( ) to ensure consistent class loading across different threads
added a type check for CodeFirstPojoClientIntf and updated sayHi2 method to accept a CompletableFuture < String > as a parameter to enhance
add log to abstractsplitbrainprotectiontest to help debug splitbrain protection failure
added null checks for ` logoutConfigurer ` before adding filters in ` DefaultLoginPageConfigurer ` and ` ServerHttpSecurity ` to en
updated G - basis calculations in CASgiac . java to improve clarity and correctness of variable handling
added log consumption functionality to DockerComposeContainer and created a corresponding test class to enhance logging capabilities for Docker compose containers
updated the parameter type in the testMapping method from ResultSetMapping to Object to enhance type safety and prevent potential ClassCastExceptions
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to convert a ` Supplier < T , E > ` to a ` ThrowingSupplier < T , E
replaced a break statement with a return statement in ConsoleActivity . java to ensure proper execution flow
( chore ) camel - platform - http : fix content - type issue
added platform - specific path handling methods to improve compatibility across different operating systems
added null check for authorizationContext parameters before processing to prevent potential NullPointerException when authorizationContext is null
replaced ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ( ) ` and added a new method ` throwExceptionIfFail ( ) `
updated SDK version from " 4611349 " to " 4514284 " and added new methods for speech recognition in ShadowTextToSpeech
store itemid and name in transactionlogkey instead of return value of itemid .
added a boolean property ` enableSqlWithoutProfile ` and corresponding getter and setter methods in ` JdbcEnvironmentProperties ` and ` JdbcEnvironment
added a try - finally block around the write operation in ConnectHandler . java to ensure proper resource management to prevent potential memory leaks
updated the CREATE _ REGISTRIES method to use EventGenerator instead of Supplier for creating registry events to improve flexibility in handling registry creation events
updated date formatting to use a calendar object instead of a date to improve flexibility in date formatting
updated the ` getThreadInfo ` method to include a stack trace depth parameter across multiple classes to enhance thread information retrieval accuracy for better debugging
added a protected TransactionLog variable and updated sleep duration in LeaderTragicEventTest to enhance transaction management during precommit operations
updated FastAsyncWorldEdit version from P2 - V6 to 1.17 to ensure compatibility with new features introduced in version 1.17
added null check for the path variable in SegmentGeneratorConfig . java to prevent potential runtime exceptions when the path is null
added a method to calculate the normal vector for a given face in ObjUtils . java and updated triangulationHelper . java to use this new method
updated the method to use ` IdentityZoneHolder . get ( ) . getId ( ) ` instead of ` IdentityzoneId ` directly to enhance cl
refactor SpanCollector class to improve code readability and maintainability
added a condition to check if the session is not null before proceeding to ensure that the session information is validated before proceeding with further operations
refactor TransactionIsolationLevel class to improve code clarity and maintainability
corrected the spelling of " printLVgroups " to " printLogicalVolumegroups " in OshiController . java to improve code readability
added a name for the current thread and updated the thread ' s name to reflect the remote URL to provide clearer context about the thread being forwarding
refactor CookieManager to improve cookie management functionality
replaced the static list creation of an ArrayList with a direct instantiation of a new ArrayList to simplify the code and improve readability
added a new OverviewToAllAppsTouchController to the list to enhance user experience by providing a touch controller for overview all apps
refactor ` scaleHotseatWithWorkspace ` method to return workspace scale and translation instead of a boolean to improve clarity and functionality of hot
added a check for JUnitRule class to the stack trace condition in DefaultStackTraceCleaner and implemented a test for filtering elements above MockitoJUnitRule
refactor MappedResizeableBuffer to use dstByteArray instead of dstnull for memory copying to improve memory efficiency and clarity by directly assigning
added a balance listener to the wallet service to manage balance changes effectively
added conditional logic to set color values based on edge mode to ensure correct color handling for different edge modes
( chore ) camel - core : avoid npe
added a check for INF pattern in Gl200ProtocolDecoder to ensure proper handling of INF patterns in the decoder
added a check for the last playback event refresh time in FullDetailsActivity to ensure that only valid playback events are processed further
added a method to check if a node is an elliptic node and updated the logic to handle elliptic node lemmas to enhance
added a condition to clear the ISO language and ISO code if it is empty in InstallItem . java to ensure that the item ' s language and code
updated the ` ReactiveLoadBalancerClientFilter ` to use a secure HTTP scheme based on the ` isSecure ` status to enhance security by
do n ' t duplicate the bytebuffer , since it ' s not thread - safe
removed the final modifier from the ` fullFilePathFromClassName ` method in ` NativeImageDebugInfoProvider . java ` to simplify the method signature to enhance
refactor Correspondence class to use a lambda expression for better readability to improve code clarity and maintainability
updated method names from ` isNonUSLangSupported ` to ` isNonENLangSupported ` for clarity and consistency to improve readability
removed null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability
add minecraftforgeclient to facilitate tessellation of block render .
added a return statement in TxCacheDB . java to ensure proper execution of the block processing logic
updated imports from ` com . sun . xml . internal . ws . org . objectweb . asm . Opcodes . * ` to ` jdk .
refactor FastDictionary class to improve performance and maintainability
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5679 - nioconnection
updated FlightEventsTest to use new parameters for GROUND _ HIT , SIMULATION _ END , GROUND _ HIT , and
move protobuf to vendored grpc 1.26p0
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
update instructorfeedbackresultspagedata to include student profile picture link
added shortRules list and modified defaultRules initialization in DefaultPasswordValidator to allow for longer passwords to enhance password validation by allowing for shorter passwords
simonstewart : add a new command to retrieve the last remote control log .
removed the import of JUnit ' s Test annotation from ProxyClassSerializationTest . java to simplify the test class by eliminating unnecessary dependencies
updated scale argument format in DLNAMediaInfo . java to improve clarity and consistency in thumbnail scaling logic
replace speculative guard movement phase with canonicalizer phase .
added a condition to check for the existence of the AUTHENTICATION _ MANAGER bean definition in the registry before validating the bean definition to ensure that the
updated the handling of the forwarded host in ForwardedRequestCustomizer to support both IPv4 and IPv6 addresses to enhance flexibility in
set the length of the StringBuilder to zero to improve readability by avoiding unnecessary line breaks
changed allowedRoles and disallowedRoles from private to protected to allow subclasses to access and modify roles
updated OpenIDE - Module - Specification - Version from 1.54 to OpenID - Module - Specification - Version across multiple files to reflect the
hbase - 27455 set netty tl wrap size for rpc server ( addendum )
refactor multiple classes for improved consistency and clarity to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to extend TestCase and added tests for IncorrectLineLengthException and Range with whitespace to enhance test coverage for handling larger string lengths and
added protocol binding support to OpenSamlAuthenticationRequestFactory to enhance flexibility in configuring SAML authentication requests
replaced direct call to apply ( ) with a call to applyTransactionOnDraw ( ) in DepthController . java to ensure that the transaction is applied on
update version to 2.5 . x for release
changed action from WRITE to CREATE in AccessController . java to ensure proper bulk load preparation and cleanup actions for bulk load operations
updated the parameters of unSeqMergeList to remove the maxOpenNumInEachUnseqCompaction from unSeqMergeList to ensure unSeqMergeList
camel - 15836 - camel - core - optimize to use fileinputstream instead of file
added a login method to DefaultShardManager and modified ShardManager to conditionally login to enhance security by allowing users to choose whether to
removed redundant call to dcbGetUserData for clarity to improve code readability and maintainability
updated the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose
added a check for the completion status before obtaining the reference in the responseComplete method to ensure that the response is only obtained when it is marked as
added a condition to check if the user is a student when verifying the response giver
added support for linked profiles in BMPImageReader to enhance image processing capabilities for different operating systems
updated the parameters for the setSimpleCuboid method in ClassicPlotManager . java to ensure proper spacing and alignment with the plotworld '
pmd : add wait message when check pmd status
refactor grid presentation handling to use a dedicated method for setting grid sizes to improve code readability and maintainability by reducing duplication
changed return values from false to true in ContributionsListFragment . java to ensure that the returned values reflect successful operation
added a skip range test for distinct queries in DistinctPrefixFilterIT and modified filtering logic in BaseResultIterators to include limit handling to enhance
added a new test method ` testAcrobatCheckBoxGroupProperties ` to validate checkbox properties in the ` CheckboxGroup ` to ensure that
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to provide access to the last modified timestamp of a file
added a check for " metaTable " in table properties to ensure that metadata tables are valid before proceeding with file format checks
refactor CashDepositForm to use ComboBox < TradeCurrency > instead of TextField for currency selection to enhance user experience by allowing
changed catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching all types of exceptions
added a new boolean variable ` mStartedEnterAnimation ` and modified the notification logic for item range changes in ` IconRecentsView . java ` to
added a public String variable named activeKeyId in UaaConfiguration . java to facilitate the retrieval of the active key ID
rename method from ` sendMail ` to ` sendMailWithAttachments ` in ` SendMailActions . java ` to clarify that the
made the ` isActive ` variable volatile to ensure thread safety during concurrent access
no effective change - code cleanup
make sure to cast the result of tostring ( ) to a charsequence to avoid potential classcastexception
added a check for the app name in the calendar condition to ensure it matches the application context ' s name to enhance security by preventing access to
hbase - 27455 hbase . rootdir . perms should be set to 700 for kerberos authentication
updated locale retrieval from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in ` JakartaServlet
refactor Instant class to improve code readability and maintainability
updated getStateFormat methods to return a String representation of state format to enhance flexibility in handling collection states
updated authentication type handling in CentralAuthenticationServiceImpl . java and modified ticket validation logic in AbstractTicket . java and TicketGrantingTicket . java to
pdfbox - 2576 : check for illegalargumentexception , a suggest by valerybokov
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
added a PathTranslator parameter to the PluginParameterExpressionEvaluator and updated related classes to utilize this parameter to improve file handling by aligning base
[ beam - 8470 ] add protobufcoderregistrar to allow registration of custom coder
updated HqlQueryRenderer to include a boolean parameter for signed numeric literals to enhance query parsing functionality to support both unsigned and signed numeric literals
updated LaunchLugHandler and RailGuideHandler to include a parent length parameter and adjusted launch lug generation logic to enhance functionality by
removed the getNonceFactory method from BitmexStreamingExchange to streamline the exchange ' s nonce factory implementation
( chore ) camel - mail : fix typo
[ java ] use default timer interval for publication linger and publish linger .
set initializeloadedclasses to false by default
added a call to grab focus in FullTextSearchPanel to improve user experience by ensuring search field receives focus
set nio params when create tl connection
updated the assertion in StatementTest . java to clarify that the method ' s return value is not checked for correctness
updated the assertion in TestSolrConfigHandler to include the server URL to enhance clarity of error messages for better debugging
replaced HttpMethod with ServerHttpRequest and updated mocking for non - standard HTTP methods in CsrfWebFilterTests to improve clarity to enhance test reli
updated density filtering logic in FilterResourcesStep . java to use a formatted string to improve readability and maintainability of the code
refactor component ID generation to use a dedicated element prefix to improve clarity and maintainability of UIID handling
removed the import of DisplayMetrics and simplified the condition in RecentsAnimationDeviceState . java to simplify the logic for determining rotation status
added two new test classes , TestCloneArrayWithDifferentLengthConstness and TestArrayCopyWithLargeObjectAlignment , for cloning and copying
added import for LuceneTestCase and annotated the ReplicationFactorTest class with an AwaitsFix annotation to address issue SOLR - 6157 related
fixed - rscheduledexecutorservice . scheduleatfixedrate ( ) and rscheduledexecutorservice . scheduleatfixedrate ( ) method
simplified the condition for updating credentials in FileDownloader and FileUploader classes to improve code readability and maintainability
added null check for the scanner before closing it to prevent potential NullPointerException
fix ( net ) : fix nullpointerexception in netmetrics
added nonce handling in TokenMvcMockTests to ensure correct claims are retrieved for token claims in the token
refactor multiple chart editor classes for consistency and clarity to improve maintainability and readability of the codebase
added width and height settings for formLayeredPane in Form . java to ensure proper layout behavior for the layered pane
removed unused imports and added maxY method in BrowserContentPane to improve code clarity and ensure proper height calculation based on owner ' s height
modified the ` openDatabase ` method to return a boolean value indicating whether the database has been successfully opened and closed to enhance database connection handling to improve
updated DOCKER _ COMMAND to use Platform . DOCKER _ COMMAND instead of DOCKER _ COMMAND to ensure consistency with the platform - specific Docker command
added null check for ` is ` before reading input files in ` TestIsartorValidationFromClasspath . java ` to avoid potential ` NullPointerException `
added a color attribute for the folder leave behind icon to enhance the visual appearance of the leave behind folder icon
show an error dialog when the canary version of android studio do not match
apiresponseserializer : fix npe when table name be null
added support for enabling and disabling module persistence in StartArgs . java to enhance flexibility in managing module persistence settings
updated argument handling in GeminiMarketDataService to improve clarity and consistency in argument naming
changed HashSet to LinkedHashSet for questions in VerifyPasswordResetRequestAction to ensure predictable iteration order of questions
added new classes TesterResponse . java and TestRealmBase . java to implement error handling and testing capabilities for the Tester application
updated exclude patterns in AuthCheckFilter . java to exclude specific setup JSP files to enhance security by excluding essential setup setup resources
refactor scheduling of runnable execution into a separate method to improve code readability and maintainability by reducing duplication
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of [ ] for argument passing to enhance flexibility
refactor XMLParser to handle end - of - stream reading correctly to ensure proper parsing of XML without throwing an exception
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to verify that text is not causing overflow pages
added pivot positioning logic for the arrow in DeepShortcutsContainer to ensure proper alignment of the arrow based on icon visibility
do n ' t print stack trace when swallow interruptedexceptions , just log
modified the ` AbsSwipeUpHandler ` to include a refresh view parameter for task updates to enhance the swipe up gesture responsiveness by allowing
pdfbox - 2576 : improve usage message , a suggest by valerybokov
updated EmailFormatSpecifier and HostnameFormatSpecifier to include validation for valid hostname strings to ensure valid hostname inputs and improve error handling
removed unnecessary ' this ' references from method parameters in multiple activity classes to streamline code for better readability and maintainability
updated ` SizeBasedDocIdSetBlock ` , ` SizeBasedDocIdIterator ` , ` FilterBlockDocIdSet ` , and `
added new methods for prompting opening a file dialog with specified file extensions to enhance file management functionality by allowing users to choose between file types
updated widget and app page count calculations in AppsCustomizePagedView . java to improve responsiveness and consistency in widget and app page count reporting
added coordinate transformation logic for active instances in FlightConfiguration . java to improve rendering accuracy by ensuring only active components are processed
use direct : instead of seda : foo
updated DateTimeFormatter initialization to specify the default locale to ensure consistent formatting across different locales
( scott phillips ) add permission filtering to dspaceobjectrest
added a test method to verify behavior when a required configuration property is missing
camel - 14263 : camel - spring - boot - route - add support for dynamic recipient list in camel - spring - boot with dynamic route
refactor InlineLayoutBox to enhance parent retrieval and painting handling in HoverListener to improve layout responsiveness and ensure proper repainting
replaced ` DetectAuthenticationMethodOperation ` with a ` OperationsService ` for managing authentication methods to enhance flexibility in managing authentication methods
