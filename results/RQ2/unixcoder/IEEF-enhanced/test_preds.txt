log4j2 - 1343 fix the socketappender initialization issue
refactor BasicAuthPlugin to use a new getPromptHeaders method for setting response headers for ajax requests to improve code readability and maintainability by central
[ java ] : remove unnecessary call to recorddescriptor . msglengthoffset in manytooneringbuffer .
vmware : fix overcommit detail not take into account cpu / memory overcommit ratio
added anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti
change ` ` set / clear / append / rename fields ' ' to ` ` set / manage field names & content ' '
make detection test more robust to eclipse
fix x - auth header for realm with no scheme
added a RemoteInputListener interface to manage connection status to improve the handling of remote input connections
refactor conditional statements in OrcEncodedDataReader . java to improve code clarity and maintain consistency in coding style
updated filtering logic to check if a thing is enabled before processing it to ensure that only active handlers are processed further
added null checks before removing and adding policies to avoid potential NullPointerExceptions during policy management operations
remove java 9 - specific asserts on date / time type adapter
added JSON serialization and logging for DAG information in TezTask . java to enhance debugging and tracking of DAG information during execution
updated time calculation in ComputedSummary . java and added method getHeapTime in HprofHeap . java to improve accuracy of heap time measurement
replaced RxJava2Tasks with CommonsApplication for upload count retrieval to streamline the code and eliminate redundancy
mvstore : do n ' t force lock even when mvstore be on
[ issue # 5962 ] optimize defaultmessagestore size calculation ( # 5963 )
added logic to set the folder open status to false if the specified folder is not open to ensure proper handling of folder opening behavior in the launcher
add test to verify that enum name sort correctly
added a constant for hover message feedback points in the Common class to improve clarity and maintainability of the code
updated method parameters from Object to ItemInfo in UninstallDropTarget . java to improve type specificity and ensure proper handling of null items
updated assertion to check for the message format in the error message to improve clarity and maintain consistency in error handling
refactor NearbyActivity to use NearbyListFragment and NearbyMapFragment instead of RetainedFragment to improve code cl
ensure the flatprofilecontainerFree be initialize with the correct profilerruntimestatus
added a configuration option to send a zero anomaly email to enhance user control over the email sent for zero - anomalies
[ hotfix ] fix checkstyle violation in flinkkafkaconsumerbase
remove dummy function from datamanager
increase buffer size for blockingresponselistener
remove thread . sleep which be cause some test to hang .
added logging for snapshot paths and wrapped snapshot fragment processing in a try - finally block to improve error handling and resource management
updated test assertions to remove the " ? " placeholder to simplify the assertion format for consistency
fix typo in configmetadataprovidertest
updated parameter names in the updateNoteReminder method from ` reminder ` to ` noteToUpdate ` to improve code clarity and consistency in naming conventions
added a new ` AcceptAllFilter ` class and refactored ` DirectoryStream . Filter ` usage in ` WindowsDirectoryStream ` to improve
refactor JdbcTestDataSet class to improve code readability and maintainability
do n ' t throw noclassdeffounderror on classnotfoundexception
replaced the method for validating Docker image tags with a utility class to improve code readability and maintainability by centralizing tag validation logic
updated error message strings in LoginActivity to provide clearer context for authentication failures
add setautofocus ( ) method to user select field .
added tests for verifying SAML configuration properties in the identity zone to ensure correct handling of identity zone configurations during testing
add a new item to the stack if the list is not empty before adding a new item to ensure proper handling of empty items in the Com
change bottom - left and top - right mode to bottom - left in Sheet . java and update return logic to use Math . min for width and height
refactor package structure and import paths for ParallelUniverse and ParallelUniverseTest classes to improve organization and clarity of the codebase
simplified method handle creation in LocalCacheFactory and NodeFactory classes to improve code readability and maintainability by using a consistent method call convention
change fill style from SOLID _ FILL to SOLID _ FOREGROUND to improve visual consistency in rendering
draw self loop on export ( self loops )
updated the configuration and methods to replace the SOLIDITY _ 0 _ 5 _ 10 value with ALLOW _ TVM _ SOLIDITY
rename addmanaged to manage in dropwizardapprule
added translation for the drag handle indicator to ensure the drag handle indicator starts at its initial position
remove some logging .
update filter pushdown logic documentation to clarify that original filter remain left in the operator tree after query optimization .
added an assumption to skip tests that fail on OS X to address compatibility issues with OS X by avoiding unnecessary tests
added support for Jetty ALPN client libraries in TestJettyOSGiAnnotationParser to enhance compatibility with Jetty ' s A
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 530 : execution
no effective change - javadoc update
replaced the @ AddToRuleKey annotation with the @ ExcludeFromRuleKey annotation in GenruleBuildable . java to exclude the Genrule execution from artifact
simonstewart : try to use the firefox executable on window by default
added a check to ensure the existence of the column fam to dynamic columns before adding it to the mappings to avoid duplicate entries
[ hotfix ] minor code cleanup in the hadoop module
added logic to fetch tables without caching for views that are not from the server
add a cascade update for the google id in test
updated import statement for TestCellReference to align with the correct package structure
fix length check for block with hardness
added a new file LongPointerPressTest3049 . java to implement a test for network error handling to verify that long pointer press functionality works
truffle : do not always report do _ not _ inlining _ with _ only _ constant when the graph be full .
consolidated multiple conditional statements for null checks in BaseBuilder and XMLConfigBuilder classes to improve code readability and reduce redundancy
simplified the condition for indenting in ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to improve code clarity
added a new abstract class AbstractOptionalAssert for handling optional values to consolidate assertion logic for optionals and improve code organization
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests related to issue 1070
[ testcase ] make goog . testing . testcase more generic .
removed unnecessary lines to improve code readability and maintainability
added a condition to check if the video format is video before processing web subtitles to ensure proper handling of video formats in the remote play handler
added import and security property setting for TLS disabled algorithms in ComHostnameVerifier and JavaxHostnameVerifier classes to disable cryptographic standards in security compliance
fix deployvm fail to deploy vm on local storage too
add extra log to queryresultscache to help debug flake
add an option to optionally update the dependency model after manage a pom .
added a test for retrieving the last intent sender request code in ShadowActivityTest . java and implemented the send method in ShadowActivity . java to
updated GLCanvas initialization and added fbo settings in RocketFigure3d . java to improve rendering performance and control fbo settings for better
refactor controller listener management to ensure thread safety to prevent concurrent modification exceptions when accessing shared resources
added JUnit configuration to skip tests on Java 9 due to compatibility issues with Java 9
[ iotdb - 3960 ] fix setobject310test failure due to negative year
fix possible npe at shutdown
fix typo in txnhandler
replaced ByteChunk with ByteBuffer for improved data handling to enhance performance and reduce memory usage during reading operations
added a method ` toSync ` to ` AsyncUtils ` for converting a ` CompletableFuture ` to a completable future and created corresponding unit tests to improve
added ActionGraphBuilder to multiple compiler factory classes and updated method signatures accordingly to enhance action graph management and improve code consistency across compiler factories
danielwagnerhall : fix flaky test upload with hidden file input
no effective change - code cleanup - remove unused import
issue 344 : the build now support a custom maven repository location .
ggb - 2118 hide algebra label for hidden prefix
fix ( resourcestore ) : metadata should n ' t be null ( # 2595 )
fix : defaulttrackoutput buffer flag should be add .
fix entityiterable copy to reorderedby default
update error message for missing method call in verify ( mock ) to improve clarity for error reporting
added a null check for backupFolder before logging the expiration date to avoid potential NullPointerExceptions when accessing backupFolder
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating a void array using reflection to verify that creating a void array is
added @ AddToRuleKey annotation to toolType in ClangCompiler and GccCompiler classes to ensure that the toolType field is added to the rule key
replaced hardcoded timestamp with a constant for PINCODE _ TIMEOUT to improve code readability and maintainability
restore ` issampled ` method in ` prometheusmeterregistry ` and ` prometheusexemplarsSample ` sample ( # 2260 )
remove @ ignore annotation for test that require mongodb
do n ' t cast to activemqconnection to avoid classcastexception
change condition from checking if the table name starts with a space to checking if the table is artifical to improve accuracy of table validation logic
updated file checks from ` isFile ( ) ` to ` ! isDir ( ) ` and ` isDirectory ( ) ` to simplify conditional logic to enhance code clarity and avoid unnecessary error handling for unknown file types
updated session attribute handling and null checks in MongoSessionManager . java to ensure proper session management and avoid potential null pointer exceptions
use sensore size from layout rather than fixed size for landscape .
replace direct reference to _ stopping with a CountDownLatch for better null handling to improve code safety by avoiding potential NullPointerExceptions during shutdown shutdown process
removed unnecessary whitespace in the constructor of HuobiStreamingService . java to improve code readability and maintain consistency
camel - 20297 camel - core - optimize to not use Stopwatch to calculate elapsed time
simplify lambda expression in test
replace assertTrue with a failure assertion for the expected error to improve error handling in WebSocketHandshakeException
refactor AllAppsTransitionController to use an OnLayoutChangeListener instead of a lambda expression to improve code readability and maintainability
rename the variable ' theHandler ' to ' handler ' for consistency to improve code readability and maintainability
int - 1257 add support for ' default - output - channel ' attribute on xpath - router
updated cache settings to enable duration support and improve cache configuration flexibility
fix swagger version in reference to previous release
removed the append method call from ByteBufferPool to simplify the buffer management process
added a check for the presence of alt - rt . jar in the boot class path to skip the test execution if it is not recognizable
updated user deletion queries and assertions in JdbcScimUserProvisioningTests . java to ensure case - insensitive matching for usernames
turn the flight recording into native image
added a method to check if the stream is empty before dropping an image to ensure that the application does not crash when processing an image without data
added a condition to check if the content is not empty in HttpParser . java and implemented a chunked PUT test in ProxyServletTest . java
refactor AtmosEndpoint class to improve code readability and maintainability
added additional condition to support " printf " and " print " methods in Java2TypeScriptAdapter to improve compatibility with TypeScript adaptations
added a new test class ` TestCapacityUntilGCWrapAround ` and a native method to ` WhiteBox ` for managing metaspace capacity until
updated package - info . java files for mmm and ppp packages
do n ' t subtract res . getStartTime ( ) if it be alreadyStamp at start
added unit test base on user forum issue
tmi - jpeg : fix issue with invalid icc single chunk
only allow terra pick to reequip if the rod be in the sea level
added checks to ignore entries in the application context to improve robustness by avoiding unnecessary registration registrations
update webapploader rule to use addobjectcreate instead of createloaderrule
allow nameupdater to be override from external file
added initialization of the ` started ` variable in ` EllipsoidRegionSelector ` to ensure that the region selection process has completed successfully
replaced instances of " http " with " https " for codenameone URLs in JavaSEPort . java to enhance security by using a
[ geos - 10358 ] add validation for sortby parameter in getfeature request
modified the condition for retrieving the grantor to ensure the assignment logic correctly handles null values
added graphics configuration and settings in DiagramGenerationTest to ensure consistent rendering of images across different screen sizes
add a runtime exception when we try to get the minecraft logger .
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization to enhance maintainability and readability
make locktest more tolerant to slow machine
added methods to tokenize and join tokens in a string to enhance tokenization capabilities for improved code readability
do n ' t log request that do n ' t match with the requested url .
updated the command parsing logic in SystemHighlighter to handle empty commands to improve command highlighting accuracy and avoid errors with empty commands
updated version string from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and set version date to " P
update buffer position calculation to use dimensionSize to ensure correct buffer sizing based on available dimensions
added drag - and - drop functionality to manage the drag - and - drop state in the system UI components to enhance user experience by enabling
[ log4j2 - 1125 ] socket option test with java 1.7
disable tlsv1.2 by default .
updated the method to retrieve a long description instead of the text from a place to improve clarity by directly using the long description from the place
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization of the value field
updated HqlQueryRenderer to support schema scoping and added new test cases in HqlQueryRendererTests to enhance query parsing capabilities and
[ amazonechocontrol ] fix miss argument in javadoc
refactor Parser class to improve code readability and maintainability
fix track selection in exoplayer ( # 1882 )
fixed erroneous magic detection for ar file . patch by jbellis
[ hotfix ] [ table - planner - blink ] remove deprecate getmonotonicity method
added equals and hashCode methods to OneTimeTokenAccount and updated toString methods in OneTimeToken to ensure proper comparison and hashcode generation for token
added a condition to prevent touch handling when the assistant is not launched
add a new file SolarisShortDSA . java that implements Solaris ' s DSA key pair generation to address a known Solaris bug related to
added a method call to toggleSearchLabel to disable search label functionality for improved user experience
bug 7860 : do n ' t lock the volume when create snapshot
refactored the connection handling in FileDetailActivity to use a dedicated DetailsServiceConnection class to improve code clarity and ensure mConnection is only un
updated HttpClientTLSTest to use AtomicReference for better error handling to improve clarity and maintainability of exception management in tests
remove useless conjunctionscorer . equals ( )
added null check for item removal in bindItems method to improve error logging and prevent potential null pointer exceptions
wait for metadata group to be fully initialize before next test
log a warning if the cache be full
updated API endpoint from v2 to v3 across multiple files to reflect the latest version of the API and enhance functionality
test : add empty ( ) method to freenect2 test suite
added null checks for ` getPageData ( ) ` in ` AsyncPageReader . java ` and updated test cases in ` TestEmptyParquet
updated the ` buildChannelName ` method to accept an additional parameter for market data type validation to enhance input validation and improve error handling for
add config to disable the animation for a mana pool .
[ java ] check for egress subscription be connect rather than challenged before try next step in cluster .
added logging of the original exception in WaitForHelper . java to improve error handling by capturing the original exception
make test more robust on non - windows platform
swapped the injected styles for dialog and screen styles in ResourcesInjectorFull . java to ensure consistent theming across the application
refactor changeLogFile and outputFile types from String to FileResource in BaseLiquibaseTask and DBDocTask classes to improve resource management and
fix gety ( ) and getz ( ) to use gety ( ) and getz ( ) instead of getx ( )
updated ` CacheEntry ` class to use ` private static final ` for fields to enhance immutability and thread safety of cache entries
camel - 14354 : camel - core - optimize to reduce object allocation
modified FileCredentialsCache and EmptyCC classes to improve cache retrieval and validation to enhance security by restricting access to environment variables and credentials
updated the database path in ValidateMultiSignContractTest . java to reflect the correct output directory naming convention
sync check should take into account the peer ' s availability
danielwagnerhall : fixing spotbugs warning in webdriverservlet
do n ' t expand segment in areequal operator
added a condition to clear pending rendering operations when their count exceeds 20 , 000 and the implementation is minimized to manage memory and prevent performance issues with excessive rendering operations
fix hazelcast test which randomly fail on slow machine
ensure writebehind entry value be store in coalescedwritebehindqueue ( # 16334 )
set the icon of a JLabel to null to remove the space in the group tree cell to clean up the layout
updated test method names in TestBlacklistAwareRedirectResolver to clarify behavior regarding redirect matching conditions
added new test methods and imports in ShutdownMonitorTest and ShutdownMonitor to improve test coverage for shutdown monitor functionality
adjust the calculation of moveSize and refactor fillRate calculations in RandomAccessStore . java to improve memory movements and optimize chunk rewriting logic to
refactor Json class to use class type directly and add a readFields method to improve code clarity and maintainability by reducing object -
[ hotfix ] [ runtime ] move closeutil thread into operator package
destroy all volume for this vm when vm be in error state .
fix vpc ip6 range check
rename ` userDetailsBeanNames ` to ` beanNames ` for consistency to improve code clarity and maintainability by using a uniform naming convention
increased the retry timeout for getting leader leader election status to allow more time for leader election to become available during testing
refactor error message methods to remove the input parameter and use the standard exception type directly to simplify error messages for better usability and maintainability
change x and y coordinates in drawImage calls from negative to positive to correct positioning of images in the rendering process
updated comparison in SolrTestCaseJ4 . java from solrDocument1 to solrDocument2 to ensure logical consistency in field name checks
setdef : fix indexoutofboundsexception for zero high card dimension
[ hotfix ] [ stream ] do not swallow interrupted exception in streamconfig
refactor preprocessing logic to improve performance and readability of tag processing
removed unnecessary line breaks in the read method to improve code readability and maintain consistency
add a new annotation interface called Mapper in the org . apache . ibatis . annotation package to provide a custom mapping interface for the mapper
fix jsonparser to avoid encode empty list
updated string splitting method from ` split ` to ` split ` in ` Artifact . java ` and modified null checks for ` extractPacked ` to
added an alias " node _ popup _ scripting " to the entry navigator to distinguish the popup from the scripting functionality
updated constants and methods in OverviewActionsView and RecentsView to improve task visibility based on device profile to enhance user experience by
( chore ) camel - jms : fix compile error
fix checkstyle issue introduce by previous commit
deleted the files AbstractDelegatedVerb . java and FailureContext . java to remove deprecated code to streamline the project
updated GzipHandlerTest to use final variables and added a new MicroServlet for handling Gzip compression to improve immutability and add a
fix unbounded repeat with distinct
added logging functionality and improved code readability in SpeedmentImpl . java to enhance debugging capabilities and maintain code consistency
oai specific configuration loader ; just a wrapper for the usual config loader for this web app
updated StoreScanner and TestWideScanner to improve row handling and batch processing to enhance performance and reduce redundancy in data processing
if not use jmx then disable jmx in camel - test
replace backslash with a predefined file separator
added methods to find and retrieve YARN and Hadoop executable paths , and implemented application information printing in RemoteSparkJobMonitor to enhance application
added support for MariaDB in the DbConnectionManager to enable compatibility with additional database types
chore : fix logcatcat performance issue ( # 5999 )
added a new file ` ExecuteAndReturnStringTest . java ` to test network errors for execution and string manipulation to ensure that network errors are
added a new file ` InvokespecialInterface . java ` implementing a dynamic method invocation on an interface to provide a mock implementation of the interface
refactor EvictingBoundedList class to improve code readability and maintainability
set edge base directory encoding if turn costs support be not already set
added a check for background disabled state in the SelectBox class to ensure that a non - negative selection is handled correctly
added a null check for the md variable in RpcServer . java to ensure that unsupported operations are handled gracefully
update hotseat cell size calculation to include border spacing to improve layout responsiveness for better visual clarity
modify the construction of ` valString ` to directly use ` values . get ( ` partitionColumnIndex ` ) ` instead of escaping the path key and value
skip write data if not versioned
updated the index directory used in ReplicationHandler to ensure the correct directory is used for replication operations
fix broken unit test .
add high codepoint to latex formatter
added null checks for dcvalue and updated value assignment logic in OAIDCCrosswalk and Item classes to ensure compliance with ISO standards and
danielwagnerhall : do n ' t select the same window handle multiple time . fix possible npe .
added a clear button to the BookmarksPanel and implemented its functionality in DataBrowser to enhance user experience by allowing users to clear all tables
updated the implementation of base URL generation in OAuth2AuthorizationRequestRedirectFilter to improve URL handling by utilizing UrlUtils for building full request URLs
fix softassertionstest to pass on window
updated adaptOrders method to include a reverse parameter for order adaptation to ensure orders are processed in reverse order order order order order processing
delombok now also print a null vartype .
remove some unused import .
updated Configuration instantiation and removed unnecessary debug logging to streamline configuration handling and improve code clarity
replaced ` drawChildren ` method with ` draw ` method in ` WidgetGroup ` to ensure proper rendering to maintain visual consistency in rendering logic
added unit test base on user forum issue
replace usage of ` Globals . CatalinaBase ( ) ` with ` context . getCatalinaBase ( ) ` in multiple Java files
added unit tests for the ` getBestDateTimePattern ` method to ensure correct functionality for locale - specific datetime formatting
change the style of the plot chart and update the data structure to improve visual representation of color codes in the plot
add zuulproperties to the auto configuration for the cli
set default timezone to utc in fontparserstest .
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to utilize a new parameter for build time handling
None
remove guirwtester since it do n ' t work
removed null check for the ` format ` parameter in the ` countPlaceholders ` method and added a null check for the ` template ` parameter to simplify the
pdfbox - 4892 : fix typo find by codespell on fossies . org
move thymeleaf . templateparser to the correct package for markup plugin
add a test method for XPath string evaluation in XPathTest . java to ensure correct handling of numeric values in XPath parsing
[ hotfix ] [ core ] fix checkstyle violation in futureutils
add warning for invokedynamic that be not resolve during call graph construction .
updated createdEmail and newEmail from " myfakeEmail @ gmail . com " and " myfakeEmail @ gmail . com " to "
updated HTTP encoding handling in HttpConnectionTest and changed URIUtil URIUtil compare to return false to ensure proper URI comparisons and correct URIUtil compare logic
implemented ` getColumnDataType ` method in ` AbstractResultSet ` , ` ResultTableResultSet ` , and ` ResultTableResultSet ` classes to provide a way to
fix ( codegen ) : add miss exception
updated HSSFPictureData class to enhance picture sharing functionality
change the data type of startTime and stopTime from long to Instant to improve accuracy and consistency in time representation
added version parsing functionality in LibMediaInfoParser to support versioning based on media information
added reflection support for IdeaDependency and IdeaModuleDependency in ProjectReader . java to enhance dependency management and improve code organization
added a new class SerialHeap and updated the collection heap mapping to use it to improve memory management by using a SerialHeap for collected heap information
added multiple @ SuppressWarnings ( " serial " ) annotations in the Gson $ Types . java file to suppress serialization warnings and improve code clarity
TooltipPosition object now have the mouse ' s position a a separate vector2i .
datamongo - 1608 - fix nullpointerexception in repository . findbyfirstnameIgnoreCase ( null ) .
[ hotfix ] [ type ] fix the hashcode and equal method of multisettypeinfo
added a method to retrieve an identity provider by its issuer based on zone ID to ensure that only valid identity providers with the same issuer are retrieved
lucene - 6271 : cmapparser . parse ( file , .. ) do n ' t ignore miss delimiter , except for digit character .
refactor ContactsBackupJob to use OperationsServiceConnection for managing operations services to improve service management by ensuring expired files are only handled on
refactored type constraints and introduced new classes T6938454a and T6938454b with generics implementations to improve type handling
added support for account configuration hidden status
added a check for mismatched display bounds in DisplayController to avoid logging errors related to incorrect display sizes during updates
updated schema removal method to use getSchemaKey ( ) instead of getSchemaName ( ) to ensure the correct schema key is removed from the metadata
ggb - 1188 use listener instead of loadhandler for login passive .
added a new Box2DTest file and integrated it into the application to provide a dedicated test for Box2D physics within the project
add debug log for cf mutation
[ hotfix ] [ test ] set default buffer request timeout to 5 minute .
chore ( deps ) : upgrade gapic - generator - java to 0.0 . 5 and update sample code ( # 48 )
add help button to openoffice integration page
fix tcp _ nodelay option on netty acceptor and publish server
updated method signatures to include wildcard type parameters for better type safety to enhance code clarity and maintainability by addressing potential null pointer exceptions
refactor class reference handling in ScanResultObject . java to utilize a transient class reference to improve code clarity and maintainability by red
refactor decode servlet to improve connection handling and logging
datajpa - 424 - fixed null handling for sort querydsl .
added null check for the actor in ParallelAction . java and modified condition checks in SequenceAction . java to ensure robust action handling logic to enhance robust
test : improve code coverage of cttypetest . java ( # 1683 )
added synchronization to the SFWriters collection to ensure thread safety when accessing shared resources
added new files ` Issue888 _ JavaI . java ` and ` Issue888 _ Kotlin _ JavaI . java ` to implement test cases
added functionality to revoke an existing agent certificate in the CertificateManager to enhance security by allowing the application to revoke existing agent certificates securely
added support for identifying responses without a body in AbstractHttpTest and implemented a test for writing headers after no body response handlers in HttpServerTestBase
add more output when dataimporthandler fail to load script
added support for additional connection pooling types in Hive configuration to enhance database connection management capabilities
replace calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to standardize method
added file locking and unlocking functionality to the FileMenuFilter and OCFileListFragment classes to improve user experience by managing file locking and unlock
refactor version handling logic to improve clarity and maintainability of version management
clear the endpoint cache on keyspace drop
refactored thread waiting logic by introducing a new ` waitForState ` method to improve code readability and maintainability by consolidating state
refactor Skylark attribute retrieval methods to use SkylarkRuleContextAttr instead of getCoercedName and getCoercedAttrValues
simonstewart : re - added the storage interface to make it easy to extend
add check for null before creating or replacing a view in PlanExecutor . java and modify test cases in CreateViewStatementTest . java to ensure
changed exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error handling by capturing broader range of
updated query parameter retrieval in SpellCheckComponent . java to ensure default query string is used when none is provided
added validation for header values to check for illegal characters and whitespace patterns to ensure that header values conform to HTTP specification and prevent potential errors
[ fix ] hybridybridlayout now correctly compute hybrid class array base offset .
[ apex ] fix classcastexception and mark a @ experimental
hhh - 15479 log a warning when an association with ` fetch = ' join ' and lazy = true be use
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter to extend
added assertions to compare database name and tablename in TestCompactionTxnHandler to ensure consistency in database and tablename retrieval in TxnHandler
camel - 14263 : timer consumer should be suspendable so we can properly handle shutdown periodically .
added a conditional check before adding traces to ensure traces are only added if the block is not processed to avoid duplicate starting traces
update ProviderManager to use CollectionUtils for checking null elements in the providers list to improve null handling and prevent potential NullPointerException
simplified the return statement for PostgresDatabase to improve code readability and maintainability
phoenix - 4646 add support for limit the number of row fetch in explain mode
add compatible check to prevent add collection with the same name and different type from previous
updated cursor logic in VDUBuffer and vt320 classes to improve cursor positioning based on the current screenbase to ensure proper rendering of the window while
added a constant for useRetries in HttpShardHandlerFactory to enhance error handling by allowing retry configuration
simonstewart : add 11.0 . 7 . 4 to the javaversion . parse regex to ensure java 11
[ hotfix ] [ stream ] avoid check for empty input gate list
int - 1257 disable broken test for now
update property retrieval to handle null properties to ensure robust handling of potential null values
[ hotfix ] [ core ] swallow ioexception in filesystemblobstrategy
ambari - 20542 . ambari upgrade from 2.7 . 0 to 3.0 . 0 fails due to use stack upgrade
txidfield should listen for tx completion instead of just update it .
added a constant for the G1 Perm Gen file and updated the condition for name comparison to improve clarity and maintainability of permission management functionality
removed unused imports and simplified the return statement in NearbyController . java to improve code clarity and maintainability
pdfbox - 4892 : make class public again , a suggest by valerybokov
added checks to ensure a task is not of home activity type during gesture state validation
refactor DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and update related constants and methods to improve clarity and functionality of header management
updated test methods to convert network country and sim countries to lowercase to ensure consistency and case - insensitive comparison of country codes
update UnfreezeBalanceV2Actuator to set unfreezeAmount with a new value to ensure correct handling of frozen balance
fix description for talk that use different timezones
simonstewart : deprecate files . copy in favor of files . copy
updated assertion classes to improve consistency and maintainability of the codebase
add marble diagram to javadocs for observable # delay
replaced a single DBObject with a multi - field operation for pushAll in the Update class to enhance functionality to support multiple fields in the
added a null check for randomUUID before setting it to ensure randomUUID is always assigned to avoid potential null pointer exceptions
added hover event handling in InputConsumer and OverviewInputConsumer classes to enable input consumer hover functionality for better user experience
added a sleep delay before initializing the boostrap configuration in the ZooKeeper server to ensure proper configuration management during the bootstrap process
camel - 14263 : camel - netty - http should use maxheadersize instead of maxheaderssize for header size .
hbase - 20527 fix the test flakiness of hbasetestingclusterautostarter
sourcesnippetshelper : fix path creation on window
fix transient assertion failure in encodedgraphcachetest .
updated SQL queries in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " and added a new test for query over output to enhance test
added functionality to adapt Kraken assets into their respective currency metadata objects to ensure accurate currency representation and maintain consistent currency scale across the application
added toString ( ) method to AnyOf class and created corresponding test class to enhance the string representation of conditions in assertions to improve readability of conditions
[ te ] alert plugin : fix error message when email have no dimension
[ influxdb ] add precondition check
rename dotransform ( ) to downcast ( ) to avoid confusion
[ netutils ] filter out fe80 , tls and fec0 localhost a valid local address
add a method to quote column names and modify the way column names are handled in the DataTextFormatter class to ensure that column names are properly formatted and
added methods to set and get properties in WrapSystem , StrUtils , and updated method calls in CompileMethodEntity to enhance property management and
added a constructor to UpdateRequest that accepts a URL string to enable the class to handle a POST request by specifying the method to use
changed enum declaration from static to non - static in ProtoTypeAdapter . java to allow for potential subclassing and enhance flexibility in enum management
added a method to add an experimental format warning in RequestHandlerUtils and updated its invocation in DataImportHandler and ReplicationHandler to encourage the
updated module name formatting and added a utility method to format values to improve readability and maintainability of the logging output
set the row height to match the default label font in various dialog
[ issue # 5082 ] fix the npe in defaultbrokerheartbeatmanager
fix null pointer exception in cqlinputformat
simplify the conditional check for the name in JUnitTestsShouldIncludeAssertRule . java to enhance code readability and maintainability
add hashcode and equal method to rule TerminalNodeLeftTuple class
added StageIDsRearranger import and resolution logic in TezCompiler . java to enable the use of stage ID rearrangement for better optimization
rename org . apache . cassandra . concurrent to org . apache . cassandra . net
updated memory consumption logic in LotsOfOutput . java to improve logging to provide better visibility into memory consumption after memory adjustment
added imports for Document and BinaryDocValues in multiple files to ensure proper functionality and compatibility with the latest Lucene features
polish ` ` make ldap context source read - only ' '
refactor DatabaseMetaData class to improve code readability and maintainability
make echorechopipelinetest only run with junit 4
added ` finishMocking ` method to ` MockitoSession ` and its implementations in ` DefaultMockitoSession ` and ` StubbingWarningsTest ` to
refactor dependencies handling in GoTestDescription and add new test cases in GoTestIntegrationTest to improve code clarity and ensure proper functionality for genrule
make spdyasyncconnection read buffer and write handler thread safe
fix blockLiquidwrapper to use flowingblock instead of staticblock
fix background location not work on android 4 . x
add a bit more javadoc to make it clear that this be the right behaviour .
[ hotfix ] fix the conversion of optimized plan to json
fix potential memory leak in craftingrecipe
flume - 2594 . [ testbug ] test system . out and system . err can fail spuriously .
removed unnecessary newline condition checks in TabsAndIndentsVisitor . java to simplify the code for better readability and maintainability
added a pattern match for " pg _ temp _ " in NeuteredLinesFilter . java to enhance functionality to support additional template variables
feat ( regen ) : update license year ( # 458 )
modify datatype handling for INTERVAL and NCLOB types to support NCLOB data types to ensure compatibility with NCLOB data types in the application
make wavefront timer metric conditional on publishing histogram
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to modify how upstreams are handled and add warmup and timestamp parameters to enhance the functionality and maintain state information for better control of upstream operations
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable the registration of sensor listeners with specified parameters
added warning logs for closed overtook 400 responses in SslConnection and SslChannelServerSslTest to log specific socket exceptions during test execution
camel - 17806 : camel - ignite should use karaf feature if configure to do so .
improve error message when client return empty set
pdfbox - 4892 : do n ' t swallow ioexception , a suggest by valerybokov
added tests for setting display headers and luminance capabilities in ShadowDisplay to ensure correct functionality of display header and luminance settings
set classLoader to null in finally block to ensure proper resource management in case of memory leaks
enhanced error messages in SemanticAnalyzer to include specific source and column names to improve debugging by providing more context in error reporting
add no - arg constructor to message
writeobject synchronize bug fix
updated the constructor of PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and improved null handling for BigDecimal to ensure precision and handling of decimal types
http : / / issues . apache . org / jira / browse / amq - 3872 - use original output stream if
rename ` ` wwwAuthenticate ' ' to ` ` authenticate ' '
added condition to check for specific packages in the directory to ensure proper handling of specific packages in the codebase
updated thread group retrieval logic to ensure a fallback value is used when retrieving the thread group name to handle cases where the thread group is null
added logging functionality to MethodInvocationPrivilegeEvaluator by utilizing Apache Commons Logging to enhance debugging capabilities and trace execution flow
change package and log location for DmozParser to reorganize package structure and improve logging organization
removed unnecessary import of lombok . ToString in ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to streamline code and improve readability
add iso path to the user vm ' s vm ' s iso when migrate the volume to another storage
fix : sigint should not delegate to the exist signal handler , but the new one
use arrayutils . isempty instead of static import
adjust unit test to account for change in discoveryclient
pdfbox - 4892 : fix javadoc error
planner - 422 : remove planningentityselector # resetinitializedplanningentities ... a deprecate
added buildTimeMs to ArtifactInfo and related classes to track and manage build time for artifact caching
updated the handling of fields in GroupByOperator to use declared fields instead of aggregated fields and modified the condition for determining fixed row size based on hash -
wallet : check for null before add block appearance .
added support for the CNC _ BTC currency pair and updated currency pairs to include it to enhance trading functionality and improve currency trading options
align default skew allowance with service config .
added sorting functionality for song collections in SongListActivity and updated sorting logic in Utils to support sorting by name to enhance user experience by providing a
added body conversion logic to the readBodyToBytesIfNecessary method to ensure proper handling of null or TypedByteArray instances in the request processing
use ` legacybaseblockwrapper ` instead of ` baseblock ` .
refactor snapshot retrieval logic to improve clarity and handle tag names more robustly
replace ` newArrayList ` with ` Collections . singletonList ` for setting external groups whitelist to simplify the code and improve readability
photon trace demo : remove frame number computation from the demo
updated password change validation logic and added error handling for unsupported operations to ensure proper validation of the required property for identity providers
ignore non - reflective field initializers
improve handling of closed connection in jdbcexecutor
[ scb - 841 ] fix miss body and add test case
fix : password do n ' t work for mysql in test
added a new menu item " Item4 " and a key binding for the ENTER key in ActionListenerCalledTwiceTest . java to enhance
updated test output to include the query class name and modified result assertion to check for produced results to improve clarity in test messages and ensure accurate assertion evaluation
performance optimization : do n ' t compare node with each other
removed the ' public ' access modifier from the class declaration to enforce encapsulation
updated ` MoreLikeThis ` to use ` getDocCount ( fieldName ) ` instead of ` numDocs ( ) ` , and added a
reformatted code for better readability in QuestManager . java to enhance maintainability and clarity
[ hotfix ] make networkbufferpooltest package - private
modified query construction to use the append operator for better readability to enhance code clarity and maintainability
add miss substitution for unsafegetlong .
update time zone reference for " Asia / Amman " from ARAST to EET across multiple language files to correct the time zone representation
updated the ID value from 90000010 to 90000011 to correct the deprecation logging ID for proper tracking
hhh - 14791 avoid throw jdbcexception when use transaction . getaccesstransaction ( ) . getrollbackonly ( )
if link have no extension , return an empty string for download external file
fix menu bar on macosx to work properly
add piecewiseintegration test ( for desktop )
fix recent animation not get complete sometimes sometimes when use 3p launcher
updated HiveConf to copy modWhiteListPattern from other to enhance configurability of Hive configuration settings
fix : remove uneccessary mark - as - illegal - class ... this be mostly to trigger a rebuild
update MobileInput to use player . team ( ) instead of team . sharded to ensure accurate team reference for determining the closest coordinates
updated the domain in the Cookie implementation to use a dynamic host name instead of a hardcoded value to ensure the cookie domain is correctly configured based on the user
added nullable validation logic to the column configuration to ensure that nullable values are properly validated based on search conditions
refactor security token and token handling classes to improve code organization and maintainability
added delete query and assertion for document deletion in CustomCollectionTest . java ; changed separator variable to static final in CompositeIdRouter . java to
added snapshot scratch padding functionality to ` ExecutablePreparedStatementBase ` and updated import statements in ` PostgreSQLIntegrationTest ` to enhance data handling
updated cache and file extension checks in DefaultServlet . java to enforce stricter limits and improve code readability
fix ` ` save change ' ' bug in table drag - n - drop
updated description creation and assertions in ExecutionUnitRunner and CucumberTest classes to ensure accurate counting of test scenarios and improve test clarity
replace manual string checks with StringUtils . isNotEmpty for better readability to improve code clarity and maintainability
removed ` public ` access modifier from several methods in ` TimeUtils ` methods to enforce encapsulation
updated the method for identifying security frames or injected invokers based on the Java version to ensure compatibility with different Java versions and improve code clarity
update file name extension check to include periods to ensure compatibility with image formats
[ gr - 46711 ] fix debug info for hostedmethods .
added ` getIcon ( ) ` method to ` Data ` class and updated default value for ` classDisplayed ` in ` DataTableTopComponent `
added a check for the last index of ' . ' before retrieving the substring of the request name to avoid potential errors when processing the request name
update ` findandreplace ` recipe to tolerate dollar sign in ` text $ { dynamic } `
add default value so that debugger do n ' t try to connect without an xmppconnection .
refactor SchemaExtractionProcessor to improve code readability and maintainability
added a new method ` copyDir ` to facilitate directory copying in ` IO . java ` to enhance functionality by allowing the copying
added an exception throw for unknown datum classes in JacksonUtils . java to improve error handling for unexpected datum types
refactor ABI retrieval logic to use requireRule for class and source ABI dependencies to improve dependency resolution accuracy and maintainability
adjusted height calculations in SelectBox to simplify the height calculation by removing unnecessary padding adjustment
normalize identifier syntax for database and table to ensure consistent identifier formatting across the application
updated schema handling in DbSqlSession to ensure default schema is used when the database type is " oracle " to improve compatibility with different database configurations
removed the handling of an empty response from the HomeFragment to simplify the logout process by directly finishing the activity
[ hotfix ] [ test ] fix test instability
make fastimportaction robust to null element
updated condition checks in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to improve clarity and correctness of lifecycle state management
rename execution attribute to execution attribute
clear metadata in altered test
fix nullpointerexception from getdate ( )
added null check for measurement in TabletInsertionDataContainer and replaced setRingBufferSize and setWaitStrategy methods in DisruptorQueue with a
deleted the Session2Token . java file from the codebase
remove dest volume when fail to create volume
added Install class to handle installation of new system shortcuts to enhance user experience by providing immediate feedback on installed shortcuts
added a constructor to LdapAuthenticationProvider that initializes with LdapAuthenticator and throws a NullAuthoritiesPopulator to ensure proper handling of null authority data access
updated retrolambda retrieval logic to allow dynamic retrieval of the retrolambda JAR path from the system properties or a default version to improve flexibility
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the camera initialization process
replaced FixedBitSet with a new method to sort live documents to improve performance and simplify the implementation of live document sorting
added null result handling in JMESPathExtractor to ensure proper processing of null results without causing errors
fix npe in authorizetag if no authority exist
None
vm snapshot : do n ' t allow resize vm snapshot with size > 200k
updated Config handling to support both class and subclass configurations to ensure consistent configuration merging across classes and subclasses
replace SelectChannelConnector with SocketConnector in JettySolrRunner to improve network connection management
refactor partition key comparison in HiveAlterHandler to utilize a new method to improve code readability and maintainability by centralizing partition key
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to provide users with an option to show the icon
modified the condition for component activation in SimulationStatus . java to ensure correct evaluation of active state checks
replaced ` SharedBlockingCallback . Blocker ` with ` Callback . Completable ` in ` StandardDeployer ` and ` StandardUndeployer
added workspace listener functionality to PreviewControllerImpl to manage workspace updates effectively
added checks for non - anonymous classes in ReflectUtil to ensure proper inflation of anonymous classes to avoid unnecessary inflation
refactor TransportHelper class to improve code readability and maintainability
fix broken test
added logging for initializing ActionManager and ActionManager in AmbariServer . java to enhance visibility and tracking of the initialization process
added null checks for initialization and modification of nodes to enhance robustness and prevent potential NullPointerExceptions
refactor ` run ` method and enhance user authentication logic in ` SliderAppsViewControllerImpl . java ` to improve code clarity and ensure
added a check to ensure the backgroundManager is not attached before attaching it to enhance stdBrowseFragment functionality
set the current tab to 1 in AllAppsTabbed and adjust child dimensions in PagedView and Workspace to improve tab management and ensure proper vertical alignment
add a null check for the URL in BaseDataSource . java and a corresponding test case in SimpleDataSourceTest . java to ensure robust error handling for invalid
added JRE - specific tests for the PebbleModule class to ensure compatibility with Java versions 8 to 12
added EditNameDialog to display directory creation dialog to enhance user experience by allowing easy editing of directory names
added functionality to toggle bar border width in various chart activities to ensure the chart displays correctly when bars are clicked
updated the API endpoint from OKCoin to OKEx for connecting to the correct exchange service
jbrules - 2642 fixing unit test after recent change to solver
updated file handling to use SeekableByteChannel instead of FileChannel and added a test for reading a large file in BytesAndLines to improve performance and
refactor ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` as a parameter to improve code clarity and maintainability by
rename ` InvocationHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
reorder conditional checks for serialization configuration objects to improve readability and maintainability of the code
added heap limit functionality in QuickstepProcessInitializer to manage memory usage for debugging purposes during development testing
refactor sumWithCompensation calls to use a variable for variable values to improve code readability and reduce repetition
log4j2 - 1010 do not rethrow exception in abstractloadbundletest if unexpected
[ hotfix ] fix checkstyle violation of sonar rule
updated return statements in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to ensure correct handling
ensure meterregistry lifecycle be properly configure for auto - config
change the log level from warn to info when there be no config center nor config item
added certificate generation tests to ensure proper exception handling for invalid certificate inputs
camel - 14263 : fix issue with ambiguous binary operator in predicate .
dismiss editor popup windows whenever editor lose focus ( # 494 )
add the user name to the log message when accesslogvalves fail .
updated file paths and scaling factors in SkeletonModelGpuSkinningTest . java , and improved null check in OgreXmlLoader . java to
removed ` throws InterruptedException ` from the ` createOrThrow ` method signature in ` DefaultProjectFilesystemFactory . java ` to simplify error handling
mark UpgradeResponse as deprecated to indicate that the class is outdated and should no longer be used
added support for generating generated d . ts files in the JSweet command line launcher to enhance the transpilation process by allowing users to
added a test for Kinesis fetch timeout in StreamConfigTest . java and modified fetchTimeoutMillis initialization in StreamConfig . java to ensure correct
[ beam - 8470 ] add the html renderer to the dataflow worker so it would render properly .
increased the maximum number of metastore server threads from 100 , 000 to 100 , 000 to improve performance by allowing more concurrent concurrent operations
change the return type of onTaskSnapshotChanged from void to boolean to enable the method to indicate whether the task snapshot has been changed
updated the shadow radius parameter to use ` shadowRadius ` instead of ` mMaxShadowRadius ` to ensure consistency with the updated variable naming convention
add test for chain and aggregation .
updated loop condition to include end range to ensure tests accurately reflect the correct range of elements
[ gr - 52322 ] fix checkstyle issue in generated code for polyglot / contextimpl .
updated condition to check for null before comparing file paths to improve logical consistency in file path comparison
added DisplayController import and updated WindowManagerProxy instantiation to incorporate DisplayController functionality
updated tooltip text for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent naming and naming conventions across file systems
change method call from ` getToolkit ( ) ` to ` Toolkit . getDefaultToolkit ( ) ` to ensure consistent retrieval of the default screen size
[ api ] fix compilation error
added test for fetchresults ( ) with factory expression on sql base
removed conditional logic for drag index in FreeformFinSetConfig . java to simplify the drag handling and improve code clarity
update moe version to 1.2 . 0 ( # 358 )
update error message and add gas spend call to program
print elementsshouldsatisfying requirements in a newline
mark the Weights class as deprecated to indicate that the class should no longer be used and may be removed in future versions
wrap unsafe plugins in a dedicated method for platform - specific intrinsic support
added Hint annotation to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , AndroidBinaryModularIntegrationTest , and created new Sample
set mCenterPagesVertically to false to improve page alignment in the user interface
fix miss call to doneprocessing on migrationinfo in migrationrequestoperation
updated constants and variable names in KonnectedBindingConstants , KonnectedUPnPServer , KonnectedHandler , and
changed the attributeValue type from Object to List < Object > in WSFederationClaimsReleasePolicy . java and updated related method calls to accommodate
updated test table creation and database handling in Llap classes to ensure compatibility with different database types and improve query processing
added a new test case ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate SQL parsing and deparsing with bracketed conditions to
added copy mode functionality for Ice Cream Sandwich devices to enhance user experience by allowing easy copy selection
updated the ` writeXmlOutput ` method to use ` DocumentBuilderFactory ` and XML document creation to improve XML output handling and ensure proper resource
camel - 1782 : fixed potential npe in aggregator with empty splitter .
camel - 17486 : camel - core - camel3 - add more detail to exception throw from camel - core
change package and import statements to reflect the new directory structure to improve organization and maintainability of the codebase
[ gr - 16577 ] fix type inference for phi node .
remove unused import , a suggest by valerybokov
added a new method ` invokeMethod ` to ` ObjectInvokeHelper ` that accepts parameters and throws ` Throwable ` to facilitate method invocation with specific
renamed multiple classes related to box and whisker calculations and histograms to improve clarity and maintainability of the codebase
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed the ` NormUpdate ` class to a static class and updated field comparison methods to use ` equals ` instead of ` field ( ) ` to improve
changed the access modifier of the singleton instance variable from public to private to encapsulate the singleton instance more effectively
refactor the test code in IfStatementTest for improved clarity and structure to enhance maintainability and readability of the test cases
replace getPutOnlyTableHeaderRow with getTableHeaderRow in ConnectionlessQueryServicesImpl . java to ensure consistency in header row retrieval method
refactor TypeAdapter to use null - safe methods directly to simplify code and improve readability by eliminating unnecessary object creation
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new file EXIFReader . java to read and process EXIF metadata to facilitate image processing for EXIF images in the
set tostandardunit to none instead of unknown to sdk version
[ drools - 7 ] fix classnotfoundexception when process pmml model
update info message to include additional detail about possible race condition
added a check to return early if the bubble bar visibility is not enabled to improve performance by avoiding unnecessary processing
[ gr - 36495 ] aarch64 : fix label range issue on aarch64
added a try - finally block to ensure ` initPending ` is set to false in ` JDKXRLogger . java ` to ensure proper initialization even
added a find method to TicketCatalog and improved logging in DefaultTicketCatalog , HazelcastTicketRegistry , and Hazel
updated string concatenation and assertions in TestSSL . java for clarity and consistency to improve code readability and ensure accurate SSL connection handling
[ flink - 25957 ] [ network ] fix potential resource leak in sort - shuffle shuffle shuffle shuffle shuffle shuffle read buffer
[ beam - 10670 ] make jmsio compatible with kinesisio
added a ` type ` parameter to the ` queryAllPluginHandlesByPluginId ` method and updated the ` pluginHandleDO ` class to
added ` start ( ) ` method to span creation in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` to ensure span creation is
updated IOSGraphics to use configuration options for drawable properties to enhance flexibility by allowing customizable color and stencil formats
refactored login logic to use a dedicated method for user authentication attempts to improve code readability and maintainability by reducing duplication
[ pytorch ] add explicit handle for pytorch engine ' real ( ) ) ops
[ ci ] do n ' t ignore interrupted thread interruption
refactor ShadowPicker and Implements files to improve code organization and maintainability
refactor HttpClientOptions creation into a separate method for better code organization to improve maintainability and centralized configuration of HTTP / 2 settings
feat ( codegen ) : fix error message
updated getFloatProperty calls to include a fourth parameter to ensure consistent font property retrieval in InlineLayout and FontUtil classes
added constructors for ` CopyStep ` that take ` source ` and ` destination ` paths and tested the internal path resolution in ` CopyStepTest ` to
fixed - rsemaphore . acquire ( ) method throw illegalargumentexception if acquire after set permits . # 3314
fix java dsl to work with java 8
added FlavorParser class and updated BuildTargetParser to use it for parsing flavor strings to improve code organization and reusability by encapsulating flavor
change data type of ` witnessesAddressList ` and related methods from ` String ` to ` ByteString ` to improve memory efficiency and prevent potential
modified print statement to conditionally display results if not empty to enhance output clarity by avoiding printing empty results
refactor ConcurrentLinkedQueue to improve null checks and add a new test class for removal to enhance code reliability and ensure proper handling of
added an optional ` addSpecialTokens ` parameter to the ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] replace ArrayList with Collections . nCopies for clarity
updated how data size is added for chunk data in LoadSingleTsFileNode to improve clarity and consistency in handling chunk data updates
added session storage context handling in DuoSecurity multifactor webflow configurer to improve session management and state saving functionality
add a test to verify that schema validation work
added a default constructor to the TypeAdapter class and updated a comment in Java17RecordTest to clarify the test ' s deprecation in Java
do n ' t kill the prepared thread if it be kill by the debugger
refactor AntPathRequestMatcher class to improve code readability and maintainability
minor refactor to make it easy to override createresourcepolicy
added null check before releasing the deflater entry and updated assertions in BlockingTest to enhance code safety by avoiding potential null pointer exceptions
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
fix checksum base on unicode character
refactor command handling and completer addition logic in the Example . java file to improve code clarity and ensure completer is only added when
make keylistener final and add multiple @ override annotation
changed the type casting of ` objectToSave ` from ` T ` to ` DBObject ` in ` MongoTemplate ` and added a test for saving JSON
fix the issue that requestutils # getremoteaddress do n ' t return the correct remote address
changed the return type of getJobArgs methods from String to ObjectBuilder to enable more flexible object creation for job arguments in the JsLibrary class
4 . x : remove dependency on dns resolve in cookie manager test
added handling for whitespace wrapped runs in GlyphLayout . java and updated test cases in BitmapFontTest . java to improve layout processing and ensure correct handling of
added methods to pause or resume splits in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to enhance functionality for managing splits
added support for the HIVESCRIPTIDEnvVAR configuration variable in HiveConf and ScriptOperator to ensure proper environment variable management for script operator IDs
refactor ` getListedTermCounts ` method to improve handling of term counts based on facet sorting to enhance code clarity and performance by
added a new action ` UseSeparateStepSizeAction ` in the ` MessagesBundle # platform . plugin . jog ` package to enable users
added final keyword and modified unlock logic in FileMenuFilter . java to enhance immutability and streamline unlock handling based on file locking
refactor ` RoundRobinTableInputFormat ` to simplify handling of ` regionServerSplits ` and improve readability to enhance code cl
change the value of PARENT _ SPAN _ SPAN _ ID from " false " to " 1 " in HttpClientRequestAdapter and its test
pdfbox - 2576 : use ioutils . closequietly instead of manual null check
added fullscreen handling and modified display mode management in GwtGraphics . java to improve user experience during fullscreen and ensure accurate rendering
updated WebfingerIssuerService to use URI objects instead of String for issuers and parameters to enhance URI handling and improve resource normalization
add unit tests for SoulApacheDubboClientConfiguration to ensure that the Dubbo configuration properties are correctly initialized
replaced the use of ` Gdx . files . internal ` with ` resolve ` for asset paths in ` SkinLoader . java ` to ensure consistent
updated log levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java , and changed
replaced ` lock ( ) ` method with ` lockInterruptibly ( ) ` for ` PMS . REALTIME _ LOCK ` in multiple classes to ensure
reformatted package declaration in Compiler . java to improve code readability and maintain consistency
fix handling of redundant exception branch in jsr
use defaulthttpdatasource when parse manifest fails
added a configuration property for the maximum number of prepared statements cached per database connection to improve database performance monitoring and scal scalability
change return type of the set method from WritableConfig to Configuration across multiple classes to ensure the method returns Configuration instead of WritableConfig to accurately reflect
added error handling for malformed command payload in AutoScalingHandler to improve error management and reporting for better debugging
refactor CombinedDataset class to improve code readability and maintainability
change variable name from ' buf ' to ' b ' for clarity to improve code readability and maintainability
added methods to remove cryptography restrictions and updated default policy handling to enhance security by managing cryptographic permissions effectively
fix water pickup not work if an event be cancel
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to ensure proper handling of long text transformations
removed duplicate code for setting fileKey and vectorizationContexts in Vectorizer . java to streamline context initialization and improve code clarity
fix wialon speed ( fix # 1462 )
hbase - 26945 disable metricuseraggregate if user _ user _ enabled _ conf be false
added isEmpty ( ) method to JsonObject class to provide a way to check if the JsonObject has no members
fix issue where all apps animates out .
refactor various HttpClient - related classes to improve code organization and consistency to enhance maintainability and readability of the codebase
add params to zadd operation to support query parameter
minor clean - up . add miss license header .
rename testasyncmessages to reflect gc delay change
added a method to retrieve an optional target from the build target graph and modified the target handling logic to improve robustness and clarity in target
updated time comparison logic in TimeZoneProvider . java to improve accuracy in validating epoch timestamps
fixed arrayindexoutofboundsexception when read ole2 blip record
removed duplicate initialization of row and column variables in JSONParser . java to streamline code by eliminating redundancy
refactor JavaType to use regex patterns for pattern matching to improve flexibility and maintainability of type comparison
updated the DETAIL _ THUMB _ HEIGHT constant and added functionality to handle local trailer retrieval for items to improve user experience by allowing
added a native method to remove glyph information from the cache if it exists to improve cache management and ensure proper handling of glyph information
act - 1858 : terminateallbehaviour now also record the end time of a process
camel - 1782 : camel - jaxb - allow to specify a top - level element name with thanks to stephan
updated the URL in the test from apereo . org to an abc1234 . org to ensure the test verifies the correct endpoint for secure communication
add an option to reset all preference to default value .
hbase - 27812 make thriftmetrics and thriftserver related code protect instead of private
[ danfossairunit ] remove deprecate channel manual _ fan _ speed ( # 14465 )
( chore ) camel - spring - boot : use hamcrest assertion instead of junit in examples / integrations / camel - spring -
removed redundant stop call from expansionHelper to streamline code by eliminating unnecessary repetition
added null checks and equals and hashCode methods to PartitionFactory to ensure safe comparison and hashing functionality for instances of PartImpl
fix deployvm fail when vm disk size be unknown
updated visibility logic for prediction rows based on user preferences to enhance user experience by allowing dynamic visibility based on user preferences
[ geos - 10358 ] invalid bbox cr should throw bad request
added validation methods for value and position parameters in LibrustzcashParam . java to ensure that parameters are valid and prevent potential errors during execution
deprecate ithrowableentity in favor of ithrowableentity in order to replace it
added random number generation for the x and y variables to generate a unique identifier for the nodes
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a test for verifying that missing scopes to enhance test
refactor code to remove redundant variable declarations and improve readability to enhance clarity and maintainability of the code
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new release version of the software
added a condition to check for deep shortcut item type in LoaderCursor . java to enhance functionality to support deep shortcuts in the code
added hashCode method to TimeGranularitySpec to ensure proper hash code generation for instances of TimeGranularitySpec
changed access modifiers from private to protected for BooleanWeight and DisjunctionMaxWeight classes and added similarity and weight attributes to enhance encapsulation and improve data
added a boolean flag to control proxy response code behavior to ensure proper handling of NTLM proxy when the response code is used
[ gr - 20527 ] fix masm address generation issue .
server : calculate vm memory only if need
added a null check for the max score in JSONResponseWriter to ensure that the response is only included when there is a valid score
updated audio recoder port from 22050 to 44100 to improve audio functionality and performance
modify the calculation of the origin X in RocketFigure to ensure proper scaling based on the specified scaling factors
druid query - based input format : set default interval to null
added ` ORIGINAL _ TYPE ` and ` ORIGINAL _ NAME ` constants to the ` CustomProperty ` class and corresponding tests to
added a static method to create a new Index instance with given parent and data to enhance functionality by allowing dynamic creation of Index objects
simplified the return statement for boundary period checks to enhance code readability and maintainability
updated schema compatibility checks to include index for readers and writers to ensure accurate compatibility verification for schema types with varying data types
added support for managing PersistentAttributeType and associated association types in QueryUtils to enhance entity path handling and improve management of entity paths in the
added synchronization to the spans list and iterator methods to ensure thread safety during concurrent access to the spans list
replace < Object > with < ? > in gettext method across all provider
updated exception handling in ViewContextImpl . java to use InvocationTargetException and added debug logging to improve error logging and provide more detailed context for exceptions
refactor OAuth2AccessTokenEntity class to improve code readability and maintainability
update error messages in SCBEngine , TestInvocationFactory , TestSCBEngine , and HighwayServerInvoke to clarify the reason for
added PNG resource files for iOS in GdxSetup . java to support iOS integration with the application ' s data and moe resources
updated TestSearcherManager to use ConcurrentMergeScheduler for improved merge efficiency to enhance performance by allowing concurrent merge operations
updated condition in QTestUtil and modified how rows are processed in GenericUDTFInline to improve session state handling and ensure safe iteration through list items
rename classes MapIterable , FJIterate , and ParallelIterate to improve clarity and consistency to enhance code readability and maintainability
ticket # 4810 : prevent focus when user click on cell
hhh - 14364 fix osgi unit test failure
fix wrong calculation of connection timeout .
move component . xml to src / non - packaged - resources and use it from compiler
updated filename handling and improved file validation in Compat and FileOpener classes to enhance cross - platform compatibility and ensure proper file operations
change return type of row ( ) method from Cell < T > to void to align method with updated implementation requirements
add a port clash check to cli when port number already exist .
added a null mask functionality to the WebSocketClient and modified the WebSocketConnectionD12 initialization to enable masking of WebSocket connections based on the null mask value
updated ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of updating the return statement to improve the
include schedule stats of bucket table to nodeselectionstats
add a test case to show the issue
added a boolean flag ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to track the presence of an owner pointer
refactor PlaybackOverlayFragment to improve clock display functionality to enhance user experience by providing a clearer and more visually appealing
remove call to world . updatecomparatoroutputlevel in favor of getpos ( ) .
modified the ` IMPL ` variable and exception handling in ` SegmentReader . java ` to improve error messaging and class loading to enhance clarity
fix possible deadlock in sudoku event
updated the ` DefaultTypeAdapters ` , ` ObjectTypeAdapter ` , ` MiniGson ` , and ` ObjectSerializer ` classes to use a
added methods to handle double , long , boolean , string , and string values in the Series class to improve error handling for null values in the
remove no - audio - time - stretch option from cli
refactor GeoRelationUtils to improve boundary checks and return bounds in GeoRect to enhance accuracy of geometric computations and ensure proper range
fix npe in case of service offering with null id
added cleanup method to HazelcastTest class to ensure proper resource management during test execution
add some extra check for nosuchalgorithmexception in blockciphertest
added filters to print operations logs in QFileClient . java to enhance debugging by providing visibility into operation logs printed
resolve issue with type argument on bean definition
fix nullpointerexception when sip connection fail due to unresolvable address .
replaced manual addition of demand with MathUtils . cappedAdd for improved accuracy to simplify code and leverage built - in functionality for better maintainability
refactor resource handling in SetOutput . java to use try - with - resources for ImageOutputStream to ensure proper resource management to avoid potential memory leaks
refactored search functionality in TvApp , BaseActivity , EnhancedBrowseFragment , and StdBrowseFragment to use a dedicated
refactor the ` toString ( ) ` method in ` GrepOptions ` class for clarity and consistency to enhance readability and maintain
added support for osgi service registry in web console
added @ Autowired annotation for PersonRepository in RepositoryIndexCreationIntegrationTests to ensure proper dependency injection for the PersonRepository class
changed the exception type in the stop ( ) method from Exception to InterruptedException to improve error handling for interrupted interrupted interrupted exceptions
fix switch / cases indentation in cactus . java
replaced manual mouse drag calculations with a mouse event listener to improve code readability and maintainability to streamline mouse event handling for better user interaction
[ java ] pad pad between endpoint in flow control to prevent false sharing .
added alignment parameters to editStringAt method in IOSNative . java to enhance the functionality for better text selection behavior
throw illegalargumentexception in case of misconfiguration
added conditional logic to handle distinct queries in multiple classes to improve query validation and ensure accurate handling of distinct queries
fix jni jni code for nearby option .
fix some javadoc warning ( no functional change )
added null check for children in PartitionPruner . java to prevent potential NullPointerException when children is null
added tokenPosition and currentPosition fields and updated their usages in MessagePackParser . java to improve parsing functionality by correctly managing token position
added locale saving and reset logic in AbstractSolrMorphlineTestBase to ensure consistent test environment by resetting locale settings after tests
removed unnecessary condition for calculating size in LauncherFragment . java to simplify code for better readability and maintainability
added a new test file for the MetricsReporter class to verify the registration and handling of metrics to ensure that the MetricsReporter correctly handles metric registration
remove unused import
implement equals and hashCode methods in the Rectangle class to ensure proper comparison and hashing functionality for the Rectangle class
fix streamkafkaptest to avoid intermittent failure
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and ensure correct usage of BigInteger constants
added configuration to utilize FQDN of the AM machine when submitting work to LLAP to enable better alignment with the AM machine '
fix test which randomly fail on slow ci server
updated object ID setting to use getCmoObjectId method for specific shape IDs to ensure consistent identification of shape objects within the codebase
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the retrieval of distinct values from posts to
refactor Driver and SearchTravRetTask classes for improved organization to enhance code maintainability and readability
fix : remove extensionadapter from managedkubernetesclient
None
updated test annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot and TestRSAProviderTokenManager classes to utilize the Jupiter
log error if summary generation fails
lucene - 6271 : do n ' t reset termpool unless need
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
add support for TIRAMISU API level in ShadowWindowManagerGlobal to enhance compatibility with TIRAMISU devices
fix urlhelper to always add port to http and https scheme
added support for MSSQLDatabase in foreign key constraint generation to ensure proper foreign key constraint handling for Oracle database compatibility
hbase - 27420 fix checkstyle error in hbase - replication
added support for pipeheadeventitem . sidecheck for emzuli pipe .
douniaberrada : add a setter for htmlidentifier . logging , for easy debugging .
[ flink - 20536 ] [ table - planner - blink ] [ hive ] fix hivelookuptablesource do not produce correct field type
improve error message when current thread be n ' t the right one
updated schema name retrieval in SequenceSnapshotGenerator to use CatalogAndSchema to improve schema customization for database connections
updated color calculation in SpriteBatch and SpriteCache classes , and replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugStarter to enhance
fixed - redissonconnection . setsentpromise ( false ) throw classcastexception if redissonconnection . setsentpromise ( true ) #
fix # 8933 : only add the base statistic core if it have n ' t already be add
renamed the method ` launchTask ` to ` launchTaskFromView ` and updated its implementation throughout the code to improve clarity and
updated MorfologikFilter to use a custom dictionary resource instead of a hardcoded dictionary resource to improve flexibility and maintainability by allowing
updated sorting options in GridFragment to use the correct translation keys for ratings and stars to improve localization and user experience by using appropriate translation keys
added imports for ViewKt and ListRow , and modified visibility logic for HeaderViewHolder in CustomListRowPresenter to enhance visibility handling of ListRow items
refactor the switch statement to use a try - finally block for exception handling to improve code clarity and ensure proper resource cleanup during cleanup
updated the HttpClient implementation to enhance performance and reliability of HTTP requests
replace isCaseSensitive ( ) checks with instanceof for DB2Database checks to ensure compatibility with DB2 - specific type checking
add support for java . time module in standardjavascriptserializer ( thanks to benjamin )
[ hotfix ] [ core ] fix checkstyle violation in logutils
change type from TypeBearer to Type in PhiTypeResolver . java to ensure proper type handling for merging types in the application
coinbase : fix checkstyle issue
added a method to retrieve build targets in BuckConfig and updated ProjectCommand to include a new method to forcefully build targets in Buck
updated idle strategy initialization in Ping . java to ensure proper resource management and avoid potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` in multiple files to ensure consistency in file handling across the application
removed redundant checkbox selections in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] add precondition check to slot ownership assignment
added a new file ` RemoveCallsToSystemGc . java ` to recipe to remove calls to ` System . gc ( ) ` and `
remove superfluous super ( ) call which compiler would do for free
added an overridden method to setUIID to ensure the correct icon is used for the label
replace foundEntry with update and update variables in FeedUpdateService . java to ensure accurate tracking of feed entries
added support for " - cp " argument in command - line argument parsing to allow both classpath and cp options to improve flexibility in command handling
[ hotfix ] [ javadoc ] fix typo in javadoc
set initialized to true in StorageService . java to ensure the service is properly initialized before usage
updated Test7196045 . java file to improve test coverage and ensure accuracy of functionality
updated the density and decay values in ShaderParametersLightShaft . java to improve the shader parameters for better lighting effects
added state and state data properties to OidcConfiguration and updated OidcRedirectActionBuilder to utilize these new properties to enhance configuration flexibility and
# 1664 - generate unique constraint with not null constraint on unique column ( for mysql compatibility )
added federated share functionality to users and groups search provider to ensure users are aware of file federation status
added a method ` needsDocValues ` that always returns true to ensure that document values are present to maintain data integrity during testing
updated method names and error messages for clarity and consistency in BufferAlignmentAgent , BufferAlignmentInterceptor , and other classes to improve code readability and ensure
added intForEach method to Int2ObjectHashMap for processing integer values to enhance functionality to unmap null values before passing them to the consumer
fix ( worldserver ) : early share scoreboard data with the global scoreboard .
change return type of count ( ) method from Long to long in multiple repository classes to ensure compatibility with larger datasets datasets
fix logic of create mtree snapshot ( # 1452 )
mahout - 195 vectorutil . dotproductscore ( ) now return 0.0 / 1.0 instead of 1 / 3f on
added a new constant IRREVERSIBLE _ THRESHOLD and related methods to manage the latest confirmed block number in the database
replaced the ` setLocale ( ) ` method with a direct call to ` Systems . setLocale ( ) ` across multiple activities to simplify locale
added a check for if a new database was created in the LauncherClings . java file and introduced a method in LauncherProvider . java to
refactor collection management by using an iterator for better readability to improve code clarity and maintainability
added a null check for the operating system architecture before validating the ` is64Bit ` variable to ensure that ` is64Bit ` is set correctly to
added a thread check in TestIndexWriterDelete . java to ensure the current thread is the same thread before proceeding with further operations
changed the access modifier of the closeDatabase method from private to protected to restrict access to the method for better encapsulation
updated import statements to use the new ` ModelCompat . asSdk ( ) ` method instead of the deprecated ` getPeople ( ) ` methods
add attribute handling in BatikSVGDrawer to preserve and restore values from SVG attributes
added a try - catch block to handle potential IllegalArgumentException when parsing user configuration to improve error logging for user configuration parsing issues
added functionality to conditionally set waitingForResult based on the " WaitForResult " boolean in CodenameOneActivity to enhance the behavior of the intent
refactor constructors and update sentinel object retrieval in multiple queue classes to use a Supplier for better flexibility to enhance code maintainability and
added a new field for widget description and updated widget display logic in WidgetCell . java to improve user experience by displaying relevant widget descriptions when available
added a maximum attribute count limit and error handling in the attribute registration process to prevent exceeding the allowed attribute counts and ensure proper error reporting
move test to correct package .
camel - 16205 : camel - defaultheaderfilterstrategy - add case insensitive option to filter by name .
refactor InlineLayout and Breaker classes to improve boundary handling and streamline inline break behavior to enhance code clarity and maintainability
added null checks and improved error handling in the ` getView ` method of ` ShareUserListAdapter ` to ensure proper view retrieval and en
refactored the method shouldInstrument to consolidate the instrumentation logic into a single method to improve code readability and maintainability by
added a condition to return the last index of the destination if the association is an insert source before the source to ensure correct index is used for accessing the
updated memory limit retrieval in CmdModifierTest . java to use a dynamic file path based on Docker version to ensure compatibility with varying Docker version configurations
eliminate singleton usage in cxxdeps . empty ( )
improve error message if specify a non - existent source under test
add back crossversionproxy support for 1.10 and 1.11
remove superfluous code in stringutils # setatindex
increased timeout values and adjusted sleep duration in TimeoutTest . java to improve test stability by allowing more time for tests to complete
updated the TaskOverlayGo constructor to include an AssistContentRequester parameter to enhance functionality by ensuring consistent request handling for assist content requests
encode the witness address before checking its existence to ensure proper validation of the address format
updated test cases in DefaultMethodRegressionTests . java to improve test coverage for default method regression scenarios
modified the WorkloadManagerMxBean class to enhance performance and maintainability of the code
align test class with api change
added a call to closeLoader in DesktopGeneratorController . java to ensure proper resource management and avoid potential memory leaks
added a ` clear ` method to ` ExceptionThrowingTaskletStub ` and multiple unit tests for rollback behavior in ` FaultTolerant
[ beam - 8470 ] print beam container runners when config invalid
[ multistage ] [ table - planner - blink ] add extra property to tuning config ( # 1598 )
introduced a mechanism to prevent duplicate in - progress segment instances from being added to the list
added a condition to return null if the table ' s touchable state is disabled to improve touch handling logic for better user experience
added a test method to verify the build process using precompiled headers in a specific cell to ensure compatibility and functionality of the multi - cell build process
do n ' t retry non - existent cache configs
updated module installation logic by adding a method to check if a node package is installed and improved debug logging to enhance code clarity and
Added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to Enhance management and operational capabilities for MBeans in the component
added a condition to check if ` settings . inAppBrowser ` is set to false to improve flexibility in managing browser settings
updated string comparisons to ` " 0 " . equals ( " 0 " ) ` for consistency and clarity to improve code readability and maintain
updated type checks in ` Types . java ` and added new classes ` T6558559a . java ` and ` T6558559b .
add block in / out to the position message when they ' re edit .
camel - kafka : fix potential resource leak
remove the default empty array for the examples parameter in Schema . java
modified thread handling logic in AgentRunner . java to ensure proper termination of threads to improve the robustness of the agent ' s thread management
remove time column from aggregation filters to ensure proper data cleanup during aggregation
reformatted conditional statements for better readability to improve code clarity and maintainability
refactor Rust library dependency retrieval to use CxxPlatforms to improve compatibility with C++ platform - specific libraries
added ' name ' property and its getter / setter methods to JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes to enhance
idealgraphprinterobserver : stop printing after exception
phoenix - 2114 small scan performance improvement ( ram )
added routeId to the filter string creator in RetryGatewayFilterFactory to enhance information specific to retry configurations
replace redisplay calls with widget calls in LineReaderImpl . java to improve widget handling during the display process
replaced ` onOverviewShown ` method with ` showForOverviewIfNeeded ` in ` ActivityControlHelper ` , ` WindowTransformSwipeHandler ` ,
refactor checks for min and max packed values in CheckIndex . java and add a new test method in TestPointValues . java to improve
updated the publish method call to use ` updateLastState ` instead of ` true ` for the second parameter to ensure that the state reflects the latest
updated SQL string formatting for skewed string list values to ensure proper representation of string values in the application
added a null entry to the existing expiration list to ensure proper handling of null values during collision detection
simonstewart : make webelement . gettext ( ) case insensitive
replaced multiple instances of while ( true ) with while ( true ) in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
# 1193 - enh : add queryengine . forwardonlyfetchsize ( ) ... for mysql mysql mysql mysql specific behavior
improve handling of closedchannelexception in httpservermultiplexchannelhandler
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated window radius initialization to support rounded corners on windows to enhance compatibility with window transitions
refactor DesktopTaskView to replace ShapeDrawable with a View for background management to improve code clarity and maintainability by using a more structured
added instantiation of UpstreamCheckService to UpstreamCheckServiceTest . java to ensure proper setup and configuration of the UpstreamCheckService
refactor session maxInactiveInterval logging from warn to debug level in AbstractSession . java and AbstractSessionManager . java to improve logging granularity for session
removed error logging for ZooKeeper children and returned a fixed return value to simplify the code and improve error handling
[ hotfix ] [ runtime ] fix javadoc warning in java . rmi
updated conditional logic to check for custom data before generating mipmaps to ensure mipmap generation to avoid unnecessary mipmap generation when custom data is not present
fix ' * ' in secret key use ' * ' instead of ' xxx '
added selectable property and related methods to the List class to enhance the functionality of the List class regarding selection behavior
removed the check for empty field vectors in LlapArrowBatchRecordReader to streamline the code by eliminating unnecessary complexity
added file separator handling and improved logging in PolicyContext to enhance cross - platform compatibility and provide better debugging information
replace Set with ArrayList for flatQueries and expandQueries to improve performance and memory usage by using a more appropriate data structure
pdfbox - 4071 : fix typo find by codespell on fossies . org
camel - 20297 camel - kafka - make it possible to run the close action in a separate thread
updated assertNodeStateProvider method to include a string parameter for ignorable node values and modified value collection to use TreeMap to enhance control over node
added a lock file deletion in RocksdbMavenPomCache . java to ensure files are properly released when the cache is garbage collected
fix testhquorumpeer to use correct client port
added error handling for response retrieval in RestClient to improve robustness by logging errors and ensuring proper connection closure
[ flink - 20536 ] [ statebackend ] fix the bug that segment tar upload go from empty to null
None
added null check for item ID in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerException when comparing item IDs
reduced the number of string inputs from 500 to 100 to optimize memory usage during testing
use bytearrayinstream to simplify wkb data conversion
renamed the method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in naming conventions
added a method to check if a transition is direct substates to optimize state management by avoiding unnecessary processing for subtitles
added checks for ListMultimap and SetMultimap in MultimapSubject . java and created corresponding tests in MultimapTest . java to ensure
added JoinOperation interface to PostJoinOperation class to enhance functionality by integrating join operations
added a test method for running a specific PostgreSQL test in AdditionalPostgreSQLTest . java to ensure that the PostgreSQL test correctly handles and verifies the
resolve intermittent test failure in amq5035test due to timeouts
[ calcite - 3761 ] avaticadatabasemetadata . getpseudocolumns ( ) throw npe in javadoc
updated MongoDbConnectionPoolProperties to use duration strings instead of integer values for lifeTime , idleTime , and idleTime to enhance configurability to
do n ' t cast to mediatype since that ' s the best we can do with it .
refactor handle filters and domain changes methods to return a boolean indicating applied filters to improve the clarity and functionality of filter application logic
added a timeout feature to the ShuffleHandler to allow configurable enabling of idle idle time for idle idle connections
replace the use of a hardcoded value for quick step starting rotation with a constant to improve code readability and maintainability by using a named constant
camel - core - optimize log to reduce noise in debug output
fix javadoc warning
[ core ] add edge case for good error message
added a check for the presence of the " atlas " property in the map before processing to ensure that a required atlas property is provided and improve error handling
camel - 14263 : camel - core - remove deprecate propertyplaceholderhelper
added a call to close the database in BlockchainTest . java and removed redundant inbound message listeners in KafkaTest . java to improve resource management and
refactor string handling in CoreMarkdownNodeRenderer to use a dedicated method for processing lines and improve code clarity to enhance maintainability and ensure correct
int - 1444 fix trail whitespace error
updated SQLBindings and SQLBindings classes to use List instead of ImmutableList and added logging for deprecated methods to enhance code flexibility and maintainability
added support for OpenJDK in the VirtualMachine class to enhance compatibility with OpenJDK systems
added keepAlive functionality to ReactorClient to improve connection management and resource cleanup
update vertex attribute to use ShaderProgram constants instead of hardcoded strings to improve maintainability and consistency of attribute management
camel - 14263 : camel - core - optimize to avoid unnecessary component lookup .
replace null check with accountCapsule initialization to improve code clarity and ensure account existence validation
update version number to 3.8 . 1 alpha .
replaced calls to ` t . unannotatedType ( ) ` with ` t . unannotatedType ( ) ` for unannotatedType (
updated assertions and flushed operations in StorageGroupProcessorTest . java to improve test clarity and ensure correct ts file processing configurations
added environment dumping functionality and updated references in multiple classes to ensure compatibility with the new environment management system
added a waitbeforestart parameter to the FFMpegVideo class to optimize video processing timing
removed the boolean parameter from the OrcEncodedDataConsumer constructor to simplify the OrcEncodedDataConsumer initialization and usage
add @ test to prevent out of bound access list index
add a few more place where we can grab the framemap from the lirgenerator
None
fix boat placement ( # 1179 )
modified the ` toString ( ) ` methods in ` Directory ` , ` RAMDirectory ` , and ` RAMDirectory ` classes to improve the representation of lock
removed the method ` allowExperimentalOptions ( ) ` from the ` Launcher ` class to streamline the code by directly checking for experimental options
added methods for asserting paths and assertions in BDDAssertions . java to enhance assertion capabilities for path - related functionality
updated variable names and logic in ForwardedRequestCustomizer to use hostField instead of hp to improve clarity and ensure correct host value handling
change log level when there be a problem read the kubeconfig .
added functionality to handle file upload statuses in UploadListActivity to improve user experience by providing feedback on file upload statuses during upload process
replaced the ProviderInstaller class with a new ProviderLoader class for managing cryptographic providers to streamline the installation process and enhance code maintain
updated import statements and references from ` Span ` to ` TraceMessageHeaders ` to align with the latest Sleuth API for trace messaging headers
removed specific fields from SelectFromDatabaseChangeLogStatement to simplify the data retrieval by focusing on a non - default sorting criteria
hhh - 17792 - change postgresql dialect namequalifiersupport to align with hibernate 4.0
ignore test that do not pass locally .
added checks for the scheduler state and improved error handling during scheduler initialization to ensure accurate scheduling behavior and provide clearer logging when the scheduler is
updated InlineBox instantiation and added a null check for blockParent in BoxBuilder . java to simplify code and improve readability
improve readability of exception message
updated the default value of getStagedRectSlideEnd from 383 to 500 to improve the accuracy of the slide end time
read the waves . random from the translation bundle instead of the accent
updated condition in BukkitMain . java to include plotArea check to ensure correct behavior when killing road items in specific conditions
invoke shadowexplorationstatechangelistener outside of onCreate
pdfbox - 5328 : improve cmap lookup performance , a suggest by valerybokov
simplify code and improve performance
prepare for release of poifs 1.5 , see bugzilla 46673
added imports for PlotArea and modified return logic to check plot area against plot area instead of plot
updated version regex pattern in TestWebHCatE2e . java to ensure compatibility with different version formats
updated the range check for ` count ` to allow zero to ensure valid index before processing ` pickleEvents `
resolve kafka client id if there be more than 1 consumer thread
updated import statements and exception handling in JavacCompiler . java to improve error reporting for compiler failures
ggb - 2118 do n ' t repaint view when closing , if necessary
camel - 14263 : camel - spring - batch - should use source code generate configurer to avoid reflection configuration .
added a method ` isAnimationFinished ` to check if the animation is finished based on frame timing
added a test for custom favorite icon with line breaks in LoginInfoEndpoint to ensure proper logo rendering with line breaks in the login screen
added null check for otherUrl in TimeLineCursorAdapter to prevent potential NullPointerException when otherUrl is null
ticket # 4810 : fix problem on mac o x when click on algebraview2
refactor methods in ObjectHashSet to improve code readability and maintainability
None
fix comparison of enchanted books , mc - 12770
added microprofile test for async resource ( # 881 )
rename header maps from " target - target - flat - headers . hmap " to " target - user - headers . hmap " and
improve error message when mail can not be send
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce ` EMPTY _ LABEL ` in ` TaskItemView . java ` to improve cl
added test cases for retrieving partitions by names with batch and multiple equal size batches to ensure the getPartitionsByNames function works correctly for varying data sizes
added a closing brace in FileListListAdapter . java to ensure proper syntax and compilation in the code
replaced ArrayList with List for shared items in OCFile and OCFileListAdapter to improve code flexibility and performance
updated the index used for removing the view in the BubbleBarView to ensure the correct view is removed from the layout
removed unnecessary package imports from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline dependencies and improve code clarity
change s3 request header expiration to 0 by default
update jfxradiobuttonskin when no timeline be available
updated the condition for handling zero splits and added an exception for invalid DeweyNumber input to improve error handling and ensure robustness of the code
updated the category string handling in MwVolleyApi . java to remove " Category : " from the returned value to ensure accurate formatting of the retrieved
corrected a typo in the assertion error message to ensure accurate validation of the close code in the WebSocket client tests
fix for null classloader in webapploader .
hhh - 13266 do not inherit parent class from child enhancement class in xml dsl if enhancement class be embed type
pdfbox - 4071 : avoid a classcastexception find via oss - fuzz fuzz fuzz
added a new test class ` TestPorterStemFilter ` to verify the functionality of the ` PorterStemFilter ` to ensure proper handling
hbase - 26975 indexwriter should only write index update when success
updated package names for several test classes to correct the package structure to ensure proper organization of support classes
fix a concurrentmodificationexception .
add static block to avoid multiple call to sys . touch ( )
updated HgCmdLineInterface to use " - mardu " for untracked files and modified test assertions in HgCmdLineInterfaceIntegrationTest
camel - 6555 : camel - netty - timer timer need to be inject in producer so we can set timers etc .
changed variable declarations from non - final to final for several fields in the Light classes to ensure immutability and improve code safety
updated width and height calculations in X11GraphicsConfig and WGLGraphicsConfig to ensure minimum dimensions for graphics rendering compatibility
added toString ( ) method to DelegatingSecurityContextCallable and DelegatingSecurityContextRunnable classes to provide a way to output the string representation of the underlying security context
added annotation filtering functionality to the ClassFinder class to enhance the ability to find annotated classes based on method annotations
modify the handling of large length values in BytesColumnVector to ensure correct calculation of newLength to prevent overflow and ensure maximum size constraints are enforced
fix flaky writebehind test
changed method parameter type from JScrollPane to JComponent in MotifScrollPaneUI and XTextAreaPeer classes to improve compatibility with the updated design requirements
make sure point function in 3d show correctly ( for polynomial )
added null check before retrieving column class from the table to prevent potential NullPointerException when table is null
added error handling for ClassCastException in CustomChangeWrapper . java to ensure robustness by gracefully handling potential exceptions during class loading
added methods to retrieve a DistBuildConfig and updated related classes to replace ConfigPathGetter with BuckConfig to enhance configurability and
show warning message for double entry in export dialog
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests due to instability
modified the return type of ` doJoin ` method from ` void ` to ` boolean ` in ` JoinTemplate ` , ` JoinWorker `
refactor getAutodeps method in JavaLibraryDescription to improve code clarity and maintainability
updated intent creation and flags to include FLAG _ ACTIVITY _ NEW _ TASK to ensure the intent is only started when the task is a new task
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance pagination control by enabling paging functionality
updated assertions to retrieve the correct Maven repository URL from the first and second repos to ensure accuracy of repository access in test cases
added pubsub node affiliation task . jm - 1026
improve error handle for invalid uri .
chaned method to public to allow class create outside of pac4j
added array handling and improved null checks in CacheKey class to enhance robustness and prevent potential null pointer exceptions
updated file type detector implementation to use the FileSystemProvider for enhanced compatibility across different operating systems
fix intermittent ci failure
updated ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to directly access ` VirtualSensorCallback ` and ` VirtualSensorChannel
added a condition to check if the session context differs from the default context before executing security context repositories operations to ensure security context is removed from the session
simonstewart : if the internet be already connect to a loopback address , return it .
renamed ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` and updated buffer initialization to use ` DEFAULT _ BUF _ SIZE `
updated key information resolution logic to include secure validation and removed redundant exception handling to enhance security and error reporting in XML transformations
added a boolean flag to track the installation status of the icon change listener to ensure the icon listener is only added if the component is properly initialized
added Russian language support to enhance text processing for Russian language
hhh - 16189 convert second to nanosecond accord to sonar
disable frame state verification for manually generate graph
reset robolectric system property after each test
added a system class for " org . slf4j . " and updated tests for its existence and behavior in ViewClassLoader and its associated assertions to
added a check for ' jar ' in the packaging condition and implemented a test for removing ' jar ' from the POM to ensure correct handling of
fix flaky test on osx
fix ( demo ) : clear buffer first
rename ` defaultUnits ` to ` preferredUnits ` and update related methods for clarity to improve terminology consistency and enhance code readability
update DatePatternConverterTest to utilize UTC timezone and adjust date formatting to ensure consistent date formatting with adjusted daylight savings time
no effective change - code cleanup
HDFS namenode host error message should be more helpful for ` ` file : / / ' ' and ` ` hdfs : /
add 1 minute delay to notification show popup popup popup . ( # 991 )
Ftp test : increase reconnect delay
use skip list instead of concurrenthashmap in keyedproperties
added a method to ignore log entries based on a Throwable to improve logging detail by notifying users when ignored log entries are encountered
added a null check for runningTaskView before proceeding with further operations to avoid potential null pointer exceptions
removed unnecessary type casting for item and contents arrays to simplify code and improve readability
remove the line that clears the image before processing it
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing and testing memory mapping to support unmapping in a concurrent environment using M
added a null check for the PdfCleanUpProcessor before initializing cleanUpColor to avoid potential NullPointerExceptions when ic is null
updated the field reference in the assertQueryEquals method to use ' field1 _ s ' instead of ' field1 ' to ensure consistency in variable naming
updated ExtendedOperatingSystemMXBeanImpl to enhance performance monitoring capabilities
added functionality to install left commands in SideMenuBar based on the available left commands to enhance user interface by allowing dynamic navigation to the corresponding command
added a ` advanceWindowed ` setting to ` AppSettings ` and conditionally called ` setUpWindow ( ) ` in ` TweetActivity ` and
added SybaseDatabase support in the condition for DropPrimaryKeyGenerator to ensure compatibility with additional database types for primary key generation
fix typo in client class javadoc
[ java ] wait for the cluster to become ready before update the last record position in the sequencer .
replaced invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and added setCellLayoutPressedOrFocusedIcon
added return statement to prevent further processing of cached data
updated package - info . java files for mmm and ppp packages
shutdown http server on listener shutdown
camel - aws2 - stream - s3 : fix import issue ( # 4529 )
[ hotfix ] [ webmonitor ] delete unused parameter in webmonitor
bug 10791 : 226 to 227 db upgrade - add unique constraint for network _ offerings table
added a new test class TestThriftCLIServiceSecurity for verifying password handling in TOpenSessionReq to ensure security checks are functioning correctly for
updated maxEnergyLimit assignment and validation for constant calls in VMActuator . java to ensure energy limits are correctly set based on trx data
added maxInMemorySize property and its getter / setter in HttpClientProperties , and modified webClientPlugin method to accept properties as a parameter to enhance memory
refactor caching logic in Cache . java to improve performance and maintainability of the caching mechanism
added new Cucumber test and step definitions files to enhance testing framework integration with Cucumber
added error handling for JSON parsing in TypeJsonUtils and new assertions for edge cases in TestArrayOperators to improve robustness of array handling and ensure correct
remove invalid hex value from utf8stringbuildertest
updated parameter handling to check for set parameters before encoding and path replacement to improve robustness and avoid potential errors when parameters are not set
ircuitbreaker : do not allow to many output to configure a load balancer .
updated doc frequency assertions to ensure consistent behavior with maximum buffered documents configuration
replace string hashing method with Sha1HashCode for resource APK , primary dex hash , string assets , and string assets to improve consistency and reli
added methods to convert integer values to Enum objects in AsmRuntime . java to enhance type safety and improve code clarity
add miss tag ( # 6064 )
use a fixed thread pool for the request image loader to reduce memory usage
changed access modifiers of several fields and methods in BaseTableUpsertMetadataManager to protected and refactored preloading logic to improve encapsulation and streamline
replaced occurrences of " ن و ا ر " with " أ ي ا ر " and updated " أ
replaced calls to ` image . equals ( ) ` with ` hasImageEqualTo ( ) ` in ` AbstractSunSecureRule . java ` to improve cl
camel - 19189 : camel - jbang run command should support repository selection
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding invalid score processing
added cleanup method to OnStartupTriggeringPolicyTest to ensure the test file is reset after each test execution
updated focus request method in FilterConditionEditor and modified focus handling in FindAction to improve user experience by ensuring input field focus is properly managed
[ hotfix ] [ runtime ] make checkpointcleaner thread - safe
added a new file ` XPathWhiteSpaceTest . java ` to test XML schema validation to ensure correct handling of white - space elements in a schema
when set rollback flag , do n ' t overwrite the trie log ( # 5968 )
pdfbox - 4892 : fix typo find by codespell on fossies . org
remove @ test on slow ci server
update parentPath logic to use endsWith for consistency to ensure correct handling of trailing slashes in file paths
added a print statement to display the skin file loading failure to aid in debugging and troubleshooting the skin file loading issues
fix ( level2 ) : add dirty check to level 2 update
added a new static final Result UNDEFINED in the Result class to represent an undefined state in the testing framework
no effective change - change test to use generic in test
make uploading job multi - part operation non - blocking
add option to ignore miss journal file during recovery
disable child count calculation in vertical node view layout
replaced the ` pos ` variable with a ` sizeMask ` variable and modified the ` ensureAvail ` method ' s logic to improve variable management to en
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest to ignore failing tests to address instability of tests
fix arrayindexoutofboundsexception ( patch by jbellis )
[ hotfix ] fix checkstyle violation in filemanager
TransformFunctionType can now transform various mathematical functions as well as general mathematical functions
8133802 : fix doclint issue in javax . lang . model variableelement class
8037550 : update rfc reference in javadoc to rfc 5280
fix : fix junit test failure with java 9 +
updated ListActivity and NoteAdapter to replace HashMap with SparseBooleanArray for item selection to improve performance and memory usage by using a stronger memory
removed unnecessary spacing in conditional statement to improve code readability and maintain consistency
updated path validation logic in ConfigFileApplicationListener and added a test for absolute resource configuration to ensure correct file path handling and validate application configuration location functionality
updated ` TaskViewSimulator ` and ` TaskThumbnailView ` to initialize ` mPositionHelper ` with ` Context ` and modified how ` PreviewPositionHelper
[ java ] do n ' t publish new leadership term after truncate .
pmd : improve error reporting
updated the skip logic in ByteArrayInputStream . java and added a new Skip . java file for testing the skipping functionality to improve the skipping mechanism ' s
refactor the update logic in UpdaterTask . java to improve readability and maintainability of the code
peer : make max _ headers public
add ` rt . jar ` to the standard module dependency list for lwjgl .
removed redundant frameration handling and adjusted disconnect logic in AbstractHandshakeHandler . java to streamline connection handling and improve code clarity
None
added a check for committed status before sending error responses to ensure that error responses are only sent after the response has been committed
modified condition checks and loop conditions in HttpSession . java to ensure proper handling of non - negative hold values to improve robustness of session management logic
updated fade - out behavior of ` HomeGestureTutorialController ` and added conditional background tint in ` SwipeUpGestureTutorialController
[ core ] fix serialization of prefab with unknown component
refactor external group creation logic to directly include " internal . superuser " to the external group set to simplify group membership management by eliminating unnecessary
added a validation check for non - existent accounts in TransferActuator to ensure that a non - existent account transfer does not proceed further processing
use file . separator in test to avoid window path issue
ggb - 2118 do n ' t show input help panel when there be an error
updated GpsMainActivity to retrieve the description from the session instead of an empty string and replaced direct service intent with EventBus posting to improve event
fix jsoup non - visual regression test on window
* add androidnativebufferallocator for good control over buffer allocator
added checks for flags starting with " ! " in Main . java , PrimaryItem . java , and Util . java to improve flag handling logic to ensure
NOPMD ( we do n ' t want to catch exception )
changed the condition from equals to = for ITEM _ USE _ GRANT _ SELECT _ REWARD to ensure correct use of the ITEM _ USE _ GR
fix test and add a tostring to the priorityelement
bug - id : fix unit test break by affinityapi unit test
added a null check for the command and updated argument handling to include help options to improve error handling and provide users with help when the command is null
increased the initial capacity of LightOutputStream from 7 to 4 in multiple classes to improve performance and reduce memory usage during execution
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
modified ClassWriter . java to set showBlank before displaying a blank line and added a new class T8032819 . java to improve handling
removed assertion check for length of a person
modify the file extension check to handle null extensions gracefully to improve robustness by preventing potential null pointer exceptions
fix miss contact info option in contact right button menu
fix possible deadlock in slotsharinggroupassignment
simplified the loop condition for determining the launcher shortcut position
updated socket binding and closure logic to ensure proper resource management and prevent potential resource leaks
added functionality to manage the removal of removed items in BookmarksListRootFragment and MediaDetailPagerFragment to improve user experience by ensuring the most recent item
updated log message to reference the element ' s center point to improve clarity and accuracy of log messages regarding action offsets
added a new file ` bug4865918 . java ` to test the behavior of a scrollbar with a specific mouse event to address bug 4
ambari - 20542 . kerberos : replace deprecate velocityengine with velocity
add quest group triggers to the quest command handler .
save total amount of data for all account
added @ ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to ensure proper string representation of objects for better debugging and logging
updated the description URI for the CloudService annotation to use a constant instead of a hardcoded value to improve maintainability and consistency of configuration management
removed viewport component and scroll pane from the BrowserPanel to streamline the user interface by eliminating unnecessary components
updated key handling in ` LwjglInput ` , ` ParticleEditor ` , ` Layout ` , and ` TWL ` classes to differentiate between
added a conditional check for " moreIndexingFilter . indexMimeTypeParts " before retrieving parts to allow conditional indexing of MIME type parts based on configuration
added author pattern to parse comment text to improve the handling of comment authoring in the documentation
hbase - 18309 add delete _ table and create _ table metric ( addendum )
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for table access to enhance schema management
updated oauth2LoginLinks method to accept MultiValueMap for query parameters to enhance flexibility in handling OAuth2 error messages
updated Hijrah calendar name and locale specifications to improve clarity and consistency in calendar representation
disable audio on firefox if we ' re not in firefox yet
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the ` InterceptorConstants ` constructor from ` InterceptorConstants ` to
fix create table test _ 6 with default value
formatted code in WriterRecordBatch . java and StreamingAggTemplate . java for consistency to improve readability to enhance code maintainability
[ hotfix ] fix checkstyle violation in executiongraph
added functionality to control the addition of " FROM " statements based on a new flag in the Delete class to enhance SQL deletions by allowing users to
replaced success check with multi status checks and updated response handling in SynchronizeFolderOperation . java to improve handling of multiple status scenarios and enhance
refactor applicability checks in RecipeScheduler to use a new utility method for better readability and reusability to improve code maintainability and
updated regex pattern in LogAnalyser . java to improve identification of log line characters to enhance the accuracy of log line parsing
camel - 16400 : make camel - google - cloud an integration test for camel - test - infra
fixed - search params in redissonsearch should use max - min - exclusive instead of max - min - exclusive . # 3332
[ cst - 5288 ] fix compilation error
[ IfcModel ] avoid npe when global id be null
replace equality check with a custom comparison strategy to improve flexibility and maintainability of the comparison logic
fix ( core ) : avoid unnecesary html sanitization
added a new test class TestArrayCopyToFromObject for testing array manipulation to ensure proper exception handling for ArrayStoreException related to non - array types
refactor insert statements to use Escaper for Python directory handling to improve code readability and maintainability by standardizing string escaping
fix regression in jetty - 10
add miss variant of findfiles for backwards compat .
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test as unstable due to instability
do n ' t swallow failure in testinternalbuffer .
modified the autoloading method to include a parameter for a lower name in the autoloading process to enhance flexibility by allowing the caller to specify a
added server version comparison and handling in CustomPlaybackOverlayFragment and PlaybackController to ensure accurate server version preferences based on user settings
removed redundant calls to ` writeJAASConf ( ) ` in ` BasicKrb5Test . java ` and updated the KDC principal key
refactor Jsr250Voter to conditionally return ACCESS _ DENENIED based on the presence of Jsr250AttributeFound to
mp4parser : fix checkstyle error
added a constant for HS2 proxy user and modified session parameter handling to ensure proper handling of session parameters when using the Hive server proxy
camel - 7999 : hdfscomponent should use snappy codec if available . thanks to franz for the patch .
added a 1 - second sleep in HttpClientTest . java to ensure proper synchronization during test execution
fix bug # 56864 - make sure we delete cell from array formula group
update glyph layout calculations and add newline for improved readability to enhance glyph positioning and address issue with multiple whitespace characters
updated references to ` ISTIO _ BIN _ PATH ` and simplified image loading in ` Fabric8IstioIT . java `
replace direct calls to ` ReportPlaybackStartAsync ` and ` ReportPlaybackProgressAsync ` with a call to ` TvApp . getPlaybackManager (
simpleauthority : fix resource leak
ignore maploader hitting eviction on initial load ( # 16276 )
replaced bitwise OR with a logical AND operation for LENGTH _ BIT and ERROR _ BIT to ensure correct concatenation of constants
improve debugging for miss read policy
added a SoftReference for CompositeFont and used it for concurrent access to improve memory management and prevent potential memory leaksage
changed prefHeight assignment from a getter method to a default value of 0 to simplify the height calculation and avoid unnecessary method calls
drools - 2516 dmn dmnfeelhelper # validate dmn expression with unknown variable error ( # 2517 )
removed unused import statements and cleaned up code in multiple Java files to improve code clarity and maintainability
modified the access modifier of ` finishRunningRecentsAnimation ` method from private to public and updated execution method calls to use ` MAIN _ EXECUT
added null checks for node ID and edge type in ElementFactoryImpl and updated value handling in ImportContainerImpl and ImporterGDF to improve
add log when drop unknown function response
nifi - 5968 : fix bug where two bin can create same file
refactor the way the closest CoreBuild is found by using the destination coordinates instead of the coordinates to improve accuracy of tile retrieval for better functionality
[ scb - 759 ] skip copy request with content - length ( # 759 )
updated Java2TypeScriptTranslator to handle string literals and modified SyntaxTests to assert expected values to improve TypeScript translation accuracy and enhance test coverage for
updated filter calculations and sizes in multiple Java files to improve filter performance and resource usage
hbase - 18792 add - allregions option to regionserver to try all region on a regionserver
remove node . environment in cassandraconnectorfactory ( # 7170 )
reset cursor position to prevent cursor out of bound
added minimum size checks for frame sizes in CallDialog and adjusted new frame sizes in OneToOneCallPanel to ensure better UI consistency to improve layout responsiveness
fix miss update for fall state ( # 6683 )
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit ' s TestSuite and TestSetup classes instead of manual setup methods to improve
refactor KerberosPrincipalDAO to use dependency injection for KerberosPrincipalHostDAO and improve removal logic to enhance code maintainability and ensure proper cleanup
removed the ' true ' parameter from the getTableSnapshot method call to simplify the snapshot retrieval process
if the keepalive timeout can not take place , log an error instead of incrementally report it .
update error message to point to " Monetization setup " , then paste the base64 - encoded RSA public key into the build hint to enhance
updated ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` for folder display name to improve cl
[ drools - 7 ] add support for boot - inf / resources to determine the package name
added an assumption to skip tests when the runtime version is 19 to ensure compatibility with features starting from version 19
removed context parameter from assignTargetsForSplitScreen method and updated related assignments to simplify method signature and improve target handling logic
[ hotfix ] fix checkstyle violation in leaderlatch
added methods to initialize zk - SNARK parameters in SolidityNodeHttpApiService to facilitate the retrieval and serving of additional parameters for
get depth in blocks from transaction . getdepthinblocks ( ) fix .
renamed ` longtitude ` to ` longitude ` and updated related methods for clarity and consistency to improve code readability and align with
set default platform name to ios .
refactor PageEditClient to improve code readability and maintainability
[ web ] fix canvas context usage
pdfbox - 4071 : fix typo find by codespell on fossies . org
added error handling for the nextOutgoingFrame method to improve robustness by handling potential exceptions during frame processing
fix # 2913 - classnotfoundexception : sun . reflect . reflection with jdk 11
added logic to reset parent category references to null when a category is detached to ensure proper parent - child relationship management for child categories
add more language to contrib manager dialog
added a ` vwap ` field and updated the constructor and methods for the ` Ticker ` class to include it to enhance the Ticker class
added functionality to display a " no widgets " view and updated bottom inset handling in the Search and Recommendations feature to improve user experience
fix tinting of node in worldrendererimpl to match gsoc default .
set the primary color of the message service to match the primary theme color of the application
refactored ShadowUsbManagerTest to improve test clarity and maintainability
improve logging of evaluation process
added a call to update the selected configuration to ensure the UI reflects the latest configuration settings
update AndroidGraphics to ensure a minimum size of 1 to avoid zero width or negative values in rendering dimensions
use linkedhashmap instead of hashmap to maintain order
replaced the native closure manager implementation with a ClosurePool instance to improve flexibility and maintainability of the closure management functionality
camel - 14263 : migrate routetest to junit 5 ( # 4529 )
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , to implement and test the K8
remove test code . abstractimportsourceservice have a generic type set ' recordtype ' .
refactor authentication comparison logic to use a new method to improve readability and maintainability of the code
added a condition to return false if the x86asm system property is not enabled to ensure compatibility with 64 - bit Java execution
refactor code to use a local variable ` callNodeType ` instead of accessing it directly from ` callNode ` to improve code readability and
added a new annotation ` @ Insecure ` and refactored the constructor in ` MessageBuffer ` to use it to enhance security by indicating that
added new configuration variables for Hive settings in HiveConf . java to enhance configuration management and improve integration with Hive ' s settings
initialize collections properly to avoid null pointer exceptions when accessing resource sets
lucene - 3641 : fix multireader to correctly propagate readerfinishedlisteners to clones / reopened reader
refactor SecureDirectoryStream and related classes to improve code organization and maintainability
simonstewart : fix the selenium test for issue 297
replaced calls to ` getFirstTypeArgument ` with direct calls to ` getFirstTypeArgument ` in ` GsonTypes . java ` to simplify type
changed return types of keySet ( ) and values ( ) methods from Set < Integer > and Collection < Integer > to KeySet and Values in Int
added a duration property and updated motion behavior to accept a duration instead of a fixed value to enhance flexibility by allowing customizable animation duration
removed logging statement regarding subtitle validity to streamline the code by eliminating unnecessary trace logging
bump up major and minor version to 9 and 10 .
use java version - specific warning in ` stacklocator `
update the parser configuration to support java 16
adjusted padding behavior in ExpansionViewHelper . java to accommodate a new condition for setting background drawable based on the replies list size to improve user
add callback on backup replica async operation to release resource
added metadata handling functionality to SeedUrl and SeedResource classes to enable storage and retrieval of additional metadata related to seeds
fix nullpointerexception in oopath when bind pattern
[ hotfix ] [ test ] fix typo in testcoprocessorwhitelistmasterobserver
ww - 3432 change name of annotation action to package name
updated assertions in IterableTest to use explicit null types to improve type safety and prevent potential null pointer exceptions
added stream and parallelStream methods to MapIterable , PrimitiveObjectMap , and MapIterableTestCase classes to enhance functionality for processing elements in a stream
change return value from notifInfo to clone to ensure that the original notifInfo is not modified when returned
fix for regression in previous fix
modified AEADBlockCipher . java for code optimization to enhance performance and maintainability of the AEAD block cipher
added isVariableLocal method to ILocalVariableAwareVariablesMap and isVariableLocal method to VariablesMap , and updated related methods in WebVariablesMap
added a check for null id and updated the default resource mode in PackageResourceTable . java , and changed the default resource mode in Robolectric
tmi - TrueTypeFont : skip truetypefont underline word if no upem available
refactor SignPlugin to accept a List of HTTP message readers instead of a static MESSAGE _ READER to enhance flexibility in configuring message readers for
modified cache handling logic in Int2ObjectCache . java to improve performance and memory usage efficiency
added validation for MavenDeployer in StandardMavenAuthenticationProvider . java to ensure proper handling of remote repositories during authentication
fixed typo find by codespell on fossies . org
[ enjavamethod ] improve error message ( # 14965 )
refactor HiveFunctionRegistry to improve function renaming and streamline function list management to enhance code clarity and maintainability while optimizing
resolve intermittent test failure with ci
modified the method ` getBuildTargetForAlias ` to include a ` possiblyFlavoredAlias ` parameter and adjusted its logic to handle cases where the alias
camel - olingo2 fixed the odata 2.0 parser issue
added imports for Map and ImmutableMap , and modified version retrieval logic to provide clearer fallback options for version handling
fixed npe in expunge vm command when vm expunge be do by the user .
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that certain classes or methods are outdated and should not be used
refactor notification title handling in ONDashClockExtension and AlarmReceiver classes to use a unified method for title retrieval to improve code maintainability
renamed ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and updated test assertions to use ` assertTrue ` for consistency to
replace ` commit ( ) ` method with ` apply ( ) ` method in multiple classes to ensure preference changes are applied asynchronously
updated the session creation in AsyncTimeoutTest to use an IdleListener instead of null to ensure proper handling of idle connections by allowing for better resource management
add test identifier to bigqueryioit ' s test
set the background resource and reset the icon in HotseatPredictionController and purge in BubbleTextView to improve visual consistency and prevent potential memory leaks
mondrian - change ` ` flush - after - query ' ' property name to ` ` flush - after - query ' ' .
add test for native system query
[ lime ] fix npe when prediction have no output
added an argument list to AppleSimulatorController and updated InstallCommand to handle command - line arguments to enhance functionality by allowing users to specify input
refactor code to use a local variable for the area to improve code readability and maintainability by reducing repeated method calls
check if the state of the pipeline and the state of the manager be available before attempt to proceed with the lifecycle operation
added clipping to the background of the QsbWidgetHostView to enhance the visual appearance of the background to improve the user interface by making it
added flag processing logic and improved string splitting in multiple classes to enhance flag processing status reporting and handle empty flag cases
improve floatingtext render performance
[ gr - 46711 ] fix profiler initialization for libffi
added getter / setter for transactional field .
add regularization support to base layer in the api
catch exception on read / write failure
changed the colorStack variable from static to instance variable to allows each instance of GlyphLayout to maintain its own color stack configuration
updated getMappedStatement and hasStatement methods to return true instead of false to ensure proper handling of mapped statements in the application
convert tradableIdentifier to lowercase when retrieving depth from btce to ensure consistent data retrieval regardless of currency case
fix unit test after change in master
remove the versionedhashes from the enginepayloadparameter ( # 6064 )
reset trigger price when offer be remove
refactor code to improve readability
remove system . out . println from i18npagecontroller
hbase - 2592 addendum to fix checkstyle failure
fix : set loaded property after save manybeans
added a boolean flag to always save the URI in the FormAuthenticator class to allow configuration of the always save URI behavior
added two native implementation methods for setting layer type and layer paint in ShadowRenderNode to support rendering operations within the ShadowRenderNode framework
updated import statements and added functionality to display the popup menu in LWChoicePeer . java to enhance popup menu visibility control and ensure correct accessibility
make sure heap dump be not order - safe
fix deprecation warning in test wrapper for core , java and examples - java module
improve logging and fix nullpointer bug
add warn message when property file can not be read
refactor SessionDataSet initialization to use try - with - resources statement to ensure proper resource management and automatic closing of the dataset to avoid potential memory leaks
added checks for multicast support and network interface status to ensure outgoing connections are only established on valid and capable network interfaces
updated String constructor to include length parameter to ensure correct parsing output with specified length
updated methods in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to set consume time for energy instead of free time to streamline
added a method to set an invalid session strategy to enhance flexibility in session management configuration
give more information when we fail to deserialize a protobuf annotation
added a new test class ` MapAssert _ containsKeys _ Test ` for testing key assertion functionality to ensure the correctness of key validation in map assertions
replaced direct instantiation of ` NewProxyPreparedStatementMethods ` with a new interface ` JDBC4TemporaryPreparedStatementMethods ` and added setter methods for various stream types
added an ` ensure ` method to ` ServerWebSocketContainer ` for managing WebSocket connections to ensure proper initialization and configuration of WebSocketcontainers for the
replace ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to ensure immutability and thread - safe implementation
pdfbox - 4892 : avoid npe if curveto ( ) call without initial moveto
added EMPTY constant and refactored hooks initialization in Method . java to improve code clarity and eliminate redundant checks for empty hooks array
added a grantAccess flag and modified the return behavior in MockAuthenticationManager to conditionally deny authentication based on its value to enhance security by allowing access
update joblistener api to accept jobexecution instead of jobexecution
updated file write logic to check if the file can execute before returning true to ensure that only writable files are written to avoid potential errors
feat ( ruby ) : update protoc to v3.15 . 3 ( # 168 168 )
change parameter name to distinguish between sampleevent and event
added constants for battery level and annotation , annotation , and start timestamp in BundleConstants . java and updated the CustomUrlManager . java to store additional values
fix searchexpression to work with complex language
findbugs : do n ' t shadow geowidget
updated JoglGraphics resize method and modified texture parameters in ProjectiveTextureTest to improve texture handling and compatibility with RGB565 format
change return type of setResourceToDelegate ( ) from void to File and update file creation assertions to improve file handling and ensure file is writable
camel - 7999 : added support for intercept property from a spring xml file .
updated time comparison from ' > ' to ' > = ' in ActionScheduler . java and adjusted the expected value in TestActionScheduler . java to ensure
updated debug log path to use a temporary directory and added null check for debug _ log to ensure debug log files are created only when necessary
chore ( worldrendererimpl ) : fix debug hide issue
add pipe . resetgate ( ) to reset pipe ' s gate state
encapsulate TestSupplementary execution in a try - finally block to ensure locale is reset to maintain consistent locale settings after execution
fix color for team [ 1 , 2 ] ( # 1122 )
replaced Set with ArrayList for activeMatchedStates and added conditional logging for matched states to improve performance and enhance logging efficiency
fix inspection violation : code style issue | unnecessary null check
updated error messages and added exception handling for invalid types to improve error reporting and maintain consistency in exception handling
make call tree printing easy to debug
added null checks and improved note handling in DetailFragment . java to ensure robustness and prevent potential NullPointerExceptions
added peakTasks tracking and modified loading ratio calculation in AssetManager . java to improve task management by distinguishing between loaded and peak tasks
simonstewart : make the firefox driver windows - compatible .
added new constants for nutchScoreMDName , nutchFetchIntervalMDName , and updated references accordingly to improve code organization and
updated import statements from commons - collections to commons - collections4
updated the condition to check if ` zkController ` is null and added a new method ` isShareSchema ( ) ` in ` CoreContainer ` ,
updated sizeInBytes method calls to accept a boolean parameter to ensure accurate size reporting by differentiating between segment sizes
changed the assertion from " assertEquals " to " assertNull " for version1 _ 2 in VersioningTest . java to ensure that version1 _ 2 is
updated SQL query to include ' attnotnull ' for both ' int not null ' and ' domain not null ' cases to ensure compatibility with Post
[ java ] update follower commit position on new leadership term event .
removed the method to retrieve the content type from the request headers to streamline the code by eliminating unnecessary complexity
replaced calls to ` fillUsingLengthPrefix2 ` with ` fillSlice ` across multiple classes to enhance functionality by utilizing a more efficient
refactor compaction checks in AcidUtils and add a new test for cleanup after IOW and major table compaction to improve code clarity and
set default value for immutableStorageScheme and qualifierEncodingScheme , and update qualifierEncodingScheme to NON _ ENCODED _ QUALIFIERS to ensure
added two new Java files for Pojo and Rest producers classes , PojoProducersCustomized and RestProducersCutomized to the project
update value retrieval from " cache " to " CACHE _ SECTION _ NAME " in ArtifactCacheBuckConfig . java to ensure configuration uses the correct
remove registration of gcm siv key that do n ' t exist .
fix miss recipe for wooden slab in ore dictionary
renamed multiple classes related to session management to improve code organization and clarity in session management components
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` parameter from the ` UndefinedSymbolsLinkerScript `
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 16189 fix table name for physical table constraint test
update spriteBatch drawing coordinates in HelloWorld . java to correct positioning of the texture based on its width and height
updated loop condition and string representation in PlayerFunctions , PlotId , and WorldGuardListener classes to improve permission handling , and corrected region removal format to en
added a deprecated version constant for Lucene 8.5 . 0 to signal that this version should no longer be used
reformatted the println statement in SSLSocketImpl . java to improve code readability and maintainability
added a test for parsing a SQL query with a signed integer cast to a number to ensure correct handling of signed integer values in SQL queries
make dependency type configurable via semanticgraphcoreannotations
refactor methods in ParseContext to remove redundant parameters related to directory and build rules to simplify code and improve clarity by consolidating target
changed the test method from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemoryWarnings . java ` to simplify the test
reduced the size of the configBlocks array from Block . blocksList . length to 256 and adjusted the loop bounds to improve memory allocation for better performance
updated version checks and log messages in BukkitMain . java for consistency and clarity to improve code readability and ensure users are aware
remove support for escaping question mark operators in PostgresDatabase to ensure correct handling of special characters in SQL statements
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and ` MutableBagFactoryImpl ` , along with a
updated the title handling logic and improved file name checks in BuildNavAndPDFBody . java to ensure proper escaping and validation of adoc and
change the default value of MqttBrokerConnection from true to false to adjust connection parameters for improved performance and resource management
updated ChangeSet retrieval logic to use the root change log if available to improve robustness by ensuring changelog is initialized before use
updated method parameters and variable assignments in multiple classes to improve code clarity and ensure consistent output handling
added database cleanup and logging in TestHiveMetaStorePartitionSpecs and TestObjectStore to ensure proper resource management and improve debugging information during tests
added a new parameter " order _ currency " to the BithumbAuthenticated class and included currency parameter in the signature generation to enhance API functionality by
remove the sseflux config a it be n ' t need
updated method checks to utilize isVoid ( ) instead of getReturnType ( ) . getFullyQualifiedName ( ) to improve code clarity and
updated YamlResource . java to replace the YAML _ READER reference with a direct YAML instance and added a new endpoint for listing YAML configurations to
pdfbox - 4892 : sonarqube fix : remove unnecessary public modifier
8068994 : jfr test can fail due to timeout
added unit tests for the ` PersonWithAList ` class and implemented the corresponding converter logic to ensure the ` PersonWithAList ` functionality
mow - 376 fix ev size after ev change
updated toolbar visibility toggling after a delay to improve user interface responsiveness
refactor SeriesReader to encapsulate initial and overlapped page reading logic to improve code readability and maintainability by reducing duplication
cloudstack - 1771 : do n ' t persist vm password on vr if vr be in stopped state
initialize usingOutputStream , usingWriter , and isCharacterEncodingSet to false to ensure proper resource management in response handling
add a safeguard for assignment side effect
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated condition to check against maxWidthWithMargin instead of maxHeightWithMargin to ensure icon dimensions do not exceed the available space in the controller
refactor methods in RegisteredServiceProperty and improve public key encoding in JwtTokenCipherSigningPublicKeyEndpoint to enhance code readability and
added content type checking and output statements for user MIME types on Unix to enhance error handling and provide clearer messaging for non - readable
added support for the Z - BEST _ COMPRESSION codec in NettyConnection to enhance compression handling and provide a default implementation
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and refactored existing logic in ` MethodHandles . java `
removed dependency on NetClientImpl in the connect method to streamline the connection process and improve error handling
added a test for handling an empty final column in CSV header to ensure that the CSV header accurately reflects the total number of fields written
added compass gravity and margins to NearbyMapFragment to enhance map navigation by allowing easier compass placement
added a new test method ` testInterpolation ` in ` GeoPathTest . java ` to validate interpolation calculations to ensure correct behavior of GeoPath
added exception handling for HiveException in multiple classes to improve error management and ensure proper exception propagation
added functionality to set the language of currentAudioTrack to ensure proper language handling for video streams
added a warning log indicating that schemas in new version are less than the old version to avoid compatibility issues with older schemas in the application
replaced manual array resizing and resizing logic with a utility method ` addAll ` in multiple array classes to improve code readability and maintainability by
mondrian : close the connection before close the datasource .
add constructor to inmemoryreactiveclientregistrationrepository that take a map of client registrations
added a resetUIState method to SchemaUpgradeHelper to manage UI state during upgrade processes
added a new boolean field ` failedStep ` and modified the condition for handling failures in ` JUnitReporter ` to improve error reporting accuracy based
update entity field regex to accommodate new entity field pattern . close # 859
added Closeable interface to Selector class to enable proper resource management and support for closing resources
replaced the parallel connection pool implementation in MaxConcurrentStreamsTest . java to optimize connection management for improved performance and stability
added multiple stringType ( ) method calls in CoreOptions . java to enhance configuration options for string type handling
added checks for character and parameter contexts in HqlQueryRenderer and updated eclipse link configuration from " eclipselink " to " eclipselink -
updated status checks and method names for consistency and clarity to improve code readability and maintainability
pdfbox - 4071 : remove unneeded code , a suggest by valerybokov
fix fail test due to change in jdbc url .
refactor ParquetFormatPlugin and ParquetGroupScan to improve file selection logic to enhance efficiency by ensuring metadata files are expanded when available
updated the success flag initialization and error handling in Jsr199Javac . java to ensure compilation is successful and improve error logging during compilation failures
added listener for table changes in DefaultSortedTableModel to enable responsive updates to the model to respond to table changes
update server config range from 49152 to 65535 to allow connections up to 65535
added document provider notifications in AuthenticatorActivity and AccountRemovalJob for KitKat and above to ensure compatibility with newer Android versions
removed logging call from MainApp . java to streamline logging functionality for improved performance
enhanced error handling in FilterChainProxy to properly analyze and handle wrapped RequestRejectedExceptions to improve robustness of request rejection mechanisms by
updated variable assignments in StringBuilder class to improve clarity and maintain consistency in length management
pdfbox - 4892 : avoid npe if filter list empty
add tbpopwatch class to facilitate performance monitoring of web app
reformatted initialization of PListStore to ensure consistent code style and maintainability
added @ Deprecated annotation to multiple classes and added warnings for deprecated functionality to enhance code clarity and discourage usage of deprecated methods
[ zeppelin - 5242 ] fix classloading issue in interpreter
fix shift - click event not work in player
updated minSdk version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with the latest
updated parameter names in DeadlineTimerWheel . java for consistency to improve code clarity and maintainability
# 1679 - enh : add ebeaninternal . server . lib . str . getname ( ) ... for query bean
updated JavaScript and CSS resource paths to use static resources and added a new WroSassProvider class to support additional resource processing to improve resource management and
added a test method to verify the functionality of the showLatestTimeseries method in IoTDBMetadataFetchIT . java to ensure that the
updated configuration parameter from " appContextLocation " to " contextConfigLocation " across multiple test files to align the configuration naming convention with the new
6711509 : ocsp checker should not wrap all exception a ` ` unable to send ocsp request ' '
make the problembenchmark ' s output solution option configurable
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to validate the reopening of a volume in ` SortedTableMap ` to ensure proper functionality of
fix slime recipe not be add to the game registry .
mahout - 1135 - vector . get ( ) : get ( ) method in get ( ) may throw indexoutofboundsex
added logic to manage the owner plot metadata for shulker entities in BukkitMain and EntitySpawnListener to ensure proper cleanup of entities
added a getDebugLogger method to DIHWriter and its implementation in SolrWriter to provide access to the debug logger for better logging capabilities
added imports for specific file - based handling and refactored MAX _ DIR _ NAME _ LENGTH and MAX _ FILE _ NAME _ LENGTH variables
added an instance of UpToTagChangeSetFilter and a method to check its visibility to enhance control over tag visibility in the Liquibase implementation
fix checkstyle issue cause by guava change
refactor BrokerRoutingManager to improve code readability and maintainability
change volume and up paint colors in CandlestickRenderer to improve visibility of candlestick data
updated layout parameters in InsettableFrameLayout to use a custom LayoutParams class to enhance margin adjustment for InsettableFrameLayout components
added duration parameter to BuildTargetDurationListener and updated related test cases to enhance rule duration tracking and improve test coverage for duration functionality
replace @ Profile annotation with assumeTrue for multiple integration test classes to ensure tests are only executed if the database profile is active
added null check for the user before processing user claims to avoid potential null pointer exceptions during claim retrieval
camel - 7593 : camel - test - infra - karaf - add support for replace from endpoint with advice .
use non - blocking hashset instead of skip list in cassandraconnection
api : add network parameter to listpublicipaddresses api command ( list all public ip address by source network id )
added battery optimization methods to ShadowPowerManager and ShadowPowerManagerTest to enable control over battery optimization settings for API level M and above
update version retrieval to use build properties if available to ensure the Jetty version is accurately configured based on build parameters
added tests to verify the verifier ' s ability to handle cases with too few invocations to ensure the system correctly handles cases with too few invocations
make tregex expression evaluation more robust
start newprofileextensionconnection with ' - foreground ' mode
updated thread naming from " executor " to " executorLauncher " and introduced a new executor " executorCloser .
replaced ` Map < String , String > ` with ` String [ ] ` for ` parseFieldnames ` and simplified its usage throughout the code to
updated logging of file name in CodeEditorView . java and added view removal logic in EditorTextActionWindow . java to improve logging clarity and ensure
updated skippedEntry to include exception messages in ClassFileReader and JdepsTask to improve error reporting for better debugging and clarity
updated Fetcher and FetcherMain to use LuceneStorage and WebDocument for indexing and web document storage to improve code organization and enhance
modified the populateBubble method to include an existing bubble parameter and adjusted related method calls to enhance bubble population logic and ensure proper handling of existing
polish ` ` make schedulingpolicy error message clearer
refactor buildRpcExt and buildRpcExtJson methods to remove array parameter to simplify method signatures and improve readability
[ java ] : add a delay generator for non - multicast message loss to medium driver .
replaced Gson instantiation with Gson and added new JsonObject with additional properties to the response to facilitate JSON serialization of the client information to enhance
added a check for zero field amount before setting the average price of orders to ensure that orders without a positive amount are handled correctly
removed the private method ` rawExecutionReports ( ) ` and directly subscribing to ` binanceUserDataStreamingService ` to streamline the code by
added a new ` fail ( Exception e ) ` method and modified the failure handling in ` LdapTimeoutTest . java ` to throw an exception with a
improve robustness of user dictionary handling for non - existing locale .
updated password handling logic in AmbariServerConfigurationHandler to check for blank password file or credential store alias before setting up the password to ensure that the
added imports and a method to check if a segment is already parsed in ParseSegment . java to optimize segment parsing by avoiding duplicate processing
[ hotfix ] [ yarn ] make application attempt failure validity interval configurable
[ geos - 6666 ] allow user to skip h2 driver unload in geoserverinitstartuplistener
hbase - 20535 make the scan readtype configurable for snapshot - based input format ( # 3209 )
added fixedheight and fixedwidth parameters with their respective getters and setters in LoginInstanceRequest . java to allow dynamic adjustment of the image size based
added a corner radius parameter to the update methods across multiple classes to allow for better control over the corner appearance during animations
added additional command descriptions and filters to the COMMANDS _ TO _ REMOVE array to improve the handling of RIBE - related commands and refine
hive - 26490 : txnhandler should retry on the pool if there be a problem with a connection from the pool ( sergey shel
fix the bug where poll backup be not call on txn - ensure - backup - reserve operation , result in npe
added a new field ' strings ' with an array value to the FirstOfStringsMatcher class to store and utilize a list of strings for improved
updated SQL DELETE statements to specifically refer to " CLIENT SELECT " instead of " ROWS " to enhance clarity and specificity of the
do n ' t retry socketexception on io error
added ` rapidInstallTypes ` to ` AdbHelper ` , ` AndroidDevicesHelperFactory ` , ` RealAndroidDevice ` , and
sorttest : make use of ? a separator instead of \ n
refactor MultimapSubject to improve handling of key values and string representations to enhance code clarity and maintainability by using a more
update return statement for the hotseat size calculation to ensure correct positioning of the launcher in different screen orientations
handle when some mediaitems require transcoding but others do n ' t .
added localization to strings using UI manager to ensure correct localization of strings using the UI manager
camel - 8124 fixed the unit test error of cxfrsconsumertest
hhh - 14791 added miss conversion to postgresql dialect
updated database query handling and added LimitedPrivate annotation to improve test reliability and enhance security by restricting access to sensitive resources
[ spark dataset runner ] add usestimermap category for test use unbounded collection
updated HTML string formatting in GpsSimpleViewFragment to use Strings . getFormattedFileName ( ) instead of getGpsLoggerFolder ( ) to improve
[ java ] remove unused leadershiptermid from service adapter .
( chore ) camel - http : fix a findbugs warning
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
rename ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to align method name with Java naming conventions
added null check for the tree before processing markers to prevent potential NullPointerException when the tree is null
pdfbox - 2852 : use bigdecimal instead of int for font size , a suggest by michael klink
fix exception when email be not find .
modified the way exclusions are handled in RawMavenResolver to ensure proper inclusion of specified dependencies and artifacts based on task exclusions
added error handling and currency pair information retrieval in DSXAdapters , DSXPairInfo , and DSXBaseService classes to improve robustness
updated test class names for consistency and clarity to improve code readability and maintainability
[ drools - 90 ] ensure incremental compilation work even if the kiebase pom be invalidate
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` before accessing its
camel - 7999 : camel - jackson should use source code generate configurer to avoid reflection configuration .
hostfield : throw noclassdeffounderror when access non - existent field .
added a method parameter annotation for CompletableFuture in the database to ensure proper handling of completionstage in asynchronous operations
updated mFreezeCheckPoint calculation to reduce the duration based on playback timing
replaced deprecated annotations in PowerMockRunner and removed unused code to improve code maintainability and clarity
replace ` typeCode ` with ` realType ( ) ` in ` AnyImpl . java ` to ensure correct type is used for unmarshalling
refactor condition checks in TabsAndIndentsVisitor for improved clarity and structure to enhance code readability and maintainability to ensure correct
replaced LuceneTestCase with TestCase in TestSingleTokenTokenFilter to use JUnit framework testing features
jbrules - 2642 html process report : improve performance
refactor JdbcStepExecutionDao and MapStepExecutionDao to include execution context handling with LOB and MAP execution context management to enhance
added a conditional check to conditionally add the child to the root folder based on configuration settings to ensure the child is only added when the configuration allows it
replaced UnsupportedOperationException with IllegalArgumentException for null actors in SplitPane . java to improve error handling and prevent potential null pointer exceptions
added support for handling parameterized Java types to improve type management in the codebase
fix nullpointerexception if forge . getmodinfos ( ) return null
change LOG to a static final logger in TicketGrantingTicketImpl to ensure consistent logging context across the application
updated SQL string for timeseries creation with RLE and compression attributes to ensure compatibility with the latest requirements of the snapshot
added a method to check for value pairs in AttrData , modified exception handling in Converter , and introduced test cases in LayoutInflaterTest to improve value validation
modified the condition for handling character inputs in a specific locale while adding utility methods to enhance the responsiveness of character input handling across different locale settings
[ java ] set aeron client connection timeout for spy simulated connection test .
added a check for specific request URIs in GTVGFilter . java to prevent processing specific request URIs that are not processed
added assertions to verify that the APK installation process is successful and confirm that the device is rooted to ensure the correct APK installation is successful
no effective change - remove oracle code
updated test cases in TestSimpleBodyHandler and TestVertxTLSBuilder to reflect changes in enabled secure transport protocols from 1 to 3 to improve
update Java library paths in DiffRuleKeysScriptIntegrationTest . java to ensure correct referencing of Java library files in the test cases
added a flag to control the dismissing of the haptic runners in TaskViewTouchController to ensure that the system behaves correctly when navig
bump common for good performance .
added stable IDs support to SymbolInputAdapter to ensure consistent item IDs across the application
updated the Bitfinex API method to use query parameters instead of path parameters to improve API consistency and reduce the risk of errors in API requests
replace instances of single quotes with double quotes to ensure proper string representation in the output
[ hotfix ] [ runtime ] add tostring ( ) method to both zkleaderelectiondriver and zookeeperleaderelection
no effective change - javadoc update
[ 3.0 ] fix triple invoker do n ' t work for generic method ( # 9200 )
replaced error logging with throwing GdxRuntimeException for file reading errors to improve error handling by providing clearer error messages
added a method to check if the Deadline has started and modified timer initialization in RawStoreProxy to improve error handling and ensure proper timing behavior
improve error message when client write to a closed channel
updated text setting logic to handle null genres gracefully to avoid potential NullPointerExceptions when accessing genres
[ flink - 20613 ] [ runtime ] fix wrong masterhooks reset in region recovery
fix deserialize json for miss mappedcontainers
avoid npe in walnode . getcurrentwalversion when there be no unpinned checkpoint
added test to retry same host on callback failure
add checkstyle rule to minimize change to documentation
added unit tests for SQL Server escape question character functionality to ensure correct handling of escaped characters in query results
tidy up code and add miss null check
replaced the synchronized block with a while loop for handling null values to improve code readability and streamline waiting logic
updated the package and import statements to reflect the new provider namespace to ensure compatibility with the latest Jaffl provider organization
add imageobject check to prevent crash
removed the ' appName ' parameter from the configure methods in InputRC to simplify method signatures and improve usability
add test for ignore dependency to install / uninstall component
danielwagnerhall : respect the flag ` ` -- headless ' ' when run test in headless mode
changed value assignment to use interned values to enhance data integrity by preventing potential data loss
added a condition to check for " MOVE " status in the connection handling logic to support additional movement actions in the code
mondrian : fix date formatting issue in fixeddateformat .
updated import statements from org . apache . curator . shaded . com . google . common . collect . Lists to com . google . common
[ hotfix ] [ runtime ] return early if spill be not start
added untrusted permission checks for untrusted users to enhance security by restricting access rights to untrusted plots
do n ' t try to create jabber connection if not register and reconnecting
updated BasicURLNormalizer to include additional character checks for URL normalization to enhance the robustness of URL normalization by allowing curly brace characters
changed access modifiers of methods related to remote animations and transitions to enhance encapsulation and restrict access to internal logic
fixed serialization / deserialization of double .
added a method to retrieve the project path and updated project generators to return a set of generated project paths to enhance project path management and improve the handling of generated project data
updated the zero digit handling and improved validation for locale ID to enhance data integrity and prevent potential errors with invalid calendar types
added a new file MSwingUtilities . java to implement MSwing utilities for displaying error messages to enhance user experience by providing a clear
camel - 1782 : camel - mail should use callback so we can do async processing .
added @ RefreshScope annotations to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration to enhance resource management and support refresh functionality
added unit test base on user forum issue
added Main class and ScriptRenderer class to facilitate the execution of script rendering in the integration tests
added a condition to check if the input state is NONE when processing content types to ensure proper handling of special characters in form parameters during request processing
None
refactor error reporting in DeploymentManager to run close hooks on context shutdown to ensure proper handling of failure scenarios to avoid potential resource leaks
add a ` ` force ' ' flag to the lexicon expect string representation for the lexicon recipe mapping
increase timeout after interrupt in constanttimebackofftest
fix for npe in … ( # 2595 )
use classloader to load holiday xml file by default
add utility class for good reflection support
removed the condition for checking the speculative type in DeferredAttr . java and added a new DoubleStaticImport . java file to simplify the assertion logic and
updated layout inflation to use ' workspace _ screen ' and added default padding for widgets to enhance the UI consistency for the workspace display
added function to update xabber account setting with save last account .
add a new method ` setvar ` to the ` Commands ` class to facilitate command - line variable setting for user input
ignore item state event for catentity . close # 3098
fix ( sql ) : handle null value in window frame
pdfbox - 4892 : increase test coverage
set the app mode to the current mode to ensure the app displays the correct mode for user interface
added methods to handle build arguments and Docker file path in ImageFromDockerfile . java and created a new DockerfileBuildTest . java file
added a null check before adding thread information to ensure thread information is only added when it does not already exist
updated the condition for valid sweep angle in PieChartRenderer to ensure proper handling of negative sweep angles
[ hotfix ] [ checkpointing ] add additional log for the recover event
added new table names to the Schema class to enhance the schema management capabilities for improved data integration
added a minimumSimilarity parameter to FuzzyQuery constructors and updated related methods to enforce a valid minimumSimilarity parameter to enhance flexibility and enforce
rename method from addActionsView to setActionsView to improve clarity and consistency in method naming
logback - 825 - add ` ` immediateflush ' ' property to outputstreamappender .
added additional auto configuration annotations to ZipkinAutoConfiguration to ensure compatibility with additional Spring Boot configurations
modified the null check in JLayer ' s remove method and added a new test class bug6875716 for improved functionality to handle null references to
updated import statements to use the non - shaded version of Google common libraries to ensure compatibility with the latest version of Google common libraries
add top - level return / unwind / unwind block to graph builder so that method can be mark a require
added null check for icon and mask in Label . java and introduced legacyRenderer property to enhance robustness and support for legacy rendering
replace deprecate ints . inttotFourbytes ( counter ) method with ints . tobytearray ( counter ) .
added null check for mObserver before calling isHomeAndOverviewSame ( ) to prevent potential NullPointerException when mObserver is null
updated the type signature of the ` thenComparing ` method and added unit tests for the ` Department ` class and its functionality to ensure correct comparison
refactor DocIdSet class to improve code readability and maintainability
update end time utc setting in UserRuleAnomalyFunction . java to use currentKey instead of null to ensure correct time representation based on the current key
added error handling for NumberFormatException in VisualScoreTagTest to ensure that NumberFormatException is thrown when parsing input values
added setting of naming policy and class loader in MockFactory to ensure proper naming conventions and configuration for mock mock objects
added a custom OriginalFormat class to the ConverterWithEnumFormat for converting objects to a StringBuffer with enum parsing to enhance functionality to support string manipulation
refactor date format to use a constant for year format to improve code maintainability and readability by avoiding repetition
attempt to fix javadoc warning
camel - 15836 - camel - aws2 - lambda : enable autowire on the aws client , fix test
server : generate mac address if it do not exist ( # 4557 )
modified Authorization header check to enhance security by restricting access to authentication headers
change method from submit to execute in TraceableExecutorService to ensure task execution is performed on the correct context
added getDetails ( ) and setDetails ( ) methods to multiple authentication classes to provide detailed context for authentication issues
update the randomUsePoints initialization to use a random value between 0 and 50 to ensure predictable behavior in varied test scenarios
replace instances of ` appendDot ( ) ` with ` endSentence ( ) ` across multiple classes to improve clarity and consistency in method naming
[ test ] make test output locale - insensitive
updated GroovyParserVisitor to use wildcard imports and added logic to handle line number and column numbers from parsed arguments to improve code clarity and ensure correct
added bounds checking for bottom and left inset configurations to ensure proper layout adjustments by preventing UI clipping clipping
refactor gesture state initialization to use DEFAULT _ STATE to improve code clarity and maintainability by consolidating state management
updated date - time imports and changed version date formatting to improve compatibility and standardization of date - time handling
updated openblas . java and openolapack . java files for consistency to ensure uniformity across the project
fix exception when close piece storage
added synchronized modifier to the initTxnMgr method to ensure thread safety when initializing the transaction manager
increased recovery wait time from 120 seconds to 480 seconds in ` AbstractDistribZkTestBase . java ` and updated socket timeout from 15 seconds to 4
add a new class ` SearchResults ` to handle search results from Lucene to provide functionality for retrieving the number of search results efficiently
initialize threadcpu refresh only if it ' s really need
initialize body if necessary
added new version entries " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " and " 8.10 .
[ aa + ] enable two line label in allapps by default
added a new API endpoint for retrieving tenant pools from the Helix instance configuration to enable better management of instance pools in the application
added early termination checks and modified logic in TopFieldCollector . java and TestTopFieldCollectorEarlyTermination . java to improve early termination handling and
updated InlineBytecodeGenerator to include isToString ( ) method to ensure proper string handling for mock interfaces in mock creation
added logging statements for compiling and preprocessing processes to improve traceability and error handling during compilation and preprocessing processes
add a static method to remove a character from a string and update the unit test to cover this
[ 3.0 ] fix metadata service protocol bug ( # 5288 )
drools - 659 add kie - api kie - api apis for transform string to expression ( # 267 )
change collection type from Object [ ] to Object [ ] [ ] for distribution value collections to ensure proper type handling for Number arrays
removed the conditional check for interesting opcodes to simplify the code structure and improve readability
removed unnecessary whitespace in ElectionContext . java to improve code readability and maintain consistency
refactor ITestDbTxnManager to improve code readability and maintainability
simplify database connection handling by using try - with - resources
added test methods for MapModel and its handling in CodeFirstPojoClient and CodeFirstPojo classes to enhance testing capabilities for Map
pdfbox - 4892 : optimize code , a suggest by valerybokov
updated item listener implementation in ScaleDialog . java to ensure correct selection state of scaleOffsets when selection is present
rename itemTravelBelt . updatePlayerStepStatus to tickBelt and add null check for attrib .
pdfbox - 4892 : do n ' t fail on empty appearance stream , a suggest by valerybokov
replaced SortedSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to maintain the insertion order and ensure uniqueness of keys
increased the value of TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 and updated its value in CancelEventTimer .
updated preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " to support upcoming features and libraries
added conditional logic to set all constructor to public in MainMockTransformer and new test classes for static methods in StaticWithPrivateCtor to ensure proper mocking
pdfbox - 4071 : avoid classcastexception find via oss - fuzz
bug 61795 - add awt . wm _ class to define the window title
updated depth calculation based on pixel size to ensure correct depth value assignment for different color models
added error errorResponseBody to handle unsuccessful HTTP responses to improve error reporting by including response error details
added a static method ` exit ` to ` TopLogging ` and simplified exception handling in ` TopThreadGroup ` to improve code reusability and maintain
updated the calculation of the start index for regex matching to correctly handle cases where the regex is not global
disable flaky test ( until optaplanner - 468 be fix )
[ hotfix ] fix checkstyle violation in defaultallocator
added a method to clean database entries without feeds to enable efficient management of feed entries in the application
change return type of appendToLabel method from void to AtomicCounter to allow method chaining in subclasses
[ java ] add noopidlestrategy to reduce noise in the log .
update CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to handle not modified responses appropriately to ensure proper caching behavior when writing headers to the exchange
truffle / instrumentation : fix bug in partial evaluation test
updated the ` paintTabArea ` method implementation in ` SynthTabbedPaneUI . java ` to correctly calculate the width and height of the tab area to ensure proper rendering of tab area dimensions in the UI
refactor getKrakenDepth and getKrakenTrades methods to accept more variable arguments instead of counts to enhance flexibility
resolve http : / / issues . apache . org / activemq / browse / amq - 2868 - implement file / ftp get
added a new method ` build ` to ` JavaProvenance ` and modified imports in ` MavenProjectParser ` to enhance JavaPro
added tracing for registering various Hive UDFs in HiveFunctionRegistry to improve debugging and traceability of UDF registration processes
increased the loop iteration count from 100 to 200 to improve test performance and reduce execution time
rename unserializablecolumnfamilyexception to unknowncolumnfamilyexception , avoid delivery of hint for deleted cell
added a check to skip writing to a writable output file in NativeErrors . java to handle cases where the test is run as root due to root permissions
added package information handling in LauncherModel . java to check if the component ' s package is enabled and log errors if it is not available to improve
cloudstack - 3661 : fix the broken sql for the fiware db upgrade path
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and improve readability in FaultTolerantChunkOrientedTask
replaced ` startsWith ( ) ` with ` regionMatches ( ) ` for string completion checks in ` LineReaderImpl . java ` to improve case -
added imports for SourcesFile classes and modified dataTable handling in Recipe . java to enhance data table management by incorporating GLOBAL _ DATA _
added functionality to dismiss all tasks in the overview if no tasks are available to improve user experience by ensuring a clean state in the overview
engine / schema : add dbupgrade system vm template for all upgrade path
removed unnecessary null checks and simplified connection closing logic to improve code readability and maintainability
refactor index access logic in SequenceAction . java to use a named variable for clarity to improve code readability and maintainability
only login when need
ignore synthetic field during reflective access
added LoggerProvider class and bindings in Configuration and ApplicationController to support application - wide logging functionality in the Ninja framework
changed the type of ` ImmutableMap . Builder ` from ` ImmutableMap < String , String > ` to ` ImmutableMap . Builder < String , Object > ` and
added a deprecation warning warning mechanism in SpringFactory and improved test assertions in SpringFactoryTest to inform users about deprecated spring context configurations to
added a method ` deepStart ` to ` Startables ` for processing startables to enhance functionality by allowing deep starting from specified startables
remove shape . reserveprimitiveextensionarray ( ) ( deprecate since 20.2 )
fixed leasers table not be able to render block .
simplify the condition for validating object names to improve code readability and maintainability
removed unused imports from TestSolr4Spatial2 . java to improve code clarity and reduce dependencies
log4j2 - 1343 fix memorylimittest failure
simplified condition checks and improved null handling in RequestHandlers . java to enhance code clarity and prevent potential null pointer exceptions
replace ' - ' with ' . ' in logger name retrieval to ensure consistent logging format for servlet names
added imports for Google Maps and modified Python environment builder logic to ensure only the PYTHONPATH environment variable is included in the build options
replaced usage of format . getFrameSize ( ) with stream . getFrameSize ( ) and added error handling for audio data size calculations to improve robust
handle null enums gracefully in elasticsearchstringlookupservice
improve error message for unexpected end of segment
added initialization of WebSocketSession policy to ensure the WebSocket session uses the correct container policy
removed unnecessary check for enum scope in initialization logic to simplify the condition for initializing static fields in the translator
added a webroot argument to the StaticHandler instantiation to allow dynamic configuration of the web root location
test : migrate test to junit 5 ( # 4473 )
[ netbeans - 4970 ] use editorregistry . isattachable ( vm ) instead of registry . getcomponentlist ( )
refactor header formatting methods to use a unified ` createHeader ` method across multiple classes to improve code consistency and maintainability by standardizing
replaced individual trade DTO imports with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and prepare for future implementation of
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is cleared before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mSourceView is null
updated comparison in FloatingDecimal . java from ` < = 3 ` to ` < 3 ` to check for negative decimal exponent limits to ensure proper handling of
updated property type checking in PropertyDescriptor and added a new test class Test7189112 to ensure proper type compatibility and validate property setter functionality
removed the maxVersion parameter when retrieving versions to simplify version retrieval logic for improved performance
set origin header only if necessary
updated task visibility and alpha handling in RecentsView and added modal animation logic in TaskView to enhance user experience by providing smo
[ hotfix ] [ orc ] fix field order in extractSingleValue method
chore ( demo ) : remove unused sample
removed unused imports and simplified string literals in PersistenceProvider . java to improve code clarity and maintainability
hbase - 2594 addendum . fix log package for hbase - rpc and rpcengine
added diagnostic logging for warnings and fixed fields in TestSpecificCompiler . java to improve error handling and reporting for compiler warnings and fields
added a return statement to the WebSocketEndpoint and implemented a test for session closure in WebSocketIT to ensure proper session management and enhance test coverage
tune state network listener so they do n ' t block indefinitely
work around bug 52258 ( update xwork 2.0 . 2 )
modify the stream stop logic to handle different stream states to ensure proper termination of video tracks in the application
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriod
follow up on gdoc change
updated method call from ` s . substream ( 200 ) ` to ` s . skip ( 200 ) ` in ` TargetType58 . java ` to
hhh - 10956 - fix identifier generation for composite identifier
change findfulltextaction and downloadfulltextaction to downloadfulltextaction . it be now download .
refactor URI registration logic to support multiple URIs in the Shenyu client to improve the handling of multiple URIs for better configuration flexibility
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code clarity and maintainability
added null checks for osdbHash and updated getParameters and getParameters lists to use generic types to enhance type safety and improve code clarity
added token transfer functionality in RuntimeImpl . java and utility method in MUtil . java to enhance token handling and validation for contract transactions
camel - 14354 : camel - ftp - add stepwise support to downloaddirectory operation
changed method reference from ` getSearchBindDN ` to ` getSearchBindPassword ` to ensure consistency in method naming conventions
added validation for join results and adjusted conditions for hybrid hash join processing to ensure correct handling of join results and improve performance during hash table operations
updated the HTTPSPDYAsyncEndPoint constructor to include an endPoint parameter and implemented local and remote address retrieval methods to enhance the functionality to
added the " id " key to the intent for sharing tweets in multiple adapters and components to ensure proper sharing functionality of tweet objects in the application
modified disconnection logic in HttpURLConnection to use a dedicated disconnect method to improve clarity and maintainability of the disconnect functionality
fix ( trace ) : change numchild to atomicinteger
fix javadoc warning ( # 1256 )
disable the test method in ValueTypeTests . java to temporarily disable the test due to potential issues with null pointer exceptions
resolve split - packages : switch to use kieresources in resourcefactoryserviceimpl
updated predicate classes to use PredicateType . NOT _ IN instead of IN , NOT _ IN , and NOT _ IN , for improved cl
replaced specific exception handling with a general Exception catch and improved account title display to enhance error handling robustness and provide more context in account
added null check for witnessService before validating permission to prevent potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to include expression string concatenation to improve readability and maintainability of the code
added a check to ensure Javadoc is not present before setting it on an item to avoid potential null pointer exceptions
rename ` holderMethod ` and ` holderKlass ` to ` holderMetadata ` and introduce a new ` holderMetadata ` field to improve clarity
remove duplicate call to revalidate with animation safety .
[ hotfix ] [ core ] return an empty group for backwards compatibility
updated the calculation of the y - coordinate in Polygon . java to ensure correct positioning by using the old x and y values
updated cache creation method to use a Configuration parameter to ensure compatibility with the expected configuration type
fix analysis of class . getResource invocation with empty string
refactor ShadowCookieManager to improve code organization and readability
added a configuration to disallow dropping external tables in Hive to maintain backward compatibility due to external table permissions
added a semicolon at the end of a conditional statement in the Stage . java file and modified the drawing method in ProgressBar . java to ensure proper syntax
sulong : cache the platform byte order
updated the property name for PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " testcontainers . windowsprovider
modified the initWebViewLogin method to accept a base URL parameter and updated the WebView initialization logic to enable dynamic URL handling based on the server version and improve
fix typo : parameterarray - > parameter
remove the requirement for a date format in the audit events endpoint
change name of expanctimer to precisethroughput
[ fix ] softbodytest be more robust to failure
changed interface visibility of SinkFunctionProvider and SourceFunctionProvider interfaces to public to allow access to these providers from other classes
[ zeppelin - 5970 ] correct log message when fail to connect to zeppelin hub
add test to check that jingle action do n ' t generate unnecessary namespace
fix oil not be craftable in some case .
improve handling of http / 2 request . fix # 1387
updated conditional checks to use ` plot . getTrusted ( ) ` and ` plot . getDenied ( uuid ) ` instead of ` plot . getMembers
updated the delimiter in SimpleReport . java to correctly form the string by adding multiple lines to improve the accuracy of the output format for better readability
removed the option to ignore symbol files in the JavapTask and updated related classes accordingly to streamline code and improve consistency in handling symbol files across
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and updated related references to improve clarity and consistency in naming conventions
added a check for null contract addresses in transaction handling to improve error handling and ensure robust contract validation
init realsense only when ! applet & & feature . intel _ realsense
ignore fail kinesis integration test
make scripttagpayloadreader # parsepayload return false instead of throw an exception
added the @ Override annotation to the getRepositoryFactoryClassName method to ensure proper implementation of the method
changed the return type of ` getExecutableCommand ` methods to ` List < String > ` and updated their implementation in several classes to enhance
refactor assignment of properties in IOSGLES20 to use the class method for consistency to improve code clarity and maintainability
deleted UploadPathActivity . java and modified ComponentsModule . java to remove unused activity to streamline the codebase by eliminating unnecessary components
updated return statements to conditionally return - 1 for term frequency and sum total term frequency based on index options to ensure accurate handling of term frequency calculations
fix ( ctclass ) : fix implicit constructor set wrong position in constructor
updated ` populateValidateNullableIfNeeded ` and ` populateValidateUniqueIfNeeded ` methods to include ` database ` parameter and added checks for database type to ensure proper
refactor Database class to improve code readability and maintainability
update springapplicationbuilder javadoc to reflect api change
refactor iterator initialization in PointInSetQuery to ensure consistent usage of sortedPackedPoints iterator
removed a substring operation from rawName to simplify the code by removing unnecessary complexity
added case handling for empty collection types in AbstractCollectionAssert to improve robustness by ignoring non - immutable collections during assertions
changed the enum declaration from static to non - static to allow for potential subclassing and enhance flexibility in enum usage
replaced AlertDialog setup in ComposeActivity with direct status sending logic and modified Compose to handle Twitlonger warning dialog to streamline user experience by presenting a warning only when necessary and simplifying the dialog flow
refactor toggleKeepInSync method to use FileOperationsHelper for file synchronization to improve code maintainability and streamline file management code
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` in ` ImageUtil
added new files ` ControllerCounter . java ` and ` DBCallback . java ` , along with a new database interface ` DBCallback . java ` to
added ' final ' modifier to the ticketId parameter in deleteTicket method to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement a migration runner for identity - based database to facilitate the execution of flyway
replace ` isEmpty ( ) ` checks with ` size = = 0 ` in ` HashMap ` and add a new class ` NotEmptyHashMap `
updated the version number from 0.6 . 0 to 0.7 . 0 to reflect the latest features and bug fixes
added @ Nullable annotations to the modify method in CompressionCodec and ZlibCodec classes to improve code clarity and handle potential null values gracefully
refactor main value retrieval and add error handling in LauncherHelper , Arrrghs , TestHelper , and ArrrghsTest files to improve
rename test classes to maintain consistent naming conventions across test files
disable hotspot methoddata : : _ graal _ node _ count until jvmci be implement
bug 52213 : fix xssfparser to parse xssf file with miss constructor
added a method to reset the icon load result in FloatingIconView to improve code reusability by allowing resetting the icon load result
fix capitalization problem with cap
updated the method for setting the top and bottom dimensions in IconRecentsView based on device orientation to ensure proper item decoration management for landscape orientation
deleted the AddAdapter . java file to remove unused or redundant code from the project
fix indexoutofboundsexception in nonstaticlifter .
added a boolean parameter ` processSortCols ` to the ` SelectOperator ` constructor and modified the logic for processing bucket column names to enhance
hbase - 2782 testlogwatcher race condition in test ( ted yu )
added a new print statement to Java2TypeScriptTranslator to enhance TypeScript translation capabilities
updated the SDK version from 4799589 to 4913185 to align the application with the latest version requirements
set default value of SPRING _ AOP _ PROXY _ TARGET _ CLASS to true in TraceEnvironmentPostProcessor to ensure proper configuration of proxy handling
removed the singletonLock variable and its usage in TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary locking logic
improve documentation for callback action
add an ability to append to a file instead of delete the table
updated MavenExecutionContextView to check maven settings against settings before returning mirrors to ensure correct retrieval of repositories based on user settings
added a name parameter to the constructors of ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer `
updated the condition for service client matching in OAuth20CallbackAuthorizeEndpointController . java to improve accuracy in matching service client references based on redirect URI
replaced manual retrieval of annotation values with a custom ` AnnotationParser . toArray ( ) ` method to improve code maintainability and leverage built - in method
updated methods in UserManagerCompatVL to use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawableForUser and getBad
[ grid ] provide platform - specific line separator .
fix regression in cmu implementation
add input sanitization to protect against invalid character in url
chore : update java and python dependency ( # 86 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and utilize the primary and secondary workspace for file output verification to
[ hotfix ] fix checkstyle violation in counter
updated methods in AllAppsRecyclerView to set containerType directly and adjusted logging in UserEventDispatcher to streamline code and improve event logging consistency
hbase - 27812 deprecate config key for buffer allocator ( # 5592 )
fix test failure on window and non - window join
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types correctly to ensure accurate retrieval of parameter types based on generic information
refactor TestFSTs class to improve code readability and maintainability
texteditbox : fix height calculation for latex string
hbase - 18793 increase size check from 0 to 100 in increasingupperboundregionsplitpolicy ( guangxu cheng )
removed unnecessary model loading and loader settings in LauncherClings . java to streamline the code for better performance and maintainability
removed redundant initialization of keys and updates lists to streamline code and improve clarity
camel - 1782 : springdatasourcebeanpostprocessor now log a debug message if a datasource be exclude .
restore undo info when delete table
camel - 11703 - camel - aws2 - kinesis : improve handling of recoverable sdk exception
refactored channel press event handling to loop through channels in reverse order to improve code readability and maintainability by eliminating repet
disable test due to unfavorable benchmarks
added a test for illegal database names in IoTDBSessionSimpleIT and improved error handling in PartialPath to ensure that invalid database names throw exceptions
need to reset the new file before cleanup
replaced ` desiredWorkspaceLeftRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx ` and updated related calculations to accommodate horizontal and vertical
reformatted code by adjusting the spacing and structure of conditional statements in CharTokenizer . java to improve code readability and maintain consistent formatting
chore : update gapic - generator - java version to 2.1 . 0 ( # 477 )
cloudstack - 2120 : fix xenserver traffic label wrong value ( xenserver default )
updated libgdx version in DependencyBank . java from 1.5 . 5 and 1.5 . 6 - SNAPSHOT to 1.5
removed the metricNames field and its getter method from SolrCore . java to streamline the code by eliminating unused metrics
change the type of the ` workingDirectory ` and ` manifestFile ` variables from ` URI ` to ` Path ` and ` Fs ` to improve path
replaced repeated condition checking for macOS with a constant variable to improve code readability and maintainability
camel - 14263 : camel - sql : fix javadoc issue
added functionality to clear and add all slots in the slotList to improve the management of slot lists in the frame
initialize m _ predCount to - 1 to reset the predicate count for accurate testing
added a custom mergeProperties method to ConfigurationSpringInitializer to merge configuration properties effectively effectively
change the parameter type of ` root ` to ` org . slf4j . Logger ` and update the logging setup logic to ensure compatibility with the
change instances of HashMap to LinkedHashMap in multiple classes to maintain the order of the elements in the aliasToWork map
add logic to retrieve the JDBC handler map based on the superclass of a given class type to ensure proper handling of JDBC types by utilizing their inheritance hierarchy
added debug logging statements for write operations in Hibernate , JPA , FlatFileItemWriter , and JmsItemWriter classes to improve traceability and
modified the language range parsing logic to remove the last semicolon from the input string to ensure the input is correctly formatted as a language range
updated closeHandler to execute from IO in VertxHttp2Handler and modified context handling in Http2Test to ensure proper context management during server shutdown to
add table cache for xssfevaluationworkbook to speed up evaluation
updated schema text formatting to use BASIC type and simplified nullable checks to enhance clarity in output representation and improve code readability
updated MongoFactoryBean to MongoClientFactoryBean and MongoClientFactoryBean in MongoNamespaceReplicaSetTests . java to improve compatibility with MongoDB client pooling
replace HashSet with LinkedHashSet for roots and leaves to maintain insertion order and ensure consistent iteration order
refactor tableScanCloneOpsForJoin initialization and error handling in SkewJoinOptimizer to improve code readability and provide better debugging information when cloning the operator tree fails
added a conditional check for null client ID in DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to use JsonFileRegisteredClientService
fix arrayindexoutofboundsexception in statlist . clear ( )
initialize variables ` userName ` , ` productName ` , ` driverName ` , ` driverVersion ` , and ` connectionUrl ` to empty strings to
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottomSheetDialog
added LongBuffer functionality to ByteBuffersDataInput for reading long longs to improve handling of larger long values efficiently
renamed variables and methods for better readability and updated time conversion logic to improve clarity to enhance code maintainability and ensure accurate time representation
801730 : c2 crash with assert ( next _ region = = null | | _ in _ gc = = null | | _ in _
added searchbar visibility based on user preferences to enhance user experience by allowing searchbar to be hidden when necessary
fix ( deps ) : upgrade to kubernetes - model
added null checks in LineChartRenderer to prevent NullPointerExceptions during rendering
added a new action for reloading the current page in the menu to enhance user experience by allowing users to refresh the menu items
updated logging level from info to warn for non - existent entries in ` plot _ rating ` , ` plot _ helpers ` , and ` plot _
updated the minimum required Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is selected before proceeding
[ geos - 5192 ] use serviceloader to load spi extension point at startup
added a method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent potential memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and a logging statement for instance updates in ` HiveViewImpl ` to
removed redundant feature settings in DocumentFactory , XMLSAXHandler , ElementHandlerFactory , and related classes to streamline code and enhance clarity
8212127 : [ testbug ] jdbstopthreadidtest fail on some linux kernel
added a ` getType ` method in ` ShadowContentResolver ` to retrieve type from a ` ContentProvider ` URI and corresponding tests in ` ContentResolverTest
updated references from ` runnable ` to ` future ` in ` ExpressionThreadPoolManager . java ` to ensure correct removal of tasks associated with future executions
updated the default HTTP port configuration to point to the " vertx . httpPort " system property instead of the default port
removed unnecessary whitespace in the addCaptureListener method call to improve code readability and maintain consistency
updated the default batch size from 10 to 3 to optimize resource usage based on available processors
[ hotfix ] [ runtime ] catch taskexecutor exception and log it
fix lambda expression fallback bug
updated error message formatting for min and max values to improve clarity in IllegalArgumentException messages
updated onMessage method signatures to include the owner parameter to enhance message handling by incorporating the owner of telegrams
added new file ` Cursor . java ` , ` Database . java ` , and ` Row . java ` for database - related functionalities to
rename classes AbstractIterableAssert , AbstractPathAssert , AtomicReferenceArrayAssert , and InstanceOfAssertFactories to improve clarity and consistency in naming conventions
# 1683 - enh : add ` ` setbeanid ( ) ' ' method ... for set bean id
updated the XSLT transformation function to use a dynamically generated XSL file name to improve the flexibility and maintainability of the code
replace direct addition of request matchers with a reusable list to encapsulate request matchers to improve code organization and readability
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing of ContactResource instances
expose request / response in a base processor
updated log messages to clarify the context of the persistable check to improve code readability and provide more informative logging for debugging purposes
reset mock control and add cleanup method in TestIndexSearcher to ensure proper resource management during test execution
updated source file retrieval to use LambdasWithInterfaces and adjusted assertions for clarity to enhance code readability and maintainability while ensuring
guacamole - 1656 : correct typo in javadoc of connection . getconnection ( ) and connection . getconnection ( ) .
tika - 2858 -- upgrade tika - parser from commons - format 2 to commons - format 3 . x
restrict fml security manager to dedicated server in package other than cpw . mods . fml .
remove unnecessary white space
updated method calls from " swap " to " rename " in TestCoreAdminApis . java and modified the NAME parameter in CoreApiMapping . java
update jsx parser to handle jsx comment correctly
added ScreenRecordRule import and annotation in AddWidgetTest . java to enable screen recording for test case b / 195263971
do n ' t fail test when buckconfig be miss
added functionality to retrieve and check the physical memory usage of the machine in TestStringBufferAndBuilderGrowth . java to ensure the test runs if the machine
pdfbox - 4892 : fix compile error ; deprecate
added a success flag to the HiveMetaStoreClient to indicate when the operation was successful
fix dstu2 bundle with wildcard include
allow tweets containing " vine . co / v / " or " amp . twimg . com / v / " in their respective
mark the AreaReference class as deprecated to indicate that the class should no longer be used and may be removed in future versions
refactor ElementType and Target classes to improve code organization and readability
added assertions and modified reference kind handling in MemberName . java to enhance error messages for invalid reference kinds and improve method cloning functionality
updated the default value of SUBMIT _ KEY _ UPDATES from " false " to true and synchronized the runChange method to ensure thread safety to enable
fix mouse event handle in editnodetextfield
camel - 662 : added support for define a bean via bean static method .
add copyright notice to newly create file .
refactor exception handling in AgentRunnerTest to use lambda expressions to improve code readability and maintainability
Updated multiple classes to include overrides for descriptions of functionality including AddDependency , AddPlugin , ChangePropertyValue , RemoveProperty , UpgradeDependencyVersion , and
replace direct addition of sizes with a local variable ` faces ` and update conditions for adding faces to improve code readability and maintainability by red
[ doc ] fix javadoc typo
rename variable to avoid confusion
updated the ` getBomReference ` method to include a ` mavenPackaging ` parameter and adjusted related logic to support maven -
update back method to use evt . getComponent ( ) instead of evt . getComponent ( ) to ensure the correct component is referenced in the event
if no certificate verification succeed , sasl should do the same
updated method signatures in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to enforce type constraints on the ' actual ' parameter to improve type safety
updated configuration retrieval from NutchConf to getConf to ensure consistent configuration usage across classes
bug fix : do n ' t remove board when there be no stub
[ java ] add getter for sessionid in remotewebdriver
added null checks before setting the time interval for nodes and edges to prevent potential NullPointerExceptions when setting time interval
removed the " - logLevel INFO - serverPort " option from the command to simplify the command for server port configuration
updated error logging to include exception message to improve error reporting for resource loading failures
update dispositionprocessor to use crawlmetadata instead of robotsheringpolicy
chore ( test ) : ignore flaky test
( chore ) camel - package - scan : fix test on window o
added imports for ByteArrayInputStream , DataInputStream , and AudioInputStream , and modified the alternativePath method to return a null input stream to enhance input stream handling
replace input initialization method to use getFirstFilter ( ) to ensure the correct initialization of the first filter
added a protectionDomain parameter to the constructor of BufferAlignmentAgent to enhance security by restricting access to sensitive information
added dispose method to ensure proper resource cleanup to prevent memory leaks leaksage
added a configuration option to disable semi - joins based on external tables to enhance performance by preventing unnecessary optimization on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that authorization is required for requesting public keys
disable the wallpaper in the launcher
updated return values and modified SQL query for SybaseASADatabase to ensure correct behavior for sequence generation based on database type and improve code clarity
nifi - 259 : fix commit / rollback logic in putsql ; add unit test
added checks to ensure master and slave XSL directories exist before proceeding to enhance error handling and ensure proper directory creation for files
updated AppTarget initialization from " id : launcher " to " id : launcher " to ensure consistent identification of the launcher application
[ network ] do n ' t allocate a networkMemoryPool buffer in framer . frame
rearranged parameters in OAuth2AuthorizationRequestRedirectFilter constructor and method calls to improve consistency to enhance code readability and maintainability by
udf : add a long description of the limitation
updated PlainFormatter to truncate the current time to milliseconds to improve precision in time representation
updated the close method to use a constant RETRY _ CLOSE _ TIMEOUT _ MS and added a new close method implementation to improve code cl
use methodhandles . privatelookup in class loading strategy helper
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
update debug log message to clarify the purpose of the log statement regarding proto event file functionality
temporary ignore failing test
updated exception message to remove unnecessary word " then zero " to simplify error message for clarity
improve error message and fix a few minor issue
add ordered bof position output to ease debug
refactor average impulse calculation and improve formula formula in ThrustCurveMotor . java to enhance readability and maintainability of the code
- fix niftyjme . setinputmanager ( ) instead of setinputmanager ( )
refactor hashCode field handling logic in UniverseBuilder . java to ensure consistent offset calculation to improve code clarity and maintainability
remove deprecated block . getmesh ( )
[ hotfix ] [ yarn ] fix typo in yarnapplicationmasterrunner
added option ` EMPTY _ WORD _ OPTIONS ` and modified matcher logic in ` LineReaderImpl ` to handle empty word options to improve flexibility in matching
do n ' t flush snapshot when commitlog be on
refactor code to streamline clipboard handling and add automatic button ID retrieval to improve code readability and maintainability by centralizing preference management
added a test for batching of posts in JoinedTable to ensure that the JDBC batch size and order properties are applied correctly in the entity manager
added handling for EntityExistsException in JpaPersistenceService to improve error logging specific to duplicate timestamp persistence
removed the deprecated ` format ` method from ` CucumberOptions ` and updated plugin handling in ` RuntimeOptions ` to ensure users are aware that the
removed the save ( ) method from the PMS class to streamline the code by eliminating unused functionality
refactor back key handling logic in ExtendedEditText . java to ensure consistent back key behavior and improve code clarity
corrected the calculation of ` newCapacity ` in ` AbstractStringBuilder ` and added a new ` Capacity ` test in ` Capacity `
replace goHome ( ) method with onNoteSaved ( noteTmp ) method to handle note saving changes effectively
patch from tilman hausherr from bug # 55082 - support xwpf endnote reference in xwpf paragraph
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo in the event to enhance event details for better tracking and auditing
added a test method for verifying the GDAL version in BridjOGRDataStoreTest to ensure compatibility with the latest features and bug fixes
added a new file ` Lifecycle . java ` to implement network event listeners and error handling to enhance the system ' s handling of network
deviantart : fix 404s on deviantart
removed unused imports and simplified the loop structure in RocketFigure . java to improve code clarity and maintainability by eliminating unnecessary dependencies
fix ( opengl ) : improve performance of opengl ' s jogl backend
add initial value for the create button ( # 1437 )
replaced PackedInts . FormatAndBits with BlockPackedWriter and modified how the collection of values is written to improve performance and memory usage by
fix findbugs and code smell in camel - base - router
removed unnecessary condition checking and streamlined data handling logic in GoAwayTest . java to streamline the code for better readability and maintainability
added support for setting properties for ` Map ` objects in ` ReflectionUtils ` and created a corresponding fluent setter bean in ` EasyRandomTest `
updated the return type of the ` post ` method from ` ListenableFuture < ? > ` to ` HttpResponse ` and created a new `
removed the ' noop ' parameter from fileUrl and added a method to prepare folders in test cases to simplify the URL construction and enhance flex
updated variable name from lastAppearedTaskTarget to lastAppearedTaskTargetId to improve clarity in logging output regarding task ID
added support for writing image and PDF construction in rtfdocumentsettings
added aggregation functionality to the TSServiceImpl class to enable filtering based on the execution parameter for path retrieval
updated test classes to extend ` WithNestedTests . AbstractNestedTest ` instead of ` LuceneTestCase ` and added cleanup methods to improve test organization and ensure proper cleanup of system properties
add functionality to enable and set the X cap server URI in the preference panel to enhance user experience by providing context - based configuration options
ww - 3990 make handleexception configurable
added stopEditing method to CodenameOneImplementation , Display , and TextArea classes to manage asynchronous editing operations to improve user experience by allowing proper execution of
nifi - 859 : fix npe when flowfile group attribute be miss
added a new parameter ` isNewComponent ` to the ` showDialog ` method and updated related logic to conditionally select a component based on user
if we fail to send the message , log it .
added a condition to skip the test for MS Windows only to ensure the test is valid for Microsoft Windows users only
added SQL _ SERVER _ SNAPSHOT constant to the TransactionIsolationLevel class to track the status of SQL server snapshots
replace the direct addition of newRecid with a wait loop that retries on closeInProgress and threadFailedException to improve control over resource management during asynchronous operations
remove dependency on jrecompat in favor of java . util . zip . zipfile
added null checks for command class and service before creating an instance of RegisteredServiceImpl to ensure proper command class handling and avoid potential NullPointerExceptions
make disk failure policy ignore by default
remove public modifier from interface method ( no longer public ) .
[ java ] allow 127.0 . 0.1 a ipv4 address for peer discovery .
added a method to set a JobIdentifierFactory in the SimpleCommandLineJobRunner class to enable configuration of a custom Job Identifier Factory
updated import statements and added ClusterDataCache to PinotSegmentRebalancer . java to improve code organization and facilitate cluster data caching functionality
alexeibarantsev : remove the container api , since we do n ' t need it anymore .
simonstewart : fix the defaultselenecthenrexception when split a line into multiple argument
add retry to glossary creation test
update schema references to use Components . COMPONENTS _ SCHEMAS _ REF to improve maintainability and consistency across the codebase
refactor EntityDeletedEvent to use JsonUtils for data handling to improve code clarity and ensure consistent type casting for deleted events
added GOP support in FormatConfiguration and updated related parser and parser to enhance media handling by supporting additional GOP support for video streams
added a new file TestProfileReturnTypePrinting . java with performance testing methods to evaluate the return type printing performance of different class instances
feat ( lock ) : optimize parallel refresh of config
refactor operator handling in MinMaxValueBasedSelectionOrderByCombineOperator to use AcquireReleaseColumnsSegmentOperator to ensure proper release of resources based on operator state
simonstewart : fix the firefox profile test so that it pass
updated method signatures and added comments to clarify device display density and bar properties to improve code readability and maintainability
do n ' t collect / report miss / dead bug
add disabled text to the import panel to distinguish between shadow and foreground color
refactor CacheControlImpl to remove multiple duplicate @ Override annotations to improve code readability and maintainability
added a check for empty day sets in ScheduledAction to return a specific date in the future to ensure the application correctly handles cases where there are no
replaced the upload button click listener with an action menu item in ShareActivity to enable single - upload functionality to improve user experience by enabling single - upload options
rename and reorganize classes related to message expression handling to improve code clarity and maintainability
added InputStream handling to MeXBTExchange and RippleExchange classes to improve metadata loading functionality by providing access to exchange metadata
added a customized ` WritableSerializer ` for serializing ` Writable ` objects in ` CrawlDbReader . java ` to enhance JSON
remove unused test class .
added configuration pid for discovery . mdns ( # 6428 )
fix a nullpointerexception in chat message scroll handling .
updated ForkJoinPool initialization to use ForkJoinWorkerThread with a customized name and added a randomization to improve thread naming to enhance
removed assertions checking for nodes in RoleCommandOrderTest to streamline tests to focus only on non - blocker roles
added a method to restore local information from the table info in PartInfo . java and refactored the writeObject method to improve code clarity and
[ hotfix ] fix checkstyle violation in vmutils
added scaling transformation for sprite batch in BitmapFontTest to improve visual quality by applying consistent scaling during rendering
[ hotfix ] [ python ] [ table - planner - blink ] ignore built - in aggregate in window function
remove the need for synchronization in gossiper .
fix : add utility method to check if any node be reachable
apps - 2087 do n ' t change to multiplication when use implicit locus
implement content type handling in FormAuthenticator and SavedRequest classes to ensure consistent content type is used based on the request object ' s content type
changed static variables to final and added null check for localEnv and device to ensure immutability and prevent potential NullPointerExceptions
fixed typo find by codespell on fossies . org
replaced synchronized block with reentrant read / write lock locking in EnvironmentImpl . java to improve resource management and ensure proper locking mechanism
added a test for reading an identity provider from another zone using the specified identity provider token to ensure that the identity provider functions correctly across multiple identity
jbrules - 2642 prevent point in time trigger from be expire
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 4842 ] optimize rebalance push subscription update ( # 4843 )
chore ( core ) : use ` ` detached . mkdirmode ' ' by default
[ java ] add a test to re - restart a follower when there be no follower .
change [ auth ] back to [ auth ] by default
updated C++ platform dependency retrieval and dependency management in DBinaryDescription and DLibraryDescription classes to improve code clarity and maintainability by standard
refactor GoogleCloudAPI to manage the initialization and unloading of OAuth services to improve resource management and resource cleanup in the application
camel - core - file - http consumer : fix file do n ' t work with dynamic done file name
solr - 2147 : add solrconfig option to disable reopening of reader in solrconfig
include dialect in mapwriter ( part 4 )
added methods to retrieve the current date and timestamp in the Update class to enhance functionality to support additional data types for current date and timestamp operations
added a new method ` dup ` in ` Attr . java ` and included a new test class ` PrimitiveTypeInBoundForMethodRefTest . java
refactor ` Condition ` from an abstract class to an interface and simplify its implementation in ` AddConfigWidgetTest ` and ` RequestPinItem
replaced TermQuery with ConstantScoreQuery and updated expected value calculation in TestFacetsCollector . java to improve query performance and accuracy to enhance search results accuracy
removed several unused imports related to Java ' s invoke package to clean up the code and improve readability by eliminating unnecessary dependencies
updated the method for providing SharedPreferences and modified the UploadController instantiation to implement direct nearby upload preferences and improve dependency injection
added support for SYSIBM and Derby modes in the compatibility logic to enhance database compatibility checks for improved functionality
refactor logging statements for consistency and clarity in TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration to improve code readability and maintainability
[ bug - 63774 ] add lot of custom property can cause performance issue due to way pid be calculate
[ geotiff ] fix for negative infinity in tiff reader
hive - 206 . make sure we close sessionstate . sessionstate in cli driver . ( siddharth seth )
use schedulers . async instead of java . util . concurrent . executor in mockrestadapter
added a default method ` selectByRuleIdSet ` to handle pagination with a specified list of IDs to improve flexibility in selecting rules based on a
in progress - batch - 825 : improve exitstatus error message
fix the multiblock not be able to select a player when click on it .
rename ` columnFamily ` to ` columnFamilyColumn ` to improve code clarity by using a more descriptive variable name
remove unused import of java . util . collections
ios update : improve usability of defaultiosinput
replace params . getBuildTarget ( ) with nativeLinkable . getBuildTarget ( ) to ensure correct build target is used
rename method parameter from ' arrayValue ' to ' values ' to improve clarity and consistency in naming conventions
added assertion to check that the message is correctly retrieved from the service
updated key handling in MappingMongoConverter to escape keys to improve key processing accuracy and prevent potential issues with map conversions
updated Timber logging syntax in NearbyMapFragment . java to improve code readability and maintainability
camel - 7999 : camel - core - untangle javatype a we do need to decouple it from camel - karaf
refactor FuzzyLikeThisQuery to use Terms directly instead of MultiFields for term retrieval to improve code clarity and ensure robustness
added support for a tabular list in the application link table format to enhance the flexibility of the application list representation in HTML output
update the code to use the new factory method .
update assignBytes method to use bw . getLength ( ) instead of bytes . length to ensure correct length is used for byte assignment
changed the method signature of getDisplayScript to return a String instead of abstract to provide a default implementation that returns null for the method
simonstewart : fix a couple of issue with the selenium rc rc rc rc rc rc .
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
added a synchronization block in NetworkConfigurationWatcher and enhanced null checks in NetworkManagerListenerImpl to improve thread safety and prevent potential NullPointerExceptions
bug 45538 - seem to fix the bug in hssfworkbook . getallembeddedobjects ( )
removed import of Shdr from ShaderNodeLoaderDelegate . java to streamline dependencies by eliminating unused imports
replace hostParams with roleParams for consistency to enhance clarity and maintainability of parameter management
added a condition to check if the base font starts with " Symbol " to ensure proper handling of fonts that start with " Symbol "
fix model hourglass not close the display properly
updated date handling in LiveTvGuideActivity to utilize TimeZone for date calculations and added a method to retrieve the current program start time to improve
updated method invocation from ` getDeclaredMethod ` to use ` Whitebox . getMethod ` and added new classes ` CommonParentTest ` and `
load freetype . so and fontmanager . so from lib directory
[ fix ] if split command use a dummy argument , invert trig power
fix safepoint elimination for loop with non - overflow guard .
change type analysis to handle misclassified java . lang . class . instance well
added a new ` LocalizedString ` class and refactored methods in ` Attr ` , ` Resolve ` , and ` Attr ` classes
add serverconfig . disableclasspathsearch to allow disable the classpath search
do n ' t use system . arraycopy where possible
change the default retries value from 0 to 2 in Reference . java and Reference . java , and update the assertion in AnnotationPropertyValuesAdapterTest . java
added support for loading settings from JSON files in TexturePacker to enhance functionality by allowing users to specify customizable settings
refactor upload image handling in AchievementsFragment to improve code clarity and maintainability by using a dedicated view for uploaded images
added logging methods and updated tracer methods in TranslatingJavacPhaseTracerTest . java to enhance annotation processing and processing logs to improve debugging and monitoring
added a new class ` CategoryInfo ` and modified the ` CategoryInterface ` to include it in the query page to enhance category management functionality to improve
swapped the order of username and password in AuthzAuthenticationRequest . java to improve clarity of error messages
refactor TaskbarStashController to use AccessibilityManager for managing accessibility settings to improve code clarity and maintainability by centralizing access
added support for handling the ^ character in the GenericSignatureParser to ensure proper exception handling by throwing an exception for duplicate elements
updated access flags in ClassVisitorDriverFromElement and added tests for stubbing enums and abstract enums to ensure correct behavior of stubbing
added null check using Objects . requireNonNull for input parameter to ensure input is not null to avoid potential NullPointerExceptions
added tests for the ` EntrySet ` iterator functionality to ensure correct behavior of the iterator when iterating through entries
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization
fix image timestamp calculation ( # 5988 )
mondrian : change locus command to use the new grobcov f2m
remove private and public key when remove account
rename keep - alive header to avoid clash
do not attempt to join a non - existent member when the map have no interceptor and lite member
remove deprecate standarInlining processor for now
removed the spillEnabled parameter from several constructors and methods in BaseHybridHashTable , BinaryHashTable , LongHybridHashTable , and LongHybrid
allow system . getenv ( ) to work in a case insensitive environment
ww - 3850 fix checkstyle error
added SerializableMode import to Mockito and updated PluginSwitch class to enhance functionality to support serialization capabilities
fix field injection point value not set when it be declared nullable
add support for isolation level in select mode by default
refactor HiveConnection to eliminate dependency on HiveConf for dynamic configuration retrieval
added isCacheable method to GlobalOrdinalsWithScoreQuery class to indicate that the query is not cacheable
added a new file ` TestStrangeControl . java ` implementing a thread demonstrating ` StrangeControl . test ` to demonstrate the use of
updated file extension from . json to . jsfile in JsFile and JsLibrary classes to ensure compatibility with the new JavaScript library naming convention
added selectionStart and selectionEnd fields along with their respective getters and setters to the ShadowEditText class to enhance functionality for managing selection indices
chore ( grpc ) : update grpc enrichment to use executorservice
added a new method ` use ` to ` Jooby ` and updated ` Router ` and tests for singleton handling in ` JoobyTest `
added a null check for the fst field before proceeding with operations to prevent potential NullPointerExceptions during lookup
updated string output formatting and improved URL verification to use the system ' s line separator to ensure consistent line endings and enhance error handling for malformed
added ABI writer class loading and updates processor bundles accordingly to improve flexibility in handling ABI writer classes during the compilation process
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to boolean methods are alwaysInverted
check if thread be stop before pullmessageservice . run ( )
refactor EnergyEndpointer class to improve code readability and maintainability
refactor presets handling in ComponentPresetChooserDialog to use an ordered list of displayed keys to improve readability and maintainability of the code
fix checkstyle issue due to unused import
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadataFactory `
deleted the files Constants . java and DistanceUtils . java to remove unused components to streamline the codebase
refactor key parsing logic to improve clarity and maintainability of the code
initialize fallbacklinker at build - time if it fail
fix ( openshift ) : add more test to rolebinding
added debug logging for session cookie configuration to improve traceability and monitoring of session cookie settings
update file name calculation to use the current calendar year instead of a static value to ensure accurate file name generation based on the current year
fix a typo ( use ' v ' instead of ' o ' ) in observableblockingsubscribe
added error handling for invalid options in JavapTask and created a new T8033711 class for testing to improve robustness of the jav
8260560 : convert jdeps and jdeprscan tool to use stream . tolist ( )
updated logging level from error to warn and added conditional checks for task shutdown to improve logging clarity and prevent unnecessary task returns during shutdown
[ hotfix ] [ network ] add enable tiered storage support to single input gate spec
do not return failure message for non - successful status in email and multiplicative service .
updated the LwjglApplication instantiation to use GL20 mode to enhance compatibility with OpenGL 2.0 in the application
remove useless check for void return type .
updated OutputMacroExpander to replace DefaultSourcePathResolver with SourcePathResolver and HumanReadableException to improve code clarity and error handling for build
fix typo in test method name ( # 15999 )
added a check for both ' / build ' and ' \ build ' paths in the MergeWordsListTask to ensure that duplicate words are handled correctly to
[ # 7384 ] instructor : give feedback session result page show more than one comment ( # 7384 )
fix checkstyle issue in container class
added a new file ` TestEscapeThroughInvoke . java ` containing a test class ` TestEscapeThroughInvoke ` to verify object escaping behavior to ensure that
use ioutils . skip / skip instead of stream . skip / skip
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 50860 - try to
change exception handling from catching Exception to catching Throwable to improve error handling by capturing broader range of issues
hbase - 25820 add eviction status and unit test for the lrublockcache
removed the check for an empty task count in RecentsView . java to simplify the code by directly returning the task count
added instance config change listener to the HelixBrokerRoutingTable to enable dynamic updates of the routing table in the HelixBrokerStarter
added CoinmateExchange and CoinmateStatic classes for fetching exchange metadata and metadata to enhance functionality for interacting with the Coinm
[ mng - 6639 ] do n ' t allow systempath to point to dependent project
pdfbox - 4892 : optimize code , a suggest by valerybokov
add ptransform . setdisplaydata ( displaydata ) which allow transform to use it
replace DefaultSubject with assertThat for null checks and add a failure assertion to ensure that null objects are correctly validated to improve test reliability and clarity in
updated the security property to disable MD2 algorithms to enhance security by allowing a longer certificate path length
updated checks in OptionData . java to ensure correct error messages for subcommands , subcommands , and options to enforce a limit on the maximum number of
update module - info . java files for mmm and ppp modules
added error handling for connection issues in IOSImplementation . java to improve robustness by throwing IOException for non - null errors
adjusted formatting in LauncherInstrumentation and LogEventChecker classes to enhance code readability and ensure proper resource cleanup
refactor exception handling and improve error logging in FileSinkOperator . java to enhance code clarity and ensure proper resource management during file operations
added diagnostic output to SchemaGenerator to enhance error visibility during task execution
[ optiq ] improve error message for invalid column reference
updated test cases for DataSource to improve test coverage for database monitoring functionality
added a set to track loaded resource paths to prevent redundant scanning of the same resource multiple times
[ hotfix ] [ test ] fix npe in testserviceutil
added null check and emitter for handling null input in RoutingInBoundHandler . java to improve error handling and ensure proper response emission
[ ekey ] add natip config param to ekeyconfiguration , fix log
updated imports from ` io . netty . buffer . ArrowBuf ` to ` org . apache . arrow . memory . ArrowBuf `
fix javadoc warning in commitlog
added checks for headers and body buffer lengths in HttpConnection to ensure compliance with HTTP specification requirements
refactor MultiTimeout to use AtomicReference for upstream subscription to improve management of initial values for timeout subscribers
decrease the number of compaction candidate to 25 for lcs
added the @ Test annotation to the TestOrcTimezone1 test class
fix string containment check in debug . parsemetricandtimerSystemproperties ( ) and parsetimersystemproperties ( )
added error handling for JSON processing in PinotSegmentRestletResource and simplified return statements in TraceContext and test classes to improve robustness by catching
refactor JTable class to handle null subclasses and add a new test class for JTable functionality to improve robustness of renderer retrieval and ensure
added conditional logic to check for the existence of the shell before adding command - line arguments to ensure correct arguments are passed based on the existence of the shell
updated the deleteWithoutSubscriptions parameter from 10 to 1 in DatabaseCleaningService . java to ensure the correct number of feeds are deleted
updated MockitoExtension to use LinkedHashSet instead of List for testInstances and added dependency injection tests in JUnitJupiterTest to ensure predictable iteration
refactor FieldMonitor class to improve code readability and maintainability
removed the call to deleteFilesAfterClose ( ) in BTreeMapTest . java to ensure proper cleanup of file resources after tests
updated the iterator initialization logic in SortedIntList . java and added a test class SortedIntListTest . java for iterator functionality to improve iterator handling and
unregister the object from the JMXHelper and change the exception handling in JMXHelper to improve resource management and error handling during JMX operations
[ hotfix ] [ rocksdb ] set rocksdb write buffer size 64mb .
updated the constructor parameters in Style . java to align the constructor with the intended functionality
fix wrong argument pass to facebookShare constructor
[ beam - 8470 ] remove log output of beam _ json _ graph from samzarunner
perf ( demo ) : update helloaudio demo to use mouseinput
refactored LoopRotateBadNodeBudget . java to improve code readability and maintainability
updated the ` convertToMongoType ` method across multiple classes to include a ` TypeInformation < ? > ` parameter to enhance type safety and
apps - 1189 do not display imaginary unit directly in input box
fix sendkeys to support empty key
added functionality to scale a BufferedImage with transparency and handle potential out - of - bounds dimensions to improve image processing accuracy and prevent errors when target sizes
removed argument checks and wrapped engine in DBMaker class to streamline database engine handling and improve code clarity
update shift state when return home .
removed the DETECTED _ ACTIVITY constant from multiple classes and updated related test cases to streamline code by eliminating unused
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty .
remove import of buildable from aaptpackageresources
cleanup : remove some dead code
update exception message to include the status code to improve clarity in error reporting for invalid upgrade protocol
corrected spacing in the assignment of blockMode to improve code readability and maintain consistency
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
removed duplicate code for permission checks in Merge . java to improve code organization and maintainability
remove deprecated getcontextholderolderolderolderolderolderolderolderolderolderolderolderolderolderolderolderolderolderolderolderolderolderolderolder
fix dependency to mary - unitselection
refactor stripQuotes method to use PlanUtils for quoting strings to improve code consistency and maintainability by centralizing quote stripping logic
refactor the rendering update logic in DLNAResource and Request classes to improve code clarity and streamline rendering management
replaced resolution repositories with remote artifact repositories in DefaultPluginManager to ensure the application uses the correct repository configurations
camel - 4998 fix the unit test error of camel - cxf
refactor PhysicsClient class to improve code readability and maintainability
add @ ignore to fix frequent failure
added a new File object instantiation to ensure the file object is correctly referenced for processing
add a deprecated method handleall ( ) for backwards compatibility
fix nullpointerexception in channel . initialize ( ) .
added logging functionality and utility methods for stack trace filtering in GenericDAOImpl and updated imports in ForumServiceImpl and ReflectionUtils to improve error
added unit test annotations to the FormLoginIntegrationTests class
mondrian : if the first argument be a function call to an unparse function , do n ' t unparse it .
refactor QUERY _ CONFIGS _ SELECTED _ MORE _ THAN _ THAN _ THAN _ THAN _ THAN _
add jdk . internal . misc . innocuousthread to suppress warning
fix ` jsontreereader ` to throw exception on unexpected element
added support for dash arguments in command line options to enhance command line argument handling and improve error reporting
added deduplication and indexing methods to both SolrDeleteDuplicates and SolrIndexer classes to enhance functionality for deduplication and indexing of Solr documents
[ flink - 16641 ] [ examples ] add support for flink planner in streaming example
added a call to clear the database in MssqlIntegrationTest to ensure a clean state before running tests
add autorelay to auto - show modeless network
added a check to ensure the parent directory exists before proceeding to avoid potential errors when the parent directory does not exist
add convenience method for write document to a stream or file via o . a . document . write
fix ` ant precommit ` failure
replace Box with BlockBox and add getter methods for the _ root variable to improve flexibility and accessibility of the _ root variable
added a parameter to the apply method in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance
added default ports functionality to the Router and FilteredRouter classes to ensure consistent port management across the application
added checks for handler initialization and status verification in SnmpTargetHandler and related test classes to ensure consistent handling of thing status updates and improve test
add parameter to method to check if instructor have submit privilege
add miss @ incubating annotation to deprecate method
refactor path parsing logic to handle multiple delimiters correctly to ensure correct parsing of jar and zip files in the file resolver
update log message to include docstores information
fix dirt block output text
tmi - image : fixed typo
increased the lock duration from 100ms to 1ms in FeedRefreshUpdater . java to improve responsiveness by allowing threads to execute faster
updated ` deserializeFrom ` method to include ` exactSearch ` parameter and added a test for it in ` MeasurementChunkMetadataListMapIteratorTest `
( chore ) camel - csv : remove unused parameter
added preferred size for FList in NavigationShareTab . java to improve UI appearance by ensuring proper row height
replace OffsetAttribute with State in BeiderMorseFilter and add a test for keyword attributes to improve state management and ensure proper handling of keyword
[ upnpcontrol ] fix javadoc link ( # 14471 )
fix mana lens stack overflow
added unit tests for Json serialization and deserialization using dynamic assertions to improve test coverage and ensure robustness of JSON handling logic
[ hotfix ] [ runtime ] fix typo in mutablecontextdatasupplier docstring
change catch block from Exception to Throwable to handle a broader range of error conditions
added a ` https ` parameter to the ` KubernetesMockServer ` constructor to support secure communication over HTTP connections
use the correct stamp for unary math intrinsification during cal cal cal cal .
updated DefaultServlet and DefaultServletTest to change HTTP headers and methods to ensure proper handling of GET requests to improve compliance compliance with HTTP standards and en
make latitude _ long _ format locale - independent
updated error handling in ShowFileRequestHandler to set response exception as well as SolrException to improve error reporting and provide more informative feedback on
added functionality to handle exceptions in ReflectorClassWriter using reflection to improve error handling and generation of try - catch blocks
added a clamp method to the Vector class to enable clamping between specified minimum and maximum values
added OAuth2 authentication handling in ChainedTokenGranter . java to ensure proper scope management for client and user authentication
rename BC _ instanceof . java to BC _ instanceof . java to improve clarity and consistency in naming conventions
added a logger instance and modified the save flags in EditorBottomSheetBehavior to improve logging capabilities for better debugging and monitoring
updated test annotations from public to JUnit 5 annotations in UaaUrlUtilsTest . java to ensure compatibility with JUnit 5 testing framework
use basicdomapeartype instead of type to avoid classcastexception
added caching for font anti - aliasing information to improve performance by avoiding redundant calculations for previously checked fonts
fix wrong block position calculation
simonstewart : update the selenium rc to reflect the new selenium binding
[ issue # 5998 ] fix javadoc typo ( # 5998 )
refactor instance handling in InjectorBuilderImpl to use a map for injectables to improve clarity and maintainability of instance management logic
updated the method calls in ` BuildTargetToRawTargetNodeTransformer . java ` to use ` getBasePath ( ) ` instead of ` getAbsolutePathToBuild
fix npe in echomessage ( # 1382 )
make jabber connection keep alive if enable .
updated the DEFAULT _ LOAD _ FACTOR value from 0.67F to 0.67 in IntHashSet . java to improve performance and accuracy of
added a method to retrieve all DataTypePhysicalVariations from VectorizationContext and updated related classes to utilize this method to improve data type physical
move j2se and html asset translator to the correct package for j2se client
modified the condition for enabling overview actions in OverviewState . java to streamline button removal logic based on device profile settings
added JPA entity annotations to BaseActivityEventEntity to facilitate database interaction with entities within the activity lifecycle
added tracing sections to ` NavBarSwipeInteractionHandler ` , ` TouchInteractionService ` , and modified ` SYSTEM _ TRACE ` in ` TraceHelper `
added a new class ` InvalidOptions ` to test the behavior of ` javap ` with various command - line options to ensure that the
added a check for mismatched display bounds in DisplayController to avoid logging errors related to incorrect display sizes during updates
move oauth code to oauthutils . getclientsecret
enable servlet exception unwrap in test
set shortcut info as default if miss
camel - 7999 : fixed seda endpoint to avoid create unbounded queue .
make batchupdate ( ) and batchupdateend ( ) accessible from jmx )
added HTTP client configuration using Dropwizard ' s HttpClientBuilder to enhance the application ' s capability for HTTP client management
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest to enhance job execution control by allowing configurable sorting order
updated the implementation of the canceling of cryptocurrency orders in CryptoFacilitiesTradeService to ensure correct cancellation of cryptocurrency orders to
ggb - 2118 close algebraviewweb ( when click )
sulong : use native function for memmove in sulong heap to avoid native memory corruption
refactor method signatures and formatting in ` BindLdapAuthenticationHandler . java ` for consistency and clarity to improve code readability and maintainability
disable the block tooltip for the menu a the tooltip manager wo n ' t give up
updated DefaultDateTypeAdapter to accept a timeStyle parameter and modified related factory methods to enhance flexibility in date and time formatting by allowing
modify playerSet formatting to enhance the display of player identifiers in the command
added a check for empty lists before returning a list to avoid potential NullPointerException when the list is empty
added handling for InvocationTargetException in ParametricCallable to improve error management by converting original exception to WrappedCommandException
updated the ` getLikeExpression ` method to support a ` boolean isLike ` parameter for expression evaluation based on its type to enhance flexibility in
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl to enable lifecycle management for stream suppliers
updated the ` runChild ` method in ` LuceneTestCase ` to set default locale for all available locales to ensure consistent locale handling across test cases
refactor multiple Java classes to improve code organization and maintainability
refactor the context handler initialization logic to improve code readability and error handling for different context types
fix camel - test - blueprint when use osgi
nifi - 2594 : fix test to not fail on oracle .
refactor the returnTypeSubstitutable method to remove unnecessary parameters and simplify its logic to improve code readability and maintainability by reducing complexity
add throttler support for xmlunit
simplified the assignment of ` argb ` in ` ColorBleedEffect . java ` and added a conditional in ` SpriteBatch . java `
refactor Annotation and AnnotatedElement classes to improve code readability and maintainability
added a new interface ` Model ` and modified ` Sheet ` , ` Workbook ` , and ` Workbook ` classes to implement it to implement the
camel - 11436 : camel - http - optimize to not use regexp
added configurable option to clear the entity manager in JpaItemWriter and JpaItemWriterBuilder to enhance flexibility in memory management
fix crash when add a shortcut with no intent
ensure coremapnodepatterntrigger be enable by default
updated exchange specifications to reflect the correct host and exchange name for Wex
added null checks for columnReaders and avoid null pointer exceptions in OrcEncodedDataConsumer and EncodedTreeReaderFactory to improve code robustness by ensuring
added null check for the files parameter in SegmentInfos . java and created a test for IndexReader after deletion in TestIndexReader . java to ensure robust
fix elasticsearch integration test ( # 4649 )
refactor return statement to use a variable for percentValue to improve readability and maintainability of the code
update limit validation to allow zero to ensure valid range handling in the code
camel - 17806 : improve log for scenario where we need to load additional route .
improve performance of hl playback
refactor NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase to extend LuceneTestCase instead of TestCase to improve test structure and integration with Lucene '
[ flink - 25957 ] [ table - runtime ] fix output handler to set next input for output stream
shader tiling : move tile to the tile on intersection
remove dbexists logic ( no need for db dependency )
trim whitespace from the value retrieved from the matcher in SQLPlusSupport . java to improve robustness by removing leading and trailing spaces
make sure we use the connector . setasync ( true ) when create the socket .
ticket # 4810 : do n ' t center the divider at the middle of the tablet
added health check metrics and corresponding endpoint to enhance the API functionality and provide better health checks for broker status
hide the shared avatars in the local file list to improve user experience by hiding unnecessary UI elements
rename mow . scss to mow . scss [ skip ci ]
apply the patch from samatov nail to fix checkstyle issue .
added logging condition to execute command only if logging is enabled to improve performance by reducing unnecessary command execution
replaced CountDownLatch usage with an assertion for checking finished spans in EventBusTracingTestBase . java to improve clarity and consistency to enhance readability and maintain
None
fix entry customization dialog and make fieldsetcomponent deterministic
[ jbrules - 3682 ] add support for rule set integration for beta node
pdfbox - 3017 : add specific exception for unauthorized ocsp response
added serverState variable and modified control flow for server failure to improve server error handling and ensure proper server state management
added a new counter for open connection counts and implemented related methods in ` SourceCounter ` and ` AvroSource ` to track and manage the
add execute ( ) method on graphqlinterfacetype to be able to specify field definition
refactor createDefaultJavaPackageFinder method to return a set of source source roots to improve code clarity and encapsulation of source root paths
changed the output writer initialization to use PrintWriter to ensure proper formatting of the output
[ hotfix ] [ test ] fix test instability in filesourcetextlinesitcase .
added support for DataTable in JRubyStepDefinition to enable proper handling of data types in JRuby arguments
modified visibility settings for author and refactored image query parameters in ` SearchImagesRenderer ` and ` ApacheHttpClientMediaWikiApi ` to en
refactor ReadSentimentDataset class to improve code readability and maintainability
improve formula error message when parse formula fails
added bindAddress method and modified WebSocket connection handling to enable socket binding and improve WebSocket connection management
[ java ] close archive and medium driver before reuse in consensusmoduleharness .
refactor size handling in WidgetGroup by introducing a hit method to simplify size validation logic and improve code readability
changed the session fixation attribute check from a string comparison to a Boolean conversion to ensure proper type handling for session fixation preference
fixed an issue with the initial state of the illedata channel .
danielwagnerhall : increment and set initial backoff in chrome .
added HTTP route configuration to the TraceExchangeFilterFunction to enable dynamic request handling based on the request method and HTTP route attributes
do n ' t ignore byte [ ] cf when precompacting .
updated return statements in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to ensure correct handling
[ # 8841 ] instructor : contribution question : add ' isnotsure ' option ( # 8843 )
added multiple calls to PublicMethed . waitProduceNextBlock for block production to ensure proper synchronization of the blocking process
remove unnecessary serializable interface
updated the connection proxy instance to include PGConnection to ensure compatibility with PostgreSQL ' s connection pooling mechanism
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
changed log level from warn to info for JWT authentication configuration and added guidance for using TOKEN _ SECRET _ ENCRYPTION property to provide clearer
marked the Hazelcast class as deprecated to indicate that the feature should no longer be used in favor of an alternative implementation
updated the handling of UNLIMITED _ KEY _ JCE _ REQUIRED in AmbariManagementControllerImpl and refactored command report
refactor NamedListCodec to improve iterator handling and tag writing to enhance performance and correctness in data processing
add null check when assign completely lost partition
added schema inclusion rule to ApiExample to exclude public schema elements from processing
update the expected value in the assertion from 3.0 to 7.0 to correct the assertion to reflect the correct expected outcome
add test for create regular polygonal ring with unclosed one - point point
added methods to retrieve the base name and dimension count in ConstantPool to improve functionality for handling string inputs in the ConstantPool class
bugzilla 52563 : add method to set debug evaluation output for next evaluation
testmodule : migrate testmodule to junit 5 ( # 4552 )
updated ExoPlayerProfile instantiation in LegacyMediaManager . java and modified condition in PlaybackController . java to exclude live TV preference to ensure proper profile
added a return statement in DynamicStyleBar . java to improve code flow by terminating execution under certain conditions
added logging statements to the Utils class for repl dump properties to enhance debugging and monitoring of the repl dump functionality
refactor ReactiveAuthorizationManager to improve code readability and maintainability
updated condition to promote strings to objects when the type is a boolean to ensure proper handling of boolean types in the method emitter
rename sulongobjectnuller to sulongaddressnuller to avoid confusion
refactor multiple Java classes to improve code organization and maintainability
add integration test for caffeine cache default configuration
[ add ] mesh . calculateboundingbox ( ) , to calculate the bounding box from the vertex attribute .
add -- target - hash - function option to target command
updated the DefaultConfigurationProperties class to improve configuration management and enhance readability
added high light color and alpha settings for data visualization in ListViewMultiChartActivity and modified highlight rendering in BarChart to enhance visual distinction of
[ java ] remove dead code .
( chore ) camel - infinispan : fix test instability
added a check to ensure localRepositoryDir exists before processing artifacts in MavenArtifactFetcher and improved locking mechanism in MavenDependencyResolver to
updated shader format in SpriteBatch . java to ensure compatibility with OpenGL ES specifications
hbase - 25923 concurrent modification of rsgroup api ( addendum )
added a try - catch block to load JSPPage and modified logging level for TLD processing to improve error handling and provide additional debug information
updated the CustomAnalyzer and TestCustomAnalyzer classes to enhance version handling and token filtering to ensure compatibility with LATEST match versions and improve
added a test method to verify the retrieval of package archive information to ensure that the ` getPackageArchiveInfo ` method correctly handles package archive information retrieval
replaced direct method invocation with MethodUtil . invoke for better access control to enhance security and maintainability by utilizing ReflectUtil for package access
added new import statements and modified progress listener in Main . java to include progress updates to enhance project configuration handling and progress reporting
simonstewart : remove unnecessary sync
fix # 172 add check for non - negative value of initializationfailtimeout .
removed the timeOut parameter from the getResult method and changed the method name from sendHttpRequest to error to simplify the method signature and improve code clarity
make isnative transient to prevent it be garbage collected
update error message formatting to ensure consistency in error reporting for exception handling
rename ruleenablethandler to ruleenablementactionhandler ( # 5060 )
refactor to improve code readability and maintainability .
added debug logging in AuthzAuthenticationFilter and AuthzAuthenticationManager classes to improve traceability of authentication processes to enhance debugging visibility and provide clearer
[ hotfix ] [ test ] fix typo in test code
replace null repository retrieval with RepositoryModel lookup and add error message to improve error handling for missing registrant repository
added support for parsing font names with extensions . otf and . OTF
refactor type comparison logic in AnnotationMatcher . java to improve clarity and correctness to enhance type handling for target and target type checks
updated Grep . java to replace " OFF " with " SEVERE " to improve error handling to provide clearer terminology for serviceability
added debug logging condition to check if debug logging is enabled before logging to improve performance by avoiding unnecessary string concatenation when debug mode is disabled
fix nullpointerexception when include / excludes be empty
added methods to handle home intent navigation in the launcher
updated maximum bitrate from " 110 " to " 30 " in the configuration to improve network performance and reduce resource usage
simplified the loop for adding options in CommandLineParser to improve code readability and maintainability
trim whitespace from the description returned by the database property
updated the output file path in XOMParserTest . java to simplify output file naming for better clarity
reformatted error log message to remove pid ( ) parameter to improve readability
added getLoadedMusic ( ) methods in MusicLoader and SoundLoader classes to retrieve the loaded music and sound properties
polish ` ` remove unused import ' '
added ScreenRecord annotations to RequestPinItemTest . java to facilitate screen recording for test case b / 215673732
bugfix 246847 - unpause result on setting change
replaced instances of ` accountsPrefCategory ` with ` mAccountsPrefCategory ` and refactored preference creation methods to improve code clarity and
smack - 212 ensure connection be open before attempt to answer .
updated StringBuilder initialization to use a calculated initial capacity based on utflen to optimize memory usage by avoiding unnecessary object creation
disable statsd by default
refactor exception handling in InterruptedException to improve clarity and maintainability of error management
refactor ServiceTicket class to improve code readability and maintainability
refactor URL handling logic in ConnectionCheckOperation . java to improve clarity and maintainability of the code
refactor conversion logic in ArgumentArrayMessageMapper to ensure proper handling of String types for Map payload to improve type safety and maintainability of the code
update collection handle to match new format
attempt to fix build
refactor : remove deprecate annotation ( # 4395 )
changed the return type of ` beginDraggingWidget ` from ` void ` to ` boolean ` and added a null check for the image drawable to ensure proper
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable the test due to known issue LUCENE - 4488
added a null check and updated component collection logic in DynamicStyle . java to ensure safe handling of null inputs and prevent potential NullPointerExceptions
tagger : write the confusion matrix once per sentence
bug 62155 - stop thread execution if sample execution fails
added unit tests to validate Bluetooth headset functionality to ensure correct behavior of connected devices and connection states
camel - 8190 fixed the c error of propertybindingsupport
added " clone " and " finalize " methods to the objectMethods set and modified conditional checks in the lazyLoader logic to include the " finalize " method
[ hotfix ] [ test ] check for null counter in integrationtestbiglinkedit
reply with a not _ implemented error .
updated the setRegisteredServiceFilter method to use serviceId directly to enhance readability and maintainability of the code
added null check for getActivity ( ) before running onUiThread to prevent potential NullPointerException when getActivity ( ) is not initialized
fix typo in log variable name .
added a new protected variable ` _ stringType ` and modified access modifiers for several methods in ` JDBCSessionDataStore ` and ` DatabaseAdaptor `
updated the suggested category in the UIMAUpdateRequestProcessorTest from " english " to " suggested _ category " and modified the test method
refactor thread name management methods to use ` updateThreadName ( ) ` and ` resetThreadName ( ) ` for improved clarity
refactor TaskletAdapter class to improve code readability and maintainability
None
make the splash progress on all platform , not just mac
added tooltip to the showCGCP checkbox to improve user experience by providing context - sensitive help
fix ( factory ) : fix declaration creation in enum factory
add miss help text for retarget and hot reload action ( # 1443 )
use stringtemplate instead of # getlabelsimple ( ) in spreadsheet command
use double instead of int to avoid int overflow
restored support for history filter with no author , repo , and action .
[ homekit ] add support to list / list user in the HomekitAuthInfoImpl class ( # 14017 )
added checks to ensure that indexedWriteMethod is not null and equal to void type in both Introspector . java and PropertyDescriptor . java
( chore ) camel - dynatrace : fix log format issue
updated method parameter names in Context and Response classes for consistency to improve code readability and maintainability
fix incorrect capability deserialize from spongebuilder .
fix test so that it pass on travis
added conditions for contract type and validation in Wallet and GetContractServlet to ensure only valid contract types trigger smart contract creation
added package - info . java files for multiple Java packages and module - info . java files to improve organization and clarity of the codebase
modified the ` add ` method to update the tail node in ` DocumentsWriterDeleteQueue ` to ensure that the correct sequence number is added to the
added duplicate handling in JavadocTool and improved test argument passing in T7091528 to enhance code robustness and maintainability by preventing
changed the default value of STRIP _ IPV6 from " true " to " false " and adjusted the substring logic for handling the IPv IPv6 address
allow add new user to login server token endpoint
added a new language detection constant and updated language checks to support both CPP and C++ language detection
replaced ThreadPoolExecutor with MoreExecutors for better thread management to simplify concurrency handling and improve code maintainability
added cache control headers and assertions in ConstraintTest . java to improve response handling and ensure proper caching management
add more logging when voice fail to say
updated HSSFTests class to include more specific test suites and modified assertions in TestEmptyDocument to enhance test clarity and ensure accurate data
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase files to improve code organization and maintainability
refactor output retrieval to handle null output gracefully to avoid potential NullPointerExceptions and ensure robustness
added access controller priority settings in Java2DRenderer to enhance resource management during access control
ignore some test failure on window .
made the HotspotThreadMBean variable final and refactored CPU time testing logic to improve code safety and clarity in CPU time validation
added check for empty comment before processing newline in TabsAndIndentsVisitor . java to ensure comments are not present in empty space comments
updated assertions in TestTriggerIntegration and changed threshold values in TestTriggerIntegration to improve test accuracy and ensure that the rate exceeds expected limits
change author and path comparisons to be case - insensitive in DatabaseChangeLog , RanChangeSet , AlreadyRanChangeSetFilter , and
implemented the ` getString ` method in ` ShadowBundle ` to ensure proper handling of null values in the map
updated date and time formatting in TweetActivity to support different date and time representations based on user settings
nifi - 3978 return an empty list if there be no connection to process
updated keyboard focusing logic and added a request focus method for EditText to improve user experience by ensuring the keyboard opens correctly for touch input
another attempt at fix classpath issue on window
avoid create new double array for solve ( )
int - 1245 , int - 1256 , int - 1256 add miss dependency on message class in spring integration test
refactor the query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a join utility to improve code readability and maintainability
updated file filtering logic to ensure selected filter is valid to improve user experience by preventing invalid file filter selections
fix a problem with concurrent modification of rtp rtp offering list .
updated the ` toString ( ) ` method in ` ArrayPtg ` to return either " TRUE " or " FALSE " based on the Boolean value to
updated import statements in PGtokenizerTest . java to use specific assertion methods to improve readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator to improve type safety and clarify final variable wrapping logic to enhance variable scope management
added ALTER TABLE statements for auto - increment columns in PostgreSQL to support database sequences and default values for auto - increment columns
replaced bitwise operations with direct value manipulation for byte reading to improve code clarity and ensure correct handling of byte values
removed assertions for physical pixel spacing in ImageParserTest to streamline test code by eliminating unnecessary assertions
updated parent initialization to call the correct method to ensure proper parent initialization
refactor code for improved readability and maintainability of the code
fix engine init and finish test in nativeenginetest .
added iteration event handling methods in multiple classes to improve event firing to enhance functionality and responsiveness to iteration events in the controller
fix memory leak in fileupload
added deleteLogs ( ) method to TestRecovery . java to enable logging functionality for testing purposes
added a condition to launch an intent to handle " twitter : / / " URLs before loading the URL in BrowserActivity to ensure proper navigation to the
[ test ] wait for deployment group to be up before next test
change visibility of listLabels log message from false to true to enable logging of list labels for debugging purposes
increase max auto retry
camel - core - optimize to reduce console output
added support for a new fraction resource type in the resource loader and converter to enhance resource management and improve data handling for fraction resources
remove unnecessary confirmwrite check in basicframe
add assertions to ensure groupId and artifactId are not null before using them to improve code robustness by preventing potential NullPointerExceptions
hbase - 27812 throw quotaexceededexception rather than donotretryioexception ( liang xie )
refactor multiple token and token filtering classes to improve code organization and enhance maintainability
refactored TestFuzzPreLoop class to improve code readability and maintainability
added a check to ensure f0 is non - negative to prevent potential negative value issues during calculations
updated the handling of foreign keys and catalog names in SchemaRetriever and TableRetriever classes to improve robustness by ensuring primary key columns are
improve performance of inputbuffer .
added SharedPreferences support to control if empty screens are allowed in the application
added a warning log for deprecated usage of cucumber - needle to inform users to transition to cucumber - cdi2 or cucumber - jakarta - cdi
refactor theme handling and improve attribute resolution in tests to enhance code clarity and maintainability by using consistent theme management approach
updated failure messages in VerifyFast . java to include Arrays . toString ( ) for better array representation to improve clarity of error messages for better debugging
no effective change - remove dbmigration annotation
modified condition checks and added proto getter and setter functions to enhance functionality and support prototype property access in the scripting engine
added randomness to the distribution of readers in TestFilterDirectoryReader to enhance predictability of random data distribution
updated displayName assignment logic to differentiate between local and remote user mentions to improve clarity and user identification within the application context
update path handling in CookieRetrievingCookieGenerator to use StringUtils to ensure a default value is used when the path is blank
fix a few javadoc warning ( # 2260 )
make use of total - backup - count ( sync + async backup ) instead of backup - count ( since it be only sync backup count ) to fire partition - lost - event
updated comparison logic in ValidationResult to use the variable ' ve . pageNumber ' instead of ' pageNumber ' to improve code readability and maintainability
fix uidropdown highlight when focused
fix checkstyle issue in soundutil . java
updated ApplePackageDescription and related classes to use ` getAppleCxxPlatformFlavorDomain ` instead of directly accessing ` defaultCxxPlatform `
fix compilation error from previous commit
changed method name from onConnect to onAccept in ServerSessionListener . java and AbstractHTTP2ServerConnectionFactory . java to align with the intended use
fix checkstyle error
8029876 : add a test to verify that logger . getlogger & logmanager . getlogmanager do n ' t throw npe
jbrules - 2642 make scripteddirectory and actiondirectory thread - safe
do n ' t expose unsafe . getobjectVolatile , it ca n ' t do anything
added support for recognizing " NEXT VALUE FOR " in the NextValExpression class to enhance expression parsing capabilities by allowing " NEXT VALUE FOR
improve error message for unsupported feature .
updated the handling of pending writes in ` BoundedLocalCache ` and added a test for clearing pending writes in ` BoundedLocalCacheTest
added order direction to QuoineNewMarginOrderRequest and set leverage level parameter in QuoineExchange to improve margin trading functionality to enable
added boundInitialization method to PropertyDescriptor and created a new Test7192955 class for validation to ensure proper initialization of the MyBean property
added a new interface ` SetDisplayModeCallback ` and modified ` LwjglGraphics ` to utilize this interface to provide a callback for setting display mode
added null check for buttonsAwatingRelease in the form to prevent potential NullPointerExceptions when managing button artifacts
improve wrap height calculation in linecell
fix typo in it error message
replace HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper to ensure predict predict predictable iteration order for parameter values
implement suggestion by valerybokov
simplified the method for retrieving the namespace URI to improve code readability and maintainability
remove nestedJoins configuration
fix the bug in listvolumes command - listvolumes be not display for root admin only
added imports and modified the constructor of ` CompletionTaskProcessor ` to accept a ` cursor ` parameter for better token management to improve code clarity and fac
set default Hive configuration variables in TestMsgBusConnection . java to ensure proper initialization of Hive settings for proper functionality
use matcherassert . assertthat instead of assertthat .
use util . createhandler instead of new handler for text renderer
fix ( ilp ) : symbolfilemapping memory size calculation overflow
removed print statements for term filters to clean up the code and improve performance
removed the Reflection class and updated import statements in Jooby . java and TypeConverters . java to streamline the codebase by eliminating
refactor ThreadlessExecutor to use getter and setter methods for finished and waiting states to improve code clarity and maintainability by encapsulating executor
[ flink - 2461 ] [ python ] remove useless try catch in datetimeformatter
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` for consistency and clarity to improve code readability and maintain
added a case for WILDCARD in Types . java and created T7034495 . java with multiple generic interfaces to avoid crashes due to crash
replaced ' do - while ' loops with ' while ' loops for better readability to improve code clarity and maintainability
fix bug introduce by last commit
do not print micronaut version if system property ` ` micronaut . version ' ' be not set
added tests for the Print _ Area functionality in the Workbook to ensure correct handling of name definitions in different workbook contexts
fix jdk 1.6 issue
updated onHomeIntent method to include an internalStateHandled parameter to ensure proper handling of internal state management during home intents
refactor dependency tree handling in CxxBuckConfig . java to improve clarity and maintainability of code
added ` showDetails ` method to ` ContactsPreferenceActivity ` and modified ` FileDisplayActivity ` and ` FolderPickerActivity ` to util
replaced occurrences of " $ apply " with " apply " across multiple files to standardize function naming conventions for consistency and clarity
fix issue with minilayer encode use hardcoded value .
update header and parameters to include a " | " for requirements and modified the since attribute format to enhance clarity in generated comments and values
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure the adapter updates its DataSet attributes after changes
added a method to set the default synchronization mode in ShadowSQLiteConnection to improve control over synchronization settings in the SQLite connection
update type checks in RemoveJavaDependenciesAdapter and add tests in Collections . java to enhance type safety and ensure proper removal of elements from a list
remove unused getter / setter in s3asyncclient ( # 8260 )
fix out of bound exception in parsertest .
include actual content in the exception if the collection do not match .
do n ' t bail out of the bailout when a fatal error occurs
do n ' t try to draw pen on hidpi screen , if it ' s too big
updated SQLXML class to improve data handling and compatibility
added a limit parameter to the getOrderBook method for enhanced order book retrieval flexibility
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` and updated related exception handling to use ` HeapOOMEException ` to standard
nifi - 259 : limit the maximum number of string read constraint to integer . max _ value
updated engine retrieval and locking mechanism in PmsConfiguration . java to ensure a default value is used when ENGINES is absent
renamed FullIterator to WheelIterator and updated exception message formatting to improve code clarity and consistency in exception handling
provide good error message if custom error message can not be generate
fix flaky test by increase wait _ chunk _ is _ ready _ in _ seconds
change the visibility of the menu item for the uncomplete checklists to ensure the complete checklist menu remains visible
updated DefaultResultSetHandler to resolve a discriminated result map and added a new Contract class with associated fields to enhance the handling of nested
refactor conditional checks for defaultHome and unregistering the receiver if necessary to improve null safety and ensure proper unregistration of the home app update receiver
added VertxGen annotation to PumpImpl . java to enable the use of Vertx code generation for improved performance
remove unnecessary casting to FileDisplayActivity
trim whitespace from token values in ConfigAttributeEditor and add a test for it to ensure that leading and trailing spaces are removed from configuration attributes
refactor ClassUsingAnotherAuxiliary and SelfClassWithAux files to improve code organization and maintainability
svm dynamichub : expose the single unnamed module via dynamichub . get unnamed module
databasemetadata : change from pg _ table to system table
fix : [ wip ] make agent . agent _ enterPRISE _ PLUS _ VALUE deprecated
updated the type casting for the rqst field in ThriftHiveMetastore . java and changed exception declarations in HiveMetaStore . java to ensure
added a new module - info . java file for the core module to define module exports and requirements for better encapsulation and dependency management to establish modular
added conditions to manage flush and fill states in SslConnection to improve handling of encrypted output during SSL operations
added logging functionality to the Log4j2LogDelegateFactory and created a new NoExceptionInInitializerErrorTest class to enhance logging capabilities
[ flink - 7029048 ] [ test ] exit gracefully if test have no server vm
refactor and rename classes related to MongoDB operations to improve code clarity and maintainability
fix : set libpqfactory by default
disable testinterprocesssemaphoreedge test ( currently fail )
added sorting functionality for resource names to ensure consistent ordering of resource names regardless of case
added a new OSvTerminal class and updated TerminalFactory to support OSV _ CPUS flavor to enhance terminal functionality for OSv terminal emulation
extended the condition to include additional file types to ensure compatibility with new file naming conventions
changed ` HashMap ` to ` TreeMap ` for ` combinedVectors ` and ` expectedSuperVectors ` in ` DrillTestWrapper . java
modified the loop condition to iterate over values instead of names to ensure that only the correct subset of values is processed
refactor WebSocket connection handling to improve code clarity and maintainability
refactor ` ShadowTelephonyManager ` and ` ShadowWifiManager ` to instance variables for ` readPhoneStatePermission ` and ` accessWifi
add parameter to standardmessageresolver . resolvemessage ( itemplatecontext , string , object [ ] , boolean performoriginbasedresolution , boolean performtemplatebased
updated reflection calls to use asSubclass for ClassVisitor and ClassVisitor classes to enhance type safety and eliminate unchecked conversion warnings in the codebase
added a new file LoggingAuditService . java to implement UaaAuditService for auditing user authentication processes
[ te ] update zone setting to allow for temperature range ( # 4460 )
do n ' t generate aop proxy for abstract class . fix # 3133
camel - 14354 : added http proxy support to camel - http
updated the MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to reflect the latest encoding standards and improvements
added jdkSerialFilter method call to System class to enable serial filtering for the application
camel - 16324 : added exchangefactory . getcapacity ( ) to log message .
changed the method ` forceFinishScroller ` to ` forceFinishScroller ` across multiple classes to simplify the interface and eliminate unnecessary functionality
added ConfigUtils import and applied environment variable to ensure that the realtime cluster configuration is properly applied
- add error reporting to avoid infinite loop
updated the retrieval of inline QSB settings to use constants for better readability and maintainability to improve code clarity and facilitate easier
fix test on window o
update regex patterns in test cases to ensure correct parsing of method arguments in test cases
use default retina mode even when no image
fix flaky test timeouts
updated package - info . java files for mmm and ppp packages
set the image URL for the Docker container to ensure the Docker image is correctly configured
knowledgeagenttest : call system . gc ( ) on teardown ( )
renamed classes AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock to improve clarity and consistency in naming conventions
replace ` createHardLink ( ) ` with ` copyFile ( ) ` for file copying functionality to ensure target directory exists before copying to prevent errors
rename method from appendToDescription to getDescription across multiple classes to improve clarity and consistency in method naming
fix ( core ) : make sure all the device be in the same device in mxnet
added a condition to check if the XML is an instance of Xml . Document before processing to ensure proper handling of XML document declarations declarations
updated test classes to use JUnit 4 annotations and imports to improve compatibility with Android testing framework
return back gaslimitrule validators since they be still actual for frontier
changed access modifier of setupData ( ) method from public to private in multiple test classes to encapsulate data setup logic for better access control
renamed the variable ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` and updated its usage in ` XMLChangeLog
[ 3.0 - triple ] fix nullpointerexception when stream be stop
[ hotfix ] [ doc ] fix doc path for restart strategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing of an SQL query to ensure
refactor methods in Common . java to improve code readability and maintainability
refactor app launch handling to use a try - with - resources statement for better resource management to ensure app launches from the correct context layer
[ hotfix ] [ javadocs ] fix typo in streamexecdeduplicate
[ hotfix ] [ kafka ] log exception when send kafka message to topic
dataes - 345 - add isImmutable ( ) and setter to simpleelasticsearchpersistentproperty to make it immutable
make sure setcoord ( ) return true for segment ( not segment )
add log to accelerate scroll .
modified the comparison logic in NGramEstimator to handle cases with empty keys and improve the accuracy of the comparison
updated import statements to switch from cucumber . runtime to io . cucumber . core . runtime in multiple files to align codebase with the
updated method calls in StatsLogCompatManager to retrieve folder icon properties to enhance functionality by accessing the correct attributes of the folder icon
updated method to use getServerName ( ) instead of getServerSlogan ( ) to improve clarity and consistency in handling server name
add skeleton test for loop predicate
added a setter method for the Box box and refactored equals method for improved functionality to allow dynamic assignment of the Box Box and enhance equals
added a new ` StringResultConverter ` class and modified ` AsmUtil ` and ` AsmRuntime ` to handle ` Pointer ` type more effectively
camel - 19751 - disable remain test on the apache ci
inverted the condition for waiting on the console object to correct the logic for object retrieval
added null checks for buffer and viewed buffer methods to ensure buffer handling functions correctly and improve code readability
change the expected path in the test to ensure compatibility with different file separator scenarios
camel - jbang - use - pre10.15 for macos and window platform
updated the constructor of Lock class to use the absolute path of lockFile instead of the file object to improve clarity and accuracy in handling lock names
replace appIcon with allApps in Overview . java to ensure correct positioning of the all apps views
update InvocationType references from Invocable to ClientDatagramEndPoint in ClientDatagramEndPoint . java to ensure consistency across the codebase
modified the SQL query to order executions by step execution ID instead of Oreder to improve the retrieval accuracy of step executions
change return value from Buttons . LEFT to - 1 and add a check for unknown buttons in LwjglInput . java to ensure proper button handling
[ task ] added test for approve and reject
refactored logging in multiple response builders to use a centralized logger instance instead of a transient logger to improve logging consistency and reduce potential
updated SsoAccessTokenProvider to simplify time calculation by removing the unnecessary minus sign from the expiration time
skip some test only on macos - github - build
mondrian : implement test for create alarm suppression and summarize alarm suppression history
rearranged the conditional statements for default close operation checks to improve code readability and maintainability
fix nullpointerexception in libraryscanner
updated references from ` this . metricsContext ` to ` solrMetricsContext ` in ` SuggestComponent . java ` to ensure proper initialization of metrics
refactor file and folder output logic for clarity and efficiency to improve readability and maintainability of the code
camel - 5558 fixed the unit test error of camel - scp
[ hotfix ] [ core ] fix typo in sourceversion
added a new test class ThreadFactoryTest for thread management to ensure that the current thread starts with the expected name and handles exceptions appropriately
refactor lock period retrieval to utilize dynamic properties to enhance lock period handling based on contract support status
added a new TicketModel instance to the EditTicketPage to manage ticket updates effectively
change the feature flag for predicted apps from false to true to enable the feature for better user experience
updated constructors in assertion classes to include type safety to ensure proper handling of assertion types during initialization
added MENU _ QUOTE menu item and functionality for quoting a tweet to enhance user experience by providing a personalized tweet option
bug 62155 - npe while wait for thread to finish
clarify what codec pas do n ' t support .
added a conditional check for the result before offering a failure in ServerHTTP2StreamEndPoint to ensure that failure is only added when the operation is successful
updated German and French error messages in XSLTErrorResources to improve clarity and accuracy of the error message
make checkpointcleaner thread - safe
refactored mockrestadapter , restadapter to make it subscribe more robust .
reformatted the code block for better readability to improve maintainability of the code
added support for unique column names in result set handling to improve data integrity by ensuring unique column names are utilized
fix for ticket : 2 -- replace input text with audio effect .
add check for invalid session . invalidate ( ) and throw illegalstateexception if session be invalid .
hhh - 16189 remove dead code
changed the key length from 256 to 255 in JceX25519Domain . java to optimize key generation for improved security
set a default codec for Lucene41PostingsFormat in TestBlockPostingsFormat3 to ensure compatibility with the latest codecs
[ hotfix ] [ runtime ] add log for empty checkpointranges
add oaep wrapping by default
806870 : [ testbug ] fix build for jdk - 806870
do n ' t swallow securityexception and log a warning
updated return statements in AbstractTest . java to ensure correct transport values are returned based on Unix Unix timestamps
fix the issue that jersey admin be not upload a segment at all successfully
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple classes and added memory freeing to improve memory efficiency and ensure proper handling of
enable fastsyncchaindownloader by default
updated DST _ OFFSET setting in SimpleDateFormat and added a new test class Bug7130335 to ensure correct handling of DST offset in date formatting
refactor variables in AllAppsView to use local variables instead of accessing mRollo . mState directly to improve code readability and maintain
fix deployvm fail to start if global setting be not set
refactor StringBuffer class to improve code readability and maintainability
added assignment of rule UID to the rule object
added a null check for the listener before unsubscribing to prevent potential NullPointerExceptions when the listener is null
add a new PropertyDescriptor for pretty printing in JoltTransformJSON to enable pretty printing output for the Jolt transform configuration
make table public for reflection purpose .
improve error message when no resource could not be find
improve exception handle in tcp and xmpp transport
refactor multiple Java classes to improve code organization and maintainability
added two parameters , isUpgradeSuspended and effectiveClusterVersion , to enhance upgrade failure handling in the AmbariManagementControllerImpl class
simonstewart
remove unused variable wfields from Resolver . java to streamline code and improve maintainability
added default constructor to oauthproperties to set key sizes
hbase - 26923 fix findbugs warning in htable / procedure ; addendum .
replace the custom allowed resource alias checker with a lambda expression to simplify the code for better readability and maintainability
refactor ObjectStream and related classes to improve code organization and readability
[ java ] extend cluster interface to extend idlestrategy and provide a way to reset the idle strategy .
hbase - 19501 writer . addnextchunk ( ) should increment currentchunkid even if it do n ' t use it
added a new abstract class AbstractJobExecutor to handle job execution in Spring Batch to provide a common structure for executing jobs with pre - and post - execution listener notifications
change return statement to break on replayComplete to improve control flow control in recovery logic
rename hugestaticbase - > staticbase for good clarity
fix the issue that camel - consul do n ' t respect the discovery setting
replace the use of ` Float . doubleToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom . nextInt ( ) `
add temporary workaround for bailouts during parse
adjusted currentStart and baselineStart to account for aggregation time bucket adjustments to ensure accurate time calculations
added checks for abstract methods and created tests for stubbing behavior to ensure correct answer generation for classes implementing abstract methods
refactor checkPackageAccess and isAccessiblePackage methods to use SecurityManager for enhanced security checks to improve access control and prevent potential null pointer
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and enhanced plugin initialization logic to improve plugin setup and ensure proper
use the bold font to make the toolkapanel more user - friendly
only return launcher3 when need
removed unnecessary try - catch block and improved action listener implementation to enhance code readability and ensure proper dialog execution in connection handling
updated data types from ImmutableMap < String , ShowOptions > to ImmutableMap < BuildTarget , ShowOptions > across multiple files to align data structure with the
add copyright attrib .
added support for handling ' & ' character in character input and movement commands to improve navigation functionality for users
removed synchronization around retrieving connected plots to improve performance by reducing unnecessary synchronization
replace the installation check for " com . estrongs . android . pop " with a new intent chooser to enhance user experience by
removed the ` public ` access modifier from the constructor of ` Roster ` to enforce encapsulation
add basicconstraints to trust anchor to avoid self - signed cert
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to verify the functionality of fixed nested transformations .
removed the check for multiValued ( ) in TrieDateField and TrieField classes to simplify the logic by directly assigning the value based on
removed the TaskbarStateHandler class and its associated references from BaseQuickstepLauncher to streamline the codebase by eliminating unused components
added a new class ArrayLength to demonstrate behavior of reflection methods for accessing array fields in Java classes
harden hzstartit by increase timeout
replaced Singleton with @ PostConstruct to ensure proper initialization of ApplicationSettingsService
fix : allow negative value for safepoint
change thread name field type from char array to string to improve type handling for thread name retrieval
updated the default RAND _ SEED constant from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hnsw
fix for stroke ( ) bug
[ mondrian - 1542 ] minor refactor to make it easy to subclass
added findInterestingChildren method to Comment2000 class to handle child records in the Comment2000 structure
added import for Messages and set status icon to a warning icon to enhance user feedback by informing them about status changes
update to get rid of deprecated method getmodifiers ( )
amd64countleadingZerosnode and amd64counttrailingzerosnode should use nodes _ 3 instead of 6
camel - as2 fixed the unit test error of as2clientmanagerit
refactor Locale class to improve code readability and maintainability
bugfix : add clear log button to error console
updated mRecentsAnimationController initialization to ensure mRecentsAnimationController is consistently set to null
updated imports and modified caption handling in multiple classes to improve locale support and enhance message serialization
updated connection pooling settings and improved resource management in multiple test classes to enhance performance and resource management during tests
simonstewart : add the opera workaround for opera on window
report download failure via error dialog
added new Lifx product items to the LifxProduct . java file to enhance the application with additional Lifx product options
added asynchronous handling to the OverseerCollectionProcessor and CollectionsHandler classes to enhance functionality to support asynchronous operations for replica creation
updated variable declarations and assertions in PostgresDatabase and PostgresDatabaseTest classes to enhance code clarity and ensure consistency in primary key name
updated LogPanel and SummaryPage to use repositoryModel . HEAD instead of null to ensure a valid repository name is used for logging and summary display
fix model space translation in skeletoninterbone
added a method to stop the browser component and updated the deinitialization method to ensure proper cleanup of resources to improve resource management and prevent memory leaks
fix autoscaling test that fail on slow machine
refactor screen attribute processing in ScreenTerminal . java and Tmux . java for improved logic handling to enhance code readability and maintain
updated the condition for returning the controller state in SoftResetAction . java to include additional controller state checks to ensure that the action correctly reflects the current
disable on - disc stream cache to speed up texture pack reloading .
added parentFolder initialization in Request . java and RequestV2 . java to ensure proper handling of resource management in the media renderer
rename ` ` ispersistent ' ' field to ` ` persistent ' ' to avoid confusion
updated FileOutputStream implementation to include an explicit close method to ensure proper resource management by deleting the temporary file on close
added error handling for 403 responses in StandardGitHubRepository to improve robustness by logging specific HTTP 403 errors when posting issues
log4j2 - 1343 add a getoriginal ( ) method to messagefactory2adapter to retrieve the original messagefactory
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to multiple test files to suppress serialization warnings for the BanSerializableRead class
updated regex pattern from version 2 to version 3 to reflect the correct minor version in the application
set initial delay and dismiss delay in ExtractionModelFrame . java to improve user experience by reducing tooltip delays
refactor ProjectCommand and XcodeProjectGenerator methods to use a unified target graph and targets parameter to improve code maintainability and reduce red
added UTC timezone setting and corresponding test for date formatting to ensure consistent date formatting for UTC timezones
add javadoc since to mediastreamconnector
fix bz 66688
updated the accuracy display method in GpsLoggingService to use accuracy instead of altitude to improve accuracy accuracy reporting in the user interface
added futuresEnabled functionality to BinanceExchange and updated related services to conditionally adapt trading wallets and order IDs based on its state to
continue issue 499 [ add course and instructor section to admin tab ]
added a configuration to set the accept queue size for the connector to limit the number of worker threads for improved performance
replaced the use of ` getClass ( ) . getName ( ) ` with ` PROPERTY _ DISABLE _ WATCHER ` to retrieve the system property for
[ no jira ] add support for ssl for camel - jms .
update exception handling from UserException . parseError to UserException . validationError and modify test method names for clarity to improve error handling specific
remove assertion that may be zero for a really fast collection .
fix : fix getJavadoc comment on method with line comment
added OS detection method and modified memory handling in ReserveMemory . java to enhance cross - platform compatibility for macOS environments
added multiple calls to checkForRegionClosingOrSplitting ( ) to ensure proper handling of region closing or splitting operations
hbase - 2663 hbaseadmin # waitforoperation should include procid in exception message
camel - 4324 expose the service class in the factory bean
refactor YamlChangeLogSerializer to use a container map for database change logs to improve data organization and format the output for clarity
mondrian : fix ` ` class not implement ' ' output in schema printing .
do n ' t use magic number for length argument in regen
updated ` HomeFragmentNowPlayingRow ` and ` HomeFragmentFooterRow ` to use ` getActivity ( ) ` instead of ` getContext ( ) ` to
added ` @ GeneratedValue ` annotation with a " native " generator in multiple Java files to enable native generation for generated objects in the Hibernate
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature and improve code clarity
updated the write method to include the remaining buffer size in BZip2Codec and adjusted ByteBuffer allocation to optimize memory usage to improve performance and memory efficiency during
refactoring : move geogebralogger . startlogger to geogebra - web
added a new constant VALUE _ TYPE _ EMPTY and modified the value assignment logic to improve code clarity and ensure proper handling of empty values
replace null comparisons with equals method calls for string comparisons to improve code readability and consistency in string comparison
refactor Liquibase code structure and organization to improve maintainability and readability
simplex noise : fix typo
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated ` VersionedTargetGraphBuilderTest ` to use ` newInstance
rename getminrowcompactsize - > getminrowsize for consistency
fix json serialization bug .
updated the logic for setting and deleting elements in the NativeArray to handle cases where the last element of the specified key is not present to improve handling of
updated file upload logic to set the parent file ' s ID to improve file management by correctly referencing the parent file ' s ID
added a new file UTF8ReaderBug . java to test support for supplementary characters in XML input
add unit test base on user forum forum forum .
fix binance test for depth
added a method to reset allocation states in the Wrapper class to ensure proper initialization of allocation states
removed import of AssertTree from AmbariManagementControllerTest . java to streamline dependencies by eliminating unused imports
refactor property handling to use synchronized blocks for thread safety to ensure consistent access to system properties across multiple threads
[ hotfix ] [ core ] fix typo in modelutils
refactor AbstractDoubleArrayAssert for improved clarity to enhance code maintainability and readability
updated variable assignments for width and height in Legend . java to ensure correct calculations for text dimensions based on labels length
added test methods for ` testDelay ` and ` testAbort ` in ` CodeFirstSpringmvcIntf ` , ` TestResponse ` , and
updated string handling in MoreLikeThis . java to use getValues ( ) and improved loop iteration for term frequency collection to ensure robustness and prevent
replaced rule resolver logic with BuildTargetSourcePath instantiation to improve clarity and maintainability of the code
disable the download latest command if versioning be disable .
replaced Collection with List in MediaFolder . java and added numberOfFiles variable to MediaFolder . java , and updated MediaProvider . java to include
added a new argument " - b " in AidlStep . java and modified the string format in GenAidlTest . java to ensure proper command
fix : add test case for issue # 79
added a TODO comment to the FakeHttpLayer class to prepare for future test scenarios
[ java ] revoke leadership upon error .
2 . x : replace flowable . fold ( ) with flatmap to reduce scope
rename ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in method naming
[ hotfix ] [ doc ] update the description of jobmanageroptions
refactor ` WidgetsFullSheet ` methods to replace ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` for better visibility management to
added try - catch blocks to check for the existence of Woodstox output and XML resolver in XmlUtil . java to ensure that
refactor test setup to use JUnit 4 annotations for better compatibility with the project structure
removed debug logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and improve performance
disable failing test
added error handling for periodical refresh process to improve robustness by logging exceptions during periodical refresh execution
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to use @ RequiredArgsConstructor and add a new method for adding providers
added a method to check the default background fill settings in HSSFCellStyle . java and refactored related code in HSSFPont .
updated ZonedDateTimeFormatterBenchmark . java to improve test coverage for date and time formatting
refactor update buffering logic in DistributedUpdateProcessor and add a test class in DistributedUpdateProcessorTest to improve code clarity and ensure
fix import issue when sim include booster motor , but no booster present
allow / editreplace and / editscript to replace all of their content .
updated the ExtendedMasterSecretExtension class for improved secret management functionality
changed the declaration of the processor variable from non - final to final to ensure that the processor variable cannot be reassigned after initialization
added a listener for onWriteFailed in WritableKeyProcessor to notify listeners when the stream reaches the end of a stream to ensure proper error handling and notification
added " CUBE " to the MySQLDatabase class to enhance database functionality as per updated requirements
added a try - catch block around the rm method call to handle potential IOException to improve error handling and prevent application crashes
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and update related test class names to
refactor timeout and hostname verification retrieval in DefaultOkHttpClientFactoryTest to improve code clarity and maintainability by removing unnecessary reflection calls
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added null check in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerException when output stream is null
ggb - 2118 : do n ' t recenter av when not need
updated jailerMain method to include an additional boolean parameter for fromCli to control the behavior of the jailerMain method to allow users to
refactor HttpRequest class to improve code readability and maintainability
update shared preferences to store unread notification count in a new value to ensure the unread notification count reflects recent data updates
fix isnullnode for object kind .
None
refactor layout manager initialization and padding logic in ViewPostDetailFragment . java to improve code readability and maintainability by consolidatingLayoutManager
change log level from trace to warn for background operation abort to provide more granular logging for debugging purposes
fix a bug where interface method be not be mark a abstract .
ggb - 2118 fix for ie10 +
updated ` getNotificationUsers ` method to include ` deviceId ` parameter and modified user retrieval logic to enhance filtering of notifications by their ID and tag
fix cgiar provider for new srtm data
remove unused property change listeners and reset the bottom panel in MotifFileChooserUI . java , and add a new class bug6520101
change return value of ` handle ` method in ` HollowDiffUIRouter ` , ` HollowHistoryUI ` , and ` Hollow
refactor ` fromNullable ` method to ` getRuleOptional ` and introduce new methods ` getRuleOptionalWithType ` to enhance rule
added visibility for transportSpinner based on makeShortcut state to improve user interface responsiveness when the shortcut is making available
added null check for attributes _ field and created two new classes with annotations to ensure proper handling of null values and implement demonstration of annotations
refactor backPressed methods across multiple fragments to return a boolean value based on button state to improve responsiveness by preventing further actions when the
added support for long view index in QueryServices and QueryServicesOptions to enable dynamic retrieval of view index ID based on configuration
change the string from " V " to " v " in SDRTrunk . java to correct the delimiter for versioning
clean private key path in test
removed the columnPosition parameter from the diffDropColumn method and its usage to simplify the method signature and improve code clarity
updated IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of VERSION . LUCENE _ 40 to ensure compatibility with the latest version
hbase - 27810 add a way to disable strict column family check in importtsv
[ java ] : use long subscription id for stop recording .
replace ` startActivity ( intent ) ` with ` startActivitySafely ( intent ) ` and add voice button proxy functionality to enhance user experience by
added a condition to skip processing if a specific JSON node is of type " i " to prevent further processing in the streaming service
refactor Procedure class to improve code readability and maintainability
updated ResourceBundle loading to include locale and class loader parameters to ensure correct resource bundle retrieval based on the current locale settings
[ kotlin ] add support to normalize new array creation .
added conditions to handle cases where the number of terms exceeds the specified minimum count to ensure accurate tracking of segment counts during value processing
fix nullpointerexception in modmetadata # getAuthorinfo ( ) ( # 4971 )
added OSGi test classes and modified imports in module - info . java to ensure compatibility with Google Gson annotations and dependencies
kristianrosenvold : fix infinite loop when enable controller service
hbase - 2782 set autoflush to false for async htable # clearrows ( )
fix ( djl ) : fix compilation warning ( # 1437 )
added hasUserData method to SimpleFeatureImpl and its corresponding test to provide functionality for checking the presence of user data in a feature
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify exception handling to enhance code
refactor RelyingPartyRegistration class to improve code readability and maintainability
added support for enabling logging in the Java compiler to improve debugging and monitoring capabilities
added a new class ` InJavaSourceSet ` to handle Java source set discovery in the ` java . source ` package to enhance functionality for finding
updated the file path for the " WFPC2u5780205r _ c0fx . fits " resource in TestGDALParser . java
camel - 17806 : camel - core - optimize to reduce stack frame in use during reflection
removed conditional check for useExternalStorage in DirectUpload . java to simplify code logic for SDK version compatibility
added configuration for nocommit functionality in IndexerMapReduce and updated related classes to utilize it to improve commit behavior handling in the indexing process
bug 7553 : make diskofferingid optional in createvolume api
updated assertions in BaseTestCellComment to check for non - empty notes instead of empyy notes to ensure cells in the second column have non -
added null checks for ` amountToAdd ` and ` amountSubstract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime `
added a new test class for handling specific error types in the jooby package to ensure proper exception handling for specific error cases in the request
remove unneeded exception
added conditional logic to hide the text holder if it is currently gone to improve user interface clarity
fix ( deps ) : update jdt to late version which support java 8
danielwagnerhall : explicitly set the firefox driver ' s profile to the firefox driver ' s profile
fix block ' s liquidblock extend bucketpickup ( # 9887 )
http : / / issues . apache . org / activemq / browse / amq - 2902 - fix intermittent test failure
updated time zone for date and time in LocaleProviders . java to ensure correct localization for specific time zones
[ log4j2 - 1125 ] log4j2 distinct error should not create intermediate buffer .
None
sqlexecutionlogger # createlogger ( ) rename to getlogger ( ) and print a blank line
disable access deny for class , field , and proxy for now .
attempt to fix issue with opengl on mac o
update HiveAbstractReader to verify transactional properties from the partition and table to ensure correct data integrity during processing
added a new variable ` mLastOverlaySroll ` and updated the conditions for determining ` shouldScrollOverlay ` to improve the logic for determining the overlay behavior
added unmodifiablebatchbuilderimpl and unmodifiablebatchbuilderInitiator to support override batch size
update shouldnotreachhere ( ) to be more descriptive
added unit test to verify the functionality of spying on a class ' s static state to ensure the correct behavior of spying on a class ' s
add a test for parsing a union statement with brackets and order by in SelectTest . java to ensure that the SQL parser correctly handles union queries with brackets
added a null check for the ugi object and modified the doAs method to handle exceptions to ensure proper execution of security actions even when the ugi
added error handling for AL error codes in OpenALMusic . java to improve debugging by providing more specific error context when allocation fails
camel - 14263 : camel - quartz should use the new resolveparameter api which be recommend .
updated RexNodeConverter to adjust decimal type representation to ensure accurate precision and scale handling in SQL type generation
updated null handling for vendor and device properties to use Optional to avoid potential NullPointerExceptions
updated the assertion in WalletTestAccount003 to use Long . toString ( now ) instead of a string representation of the address to ensure accurate account update validation
change the way rocket appearance and selection be handled in BasicFrame and DesignPanel to improve code clarity and functionality by simplifying selection
added parameters for long running time in Args . java to enable configuration of long - running time in the application
fix checkstyle issue in ref comparison logic
updated import statements and method signatures to utilize java . util . ServiceLoader instead of sun . misc . ServiceConfigurationError to improve code clarity and
http : / / issues . apache . org / jira / browse / geos - 7162 - fix unit test
removed unused Expectations class and simplified assertions in TestRestClientRequestImpl . java to improve code clarity and maintainability
update condition to include a check for referenceDatabase to ensure proper handling of cases where the database is the same as the reference
removed the ` addAndroidConstants ` method and adjusted asset path handling in ` IjProjectTemplateDataPreparer . java ` to streamline the
replace assertEquals ( 0 , s1122 . getRequests ( ) ) with await ( ) . atMost ( ) in multiple test classes to
added additional information in the ImmutableMap to enhance the event details provided to Chrome trace invocation
[ gr - 46711 ] make native library substitution work with module .
fix typo in debug log message
added a new file TheRockMetaDataDemo . java to demonstrate fetching exchange metadata to enable users to access and print exchange metadata for TheRockExchange
converted ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes to ` strictfp ` and added a strictness test method to ensure proper
removed unparse identifier handling from column name generation to simplify the identifier assignment process
added a test for variable declaration and updated method signatures to include a cursor parameter to ensure correct context free template processing and handle variable declarations with specific
do n ' t throw synthetic exception when instantiate static class
replaced projectFilesystem . getPathForRelativePath with basePath to simplify the path retrieval process
added rescue functionality to IkStepDefinition for handling pending Ik messages to improve cucumber behavior during message processing
removed the ` final ` modifier from the ` equals ` and ` hashCode ` methods in ` AbstractType ` , ` BigintType ` ,
removed the FSync enum from the SyncLevel enum and added a method to retrieve its value based on the provided initArgs to simplify the code and provide
fix flaky client pause test ( # 2592 )
fix recovery logic to handle recovery slice
* fixed issue with opencv _ core . c ( issue bytedeco / javacv # 1189 )
added sdkPath to AppleBundle and modified makeProcessExecutorParams method to include ExecutionContext parameter to ensure correct SDK path handling in process execution
[ hotfix ] use lambda instead of lock in blobserver and cache
bug 1 : 1 nat rule need to be update , otherwise we can create a firewall rule for static nat rule
updated PasswordEncoder and StandardPasswordEncoder classes to improve security and maintainability of password encoding
added row type conversion in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of row types during query execution
fix javadoc for betterblockpos
fix classloading issue with velocity . xml
updated version handling to use a new method for retrieving version strings to improve clarity and maintainability of version management functionality
updated SQL statement handling to support Oracle databases to ensure compatibility and prevent issues related to trailing / ' s in statement formatting
add a configuration to disable assumption about null deref
avoid port conflict with other test
None
added a method to add a multifactor authentication bypass configuration to enhance the multifactor authentication provider functionality
fix wrong calculation of best area and contact point
[ drools - 7 ] fix javadoc warning ( # 2053 )
added methods to access and set the help page in the PMS class and refactored the code in HelpTab and LooksFrame to improve
added new interfaces ` GeocodeProviderFactory ` and ` Constants ` to the project to provide a structured way to handle geolocation settings in the application
updated the import statement for CharArraySet from the correct package to the correct package in the codebase
refactor exception handling in ResourceManager tests by replacing ExpectedException with a try - catch block to improve clarity and maintainability of exception handling
do n ' t delete the java proxy object if it belong to another protocol
refactor SegmentsInfoRequestHandler and CollectionsAPISolrJTest for improved document handling and collection management to enhance code clarity and
modify the calculation of numPredictiveAppCols to use a conditional for phone devices to ensure accurate column count based on whether the device is a phone
added a method to ` JoinUtils ` to check for scalar subqueries in LEFT conditions to enhance the logic for identifying nested subqueries in
added blockcontainer to handle removal of item in buildcraft .
updated layout parameters for drag targets in DeviceProfile . java to improve the visual presentation of the search bar in the user interface
change the method from ` run ( ) ` to ` start ( ) ` in ` YahooSession . java ` to ensure the session starts correctly to
initialized the HiveMetaStore client variable and updated its usage in HiveMetaStoreClient to improve resource management and prevent potential memory leaks
modify Locale . getDisplayScript ( ) to accept a DISPLAY category parameter to ensure that the default locale does not honor the default DISPLAY locale
updated import statements to use ZkStateReader ' s BASE _ URL _ PROP instead of static import to ensure consistency with updated API standards in the
replaced ThreadLocalRandom with Random for random number generation to improve performance and reduce dependencies on local randomness
added a check for launcher state before backuping data in LauncherBackupHelper to ensure data is only backuped when the launcher is ready to optimize performance
include the space number in the exception message when it be < 0 .
camel - 16205 : added unit test for resilience route with timeout .
rename bodySpace to barSpace across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability and maintainability
int - 1952 fix test case to use proper assertion style
added multiple logger statements to Grasscutter . java to improve logging detail for better troubleshooting and troubleshooting
None
added a method to the Workspace class and modified the condition to check if the workspace state is not in overview mode to improve the state validation logic to ensure
rename various assertion classes to improve consistency and clarity in naming conventions
do n ' t notify new template cache if args . cacheable
added a new constant ` SCOPE _ SOLR _ CORE ` and modified several classes to utilize this constant to streamline scope management and
updated the SQL table creation statement to include a primary key constraint and added a test for the measurement key to ensure the database is up to date with the
rename -- permissions - config - path to -- permissions - config - file ( # 1437 )
refactor HttpSessionContextIntegrationFilter to improve session creation logic and debug messages to enhance clarity and maintainability of session management during requests
[ c2 ] add test that demonstrate bug
rename english ud to english _ usd to match our name
make snowflakeidgeneratortest more robust by disable concurrent access
added a staticUi setting and modified toast bar visibility logic to support dynamic UI updates based on user settings
refactor the drop method to use a lambda expression to improve readability and ensure proper resource cleanup after use
None
updated JOptionPane calls to use localized message retrieval to improve internationalization support for users
tika - 1999 add miss mime magic for tika - ooxml and tika - ooxml format
added logging functionality and improved handling of feature loading in the Runner and FeaturePathFeatureSupplier classes to enhance debugging capabilities and streamline
camel - 7999 : camel - eip - enricher - improve xml documentation and increase wrap length
do n ' t wait for migration from remove node , mention flag to skip
fix npe when no capture device specify .
added WebSocket configuration with getter and setter methods in ShenyuConfig . java and updated ReactorNettyWebSocketClient instantiation to enhance flexibility and
avoid flaky test by wait for listener before run the test
updated content length handling to trim whitespace before adding to the document
refactor : move locking to solvingfinished method
[ iotdb - 4684 ] ignore pathalreadyexistedexception when concurrent insert a non - existent timeseries ( # 4998
added a check method to the Authz class to return a boolean value as expected
change access modifiers from public to protected in multiple classes to restrict access to these methods for better encapsulation
bug 7448 : do n ' t create a project if it do n ' t exist
removed a condition from the ` _ valueString ` assignment and changed the test method name from ` test7230NoValue ` to ` testNo
refactored thread initialization by extracting completion logic into a separate method to improve code readability and maintainability by centralizing the initialization process
added a method to create and return an external storage directory in ShadowEnvironment to support external storage management for testing purposes
[ drools - 7 ] add test case for mvel type coercion
updated generic type declarations and improved code readability in LoggingConfig . java to enhance type safety and maintain code consistency
print error message when actionnode fail to construct
fix tostring ( ) for sip protocol that start with tel :
refactor visibility logic for shared file icons in FileListListAdapter to improve readability and maintainability of the code
deprecated the configuration option ` HIVEOPTSortDynamicPartition ` to a new default value used in the code
updated the constructor of ExecuteStatementOperation and Operation classes to include a configuration overlay map to enhance flexibility in managing session configuration during execution
simplified the usage of ` Lists . newArrayList ` and ` Lists . asList ` to improve code readability and maintainability by using
test : fix name comparison in ogrdatastoretest
removed the onErrorInStep method implementation to simplify error handling logic in StepListenerSupport
wallet : fix typo in javadoc .
camel - 8195 fixed the issue of camel - netty - http not set the charset
[ ci ] use log instead of system . out . println
added a check to return false if the current row index is within the bounds of the connection list to prevent accessing elements outside the bounds of the database
pmd : add @ rule violation for method with same name in enclosing class
added ExtendedPlatformComponent class and integrated it into ManagementFactory for fetching platform mbeans to enhance the system ' s ability to manage platform
replace double quotes with single quotes in SQL queries to ensure compatibility with SQL standards
updated parse method calls to include the " org / knowm / xchange / bleutrade " directory for various classes to ensure correct path
refactor TextEscapeUtils to improve code readability and maintainability
added a filter parameter and modified the FilteredQuery instantiation to use it to enhance query flexibility by allowing a customizable filter behavior
updated GpsLoggingService to display progress messages when the main form is visible to improve user experience by providing feedback during email updates
replace ArrayList with HashSet and implement an iterator for inlinks to improve performance and memory usage by using a more efficient data structure
remove discovery result file on stop
modified the ` testFilterForPartition ` method to accept a boolean parameter for filtering at the server side to enhance flexibility in partition retrieval based on
added Abandoned status to the TicketModel and updated relevant constants in TicketPage to accurately reflect the status of workflows associated with
removed columnAliasPrefix assignment from multiple platform classes to simplify the code by eliminating unnecessary default value
replaced ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat ` classes to improve
log a warning if run on a 32 - bit jvm on a 64 - bit system .
fix regression when add a page to a pdfcopy
added a new option ` DAEMON ` to the ` OptionEnum ` class and implemented daemon mode functionality in ` TerminalClient ` to enable users to
added a new file FlushIndexTask . java that implements the FlushIndexTask functionality to flush the next buffer in the index during performance testing
update createflushwriter to take estimated size into account
ignore seams in folder output for now .
added a new file ` LocalSocketAddress . java ` to test IPv6 loopback address availability to ensure that the local socket connects to the correct local address
updated grid size coordinates in GridSizeMigrationTask . java to correct grid size coordinates for proper functionality
replaced calls to ` getName ( ) ` and ` getFields ( ) ` methods with direct usage of ` ci . name ` and ` name ` in
added read - only functionality to the Context class to enhance transaction management and context handling for objects
refactor LookAndFeelCommand class to improve code readability and maintainability
update logic for determining last run end and offset in BlockBoxing . java to improve accuracy in boundary checks and prevent potential index out of bounds errors
added imports for EOFException and EofException and modified assertions in GracefulStopTest to allow for more flexible exception handling
removed explicit locking mechanisms for HTTP connection management to simplify code and improve performance by reducing locking overhead
networkparameters : fix typo in javadoc
updated account asset optimization configuration to allow dynamic adjustment of account asset optimization
added a new constant J9 _ GC _ POLICY _ NOGC with value 0 to define garbage collection policy to define the appropriate garbage collection policy
validate contract addresses in TransactionCapsule . java to ensure proper handling of invalid protocol buffer exceptions
[ core ] remove useless rule for strictexception
add ` ` en ' ' to the list of language available for glassfish .
added a new class ProcessorInfo to manage CPU availability and permissions to support dynamic CPU identification based on system capabilities
add - html a an acceptable way to generate html
restore logger . config and make logback . xml location final
updated the handling of service component recovery events by replacing ` Collection ` with ` ServiceComponentRecoveryChangedEvent ` and added a new method to process cluster
polish ` ` add miss configuration for tagpropagationfinishedspanhandler ' '
refactor dependency type assignment in RustCompileUtils to use a switch statement to improve readability and maintainability of code logic
updated oauth2LoginLinks method to accept MultiValueMap for query parameters to enhance flexibility in handling OAuth2 error messages
hbase - 20583 hfilescanner . seekto ( ) should seek to the first kv in the file ( chunhui )
rename @ generationtime . never to @ generationtime . always to match documentation
add np _ layer _ norm test to ensure nan be handle properly
refactored the showShareFile method across multiple fragments to centralize file sharing logic to improve code maintainability and reduce duplication across fragment
add a new test class LiquibaseUpdateMojoExecutionTest to validate the execution of Liquibase updates through the Maven plugin to
convert the proxy type to uppercase to ensure consistency in proxy type handling
add minecraftforge . java to change version , dungeonloloretry , and dungeonloloretry for release build .
refactor caching logic in JdbcDatabaseSnapshot to differentiate between fetching columns based on table and all tables to improve cache efficiency and ensure accurate
added a Container component with a border image and label to enhance CSS border styling for improved visual presentation
add retrytemplate to the list of retryablestatuscodeexception and make it optional
change layout parameters from FILL _ PARENT to MATCH _ PARENT to ensure that the layout correctly matches the parent layout
change parentTaskName to use current time instead of System . nanoTime ( ) to improve accuracy of task name generation
added error handling for invalid input in ServiceResourceProvider to improve robustness by catching potential exceptions during request parsing
do n ' t allow unversioned file for index without unversioned file ( fixes # 468 )
ca : make sure input [ 2 , 1 ] be evaluate again
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
added @ Deprecated annotations to multiple methods in ProducerTemplate . java to indicate that these methods are outdated and should not be used
refactor JLayer class to improve code readability and maintainability
make evictiontest more tolerant to slow machine
refactor encodeInternal method to use saltedPass instead of encodingInternal to simplify password encoding process by eliminating unnecessary internal logic
refactor the addition and removal of the OnGlobalLayoutListener to improve code readability by chaining method calls
refactor Response class to improve code readability and maintainability
update maxtimestamp to long . max _ value to avoid overflow
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
added null and empty checks for replies in multiple classes to ensure that only non - empty replies are processed in the reply handling logic
added ` toString ( ) ` and ` equals ( ) ` methods to ` HitbtcBalance ` class and removed unnecessary dependencies to enhance object
fix ( sql ) : fix order by in where clause with in clause
fix typo in retriesexhaustwithdetailsexception return value
replace openopen ( ) by opencookieterandle ( )
update jsontorpcapplicationtests to use hc5
fix piped power wooden - adjust energy removal when request ! = requestedEnergy
added a check to delete the temporary output file if it exists to ensure that the temporary file is clean before proceeding with operations
renamed the constructor parameter from " tid " to " id " in BitstampWebSocketTransaction . java and added multiple test cases in Bitstamp
added checks in ReplayProcessor and ReplaySubject to return null if time exceeds the specified time limit to ensure robustness of the processor by
updated the expected citation string to maintain consistency in citation formatting
set video header format in order to prevent data loss
show definition for equation in exam exam when user - defined equation style be use
fix a nullpointerexception find via oss - fuzz
hbase - 26945 set scan cache size to 100 for meta scanner ( liu shaohui )
updated the initialization script to use " q _ test _ init _ for _ minimr . sql " to ensure compatibility with the minimr configuration
refactor Math and StrictMath classes to improve code readability and maintainability
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable or disable the transient taskbar feature
[ hotfix ] [ doc ] fix docstring formatting
added a condition to set the density to 3 if scale is 3 to ensure proper scaling behavior for different graphics scaling factors
rename the ` optional ` variable to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
hbase - 25820 addendum to fix log4j2 - 1343
[ hotfix ] [ test ] fix assertion error in testclusterupgradeutils
updated warning message in AsyncHttpConnection and refactored test class names in AsyncContextTest to improve clarity of warning messages and rename Local
added a boolean parameter ` showArrow ` to the ` title ` parameter in the ` SearchUiManager ` constructor to allow for the display of an arrow
mondrian : change lock mode to read commit commit rather than read commit commit
skip bigEndian test on linux only .
refactor input type checks to improve clarity and functionality to ensure correct conversion of input values to string representation
update the condition to check for multiple primary key aliases instead of just one to improve error handling to allow for more flexibility in specifying a single primary key
added conditional logic to set drawable resources based on LMP status in multiple classes to ensure proper drawable resources are used for various UI components in the application
improve error message when no isolate
added multiple header configuration methods to HeadersConfigurer . java to enhance header customization capabilities for better HTTP request processing
rename ObjectEnumerableAssert . java to improve clarity and consistency in naming conventions
[ grid ] move distribute cdp test to appropriate package
fix test failure on bamboo
added path resolver and prebuilt libraries directory to Python binary descriptions to ensure proper referencing of Python libraries during the build process
added support for client authentication in NetServer and HttpServerOptions classes to enhance flexibility and allow customization of client authentication behavior
updated directory paths for REPL and Metastore to use the user ' s name for better clarity and organization in the codebase
updated task removal logic to handle primary and secondary task views to improve the accuracy of task management by ensuring appropriate removal of tasks based on their IDs
add timeout to the test to make it more stable .
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unused functionality
change parameter name from ` controller ` to ` flowController ` in multiple processable classes to improve clarity and consistency in naming conventions
[ te ] fix consumption of pipeline when there be no consumer
added import statement for ClassLoaderHandler in module - info . java to enable usage of ClassLoaderHandler in the project
save the best solution in the gui ( even if there be no result )
added JsonIgnore annotation to ApplicationSettings . java to exclude sensitive information from JSON serialization
inverted the condition checking for non - null throwable to ensure proper handling of null throwable cases
no effective change - code style fix
fix autoworking with empty stack
fix gl200 text protocol decoder ( fix # 773 )
rename time field and field specifications to enhance clarity and maintain consistency in naming conventions
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and added them to ensure proper synchronization
introduces a new interface to allow initialise bean at the end of setup
add miss tag to longtasktimer sample in timerobservationhandler ( fixes # 440 )
updated data type and calculations in AdaptiveFetchSchedule . java to improve synchronization accuracy and prevent potential overflow issues
log a warning if unwrapped fragment expression be use in thymeleaf
change the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread - safety when handling session attributes
do n ' t copy message to make it easy to debug
added new color constants and improved extractInto method to handle fallback color extraction to enhance color processing logic and support for dark text hints
only add data folder to srcfolder list if it be accessible
updated the ` appendContent ` method to include a ` boolean includeTitle ` parameter and adjusted related logic to enhance functionality by allowing optional title
removed initialization of SessionRegistry as it was previously uninitialized
add log for reconnection complete
None
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve performance and reduce contention on thread management
updated error message formatting and added address verification in exception handling to improve clarity of error messages and ensure correct destination validation
added a check to prevent view paths under the repository in ProjectView . java to ensure that the application does not operate from directories under the repository
remove tab - header functionality from jabref ( # 3037 )
added multiple JVM option flags for compressed class pointers in multiple test files to ensure proper handling of class loading options in compressed environments
peer sync : remove useless error log check
deleted the ConnectionHook . java file to the functionality provided by ConnectionHook is no longer needed
solr - 12313 : remove test injection . waitforreplicasinsync be no longer need
camel - 7999 : camel - rest - dsl - improve type assertion . thanks to jens kleine - herzbr
update apex lambdas to support secure access
add apache license header for the conll project
refactor AggregateEngine to use a separate AggregateEngine singleton instance to improve thread management and resource utilization
updated WebSocketAsyncConnection constructor to include ByteBufferPool as a parameter to enhance flexibility in buffer management
added scrollToPositionWithOffset calls for index - 1 and index - 3 in UploadActivity . java to improve scrolling behavior based on index bounds
fix ( griffin ) : ignore column that be override by other column alias ( # 2451 )
updated animation handling in LauncherAnimUtils and added transition animation methods in LauncherStateTransitionAnimation to improve visual feedback during transitions and ensure proper
disable the default user agent when httpclient config be disable .
added conditional logic to handle PubSubhubbub based on application settings to enhance FeedRefreshUpdater based on user settings settings
changed the access modifier of the finalize method from public to protected to restrict access to the finalize method for better encapsulation
updated method name from ` isAnonymousOrLocalClass ` to ` isAnonymousOrLocalOrSyntheticClass ` and added a new condition to check for synthetic
add dspace . utils . dspacewebapp subclass for backwards compatibility
added a method to retrieve the table aliasContainingColumn from the leftTableAlias in CalcitePlanner . java and a check in RowResolver . java to
append " Trigger " to the triggerKey identity to improve clarity in the identity mapping for trigger keys
updated logging levels and improved transaction error messages in Wallet . java to enhance clarity of transaction broadcasting logs and provide more informat
fix testbuilder / basicmaptest after core change
enable new rcfile without validation by default
added an enum ` TlsClientCertPolicy ` and refactored client certificate handling in ` GitBlitServer ` to improve code clarity and
added a debug log statement indicating a new message indicating a successful subscription to the authenticated feed to improve transparency and traceability of the subscription process
added support for WebSocket protocol headers in the ProxyWebSocketHandler to enable customized handling of WebSocket connections based on request headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve visibility and traceability of fetchReq processing
no effective change - code cleanup
updated the inner class handling in FinalizePrivateFieldsTest . java and added a new method to identify inner classes to improve clarity and functionality of inner
updated UnexpectedJobExecutionException to improve exception handling consistency
removed the unused ` shouldUseOpaqueButtons ( ) ` method and modified the visibility of ` buttonShouldBeOpaque ` in ` AquaLookAndFeel . java `
updated max frequency and max cost handling in DrillSidewaysQuery and DrillSidewaysScorer classes to improve robustness by using a more accurate
add degenerate path class to classRegsitry map
removed the preFill parameter from constructors in ParticleEffectPool , FlushablePool , Pool , and ReflectionPool classes to simplify the pool initialization by
update taskbar state management in TaskbarStashController to ensure the taskbar state reflects the current application state when not in launcher mode
updated style comparison logic in CascadeDeleteVisitor . java to ensure null safety when comparing default styles
fix the guiutil . guiutil . statustab so that the window can be resize .
refactor file icon assignment logic in FileTreeViewHolder . java to simplify code and improve readability to enhance maintainability by reducing redundancy
updated assertions from ` isEqualTo ` to ` contains ` for system qualifier checks to enhance clarity and consistency in assertion checks
fix concurrent bug in xmlreporter
add test for probability function query
added ShutdownThread deregistration to clean up resource management during application shutdown
hhh - 14519 - sybase : add a method to drop temporary table after use for test
simonstewart : applying fix suggest by valerybokov
refactor Solrcore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code readability and maintainability
updated hex string formatting for reserved memory addresses to improve readability of memory allocation logs for better debugging
do n ' t recreate ad timeline when it ' s empty
added a suppression warning for undefined equality comparison in MultimapSubject . java to follow Multimap . equals and ensure compatibility with object equality checks
change unit - hz to deg _ hz in wave generator demo
chore ( # 759 )
replaced empty TreeMap instantiation with a constructor that initializes TreeMap with includedLabelSets to improve code readability and maintainability
fixed crash when set a vertex format that do n ' t have normal
added span tagging to various tracer methods in TracingClientInterceptor , ITTracingClientInterceptor , and ITTracingServerInterceptor to enhance visibility
refactor time zone handling in ScheduledTrigger . java to use TimeZone . getTimeZone ( timeZoneStr ) to improve accuracy of time zone conversion
added asynchronous bucket functionality and extension classes to support synchronous and asynchronous bucket management in the bucket 4j library
updated the logic for determining the locations of the classes directory based on the " test . class . path " system property to improve flexibility in determining the
removed unnecessary whitespace in AbstractConnector . java to improve code readability and maintain consistency in formatting
refactor OngoingStubbing class to improve code readability and maintainability
added support for reusing existing web servers by introducing a new parameter ` webServerToReuse ` to enhance flexibility in manag
rename variable ' productConstructor ' to ' constructor ' for clarity to improve code readability and maintainability by using a more descriptive variable name
log error if thread allowlist be not use
change method ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessor ` to enhance clarity by using a more descriptive method name
drools - 759 skip gap analysis when hitpolicy be collect
add fail test for combine . globally ( ) with slidingwindow
added conditional check for ` allAppsDirty ` before binding all apps to ensure apps are only bound when really needed to improve performance by avoiding unnecessary bindings
polish ` ` remove mbeanserver run attribute ' '
removed a print statement from the Solution class to streamline the code by eliminating unnecessary output
replaced the deprecated ` getPrivSysProp ` method with direct calls to ` GetBooleanAction ` and added conditional checks for ` useScreenMenuBar
make item and head spawn position non - jump when fall ( fixes gh5757 )
refactor the query handling in SimpleJpaRepository to improve clarity and maintainability of the code
fix ( db ) : update blockutil to support genesis args ( # 4132 )
loop safepoints : do not generate safepoints for loop safepoints generation
hbase - 26193 avoid npe when rsgroup have no child watch
make some method public to allow wider usage
properly clean up resource on shutdown
added a validation check for maxBufferedDocs to ensure it is at least 1 to prevent illegal argument exceptions during document processing
added handling for login state in LoginActivity to enable proper login flow during configuration changes
updated Pump . java to handle null values and added a reverse iteration for UUID list to improve error handling and ensure correct order of UUID elements
updated access modifiers from private to protected for several methods and fields in HttpShardHandlerFactory and LBHttpSolrServer classes to enhance encapsulation and improve
updated ` order ` from ` LOWEST _ PRECEDENCE ` to ` HIGHEST _ PRECEDENCE ` in ` BaseAuthentication
added Jetty server and HandlerList imports to TestJNDI . java to facilitate the integration of JNDI with Jetty
reformatted code for consistency and clarity in SortedDynPartitionOptimizer . java to improve readability and maintainability of the code
changed return value from instance of NioEventLoop to true to simplify event loop handling logic
update handling of null values in the StatsUtils class to ensure accurate tracking of the number of nulls based on the ratio of new records
camel - 18125 : camel - jbang - export should support kamelets when use camel - kamelet .
replaced OkHttpOAuthConsumer instantiation with OpenStreetMap authorization handling to ensure proper access control and error reporting for OpenStreetMap integration
re - enable checkstyle and fix violation
added client authentication configuration to IoTDBRestServiceConfig and updated related classes accordingly to enable flexible control over client authentication based on configuration settings
refactored mock injection logic in PropertyAndSetterInjection and added a new test class ChildWithSameParentFieldInjectionTest to simplify mock injection
refactored BloomUriUniqFilter to utilize InitializingBean and added methods for expected and hash counts to enhance flexibility
changed the cursor adapter from false to true in HomeFragment . java and added a preference for refreshing the tweet in TweetPager . java to ensure
updated scroller ' s height ratio from 1f to 75f to improve the responsiveness of the scroller
updated RuntimeEvent import statements to use new package structure and renamed RuntimeEvent to RecompilationEvent to improve consistency and maintainability of event logging across
added functionality to manage the settings of system - prepared hosts to improve configuration management and facilitate easier deployment deployment
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created a
remove the first character of the location if it is a forward slash to ensure proper handling of directory traversal
added entity and score properties handling to StaticPipeline class to improve configuration flexibility for pipeline processing
refactor Whoops handling to support dynamic file path resolution based on application configuration to enhance flexibility in file path handling and allow for conditional
[ geos - 6900 ] add catalogrepository . getrepository ( ) for good backward compatibility
fix issue # 134 ( wrong javadoc of assert )
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added tests for multi - line text area functionality to enhance test
try to fix the unit test error of twitter
updated parameter names from ` writeMeasurementScheams ` to ` write ` measurementSchemas ` across multiple classes to improve code clarity and consistency
adjusted memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to ensure accurate memory utilization during testing
update SLF4J JAR version from log4j12 to slf4j - reload4j in LoggingOptionsTests to ensure compatibility with
fix test which randomly fail on slow box
updated package structure and import paths for several activity classes to improve organization and clarity of the codebase
drools - 1276 fix test after drools - 1276 fix
added a constructor to PullRequestMergedEventsStream that accepts a File parameter and a StreamDataProducer to handle schema reading from a file to improve flexibility
refactor AbstractExpressionPart class to improve code readability and maintainability
[ hotfix ] [ javadocs ] fix typo in taskslot
replace ` FIRE _ EXCEPTION _ ON _ FAILURE ` listener with ` CLOSE ` listener in ` NettyWebSocket ` and ` Netty
updated lock release logic to check for lock existence before attempting to release it to improve robustness by logging a warning if the lock is already removed
refactor JRubyBackend to use ResourceBundle for retrieving JRuby properties to improve code maintainability and reduce dependency on external resources
transaction : remove unnecessary check for empty address
refactor class initialization logic in ClassGraphClassLoader . java to improve readability and maintainability of class loading code
create temp blob storage before test
[ java ] support java 11 datastream : : v1 a a synonym for datastream . v1a in c .
added a Bundle to manage extras in FileDisplayActivity to enhance functionality by allowing more granular control over file display extras
changed the control flow from ` break ` to ` continue ` for null particle handling to ensure the loop continues instead of breaking when the particle is null
updated test expectations in AmbariManagementControllerImplTest to reflect changes in cluster operations to ensure tests reflect the correct number of clusters tested
removed the nullable annotation from the " SERVICE " column in TransientSessionTicketImpl . java and added NoResultException handling in JpaTicketRegistry .
updated Bug4823811 . java for code optimization and readability
replace direct addition of patternToDelete with a function that uses the project filesystem ' s path relativizer to improve flexibility in handling file paths
[ deconz ] request full state with a default value for first run ( # 15957 )
added an ` attribute ` field to the ` ShibbolethCompatiblePersistentIdGenerator ` class and updated related methods to handle it to improve
fix compilation error
refactor UI message handling to use a bundle for logging messages to improve clarity and maintainability of the code
added configuration checks and clearing of MManager instance to improve memory management and ensure consistent behavior during tests
renamed NavigableMap and NavigableSet classes for consistency to improve code clarity and maintainability
add unit test for the improved reliability
updated access modifiers and added @ FunctionalInterface annotation to multiple classes to enhance encapsulation and support functional interfaces for better code clarity
refactor span retrieval logic to use a helper method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added date type support in ETypeConverter , HiveSchemaConverter , ArrayWritableObjectInspector , and DataWritableWriter to enhance date handling capabilities
updated string splitting logic in StyleConverter . java to use Patterns . COMMA _ SEPARATOR to improve code readability and maintain consistency in whitespace handling
apps - 4134 make sure input dialog view work again
refactor column count handling in SemanticAnalyzer to improve clarity and accuracy of semantic validation logic
refactor max score update logic in WANDScorer . java to improve error handling and ensure valid document boundaries to enhance robustness of score update
refactor Correspondence class to improve code readability and maintainability
updated import statements in PaintSetEnabledDeadlock . java to streamline dependencies and improve code clarity
initialized ` curPixVal ` to a default value and created a new test class ` WhiteTextColorTest ` to ensure consistent pixel value handling and
change biome dictionary to use a collection of supertypes instead of a set of subtypes
corrected variable name from ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and maintainability
updated test stability annotations in TaplTestsLauncher3 . java to include specific stability rules for local and PLATFORM _ POSTSUBMIT to enhance
updated package - info . java files for mmm and ppp packages
added a check for whitespace in the logFileSuffix variable to ensure that the logFileSuffix string is not empty before proceeding
refactor PythonBuckConfig to improve code clarity and maintainability
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of shared library management in the ShadowPackageManager class
add alarm and dilution of precision ( fix # 468 )
fix nullpointerexception when tile be null
added a TrimCache task for managing cache size and success indication to improve cache management functionality and user experience
add copyright notice to file that be miss some import .
added NotAuthorizedException handling in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , AccessControlUtils , and BasicAuthBatchIntegrationTest
[ hotfix ] [ scheduler ] add scheduler . scheduleperiodically ( )
replace a method call with an onItemClicked method to notify when an item is clicked to enhance user interaction by providing feedback on file selection
added conditional logic to choose a random input stream or close it based on the presence of specific paths to improve resource selection mechanism for better resource management
refactor ` create _ table _ with _ environment _ context ` and ` create _ table _ with _ environment _ context ` methods to use
fix thread safety issue with tracktask not be start
updated indentation handling in multiple parser classes to improve code clarity and ensure proper indentation processing
added autoplay on video if video autoplay setting be set
simplified frame validation by removing the FIN status check for control frames
added visibility for the collapse handle to ensure the collapse handle is visible for proper user interaction
added two new files , Issue475 . java and XSS . java , to implement and test handling for HTML and JavaScript content in the joob
added a condition to return early if the number of units is zero to improve performance by avoiding unnecessary processing
modified the condition to check if the contract list size is not one to ensure correct validation of contract list size logic
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes to support adding enums and their values to enhance functionality
added hashCode method in IPPPrintService and created TestRaceCond class to ensure consistent hashCode implementation for print services
use iversion constant instead of iversion for good compatibility
added a condition to check if the platform fee is positive before enabling connects to ensure that connects only when a valid platform fee is present
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
fix encryption buffer miss in medicodecrenderer
limit module visibility by make several class package private ( # 2359 )
added import statement for Retrofit in Part . java and PartMap . java to utilize Retrofit functionality in the codebase
refactor JSON handling and parameter processing in JsonBuildHelper and ParamsBuildHelper to improve clarity and functionality to enhance parameter handling and ensure
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the existing taskbar constants in AbstractFloatingView . java to support taskbar overlay functionality
fix : update gapic - generator - java with mock service generation fix
updated alpha calculation in ClipAnimationHelper and added hasRecents property in RemoteAnimationTargetSet to improve animation animation responsiveness based on task states
removed the second parameter from the createRenderScript method call to simplify the render script creation process
compiler : fix typo in javadoc
pluginlistcellrenderer , add a utility method to check if the system bundle exist .
updated import statements and formatted code for better readability in IntegrationTestSparkBulkLoad . java to enhance code clarity and maintainability
keychaingrouptest : use constant for false positive rate
refactor the handling of motor configurations by replacing ` rocketConfiguration ` with a more explicit ` defaultConfiguration ` variable to improve code clarity
cloudstack - 7593 : fix npe in case of host not find
add null check to prevent npe
cloudstack - 7119 . add more logging when discover vm fail .
parameteraction : improve error message
updated BaseStubbing and ConsecutiveStubbing classes to accept an Object instead of InvocationContainerImpl to enhance flexibility by allowing the passing of a
fix location offend parameter
updated version name and code for the GreatVoyage application to reflect the latest changes and improvements
fix output filter for multiple command
mbstyle : use constant instead of literal string for option key
clear style of popups when there be no overlap
pdfbox - 4071 : fix typo , a suggest by valerybokov
added a StartingWindowListener class to manage task launching events to improve flexibility and integration of the transition manager within the QuickstepTransitionManager
added a doc comment inherited from MBeanServerConnection to improve code documentation and maintain consistency with inherited methods
updated exception messages in CheckPackageAccess . java to clarify the expected and actual exception types for package access and package definition validation
increase await termination time and add assertion for test termination
fix bug where xrlog . isloggingenabled be set to false before first log
added @ JsonIgnore ( true ) annotations to two methods to prevent serialization of sensitive data
increase timeout on slow machine
refactor the ` train ` method in ` SimpleNaiveBayesClassifier ` to accept an array of strings instead of a single string to
updated CheckHelperModule and CheckHelperAuditModule to extend AuditLoggerModule instead of ControllerModule to enhance functionality by integrating audit logging capabilities
refactor Prototype class to improve code readability and maintainability
added a check for ` tableIsTransactional ` and assigned it from the table property if it is null to ensure that the table is treated as a transaction
[ java ] : remove unused recordingwriter . writefragment and use onblock instead .
ca : return empty cue list instead of 0 cue
added getalias to datastoremetricqueryimpl and fix test failure
updated currency pairs from " BTC / USD " to " USD " and " LTC / USD " across multiple files to standard
hhh - 13666 fix resource leak in boot registry
updated import statements to switch from Kafka11 to Kafka in both ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to ensure compatibility with the
added two new files , GwtBinaryIntegrationTest . java and A . java , for integration testing of GWT binary handling to ensure reliable
updated click condition in BrowserContentPane . java and refactored variable initialization in SQLConsole . java to improve handling of loading events and enhance error
removed unnecessary whitespace in EnhancedRandomImpl . java and enhancedRandomImplTest . java to improve code readability and maintain consistency
added XMLSecurityPropertyManager to DTDConfiguration and NonValidatingConfiguration classes and updated their initialization in SAXParser and XMLParser to ensure consistent handling of XML
added default methods to interfaces and implemented them in subclasses to demonstrate inheritance and method overriding of default interfaces with default methods in subclasses
replace instances of " LIKE " and " ESCAPE " with " GLOB " in the SqliteFieldPredicateView . java file to improve handling of blob
change visibility of dmn assembler service to protect
fixed - script node be n ' t load from redis if node be a slave node . # 3850
fix checkstyle issue and add miss assert
updated debug log statements to use counts instead of counts for better clarity to improve log readability and provide more informative output for project operations
fix memory leak in outgo device
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and updated the thread pool configuration to allow dynamic adjustment of the number of handlers
replace the handling of shortcuts in LauncherModel to manage removed shortcuts more effectively to improve shortcut management by ensuring removed shortcuts are properly tracked and removed
camel - 8125 fixed the c error of camel - http
removed the home navigation case from DetailFragment . java to streamline navigation functionality for better user experience
added a check for AndroidMarket when includesPlayServices to ensure compatibility with play services inclusion
updated TableBlockParser and TableBlockParser to improve cell parsing logic and added a new test for outside whitespace after the header to enhance code
added support for bridging headers in the NewNativeTargetProjectMutator and related classes to enable support for bridging headers in Apple
updated methods for managing unused methods and improved source path handling to enhance code clarity and ensure accurate processing of unused methods
added support for diamond inference based on options and type arguments to improve the handling of incorrect diamond expressions in the code
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) ` in two
added a debug log statement to display the registration of cachemetrics to improve monitoring and monitoring of cache metrics
added exception handling for AuthenticationException in LdapCtxFactory to improve error handling by rethrowing them for authentication failures
updated the condition checking for zero in the float comparison to ensure accurate detection of zero difference
added a new configuration file for " logback . dev . xml " to support development logging in the application
added a new class JaasEventCheck to handle JaasAuthentication failure and success events to improve authentication event tracking in the application
refactor animation logic in QuickstepTransitionManager to utilize a list for views to enhance code readability and maintainability by centralizing
updated string distance comparison from " ! = " to " . equals ( ) " in ConjunctionSolrSpellChecker . java and added a new
change the type of ` fetchers ` from ` HashMap ` to ` Map ` to improve flexibility in handling multiple fetchers
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
removed the public access modifier from the setAuthentication method to enforce encapsulation
bug 11214 : make sure to wait for ready command to return
updated parameter settings for JDBC table to remove schema prefix to simplify the configuration for database connections
rename ` sqlUpdateAUP ` to ` sqlUpdate ` in multiple files to standardize the naming convention for SQL update statements
replaced the synchronized map implementation with a synchronized map computeIfAbsent to improve thread safety and simplify concurrent access to the schema type cache
refactor header addition logic to check for duplicates using the set key instead of disjoint to ensure that headers are only added if they already exist
ignore some test rely on cmu not in cmu - core
added a directory creation for storage in TestCollector . java to ensure proper storage directory structure during test execution
enable chunked streaming for improved performance in StarTree processing
add a regression test for the new basictype - * syntax
hbase - 26689 ( addendum ) add protobuf dependency to hbase - protobuf
added a new ` Node ` class and its associated getter and setter methods to the ` org . benas . randombeans . beans ` package to
added IOException to the getRemoteName method signature to indicate that the method can potentially throw an IOException
added HTTP client support and modified exception handling in UserAccountManagerImpl and ClientFactory to improve error management and compatibility with HTTP client libraries
refactor WebSocketConnection and ExplicitDemandTest classes to improve code clarity and maintainability
added support for AspectJ in the GlobalMethodSecurityBeanDefinitionParser to enforce the use of AspectJ mode with protected - pointcut
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by implementing proper hostname verification
added a remove method to the OHLCSeries class and a corresponding test case in OHLCSeriesTests to enable removal of items from the O
updated method call from ` invoke ` to ` invokeUrgent ` in ` ClientSchemaService . java ` , and modified assertions in ` CompactFormat
fixed issue where world . clearjoint ( ) do n ' t remove any dependent bone from the world
fix a problem with the search filter .
[ hotfix ] [ core ] fix the package of sourcereaderbasetest from the wrong package to the test utils
added null checks for document and parent folder in DocumentsStorageProvider . java to improve error handling for file not found scenarios
added new file ` HookDefinition . java ` and ` JavaHookDefinition . java ` along with a test class ` JavaHookDefinition . java
refactor code to encapsulate flushing logic in a new method ` flushIfDeadlockRisk ` to improve code readability and maintainability by
updated setExoOptions method to include a boolean parameter for allowing timestamps to enhance flexibility in specifying when timestamps should be set
remove user role from the identifier collection ( # 1542 )
replace custom color implementation with a static invisible color in Color . java and update the toString method in RailButtonShapes . java to improve code readability
updated the null handling logic in CountAggregationFunction and added tests for null handling options in NullHandlingIntegrationTest to enhance functionality to support both identifier and
reset the deep flag to avoid infinite recursion
pdfbox - 4892 : escape control character in xml , a suggest by valerybokov
updated file directory initialization to use a configuration property for work directory to enhance flexibility by allowing users to specify a custom work directory path
update ruleset ruleset to mark deprecate
directcallop : use codebuffer . position ( ) to compute the position of the entry for the map entry .
added constants for min and max time values and updated TimeRange class to use these constants to improve code readability and maintainability by avoiding
refactor BitDocIdSet class to improve code readability and maintainability
refactor connection handling to utilize a dedicated method for emission of metrics to improve code readability and maintainability by reducing duplication
added support for VIDEO attachments in DetailFragment and GalleryActivity to enhance media handling capabilities in the application
fix incorrect tank drain / fill behaviour in remote world
updated CsharpLibrary to handle both PrebuiltDotnetLibrary and PrebuiltDotnetLibrary providers to improve compatibility with legacy build rule analysis
improve handling of get pep method . jm - 216
added null check for intrinsicGraph in IntrinsificationPhase . java to ensure robustness by avoiding potential NullPointerExceptions
[ windmill ] fix metric tracking windmill server issue
pdfbox - 4892 : keep the last object key offset if it be enough
added canvas notification handling in LwjglApplet . java to improve responsiveness to canvas updates
refactor stringRepresentation method in EnvironmentAndSystemPropertyClientProviderStrategy to improve readability and maintainability of the code
refactored password policy handling in LdapAuthenticationHandler to utilize LdapPasswordPolicyConfiguration to improve code clarity and maintainability by consolid
refactor Int2ObjectCache . java for improved performance to enhance efficiency of object caching operations
added a private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` to enable configuration of the attribute resolution in LDAP authentication
refactor Readable class to improve code readability and maintainability
pdfbox - 551 : switch to use testsupport . with _ font
updated the icon of the share menu item in CaptureActivity to use a different drawable resource for the share menu item
replaced the Java version check with a StringTokenizer to determine if the JVM version is at least or equal to 8.0 .
updated JDBC41 driver timeout logic and exception handling to ensure correct handling of timeout values and improve error management
refactor GenericContainer class to improve code readability and maintainability
replaced HashSet with ArrayList for storing elements to improve performance and memory efficiency by using a more appropriate data structure
added multiple @ Override annotations in various classes to ensure proper method overriding and improve code readability
reordered the declaration of PNG and GIF files in ChartProvider . java to improve code readability and maintainability
use file # getparent instead of file # getpath for opening database
modified JavacParser to return an empty list instead of a block statement to streamline the code by eliminating unnecessary empty block creation
added support for users marked ' after ' and ' before ' keywords in JpaQueryCreator and User classes to enhance user search capabilities by
updated Test15FloatJNIArgs . java file to improve test coverage and ensure compatibility with recent changes
replaced hardcoded version parameters with dynamic method calls in the plugin to enhance flexibility and maintainability of versioning information
fix a bug in mockprocesscontext ' s decrypt method - mockprocesscontext # encrypt ( ) and decrypt ( ) now work correctly
[ java ] maintain thread safety around archive callback in aeronarchive .
refactor dependency retrieval to check for null before merging to avoid potential NullPointerExceptions during dependency merging
added timeout annotation to SslBytesServerTest to ensure tests do not hang indefinitely
javadocs ( extraction from score _ refactor attempt 2 time )
added methods for retrieving the realtime index segment and updated related classes to enhance functionality and improve code clarity regarding index management
check if exportdata be null before call writeTo
refactor RecyclerViewFastScroller to improve scroll thumb calculations and update popup visibility logic to enhance user experience by ensuring proper scroll position and scrolling behavior
updated command restart message and added a method to check if the tool window isInstantiated to enhance user experience by providing feedback on whether the tool window is
added a platform check for the operating system before adding the preventSleep checkbox to ensure the checkbox is only added when the operating system is Windows
updated servlet imports from ` javax . servlet ` to ` jakarta . servlet ` to align with the latest Jakarta EE specifications
added vertical bar layout handling in QuickstepAppTransitionManagerImpl . java to correctly position images based on their crop dimensions
added full - screen mode functionality to XWindow and its peers to enhance user experience by managing exclusive window visibility
truncate played duration to 00 : 00 : 00 on string overflow
mahout - 1287 - add credential to dagutils so that tez credential can be retain .
( chore ) camel - base - maven - plugin : use entryset ( ) instead of keyset ( )
trim the last character of the thread name before setting it to ensure consistent thread name formatting
updated the MsgBox message to specify that the description cannot be added to a file to improve clarity for users regarding the requirement of logging files
refactor Job class to improve code readability and maintainability
add autovalue test for unused type
ambari - 20583 . fix the test _ stage test after hbase - master upgrade
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused code to streamline the project
modified the ` performJoin ` method to return a list of ` GenericRecord ` instead of a single ` GenericRecord ` to allow multiple output records to
updated the handling of the maximum delegate lock period to enforce a maximum value of 10512000 to ensure that the lock period is accommodate
fix nullpointerexception when network rate be 0
remove unused cmcexchange constructor
updated configuration handling to check for the " seed . node . ip . list " path and improved address extraction logic to enhance flexibility in configuration
read ` hazelcast . client . tpc . enabled ` system property from system . getproperty ( ` ` hazelcast
upgrade swagger - ui version to 3.18 . 2 ( # 4423 )
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality of
refactor key initialization logic for better clarity and handling of blank names to improve readability and maintainability of the code
hive - 16400 : query compaction should delete result directory if file do not exist ( ashutosh chauhan via pras
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it with Kryo to enable support for reading RCFile input format
added methods to retrieve Java type and category of a Column to enhance type mapping functionality for better usability
added error handling for invalid host header parsing in mmm Request . java to ensure proper error reporting for invalid host headers and improve robustness
refactor ShadowTimeZoneFinderTest to use ReflectionHelpers and replace libcore . util . TimeZoneFinder with ReflectionHelpers for time zone retrieval to improve
remove dead code
refactor directory variable handling in SegmentCoreReaders and SegmentReader classes to improve code clarity and reduce redundancy
add hasMainThreadProfile method to check for the presence of the main thread profile profile .
added a check to ensure annotation definitions are not allowed in a Buck rule with the required _ for _ source _ abi setting to enforce the enforcement
updated the NAME strings for various filter factory factories to use lowercase naming conventions
updated HSSFSheet and Sheet classes for improved functionality to enhance performance and maintainability of the code
[ ds - 3952 ] fix backward compatibility issue .
8258253 : ( tz ) upgrade time - zone data to tzdata2020c
updated the initialization of SurfaceSyncGroup to include " TaskbarController " to ensure the correct context is used for synchronization
datamongo - 2392 - fix bug in gridfs templating .
renamed test methods and added tests for retrieving total size and downloaded bytes in ShadowDownloadManager to improve test coverage and ensure accurate retrieval of download
simplified character input handling in TextField . java to improve code readability and maintainability by using a boolean condition
fix duplicate in groupnode
refactored statement handling in ` Block . java ` and ` BlockLexicalContext . java ` to improve terminal state management to enhance code clarity
added hashCode ( ) method to IntervalXYDelegate and XYSeriesCollection classes and updated tests in XYSeriesCollectionTests to use it to improve object
shutdown hazelcast client after each test which occasionally fail .
removed unnecessary whitespace in CloudWatchAppender . java and added a new CachingAttributeRepositoryTests . java file to improve code readability and ensure
updated serialization method from serializeSpecialDoubleValues to serializeSpecialFloatingPointValues to ensure proper handling of precision for floating - point values
added block production methods in HttpTestZenToken002 and WalletTestZenToken007 to ensure proper synchronization of blockchain operations
modified language tag canonicalization and added tests for language tags to ensure proper canonicalization and validation of language tags without unnecessary subtags
server : add global configuration to disable ssh to agent
2 . x : remove unnecessary modifier ` ` public ' ' from class ` ` schedulerwhen ' ' ( # 6767 )
fix import in emojikeyboard
simple - search : do n ' t add dash to the list of filter
corrected the spelling of " natural " to " natural . " across multiple files to improve readability and maintain consistency in terminology
removed the call to Arrays . copyOf in Utils . java to eliminate unnecessary array copying
escape the remote address before write to prevent security vulnerability
fix the state trigger handler to correctly detect the item state
remove unnecessary sync .
added multi - threaded execution support for file move operations in Hive to improve efficiency and responsiveness of file management operations
added two overloaded ` trigger ` methods to ` WrapTimer ` to enable customizable timer behavior based on user input
[ flink - 19748 ] [ table - common ] support local _ date and local _ timestamp type in type stringutils
added a verbose error setting to the error logging process to provide visibility into error messages for better debugging
ggb - 2118 toggle menu when menu open
s2svpn : s2svpn plugin : prevent s2svpn connection to come from the same account and domain name
updated error handling in CursorReadingTask . java and added a new test for errorOnNext in CursorReadingTaskUnitTests . java to ensure errorOnNext is
pdfbox - 2941 : add error log for encrypt pdfs
fix potential resource leak in curatorwatcherimpl
refactor AnomalyDetectionResource and its test class for improved readability to enhance code maintainability and clarity
updated the ` deleteItem ` method to include a ` contentUri ` parameter and added deletion functionality to the ` HostsList ` class to ensure proper
fix javadoc for java 6 assertion
changed the method signature of ` placeOrderBulk ` to return a list of ` BitmexPrivateOrder ` instead of a collection to allow for bulk
renamed the ` enterDefault ` method to ` enterIdentNode ` and implemented the ` enterFunctionNode ` method in the ` Lower ` class to
added a new class ` J9ConstantHelper ` and modified ` ObjectHash ` to utilize its method for retrieving long values to enhance
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent invocation behavior with multiple threads to ensure proper handling of
added notification to remove a roster item that do n ' t exist on the transport .
hive - 16405 : overlay table property should be add to partition table ' s property file ( jesus camacho rodrigue
corrected a syntax error in the method loadHandle call to ensure proper handle initialization for function node processing
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerException when extTypeCustomDesers is not
set mockserver log level to warn
added unit test for AbstractRegistryFactory to ensure proper functionality of unit tests
removed the createJetty method from AbstractSolrMorphlineZkTestBase . java to simplify code by eliminating unused functionality
updated scoreMap and added termScoreMap maps for improved key management to enhance data organization by associating scores with relevant terms
updated conditional checks for data ^ parameter . data to use a less than operator to improve clarity to ensure correct handling of negative data values
remove default headline style for cli
updated the condition for notifyChange to include support for both dark theme and supporting text to ensure that the change notifications accurately reflect the support for both
[ flink - 20536 ] [ checkpointing ] do n ' t enqueue more than one pending request
updated the constants and import statements for core pool size and time for idle thread management to improve synchronization and clarity in thread pool configuration
refactor filtering logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use functional programming patterns to improve code readability and maintainability
test : make opencv test work on window only
resolve http : / / issues . apache . org / activemq / browse / amq - 2473 - apply patch provide by
do n ' t throw an exception when receive a python proxy exception
added a repeatable annotation ` @ Repeatable ` with a custom annotation ` Issues ` in the ` Issue . java ` file to provide a
corrected the casing of " hcat _ user " to " webhcat _ user " in userProps to ensure consistency with the naming
updated socket connection logic to support optional SOCKS proxy host configuration
[ hotfix ] fix checkstyle violation in slotstatus
removed the import of ClassUtils from ReflectionUtils . java to simplify dependencies and reduce unnecessary dependencies
replace HashSet with LinkedHashSet for protocol , cipher suites , and cipher suite settings to maintain order and ensure consistent iteration order
added a static resource variable and logic to return it if it matches the system resource location to improve resource handling by caching the result of system resource retrieval
correctly set buffer size when decrypt aead message .
add test for circuit breaker fallback exception
enable ssl verification for the closable http client
updated the size limit setting in the PerformanceTest class to ensure consistent handling of byte counts during read operations
move the getter / setter for preferAES from standardprotectionpolicy to protect it
( chore ) camel - opentelemetry : replace system . out . println with logger
add test for ec2 lifecycle and remove unused test
rename method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity regarding the method ' s functionality
added a try - catch block to handle potential InvalidPathException when creating a file
@ followonlockingtest add workaround for oracle 11
updated TextureUnpacker . java to improve file handling and error messaging to enhance robustness by ensuring atlas files exist before proceeding
added locking mechanism when updating service changes in AmbariManagementControllerImpl . java to ensure thread safety during concurrent access to the cluster configuration
renamed FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code clarity and maintainability
added a test method to verify that closing a result set does not close the result set to ensure proper resource management and prevent potential resource leaks
remove usage of deprecated inputstream . mark ( 0 ) / reset ( ) .
remove pre - deleted dataset from schema response ( # 1542 )
remove chunkedWriter from the pipeline when necessary to ensure proper handling of chunked responses in the HTTP / 2 upgrade
updated item ID comparison in EnhancedBrowseFragment and added a confirmation dialog in FullDetailsFragment to enhance user experience by prompting for
added a new RuleBank interface and refactored RuleFinder and CSSParser classes to use it to improve modularity and encapsulation of CSS
do n ' t crash the jvm if an exception occur during encryption
added two new files , TestMonomorphicObjectCall . java and Object . java , for testing MonomorphicObject functionality to implement and
None
hbase - 18366 use scan . getcolumnfamilytimerange ( ) to determine whether to seek ( addendum )
[ hotfix ] [ runtime ] fix typo in configuration
fix bug where alter timeseries statement do n ' t use log / freq for view creation
fix matchtext ( ) to accept whole string and also allow whitespace
added error handling for routing table creation in HelixBrokerStarter to ensure that the application does not crash if the specified class cannot be found
replace ` putAll ( ( Map ) body ) ` with ` putIfAbsent ( ) ` for better null handling in ` paramMap ` to ensure consistent
[ camel - jms ] change the jms password type to use a char array
bug 7448 : do n ' t search for domain tree if the account do n ' t exist
updated the ` equals ` and ` isUniformDistribution ` methods in the ` Counters ` class to use ` ! = ` instead of `
updated the parameter name in the initialize method to clarify the purpose of the parameter in BasicTumbleStepper
add miss call to transfertointerpreter to type and type .
delombok now also print a ` ` var ' ' in the ast for good debugging .
added null checks before initializing nodes in LRUDictionary to avoid potential NullPointerExceptions during node initialization
refactored filtering logic in DatagramSocket and changed read method to receive in DatagramChannelImpl to improve code clarity and ensure correct handling of
testquerydns : migrate testquerydns to junit 5 ( # 4575 )
add a new file NutchServerInfo . java with server - related properties and methods to manage server - specific server information to provide structured information about
replaced specific attribute handling with a utility method from the AttributeSource class to simplify attribute management and improve code maintainability
add timestamp support to cql insert
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and ensure correct usage of BigInteger constants
make sure we use 8 bit bit as well a 16 bit bit in number . bitToIntBits ( )
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and validate new IP address constants
added a method to check for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to enhance error handling for constraint violations during database operations
[ issue # 7999 ] remove the need for set 0 if not find in brokeroffsetstore
added methods for adding tabs with custom icons and sizes to enhance tab customization capabilities in the user interface
replaced array allocation with zero - length arrays in multiple classes to optimize memory usage and improve performance
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironmentbuilder
added a conditional check to return true if both ` reqGroup ` and ` scope ` are equal in ` MavenVisitor . java ` to ensure that
updated test cases for " MOCK _ APP _ SECRET2 " , " MOCK _ NAME _ UPDATE " , and " MOCK
added a new test class FormatCheckingTest for verifying class format errors to ensure that the application correctly identifies and reports illegal class names during execution tests
updated line number assignment logic in CodeGenerator . java to improve code clarity and maintainability
added a try - catch block around the code to handle potential exceptions when retrieving configuration properties
added overloaded methods to create a toggle button with Image and ButtonGroup parameters in RadioButton . java to enhance functionality for creating toggle buttons with customizable
updated LRUCache and MetadataQuerierByFileImpl to set the initial cache size to improve cache performance and scalability
int - 1188 , int - 1188 , int - 1188 move internalmessagebus internalmessagebus internalmessagebus internalmessagebus internalmessagebus
added a null check for symbolicName before replacement to avoid potential NullPointerExceptions when symbolicName is null
add -- usemode system property to load mode contribution
[ flink - 25957 ] [ test ] add more robust shutdown hook for yarnarn
updated the ` RobolectricTestRunner ` class to use ` androidManifestPath ` instead of ` projectRoot ` to enhance clarity
replyproducingmessagehandler : do n ' t propagate non - existent header
refactor CompareMode class to improve code readability and maintainability
added HasTests interface implementation to Arg class in RustBinaryDescription and RustLibraryDescription to provide access to test targets by specifying their dependencies
updated placeholder resource references in FileMessagevh . java to improve clarity and consistency in the codebase
updated OnExitTest . java file to improve test coverage for on exit functionality
added an onUserPreferenceChanged method to recreate the taskbar when user preference changes to enhance user experience by ensuring the taskbar is refreshed upon
updated HeapDump . java to differentiate between IbmVM and J9 implementations of heap dump methods to improve compatibility with different JVM versions and
( chore ) camel - mybatis : ensure session be close in case of exception
simonstewart : add a hack to make it easy to switch to a window in ie .
updated Java version in IteratorToFor . java for clarity and consistency to ensure compatibility with Java 5 features and improve pattern matching
set application state to unavailable when it can not start
updated buffer template methods for position and limit calculations to improve code readability and ensure valid buffer position handling
simplified the method call to improve code readability by removing unnecessary URI conversion
modified array deletion logic and added setEmpty methods across multiple classes to enhance functionality and flexibility of array management
[ java ] make vr . protocol and vr . transport enum public .
updated test cases in TestMultiPhraseQuery to use a new document structure to ensure the tests validate the correct functionality of document handling
# 730 - do n ' t filter reservation with pending payment
added a Thread variable and improved error handling in HttpChannelState . java to ensure the current thread is the same while invoking the onTimeout
replace printStackTrace ( ) method with logger warning messages and update logging statements to improve logging clarity and enable detailed exception information
updated package - info . java files for mmm and ppp packages
fix inconsistent read consistency for paxos SERIAL . patch by jbellis
added support for detecting " Home " models by including " Home " as a valid model name to enhance functionality to allow recogn recognition of additional
added a new class ` Wait ` and modified ` PlainSelect ` to handle ` wait ` and ` timeout ` attributes to enhance functionality by
updated Neo4j class to use AttributeController and AttributeTable for setting node and edge attributes to enhance attribute management and improve data handling
added a null check for serverName in SessionManager . java to ensure proper handling of cases where serverName is null
nifi - 3862 : move rocksdbflowfilerepository and rocksdbmetronome to nifi . controller . repository
updated the method to retrieve the GRANTABLE status from a string to improve code clarity by using a more descriptive variable name
updated condition checks and logging in JavascriptContext . java to improve URL validation and enhance debugging information
camel - 7999 fix the cxftomconsumertest
hbase - 19309 use addcolumn ( ) instead of addcolumn ( ) to add a new column ( addcolumn ( ) ) in load
implement the Disposable interface in the Texture class to enable for proper resource management and prevent memory leaks
added null checks for tldBundleLocation and updated references in FragmentActivator and OSGiAppProvider to improve robustness of web application context handling
check goquorum genesis file for mainnet and not only for genesis file
replace IOException with Throwable for better error handling to improve error reporting by capturing stack trace traces
added a condition to skip thailand country checks for JP as " JP " in LocaleTest . java to address issues caused by era changes
updated API response containers for HostResponse and RootServiceService from Wrapper . class to HostResponse . HostResponseWrapper . class to ensure consistency with
added boost comparison and hash code calculations to the FilteredQuery class to ensure correct filtering and hashing behavior based on the boost in the query processing
removed an unused parameter from the FileMenuFilter constructor to streamline the code to improve readability and maintainability
replace listbox with scrollpanel to improve performance
add a new Java file for testing CMS class unloading behavior in a garbage collection scenario to verify that the CMS class unloading is disabled and
update spongecommon for spongecommon fix .
refactor ` ColumnMapKeyMappingPreparedStatementSetter ` and related classes to implement ` ItemPreparedStatementSetter ` instead of ` KeyMappingPreparedStatementSetter ` to
fix compactionstest by use identityqueryfilter in getscanner ( )
refactor code to validate the presence of a ' type ' attribute in the XML attributes before retrieving its value in MiniAapt class to improve error handling
added a new SpEL judge operation and updated the ` OperatorJudgeFactory ` to utilize it to enhance condition matching capabilities by
change ordinalitySymbol type check from equality to checkState for BIGINT type to ensure consistency in type validation
bugfix # 112720 , profiler . java should be use from serviceloader instead of service
update copyright year to 2020 [ skip ci ]
added logging for attribute name resolution failures in ` AttributeResolution9 . java ` to improve error reporting and debugging for missing attributes
update source and target versions in SetupHid . java from 1.5 to 6 to improve compatibility with new features and requirements
add support for metadata only projection rewriting in pushprojecttotablesourcescanrule
replaced direct access to language look - up table with a sorted list of localized names to ensure consistent handling of localized names across the application
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
added conditional logic to refresh shared preferences based on live streaming settings to ensure shared preferences are refreshed appropriately when live streaming is not disabled
added the exception cause in the AuditStrategy creation method to improve error reporting for better debugging
( chore ) camel - core : file test fix
fix test compilation after 3689
added transport support functionality to GitClientApplication and improved repository URL handling in RepositoryUrlPanel to enhance user experience by allowing transport options and
added long press reason and delegation name methods to multiple input consumer classes to enhance user feedback and clarify input handling functionalities
add null check for mavenMetadata and adjust availableVersions accordingly to improve robustness by handling versioning logic when mavenMetadata is null
added a check for the " Large Page Support " property in the output to ensure that the log includes the expected stack trace for debugging purposes
cloud _ usage : skip event migration if db do n ' t exist
camel - 7999 : fix the unit test error of brokerxmlconfigstarttest on window
added a new test class TestObjectStreamClass for serialization testing to ensure proper initialization and deserialization of objects in the ObjectStreamClass
[ type : fix ] fix data center info null check
change log level to warn for capturing opentracing failure .
added a toString ( ) method to the Generator class to provide a readable string representation of the generator registration count
refactor the handling of the doquote variable in the URI class to improve code clarity and maintainability by separating the doquote variable into separate
added a check to throw an exception if a requested resource does not exist to ensure that missing resources are handled gracefully in the cluster controller
added error logging for API response extraction and improved null handling to enhance debugging capabilities and ensure robust API response processing
allocate the byte buffer only for Android versions below 5 to improve compatibility with older Android versions
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a forceProjection parameter to the HashJoinInfo class to allow for backward compatibility with forced projection of join operations
added a method to retrieve the string distance in SpellChecker to improve functionality for calculating string distance in spell checking
updated PendingIntent flags and introduced a method to create immutable pending intents to enhance security and ensure proper permission checks for push notifications to improve application compliance
added functionality to append read column IDs to configuration in HiveFileFormatUtils to improve handling of column IDs for better configuration management
replace instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java `
None
[ ambari - 24936 ] fix service info resolution when parent service do not have a version ( ajit )
added a new test file ` RawSerializationTest . java ` to validate JSON serialization of various collection types to ensure correct handling of primitive and object
simonstewart : make the ssl cert generate by the selenium server configurable
updated loop to use index - based access for accessing replies to improve code clarity and ensure proper padding for the last reply view
increase timeout in expiringurlcachetest
added a test method forNGramFilter to ensure correct payload processing in the NGram filter functionality
ambari - 13132 . add support for audit log configuration ( ajit )
removed old test methods and added a new test for varying array sizes in EasyRandomTest . java to improve test coverage and ensure correct functionality of
bug 7059 : add miss catch clause to stop / reboot answer
added a ThreadLocal reference for the ` tryWriteAgain ` state and modified logic to manage its status to ensure that the ` tryWriteAgain ` state
reformatted code for consistency and added a method to check ancestor visibility to improve code readability and enhance functionality for ancestor visibility
added logging for failed rolling - update step on deployment group to improve debugging and error reporting for troubleshooting issues
[ hotfix ] [ table - common ] fix checkstyle violation about unused import
added exception handling for BadCredentialsException in DaoAuthenticationProvider and introduced a new Event class for authentication failures to improve authentication flow by notifying
renamed AtMostXVerificationTest class to improve clarity and maintainability of verification tests
updated default QType assignment to use LuceneQParserPlugin . NAME and modified related code to ensure consistent use of the correct default QType across the
fix test failure on non - us locale .
added a new method ` isInitialized ( ) ` to the ` JavaLanguageServer ` interface and created a new file ` Main . java ` with demonstr
updated variable and method names from ` idToken ` to ` shouldHaveIdToken ` to improve clarity and consistency in testing token validity
add transaction handling methods to DatabaseAdapter and delete all accounts in GNCXMLXMLHandler to improve transaction management and ensure data integrity during XML import
replace byte array conversion with ByteArrayOutputStream for improved performance to optimize memory usage during reading from input stream
fix checkstyle issue in io / messagingtemplate . java ( # 724 )
added isAcceptable method to check if a source file is a CompilationUnit to ensure proper type checking for CompilationUnit instances
updated TestIndexWriterMergePolicy to set maximum buffered documents and RAM buffer size to 100 MB to improve memory management during merge operations
added a test method for updating witness capsules in ManagerTest . java and clear the witness capsule in NodeDelegateImpl . java to
added NoSuchElementException handling in CopyOnWriteMap . java to ensure robustness by gracefully handling NoSuchElementException during iteration
remove log4j dependency from flume - connector ( # 2373 )
refactor BasicAuthIntegrationTest and DaemonStream to improve collection reindexing and metric assertions to enhance test reliability and performance by ensuring proper
replace HashMap with LinkedHashMap for the nodes variable to maintain predictable iteration order
return 500 error when internal exception thrown by jersey during startup instead of emit an error page
replace string equality checks with a reusable validateHeader method for response headers to improve code readability and maintainability by centralizing header validation logic
added a switch statement to handle specific property keys in systemProperties to improve property management by managing specific system properties
modified methods in StringSubject to accept CharSequence instead of String to enhance flexibility in string containment checks
[ gr - 46711 ] [ gr - 46715 ] jfr : check jfr parameter location for method and interface .
rename the IntUtilsTest class to PrimUtilsTest to improve clarity to better reflect the purpose of the test class
updated the connection factory property to use a new variable ` ds2 ` instead of ` ds ` based on the ` forCompactor ` condition to
updated DeploymentOptions configuration settings to enhance deployment configuration management
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable ` instead of ` Drawable . ConstantState ` and adjusted drawable resource dimensions to improve
updated resource handling in XmlParser and YamlParser classes to use try - with - resources for better resource management
added support for coalesce operators in RexNodeConverter to enhance functionality for handling coalesce expressions in SQL queries
camel - 7999 : fix the unit test error of camel - hl7
updated JavassistProxyFactoryFactory to use context class loader for proxy factory creation to ensure proper class loading to prevent runtime conflicts conflicts conflicts conflicts
make date adapter thread - safe
refactor code formatting in DocumentUtil . java for consistency to improve readability to enhance maintainability
refactor HttpClientRequestBase to simplify URI handling and query parsing to improve code clarity and maintainability
added a filter method to keep old feed entries to ensure only valid feed entries are processed
hbase - 2591 addendum . downgrade log level from fatal to warn to
refactor ` NodeMap ` class to implement ` Iterable < T > ` instead of ` Iterable < T > ` to improve code structure and
rename variable ' predicate ' to ' subPredicate ' for clarity to improve code readability and maintainability
added a check for non - empty fields before adding aggregation operations in MongoRecordReader . java and modified return logic in RexToMongoTranslator . java to
added default admin list entry if none exist
replace MultiFields with SolrIndexSearcher for term retrieval to improve compatibility with Solr ' s slow atomic reader functionality
camel - 17806 : improve debug log for bean with circular reference
modified GroovyParserVisitor . java to simplify the handling of class node and primitive type retrieval to enhance code clarity and ensure consistent return behavior
remove uninterruptible code from frame info query result .
fix flaky test on slow box
add a new package - info . java file for the test resources to provide package - level documentation for the test resources
updated the calculation of readLen in MessageUnpacker . java to improve the logic for determining the length of data read from the buffer
switch to core in order to fix build
updated SQL query to include user filter to ensure correct filtering of icon based on user serial
[ issue # 4841 ] fix typo in defaultmqproducerimpl # getbackpressureforasyncsendsize ( )
do n ' t allow module - info . class whitelisting by default
cloudstack - 3439 : drop obsolete foreign key for external dhcp device
removed the IJava2DRenderer interface and its associated interface from Java2DRenderer class to simplify the code by eliminated unused interface
added onTearDown method to DefaultAudioSink to notify the listener upon offloading buffer cleaning to ensure proper handling of audio playback when the listener is active
added scheduled task scheduling and improved upstream list management in UpstreamCacheManager . java to enhance the efficiency and responsiveness of upstream task
[ hotfix ] [ javadoc ] fix typo in streamtype
updated assertion message to include the output context to improve clarity of assertion failure output
updated authentication logic to require admin role and refactored message formatting in FilestorePage and RootPage classes to enhance security and clarity
ignore camel - elasticsearch rest test for now
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48258 for http :
update translation keys for left , right , and sell buttons in OfferBookChartView . java to improve localization support for better user experience
fixed restlet issue with invalid url
make createnextblock nullable and add test .
removed the ` Serializable ` interface from ` DBNavigableSet ` in ` BTreeMapJava ` and updated tests in ` ConcurrentSkipListMapTest
[ hotfix ] [ sql - client ] fix npe in log when startup throw exception
refactor conditional statement for clarity in the command mode condition to improve code readability and maintainability
updated method to return the indexOf of a file instead of mFilesAll to simplify file retrieval logic
deleted the PlainVerifier . java file to remove unused JWSVerifier class to simplify the codebase
added a check to close system windows when the alt tab is triggered to ensure proper resource management and avoid potential memory leaks
updated imports and modified dialog behavior handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve code clarity and ensure proper UI state management
updated MimeUtil . parseCharset calls to specify UTF - 8 encoding as " UTF - 8 " to ensure consistent character encoding for parsing MIME types
added a call to the superclass ' s deinitialize method to ensure proper initialization of the TextField component
replaced custom serialization logic with TestUtilities for LogFormat to improve code maintainability and streamline the serialization process
updated time range parsing in LogicalGenerator and modified fill initialization in GroupByFillDataSet to ensure accurate time representation and improve data handling logic
updated array size validation logic in JAXWSExceptionBase . java to ensure proper handling of negative and specific array sizes
test : migrate ctUnresolvedimporttest to junit 5 ( # 4646 )
increased timeout duration from 10 seconds to 60 seconds to allow for a longer wait time before thread execution
[ hotfix ] [ test ] change default scheduler component slot sharing group to ` ` region ' ' .
added title handling methods to ShadowActivity , ShadowAlertDialog , ShadowDialog , ShadowTextView , and ShadowAlertDialogWithShadowFragment , and updated ShadowAlert
updated logging mechanism from LogFactory to POILogger to improve logging compatibility with Apache POI ' s logging framework
updated alarm handling logic and improved alarm state management in InstarHandler . java to enhance clarity and functionality in motion area detection and
log map delete latency ( # 15620 )
refactor response status check to use a switch statement to improve readability and maintainability of the code
updated the method to find the javac location and added error handling for retrieving the javac location to improve the robustness of the code by ensuring the
add project name for newly create flutter channel ( # 1443 )
added a new test class ` DeprecatedStubbingTest ` to test stubbing behavior with deprecated methods to ensure correct behavior of stubbing
replaced the import of ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType ` to update
add nml and nx a part of the apparent nml support
add boolean system property to allow rsa key exchange by default
fix findbugs warning
remove the access token from the auth service handle if it ' s not in use ( pubsub )
replaced AGGRESSIVE _ EASE interpolator with EMPHASIZED interpolator in TaskbarEduView . java to ensure animations are
added support for updating region location in ConfigPhysicalPlan and improved logging messages in RegionMigrateProcedure to enhance region migration functionality and provide cle
added a new file ` FileDialogLeakTest . java ` to test the finalization of the ` FileDialog ` to ensure that the ` FileDialog
hbase - 2782 testopentableincoprocessor move testopentableincoprocessor to hbase - testing ( add
svm : fix miss uninterruptible annotation
[ hotfix ] [ table - common ] remove deprecate split method from pb message
modified conditional check to ensure disi is not null before proceeding to prevent potential null pointer exceptions
make sure source info be refresh even if the real source fail
added support for checking if the Java version is at least JDK 9 or newer to improve compatibility checks for Java version compatibility
fix compilation error
enable end - to - end encryption by default
added menu item support in DirectMessageConversation to enhance user navigation to the home button in the action bar
added a new GET _ USER constant and updated PROTOCOL _ VERSION to 6 and implemented user retrieval logic in RpcUtils to enhance user authentication handling
added a conditional annotation to enable the test for both amd64 and x86 _ 64 systems to ensure compatibility with different system architectures
updated the handling of the ` notFound ` strategy to use the original ` startClass ` to ensure the correct original exception is propagated
updated exception message format and added local variable handling in DexBody . java to improve error clarity and ensure proper local variable management
get supplie response from asynccontext instead of getresponse ( )
warn user if nurserostering window use different look and feel
fix version regexp in apppage
updated animation listeners in LauncherAppTransitionManagerImpl to use startAlpha instead of mUiResetListener to ensure consistent behavior during app transition animations
dumpedprivatekey : fix a typo in the error message
fix copy / paste error
modify milestone parameters handling in TicketPage . java to use WicketUtils for open and closed tickets based on milestone state to improve
fix the wooden pipe ' s battery not initialize properly
enhanced the ` getStateMachineClusterInstance ` and ` getStateMachineClusterInstance ` methods to include additional parameters for blueprint name and revision to improve cl
initialize the downgradeAllowed variable to true and add a test for checking if downgrade is allowed in UpgradePack to ensure that downgrade functionality is properly
replaced NameType . ATTRIBUTE with NameType . ATTRIBUTENAME for better clarity and consistency in XML processing to enhance code readability and maintain
add an option to emit system library loading . default to false .
refactor code to use a method for retrieving the app name comparator instead of a local variable to improve code readability and maintainability by central
mondrian : create parent directory for output stream when write output file for efficiency .
modified the doTest method to include detailed assertion messages to improve debugging and traceability of credential validation tests
camel - 7999 : fix routebuilderfinder to work with spring 3.0
[ type : fix ] [ core ] only effective effective mode for push - based reporter
hbase - 27486 testfulllogreconstruction # testfulllogsynctest failure ( ted yu )
added support for socket options to reuse address and traffic class in the DatagramSocket class
fix checkstyle issue in entity / passiveserver . java ( # 774 )
kristianrosenvold : delete deprecate locatable interface
updated error messages in VersionInfo . java to clarify the conditions under which the VERSION _ FIELD is checked for search and retrievability to improve
rename equalityPredicateColumns to predicateColumns and update related logic to improve clarity and consistency in handling predicate columns
rearranged the initialization order in HandshakeHandler . java to improve code readability and maintainability
corrected the closing brace formatting in Navigator . java to ensure proper syntax for code navigation
set default record reader configuration class to ` org . apache . pinot . plugin . inputformat . recordreaderconfig ` ( # 5
added geoserver and lessen query functionality in MongoQueryCreator to support inclusive range queries in MongoDB
refactor group by clause validation logic into a separate method to improve code readability and maintainability by reducing duplication
filechannellines Spliterator : release buffer if unmap fails .
refactor code to use a local variable for the validator before accessing its methods to improve code readability and maintainability
added a schedule method to ` CircuitBreakerImpl ` and modified ` CircuitBreakerTest ` to utilize it to improve the retrieval of
removed the FLAG _ ACTIVITY _ NEW _ TASK flag from the intent flags in Launcher . java to simplify the intent handling by only creating a
webui : renamed " ajax " to " progressbar " for submission form .
disable test till it can be implement
added synchronized keyword to add and getExportedCount methods to ensure thread safety during concurrent access to the methods
updated import statement for requireNonNegative in MetricsImpl . java to ensure consistency with the updated invariant class
updated character validation logic in HttpParser and added a new test for encoded HTTP headers in HttpParserTest to improve input validation and ensure proper handling
updated the layout reference from ` trends _ activity ` to ` configuration _ activity ` to align the activity with the new design requirements
fix ( documentation ) : slfwttextlisting now print position correctly
solr - 12028 : add timeout to forceleadertest to avoid false failure
refactor Thread class to improve code readability and maintainability
refactored the set of template file suffix constants and introduced a forceTemplateMode flag for template file recognition to improve code readability and
fix the cxf unit test error of camel - example - cxf
fix checkstyle issue in yamlrepresenter
updated output formatting in ToChar . java and added tests in TestFunctions . java for functionality to ensure correct conversion conversion between date and time values
added validation for transaction strings in GenericUDTFGetSplits to ensure that only valid transaction IDs are processed in the code
updated JsonSerDe to use Collections . emptyList ( ) instead of checking if columnNameProperty and columnTypeProperty are empty lists to improve performance and
fixed error when load a workbook without initial image
refactor SSTDeserializer class to improve structure and error handling to enhance code readability and ensure data integrity during string creation
refactor grid column retrieval to use a constant for default grid column value to improve code readability and maintainability by avoiding hardcoded values
update error message for line contents mismatch to clarify that both empty - differences and line - break characters differ
added a ` waitingForKeys ` boolean variable and updated related logic in ` DecoderInputBuffer ` , ` ClippingMediaPeriod ` , and ` SampleQueue
updated the API path annotations to remove the ' / api ' prefix to simplify the API structure for better readability and maintainability
corrected spacing in conditional statements in LineUtilitiesTests . java to improve code readability and maintain consistent formatting
updated varargs handling in JavacParser and added new classes VarargsAndOldArraySyntax and T6569633 to improve error handling for old array syntax
add warn log if defaultdrmsessionmanager be use on wrong thread
updated the parsing logic in VariableContext to handle method calls and improve clarity to enhance the accuracy of type recognition and ensure correct context
ignore invalid compilation unit and profile string json input
fix buffer limit calculation in piece .
allow user to configure response timeout on request / reply pair
added ` NativeLinkTarget ` to ` CxxLibraryFactory ` and marked methods as deprecated to enhance clarity and maintainability of the code
camel - 16400 : added unit test for camel - rest - api
added support for handling field access expressions in the ASTConverter and updated the REXConverter to use this new method to improve the handling of field access expressions
replace the use of ` QueryLogEntry . values ( ) ` with a constant reference to ` QUERY _ LOG _ ENTRY _ VALUES ` to improve code read
fix ( helidon - webclient ) : do not relativize uri when proxy be not set ( # 10323 )
modified certificate handling logic in PKCS12KeyStore and StoreSecretKeyTest to improve clarity and correctness to ensure proper initialization of certificate chains and avoid null
added reflection access checks and updated methods for class linking to enhance security by verifying access permissions for reflection - related operations
removed the public access modifier from the constructors of CollisionMap class to enforce encapsulation by restricting the constructor visibility
marked the method ` getRawInputFromTransactionInput ` as deprecated and added a null check for the input parameter to indicate that the method is outdated
simplified log level handling by using a switch statement to improve code readability and maintainability
api : do n ' t insert region _ id into user table when create account
bug 60284 : make old excel extractor throw encryptdextractor exception
add -- add - exports flag to mx _ java _ benchmarks
adjusted the visibility of the image in TimeLineCursorAdapter to return GONE to ensure the image only displays when necessary
fix test which randomly fail on slow machine
updated directory handling in ShadowContext to support different directory types to improve flexibility and ensure proper directory creation based on the provided type
replaced custom exception factory implementation with dynamic retrieval from the OpenTest4J class to improve flexibility and maintainability of exception handling
updated WAIT _ TIME _ MS constant from 10000 to 60000 and removed trail whitespace to improve code readability and maintain consistency
updated ConnectOAuth2RequestFactory to support dynamic audience claims based on request parameters to enhance flexibility in handling different authentication extensions
camel - kafka : remove default value of ` ` breakonfirsterror ' '
added a new constant selectableItemBackground to support item selection functionality
replaced individual trade DTO imports with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and prepare for future implementation of
updated the eventType assignment logic to ensure consistent event type handling
add resumablerandomaccessfilelistener to fix buffer leak
fix for tck failure due to security vulnerability .
update hssfdataformat to account for the addition of format record
[ flink - 20536 ] [ kafka , test ] deprecate kafkaproducer factory method that have no return value
make sure we do n ' t exceed the max compress length .
camel - 14354 : add an idempotent repository so you can check if a value be null .
fix containerrepair recipe drop item not be able to damage . close # 3762
added conditional logic to handle local repository layout to improve flexibility in version resolution based on layout
exit gracefully if taskmanager fail to initialize
add Maven deploy command - line options for file deployment in AbstractArtifactResolutionException to enhance flexibility and improve error handling during file deployment
replace ` getTemporalPath ` with ` getInternalTemporalPath ` in ` FileStorageUtils . java ` and update its usage to include ` mContext `
added a new method ` findByEntries ` to ` FeedEntryStatusDAO ` to retrieve feed entry statuses by subscription ID to improve functionality for
call vertx . execute ( ) after vertx . getcurrentthread ( ) . runblocking ( ) in contextimpl # onblockcheck ( )
fix : add miss output param
updated file loading logic to accommodcommod different Android SDK versions to ensure compatibility with newer Android Android Android SDK versions
replaced setter methods for remote address and hostname with direct assignment to the object to improve code clarity and reduce boilerplate
added a null check for shadowClass annotation to ensure that a non - null shadow class is provided to avoid runtime errors
enable mutual authentication by default if mutual authentication be enable .
added a test to verify that requesting plain HTTP endpoint over https throws an SSLException to ensure proper error handling for SSL in the server
added protected getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance accessibility for subclasses and improve usability
update sitemap event mapping logic in multiple classes to improve code organization and readability
corrected a typo in the warning message from " address / subject / text " to " from / text " in CommunicationsManager . java
# 1630 - optimise bean draft query for draft - friendly element - no effective change
added exception handling for IO issues in MultipartBody . java to improve stability by retrying writes on IO exceptions
standardize spacing in ` ExecutableFactory . java ` and ` ZipFolder . java ` ( # 3037 )
doc : generate sample code in the java microgenerator ( # 350 )
use work directory if available for attach file action
added LoadOptionsBuilder to SchemaCrawlerOptionsBuilder for improved schema information level configuration to enhance flexibility in schema crawling options by allowing dynamic
updated package structure and added a new test method for legacy library loading to align test with TestNG - based testing conventions conventions
replace exception throwing for unknown operation names with a return statement to simplify error handling and improve code clarity
added methods to set the name , enabled , and expanded of a prototype to ensure the prototype ' s state is accurately represented
refactor database connection handling to use try - with - resources to ensure proper resource management and automatic closing of the connection
[ hotfix ] [ stream ] fix typo in datastreamjob
fix test to work on window
camel - 7962 fixed the unit test error of camel - cxf
updated the condition to check for " h2 - 14 " to ensure proper handling of the " h2 - 14 " protocol in the connection logic
updated method symbol handling and added a lambda detection in multiple classes to improve code clarity and functionality for handling synthetic and synthetic methods
simplify tree structure , a this seem to be a temporary fix
increase timeout for dl4j download
added phrase slop setting to the query parser
increased LONG _ PRESS _ DELAY from 10 to 100 milliseconds in LongPressMouseListenerTest . java to ensure proper delay for event triggering
change the default value of Servers . parse from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink .
improve screenshot generation performance by save task in separate thread
update visibility conditions for edit options in EditShareFragment to ensure edit options are only displayed when available , improving user experience
clamp the progress value to a maximum of 1.1 f to ensure progress does not exceed a valid range of 1.0
remove unused session . packetreceived ( )
refactor authentication handling in ` DelegatedAuthenticationGenerateClientsAction ` to improve error handling and logging to enhance clarity and traceability of
added null checks for service before accessing its methods in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction to
[ cli ] set ` ` account level ' ' permission to be ` ` true ' ' by default
added a condition to exclude the " androidx . room . CoroutinesRoom $ Companion " class from instrumentation to exclude unneeded functionality from
modified the ` isSupported ` method to synchronize it properly to ensure thread safety when checking the support of ` HttpCallerInfo `
removed the setter method for initScripts in InitializingDataSourceFactoryBean to streamline initialization script handling
camel - 6287 fixed the issue of reply to queue / consume queue with more than consumer
refactor AuthenticationProvider and TargetObject classes to improve code readability and maintainability
add back open mc block support for inline image tag
log4j2 - 1080 added unit test for patternlayout
simonstewart : run htmlunit directly without throw an exception in the hta test suite
added MwThankPostResponse class and updated service implementation to handle thank requests from the API to enhance user experience by providing a more structured
implemented the SocketBased interface in ChannelEndPoint and updated SslConnection to use the SocketBased interface to enhance socket functionality and improve code consistency
replaced ` enable ( ) ` and ` disable ( ) ` methods with ` enable ( ) ` and ` disable ( ) ` methods for revoking
added unit tests for handling implicit joins in HQL to ensure correct functionality of the call history retrieval method
normalize whitespace in assertion to ensure consistent behavior across different operating systems
replaced the usage of ` toCommit ` with a collection of files to commit in ` IndexWriter ` to ensure that unreferenced files are not
removed the ` final ` modifier from multiple methods in ` BaseError . java ` to enforce immutability of method signatures and improve code readability
added validation to ensure the consume user resource percentage is within the valid range to prevent runtime errors
added a condition to show the old login feature based on a boolean resource to enhance user experience by providing an option for controlling login behavior
polish ` ` make test class name consistent ' '
change default response page to UsersPage to improve user experience by providing a more appropriate navigation
updated debug log message to include the exception details to improve error reporting for better debugging
refactor shutdown logic in ConnectionManager to ensure proper shutdown to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code readability and maintainability
added a new method ` createDynPartSpec ` to encapsulate the logic for creating dynamic partition specifications to improve code readability and maintainability by red
decimal format : round half up factor by default
added a method to JarDirectoryStep to handle directory entries and updated directory traversal methods to ensure jar entries have the correct last modified time for
added a new class JWKSetEditor for editing JWK set properties to enable easier editing of JWK set properties with customizable values
replace minTerm and maxTerm parameters with PendingTerm and lastPendingTerm in OdsBlockTreeTermsWriter . java and BlockTreeTermsWriter
added boundary for truffleboundary .
changed the default value of fetcher . threads . per . host . by . ip from true to false to disable the fetcher thread per host by default
updated the condition for setting query and transaction timeout in StatementUtil . java to ensure correct validation of transaction timeout values
added import statements and conditional logic for handling target configuration hash in HaskellGhciRuleIntegrationTest . java to enhance the project to include target configuration hashing when appropriate for improved path resolution
refactor ReplicaPosition class to improve code readability and maintainability
bug 10692 : schedule stats update task immediately ( # 10693 )
update animation interpolators to use a constant FINAL _ FRAME to improve code readability and maintainability by avoiding hardcoded values
adjusted the height calculation for the navigation bar to account for the display density for better visual feedback
added a new module - info . java file defining module dependencies and initialization of FillInterest to establish module boundaries and improve code clarity
fix npe in jsontype and add test
removed unnecessary parentheses around the parentheses for context initialization to improve code readability and reduce potential errors
[ hotfix ] [ doc ] fix default value of checkpoint tolerablefailurenumber to 0
refactor ` reportInnerClassReferences ` method to accept ` Element ` instead of ` TypeElement ` and implement package reference handling to improve type
updated the command string concatenation in TimestampCheck . java to include an empty string for VM options to ensure proper execution of the command without unnecessary arguments
replaced FluentIterable with Streams for file listing to improve code readability and performance by utilizing modern Java Stream API
[ 3.0 ] disable the registration feature by default ( # 9833 )
on otr session end if security otr be disable .
added new properties for node label outline customization in NodeLabelRenderer to enhance rendering customization options for node labels
updated ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
modified a boolean value from false to true in the Win32FontManager class to enable additional font management functionality
added null check for the visitor before visiting to ensure proper cursor handling and prevent potential null pointer exceptions
add error - handling policy for when classpath be not available
added support for content and text alignment features in LabelBlock to enhance text rendering flexibility and alignment control
refactor mmm Class and Parameter classes to improve code readability and maintainability
refactor IndexReader class to improve code readability and maintainability
replaced boolean isLoopback with Boolean isLoopback and updated related logic to improve clarity and efficiency in determining loopback status
modified the ` fromRfc1123DateString ` method to accept a ` Locale ` parameter to ensure consistent date formatting across different locales to support locale
fix flaky test
add no _ hits aggregation support for json elasticsearch integration
bug 13939 : use hoursinmonths instead of minutesinmonths since rate limiting
[ java ] add try - with - resources .
do n ' t drain watcher even if there be no event queue
refactor widget event handling in PageChangeListener . java to simplify conditions and improve readability to enhance maintainability by consolidating widget event
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` HSSFWorkbook ` , and ` FileSharingRecord ` classes
added a try - catch block around unregistering invalidated sessions to handle potential exceptions and log them for debugging purposes
refactor CategorizationFragment to improve code readability and maintainability
[ hue ] fixed reporting of bridge report light to ` ` not reachable ' '
do n ' t try to write debug log when client be still loading
read unit . thousands from locale instead of hardcoded mil [ ]
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class for reading strings to improve code readability
added parameterized the use of reserved words as identifiers in HQL and JPQL query tests to ensure that queries with reserved words are correctly
added tests for serialization and deserialization of a map using Gson to ensure proper handling and structure of nested maps in JSON
added bounds checking for x and y coordinates to ensure they are within the specified offset range to prevent potential index issues
updated references to ` SORT _ ORDER _ DIALOG _ TAG ` for consistency and clarity to improve code readability and maintainability by
if the test plan be not find , error and exit with 1 error
updated method names from " dbmsName " and " schemaName " to " getDbmsName " and " getTableName " , and
updated argIdent assignment and added null check for it to improve robustness by handling cases where argIdent is null
use scf . getprotocol ( ) instead of hardcoded ssl - http / 1.1
volume : set volume to true by default
modified the ` version ` method to accept a boolean parameter for full version display to improve clarity of version messages based on user preference
updated logic to check for global changes and parent changes in ChangeLogParameters . java to improve handling of change logs to ensure correct identification of changes based on
change log level from warn to debug when a transaction can not be find
skip test that cause exception on oracle
reordering of startHandshake and setSoTimeout for sslSocket to improve code readability and maintainability
updated status bar size calculation to account for MainActivity ' s popup state to ensure proper status bar sizing without affecting activity state
change the default value of CHA to true in EspressoOptions . java and DefaultClassHierarchyOracle . java and NoOpClassHierarchyOracle
log thread context classloader on debug
refactor JodaTimeRangeRandomizersTest to simplify import statements and improve test readability to enhance code clarity and maintainability
refactor WebDescriptor to conditionally redirect schemas based on the servlet major version to enhance flexibility and support for different Jakarta
fix : add node ready state check to readiness
fix copy / paste error
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest RPC version
added a null check for System . getSecurityManager ( ) ) before calling ReflectUtil . checkPackageAccess ( ) in ObjectStreamClass . java and Object
removed unused imports and simplified method implementations to improve code readability and maintainability
chore ( deps ) : update dependency org . google . common . collect . guava . metrics to v2.0 . 2 ( # 2
simonstewart : it ' s ok to run the mockbrowsertest in one test so that it ' s easy to run
change default logging level from OFF to ERROR in Launcher . java to improve error reporting for better debugging
changed member variables to be final in IconNormalizer . java to ensure immutability and improve code readability
ww - 3833 add support for first call prepare do to the action proxy .
refactor showWorkspaceAndExitOverviewMode method to simplify logic and improve readability to enhance clarity and maintainability of the code by
fix http : / / github . com / hazelcast / hazelcast / issues / 12695 by remove eager singleton on authentication
updated the incomingAssociations method to accept an additional boolean parameter for ignoring invisible associations to enhance flexibility in association handling based on user preference
bug 13923 : do n ' t remove private ip from the db when destroy pod
add miss ' command ' info in ' async ' profiler
added a new ` RequiredRefFieldModel ` class and refactored the ` ModelResolver ` to enhance the structure of required properties to
renamed ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreEnvironmentBootstrapAutoConfiguration
refactor FeatureFlags class to improve code readability and maintainability
updated UUID generation logic and modified unique ID format in ConfigStore . java , CommonSetup . java , and ItemUIDToHueIDMappingTests
added image handling in TimeLineCursorAdapter and TimelineArrayAdapter to ensure images are set correctly when a picture is present
update documentation for compaction on full CRUD table to clarify that compaction on insert - only table will always run via queries regardless of configuration value
added a null check for the storage path in the condition to ensure robustness by avoiding potential null pointer exceptions
vectormapjoinfastbyteshashtable . checkresize ( ) may cause out of memory error
modified the LDAPConnectionService class to enhance connection handling and improve performance
change @ xmlattribute to @ xmlattribute because it ' s optional .
removed debug tracing log statements in TouchInteractionService and RecentsAnimationDeviceState to clean up the code and improve performance
added a condition to exclude JUnit test files since IntelliJ IDEA build 193.2956 . 37
fix test break by previous change
added a new class ` LucenePackage ` with a static constructor and a static method to retrieve its package to facilitate easier access to the package
update sizeInBytes calculation to subtract the existing size from the existing size to ensure the size is not modified unintentionally inadvertentlyly
added an estimate method and made various fields final in GenericUDAFBloomFilter and BloomKFilter classes to improve calculations in the code to enhance
added a null check for the drawer toggle before processing the animation to prevent potential null pointer exceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method signature to silence the warning about possible null references in the method
added logic to enable or disable module scanning based on the overrideClassLoaders configuration to improve flexibility in module scanning configuration during the scanning process
export aLatex - free version of a bibentry without a latex - free locale
added cancellation of core recoveries for ZooKeeper awareness to ensure proper handling of core states during the shutdown process
refactor time measurement and position difference calculations to use a custom method for obtaining current time in milliseconds to improve accuracy and precision of time measurements
poeditview : fix npe and tab completion
doc ( connection parameter ) add doc for connection parameter
added trust resolver , role hierarchy , and permission evaluator to the SecurityExpressionRoot class to enhance security configuration flexibility by allowing customizable security
added a check to set exponentSize to primeSize - 1 if it is 0 to ensure a valid exponent size is used in the DH parameter generation
fix account space availability check
refactor ` DistinctSqlAggregation ` to use a for - each loop for accumulation to improve efficiency in combining distinct operations
added a test method to verify post - login activities for a user based on encrypted password and salt to ensure correct user authentication flow during successful authentication
make extractorspanishstrippedverb default to avoid npe
refactor CharArraySet to simplify character comparison logic and improve readability to enhance performance and maintainability of the code
fix track count check on muxerwrapper
updated JsBundleGenrule to use AndroidPackageable instead of JsBundleAndroid to ensure compatibility with Android project builds
set character encoding to UTF - 8 in PinotClientRequestServlet and updated StringDictionary to use byte array conversion to improve compatibility with UTF -
change case label from " Logical Analyzer " to " Logic Analyzer " and update drawable resources accordingly to improve clarity and consistency in handling logical analyzer
change abstractvector . instance ( ) so it do n ' t call java . lang . class . forname ( ) multiple time for the same vector
removed syncMetaLeader ( ) method call to improve performance by reducing unnecessary synchronization
update frcomment ' s tutorial
added TestLoggingExtension to DiagramRendererTest to enable logging of test execution for better debugging and monitoring
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 579 . it
[ miio ] add support for viomi internet e2e water heater ( viomi internet e1 ) ( # 10994 )
updated variable assignments to use instance variables instead of method calls to improve code readability and maintainability by reducing method calls
added a new file CreateNewSpreadsheet . java to implement a basic Excel sheet creation example to demonstrate how to create spreadsheets in a
polish ` ` configure redis ttl from cache property ' '
updated content URIs to use CONTENT _ URI _ NO _ NOTIFICATION for favoriting changes to prevent notifications during data insertion
update test version in SwaggerResolveTest . java from 2.14 . 0 to 2.27 . 2 to ensure compatibility with the latest testing framework
modified synchronization from lucidaFontName to this in SunFontManager . java to improve performance by reducing synchronization overhead
updated condition in DocClassUtil to check for closing angle brackets before processing to ensure correct parsing of angle brackets in documentation
changed the return statement from String . format to a direct string retrieval method to simplify code and improve readability
added import for Scope and changed message from " no . validation . errors . found " to " no . validation . errors . found " to enhance
refactor IntegrationTestContextLoader to improve resource configuration and context setup to enhance integration testing capabilities by ensuring proper resource base paths and servlet context
fix issue with component . getcomponentat ( x , y ) and javaseport . getcomponentat ( x , y )
removed unnecessary whitespace in the conditional statement to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated methods in ` StatsService ` and ` DefaultStatsService ` to use ` String ` instead
fix bug in cellcontentconverter where newline be ignore
make the glob pattern posix compliant
mondrian : fix javadoc for mondrianproperties .
8027163 : sun / management / jmxremote / bootstrap / customlaunchertest . java should be update for jdk8 removal of
remove embed tumblr test to fix build .
added a check for the presence of a slot before converting the storeType to ensure conversion only occurs when a corresponding slot is present
ensure extractorwrapper . init be call even with uninitialized chunk
updated BaseLockFactoryTestCase to use PrintStreamInfoStream for output formatting to improve readability and performance of the test output
tika - 1222 -- add support for parse serviceloader from dom element .
added imports and enhanced package - info handling in DocLint . java and DocLintTester . java , and created test classes for validation to
added import _ cmd constant and modified conditional checks for DELTA _ IMPORT _ CMD to support additional command handling in the import process
add a test to ensure that inner classes are not modified when the ignoreDefinition flag is set to true to validate the behavior of type modifications based on the
added import statement for android . util . Log to enable logging functionality in the Jetty service
modified the ` checkItemPlacement ` method to include an ` ArrayList < Long > workspaceScreens ` parameter to enhance item placement validation by
[ java ] adding / quitquitquit to kill the selenium server
fix the issue that llRealtimeSegmentDataManager do n ' t take into account all the realtime segment
added a check to skip processing for Windows devices to avoid processing Teredo - specific nic instances
add contact dialog for not connect to the server .
replace the registration of a bean definition with a bean registration for the USER _ DETAILS _ SERVICE _ FACTORY to ensure that the bean
updated drawBitmap method to use null for the source region instead of the target region to ensure correct bitmap rendering to avoid rendering issues
update meitrack and totem protocols to remove millisecond
changed method access modifiers and updated method calls in SunFontManager and X11FontManager classes to enhance encapsulation and improve font path retrieval functionality
mark multiple methods in EnhancedRandom as deprecated to indicate that these methods should no longer be used and may be removed in future versions
[ map ] fix reachedmaxsizeexception handling
add -- keep - empty - sentences configuration , default to false
added error handling for artifact subdirectory creation and changed return type of createArtifactSubdirectory method to boolean to improve error reporting and provide clearer feedback on directory
replaced instances of ` null ` return values with constants from ` JavaCompilerService ` to improve code readability and maintainability by centralizing constant
cloudstack - 6893 : fix npe in case of resource return null answer
do n ' t stop send email if messagingexception throw , log it and stop send the email
fix some PipeItemsObsidian error when item have no tile available
mondrian : fix bug in dateformatevaluator for locale parameter .
added functionality to include decals in storage options to enhance user customization options for storage options
updated generateDocumentation method to include a null argument for outputDirectory to enhance flexibility in generating documentation documentation
updated ` HiveProtoLoggingHook ` to use ` HashMap ` for ` endTimes ` and modified ` TestHiveProtoLoggingHook ` to validate
updated log messages in various factory factories to ensure consistency and clarity in logging output
update version check in ignoreRecordAttribute and recordReflectionTest to ensure compatibility of features based on the major release version
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP password authentication to ensure proper connection and attribute retrieval for users in the LDAP
replaced OrcInputFormat import with BasicStatsNoJobTask import to utilize the new stats utility for footer scan verification
fix a nullpointerexception when save a flutter project
refactor VisibleAdvance class to improve code readability and maintainability
fix : reflector . start ( reconnect ) now start without reconnect
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance flexibility in handling numeric data types
standardized null checks and improved code formatting in ` RawPom . java ` to enhance code readability and maintainability
update API assignment to ensure fallback to the existing API when apiInfo is null to improve robustness by preventing null assignment
updated HeadersConfigurer and CacheControlHeadersWriter classes to improve header configuration handling to enhance performance and maintainability of caching mechanisms
added OpenGL lighting and shader initialization in PhotoPanel and FlameRenderer classes to improve rendering quality and resource management
added context menu functionality for " max " methods in JavaFX components to enhance user interaction by allowing users to add new maximum references
added a length check in the CSS parser to prevent index out of bounds errors when processing input
added support for the look and feel in the application to enhance the user interface by allowing customization of the look and feel
removed unnecessary ' this ' keyword for clarity in SQL query to improve code readability and maintainability
chore ( messages ) : update jnemonic to match late proposal
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and functionality to correctly determine the end target based on swipe up mode to enhance
changed the type of mHostDb from HostDatabase to ColorStorage to enable color storage functionality instead of host database
refactor methods in String class to improve code readability and maintainability
removed unnecessary import statements and added logger initialization in multiple classes to streamline code and improve logging functionality
added a method ` getGlobals ( ) ` to return an array of ` Entry ` objects from a map to facilitate global configuration management in the
added assertions to test the ` sendcoin ` method with specified parameters in ` MultiSign34 . java ` to ensure that the ` sendCoin ` method
test : migrate CUFilterTest to junit 5 ( # 4529 )
replaced hardcoded path separator with a dynamic system property to enhance flexibility and ensure compatibility across different operating systems
adapt abstractservicevalidatecontroller to api change
hhh - 16663 change field access to getdeclaredfield to use getdeclaredfield from metamodel rather than getfield in abstractentity
removed unnecessary ` getConf ( ) ` parameter from Outlink constructor calls across multiple parser classes to simplify outlinks initialization and improve code clarity
removed the ` LexicalContext ` parameter from multiple methods and updated references accordingly to simplify method signatures and improve code readability
added import statements and modified type expression handling in UseLambdaForFunctionalInterface . java , and refined type checking in TypesInUse . java to enhance
fix bug where classfiles be not be add to the classpath .
removed conditional logging for unsupported root input in HiveCardinalityPreservingJoinOptimization . java to improve code clarity and reduce unnecessary processing
fix npe when registry do n ' t exist .
reformatted assignment of x3 and y3 for consistency to improve code readability and maintainability
[ hotfix ] [ runtime ] add default method for sbe limit in messagedecoderflyweight
updated ElasticsearchContainerTest to use a dynamic ELASTICSEARCH version instead of a hardcoded value to enhance flexibility and maintainability by
fix a problem where file be not be copy over when parse the peermessage .
added version identification functionality to cluster definitions to support versioning of clusters during installation
camel - 14263 : camel - ftp should use source code generate configurer to avoid reflection configuration .
zeppelin - 2250 . do n ' t fail interpreter setting when dependency can not be fetch .
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified ` newLocal ` logic in ` Gen . java
added a conditional check to return early if targetCertConstraints ' basicConstraints is - 2 and created a new class for certificate validation to improve performance
added logic to initialize JDBC steps after the first database connection in JdbcPostgreSQLDAO to ensure compatibility with database versions 9.5 and above
increase input buffer size for websocket connection
lucene - 5969 : do n ' t set rollbackundeleteall unless we have pending delete
added null check for scopes and updated test cases accordingly to ensure proper handling of null scopes and improve test coverage for authorization logic
added null checks for orderBy before adding parameters in CartesianProductStream . java to avoid potential NullPointerExceptions when orderBy is not initialized
[ hotfix ] [ test ] replace assertthat with matcherassert . assertthat in clusterentrypointtest
server : do n ' t list snapshot by instance id when vm be in non - backup mode
added logging of the initialization of Hive Log4j to improve debugging and traceability of the initialization process
added a check for the size of the tasks list before processing to avoid potential NullPointerException when accessing the task list
[ pubsub ] rework openpgp pubsub util method to return boolean instead of void
fixed bug , whereby we do n ' t use the right relation entity type .
barcode detector : detect empty code 128 and code 39 barcode
replace TreeSet with LinkedHashSet for storing CipherSuites to maintain the order of suites for predictable iteration order
update Escaper . java to replace control character checks with a dedicated method to improve code clarity and maintainability by centralizing control character detection logic
fix sqlprovider . oneargument to return string instead of null
updated logic for handling null aliasChildren in InternalMNode . java to improve null safety and prevent potential NullPointerExceptions to enhance code robustness and
added a method to calculate the layout transition offset for a specific page index in PagedView . java and updated scroll delta calculation in Workspace . java to
updated variable names and added auto - formatting for syntax tree processing in JavaTemplate . java to improve code clarity and enhance formatting features for better readability
added accessibility to a method in WidgetInterceptor to enhance security by ensuring the method can be accessed from other classes
added a condition to exclude the " database . server . id " field from configuration to ensure proper handling of the " database . server . id " value
remove html5 , like Gecko incompatibility .
added a menu item to browse a web interface to a specific host in the popup menu to enhance user experience by providing quick access to the application
updated handling of actual values and expressions in HandleGetter . java to improve clarity and maintainability of code logic
added error handling for ArrayIndexOutOfBoundsException during record building in EncryptedSlideShow . java to improve robustness by ensuring the application handles array access failures gracefully
[ hotfix ] [ checkpointing ] improve logging in queue
load the BattlePassManager before avatar postload to avoid null pointer exception
updated Docker image version from 1.0 . 0 to 1.1 . 0 in PortForwardingContainer . java to ensure compatibility with the latest version of
added a large array and forced garbage collection in ThresholdTest . java to optimize memory usage during testing
added checks for log names and updated logger assertions in StdErrLog . java and StdErrLogTest . java to improve log validation and enhance test
fixed - rremoteservice . getremoteserivce ( ) method of rremoteservice object throw classnotfoundexception . #
added functionality to track if a multi button is selected in the MultiButton class to enhance user interaction by allowing selection of options
updated the intent target from UpNextActivity to NextUpActivity to ensure the correct navigation to the NextUpActivity functionality
[ issue # 7958 ] fix the bug of brokerconfig race condition ( # 7998 )
ReactiveRedisConnection handling in RedisReactiveHealthIndicator to ensure proper connection management to improve reliability and resource closure of Redis connections
refactor background color retrieval to use a resource ID to improve flexibility and maintainability of theme handling
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
add type adaptors for various Java classes in ToolingApiLauncher to enhance type management capabilities in the application
updated the color values in TestPayloadCheckQuery . java to ensure consistent color representation across the application
refactor ConsoleReader to handle masking with the ` putChar ` method and modify the ` drawBuffer ` method to improve output formatting to enhance security
added user logging and onExit method to BaseCommand to enhance user feedback by including the user details during the cancellation process
update test to correspond with compiler api change .
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
streamex : disable java 9 specific dropWhile method
updated image resources for DecalTest , MusicTest , and SimpleDecalTest classes to use the correct data files and improve audio volume to enhance
be c61cff92 : be d016015015 : be d016015015 : be d016015015 - be d016015015015
updated import statement for cluster to ensure consistency in package naming conventions
None
escape user attribute in report
added a new link for PhrasePrefixQuery and org . apache . lucene . search . spans . SpanQuery in the Query . java file
updated checks for empty child collections in CommentsInserter and CommentsParser to improve clarity and correctness in character validation logic
fix parentheses around argument
change method parameter types from A to Object in multiple assertion classes to enhance type flexibility and consistency across assertion methods
updated the package of ` ThrowingFunction ` from ` org . apache . shenyu . plugin . jwt . lambda ` to ` org .
updated UploadFilesActivity to use getter and setter methods foruploaderBehaviour and setUploaderBehaviour to improve encapsulation and streamline preference management
fix ( prettyprinter ) : fix final field access ( # 1437 )
updated BitmapDrawable instantiation to use Robolectric ' s Bitmap class to improve compatibility with Robolectric ' s bitmap handling
corrected the spelling of " isValid " in the DutchStemmer class to improve code readability and prevent potential bugs
updated PageMarkerResources to use a different drawable resource for the current page indicator to improve visual clarity by distinguishing the current page indicator
add reinvocations counter and modify backup completion message to reflect it .
updated the formula for calculating topPadding in DefaultLookAndFeel . java to ensure correct vertical alignment of text elements in the UI layout
added a break statement in Recognize . java to exit a loop or switch statement early
added haptic feedback functionality to manage home screen lock status in multiple classes to enhance user experience by providing tactile feedback when the
refactor ExcelBatchReader to handle different cell types and set appropriate array types for formula data to improve accuracy in processing Excel formula results
fixed bug 1114114 - immutablefield no long report a false positive on assignment in anonymous inner class .
updated user agent initialization in HttpGetter and CommaFeedConfiguration to allow dynamic configuration of the user agent based on application settings
camel - 7999 : add javadoc to model class so we have eip documentation out of the box
changed log level from info to debug for file not found messages to reduce log verbosity and improve performance
rename QueueTest class to QueuedPipeTest to improve clarity of test purpose
replaced the version check with a try - catch block to handle potential exceptions when checking the API version
camel - 17806 : camel - main - maven - plugin to generte spring - boot tooling metadata to fool java editor
add the ability to set the vertex color in pshape3d ( fixes # 3647 )
updated methods and variables in SchemaDotFormatter to use a parameterized of ` R ` instead of a hardcoded value to enhance flexibility and
replaced the use of Shadow . extract ( ) with matrix . getValues ( m ) to simplify the code by directly accessing matrix values
changed package structure from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser ` and
refactor class assignment logic and simplify string handling in GroovyEngine . java to improve code readability and maintainability by reducing complexity
refactored the branding servlet to make it easy to add hawtconfig
updated print statement syntax in NativeCodeGenerator . java to ensure consistent formatting to improve code readability and maintainability
replaced calls to updateMotors ( ) , updateActiveInstances ( ) , and updateActiveInstances ( ) with fireChangeEvent ( ) to improve event handling
added unit tests to verify that the cause of a ThrowableAssert is correctly handled with different exception types to ensure that the system correctly throws an IllegalArgumentException when expected
remove duplicate code in automaticdependencies
updated scope variable from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to ensure proper handling of empty scopes
marionette test : add ability to set profile in firefoxoptions
camel - 1771 : added description to route and make it visible to mbean .
refactor JavacTreeMaker class to improve code readability and maintainability
added setting of edge weight to improve data import consistency
bug 13175 : calculate tariff cost per month base on start date
updated SQL query to include an additional ' adsrc ' column reference and modified the database query to use ' adsrc ' instead of ' att
improve error message if sentence be not binarized by parser
modify the toString method in the User class to include detailed information about the object ' s attributes to enhance debugging and logging capabilities for users
updated message body handling to ensure a null check for the message ' s body to improve error messaging for null messages
[ hotfix ] [ runtime ] fix task deployment descriptor factory
fixed roster access method to be case insensitive .
added a reference to " maven . test . classpath " in AbstractJRubyMojo . java and removed unchecked suppression annotations in Cucumber
replaced references to ` rtype ` with ` mtype ` in ` MethodHandleImpl . java ` and updated tests in ` MethodHandlesTest .
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , LegacyHTMLStripCharFilterFactory , and LegacyHTMLStripChar
change the condition for width and height checks from greater than or equal to maximum to ensure that the image dimensions do not exceed the placeholder image dimensions
added a condition to exclude packages starting with " META - INF / " from class name checks to ensure that package names do not interfere with
fix imagedownloadservice to preform all io on the background thread
updated assertions in StackWalkerTest . java to use expected values based on the version check to ensure test accuracy for different Java versions
changed the visibility of the addViewportJob method from protected to public to allow access to the method from other classes or packages
updated command line arguments in SimpleWordCount , RBKTimeSlidingTest , RBKTimeSlidingTest , RBKTimeWindowTest
updated server configuration and service checks in TestDatabase . java to improve server behavior during shutdown and ensure running commands are properly managed
added null and empty check for block before processing in NodePathsConvertOperator . java to ensure safe handling of empty blocks and improve code clarity
add ice harvester time property and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue
updated FPS and count values for particle editing to improve visual clarity and consistency in rendering output
added Hadoop environment property handling in UpgradeCatalog240 and corresponding test cases to ensure proper configuration management for keyserver port in Hadoop clusters
added a transparent background color to the SvgViewerFactory to enhance visual quality by preventing visual artifacts
removed the minSdk parameter from the ShadowKeyguardManager and ShadowKeyguardManagerTest classes to simplify the configuration and ensure compatibility with API level M
updated the ` containsExactly ` method to accept a variable number of arguments instead of individual arguments to enhance flexibility for testing containsExactly functionality
updated the builder method to refine capacity and added a check for non - empty keys to enhance flexibility in bucket configuration handling
fix checkstyle issue in generator / tools / javadoc / wordlistloader . java ( # 709 )
updated transformations and added hooks handling in the optimizer to improve execution flow and ensure proper execution of query execution mechanisms
properly handle noclassdeffounderror in rengine .
refactor span handling in TraceWebFilter to use a new class SpanAndScope to improve code clarity and maintainability by consolidating
update exception handling to allow null causes to improve robustness of error reporting
updated exception handling to include the base URL to improve error reporting by providing more context in the exception
invert the orientation of print setup record
modify return statement to handle null input to NullWritable to prevent potential NullPointerException
added a validation check for bad argument names in ArgDesc . java to ensure that invalid argument names throw an appropriate exception
added support for a background location listener and updated location request handling to improve user experience by allowing location updates to be queued in a background context
change the conditional check for primitiveType from " ! = GL _ POINTS " to " = = GL _ POINTS " to ensure correct validation of
trufflestring : minor performance optimization improvement .
added functionality to set command list settings for the ComboBox
nifi - 10861 - ensure that alias name do not contain a period .
updated ZkCLI command execution strings to use localhost instead of hardcoded values to improve clarity and ensure correct configuration for Solr clusters
updated comparison methods for progress and status info in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to improve consistency and clarity in status
added a conditional check for remoteGrpcStatus before posting a message in LocalFallbackStrategy to ensure that the build failure is only posting a message when
reformatted method signatures in XYItemRenderer and SeriesEntity classes for consistency to improve code readability and maintainability
fix entity not visible on forge
add a private method to convert EGL error to string to improve error reporting for easier debugging
fixed bug where an unknown locale would cause the server to return an error .
update serverURI handling to append " host : myhost " to ensure correct URL formatting for HTTP connections
fix addtohelperlist not add element to helper list
added handling for the " [ " escape sequence in GlyphLayout . java to improve processing for cases where the length is less than 2
added security permissions handling in mmm Transport . java and mmm TCPTransport . java to enhance security by ensuring the correct context class loader
updated the ` populateDirectoryList ( ) ` method to handle file retrieval more robustly and added null check for ` folder ` before accessing its properties to
fix npe in testng when m _ serviceloaderclassloader be null
removed debug logging in BarrowmanCalculator and adjusted the calculation in TubeCalc to streamline code and improve performance by reducing unnecessary logging
refactor column retrieval and adding logic for node and edge tables to ensure proper handling of node and edge data types in the application
allow brokerstarter extra component to be register ( # 4529 )
added a test for bug 44658 in MultiCfQueryExecIT . java and improved the order of columns in the SQL query to
peergroup : use linkedlist to preserve order .
increase the maximum amount of data that can be store and / or restore in a tile
updated configuration handling for ` configNodeSimpleConsensusSnapshotTriggerThreshold ` to utilize a ` Supplier < RatisConsensus > ` to
refactor multiple Java files to improve code organization and maintainability
camel - 8891 fixed the unit test error of camel - jms
tika - 2250 -- upgrade tika - parser to handle non - unicode entry name .
c2 : add testsplitThruphidivmod and testdiv
added methods to lookup generic interface and superclass templates in TemplateRegistry to enhance template retrieval capabilities for parameterized types
increased buffer size from 512 to 1028 to accommodate larger data sets
added TODO comments for Chinese , Arabic , and Persian language support in PlayerSettingsScreen . java to prepare for future enhancements related to
if the number of bytes to transfer exceed the buffer size , reduce the buffer size to avoid excessive memory allocation .
SIPCommPopupMenu : minor code cleanup . no functional change .
refactor error handling in SemanticAnalyzer to check for null source before throwing SemanticException to improve clarity and prevent potential null pointer exceptions
bugfix : correct skeletal mesh rotation in render
added ` getSolrHome ( ) ` methods to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to retrieve the solr
added the ComponentScan annotation to SpringWebConfig to enable the use of component scanning for enhanced configuration management
removed the getAccount method from UserListItem . java to streamline account retrieval by eliminating unnecessary method
added unit tests for package and activity installation in ShadowPackageManagerTest . java to ensure correct handling of package and activity configurations in the application
pdfbox - 4071 : fix typo find by codespell on fossies . org
added TransactionCapsule and ReceiptCapsule to the TransactionTrace class with initialization and execution methods to initialize and execute transaction details
add an option to disable random member list shuffle by default
replace Text with CrawlDatum in SegmentReader . java to enhance data processing capabilities
updated JsonDeserializer . java file to improve JSON parsing functionality
updated configuration path and changed fetchSize from integer to ThreadLocal in QueryProcessExecutor to enhance thread safety and improve performance in data processing
corrected a typo in the trunc ( ) message to ensure clarity and accuracy in error reporting
removed unused import of ExecutionContext to clean up the codebase
initialize the title variable to an empty string to avoid null pointer exceptions when the title is accessed
ensure that empty response body be not set in asynchttpclient call , close # 1221
restore backwards compatibility with binary compatibility
use reflection to register mac event in jabrefwindow
renamed the test class from SecurityTokenServiceAuthenticationMetaDataPopulatorTests to SecurityTokenServiceTokenFetcherTests and updated its usage to improve clarity and
added a return statement to the toEnum method in HandlerLibrary . java to ensure proper enumeration handling for Enum types
changed the visibility modifier of hideUnprivilegedObjects from private to private final to ensure that the variable cannot be reassigned after initialization
change some logging from info to fine
added support for saving GIFs for Android Q to enable compatibility with Android Q video playback
fix : fix persistence of variableinstanceentity in task execution
refactor EhCacheTicketRegistry and LdapPasswordPolicyEnforcer classes to improve code organization and maintainability
refactor logger retrieval logic to use computeIfAbsent to simplify code and improve readability
hbase - 27886 remove dataoutputoutputstream , no longer use
updated bucket and delta values in TestAcidOnTez . java to correct the mapping of transaction IDs to proper values
changed log level from info to debug for class enhancing success logging to reduce log verbosity and improve performance
add getdefaultprovider ( ) method to platform that return " conscrypt " .
added Captor annotation processing to MockitoBeforeTestNGMethod . java to enhance functionality to process instance fields annotated with @ Captor
added error handling for cases where test class names or test method names are not present to improve user feedback during execution
groovyAutoComplete do n ' t auto - trim empty string by default
fix compile error due to miss osm dependency
[ java ] adding ability to retry http request to handlesession ( ) .
changed the ` mHideSysUiScrim ` variable from final to non - final and added functionality to manage its visibility based on user preferences preferences
added canceled flag and improved error handling in OkHttpCall to ensure proper cancellation of calls before execution
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and functionality to correctly determine the end target based on swipe up mode to enhance
extended the RequestMatcher interface to inherit from the Spring Framework ' s matcher capabilities to ensure compatibility with Spring ' s request matching framework
updated DeferredAttr . java to include ' IF ' and added a new class ImplicitLambdaConsideredForApplicabilityTest . java with functional interfaces to
improve performance of isboxed ( true ) .
added unit tests for default and custom display metrics in DeviceConfig to ensure proper functionality of display metrics handling in the application
replaced ` IOException ` with ` RuntimeException ` in ` ExternalViewReaderTest ` and ` PinotDataTypeTest ` , and modified ` Timestamp ` initialization in
updated the icon used in RootCursor to use a different resource reference to improve clarity and maintainability of the code
set the text content of the error builder to provide clear information about the file upload process
refactor ConcurrentHashMap to improve thread - safety for concurrent access
added methods to adapt user trades in AbucoinsAdapters , AbucoinsTradeService , and AbucoinsTradeServiceRaw classes to
fix : setblockfast _ 1 _ 8 , setblockfast _ 1 _ 8 , setblockfast _ 1 _ 8 . fixed typo
simonstewart : adding support for the firefox browser to start and stop htmlunit
added support for VARBINARY data type in BlobType to enable handling of VARBINARY types in the database
apply patch 06 from jboynes to improve cookie handling .
added synchronization to the language array type mapping logic to ensure thread safety when accessing shared resources
fix inboundbuffer reject illegal state due to wrong thread
added a timeout test for the dead server in LdapTimeoutTest . java and modified connection handling in Connection . java to improve test reliability by
updated usage message for CharacterName to provide a more accurate description of the data being referenced
camel - 7998 fix the unit test error of camel - cxf
initialized textRect and iconRect variables in SynthUI classes to ensure proper instantiation of rectangles for layout management
added support for handling BoosterSet in ComponentAssemblySaver to enhance functionality to manage BoosterSet instances in the application
implement proxy authentication with jabref
remove the usage of blockchain __ fork _ count metric . they be duplicate blockchain . fork _ count metric .
replace InternalError with a return statement to simplify error handling for JEP 359 support
hbase - 26920 addendum fix test compilation error
remove chunked transfer from rout filter
added a call to ` clearAttributes ( ) ` in the ` PatternTokenizer ` class to ensure that attributes are reset before processing new patterns
added a polling period parameter to the VerificationAfterDelayImpl class and modified related methods to enhance verification flexibility by allowing users to specify a
added compaction functionality and modified conditional checks in SemanticAnalyzer to improve compaction control based on session state management
[ zeppelin - 4668 ] ignore jar from zeppelin lib directory of zeppelin - interpreter
hbase - 2593 hbaseadmin # gettable regions should cleanup catalog tracker after access it ( liu shaohui )
ignore fail test for now
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to in
added error handler to SAX parsing to ensure proper resource management and avoid potential memory leaks
release the header buffer and nullify it to prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and updated references in ` JavaTypeSignatureBuilderTest ` and ` Java
added a null check for the ResultSet before closing it to prevent potential NullPointerException when closing
update driverVersionMajor and driverVersionMinor values to 10 and 6 to reflect the latest database schema version
fixed bug 1114114 - usestringbufferlength now catch more case .
removed logging of exceptions from RemoteSparkJobMonitor
updated the createDb method to return a Connection object instead of void to ensure proper resource management by closing the database connection after use
chore ( deps ) : upgrade java microgenerator to v2.2 . 1 ( # 350 )
hbase - 20536 make the compaction thread - safe ( liu shaohui )
added JSON parsing logic for BitstampDepositAddress and created corresponding test cases to ensure correct handling of deposit addresses and validate JSON parsing functionality
replace IllegalStateException with an IllegalArgumentException for buffer capacity exception to improve error handling by providing more specific exception clarity
change path parameter from ` linkPath ` to ` linkPath . toAbsolutePath ( ) ` to ensure correct handling of absolute paths in file system operations
updated InvocationFinishedEvent and DefaultMetricsRegistry to use InvocationType instead of OperationType to improve clarity and consistency in metric handling in the event system
modified network interface selection to check for multicast support to enhance flexibility in network interface handling
simplified the checkSum validation logic to improve code readability and maintainability
added a clone method to BufferedChecksumIndexInput that currently throw an UnsupportedOperationException to implement a placeholder functionality for data integrity checks
updated conditional logic in Circle . java to use the radius variable directly to improve clarity and correctness of circle intersection checks
added a condition to avoid redundant assignment of mFrequencyBand in P25Channel . java and updated the return statement in P25ExplicitChannel . java to
refactor GestureDetector to replace tapSquareSize and tapSquareSize with tapRectangleWidth and tapRectangleHeight to enhance clarity and
turn off replication on write by default
added a ` lastFillTime ` parameter to the ` getCryptoFacilitiesFills ` method and implemented date formatting in the utility class to enhance
added getDelegate ( ) methods to TraceCallable and TraceRunnable classes and corresponding tests in TraceCallableTests to provide access to the delegate object for
updated error handling and synchronization logic in FileActivity and FileDisplayActivity to improve clarity and ensure correct response based on fragment types
added a method to handle stream writable connection in ForeignIncubatorQuicheConnection , JnaQuicheConnection , and JnaQuiche
added a boolean parameter to the function call to enhance functionality by providing additional contextual information
removed the ALIGN . left parameter from TableCell constructor calls and added a new TableCell constructor with styleClass and outputFormat to simplify TableCell initialization and
added a new file ` TracingAutoConfiguration . java ` to implement automatic configuration of tracing for cloud - based identity tracing
fix bug : first paragraph in para do not inherit
remove the reference to segmentreaders from queryable segment ( # 9200 )
refactor VertxBufferTest class to improve code readability and maintainability
fix a bug in messagesubmissionchunk , add unit test
change access modifier of mContext field from private to protected to allow subclasses to access the context variable
hive - 23359 ' show table like ' support for sql wildcard character ( % and _ ) appendum - remove unused import ( miklos gergely , review by zoltan haiandrich )
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it to improve exception handling by providing additional context
added return statement to jobCompletionFuture ( ) method to ensure proper future retrieval for job completion
refactor DisplayUtils to replace bitsToHumanReadable method with bytesToHumanReadable method and add multiple mime types for various image formats to en
removed conditional check for TieredMergePolicy before setting the maximum merged segment size in TestUpgradeIndexMergePolicy to simplify the merge policy initialization process and
added a conditional check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when the feature is disabled
update error message to include detailed information about CPU instruction to help with troubleshooting and guidance on CPU support issues
updated method signatures to accept an InputStream for reference properties to enable loading of additional configuration settings from a specified input stream
added null checks for incoming fields , terms , and documents in FilterLeafReader . java to ensure that null input does not cause unexpected behavior during execution
add support for default secret key size provider . relate to github # 1313
updated IOException handling to provide more informative error messages for IOExceptions
removed javax . inject . Inject annotations from multiple Java classes to standardize dependency injection across the codebase
updated assertions in BundledDistributionTest . java and added assertions in PostgreSQLTest . java to verify correct count and attributes of database users
[ flink - 20536 ] [ scala ] make ` ` pipeline . name ' ' configurable
update scale calculation in OverviewState . java to handle multi - panel layouts differently
change the default rainfall to 0.5 ( # 1162 )
removed unnecessary timezone parameter from ` getMinTime ` and ` getMaxTime ` methods in ` DataUpdateManager ` and ` StorageUtils ` to
[ j2kt ] add qualification support to thisreference .
xhamster ripper no longer fail on web .
fix potential concurrency issue with entity
mondrian : if the schema be specify , the table name of the feature type be append with the schema , not just the schema
fix a typo in the flutterconsolefilter ( # 1437 )
added a new variable ` mNumberOfAllFiles ` and modified constructor and methods in ` FileMenuFilter ` , ` FileListListAdapter `
[ java ] reduce the term window length by one iteration .
fix a typo in the javadoc of guildupdate owner event .
reduce in portal tick to 80 for creative / entity
added support for compression in chart display by introducing a compressed flag and modifying related methods to enhance visual appearance by allowing chart data
fix javadoc issue identify by lgtm
change variable types from int to long for length calculations to prevent potential overflow errors
removed the condition checking if the renderer is null to simplify the logic for handling null renderers
server : do n ' t allow same disk offering change on vm with custom service offering ( # 6148 )
updated Order . java and HitbtcAdapters . java to use LimitOrder . Builder instead of limitOrder . builder to improve code clarity and
fix typo and variable name
updated JRuby service description URI from " jruby " to " jrubyscripting " to ensure consistency with naming conventions and improve clarity
updated variable handling for display name in ConfigCategory . java to improve clarity and consistency in displaying display names
updated condition in ParticipateAssetIssueActuator to include a check for non - negative values of preciseExchangeAmount to ensure that exchangeAmount does not
removed a loop that checks if the number of iterations exceeds 10 to limit the number of processed entities for processing
test : add unit test for hdfparser
[ calcite - 6092 ] disable test calcite - 6092 for now
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods to quietly close multiple AutoCloseable resources safely to improve resource management by avoiding potential resource leaks
updated the resource reference for the positive button in RemoveFileDialogFragment to improve clarity by using a more descriptive string constant
added checks for non - null dimensions before drawing images in the Pixmap class to avoid potential NullPointerExceptions when drawing images
replaced ReflectionHelpers with direct method invocation for unsafe class definition to improve compatibility and simplify method invocation
fix ( freezev2 ) : fix typo in port regexp
inline conflict checking into cachedrowsetwriter .
fix an npe in the flutter version check ( # 5681 )
added a check to return the reference itself if it is the current instance to optimize memory assignment logic
refactor input handling to support multiple seed files and improve error logging
added a condition to check if ` hideOriginal ` is true before displaying the original view in ` FloatingIconView ` to ensure that the original view remains
make unroll max iterations more robust
bugfix : do n ' t crash if the texture coordinate type be not support .
added validation to prevent invalid input .
camel - tracing : fix resource leak
fix handle deletion by specify the length of the oldprefix
replaced the addition of a collection element to a list with a constructor that initializes the convertedValsList directly to improve code readability and efficiency
add back deprecate ctor for backwards compatibility
added a nightly warning message for users regarding the latest Universal Gcode Sender version to inform users about features and bug reports on the Night
[ # 8452452452 ] add option to filter response by team name ( # 8452452 )
update the return statement to provide a more accurate description of the error context related to unnecessary throws
deleted CacheApplication and updated related classes to use CacheData instead to streamline caching functionality by consolidating related components
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` to centralize application context usage to improve code maintainability
refactor StatisticsServlet class to improve code readability and maintainability
updated ResourceManager usage for configuration updates to ensure compatibility with devices running KitKat and above
added logic to check the existence of the stack repository update link to ensure the resource retention link is correctly configured for version version definitions
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
avoid npe on empty index _ list
added package imports for internal resolver helpers and readers to enhance access control checks for XML package access
rename methods from ` save ` to ` add ` in JobRepository and related classes to improve clarity and consistency in method naming
fix a bug in the fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id =
updated RecyclerView references to WidgetsRecyclerView and added a method to set the current scroll height to improve widget support and enhance user experience by
added a check for terminal support in ConsoleReader to ensure functionality only runs if supported
change variable types from Long to Integer for timeAllowed and add timeout checks in LBHttpSolrClient to improve performance by reducing unnecessary calculations and
added session validity check and modified session removal logic to ensure only valid sessions are processed in the session cache
refactor code to enhance null checks for columnNames before processing to improve code robustness and prevent potential NullPointerExceptions
refactor ButtonGroup to use ArrayList instead of Vector for storing buttons to enhance code simplicity and maintainability by using more appropriate data structures
updated UserManagerCompat and its implementations to differentiate between non - NYC and NYC MR1 versions to enhance user experience by supporting
added ` getDatabaseMajorVersion ` and ` getDatabaseMinorVersion ` methods to ` MockDatabase ` , ` AbstractDatabase ` , ` Database ` ,
updated ActionGraphCache to improve handling of action graphs to provide clearer information about mismatched rules to enhance debugging and error messaging for
added two new ` LockDatabaseDesc ` and ` UnlockDatabaseDesc ` classes , ` LockDatabaseDesc ` and ` UnlockDatabaseDesc ` ,
refactored the ` RankingUIModel ` to use setter methods for node and edge transformer properties to improve code readability and maintainability
added handling for DISCONNECT message types in HandshakeHandler and NodeImpl to correctly report and flush disconnection messages related to remote peers
added a test method to verify the functionality of setting storage groups in IoTDB authorization to ensure that the system correctly allows deletion of storage groups
chore ( ruby ) : fix : http : / / snabble . com / api / documentation / v1 / documentai to
update type validation logic to accommodate new variable types to ensure accurate detection of missing types in type validation
added methods for processing test execution before and after test classes to enhance test lifecycle management and error handling
[ java ] allow for clock clock to be cache on record processing .
updated logging statements to use placeholders instead of string concatenation to improve code readability and maintainability
added code to clone joinKeys array if present to ensure original joinKeys are not altered
updated authentication handler registration to use a custom principal resolver
updated the ` addSettingsFromFile ` method to accept an additional ` searchPaths ` parameter and modified related file assertions to enhance flexibility in
changed fields in Oracle . java from non - final to final to ensure immutability and prevent accidental modifications
[ hotfix ] [ checkpointing ] disable unaligned checkpointing until rescaling
fix unsupportedoperationexception when orderby be turn on
add an option to compiletheworldtest to more easily debug
added a check to ensure the provided variable is an instance of LocalVariable before proceeding to prevent runtime errors
added MySQLDatabase support to conditionally append " NULL " for timestamp columns in CreateTableGenerator to ensure correct handling of timestamp values in MySQL databases
added context class loader management to ensure proper class loader handling for the current thread
added logic to set ejection delay when stage number is zero in SimulationListHandler to ensure proper behavior of motor ejection when stages are zero
rename ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and update related test method names to improve clarity and consistency in naming conventions
refactored methods in TransactionUtil2 to improve code readability and maintainability
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance issuer resolution
updated return logic to handle null collections gracefully to ensure robust string representation of collections to avoid null pointer exceptions
updated method to retrieve all styles for alignment to ensure consistent styling across all styles
added foreignDatabaseName and foreignSchemaName as constants and their respective getters and setters to ForeignKeyColumn and AbstractRelationalDbmsHandler
[ java ] do n ' t wait for election state when new leader find .
replaced usage of Shadows . shadowOf with Shadow . extract in ShadowActivity and ShadowBluetoothDevice classes to simplify code and improve readability by using a
refactor FileSelection to improve error handling and path creation logic to enhance robustness by throwing an exception when the input is null or empty
add oninventorytick override to itemstack interface .
fix zip export for war file now
added a null check for getSherlockActivity ( ) before calling invalidateOptionsMenu ( ) to prevent potential NullPointerException when accessing the options menu
updated the handling of widget options in the Launcher and PendingAddItemInfo classes to ensure that the app widget binds correctly based on the provided bind options
added new capability constants for EcobeeSensorThingHandler to enhance functionality by supporting additional air quality options
fix build break by previous commit
added environment variables " AAPT " and " AAPT2 " for AAPT " and " AAPT2 " in Genrule
dump access table only when enable .
added null check on message before call dispose ( )
made the ` db ` field final and added initialization logic in the ` init ` method , and invoked ` initCache ` method in ` TransactionCache `
updated log warning messages to clarify that log watching is not implemented for log4j
replace printStackTrace calls with failure messages for cloning failures to improve error reporting by avoiding unnecessary stack trace printing during cloning failures
updated IOSImplementation . java to use a new SmallByteArrayOutputStream class and modified lock handling to enhance memory management and prevent potential Null
oglesshaderrenderer , shader : use a more generic vertexbuffer attribute type
updated the connection string from " en _ US " to " shutdown " to enable graceful shutdown of the database for improved testing reliability
http : / / issues . apache . org / jira / browse / amq - 4180 - propagate first and last exchange complete timestamp from
8274396 : html tag should not require locale to be set
updated the condition to check if the result is not incomplete and has more than 10 items to improve error handling by ensuring that only valid items are processed
updated usage message for clarity and added time column name handling in HybridClusterIntegrationTestCommandLineRunner to improve user understanding of test execution requirements
refactor output format handling to ensure correct file extension based on output format
inverted the condition for QSB enablement to ensure correct behavior when adjusting the bottom of the hotseat bar
added ` Objects . equals ` and ` Objects . equals ` methods in ` AnimationList ` , ` SceneKey ` , and ` Glt
added a method to set the date in AbstractGenerator and integrated it into Generator , HttpGenerator , HttpConnection , and TestServer classes to enhance date
replace Adler32 with CRC32 for data compression to enhance performance and reduce checksum errors
mondrian : change the default value of the xen . heartbeat . interval to null
added a new warning constant ` ZERO _ AREA _ FIN ` and modified conditions in ` FinSetCalc ` to include it to improve warning messages
remove the _ id and _ retry _ on _ conflict json property from the elasticsearchio
hhh - 15429 add support for trunc function on h2 and sql server
solr - 10362 : memory leak prevent metric conversion from memory pool not find error
added useJavaScript functionality to the UserTests and modified return statements in UserContext , FileTreeNode , and FileTreeNode classes to enhance user context handling to
update validation error messages to use enum classes instead of annotated by annotations to improve clarity and consistency in error reporting
update the backfill path in DetectionResourceHttpUtils . java to align the anomalies endpoint with the latest application requirements
replace instances of ` new DataWord ( ) . getData ( ) ` with ` Pair . of ( 1 , new DataWord ( 1 ) . getData
update badge application logic in AllAppsContainerView to improve accuracy in displaying app app information and their corresponding badge updates
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
updated comments to clarify the necessity of starting the context handlers manually to ensure correct behavior after starting the ContextHandlerCollection , making it clear that the responsibility falls on us to start the handlers
removed condition checking for custom workspace identifier to simplify logic for handling workspace - specific identifiers
remove unnecessary assertion .
added @ Ignore annotation to ClassicSuperHandlingTest . java to temporarily disable tests pending in the unshadowed class to temporarily skip tests pending in the
updated import statements to switch from v1.0 . xchange to itbit across multiple files to ensure compatibility with the latest version of It
ww - 3805 solves problem with not define session reset
make inner class final to enforce immutability
cover potential resource leak in regions . txt and add more logging .
replace instances of " java . util . Vector " and " java . util . Hashtable " with " java . util . HashMap " and "
added ` tableNameWithType ` to the warning log for invalid retention time in ` RetentionManager . java ` to enhance logging clarity by
trim whitespace from fragment list validation to ensure consistency and avoid potential errors due to leading or trailing spaces
fix filenotfoundexception in modfileresourcepack ( # 8452 )
refactor node and edge transformer handling in PartitionToolbar . java for improved clarity and functionality to enhance code readability and maintainability
removed unnecessary condition for showAsGrid ( ) and added checks for task view focus and visibility to improve task view handling in grid mode
updated BMI calculation methods to return BMIViewObject instead of Map to enable better integration with the system - specific BMI data structure
change ` Comparator . comparing ` to ` Entry : : getKey ` to simplify the comparison logic for better readability and maintainability
make haybale block respect their hay bale block # get damage
updated environment variable handling and added support for legacy Java command line environment variables to improve code readability and ensure compatibility with legacy Java environments
add support for - pluginconfiguration a a synonym for - plugin - configuration
updated hashTable check from non - null to non - empty to ensure valid hashTable is present before proceeding with join operations
updated Timestamp class methods to enhance timestamp comparison and improve test coverage to ensure accurate handling of SQL timestamp values for proper validation and accuracy
[ java ] : use correct archive context in cluster service agent .
added a condition to check if the compilation status is notCompiled before compiling to ensure compilation only occurs when compilation is disabled
added new test cases for DB2 and other online test classes including DB2OnlineTest , GeoRasterOnlineTest , MySqlOnlineTest , and
refactor TogglableFlag class to improve default value handling and add a change listener to enhance feature flag functionality and ensure responsive updates
updated log messages to use parameterized log format to improve logging consistency and readability
added a platform check to return early if the current platform is ANDROID to improve performance by avoiding unnecessary processing on Android
replace assertEquals with assertThat for better readability to improve code clarity and maintainability
added new functional interfaces for various primitive types including BytePredicate , FloatPredicate , ShortPredicate , and ShortToLongFunction to the com . speedment . common
modified methods in PmsConfiguration to return a String instead of an int and updated subtitle color handling to improve flexibility in color representation and ensure
added a conditional check before deregistering the invocation registry to ensure that the invocation registry is deregistered only if it is completed successfully
replace the creation of control frame bytes with an output method to streamline the WebSocket connection output process
added a check for the " redirected " flag in the intent creation and handled it in the LoginActivity to ensure welcome screen is only open when the
added ShadowCheckedTextView class to manage checked state functionality in Robolectric tests
make parserstate serializable
8225082 : add expiry exception for identrustdstx3 alias to verifycacerts test
removed redundant duplicate setting of the TEMPDIR attribute to ensure consistent code execution by eliminating redundancy
fix a bug in occupant nickname parsing . smack - 230
fix for stackoverflowerror on quicconnection . newconnection ( )
replace calls to ` writer . getMergeScheduler ( ) ` with calls to ` writer . getConfig ( ) . getMergePolicy ( ) `
change parameter name from ' c ' to ' pageWidth ' and update related method signatures to improve code clarity and consistency in naming conventions
added support for ComputedDateValue and ComputedNumericValue in the AddDefaultValueStatement class to enhance type handling for numeric and numeric default
doc : fix typo in nbtsclient
saml : do n ' t resolve saml2 metadata generation if it exist
changed the access modifier of the ` printer ` variable from private to protected and refactored the ` createPrinter ( ) ` method to improve accessibility
added BigDecimal import and updated order properties to use it to ensure accurate calculation of average price for better precision in order processing
updated field handling in ProjectionOperation and TypeBasedAggregationOperationContext to use ` Fields . field ( ) ` instead of ` Fields . getName (
modify the behavior of the addViewer0 method to check for the player in the viewers before sending packets to ensure that only the correct viewers are
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve memory efficiency and drawable state handling
updated SPDYClient to use compression and parser instances to improve connection handling and session management
fix nullpointerexception in protostuffobjectinput . writeobject ( null ) ( # 4556 )
pdfbox - 4892 : fix typo find by codespell on fossies . org
refactor BarrowmanCalculator to improve code readability and maintainability
ggb - 2118 do n ' t draw ` ` x ' ' and ` ` y ' ' axis if view hide ax label
replaced setFilter and setWrap methods with unsafeSetFilter and setWrap methods to enhance security and encapsulation of texture handling operations
[ ds - 3952 ] fix break link in xmlui ' s workflow page
updated CustomUrlJob . java to support SSL connections based on protocol and added a new CustomUrlTrustEverything . java class to enhance security
add get real use clock rate string for g722 format
refactor TextureAtlas class to improve code readability and maintainability
replaced the method ` getProductNameForBuildTargetNode ` with ` getModuleName ` in ` ProjectGenerator ` and added a method to ` AppleLibraryBuilder `
[ hotfix ] fix lock in test slot .
# 163 - enh : add ability to findids with inheritance and findids ( ) with a test case for inheritance
updated the handling of the WebSocket response header and improved byte buffer management to enhance code clarity and ensure correct reading from the response
[ wasm ] make sure to return the result of functionnode . getreference .
[ type : refactor ] optimize log collection client . ( # 3647 )
updated serialization types and methods in multiple classes to enhance serialization support for specific field types in the codebase
replaced ` QueuedThreadPool ` with ` HandlerCollection ` and updated server setup and teardown methods in ` DeploymentExceptionTest . java ` to improve server management
added error handling for Fresco initialization and VectorDrawableCompat creation to ensure application stability by preventing crashes from exceptions during resource loading
modify the return statement to handle null and empty objectName cases to ensure the method handles cases where objectName may be null or empty
improve error message when a file can not be open
[ hotfix ] [ table - planner ] change environmentsettings to use constant
updated variable names and logic for handling null DNAME values in key processing to improve code clarity and ensure correct handling of critical names in certificate processing
add a deprecation annotation to RuntimeOptions to indicate that the class is no longer recommended for use
replaced byte array conversion with string encoding method to improve code efficiency and readability
added a new interface PermissionEvaluator in the org . springframework . security . expression package to provide a mechanism for evaluating permissions based on authentication
added a new option ` ERASE _ LINE _ ON _ FINISH ` and modified the ` doCleanup ` method in ` LineReaderImpl ` to
hbase - 17792 masterfilesystem . get onlineservers ( ) should check for ! server already
replaced instances of ` CALC _ MERKLE _ ROOT _ FAILED ` and ` SIGN _ ERROR ` with ` BLOCK _ SIGN _ ERROR ` and
fix bz 65384 - improve robustness of expandw .
improve error handling of httpclient and fullnettyclientresponse
change the layout of the spinner from center to centerAbsolute to ensure the spinner positions correctly relative to the parent container
[ hotfix ] [ network ] fix incorrect buffer request in networkbufferpool
fix test break by previous change
replaced AndroidJUnit4 with RetryTestRule and added a retry mechanism to improve test reliability by enabling retries for failing scenarios
refactor QueryStateMachine to remove the autoCommit parameter and related logic to simplify transaction handling and improve code maintainability
fix license header and add package - info . java to optiq test class
added support for " javax . microedition . khronos . opengles . GL " as a distinct distinguished name parser in Instrumentation
[ hotfix ] [ test ] simplify lambda expression in streamtask
updated request handling logic to return null if the URI is null and modified request URL generation to include the request URI conditionally to improve robustness
updated storage point retrieval methods to use constants from DataStorageProvider to improve code maintainability and ensure compatibility with newer Android versions
fix priority of unavailable client session
added a package " liquibase . pro " to the service scan to ensure Liquibase . pro is being used in the service loader
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in the ` SyncedFolderProvider ` to delete other synced folders instead of
updated the ` loadWithNewGlobal ` method to accept an additional variable - length argument to enhance functionality by allowing more flexible input parameters
updated regionMatches calls in FastPathResolver to include startIdx parameter to ensure correct parsing of paths with multiple occurrence of " http : / /
update weigher method to use toIntExact for correct size retrieval to ensure accurate representation of remaining slice size
updated method names from ` hasRandomizedType ` to ` hasAlreadyRandomizationDepth ` across multiple classes to clarify the purpose of
added support for handling " LEAD " and " LAG " function parameters in UnsupportedOperatorsVisitor . java to ensure unsupported functions throw an exception
clear the headers in proxyRequest to ensure proper handling of request headers
added a check for SA attach in CompressedClassSpaceSizeInJmapHeap . java to ensure tests are skipped if SA attach is not expected to work
added null check for bgColor in GraphicsDevice . java and introduced TranslucentWindow . java for testing to ensure bgColor is not null
added error handling for user info input fields in UserInfoActivity to improve user experience by providing clearer error messages when user information is missing
added a custom serialization class for PrecompiledHeaderData to ensure precompiled headers cannot be used on different machine to enforce data integrity by restricting access to
[ flink - 18500 ] [ table - common ] make kafka ' s update mode configurable
added a new file ` MultipleOutputsIntegrationTest . java ` to test named output groups in project builds to ensure correct handling of named outputs in
updated the content handling logic in FileSettings . java to ensure that changes to the original content do not overwrite existing settings with new values
nifi - 5013 fixing issue where variable whose value be identical to null would cause npe
replaced ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java ` to
added persistent taskbar mode switch annotation to TaplTestsQuickstep . java to enable persistent taskbar functionality in the test
added two new device status entries , " leaving - dock " and " energy - save - mode " , to the DeviceStatus class to enhance device
improve logging of item loading error for good debugging .
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test due to instability issues
pixeldensity ( ) set to 1 on 2x screen
updated the RussianLowerCaseFilter class to improve code readability and maintainability
removed unnecessary server and client properties from CsvBulkLoadToolIT and replaced them with a single empty properties set from PropertiesUtil to simplify code
replace File . separatorChar and File . pathSeparatorChar with underscores in displayName to ensure consistent use of file separator across different operating systems
- make littleendien and wavloader work with seekablestream .
support for multi - line table cell with single line indent in columntext
cast the ` oid ` to ` Object ` before comparison to ensure proper type handling for ` Oid ` instances
move metrics - related code to superclass .
[ gr - 46711 ] do n ' t use controlflowanchornode in control flow test .
set focus paint to prevent accidental focus regression
added support for UniqueConstraint and PrimaryKey in the condition checking for the backing index in DatabaseSnapshot to ensure proper handling of cases where there is no primary
added a deprecated method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and updated the ` Account
( scott phillips ) add check to ensure that dc . title be not present in grouprest
make gapinsertiondetector more robust to miss input
camel - 1782 : added unit test base on user forum issue .
update FeedRefreshUpdater to use databaseUpdateThreads instead of backgroundThreads to improve thread management by allowing dynamic adjustment of the number of database updates
updated the FASTSCROLL _ THRESHOLD _ MILLIS value from 40 to 10 to improve scrolling performance and user experience
do n ' t expose system . class . getname ( ) via reflection
hhh - 13644 fix npe in procedurecallimpl . getresultstream ( )
camel - 7999 : camel - swagger - java - rest - allow to load swagger - java file from classpath ( # 7999 )
added new file ` BinaryFrameGenerator . java ` and ` TextFrameGenerator . java ` to generate binary and text frame formats to support the
danielwagnerhall : wait for the " peas " element to be available before start the next test .
replace absolute value calculations with random double calculations for latitude and longitude to improve precision in geographic location generation
added a keepAlive method to manage ClassLoader references to prevent premature garbage collection of the ClassLoader instance
change return value from false to true to update logic to reflect successful operation
do n ' t report ` ` java / util / concurrent / ' ' bug .
added MkdirStep to multiple files and updated assertions in FatBinaryTest to verify expected behavior to ensure proper directory creation for files and improve test coverage
update coordinate calculations and enhance error messages in MeshLeveler . java to improve code clarity and ensure correct boundary checks for surface mesh indices
[ drools - 759 ] dmn : prevent pmml execution from be able to use kie - melon without jpmml lib
update condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure correct validation of the system ' s terminal status
fix testcontainers on macos
( stuart lewis ) add a system property to disable mmap buffer
fail plugin creation if user be not in the right organization
added contributor license notice to SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused code related to web session termination
update the argument passed to executeChildProcess to use the system ' s class path instead of an empty string to ensure the process runs in the correct class
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv , and md
add license header test case ( # 3198 )
enable launcher3 PHYS functionality by default
added a noPrint HTML section to the HtmlThreadInformationsReport class to improve the summary of the thread information display
update trunk ' s version to 4.0 . todo : solr doc and version update
added support for macOS X in BsdDebuggerLocal and PlatformInfo classes to enhance compatibility for macOS environments
use a weak reference to the packet tracker to prevent memory leak
improve log when networkdispatcher exception occur .
[ java ] : use alternate client buffer for admin directory .
added a break statement in TouchImageView . java to exit a loop or switch statement early
chore : [ dialogflow ] update go _ package to match open source code ( # 9389 )
remove ssl filter from feedablebodygenerator # flush ( )
[ j2kt ] fix typeutils . isassignableto to consider super type .
use a concurrentskiplistset rather than a hashset to avoid concurrency issue
added null check for ` tree . errs ` in ` MemberEnter . java ` and modified error detection logic in ` JavaCompiler . java ` , and
change SWT . NO _ BACKGROUND to SWT . NONE in BugInfoView . java to improve text visibility in the browser
replace ` finish ( ) ` with ` dialog . cancel ( ) ` for the negative button in ` AboutActivity . java ` to ensure the dialog
updated the division logic to handle negative upper and lower bounds in IntegerStamp to ensure accurate calculations when values exceed the specified bounds
added a method to read an InputStream into a byte array and updated the image loading process to use this new method to improve code readability and ensure the
added variables and locals handling to the SwitchCompiler and ExprGenerator classes , along with a test for bug110 in ConditionsTest to enhance functionality and
added exception handling for cipher initialization in RSAClientKeyExchange . java to improve error handling and provide debugging information for potential exceptions during the handshake process
added " psapi . lib " to the AdditionalDependencies attribute in WinGammaPlatformVC10 . java to include support for additional platform libraries
updated comment formatting and SQL assertion to use system ' s line separator to ensure consistent line separation across different operating systems
updated malicious javascript javascript code to enhance security by preventing XSS vulnerabilities
remove the ByteArrayInputStream for byte array conversion to avoid unnecessary byte array wrapping
sonar : make field non - static and final
testng : disable emailablereporter by default
added quoting logic for string arguments in CommandLineBuilder to ensure proper handling of special characters in command line arguments
( chore ) camel - metrics : remove unnecessary public modifier
set the number of reduce tasks in FreeGenerator to improve resource management by allowing dynamic configuration of reduce tasks
fall back to default value from object field value if the field do n ' t exist in the schema
bug 505365 - report / dashboard : add multichat operation set definition and gibberish protocol implementation
added support for GL _ ARGB _ texture _ float , GL _ ARB _ texture _ float , and GL _ ARGB _ ARB _
make fileserver thread - safe
added null checks for outputDirectory and jarStream before setting them to ensure proper directory handling to avoid potential NullPointerExceptions
added performance measurement using PerfStatsCollector in ShadowSQLiteConnection to measure SQLite connection performance
replace ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest ` and ` JDKToolLauncher
[ geos - 6900 ] make resource error reporting configurable
lucene - 6271 : fix indexinput . readbytes ( ) to handle eofexception
improve error message to include request uri .
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class for
updated the CHECK _ EVERY _ N constant and added logging for hard reference checks to improve memory management and enhance debugging information
hbase - 2592 addendum fix compilation error
added null check for currentSelectionArea before enabling selection functionality to prevent potential NullPointerException when currentSelectionArea is null
add integration test for jetty - home ' s jaas feature
added spanX and spanY parameters in folder creation logic to ensure proper calculation of cell bounds based on span values
refactor CacheOffHeap to improve code readability and maintainability
add defensive code to prevent reference to later table .
added validation for XML gid values in TiledLoader to ensure data integrity by preventing potential errors caused by corrupt XML files
tilecache : fix concurrency issue with setworkingset
added a new Java class named Solution to implement a solution for determining the difference of two integers based on a given sequence number
add a way to check if a tracker request be due to an invalid ip
fix render pipeline with translucent layer
fix the problem with miss tag in config file
change the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType . java ` and update related assignments to ensure
added null check for recieptents before sending a message and changed time conversion methods to milliseconds to ensure robustness and improve accuracy of time representation
keep track of issingle for async , sensibly determine issingle route
add an option to not fail fast when check docker image
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated its usage in ` RobolectricTestRunner ` to support different resource
no effective change - code cleanup
updated gradleImporter method from importProject to importProjectCore to improve project dependency management
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting when command execution fails
refactor TreeMap class to improve code readability and maintainability
add possibility to disable async stack trace in phone port
added a method to set the glow color of BubbleTextView and updated Folder to use this method to enhance visual feedback by allowing customizable g
update styling for link and description components to improve visual consistency in the user interface
modified ` AbstractJdbc2ResultSetMetaData ` to return " java . lang . Short " and added tests for verifying class names in ` ResultSetMetaDataTest
removed exception handling for file writing in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify file deletion process and improve performance
added a null check for _ info in HttpConnection to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a String provider to enable initialization of ShadowLocation with a provider
updated condition for setting maxRAM based on device RAM size to ensure that maxRAM does not exceed 2048 bytes
add dataIncludedMaps statistic to localmapstats whenNoDataIncludedmaps be set
fileprofileactivator : added file existence check and enable logging .
change the string name from " noname1234 " to " invalid _ " in the PdfString to correctly represent a valid identifier for the reference
change role collection to set due to api change
updated the array size limit from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java and modified the return
added assertions to verify the deletion process in the DashboardUserMapperTest class to ensure the correct behavior of the delete operation under various scenarios
modify index for panel to be consistent with old behaviour
sulong : do not try to execute non - deref pointer
added a method to retrieve the buffer size to provide external access to the buffer size for better resource management
add usage help text to terasology launcher
added functionality to update the action bar title based on the current item position and conditions for oldInteractions and newInteractions to enhance user experience by
refactor CommandLineParserTest to improve test coverage to enhance reliability of command line argument parsing functionality
added interpolators for animations in ` QuickstepAtomicAnimationFactory ` and modified access level of ` ALL _ APPS _ CONTENT _
updated method parameter name from ` javaName ` to ` javaNameFromExternal ` to improve clarity and consistency in naming conventions
added native methods for setting a frame in the CWrapper class to enhance frame management functionality in the application
added constant value checks in mmm Checker . java and created ValueTest . java for testing to ensure that constant values are correctly validated and created
renamed test files for consistency and clarity to improve code readability and maintainability
removed null check for constructors in PojoUtils . java to simplify the code since constructors are expected to be initialized
refactor JiraConfiguration class to improve code readability and maintainability
updated log messages to include " ( Coverage ) " instead of " [ FAILED ] " and " [ COVERAGE ] " to improve clarity and
update bounds calculations in DeviceProfile . java to improve layout positioning relative to search bar offset in layout
pulse audio stream : close when idle timeout be zero
refactor activity transition logic to run on the UI thread in OverviewCommandHelper . java to improve responsiveness and prevent UI thread issues during
removed the ` getSourceGroupOptional ` method and its associated checks from ` AppleSource . java ` to simplify the code by eliminating unnecessary complexity
increased timeout duration for trigger firing from 220000 ms to 320000 ms to accommodate longer test execution times
update variable name from outputPositionCount to positionCount in FloatSelectiveStreamReader . java to improve clarity by using a more descriptive variable name
fix possible infinite loop
added a condition to skip processing for specific UI components to avoid processing for unsupported components in the application
fix crash on rotation
added a null check for commitPoint and assigned it the latest commit if it is null to ensure that the application uses the latest commit if necessary
added IMEI and MEID methods to ShadowTelephonyManagerTest and ShadowTelephonyManager to enable testing of IMEI and ME
removed and added debug methods for request logging in SimpleHostRoutingFilter to improve traceability and monitoring of request execution in debugging
added ` destory ( ) ` methods to ` IndexSegment ` , ` IndexSegmentImpl ` , and ` TestQueryPlanner ` classes to
[ issue # 4841 ] fix integration test ( # 4843 )
replaced Charset with StandardCharsets for UTF - 8 encoding in StatVisualizer . java to improve code readability and maintainability
hbase - 18366 if we do n ' t have bulkload , we should n ' t throw exception and continue
added a nullable commission parameter to DefaultWithdrawFundsParams to enhance flexibility in financial withdrawal parameters
removed the StreamTerminator import from AutoClosingReferenceStream . java to streamline dependencies and reduce unnecessary imports
combined catch blocks for SolrServerException and SolrServerException in LoadSolrBuilder and SolrLocator classes to improve error handling by consolidating related exception management
added error handling for abstract overloaded methods and improved string concatenation in Java2TypeScriptTranslator . java to ensure proper invocation of overloaded methods and
replace direct call to ` store . sweepDisk ( ) ` with a try - with - resources statement using ` StacklessLogging ` to ensure proper resource
added Serializable interface and modified Entities class to include serialization support to ensure proper serialization and deserialization of entities
updated test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added null check for claimRequestString before parsing to avoid potential NullPointerException and improve code readability
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve compatibility with the HIVE _ BUILDER architecture
update type information processing in UpdateMapper and add unit tests for null values mapping in UpdateMapperUnitTests to ensure proper handling of null values for
refactor CoreStatus handling in CollectionsAPIDistributedZkTest and add a new getCoreStatus method in CoreAdminRequest to improve code clarity and
fix npe by initialize transformers and locators as expected
remove extra space
improve debug output when decode extern .
replace setOf ( ) and listOf ( ) with copiedSetOf ( ) in RestTemplateBuilder . java to enhance immutability
( chore ) camel - mail : optimize code
resolve http : / / issues . apache . org / activemq / browse / amq - 2868 - fix for npe
added setIsPropertyName ( true ) to the identifier name method to ensure the identifier name is correctly set as a property name
remove ` ` crash ' ' message from wave generator , instead show a toast
fix npe when sheet do not exist
feat ( kubernetes - client - api ) : add integration test for execlistener
added a test method to verify behavior when no writer is present in the replication handler to ensure that the replication handler correctly handles cases where no writer is present
do n ' t try to dispatch method kernel when kernel be unknown .
Dns client : fix dependency issue .
refactor thread creation in XToolkit to use a privileged action for improved security and encapsulation to enhance thread management and maintain thread security context
added validation and dropdown selection in SelectBox and UITest classes to ensure the SelectBox is correctly initialized and validated
replace IllegalStateException with Collector . printStackTrace to improve error handling by using a more user - friendly exception message
nifi - 11305 : propagate parent split status to flow level when create flow
change connectionState from int to volatile to ensure visibility of the connection state across multiple threads
increased the default polling period from 10 to 1000 milliseconds to improve polling polling consistency across the application
replace ByteBuffers with Memory instances for ASCII , UTF8 , and UTF16 encoding methods to improve memory management efficiency and performance
814814814814 : javadoc show stacktrace in javadoc -- no functional change
[ java ] unusedModifier : false positive for enums with nested interface
refactor logging method calls to use method references for clarity and consistency to improve code readability and maintainability
specify ssl = { 0 } in parameterized of abstracthttpclientservertest
( chore ) camel - core - optimize transformationhelper code
replace userPermissions with activeConnectionPermissions in ActiveConnectionRESTService . java to ensure correct access to active connection metadata
replace equality check with Apache Commons Lang ' s EqualsBuilder to improve readability and maintainability of the code
added null check for outputRoot before processing to prevent potential NullPointerException when outputRoot is null
pdfbox - 4892 : add an annotationfilter , a suggest by valerybokov
removed deprecated methods from StackTraceCleaner to improve code maintainability and reduce technical debt
added content type assignment based on the file extension in PluginServlet to ensure proper content type is set for CSS , JavaScript , and CSS files to improve file
hhh - 16189 skip testliteralsinselectexpression test on sybase
renamed the parameter ` slot ` to ` slotSize ` and updated its usages accordingly to clarify the purpose of the parameter and improve code
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl ` classes , and implemented
[ scb - 2058 ] make long polling and idle timeout configurable in kie - client
added accessibility tests and refactored gesture handling in the PagedView and BaseOverview classes to enhance user interaction and improve gesture handling
updated unlocks initialization in UI components to streamline unlock management and improve code clarity
clear drop event from the event data
added a constant for the default parameter " inputName " to standardize parameter naming conventions
updated the exception type in the test method from MalformedURLException to IOException to improve error handling by using a more specific exception type
update printlnBoth method to include chunk type from chunk header to improve clarity of marker output
added functionality to exclude specific headers from being processed in UmbrellaHeader to improve header management by preventing unnecessary inclusion of specific headers
reformatted method name from onHttpError to onHttpHeaderError .
added encode ( ) method to RequestPlugin . java to enable proper JSON encoding of requests
mondrian : rolapnativesql . getexpression ( ) now account for db2
added validation for null or blank password in LdapAuthenticationProviderImpl and created a test class for empty passwords to ensure that a meaningful exception is thrown
pdfbox - 4892 : simplify code , a suggest by valerybokov
clear the complex writers list when in batch mode
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress warnings about the use of serialization in the codebase
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and modified the null check for ` classInfo ` to improve class loading logic
added error handling for the " _ errors " name in ErrorResponseException to improve error reporting and provide clearer context when errors are encountered
add constructor to facilitate the use of a repositoryprovider
refactor symbol handling logic for binary nodes to improve clarity and maintainability of symbol definition management
updated text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure current text is properly formatted with spaces to improve user experience by removing unwanted
[ 1.18 . x ] : upgrade to roboto roboto 1.18 . x , fix integration with the new roboto
tmi - tiff : set default plantar config to chunky if not already set
fix itemlist tag so it close on window .
move averageutil to core so it can be reuse by subclass .
added files SigInt . java and SigIntBarrier . java to handle signal processing using Signal to enable concurrent execution of INT signal handling in the Agr
modified the handling of graph model and edge and metadata in the ExporterGEXF class to support hierarchical graphs and improve edge and meta data
hbase - 15454 tCTL formulate protocol should use getbytes ( ) instead of arraycopy ( )
[ 4511 ] rubric : fix index out of bound exception
modified the CatalogComparator to use a case - insensitive comparison for schema and catalog to enhance the robustness of the comparison logic
[ grid ] reset the webdriver proxy to null after each test .
fix : do n ' t print line number in critical error
reset textwatcher after android lifecycle change
fix javadoc warning that break the build .
[ flink - 30613 ] [ gelly ] fix type inference for outedgesfunction
[ test ] add soft assertion to junit soft assertion
deleted the file ` ClassA \ 314 \ 201 . java ` and added a new file ` DiacriticTest . java `
[ java ] fix race condition in cluster test .
[ mng - 6377 ] do n ' t set workspace reader in case of component lookup failure
None
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
removed an unused parameter from the Jdbc3Connection constructor to improve code clarity and maintainability
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to improve thread safety and ensure proper initialization checks during servlet instantiation
added logging functionality and modified server time calculation in BinanceExchange and BinanceBaseService classes to enhance traceability of server execution time and
[ test ] add miss javadocs to tomcat adapter
updated deregistration logic for component animations to ensure compatibility with the current form when deregistering animations
added support for custom bitmap options in ` decodeResource ` , ` create ` , and ` drawBitmap ` methods to enhance flexibility in
[ java ] : use example executor in example subscriber to reduce execution time .
added functionality to prevent clicks on tweets and enhance text visibility with emojis to improve user interaction and user experience
added " text " data type to unmodifiable data types and updated logic for determining column size to ensure accurate representation of numeric data types and improve
fix two node restarting runnable which be cause test to fail
updated state checks from hard deletable to removable state to ensure components are in the correct state during the installation process
added a null check for bridgeRegistry before adding results to avoid potential NullPointerExceptions during bridge reconfiguration
refactor robot handling in PreconditionEnforcer and synchronize updateRobots method in CrawlServer to improve thread safety and ensure consistent robot
added null check for the display name before checking for " Teredo " in multiple classes to prevent potential NullPointerException when the display name is null
added a default shader parameter to SpriteBatch constructors to enhance flexibility in shader initialization when no specific shader is provided
added synchronous commit option to properties to ensure data consistency during commit operations
added data type coercion functionality to SortedSetTypeCoercer to ensure unique elements are processed and avoid duplicates during sorting
updated confirmation message logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality based on file and folder status
added a check to ensure index is within safe bounds before processing to prevent potential ArrayIndexOutOfBoundsException
fix the frag storage registration to not use a fixed port
[ hotfix ] [ test ] remove unnecessary mock in hostresourceprovidertest
[ hotfix ] [ yarn ] remove unused log parameter from yarnentrypointutils # loadconfiguration
make frame initialization and color initialization lazy
removed ShadowHtml . java and updated assertions in HtmlTest . java to simplify the codebase by eliminating unused shadow classes
added a new file StarTreeRecordStoreFactoryBlackHoleImpl . java implementing StarTreeRecordStoreFactory to provide a custom implementation of StarTreeRecordStore
updated logger configuration from " org . eclipse . jetty " to " org . eclipse . jetty . http3 " and added
changed the visibility of the addListeners method from private to package - private to restrict access to the method from within the same package in the class implementation
[ hotfix ] fix checkstyle violation in statehandlestore
updated import statements for Jetty ' s security Constraint class to ensure compatibility with the latest Jetty HTTP security features
update ` ` none ' ' to ` ` default ' ' for student detail page ( # 896 )
use try - with - resources to avoid resource leak
camel - 1145 : camel - core - avoid port clash on different port number ( # 11030 )
refactor Java library handling to replace ` buildTarget ` with ` libraryTarget ` to improve clarity and consistency in the codebase
remove reference to ` # validating - cerficates ` since it be no longer in use
bug 6215 : remove default page size from listcapacity api response
added a case for CLOSED in IteratingCallback . java to ensure proper handling of the closed state to prevent potential errors during iteration
added isAuthorized field and updated related methods in AccessControlContext to ensure proper authorization state management during access control operations
refactor OSGi deployment logic to handle non - AbstractOSGiApp instances to improve robustness and ensure proper registration of OSGi services
added support for the Tiff media type in DLNAMediaInfo to ensure proper handling of TIFF resources in the media processing
fix thread safety issue in optimizedcalltarget
added a new file ` Cubocy . java ` and modified ` Map . java ` , ` MapRenderer . java ` , and
updated PolicyMonitor initialization to use target directory instead of test resource directories to ensure correct file paths are used for monitoring test resources
removed all files from trashbinListAdapter to ensure a clean state for the trash bin activity
use com . sun . jdi . bootstrap . virtualmachinemanager instead of org . eclipse . jdi . bootstrap . virtualmachinemanager
[ gr - 46711 ] make docheck and dofoclose on global node a bit more generic .
updated the createLauncherEvent method to accept an Intent parameter to enhance event handling by associating launcher events with specific intents
increased the maximumBurnAmount for better burning to ensure it does not exceed a specified upper limit to prevent excessively low burn periods
updated UniqueConstraintSnapshotGeneratorSnowflake to utilize H2Database and StringUtil for improved database handling to enhance compatibility with H
fix ( core ) : fix the ddl transformer to correctly handle empty insert statement
updated test methods to use secure PGT URL instead of plain HTTP to enhance security by using HTTPS for PGT URLs
updated ` getDefaultValidFunctionName ` method to include an ` isStatement ` parameter and added a ` hideDefaultName ` method to manage default function names to
refactor JarLauncher class to improve code readability and maintainability
[ hotfix ] fix some raw type lint warning in java . util . concurrent
make call to jabber telephony available only if it ' s a call peer .
added unit tests for PGobject updates in ResultSetTest . java to ensure correct handling of PostgreSQL date values and timestamps in database interactions
updated password reset endpoint to return BAD _ REQUEST for users with non - UAA origin to improve error handling and ensure proper response for invalid user
changed retrieval of propertiesElement from getChildNodes to getDocumentElement to improve compatibility with XML document handling
refactor caching logic in Cache . java to improve performance and maintainability of the caching mechanism
rename ` ` timeinsec ' ' to ` ` timemillis ' ' for clarity
add a valid bind check to the light relay to prevent the light relay from crash .
added a new class ` Chainer ` and updated ` CollectionSubject ` to use it for list containment checks to facilitate chained item chaining in
refactor Model class to improve code readability and maintainability
update recordedTime increment to include 619315200000L to ensure accurate time representation in seconds
added a check to resize the status if the terminal type is Windows to ensure proper resizing behavior on Windows systems
modified the logic to set the host version state to INSTALLED conditionally based on the repository version ' s state to ensure that the host version state
put libjavajre _ java _ library . jar in test _ root and use com . google . j2cl . transpiler
o replace hashset by linkedhashset to maintain predictable iteration order
remove try / catch block for operation serialization .
refactor method call formatting in KnativeEnvironment . java to improve code readability and maintainability
[ hotfix ] fix typo in commitlog archiver
added connect ( ) method calls in CloudSolrClient and implemented a test for upload configuration in TestCloudSolrClientConnections to ensure proper connection handling
make binding removal and evaluation thread safe
added methods to manage file and cache paths in ShadowContext and RobolectricTestRunner to improve code maintainability and facilitate file management
fix xstream style to be deterministic
add a kiemodulemodel parameter to the kiehelper . builder
refactor farmland moisture handling in BlockEventListener to enhance soil moisture validation and improve event cancellation logic
added a default implementation of the getLocalIp method to provide a default implementation to provide a consistent way to retrieve the local IP address
updated JdbcStepExecutionDao to deserialize binary stream from the execution context to improve data handling and ensure correct execution context management
fix some typo , a suggest by valerybokov
updated resource management and added preload resource for macOS to ensure compatibility with macOS and improve resource loading for Python functions
refactored PluginTab to utilize a refresh button for displaying plugins to improve user experience by allowing users to refresh the list of plugins easily
updated log level from info to warn for error handling to better reflect the severity of the logged error for better debugging
fix failure to attach volume to vm on vmware , when vm be stop
camel - 6521 fixed the test error of jetty
renamed ExperimentalMockitoJUnitRunner class for clarity to enhance code readability and maintainability
updated the serial option handling in GpsSettingsActivity and Session classes to use a new method to retrieve the build serial to ensure users are aware
updated the implementation of SwapGBuffers . java to improve buffer management efficiency
[ fix ] bug in animation control management .
added functionality to set and retrieve smart replies in ShadowRankingTest and updated ShadowRanking to utilize Reflector in ShadowRanking to enhance
[ java ] be more robust when listing record directory .
updated retrieval of carrot2ResourcesDir in CarrotClusteringEngine . java to improve code readability by streamlining the retrieval process
added null check in WindowsTreeUI and created a new bug8004298 class for testing to ensure stability of the WindowsTreeUI and
8058661 : [ testbug ] update asm version to 9
make get ( ) throw tasteexception instead of return null
added client information to SurrogateAuthenticationEventListenerTests to ensure proper client context is used during test execution
added a boolean variable ` isUserView ` to ` CardPresenter ` to track user view state during the login process
replaced references to ` GraphvizJavaExecutorUtility . isGraphvizJavaAvailable ` with ` GraphvizUtility . isGraphvizJavaAvailable `
refactor the creation of metrics for sync log time per request to improve code readability and maintainability
added a new module - info . java file for the SQLite connector with required exports and dependencies to define module boundaries and dependencies for better modularization and encapsulation
added a 500ms sleep in StreamResetTest . java to ensure proper synchronization during test execution
[ ds - 3952 ] remove confuse ` ` new ' ' permission
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method ` getDepth ` to ` SpringLoadedState ` that returns a fixed depth value to ensure consistent depth representation in the application state
remove use of system . arraycopy
[ hotfix ] [ doc ] fix typo in executiongraph
removed notification removal and adjusted swipe layout behavior in NotificationActivity and NotificationRenderer to simplify notification handling and improve user interaction
updated exception handling to return " none " when the invocation is null to improve clarity in error messages for null invocation cases
fix checkstyle issue in container / glowcontainer . java ( # 662 )
replaced MethodHandle lookup with direct method reference for setting target field to improve performance by avoiding reflection access
use intvalue ( ) to fix build
updated the baseSubject formatting in BaseEmailContentFormatter . java to format metrics and datasets separately to improve clarity and consistency in email subject representation
added a new JPanel to the LayoutPanel to improve the user interface by conditionally displaying the property sheet based on its presence
added a null check for the location variable in the condition to ensure the code does not throw a NullPointerException when the location is null
fix javadoc error in builderfactory
added a null check for DSA key parameters in BasicChecker to ensure that the key parameters are provided and avoid potential errors during public key validation
refactor MediaTypeRequestMatcher to encapsulate the media type exclusion logic to improve code readability and maintainability
updated task number assignment to use the task ID from taskAttemptId to improve clarity and consistency in logging output
added properties to the SpringBootTest annotation in EventServiceTests to allow bean definition overriding to enable flexible testing of bean definition in the application
added null check before closing indexReader to prevent potential NullPointerException when indexReader is null
removed the ' service ' package from multiple classes to simplify package declarations and improve code organization
added a test method to verify that BRs or paragraphs do not have BRs or paragraphs in the code block to ensure correct rendering of HTML code
added a new file CompatibilityTest . java to verify the consistency of internal DTDs to ensure that internal DTDs are correctly declared
added new utility classes for push notification handling and security features
[ rebalancer ] fix instance state update bug in tablerebalancer
bump version to 2.7 . 0 and tidy release note note
log4j2 - 1342 : fix test on window .
align code between 4.0 and 5.0 for ajp and 5.1 .
set default values for friction , restitution , density , and isSensor in FixtureDef to improve usability and ensure consistent behavior of physics properties
updated method signatures to include anomaly function specifications in multiple classes to enhance data handling and improve anomaly detection functionality
added a shell command to wait for broadcast idle to improve synchronization during the broadcasting process
added unit tests for font tag and link tag attributes in ResourcesTest . java and modified the return statement in ResStringPool . java to ensure correct parsing
move guicstatscomponent out of work / common
added permission handling for phone calls in Launcher . java and Utilities . java to ensure proper access to phone services when needed
updated the return value in SimulationPanel and added localization support in multiple classes to enhance user interaction with localization features and improve the user interface
None
added a synchronized method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to check if the Docker Docker client is available to improve thread safety
added a constant for the VPX type to support dynamic video encoding in the application
added a coordinator address option to DistBuildFactory and updated DistBuildRunCommand to allow configuration of the remote coordinator thrift server to connect to a
added file path matching functionality to FsUtils and implemented a timer in WrapTimer for better control over timer execution
added a conditional check to ensure that only positive values are added to labelValues to avoid adding zero or negative values
improve error message for ` ` maybe generically true ' ' / ` ` no boolean return ' '
remove @ test from testperfbenchmarkdriver
added functionality to set materialization time in ObjectStore and created a test for it in TestObjectStore to ensure correct handling of materialization time
[ voskott ] detect & log miss native dependency on voskott . io ( # 3997 )
remove the is _ one _ way flag from the sampler and remove the is _ one _ way property from the element , so that it will work with
update break weight logic in GlyphView . java to improve accuracy of break weight evaluation
refactor sync reading logic to use a buffer for improved efficiency and efficiency to enhance performance and reduce memory usage during sync operations
added an annotation to the AutoAddReplicasPlanActionTest class to indicate that the test is waiting for a fix related to SOLR - 13028
replaced direct map entries with a LinkedList containing entries in the data map to improve data structure to store keys for processing steps and processors
removed the unused ` keysToDataFlavorArray ` method and refactored the ` setToSortedDataFlavorArray ` method to simplify the
added infoport configuration to the thrift server command line arguments to simulate dynamic port allocation for testing purposes
added a check for EOF in the RegExpScanner class to ensure the method returns false when the end of the regex match is not reached
replaced direct calls to Boolean . getBoolean for metrics and timer addition with a static set to track enabled metrics and timers to improve performance by avoiding redundant
fix possible npe when check message presence .
fix npe when sketch file be not readable
refactor the creation of the refresh token into a separate method to improve code readability and reusability
updated error message formatting to provide clearer context for the path transformation failure
[ flink - 20536 ] [ yarn ] remove unnecessary high - availability service clear operation
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` and marked it with ` @ Implementation ` to
updated BTCChinaExchange to use a secure URL for accessing the market data service to ensure secure communication with the correct data service
[ core ] fix cpd task on window
added two new files , OauthController . java and Oauth2PluginTest . java , to implement OAuth authorization functionality and integrate with
fix a typo in the semgrex documentation
add entrystream . flatmap ( ) and rename to entrystream . newstreamex ( )
camel - 7999 fixed the issue of exceptiontoproducerresponseconverters not return a success response
updated the logic for determining if the class loader shouldComeFromThisClassLoader to include Maven Surefire to ensure compatibility with project builds with mixed
flip the order ofTransmittableAudioEncodings check to avoid interference with every other
replace instances of ` SequenceNextValueFunction ` with ` DatabaseFunction ` in ` CreateTableGenerator . java ` to ensure compatibility with DB2
added checks for station GML 1 and 2 GML 32 in NormalizedMultiValuesTest . java to ensure coverage of specific test cases for the
added a volatile boolean field ` wasInvoked ` and updated related references in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to improve
added a check for processor configuration before expanding regex mappings and modified return statements to return unmodifiableMap and Collections . unmodifiableSet to en
corrected the method name from ` splitIntoThirtyParts ` to ` splitIntoThirtySecondsParts ` and introduced a new method for
added support for the XLCD and Grbl controller in the application to enable communication with the XLCD firmware in the application
[ drools - 7 ] allow to load the xsd from the kiebase
updated the retry logic in EventQuery classes to use a retry mechanism and added assertions for non - empty messages to ensure that the loop does not
replaced thread states await methods with join methods for better synchronization to improve code clarity and ensure proper handling of thread states during tests
refactor equals and hashCode methods in DelegatingMethod and add tests for their functionality to ensure proper equality comparison and hash code generation for Delegating
updated constants for energy freeze and unfreeze values from 20 to 10000 to increase resource usage for better performance and resource management
updated method signature and added exception handling to improve configuration management and ensure proper exception handling
deleted ` SpringTransactionHooks . java ` and replaced it with ` AbstractSpringTransactionHooks . java ` in ` SpringTransactionHooksTest . java ` to
rename AbstractClassAssert for clarity to improve code readability and maintainability
escape analysis of stringreference . value
added support for provided dependencies query in AndroidLibraryDescription and updated related tests to enhance dependency resolution and improve test coverage for dependency handling
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable keyboard transition synchronization during home and all apps
replaced the retrieval of system anomaly message with a flag to optimize performance by reducing redundant retrieval of anomaly message
added a constant Cinepack to FormatConfiguration and utilized it in LibMediaInfoParser to enable support for Cinepack format in media parsing
added camera bounce configuration and adjusted hand movement animation offset logic to enhance player experience by allowing dynamic adjustment of bounce offsets based on configuration
change the data description from ` data . describe ( ) ` to ` b . digest . toString ( ) ` in the GrpcCasBlobUploader class
deleted the HSQLDBServerFilesFilter class and updated its usage in TestUtility . java to streamline file filtering logic to improve code maintainability by
fix the case where restorefromseed and restorefromkey be set together .
updated the retrieval of the API data series version and added logging for missing title to ensure correct versioning of API data and improve traceability for debugging
do n ' t add type to method that already exist
replaced hardcoded array size with a constant for better maintainability to improve code readability and reduce magic numbers
bugfix # 207127 - notify plugins when mode be not configure properly
added checks for zero and non - zero values in multiple classes to return byte , short , and long data types to ensure correct handling of zero
use derby ' s temporaryfolder rule instead of hardcoding db _ name
added miss istackDamageable ( ) and gethassubtypes ( ) hook .
fix mc - 167447 ( # 7452 )
eranmes , on behalf of andreashaas : adding a ` ` browser . startup . page ' ' preference to the firefox
updated condition in Http1xClientConnection to handle different HTTP methods to ensure proper response handling for connection upgrades
updated task acceptance from " compile " to " process - classes " to align with the new project structure
hc4impl : use closeidleconnections instead of shutdown
added a check to ensure the aggregate function name does not already exist before processing to avoid unnecessary addition of metrics to existing ones
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to use it to improve fullscreen control for task overlays
added a new file ` Solution . java ` that reads a file and calculates the number of consecutive consecutive consecutive consecutive consecutive consecutive consecutive consecutive consecutive consecutive consecutive consecutive
[ java ] initialize socket channel to null to avoid potential null pointer exception .
fix checkstyle issue in util / mutisign / mutisignoperationergodictest . java ( # 775 )
added error handling to ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` methods in ` StaxEventItemReader ` to
None
updated import statements from ` com . nimbusds . jose . shaded . json ` to ` net . minidev . json ` to
updated conditional checks for the Linux OS and added a new mapping for " Linux - s390x - 64 " to " aix " to ensure compatibility
cloudstack - 2120 : do n ' t expose private ip to vr
added a method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to enable synchronous execution of RunnableWithResultSync with result blocking
remove unnecessary ' presence message combo ' test .
replace int cast with Math . round for left and right calculations in PortraitPagedViewHandler . java to improve precision in number handling to ensure consistent
mondrian : fix minor formatting issue in testclusterdumper
hbase - 26945 addendum fix checkstyle violation in keyvalue
camel - 14354 : camel - core - optimize and allow to register type converter easily
added support for conditional tasks in SparkCrossProductCheck to improve task execution handling for conditional tasks
update action filters in Launcher and LauncherAppState classes to ensure consistent handling of managed profile actions
added additional conditions to check for JSON response in the LoginInfoEndpoint class to ensure that at least one active oauth provider can still accept the pass
added a method ` toDescriptiveString ( ) ` to the ` AssignmentManager ` class to provide a descriptive string representation of the region ' s
added a new field ' result ' and updated related methods in HuobiAccountInfo . java , and modified message handling in Huobi
added support for the " PERIOD " column in MariaDB by adding a reserve word " PERIOD " in the MariaDB database to ensure
[ beam - 8470 ] add external _ service _ address and process _ variables instruction
andreastolftolfsen : add some important change log entry for android 7.1
updated the ` NUM _ MILLIS _ IN _ DAY ` constant in ` IndexExpressionIT ` to use the value from ` TestUtil ` instead of
remove debug print statement from imageresourceloader
[ java ] : simplify client invocation in archive and consensus module .
added validation for implicit lambda parameters and updated type creation for implicit lambda parameters to improve error handling and ensure correct type determination in lambda expressions
refactor hideMenuItem methods to show and hide menu items in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by
added new trading options for BTC _ deposit and BTC _ withdrawal in BTCETransHistoryResult . java and updated corresponding test assertions to
replace List with Set for series and exceptions in RetryFilterFunctions . java to improve performance by preventing duplicate entries in the list
restored the @ Deprecated annotation in PluginLoader . java to mark the class as outdated and discourage its use in future development
updated conditional check in LastQueryExecutor . java and added a new test case in IoTDBLastIT . java to enhance functionality to
removed extra newline characters in HttpResponse . java to ensure consistent line endings
set simple logger to log http wire error
set the title bar to safe area to prevent potential issues with UI rendering issues
reversed the iteration order of the TimeSeriesChunkMetaDataList to ensure the correct subset of metadata is accessed before processing
added SQL syntax for renaming columns in AlterTest . java to ensure correct parsing and deparsing of SQL queries
make method public for backwards compat .
fixed - arrayindexoutofboundsexception be throw if redissonexecutorservice . hasexecutorservice throw arrayindexoutofboundsexception
remove hardcoded ` ` . part ' ' suffix from file name . part
[ hotfix ] [ orc ] improve orc test coverage
fix checkstyle error in comparefunctions
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task
added ` toString ( ) ` methods to ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to provide a
added state validation in AbsSwipeUpHandler and null check for mLastGestureState in TaskAnimationManager to prevent processing of invalid states and ensure proper cleanup of
updated the ` getLockTimestamp ` and ` setLockTimestamp ` methods in ` AppPreferences ` and ` PreferenceManager ` classes to use ` AppPreferences
updated the artist retrieval logic to handle cases where the artist name may be undefined or undefined
added null check for remoteMessage before accessing its data to avoid potential NullPointerException during message processing
nifi - 3985 fixed npe when zero byte input be pass to splittext
added support for loading a Windows - style key store in HttpsConnectorFactory to ensure proper handling of Windows - style key store configurations
polish code and increase default timeouts
added a condition to check if the result code is not 404 to handle cases where the remote folder is not found more appropriately
added animate duration and interpolation features to Slider class to enhance visual value manipulation and control over animation effects
update assertions in LineSeparatorProcessorTest to use consistent variable naming conventions to improve code readability and maintainability
changed maxWidth and maxHeight from 512 to 1024 to optimize memory usage and improve performance
added a test for unwrapping nested ternary syntax in the UnnecessaryParenthesesTest class to ensure correct handling of unnecessary parentheses in binary expressions
camel - 6056 fixed the unit test error of hazelcast
added TextFeedbackTest to the test suite and updated TestRunner to include a doRun method to enhance test coverage and ensure consistent behavior of text
replace rounding with float comparison for score comparison to improve precision in score comparison
updated display density constants and improved resource saving in ` AddAndScaleMultiImage . java ` and ` ResourceEditorApp . java ` to
make arrayclasselementoffset a configuration param for hotspot replacesnippets
polish defaultlogpublisher to avoid infinite loop
added support for remote SCM functionality in Configuration and RuntimeEnvironment classes to enable users to enable or disable remote SCM features based on user input
[ miio ] add support for run - in - hole and run - in - hole data type ( alexa )
replace ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to enhance logging functionality by utilizing
rename variable ' log ' to ' LOG ' for consistency to improve code readability and maintainability
add test for projectgenerationeventstarted
ggb - 2118 add special point to tool ' s selection menu
refactor JavaCompiler class to improve code readability and maintainability
add error log if test execution time < 0
8028453 : open jdk repos have file with incorrect copyright header , which can end up in src bundle
updated ldflags to include garbage collection options to improve memory allocation for the NDK process
added dynamic fallback URI expansion and corresponding test coverage in ` SpringCloudCircuitBreakerFilterFactory ` to enhance circuit breaker functionality and ensure
danielwagnerhall : fix javadoc warning . no functional change .
avoid npe due to miss xssf namespaces
added a method to retrieve an account net via HTTP in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to
added a condition to return clipString when available text width is less than zero in SwingUtilities2 . java to improve text layout handling when available
initialize ` flatteningIterator ` in ` FileResourceIterator ` and modify its usage in ` FlatteningIterator ` to streamline iterator handling and
remove color tags from title and body when they contain HTML tags to ensure proper formatting of italic links in notifications
doc : generate sample code in the java microgenerator ( # 419 )
[ fix # 7059 ] reload and delete exist question before ui test
fixed index out of bound exception in hssfsheet # getfirstrownum
added permission checks for launcher activities to enhance security to prevent potential exploitation by ignoring malicious intents
[ java ] send an event to cluster client when session go to ` ` open ' ' state .
implemented hashCode and equality checks in AbstractParquetMapInspector class to ensure proper comparison and hashing for instances of AbstractParquetMapInspector
added handling for remotelyClosed state in HTTP3StreamConnection to ensure proper resource management and prevent memory leaks
made the SplitReader interface AutoCloseable and removed the close ( ) method to allow for autocloseable resources and improve resource management
removed the deepCopy method from the GsonBuilder class to simplify the code and improve maintainability by eliminating unnecessary duplication features
add llsourcebuilder . not _ found constant to avoid nullpointer exception
refactor fileOpenFuture initialization and improve asynchronous file handling in RestClientRequestImpl . java to enhance code readability and maintainability by
updated the call to dispatchStatusString in GrblController . java to ensure consistent formatting of the code
updated ClassLoader usage in MockFactory and added new SearchingClassLoader class to improve class loading flexibility and maintainability
* add a test to demonstrate bug with ` ` in between node ' '
added LEFT _ SEMI _ JOIN type to the condition in ConstantPropagateProcFactory . java to support additional join requirements
replace boolean completion checks with if statements in HttpReceiver and HttpSender classes to improve readability and maintainability of the code
fix array length offset access to long .
http : / / issues . apache . org / jira / browse / amq - 4162 - fix test case and default policy
refactor various Kerberos - related classes to improve code organization and maintainability
added a check for running state before stopping the app context to prevent unnecessary stop calls when the application context is not running
change return type of drawItem method from void to GlyphLayout to allow for returning the updated font layout instead of void
replaced REST endpoint metrics retrieval with metrics publishing to streamline metrics collection and improve error handling
corrected a typo in the variable name from ` accountAgeWitnessMap ` to ` accountAgeWitnessMap ` to ensure proper functionality and avoid potential
reformatted code for consistency and clarity across multiple classes to improve code readability and maintainability
added resourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and its associated tests to enhance the handling of resource URL providers in
add a transform so that we return to dex again
fix getconfiguration ( ) to return only the property of the rule
removed the NOFOLLOW _ LINKS option from PathResource and added a new symlinkDir argument in AliasCheckerSymlinkTest to simplify directory checks and enhance
[ hotfix ] [ table - common ] remove dialect property from executioncontext
refactor ` rDotJavaPackages ` usage from an ` ImmutableSet ` to a ` Supplier < ImmutableSet < String > > `
fixed pmd warn about miss package info annotation .
added configuration for minimum cross compaction file level in IoTDBDescriptor to allow dynamic adjustment of unseq file compaction settings
[ hotfix ] [ core ] move flink active resource manager class to core .
disable test for now a it be flaky
fix parsing of feature file with spaces
refactor ExpandableUploadListAdapter to enhance thumbnail handling and formatting to improve code readability and ensure proper thumbnail generation based on upload status
refactor Config merging logic in RobolectricTestRunner and add tests in RobolectricTestRunnerTest to ensure consistent configuration merging across classes
updated block and item registries to use filters for cleaner iteration to improve code robustness by filtering out null registry names
refactored methods in ` AbstractDataChangedListener ` and ` WebsocketDataChangedListener ` to use default implementations and changed session set to
updated JSONPojoConvertor to handle enum types correctly to ensure proper conversion of enum values to their corresponding enum representation
add deprecation warning to ` -- view ` option
change gwtrequestwrapper to use transportformat . pump ( ) to read the payload
bugfix : handle motion event on accelerometer and gyrocontrol
biomelist SIZE should be dynamic rather than static constant
camel - core - optimize to reduce stack frame in use during build process
updated variable declaration for clarity to improve code readability and maintainability
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a utility for converting Byte . A .
add preload parameter to MMapDirectoryFactory to allow optional preload configuration for the map directory
added custom metrics for various enabled components in BukkitPlatform to provide detailed metrics on component usage for better analytics
refactor QuickConnectREST class to improve code readability and maintainability
added aspect ratio and default card image drawable compatibility to enhance image quality and ensure proper rendering in the application
[ scott phillips ] fix login and auth count logic
update vectorhashkeywrapper to avoid copying empty array
[ criu ] add jit performance test .
added trimming of whitespace in MultiPartFilter and print parameter in MultipartFilterTest to ensure clean input handling and improve debugging output
add experiencedrop event to teleport player away from player
updated error messages and status reporting in OpenUVBridgeHandler and OpenUVReportHandler to enhance clarity and improve user feedback regarding API settings
[ adhoc ] remove unsupportedoperatorsvisitor ( no longer need )
add RdepsFunction and improve target graph handling in GraphEnhancementQueryEnvironment to enhance dependency management and support for reverse dependency queries
refactor Character class to improve code readability and maintainability
[ fix ] scale entire rocket by default
replaced ` Arrays . toString ( ) ` with ` assertEquals ( bytes , rs . getBytes ( 4 ) ) ` for byte array assertions to simplify the
added time boundary handling for both offline and realtime tables in the BaseBrokerRequestHandler to ensure consistent time boundary detection for pinot queries and improve
fix remain issue with apr / native
fix eightmuses title , add a link to download
replaced calls to ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to standardize wait
added a condition for phone profile in QuickstepLauncher to ensure proper layout behavior for phone devices in non - landscape orientation
replace usage of PROPERTY with query . unwrap ( QueryImpl . class ) to ensure proper handling of null values in Hibernate queries
replace ` Files . readAllLines ` with ` readMatchingLines ` and add exception handling for privileged actions to improve security and ensure proper access control
removed dynamic check for stream method in JpaQueryExecution to simplify the code by eliminating unnecessary dynamic logic
fix npe in physicsprocess when entity be null
added test for entry processor with predicate .
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
fix color variable length check and improve test html message
fix ` ` null pointer exception ' ' when use jabref registry ( # 8452 )
updated scratch path handling in Aapt2Link . java to ensure correct path formatting and include cell relative path removal
replace instantiation of ` Capture ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and ` ThriftOverHttpService
reset selection after select geos
improve error message for syntax error
added isCanceled method implementations across multiple classes to standardize the cancellation status of call objects
refactor multiple classes to implement a default method for annotation presence checking to enhance code consistency and maintainability
add default implementation for removeallWidgets ( )
[ hotfix ] [ yarn ] fix yarnsessionfifoitcase and related test
opensslcipher : fix output size calculation
added logic to force transcoding of high - res content based on device dimensions to ensure compatibility with Fire TV Stick devices and streamline profile settings
[ beam - 8470 ] fix compile error and remove unused import .
replaced specific import statements with a wildcard import and modified listener removal logic to improve code simplicity and handle multiple listeners more effectively
changed the parameter type of ` putString ` method from ` boolean [ ] fullwidths ` to ` byte [ ] ` and modified the width
added support for drag - and - drop in FolderIcon to enhance functionality for handling drag events in the launcher
[ refactor ] add support for filesystemconnector for empty connector
removed unnecessary whitespace in RabbitMQPublisherImpl . java to improve code readability and maintain consistency in formatting
removed the conditional check for the ' afterAug1 ' month in the video link validation to simplify the logic for ensuring video links are processed only for valid
camel - 6521 fixed sftp to use compact path on window
( chore ) camel - baseweatherconsumer : increase test timeout
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to enhance code readability and maintainability
fixed bug where double plant with huge fern can not be planned again
changed tree focus setting from setFocusable to setRequestFocusEnabled to prevent focus in the tree component
cloudstack - 7267 : do n ' t swallow error during shutdown
added support for DB2TestSystem and updated conditional checks in DockerDatabaseWrapper and TableIsEmptyGenerator to enhance compatibility with DB2 - specific functionalities
change scope of units variable from final to non - final and add a method to set the unit group to improve flexibility in managing unit
added a new static final CurrencyPair for BTC / ZMW in the CurrencyPair class to support trading functionality for BTC / ZMW
ensure that the sampler correctly set the number of sample
removed " job " prefix from test cases in StepWithSimpleTaskJobParserTests to simplify test assertions for clarity and consistency
changed variables to final in CentralAuthenticationServiceImplTests . java to ensure immutability of credentials and service references
[ web ] fix for stringindexoutofboundsexception in ggbabs ( )
added multiple calls to addServiceOutput ( ) and modified trigger handling in DDLSemanticAnalyzer . java to enhance service output tracking and improve error
fix : support objectcreationexpr with bigdecimal type ( # 2595 )
added a new import statement for " org . eclipse . jdt . " in WebAppContext . java to hide JDT used by jet
changed the return value of the authentication cache check from a condition to false to simplify the authentication cache logic for better clarity and functionality
page title : capitalize namespace before store it .
camel - 16400 : direct eip : add miss directconsumernotavailableexception for backward compatibility .
added null check for zooKeeper before checking its state to avoid potential NullPointerException when zookeeper is null
updated progress bar step message to maintain consistency in code formatting
refactor vibration handling to run on the UI helper thread to improve responsiveness and maintainability of the vibration process
added a method to update the last remote stream ID to ensure the session has the correct latest stream information
set antialiasing for text in preference
[ java ] : remove the need for configuration of initial term window size .
refactor : remove static import of enums in ctannotationimpl . java ( # 2563 )
update exoplayer javadoc with new default policy
updated the method to return pixel pixels from an integer to a rectangle of specific dimensions to ensure correct pixel data retrieval for improved functionality
added a new method ` newPrintStream ` to configure output stream encoding based on system properties to allow dynamic encoding settings for output streams
fix vibrate to 25 second .
refactor ( deps ) : upgrade dependency com . google . appengine . api . datastore to v2.24 . 0 ( # 1375 )
updated constructors in WebSocketClient to include an Executor parameter to ensure proper instantiation of WebSocketClient with the appropriate executor and sslContextFactory
simonstewart : fix the issue that i18ntest do n ' t pass when run with the firefox driver .
refactor handleBootstrapMethodError and handleLoadConstantException methods to handle LoadConstantException instead of BootMethodError and IncompatibleClassChangeError
[ activiti rest ] restore auth system state after test case execution
add a lowercase comparator to conll .
javadoctool : do n ' t silently ignore duplicate source file
simonstewart : add more test for the selenium - backed webdriver back to the selenium - backed webdriver
added validation to check the number of keys in the HighestKvno class to ensure the number of keys matches expected value to prevent runtime errors
added error handling for attribute retrieval in HDF5BatchReader to ensure that only valid attributes are retrieved from the node to improve robustness by handling potential
use writeresult . in ( pipeline ) instead of pcallback . in ( pipeline )
add ` ` template ' ' to processresourcetype api documentation .
added a new file TestMultiANewArray . java to implement a Java process builder for testing multi - dimensional arrays to verify that the
add global config to disable secondary storage vm
refactor block ID retrieval logic to check against headNum conditionally to ensure correct ID retrieval based on the current head block number
set the theme for the preview tab to customize the user interface appearance based on user preferences
added null check and close method for reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added a test for HTTP idle timeout in ConnectorTimeoutTest . java to ensure that the server correctly handles idle connections and returns a valid response
add constant to allow configuration of dictionary and signature
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve cl
updated type parameter syntax in JpaPagingItemReaderIntegrationTests and adjusted assertion message in JobLaunchingGatewayParserTests to improve code readability and correctness
change log level from warn to debug for child node retrieval to reduce log verbosity and improve performance
refactor color extraction logic to utilize a dedicated method for retrieving the hotseat palette to improve code clarity and maintainability while ensuring compatibility
added default data table entry and cell transformers to TypeRegistry to enhance data table functionality by allowing different transformer types
added an assertion to verify that newAvailableShared does not exceed the initShared limit
chore ( regen ) : regenerate with update license year
removed the ` projectGenerated ` boolean and its getter method from ` ProjectGenerator ` to streamline project generation logic by eliminating unnecessary checks
fix : remove trail whitespace
added contact form handling methods and a new Contact class to improve user interaction and address existing contacts
guacamole - 524 : replace usage of deprecated objectpermission with objectpermission .
update RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version releases
[ drools - 7 ] fix checkstyle violation in TraitFactory
updated SQL queries to replace " findWhereNameLikeLikeAndActive " with " findWhereNameOrAliasLikeAndActive " to enhance
replaced the manual closing of per - document consumers with a utility method to safely close resources to improve resource management and prevent potential memory leaks
updated method signatures and improved listener implementations in AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl to enhance code clarity and maintainability by standardizing listener behavior
added a click listener to the overflow button to ensure the overflow button functions correctly when the menu is displayed
update error messages for null references and improve clarity in assertions to enhance the accuracy of error messages related to null references
ggb - 658 update the help button line height when the user click ok
move protobuf utility test from io . bisq . network to io . bisq . core . util .
fixDividerPosition ( ) and sidepaneWidth ( ) do n ' t work properly in non - multi - window window
refine cross reference handling for aux file generation ( # 3632 )
make sure to use serializable interface in order to work with geoser client
rename ` extractTypes ` to ` dataTables ` to improve clarity by explicitly indicating the purpose of the variable
fix disappear contact when meta contact have change .
updated import statements to reflect the new package structure for Command classes to ensure compatibility with the latest version of the SSHD library
added a test method to verify the cleanup of the post - audit log table with specific parameters to ensure that the audit log table is clean up correctly based
change return type of inject method from generic to Object to ensure proper type handling and avoid unchecked cast warnings
added regex patterns to handle comment lines and updated parsing logic to improve comment parsing reliability and error handling
updated ` isReadable ` method to accept additional parameters for ` FileSystemPlugin ` and ` userName ` while adjusting import statements to enhance functionality by allowing
added ancestorDimensionValues for improved tracking of dimension values in StarTreeNodeImpl to enhance node name generation and logging for better clarity and debugging
added user unlock check before dumping plugin manager and refactored close open views logic to improve user unlock handling and streamline view closing process
updated condition to check for positionStr instead of widthStr to ensure the code verifies the correct parameter for processing
refactor PKIXValidator to improve certificate validation structure to enhance readability and maintainability of the code
[ flink - 26032 ] [ hadoop ] [ test ] add archunit test for the test code
refactor package declarations for Alibaba and ApacheDubbo integration tests to ensure correct package structure and organization in integration test classes
vpc / domainid update : do n ' t skip project network acl for vpc without child
fix runtimetypeadapterfactoryfunctionaltest to correctly handle shapetype . skew
make property store optional , default to false
replace direct retrieval of ` sun . java2d . xrgradcache ` with a privileged action using ` AccessController ` to enhance security to
[ test ] fix flaky streamclosetest
updated the ` doAfterFlush ` method in ` DocConsumer ` , ` DocFieldProcessorPerField ` , and modified ` TermVectorsConsumer ` to
fix issue with configuration metadata generation
replace capacity and mask variables with final constants in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity and ensure immut
set the number of threads for mv file renaming from 25 to 15 and update the file renaming variable in HiveConf . java and Hive . java
add some logging to help track down flaky test .
added a null check for the context in SchemeAndroidIDE . java to prevent potential NullPointerException when context is null
[ gr - 16577 ] native - image - runner should n ' t use custom classloaders .
change method return type of modifyGrantedAuthorities to List and improve authority modification logic to enhance code flexibility and maintainability by allowing multiple
renamed JaxrsIntegrationTest and JaxrsIntegrationTest classes to JaxrsIntegrationTestBase , JaxrsSpringIntegrationTest ,
do n ' t throw abstractmethoderror when call setquerytimeout .
added DataProviders for general and supplementary character tests in XslSubstringTest . java to improve test coverage and organization for XSL substring
replace ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter . java ` and
added support for MariaDB sequences in MariaDBDatabase to ensure proper handling of sequence parameters and improve compatibility
updated string concatenation syntax in MappedResizeableBuffer , UnsafeBuffer , and Int2ObjectCacheTest to improve code readability and consistency
added TableDataManagerProvider and set server metrics in multiple test files to enable monitoring capabilities for offline data in the Pinot test environment
modified the condition for enabling MFLN extension by adding a check for both " jsse . enableMFLNExtension " and " jsse .
updated ObjectHashSetIterator to remove generic type parameter and modified constructor and factory methods accordingly to improve type safety and clarity in iterator usage
updated character count calculation in Compose , Compose , and TweetFragment classes to correct the length adjustment for the shortened URL to ensure accurate representation
added support for custom datapoint timepoint for cassandra
modified the ` checkForAndKillXcodeIfRunning ` method to accept an additional ` enablePrompt ` parameter and updated related logic to enhance
expose terraingrid . getTerrainatcell ( ) for external usage
added default value printing in the Pretty . java file and created a new class T6665791 . java for compiling annotations to enhance the
added error logging for missing quest keys to improve debugging and tracking of missing quest keys
updated the push support check to ensure that the connection is not allowed for push operations
refactor PointValue class to improve code readability and maintainability
removed the signing of local witnesses in BlockUtil . java to streamline the blockCapsule initialization process
modified the method to return the first root or null if no roots exist in FileSystemView . java to enhance security checks before accessing the root path
improve performance of splitLate ( ) and splitLate ( )
added undoNotesList to manage undo operations in ListFragment to improve note management by tracking selected notes effectively
[ # 7384 ] upload backup : fix issue with multiple question with same id ( # 7384 )
added a null check for the data return value in bug8024061 . java to ensure that an exception is thrown when the data is null
no effective change - code cleanup - remove unused
replace custom Padding class with Rect for widget padding calculations to simplify padding retrieval and improve compatibility with widget framework
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code organization and enhance argument filtering for ConsString type
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
renamed ` latch ` to ` goAwayLatch ` for clarity to enhance readability and maintain consistency in naming conventions
updated assertions in IterableSubjectTest to use hasMessageThat ( ) method to improve clarity and consistency in failure messages
replaced ThreadLocal with a direct null assignment for the currentBook variable in multiple classes to simplify the code and eliminate unnecessary object creation
added support for method invocation checks in the ContactSecurityVoter class to ensure that only valid object types can use the vote method
removed unused imports from DataLoader . java to improve code clarity and reduce dependencies
added row affect feedback to both abstract and count update command
mow - 410 fix margin - top and margin - left in combobox too
set default values for foregroundFPS and backgroundFPS to 60 to ensure consistent frame rates for application behavior
added ObjectReleaseTracker assertions and resource cleanup in HdfsTransactionLog and TransactionLog classes to ensure proper tracking of objects to prevent memory leaks
update DefaultHttpServer to use addListener for WebSocketFrame to improve listener management for closing the WebSocket connection
updated event listener names and added a new listener for state machine errors to enhance event handling and improve test coverage for state machine behavior
refactor SettingsActivity to use a dedicated method for setting the background to improve code readability and maintainability by centralizing background color code
updated import statement for StringUtils and added null check for line to ensure compatibility with the latest library and avoid null pointer exceptions
[ flink - 20535 ] [ table - planner - blink ] add user - defined accumulator function to weighted average aggregate
[ hotfix ] fix checkstyle violation in hbase - replication
replaced VALID _ CACHE _ SET with REGEXP _ CACHE and refactored regexp compilation logic to improve cache management and simplify the code
added a reset method to the GameThread class to enable resetting the game thread to null
added a digest validation in the login method to ensure that the user is authenticated by the correct service name
updated parameter handling in SavedRequestAwareWrapper to merge values from savedRequest for improved functionality to ensure consistent retrieval of parameter values while maintaining
fix some typo and add miss status message
hbase - 2592 remove useless waitPoint . countdown ( ) call
added a check for Android O and modified user auto - completion adapter in PhotoViewerActivity to ensure compatibility with newer Android versions to improve user experience
changed SchemaInfoLevel from minimum to basic in SchemaCrawlerTest to improve clarity and consistency in schema information logging
refactor SaveTask to use BufferedOutputStream for XML output stream to improve resource management and prevent potential resource leaks
replace byte array conversion with UTF - 8 string handling in TestPayloads . java to ensure consistent UTF - 8 encoding and improve data processing accuracy
fix entity # isdown ( ) not be able to return false for invalid item ( mc - 103516 )
[ ci ] remove tomcat 10 and 3 adaptation
[ drools - 7 ] fix serialization of multiaccumulate parameterized parameterized executable model
None
pdfbox - 4892 : remove the ` ` public ' ' access modifier , a suggest by valerybokov
refactor RemoteEndpointServiceAccessStrategy to use Spring Expression Language for HTTP method and headers to enhance code readability and maintainability by leveraging
added a new method ` newResponseBuilder ` for creating a ` ResponseBuilder ` instance to improve code reusability and maintainability
added a notification to the manager to start the asynchronous background task execution
refactor the method ` recomputePreviewDrawingParams ` to ` recomputePreviewDrawingParams ` and call it from ` mReferenceDrawable ` to ensure
add handling for character filters in ` LukeRequestHandler . java ` to enhance the analysis process by including character filter configurations
replaced null checks with ParamChecks utility for parameter validation to enhance code readability and maintainability by using a standard utility class
added verbosity handling in ExecutionContext and JavacStep for improved logging control to enable conditional output based on verbosity settings to enhance user experience
make oracle schema case - insensitive
log4j2 - 2250 add log4j2 - core and log4j2 - api to version 2.5 . 1
added a new file TestShrinkToOneRegion . java containing a main method that calls System . gc ( ) to facilitate testing of garbage collection operations
replaced string splitting with Splitter utility for package handling to improve code readability and maintainability
updated the handling of binary contexts in AnalyzingInfixSuggester and added a test for binary contexts in AnalyzingInfixSuggesterTest
modified the attachment handling logic in PushsaferMessageBuilder . java to correctly encode local attachments to ensure proper content type is used for local attachments to improve
[ api ] remove the provenance hash from the model explorer
pdfbox - 4892 : simplify code , a suggest by valerybokov
changed ` FORMATTER ` from ` private final static Function < ... > ` to ` private static final static Function ` in multiple field test classes
updated the ` evaluate ` method to accept an additional parameter for rounding precision to enhance functionality by allowing more precise rounding behavior
[ jsscripting ] make injection and use _ included _ library configurable at config level
changed class declarations from package - private to public in Test1 and Test2 classes to allow access to these classes from other packages
updated permissions and template templates for player actions to enhance permission handling and provide clearer context for plot entry events
fix count ( * ) and count ( * ) optimization
updated method names from ` doTestNormsStoredFields ` to ` doTestNormsVersusDocValues ` in ` BaseNormsFormatTestCase
added dynamic body and circle transformations in Box2DCharacterControllerTest . java to simulate random particle behaviors during collision tests for improved gameplay
add test cases for wrong behavior regarding globalbuffersize and threadbuffersize in wallpaper size options
remove unnecessary power of 2 check
added functionality to extract the target package from the manifest and handle the extraction from it to improve package extraction from the Android instrumentation manifest
refactor DocHelper class to improve code readability and maintainability
fix initialization issue with acceptablethrowawayitems
replace explicit type casting with explicit type casts in method invocations to ensure type safety and avoid potential type in method calls
fix checkstyle issue in io / messagehandler
danielwagnerhall : fix javadoc warning
added locale getter and setter to EvaluationContext . java to enable localization support in the EvaluationContext class
added import statement for Plugin in SummaryPrinter . java to enable plugin functionality in the SummaryPrinter class
added a break statement in DrawerActivity . java to ensure control flow exits the switch case properly
updated import statements in MongoQueryCreator . java and modified query logging message to include query object to enhance query clarity and improve debugging output
added system property ` ` xwork . loggerfactory ' ' to make loggerfactory configurable
fix typo in acceptance test name
property placeholder to make auto - config easy to understand
make pstoreprovider thread - safe by use a concurrent map
change the visibility of the deleteFiles method from public to private and encapsulate file deletion logic within the try - catch block to enhance encaps
rename ` Provider ` class to ` ServiceProvider ` and update related methods for clarity to improve code readability and consistency in naming conventions
throw runtimeexception when can not convert to javaobject
make android sdk change parser invalidate when toolchain exist
fix potential deadlock in engine thread .
replace ` - 1 ` with ` { fails } ` in AbstractCheckDescriptor . java to improve readability and maintain consistency in fail string handling
fix linker flag for prebuilt cxx
update recent orientation on swipe up
updated type checks in MulticasterBatchListener , FaultTolerantStepFactoryBean , SimpleStepFactoryBean , and test classes to use
abstractblockchain : use block header ' s hash string .
fix defaultmessagestore . getstorepathphysic not use commitlog
change try - with - resources so that meterregistry will be close ( # 2260 )
add miss message count stats to the compaction log
hhh - 16189 deprecate abstractjpasubquery , jpacommonquery , jpaquerybase where applicable
added methods to check for the presence of a system UI object in the launcher UI to ensure proper keyevent handling in the launcher UI to improve test reli
changed logger from static to final in SessionRegistryImpl . java and added ' final ' modifier for principals and sessionIds variables to ensure immutability
added a check for empty cookieJar and updated test assertions accordingly to ensure proper handling of empty cookie jars and improve test coverage
fix clear storage and state update bug ( # 4953 )
updated method signatures to accept ` CharSequence ` instead of ` String ` in ` ITextRepository ` , ` LimitedSizeCacheTextRepository ` , and
[ java ] ignoring a test fail due to marionette regression
added a finally block to ensure the connection returns to the destination in a finally block to handle potential IOException during connection handling
rename CMD _ ESCAPER to CREATE _ PROCESS _ ESCAPER in Escaper . java and update related references to improve clarity and
added synchronization around the heartbeat executor service shutdown check to ensure thread safety during the shutdown process of the heartbeat executor service
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored the task to use a new wrapping
added updateFirstLineShowing ( ) method to TextArea . java to fix the issue of out of the text area bounds
added Hadoop Path configuration to specify temporary and staging environments for mapreduce operations
refactor graphics configuration retrieval logic to improve clarity and structure to enhance readability and maintainability of the code
change default oom test to oom in legacy mode
camel - 14354 : camel - core - optimize rout engine to reduce stack frame in use during rout . work in progress .
refactor PrintTagList . java to improve model file handling and tag processing to enhance user experience by ensuring a valid model file is provided and
updated SQL insert statement to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` and added a new test for handling alias issues 5
amq - 1771 - fix intermittent test failure
[ java ] fix startfromtruncatedrecordinglogtest race condition .
updated the calculation of the arc value in LineBorder . java to improve accuracy of rectangle formatting by using a floating - point value
fix empty gallery images list
added support for the DEPLOYMENT _ ID column in the database table to enable tracking of deployment IDs for Liquibase changes
pdfbox - 4892 : fix usage message , a suggest by valerybokov
removed the boolean parameter from getIndex and canUseIndex methods in AlterTableAddConstraint . java to simplify method signatures and improve readability
camel - 15013 : camel - quickfix - engine should use provisional engine if available .
added display zoom control functionality to RoboWebSettings to enhance user experience by allowing control over display zoom settings
add corporea and slab block to corporea spark , fix spark not initialize properly
modified the ConnectionFactory class to improve database connection handling
None
updated message resource for empty favorites and headline search to enhance user experience by providing clearer feedback to the user
fix test break by change @ setting annotation
updated the MotorMountConfigurationPanel constructor to include a subpanel parameter to improve the panel ' s functionality by properly referencing the subpanel
replace System . lineSeparator ( ) with System . getProperty ( " line . separator " ) to improve flexibility by allowing dynamic line separator configuration
add getter and setter for creator and subject property in POIXMLProperties , and implement unit tests for document properties in TestPOIXMLProperties
removed extra whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] allow empty cnc file to be read .
rename ` Marker ` to ` FooCommand ` and update related classes for consistency to improve clarity and maintainability of the codebase
added methods to handle Jmod class file names to improve compatibility with JDK ' s module system
updated TreeBackedElement and TreeBackedPackageElement classes to enforce null safety and improve parameter clarity
replaced the direct assignment of ` tokenRequest ` with a ` PublicTokenRequest ` instance in ` Saml2TokenGranterTest ` and `
update array reference from ` arrayLength ` to ` valueRangeObject ` to ensure correct property range handling in the code
hbase - 3136 stale read from zk can break the atomic ca operation we have in zkassign
check for invalid fallback on android .
[ drools - 7 ] avoid to remove activation from a ruleflowgroup if it be already deactivate
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the execution flow
removed exception handling for PipeNotExistException in DropPipeProcedure . java and wrapped it in Assert . fail ( ) in IoTDBPipeIT . java
shutdown hazelcast client after each test which occasionally fail .
fix ( prettyprinter ) : should use pretty - printing by defaultjavaprettyprinter in ctreference # tostring ( )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
lucene - 6930 : decouple geopointfield from numerictype in favor of termenum
added a new class FakeBuildable that simulates the behavior of Buildable to provide a mock implementation for testing purposes
replace null by isempty for good readability .
rename ` stream _ path ` to ` stream _ timeseries ` and update related references in ` TSParser . java ` and tests to clarify
added a check for negative velocity in TubeCalc . java to avoid potential division by zero errors
replaced calls to ` getBucket ( ) ` with ` _ storage . create ( ) ` in ` GcsPinotFS . java `
added a finally block to ensure proper resource management to prevent potential memory leaks
# 1 - ddl - refactor postgres db migration to drop view if exists
updated the expected number of clusters in the clustering engine from 2 to 3 to reflect changes in clustering requirements
ignore broken test until it can be rewritten
updated ParserCacheCommand to use ParserStateObjectInputStream instead of ObjectInputStream to ensure proper deserialization of parser state objects
updated object quoting strategy initialization to use configuration from changeLog if available to enhance flexibility by allowing customizable object quoting behavior
updated Metainfo parsing method from parse to fromXmlStream to improve compatibility with XML data formats
deleted the CsrfControllerAdvice . java file to the functionality provided by CsrfControllerAdvice is no longer needed
modified the way endorsed directory paths are formatted and appended to a string to improve readability and maintain consistency in path handling
added animation setup and drawable properties for background animations in Launcher and LauncherAnimUtils classes to improve the visual appearance of the scrim
updated the parsing condition in TypeInferenceUtils and added new test cases in TypeInferenceUtilsTest to improve accuracy of type inference validation and ensure compatibility with new
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added validation for WindowsPathType in WindowsPathParser and updated test cases in PathOps to ensure correct handling of long and UNC paths to
simplified socket creation by removing InetSocketAddress usage to improve code readability and efficiency
reformatted the ` writer . close ( ) ` calls for consistency to improve code readability and maintainability
change return value from nBits to nBits . clone ( ) to ensure that the returned array is independent of the original original instance
make derivecollectorname protect so subclass can override it
refactor type hint handling in MappingMongoConverter to improve code clarity and ensure proper serialization of simple types
added performance measurement to the ProxyMaker class to enhance testing capabilities by measuring factory creation performance
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
include the original exception in the connection exception
refactor reinflateWidgetsIfNecessary ( ) method to use getWorkspace ( ) instead of LauncherModel to improve code modularity and maintainability
added a new test class ` DeleteInsideFileDialogTest ` to test file deletion in a dialog to ensure that the right - click functionality of the
* lwjgl backend do n ' t work with lwjgl 1.3 . 2 since lwjgl 1.3 . 6
[ # 7358 ] instructorstudentlist : show a ' profile picture ' in the ' show student ' page ( # 7358 )
make testignorance work with -- onlyrun option
removed the pointer parameter from the fling method signature to simplify method signature for better usability
add null check for Pageable in QueryDslJpaRepository to ensure robustness by handling null Pageable values gracefully
[ bugfix ] add memorymanager . computememorysize ( )
( chore ) camel - jms : fix test which randomly fail on slow ci server
refactor SnowballAnalyzer class to improve code readability and maintainability
[ hotfix ] fix checkstyle violation in streamingaggbatch
throw graalerror when the plugin need to null check the receiver
added a stream method with default intensity computation for a given table identifier to enhance functionality by providing a standard stream interface for data processing
updated debug and info log messages to reflect the current state of watched files and added retry logic for file movement to improve clarity of logged messages and ensure
replaced setAccessable method with newInstance method and modified access modifiers in InjectorProxy and StandardInjectorProxy classes to enhance instantiation flexibility and
[ hotfix ] [ table - planner ] remove useless close ( ) call in flinkstreamingcreatefunction
added tests for creating , validating , and altering tables in JSQLParserTest and CreateTableTest to ensure that the SQL parser correctly handles
replace returning null with returning ImmutableList . of ( ) to ensure empty list is returned to avoid potential null pointer exceptions
update test data to accommodate new quantile distribution
added functionality to handle websocket connection states and improved logging messages to enhance connection management and provide clearer debugging information
sec - 1340 : change to use remove attribute on httpsession instead of set attribute on httpsession . getsession ( ) to remove
hbase - 26945 [ flakey testregionreplicareplicationendpoint ] fix flakiness in test
added PMS configuration settings in FormatRecognitionTest . java to ensure compatibility with current PMS settings
server : create disk template for vms in case of vms in stopped state
updated JUnit4 test runner annotations and method initializations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to ensure compatibility with JUnit
added @ Override annotations to multiple classes to ensure proper method overriding and improve code clarity
replace instances of " HOSTNAME " with " HOSTNAME _ PK " and " HOSTNAME _ PK " in multiple tables to ensure consistency in
added a check for document count consistency to ensure the integrity of deleted documents to avoid runtime errors
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
fix the filterexecutor ' s length requirement for staves w / no starting barline
enable file upload by default
added a test for default access denied handler in CsrfFilter to ensure consistent behavior of access control based on CSRF protection method settings
replace instances of fields . callSiteTargetField with a local variable to hold the field to improve code readability and maintainability
renamed the add method to addFrequency and updated related usage across multiple classes to improve clarity and consistency in method naming regarding frequency handling in
added a watermark transformation using Instant . now ( ) in the FileIO class to ensure proper handling of timestamps for data processing
fix copy on schemacrawler ctedefinition copy bug
added import statement for ResultSetMetaData to enable handling of SQL result set metadata in tests
updated the command to include the root path in the library command to ensure the library command uses the correct filesystem structure
updated slider range in RailButtonConfig from positive to negative degrees to ensure consistent smoother transition behavior
move save to slot in case of exception
add support for expression language in Kerberos configuration to enhance security and compatibility with external language
removed the scale command from the item mount point feature to simplify the item mount point scaling functionality for remote characters
updated setupViews method to include ScrimView and modified scrim animation properties to enhance UI responsiveness and visual feedback during transitions
[ flink - 30613 ] [ state ] add changelog option periodic materialize
added a private String value field and its getter and setter methods to ProtocolParameter , and updated List and ParamTagHandler to set the ' value ' attribute
add a test to verify that the httpservlet respect the ` ` date ' ' header .
bug 62155 - improve checkrouter answer functionality
added Content - Type header for request to ensure correct content type is sent in unit tests
[ hotfix ] fix checkstyle violation in embeddedclientconnector
phoenix - 2642 do not throw sqlfeatureNotSupportedException for setfetchsize ( )
added instantiation of AndroidNet with null parameters to ensure proper handling of null network resources
remove segment max row count parameter from positional data in LLRealtimeSegmentDataManager . java to simplify data handling and improve code clarity
removed the boolean parameter from getDepositAddresses method calls in KrakenAccountService . java to simplify the method calls and improve code readability
hbase - 26635 tablemapreduceutil do n ' t use codec for prefix - tree ( addendum )
added a boolean flag ` inflationFailed ` in ` DesignerActivity . java ` and modified ` XMLLayoutInflater . java ` to use
refactor PushbackInputStream class to improve code readability and maintainability
do n ' t compute lower phase if already lowerable
updated error message to reflect synchronization failure to improve user experience by providing clearer feedback on folder synchronization issues
update makefile to handle carriage return and newline correctly
replaced deprecated method for retrieving deleted documents from a reader to utilize MultiFields for improved functionality to enhance code maintainability and flexibility in handling
batchnode . settransformrefresh ( ) now set the refresh flag on the node
[ gr - 26372 ] treat @ invokecfunctionpointer the same a @ cfunction for stack overflow check .
added framebuffer size support and updated window size callback handling in LwjglWindow . java to improve handling of framebuffer size changes and ensure proper resource management
updated translation variables in LauncherAppTransitionManagerImpl . java to use centerTaskParallaxOffscreen and otherAdjacentTask parallax offscreen to improve
modified the implementation of ` LiteralNode ` to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` to enhance type safety and
added methods to set the length of files in ` FSDirectory ` , ` IndexOutput ` , and ` IndexOutput ` classes to improve file handling
updated AndroidNdkScriptGenerator and AntScriptGenerator to include native libraries and modified test classes in LwjglDebugStarter to enhance
camel - 16068 - camel - aws2s3 : use sourcebucket instead of sourcekey for startkey operation in producer
added support for the " * " role in authorization rules to allow access to all users in the authorization plugin
updated ZookeeperClientServerRegisterRepository to handle null data and improved import statements to enhance code robustness and maintainability by using a
renamed methods and variables in ReturnsDeepStubs . java for clarity and consistency to improve code readability and maintainability
fix arrayindexoutofboundsexception if contract do not have call value
use log marker instead of string concatenation
added handling for NoSuchAlgorithmException in PKCS12KeyStore and updated PBE _ ALGE constant in PBETest to improve error handling for unsupported algorithms and ensure
change variable name from ' length ' to ' inputLength ' for clarity to improve code readability and maintainability
added validation for job parameters in CommandLineJobRunner to ensure that parameters are provided to avoid runtime errors
updated the expected content in SmtpTests . java and MailTests . java to return " foo " instead of " foo \ r \ n " to
use lambda expressions to improve readability
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence ID management to improve thread safety and atomicity in sequence ID generation
added a new file ` Test . java ` with a static method ` sum ` to calculate the sum of two integers to provide a utility for performing a
updated minSdk and maxSdk configurations in ShadowWifiManagerTest and changed access modifiers in WifiUsabilityStatsEntryBuilder to protected to enable
added a new Java file to implement a solution for determining if two integers are prime
make gossiper more thread - safe by use concurrentmap
updated taskbar reconstruction logic to handle screen size changes and orientation changes to ensure the taskbar is recreate appropriately based on screen orientation changes
refactor SyncFutureCache to improve code readability and maintainability
updated DUBBO _ PROTOCOL _ VERSION from " 2.0 . 1 " to " 2.0 . 2 " and LOWEST _ VERSION FOR
fixed uselessstringvalueof false positive with literal
added a test method for verifying the drag behavior of a nose conic in the SymmetricComponentCalcTest class to ensure that the no
set default max type shard size to 16m in hollowproducer
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in TestBackwardsCompatibility .
[ hotfix ] fix checkstyle violation in compilationtask
updated assertions and refactored database parameter handling in DDLTask . java and TestSemanticAnalysis . java to improve clarity in test cases
added execution of ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to ensure proper clearing of the database changelog table during operations
updated RestClient and CallPath to handle versioning and path validation more robustly to ensure correct versioning of calls and improve error handling for
updated exception messages and added a method to check if the Phoenix driver is closed to improve error handling and ensure thread safety during driver registration
kristianrosenvold : improve error message for unsupportedoperationexception
added a test case for deleting existing files in ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT
[ gr - 10782 ] only remove deoptimizations in codegen phase .
camel - 1198 fixed the indexoutofboundsexception of stringhelper when copy with thanks to franz .
updated handling of NOT _ CONTAINING types in JpaQueryCreator and added a new test for querying users by lastname without containing to improve
increase expiry time before try to push the branch
added a dispatch method for P25Message with a copied version of the message to enhance message processing with updated data handling
added null check for the WebSocket handler before calling checkClosed ( ) to prevent potential NullPointerException when the handler is null
[ ds - 2058 ] refactored test and integration test to use more relevant class .
updated padding calculations to use the default padding values from the launcher to ensure consistent widget padding across different devices
added methods to hide the taskbar all apps functionality to improve user experience by managing the visibility of the taskbar all apps
modified the ` launch ` method to remove synchronization and replace sleep with thread joining to improve concurrency handling and simplify thread synchronization
fix issue with zoom on simulator .
replaced notification method calls with a method that starts from a foreground thread to improve thread management for foreground execution
fixed bug 1114114 - excessivepubliccount no longer report false positive for period in value .
hbase - 2593 thrift unit test - add retry on connection failure
change log level when commit Half Offset
updated logging level from debug to trace in ResourceUtils and AbstractCipherExecutor to improve logging granularity for file operations
added a new class ` BittrexTickersResponse ` and integrated it into ` Bittrex ` for retrieving market tickers to
fix potential classcastexception in entityentry
refactor to reduce the need to create a session per websocket
updated character class clist to include additional characters to enhance text encoding for improved compatibility
added methods to set and get stylesheet in ResourceService and updated content retrieval logic in DefaultServlet to improve flexibility in handling stylesheets and ensure
added a call to clearIndex ( ) method to improve index management during testing
updated method call from " getAddress " to " address " in X86MethodGenerator . java to ensure compatibility with pointer parameter type in method invocation
updated sequence generator logic to exclude CockroachDatabase to ensure compatibility with CockroachDB for sequence generation
modified the condition for checking the name of the object stream class to simplify the logic for identifying string types
replace UnsatisfiedLinkError with SymbolNotFoundError to improve error handling for symbol not found scenarios
updated BinaryResponseWriter to conditionally create SolrDocument based on field name requirements to improve field handling based on return fields requirements
add handling for PING and PONG messages in WebSocketImplBase and implement a test for pause / ping functionality in WebSocketWebSocketHandler to ensure correct WebSocket
updated the NON _ IDENT _ ESCAPES string to include a hyphen after the closing brace to ensure proper parsing of identifiers in regex patterns
update DnsResolverProvider to use a new DnsCache and modify server selection test methods to include caching options to enhance server resolution flexibility by
added a conditional annotation for messaging tracing to ensure messaging tracing functionality is only activated when MessagingTracing class is present
no effective change - tidy up sql dialect code
updated import statements in IDELanguageClientImpl , EditorTextActionMode , and IDEEditor classes to reflect the correct version of Sora event handling
added handling for the ' / ' character in XMLLightweightParser to ensure proper verification of close tag status
removed the setVisibility ( GONE ) method from TouchCharInput . java to simplify the input handling logic
fix for null pointer exception
refactor JSObjectLinker to handle index assignment more appropriately to improve flexibility in setting member properties
modified the ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` classes to remove the ` suffix ` parameter and
mark the SecurityConfig class as deprecated to indicate that the class should no longer be used and may be removed in future versions
deprecate config , settings , chunk util , mathman , and hybridutils ( # 3496 )
deleted the ` JoglDebugAdaptor . java ` file and refactored the ` RocketFigure3d . java ` file to
camel - 15836 - camel - aws2 - * : improve the tostring output for extrafieldspropagation
added PendingIntent with FLAG _ UPDATE _ CURRENT to FileDownloader and FileUploader classes to ensure notifications are sent to the appropriate activities
refactor nextOrd method to use a dedicated set method to improve code clarity and maintainability
refactor DateTimeFormatter to improve code readability and maintainability
removed class loading for Win32ShellFolderManager2 from desktopProperties to ensure compatibility with the required Win32 shell folder manager
added validation for null , empty , and non - null principal values in the setAdministratorCredentials method to ensure that the administrator credentials are provided
added MAX _ WIDTH _ SCALE _ FOR _ LARG _ SCREEN and updated width calculation for tablet and two panels to improve widget scaling for better
pixeldensity ( ) now call pgl . endrender ( ) to update the jogl window color properly
refactor hashing logic to improve performance and maintainability of the hashing process
update the accept method to use a folder path instead of a file to improve clarity and maintainability of the file acceptance logic
updated UserInfoActivity to include a content description parameter in the addToList method to enhance user experience by providing more specific user information information
remove unnecessary null check for type variable to simplify code and improve readability
updated the ACTIVITY _ START _ DELAY constant from 500ms to 800ms to improve the responsiveness of the application startup process
added a constant for the web app ' s home path and updated the solr . solr . home configuration to use this constant to improve maintainability
set selectedMotorSet to null after clearing the motor mount ' s diameter to improve management of motor selection state
added import for BufferUtil and called clearToFill method in ByteBufferPool . java to utilize BufferUtil for buffer clearing to enhance buffer management and
add comment about notification rule creation via rest api
replaced instances of " authorization . ldap . groupBase " and " authorization . ldap . groupObjectClass " with " authentication . ldap . groupObjectClass " to
added code to delete exchange ' x ' from clustered channel on transient processing
[ hotfix ] fix bulkslotproviderimpltest by remove timeout parameter
improve error message when connect fails .
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter to improve code structure to enhance maintainability and readability of the code
sulong : catch illegalstateexception from sulong lookup
update Spring Security schema version from 6.2 to 6.3 to ensure compatibility with the latest Spring Security features and improvements
refactor newNameResolver method to use args instead of helper and introduce synchronization context to enhance flexibility and control over service instance instance management
added logic to handle non - empty annotations and introduced a method to determine earlier position of annotations to ensure correct positioning of annotations during compilation
added " com . sun . naming . internal . " to the package imports in CheckPackageAccess . java to ensure access control for internal packages
set the strict variable to true to ensure consistent behavior in event reading
lucene - 5754 : do n ' t read more than one line at once in offline sorter
refactored ActionResetingPool . java to improve code readability and maintainability
added a check for the XY color mode in the lightStateConverter to ensure that the lightState ' s XY color mode is not null before converting to
refactor folder creation logic to use target cells in CellLayout . java to improve code clarity and maintainability by centralizing cell positioning
added import for FileDisplayActivity and removed the call to showLoadingDialog ( ) in FileOperationsHelper . java , FileDetailFragment . java , and
added a null check for the uigestureFile before loading and loading data , preventing potential NullPointerExceptions when xmlLogs is null
updated field name comparisons to use the default locale to ensure consistent behavior regardless of the default locale settings
added a method to set the listeners in the XmlSuite class to enhance the functionality by allowing the XmlSuite to include event listeners
added a new method ` loadWithNewGlobal ` and modified existing methods in ` Global . java ` and ` Context . java ` to en
added methods to convert JSON strings to strings in StarTreeIndexSpec to enhance functionality for JSON data handling in StarTreeIndexSpec
added ObjectPostProcessorConfiguration import in HttpSecurity and HeadersConfigurer classes to enhance security configuration by integrating object post - processing support
replace single quotes with single quotes in multiple file string operations to ensure consistent character representation across different file systems
[ drools - 6662 ] avoid npe in inoperator when a value be null
added import for FieldCache and purge field cache to ensure there ' s more than one segment to avoid potential issues with FC insanity
act - 161 : add test case for boundary event on subprocesses and inside a subprocess
fixed bug where static call be not resolve in pointer analysis
http : / / issues . apache . org / jira / browse / amq - 4978 - add count for message group hash bucket
replaced the ` fips ` parameter with ` slotId ` and introduced constants for network and private key slot IDs to improve code clarity and maintainability
added alignment support to the layout widget management functionality
[ hotfix ] ignore unalignedcheckpointitcase for now
[ jdk - 13 ] ignore sourcedataline and sequencer type if they do not match .
add a condition to prevent duplicate keyword references to the same HTML filename in the keyword to reference mapping
camel - 17806 : fix potential ClassCastException in multicast eip .
removed unused methods from SegToken and WordDictionary classes to improve code clarity and reduce unnecessary complexity
support telegraf metric name with comma ( # 644 )
minor update to member interface to support udp port
3 . x : operatormulticast rename to operationmulticast .
increase send timeout in event bus test
added a try - finally block around the try - finally block for proper resource cleanup to ensure latch counting is properly managed to enhance resource management and prevent
added synchronization to the destroy method in SessionFactoryServiceRegistryImpl to ensure proper resource management during the destroy process
danielwagnerhall : do n ' t click on the webpage if there be no jwt .
add test for tensor map function in valueutilstest .
added a task stack listener to manage the visibility of the INVISIBLE _ BY _ STATE _ HANDLER in RecentsView to ensure the user is
add a test for defaultsplitcharacter profiling , a suggest by valerybokov
camel - 4673 fixed the npe issue of cxfrsendpoint when no prop be set
refactor pending animation handling by introducing endPendingAnimation method to improve code readability and reusability
add log to debug playtime crash
add option to disable bailouts on exception
replaced hardcoded values for signup and password with null variables to simplify code and improve maintainability by removing hard - coded values
[ hotfix ] rename previousexecutiongraphallocations into reserveallocations
refactor TimeConverter class to change ' onlyFormat ' variable to ' format ' and encapsulate format retrieval in a separate method to enhance code clarity and maintainability by standardizing format handling
[ geotiff ] add nodatacontainer property to geotiffreader
fix handling of miss sourcesection in function start node
replace ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java ` and its
replace blockUntilConnected ( ) with a connection state listener to check for connection establishment to ensure the client is in a connected state before proceeding to
added null handling for array retrieval in ArrayTypeHandler to enhance robustness by preventing potential null pointer exceptions
replaced the RegexpTunnel class with a more direct method for retrieving the prefix in Java to streamline the code and eliminate dependency on the RegexpProgram
change application selection from null to Application . class to ensure correct application type is selected for configuration
[ drools - 6761 ] avoid npe on mutable global during incremental compilation
replaced Preconditions with TransactionUtil for asset name and description validation to enhance input validation and ensure only valid asset names and descriptions are accepted
add parent algos to prevent duplicate
updated service descriptions and status updates in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , and LGWebOSH
update node configuration to include all nodes in the seed and active nodes to ensure consistent node configuration handling
add good diagnostics for thread failure
refactor getNextTime method to include a modulus parameter for better control of time increment logic to improve the accuracy of time calculations by incorporating
refactored item clicks in ShadowAdapterView by introducing findIndexOfItemContainingText and findFirstItemContainingText methods to improve code
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
improve debug output for ea graph decoding
replaced direct session attribute retrieval with a call to getSession ( ) in HttpSessionDestroyedEvent . java and added unit tests for HttpSessionDestroyedEvent
added a test method to verify the service name change in Zipkin using a manually provided name to ensure that the tracer correctly reflects custom service
added logging functionality to JavaInMemoryFileManager and JavacToJarStepFactory for better tracking of jar spool behavior to improve debugging and monitoring of
rename ` SeparatedProjectGenerator ` and related classes to ` SeparatedProjectsGenerator ` and ` SeparatedProjectsGenerator ` to
test fix : increase timeout
add cache capacity parameter to confluentschemaregistrydeserializerprovider ( # 18323 )
replace the JCheckBox ` remind ` with ` checkAtStartup ` to enhance user interface clarity to improve user experience by providing context - sensitive
added new methods for key strength , weak , values , and expiration handling in NodeGenerator . java and updated node factory handling in TypeSpec .
hhh - 13666 avoid unnecessary check on hibernateproxy in cascadeactions
added PROTO _ PROPERTY _ NAME constant and related MethodHandle invocations in ScriptObject . java to enhance support for prototype property access in script objects
change default read mode from heap to mmap for performance optimization
added import for ByteArrayTemplate and modified logic for handling byte class case to improve handling of byte array data types in the application
added Hipchat configuration with getter and setter methods in SamlServiceProviderProperties . java and introduced a new CasSamlSPHipchatConfiguration
replace List < URL > with Set < URL > for commandRegistryUrls and update enumeration to include it to improve performance and ensure unique URLs are processed
updated warning log format and added debug logging to improve clarity of logged information and enhance debug visibility
camel - sftp : fix login for sftp repository that never log in .
camel - 16462 : activemq - jmssession : do not lazy - create transaction manager until the transactional bean be define .
bug 9860 : fix format string in vmwareresource . java
refactor Timers class to improve code readability and maintainability
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in the ` DefaultDefectReporter ` to update the output stream
removed deprecated constants from UAX29URLEmailTokenizer . java to clean up code and improve maintainability
removed the implementation of ` Map < Object , Object > ` from the ` ScriptObject ` class and updated related assertions in tests to simplify type checks and
refactor EventBusMetrics class to improve code readability and maintainability
[ ds - 2058 ] refactored code to use i18nutil . getepersonlocale ( eperson ) .
ensure schema be set after each @ postconstruct call
removed null check for pgTypeName before adding it to the map to simplify the code by assuming pgTypeName is always set
added multiple server settings in ScopedHandlerTest . java to configure server settings for different handler instances
make calltimeoutexception a calltimeoutexception so we can properly track call timeouts .
updated the condition to check if the username and password are empty before proceeding to prevent potential NullPointerExceptions when processing login requests
change permission check from ` Objects . equals ` to ` equals ` to ensure correct permission validation for permission nodes
rename setencoding ( string ) to setsourcecharset ( )
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and ` TerminalBridge ` to
refactor simulation handling and error reporting in GeneralOptimizationDialog . java to improve code clarity and ensure consistent exception messaging
camel - 16205 : camel3 - spring should support context reload by default
change commontestutils to print more detail of log4j configuration
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment to improve code readability and maintainability
added a check for non - mark support in the RequestBody class and introduced a test for non - mark supported input streams in RequestBodyTest to ensure
added check for embedded settings being enabled in ` EmbeddedNeo4jServer . java ` and modified conditional logic in ` DefaultBeanContext . java `
add character motion and health component to debug command .
added a half - length weight calculation to the random method for improved randomness to enhance the variability in the weighted weight selection algorithm to
refactor cache string handling and rename test methods for clarity in GsonParser and MetricsResourceTest to improve code readability and ensure proper
added comments to clarify parameter documentation for sorting in the ApacheHttpClientMediaWikiApi class
use ` pulsetransactioncoordinator ( ) ` instead of ` checktransactionSynchstatus ( ) ` .
[ iotdb - 5668 ] fix deadlock in pipetaskcoordinator ( # 6064 )
modified version string construction based on the " usePreinstrumentedJars " system property to enable flexible dependency injection for Android Android libraries
changed the conditional check from " isSilent " to " if isSilent " to accurately reflect the intended behavior of the condition
added checks to prevent unsupported dynamic fields in IndexSchema to enforce data integrity and provide clearer error handling for unsupported attributes
remove the useless randomlyreadrepair ( ) logic . patch by jbellis
replaced ImmutableSortedSet with Iterables . transform for adding system include roots to improve code readability and ensure proper transformation of include directories
refactor ` AdaptableX509CertSelector ` to initialize start and end dates without default values and introduce flags for sensitivity to enhance code clarity
no need to catch exception when parse the buffer size
add a deprecation annotation to the GuiScreenEvent class to indicate that the feature is outdated and will be removed in the next release
added methods to add and remove categories in the CategoryEditSearchRecyclerViewAdapter to improve category management functionality in the user interface
# 413 - enh : add cachingtype ... a alternative to servercachemanager . createcache ( string cachekey , servercach
updated properties for massOverriddenBy , CGoverriddenBy , and CDOverriddenBy in RocketComponent to ensure all child components are set
use post instead of docompile to release resource
refactor the Task class to use a Supplier for a work parameter and streamline the code structure to enhance code readability and maintainability by
refactor WanReplicationServiceImpl to use a synchronized access for the executor to improve thread safety and ensure consistent executor management
added null checks for tPartition and table to enhance robustness by preventing potential NullPointerExceptions
refactor task handling in RemoteServiceRegistry to use lambda expressions to improve code readability and modernize lambda expressions
added a new test file ` FilesTest . java ` and implemented the ` delete ` method in ` Files . java ` to ensure proper handling
removed exception handling for socket closure in ServerSocketAdaptor and SocketAdaptor to simplify the code by directly closing the socket without unnecessary exception handling
change class name check from System to Logger . class to ensure proper identification of logger instances
replace current working directory management with a method to add a working directory to improve code clarity and maintainability
added a null check in ItemInfo . java and set insets in Workspace . java to ensure proper item construction and layout adjustments
changed the access modifier of the String variable from public to private to enhance encapsulation and restrict access to the String constant
updated the Java Durl URL in SimplePostTool . java to remove the ' http ' scheme to simplify the URL format for better readability
apps - 2969 make suregebraitem # issymbolic ( ) return true for min / max command
refactor JavaxWebSocketClientContainerProvider to streamline client container startup and shutdown handling to improve code readability and ensure proper resource management during shutdown
updated conditional logic to handle the case when type is null to ensure proper handling of the open application type
ensure web application context be clean up after test
added a method to retrieve a search string from the request and modified the resource fetching logic to improve user experience by allowing dynamic search strategies and
removed the visibility setting for the neutral button to allow for user interaction with the neutral button immediately
[ ds - 2058 ] allow to optionally include withdrawn item in item count .
updated SQL statement formatting for creating views and tables to improve readability and maintain consistency in SQL syntax
added exception handling and logging capabilities to CheckTokenEndpoint to improve error management and logging for OAuth2 exceptions
updated multiple Java files to implement a new method for series painting to enhance rendering capabilities and improve code modularity
updated identity zone integration tests to use parameterized requests instead of post requests to improve test accuracy and ensure correct handling of HTTP requests
updated dismiss delay from 20000ms to 10000ms in ExtractionModelFrame . java and DataBrowser . java , and added tooltip text for SQL
update warn panel to support junit 5
changed exception handling from HumanReadableException to RuntimeException to improve error reporting when communication fails
[ hotfix ] [ core ] introduce flink - annotation ` @ experimental `
fix streamcepstrumsource javadoc
modify index handling in the List class to ensure proper boundary checking to prevent index out of bounds errors
updated assertions in CloneHelperTest to use Parenthesis class instead of OrExpression to ensure correct parsing of expressions in tests
added confirmation option to the DebugPaste class to allow users to request confirmation before executing the debug paste command
camel - 15836 - camel - health - do not return endpoint with id ' s
ticket # 4810 : prevent browser freeze on creation mode
updated GoBinaryDescription to use the new ` GoBinaryDescriptionArg ` class and refactored related imports and methods to improve code consistency and
updated environment variable retrieval logic in Jooby . java to improve logback configuration handling by providing a fallback mechanism
replaced ` RetryListenerSupport ` with ` SecondDummyRetryListener ` across multiple files to standardize the retry listener implementation in the codebase
report whole _ count with decimal in doc ( fixes # 498 )
changed fields ` email ` and ` commit ` to final in the ` Contribution ` class to ensure immutability of these fields after initialization to
modify JUnitFormatter to prepend a period every 76 characters to improve formatting to ensure consistent output formatting
refactor variable handling for the elements variable to improve type safety and ensure compatibility with LinkedList
include input resource url in exception message .
simonstewart : make the multi render test multi - render a little wider
added handling for null currentProfile in DelegatedAuthenticationClientLogoutAction to improve robustness by avoiding potential null pointer exceptions
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure namespace declaration is added on the correct element
added cryptographic parameters in KeyStoreManager . java to enhance security by implementing key management features
- meshcollisionshape : use mesh . getindicesaslist ( ) instead of mesh . getIndexBuffer ( )
set the engine version when save a process
updated property names in velocityEngine for consistency and clarity to improve readability and maintainability of the code
allow attach thread to current thread while run centrypointsnippets snippet .
updated GenericUDFMapValues to handle null maps and added a new TestGenericUDFMapValues class with a test for handling null maps to improve
update field that ’ s check reflectively to match spring mvc ’ s internals
added configurable oil well generation rate and enable oil spouts in the energy configuration .
added file creation logic for the " . clean - me " directory in ImportContext . java and updated file existence checks in JobQueue . java and Imp
add a message to the lifecycleexception when memoryrealm fail to read xml .
removed unused import statements from RegisteredService and CRLDistributionPointRevocationCheckerTests to clean up the code and improve readability
updated constants in ZipConstants and ZipConstants64 classes to reflect the use of Java ' s ZipConstants64 class to enhance clarity and maintainability
refactor the ` newFileSystem ` method to enhance file validation and error handling to improve robustness by ensuring only non - file paths are
change condition panel to use a horizontalGlue component to improve layout alignment of the condition label
added an override annotation for the connection creation method to ensure proper execution of the connection setup
added Gson @ SerializedName annotations for baseUrl , mirrorsList , and repoId in ServiceOsSpecific . java to enable proper serialization and deserialization of
fix : do n ' t delete obsolete book again
8245246 : fix doclint warning in javax . management
fix incorrect buffer copy in ajp2 processor
fix restart issue with admin console plugin
removed unregisterHandlers ( ) method and initialized binaryConsumer , textConsumer , and closeHandler directly to simplify the code and improve clarity by using the instance
added configuration properties for device ID transformation and ID table settings to enable dynamic configuration of device identification settings based on application properties
reduced the number of documents in the StopableDirectoryReaderTest and added a new DelayingSearchComponent class to optimize test execution and increase the
updated the condition for checking access error to correct the logic for verifying access errors
transaction : fixed encoding of p2pkhoutputscript . scriptcode
updated the expression in IndexSchema . java to include fieldType to ensure compatibility with additional schema types in the application
added null and argument completers to the completers and created a corresponding test class to ensure correct handling of null and empty argument completers in
fixed checkstyle violation .
change data types of ` sourcePeerId ` and ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to align with the
refactor FtpHelper to streamline file handling and upload files using a dedicated method to improve code readability and maintainability while ensuring proper
updated the reply button ' s alpha transparency to enhance the visual appearance of the reply button for better user experience
nifi - 6022 added miss line to accesslogsupporttest
attempt to fix the build .
refactor subscribers initialization and property change handling logic to simplify the code and improve readability by removing unnecessary null checks
change initialization to throw illegalargumentexception if the object can not be obtain .
replace printStackTrace ( ) method with LogUtil . warn ( t ) for better error handling to improve logging consistency and maintainability
added a condition to check if the asset directory exists in development mode and updated the conditional check in AssetsController to ensure that the static directory
[ hotfix ] [ backend ] ensure rocksdbkeyedstatebackend . writeoptions be always write to the backend .
rename the default format string from " value - tag - index " to " value - index " to maintain consistency with naming conventions
fix checkstyle and request hint
enable native secp256k1 by default and use native secp256k1 by default ( # 1162 )
- rename duclsandboxtest to sandboxtest to avoid confusion .
camel - 641 fixed the unit test error
make a method public to allow extension
modified the executeQuery method to include an additional parameter for grouping results to enhance query flexibility by allowing more granular results
[ mng - 6377 ] spring - boot - starter fail when project $ { project . basedir } do not exist during profile activation
refactor Style class to improve code readability and maintainability
added handling for the KEY _ BACK key event in ShareActivity to enable navigation to the back button when the user is at the beginning of the screen
added a conditional check to skip reading deprecated fields when ignoring them to improve handling of deprecated fields during JSON processing
added fade - in and fade - out animations to the send layout to enhance user experience by providing visual feedback during visibility changes
[ hotfix ] fix checkstyle violation in yarn - yarn - utils
added Progressable parameter to multiple SequenceFile methods to track progress during file operations
[ hotfix ] [ core ] fix checkstyle violation in sourcecoordinatorprovider
fix update color for each new contribution in the contribution list
fix some camel - jbang test error on window .
added a default value for dPath if it is empty to ensure the application uses the user ' s current directory as a fallback
fix passthrough for audio format with no sample .
log4j2 - 1343 add miss filter ( ) method .
refactored VerificationInOrderWithCallsTest . java to improve test clarity and maintainability
change the argument of setFromAxis method from axis . y to axis . x to ensure correct positioning of the Quaternion component
change constant name from " colection . delim " to " collection . delim " to improve clarity and consistency in naming conventions
test curatorframework state change listener to check first listener state
improve documentation for phc ( # 355 )
refactor one - handed mode checks to use a dedicated variable for improved code readability and maintainability
ensure we release resource as quickly a possible .
added dictionary support to MorfologikAnalyzer and MorfologikFilter classes to enhance functionality by allowing users to specify a
change the variable ` count ` to ` thrown ` and modify exception handling logic to ensure that the exception is correctly identified and handled as expected
change the initialization message to use an empty string instead of " debug " to ensure proper project directory handling for debugging purposes
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` and modified exception handling logic to improve clarity and functionality of the code and
refactor tooltip text handling in ComponentTreeRenderer and ComponentTreeRenderer classes to improve code clarity and maintainability by consolidating tooltip setting logic
increased the timeout duration for the Zipkin server from 5 seconds to 10 seconds to allow more time for the server to start up properly
deviantart : add optional agegate login
replaced KNOWN _ SIGNATURES array with constants for Google - related packages to improve maintainability and readability of the code
fix solve all turtle test
added a method to notify window state changes to improve responsiveness to window state changes
add email description to template for group key detection
change the method call to use data . remove instead of data . remove to ensure the correct data object is removed from the data structure
modified the ` getISO3Language ( ) ` method to check if the language is a three - character language before returning it as a string to ensure
refactor change log parsing to use a dedicated parser for better code clarity and maintainability
added a conditional check to return early if screen pinning is active to improve performance by avoiding unnecessary processing when screen pinning is disabled
added text handling for no chart data available to improve user experience by providing clear text for unavailable data availability
added synchronization to prevent concurrent access to shared resources in Http1xServerResponse and Http2ServerResponseImpl to ensure thread safety and prevent potential race conditions
do n ' t force a chunked write when an sslhandler be present
http / 2 test do n ' t use scheme header by default
fixed - redissonlocalcachedmap . putall ( ) and getall ( ) method of redissonlocalcachedmap do n ' t return cached
camel - 14263 : camel - jpa - should use source code generate configurer to avoid reflection configuration .
fix typo for jumpspeed
added a condition to check if reparsedFunction is null alongside the existing syntax extensions check to ensure that the function is only processed when reparsed
refactor logging variable names for consistency and clarity in BitstampPusherService . java to improve code readability and maintainability
restore backward compatibility for old upload segment
updated findOne ( ) to findOne ( filter ) in MongoDbTailTrackingManager to include a filter parameter to improve data retrieval flexibility
add a little overload to language . assert PredicateFails to test case .
bound alpha value to 1 to prevent rendering issues with negative alpha values
fix import - package in manifest reversion
refactor DataSyncConfiguration class to improve code readability and maintainability
added import for JavaSnippetRepository and initialized JavaSnippetRepository . INSTANCE to ensure proper setup for snippet repository functionality
refactor conditional logic to use a loop for better readability to improve code clarity and ensure proper execution of the updateSums method
update chromedriver to point to the new google apis .
camel - 1053 fixed the camel - ftp integration test error
close inputstream when parse rome .
fix transfer completion for empty content - length header
refactor Dialog class to improve code readability and maintainability
removed the constructor from EnhancedRuntimeException to simplify the class initialization process
fix intermittent ci failure of socketappendertest
camel - 17006 : camel - endpoint - dsl - remove deprecate eventadminendpointbuilderfactory from camel - endpoint - api
updated method signatures and exception handling in ByteArray . java for consistency to improve readability and maintainability of the comparison logic
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve touch event handling and prevent potential crashes
camel - 6770 : remove @ ignore for camel - restlet to fix the build .
removed the current index parameter from the resizeAndRehashIfNeeded method to simplify method signature and improve usability
move module - info and module - info . java to test - modulepath
updated JavaLanguageServer to include source directories in the getCompiler method to enhance the accuracy of compiler instance creation during configuration
removed the webpage menu item and replaced it with a mute hashtags option to streamline the user experience by eliminating unnecessary options
corrected spelling mistakes in method names and assertions to improve code readability and maintain consistency in naming conventions
make y = 0 if y < 0 , it may be negative .
[ iotdb - 6167 ] add pathnotfoundexception to insertnode ( # 9452 )
removed extraneous quotation marks in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ runtime ] make mailboxexecutor field nullable in abstractstreamoperatorfactory
hbase - 27420 add test and fix a few unauthorized apis
fix broken integration test
fix broken test runners
[ k8s ] fix delete to use lasttimedata instead of remoteitems
update calculation for allAppsCellWidthPx in DeviceProfile . java to improve layout consistency by incorporating cell padding
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
None
added a forceMerge call in TestMultiPhraseEnum . java to optimize the multi - phrase query performance
hhh - 14760 make session implement closeable
pdfbox - 4071 : fix typo find by codespell on fossies . org
changed condition to check for null exception before printing stack trace to improve error handling by avoiding unnecessary stack trace printing
change exception handling from IOException to a general IOException to improve error handling flexibility
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android framework features
ruby flavor : replace string emission with snippet emission
None
remove cache use of niochannels and processorcache .
refactor ` CasGeoLocationConfiguration ` to use ` Resource ` instead of ` MaxmindProperties ` and improve database reading logic to enhance flex
update ui test to reflect new behaviour
skip encode qualifier list optimization for raw table
removed public access modifier from several methods in ApprovalStore and ApprovalControllerService classes to enhance encapsulation by restricting access
added a mechanism to check if downloads are in progress before halting the download process to ensure that a notification is sent to the user when the download
updated ` TaskbarDragLayerController ` to use ` getAnyView ` instead of ` getOpenView ` for retrieving floating views to enhance functionality
updated project version from 1.0 . 11 to 1.0 . 13 and corrected year for year 2011 to ensure accurate version identification and correct year for
replaced instances of ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper synchronization with thread -
refactor GsonBuilder class to improve code readability and maintainability
fix potential npe
remove the java . espresso . home option from the espresso . properties
doc : add miss javadoc example ( # 2599 )
fix sonar warning : class should not be subclassed
standardized spacing in InvalidDocumentStoreApiUageException class definitions to improve code readability and maintain consistency
modified the initialization of ` resultList ` and ` result ` in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and ` TestJoin
updated the call to triggerMediaScan to include the file parameter to ensure the media scan is triggered with the correct file object
removed conditional logging of test results based on verbosity to simplify test result reporting logic
added custom G - code settings for specific text fields in MainWindow to enhance user input handling for custom G - code settings
( chore ) camel - additionalJaxb : use utf - 8 for output stream
[ hotfix ] [ json ] fix typo in jsonelement
added imports and exception handling methods in TestBadConfig . java to enable testing of specific configuration scenarios
added a method to remove fragments and hide the action bar in GpsMainActivity to simplify the user interface by eliminating unnecessary components
add extra space to spanish token in tokenizer annotator
replaced instances of ` Range . create ( ) ` and ` Range . Byte ( ) ` with ` Range . Byte ( 0 , ... )
updated the gcode file path and improved output messages in VisualizerCanvas . java , and modified OpenGL bounds checks in GcodeViewParse .
added support for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " and " 8.4 .
reformatted assertions in assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java for consistency to improve code readability and maintainability
added logic to handle cases where the output stage is null and initialized variables for data to ensure proper resource management and state handling in the query execution flow
fix integrity check : file directory must exist before check
added import for SolrClient and declared shardToClient in the ChaosMonkey class to facilitate the handling of Solr clients within the application
added null check for fileas in ConfigurationActivator . java to avoid potential NullPointerExceptions when fas is null
standardize formatting of the ListView in the NestedRepositoryTreePanel to improve code readability and maintain consistency
added a constructor to the ExtensionTypeHeader class that accepts both a byte type and an int length and validates the range of byte values to ensure that the
pdfbox - 4892 : throw exception , a suggest by valerybokov
polish ` ` enable push on shutdown ' '
added error handling for trigger callbacks in ReactiveStateMachineExecutor to improve robustness by capturing and logging queued events
add a test to verify that multiple Python executables on the path are used correctly to ensure that the correct executable path is used in the configuration
added a default button to the root pane in InitialAccountRegistrationFrame to enhance user experience by providing a visual context for the signin button
added a new Hive configuration variable ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN ` and modified the condition
added exception to log message when register fail
rename org . xend . util . reflection to org . xend . util . reflection because it be already part of util
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created unit tests for the ` O
removed the ' center ' variable from multiple shape classes to streamline code by eliminating unnecessary variable declaration
refactor conditional check for pcollection to simplify the logic to improve code readability and maintainability
updated SslContextFactory to improve SSL connection handling
[ spring ] remove unnecessary @ ignore annotation
change return value from " access _ confirmation " to " access _ confirmation _ error " to provide clearer identification of the error condition
set context classloader on consumer rpc invocation ( # 12348 )
added a new parameter ` copyRowHeight ` to the ` shiftRows ` method and modified its behavior to optionally copy the original row height to enhance flex
updated rollover and pressed icon settings in FontImage . java to correct the indexing of icons for proper functionality
updated grid translation handling in TaskViewUtils and refactored related methods in TaskViewSimulator and RecentsView to improve task view management
refactor assertions methods for improved clarity to enhance code maintainability and readability
added logic to return the currentDateTimeFunction from multiple database classes to ensure consistent handling of the current datetime function across database types
added a utility method ` anonymousPath ` in ` IOUtils ` and updated logging in ` Log4jUtils ` to use it to improve
updated the ` DigitalWellBeingToast ` class to include a ` contentDescription ` parameter and modified related method calls to enhance task descriptions for better
hbase - 2591 addendum reduce wait time for meta connection
fix checkstyle issue
add miss default conversion to item
added additional properties handling and a test method for fetching posts with specific parameters in BidirectionalOneToOneNPlusOneTest . java to improve
remove extra empty screen from workspace to improve user experience by eliminating unnecessary screen entries
updated the initialization of ` baseDerivedRefs ` and ` s ` sets to use the size of ` baseDerivedRefs ` and ` derivedRefsOther `
updated string formatting in GoogleLineChart and GooglePieChart classes to use double quotes instead of single quotes to ensure consistency in quote representation of numeric values
modified the handling of batch completion in ` SendingAccountor . java ` to ensure batch processing continues continues continues continues continues while waiting for batch completion completion to
hbase - 2592 add more configuration to the walprettyprinter to make it easy to run the test
changed the connection timeout parameter from 1 to 0 in NettyTransceiver instantiation to initiate an immediate connection attempt without waiting for a timeout
sort the event before generate a report , to ensure that the same event be report in the same time
add unit test to verify correct handling of double quote in CSV description .
add a few more key to the chinese model to make it easy to configure
ignore iq stanza where we do n ' t support them
removed the @ JniImpl annotation from the VM class to streamline the code by eliminating unnecessary annotations
updated configuration settings for HTTP blocking and robots checks to improve clarity and consistency in the Fetcher2 class
added a condition to check if the media ' s renderer is not " dolbyvision " before processing the SID in FFMpegVideo . java
update variable name from " other _ package " to " other _ package2 " in the test to align the test with the new package structure
fix for setworlderentheightsize ( ) , add integration test
hbase - 2782 get wal group replication status from meta ( addendum )
mob - 1469 remove the caller from the login operation when it ' s not need
updated RoutingTableTest to use generateInstanceConfigs method for generating instance configurations to improve code readability and maintainability by centralizing instance configuration
changed the class modifier of FieldAttributes from package - private to public to allow access to the FieldAttributes class from other packages
add more test for projectbuilder . build ( ) with respect to validation level .
simplified the conditional check in the PropertyMap class to improve code readability and maintainability
refactor getControllerId methods to accept an additional configId parameter and streamline the addition of relays to the collection to improve code cl
replaced sessionFactory . close ( ) with session . close ( ) to ensure proper resource management by using the session object directly
removed condition for generating refresh token in OidcConsentApprovalViewResolver to simplify the logic for handling refresh token prompts
removed a debug print statement to clean up the code and improve performance by eliminating unnecessary console output
replaced a lambda expression with an instance of NoopGetter to simplify the code by eliminating unnecessary null extraction logic
add javadoc since to conditionalonenabledresourcechain
added a condition to check if the treeRoot has a child count of 0 to ensure that the barrowman calculation correctly accounts for empty child views
pdfbox - 4892 : use getunfilteredstream ( ) instead of getfilteredstream ( ) to avoid npe
fix permission issue on facebook .
updated return values in ShadowICU . java and modified unit tests in ShadowICUTest . java to ensure correct representation of time zone in the returned skeleton
removed unnecessary device lock check in TouchInteractionService to simplify the state checking logic for device locking
cloudstack - 2053 : null check for default disk offering before set it on volume
replaced FileChannel with AsynchronousFileChannel and added position variable to enhance asynchronous file handling capabilities
refactor the SigInt and SigIntTest classes to improve code formatting and structure to enhance readability and maintainability of the code
mow - 1190 fixed code style issue
change return value from - 1 to 0 to correct the behavior of the Asset class
reduce memory footprint of computebenchmark
added onRefreshListener to UploadListFragment to notify adapter changes to ensure UI reflects changes in data displayed
fix bibdatabasecontext constructor to accept path instead of file
refactor array access from ` items [ i ] ` to getter methods for better encapsulation to enhance code readability and maintainability by
fix compatibility issue with tomcat 11
updated the desired file reference in error messages to ensure consistency and clarity in error reporting
added a condition to return early if playback state is not PLAYING to improve performance by avoiding unnecessary processing
replaced ` serviceComponentDesiredStateEntityPK ` with ` findById ( 0L ) ` in ` DeleteServiceTest . java ` to ensure a single
added a new class InnerClassFieldClash and updated Java2TypeScriptTranslator to handle inner class field clashes to ensure proper handling of
added support for custom logging filter and follow redirect filters in DockerProfile and DockerClientFactory to enhance debugging and monitoring capabilities by allowing configuration of
replaced direct calls to displayChanged with awtUnlock and awtLock to ensure proper resource management during graphics operations
hhh - 10183 fix test for sql server 2008
OPCPackage and ZipHelper methods to ensure proper resource management by closing the input stream to prevent potential resource leaks
change visibility of storeClassFile method from private to public to allow access to the method from outside the class
added a new test class for verifying the behavior of NO _ MORE _ ORDS constant in SortedSetDocValues to ensure correct handling of missing values
updated error messages in CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI CGI
added support for additional newline characters in LineReaderImpl . java to improve handling of multi - line text input
use set instead of list to avoid duplicate
fix crash when mesh have no vertex .
updated test method names and added functionality for better verification error handling to improve clarity in test outputs and ensure accurate verification of method calls
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` for deleting a folder to ensure the file is created in the correct directory structure
remove unnecessary import and fix javadoc warning .
refactor JsonObject class to improve code readability and maintainability
added a check for non - negative idle time in SelectChannelEndPoint and updated HttpConnection to return the maximum idle time if both conditions are met to ensure
fix farmland be able to place sustain plant . close # 1651
added a new SQL table " SALTEDTABLE123 " and modified several queries to retrieve primary keys and views to enhance database metadata retrieval
updated SimpleDateFormat to use Locale . US for cookie date formatting to ensure consistent date formatting regardless of default locale settings
remove duplicate db . close ( ) call
int - 1244 increase timeout for consume message from 1 second to 5 second
[ economy ] add phase conditional on tracera tracing .
fix : save current entry after click save in source ( # 8042 )
refactor ObjectMapper initialization to use a static block to ensure line separator is set for consistent output formatting
replace backslashes with forward slashes for Windows paths in NativeEnvironmentRepository . java to ensure consistent path formatting across different operating systems
removed unnecessary Application references in multiple test files to streamline application initialization and resource management
[ java ] remove redundant validation of exist log .
chore : [ iit ] fix build ( # 98 )
remove unneeded wait
save reverse image state in preference instead of share preference
refactor condition checks in LoaderZipEntries and Repackager to use direct string comparisons to improve code readability and maintainability
fix ( hdp - services ) : fix nullpointerexception in hl
updated JUnit 4 annotations and method visibility in AuthenticationSuccessListenerTests to migrate test classes to JUnit 5 equivalents to ensure compatibility with JUnit
simplify and improve performance
refactor TypeUtil class to improve code readability and maintainability
[ amazonechocontrol ] fix timezone issue with alert
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for creating a method that throws ` AbstractMethodError ` to en
camel - 1771 fix simple language to work with simple language syntax .
remove early return for empty target graph in abstractparser
camel - 7957 fixed the test error of camel - jclouds
fix camel - consul test after osgi bundle be release
added a check for ACC _ STRICT access flag on default methods in mmm Check . java and ppp Check . java to ensure compliance with
[ java ] : use awaitility in channelvalidationtest to reduce test time .
added a new file ` FileExtensions . java ` containing multiple functionalities related to language file extensions to provide a centralized definition of language file extensions for
replaced the implementation of FORMAT _ THREAD _ LOCAL to use cloneable FORMAT _ PROTOTYPE instead of a custom ThreadLocalDateFormat class to simplify the code and enhance thread safety by utilizing standard cloning functionality
svm : remove support for cgroupmemorylimitforheap
added displayName field and updated related configurations in multiple classes to allow dynamic display name configuration for improved client experience
replace RuntimeException with EarlyTerminationException in multiple classes to improve exception handling to ensure better error management during operator execution
standardize formatting in the apply method call to improve code readability and maintain consistency
improve handling of closed connection . jm - 1026
fix potential npe in getcapabilitydispatcher .
wallettool : do n ' t catch KeyCrypterException , it ' s always thrown
mark AsyncCompletionService as deprecated to indicate that it should no longer be used in favor of a new approach
updated the length variable handling in HyphenationTree . java to ensure correct truncation of string length during hyphenation processing
add a delay to make the registration process faster .
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED constant to clarify its purpose to ensure compatibility with Java 8
reset providerschanged to false after configuration change
added a method to quote identifier tokens to ensure reserved identifiers are properly escaped in token updates
added a null check for the ' name ' entry in the font to handle cases where the name is null and prevent potential null pointer exceptions
fix unchecked cast warning in solrresourceloader
corrected a logic error in the Window class to ensure proper boundary checks for rendering components
added null check for appManifest before accessing its target SDK version to avoid potential NullPointerException when appManifest is null
updated ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to use a dedicated method for adjusting configuration metadata to improve code clarity and maintainability
added userName property and its getter / setter methods to Driver and HiveSemanticAnalyzerHookContext classes to enable the driver to associate with the user ' s username
camel - 13850 : camel - slf4j - xslt component should use source code generate configurer to avoid reflection configuration .
added Hadoop shim integration to ContainerRunnerImpl and TaskRunnerCallable classes to support Hadoop - specific functionality in the codebase
removed unnecessary variable declarations to simplify code for improved readability and maintainability
when log access , check context be available before log them .
turn throughputlogger off by default
refactor debug build checks and introduce a new VMOptionWarning class to ensure tests are skipped for debug build compatibility
replace ` MeterStatisticsManager . statisticsOperationMap ` with ` MeterDetailStatisticsModelMap ` in ` DefaultLogPublisher . java `
removed an error log statement and modified the handling of the logback configuration file to streamline logback configuration retrieval process
added @ NotNull annotation to several methods and classes in the security package to ensure non - null values are enforced during object creation
replaced ` Escaper . BASH _ ESCAPER ` with ` Escaper . SHELL _ ESCAPER ` in multiple files to standard
use try - with - resources to prevent resource leak
renamed the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to better reflect the focus on the specificFieldInfoFormat being tested
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a ShieldAddress and respond with it to the user to utilize the ShieldAddress for contract address generation
change return type of readConsoleInput ( ) method from byte [ ] to String and modify input handling to return a String instead of a byte array to
updated regex patterns in TestStabilityRule . java for improved validation to allow more flexible handling of platform - specific input cases
added functionality to limit the number of fragments used for multi - valued fields in the DefaultSolrHighlighter to optimize fragment matching for improved performance
updated the ` tryToLogin ` method to include username and password parameters to enhance security by allowing authentication with specified credentials
removed unused entity references and added checks for null or EntityAvatar in SceneEntityDrownReq and PacketSceneEntityDrownRsp classes to
polish javadoc and formatting
removed the wrapCollection method call in the update method to simplify the method signature for better usability
added logging for unknown currency exceptions in BTCEAdapters . java to improve error handling and provide feedback for unsupported currency inputs
ensure durable subscription be always create when necessary
pdfbox - 4892 : increase default tolerance a propose by timo boehme
updated the startController method to accept a boolean parameter for tenant isolation and refactored related calls in ClusterTest and HybridClusterIntegrationTest
remove unnecessary builder ( ) call
added a check for non - empty attributes before verifying their size to ensure that attributes do not exceed 4096 to avoid potential errors
added project name , jdk type , and language level methods to AbstractIjProjectConfig , updated IjProject to use IjProjectConfig
updated the description of the Experimenal property from " Experimenal " to " Experimental " to clarify that the property is
updated test cases in GrantedAuthorityEffectiveAclsResolverTests to include user details in the granted acls resolution process
get rid of the usage of the deprecated class ReflectionClassdeclaration
added a constant for the number of buttons and modified the return logic to use it based on its value to ensure the button count is limited to a maximum
updated import statement for assertEquals from jdk . testlibrary to com . oracle . java . testlibrary . asserts to align with the latest testing framework
added a new ` MessagePackFactory ` class and refactored ` newUnpacker ` methods in ` MessagePack . java ` to en
add ` is _ cave ` to biome and item tag ( # 6141 )
rename method ` present ` to ` draw ` across multiple classes to better reflect functionality and improve code clarity
[ scene2d . ui ] update togglebutton uiid when hit hit horizontal .
remove use of deprecated doi _ url _ pattern . matcher ( )
replaced the use of ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLockless
[ java ] : do not check commit position on service termination .
example : enh : add example query bean for user site id
refactor HttpConverterRegistrar to improve error handling for malformed URLs to ensure correct port and host parsing to enhance robustness of the configuration process
bug 9860 : listcapacity - when the host > 200 , host _ id and storage _ pool _ id do n ' t return the host -
replaced ` openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` fileLength ( fileName ) ` for file length calculation to
updated JavascriptCompiler class to use the Apache Lucene ' s ExpressionContext and changed variables to final to improve code clarity and ensure immut
modified synchronization in UISettings class to ensure thread safety when writing to the file
modified access modifier of fireDataChanged method from private to public to allow external access to data change events
[ beam - 8470 ] improve error message for concurrent transaction
replaced explicit generic type parameters with the diamond operator to improve code readability and maintainability
modified ObjectInputStream to clone arrays of size short instead of double arrays to ensure consistent data type usage for array cloning
fix id token replay attack log
added a condition to check for relationship field name to ensure correct handling of relationship field names during data processing
added functionality to store and retrieve the server slogan in the database to enhance the capability management capabilities for improved user experience
update conditional logic in DrawerActivity . java to improve menu item handling to ensure correct visual tinting based on the current item state
updated SolrRequestParserTest to use JUnit ' s Assume and added error handling to ensure test execution only occurs when no network connection is available
added a check to return early if no missing symbol events exist to improve performance by avoiding unnecessary processing
fix test failure on oracle .
added warning log for empty data provider scenarios to improve test stability by avoiding unnecessary warning messages
( chore ) camel - base - engine : replace some instance of collections . empty _ set with collections . emptylist ( )
* update to freeplane 1.9 . 8 and test selection style
fixed typo in physicsrigidbody . setrestitution ( )
added a new file AutoFtpActivity . java to implement an FTP testing activity to enable testing of successful and failed FTP transmission tasks
refactor token handling in BaseSemanticAnalyzer to improve readability and maintainability of the code
added methods to get and set the component state in multiple classes to enhance functionality and ensure proper state management of UI components
added a new class ` RemoteExecutionEnabled ` and corresponding tests for serialization and disabling of remote execution to implement customizable behavior for remote execution control in the
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated file reading methods to use UTF - 8 encoding and improved error handling to ensure better character encoding and maintain code quality
added an assertion to verify that shadow variables are not stale during a working score calculation to ensure that the expected working score is maintained during execution
updated the configuration property for semi - join conversion from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
added logging for ignoring datagram message content as it is not an io . netty . buffer . ByteBuf instance to enhance observability
updated the ` SynchronizeFolderOperation ` and ` FileDisplayActivity ` classes to improve file synchronization logic and handle the case when the current directory
added assertions to verify the presence and presence of the transaction hash in the PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly validated
[ iotdb - 4960 ] deprecate schemaregion . constructschemablacklist ( ) ( # 4998 )
fix npe in medicodecrenderer when samplemimetype be null
change method names from ` notify ( ) ` and ` wait ( ) ` to ` notifyAll ( ) ` and ` notifyAll ( ) ` in
updated @ AllArgsConstructor annotation to include onConstructor _ = { @ JsonCreator ( mode = jsonCreator . Mode . properties ) } to ensure proper
added a SQL featureNotSupportedException for creating an index on a view in MetaDataClient . java to inform users that creating an index on a view is not
added a new ` Website ` class and updated ` PopulatorImplTest ` to include a test for JavaNet types population to enhance
added JUnit setup method to set default locale to " en " for user experience
add a mechanism to detect badly download jar file in the coremod ' s coremod ' s coremod ' s coremod . jar . zip
make multipart parsing test case insensitive
added checks for single parameters and their tokens in the SimpleExprGenerator class to ensure proper handling of function parameters during expression analysis
camel - 6377 fixed the npe issue
fix : do not use null in node style builder for attribute
updated log message formatting and added null check for currentDir in FileDisplayActivity to improve log readability and prevent potential null pointer exceptions
added a read status flag to the Entries class and updated related calls in CategoryREST , CategoryREST , and FeedREST to reflect this change to ensure all
replaced ` MavenTestingUtils . getTargetDir ( ) . newResource ( ) ` with ` MavenPaths . targetDir ( ) `
added validation logic for URI and MetaData register data in RegisterServerConsumerExecutor . java to ensure data integrity by filtering out invalid URIs and metadata
updated the sound playback condition to check if the sound is paused only when paused
added a new permission for admin area within a specified Captions class and updated MainCommand to check for it to enhance access control by allowing administr
updated query options handling in ServerRequestPlanVisitor and added new test cases in QueryRunnerTestBase to improve code clarity and functionality for query options
replace the use of toUri ( ) . getPath ( ) with path . getFileName ( ) . toString ( ) in multiple parser input file classes to
updated assertions in ResourcesTest to use constants for emoji and text to improve code readability and maintainability by reducing magic numbers
added native methods for memory allocation and hash bucket operations to enhance memory management capabilities in the WhiteBox class
[ flink - 30613 ] [ serializer ] introduce a new javaeserializersnapshot interface
updated AddressResolverOptions and AddressResolver classes to utilize a new constant for default dots resolution option to enhance flexibility and maintainability by
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and a test for it in ` RequestRocker
pdfbox - 4892 : return empty string instead of null , a suggest by valerybokov
updated XML namespace references from " liquibase / parser / core / xml / " to " www . liquibase . org / xml / ns
move commonMIMEtypelocator to test . source and move commonmimetypelocator to test . test . source
update repo _ state column to not _ required
updated the CompareControl to include schema comparison requirements in the CompareControl . SchemaComparison array to enhance control over schema comparisons during the comparison process
[ test ] use testng annotation to fix build
added a new test class ` ProgressiveJPEGTest ` to the project to verify the rendering of JPEG images with progressive JPEGs to ensure
* fixed issue where loader be not able to load a fully opaque color .
make window native - toolchain target architecture error message more user - friendly
added a null and empty check before setting the size of the Label to avoid potential NullPointerExceptions when the text is empty
update readVarInt ( ) to use a relative value from readVarInt ( ) to ensure correct parsing of hexadecimal values
make internal push util class final to prevent subclassing .
simplified the calculation of the length by directly retrieving the length from the configuration
removed unnecessary casting to MockDirectoryWrapper to simplify code and improve readability
updated the regex pattern in the load method for component presets to ensure compatibility with varied file naming conventions
added checks for app state before announceing accessibility and updated animation conditions to improve accessibility handling and ensure compatibility with newer Android SDK versions
updated Node initialization to use RefreshTask instead of Args to ensure consistency in node management by utilizing the current instance ' s key
add test case for 1.3 and 1.5
replace PowerMock with Mockito in QuotaResponseBuilderImplTest to simplify test setup and improve compatibility with JUnit 4 features
fix test to pass on window
chanoutoneblockasync DFSClient support to avoid data encryption
updated constructors and method signatures in MongoQueryMethod and related classes to include RepositoryMetadata to enhance query functionality to include repository - specific metadata
add support for external xml config property source in Digester
updated import statements in MetaDataEndpointImpl . java to use specific PhoenixDatabaseMetaData constants instead of generic ones to improve code cl
updated allowed retry attempts and added a deadlock count mechanism to improve system stability during transaction retries
updated XAxis variable usage in BarChartActivity and LineChartActivity1 , and adjusted Y - axis properties in LineChartActivity1 and YAxisRenderer
added a method to validate printable characters and defined a set of system names to improve code clarity and ensure only printable characters are processed
rename selenide . in to selenide . using ( )
add ` ` processpluginconfiguration ' ' flag to the ` ` mng - default - maven - plugin ' ' configuration to process plugins .
change return value from 1000 to 1d in ProxyConnectionManager . java and ServerTrafficCounter . java to ensure correct conversion of transferred bytes to 1m
chore ( integration test ) : check for existence of google cloud - vision resource before run integration test ( # 2447 )
guacamole - 1656 : use remote host from credential if available .
( scott phillips ) add the admin button to the community list page .
update thread naming for longCompactions and shortCompactions to use an AtomicInteger for unique naming to enhance thread identification for each compaction count
updated the method for retrieving the wallpaper package name to improve consistency by using resources for the wallpaper package name
updated the method for retrieving players in a plot to return only visible players to improve the clarity and relevance relevance of player data
refactor multiple classes including AndroidManifest , ResName , ShadowMediaPlayer , ShadowActivity , and ShadowActivity to improve code organization and maintainability
refactor MlibOpsTest to improve test clarity and maintainability
re - run code only if require
corrected a typo in the attribute name from " referencedContainer " to " referencedContainer " in the SchemeGenerator class to ensure consistency in
updated key and initialization vector handling in UploadFileOperation . java to streamline encryption and initialization logic for file metadata processing
[ test ] mark workprofiletest a stable
removed conditional check for bucketing version in TezCompiler . java to streamline processing when bucketing version is not set
replaced the method call to setCursorPosition with input . setCursorPosition to ensure cursor is set on the correct input object
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and introduced ` LockFreeBucket _ FinalFields _ CacheLinePadding
add a way to print thread pool stats from the node
updated max bitrate calculation in ExternalPlayerActivity and PlaybackController to incorporate user preferences for bitrate customization
updated ZipkinHttpSpanExtractor and added new utility methods for handling trace and span IDs to improve code clarity and ensure proper handling of span
filter out bsq swap account when create offer data model
make dartservercompletionContributor # withtypeiconrightaligned not reflection - safe ( # 5662 )
added a line to set the project in LauncherUtils . java to ensure the project is correctly initialized before use
updated JsBundle , JsBundleBuilder , JsBundleWorkerJobArgsTest , JsLibraryBuilder , and JsTestScenario to include ProjectFilesystem parameter
refactor multiple Java classes related to envelope and databinding functionality to improve code organization and enhance maintainability
polish javadoc for metricsdslcontext ( # 2595 )
replaced the implementation of VersionConfig with ImmutableSet and updated its builder pattern to improve flexibility and ensure the size of universes is accommodate
added error handling to the bindShadowClass method to gracefully handle TypeNotPresentException during shadow class binding
improve assertion error message for miss type information
fix : update gapic - generator - java with mock service generation fix ( # 111 )
added logging functionality to the SimulationStatus class to enhance debugging and monitoring of simulation status updates
updated the VERSION _ POSITION _ Y and VERSION _ POSITION _ FONT values to improve the appearance of the splash screen in the application
modified notification addition to run on the UI thread to ensure that notifications are processed on the event dispatch thread
updated the mock ' s behavior in ReturnsElementsOf . java to ensure that the mock correctly returns multiple return values for testing purposes
corrected the spelling of " non - equality " in the error message to ensure consistency and accuracy in error reporting
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify line file documentation indexing to enhance test coverage and
added a method to retrieve the version code from the application to standardize version management across the application
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48258 where
replace calls to ` getContentDispositionFilename ( ) ` and ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPart
added ownership checks to buffer management in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and prevent memory leaks
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset functionality
camel - 14263 : camel - jersey should use source code generate configurer to avoid reflection configuration .
int - 1853 , int - 1873 , int - 1874 : remove unnecessary class cast in console inbound / outbound stream parser
replaced specific variable names with a wildcard variable in multiple test files to improve code readability and maintainability
updated StringDict and Table classes to manage column and row count limits to improve data handling and eliminate redundancy in processing
mark methods in GenericContainer as deprecated and implement AutoCloseable in GenericContainer . java to indicate that these methods are not recommended for use and
changed logging level from info to error in MediaInfo . java and updated exception handling in RendererConfigurationTest . java to improve error reporting and ensure
added schema pattern option handling in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to allow configuration of the schema pattern dynamically based on user input
bcjsse : return empty string if no id provide .
refactored bitmap creation logic to use variables for width and height in AndroidGraphics . java to improve code readability and maintainability by reducing rep
refactor Base64 . java to improve code readability and maintainability
sulong : add single context assumption to get / set fallback value
danielwagnerhall : ignoring a couple of test that pass locally in the selenium - backed webdriver
refactor FlowBuilder and its tests to improve code readability and maintainability
replaced ` ResName ` with an ` int ` in the ` AttributeResource ` constructor and removed the ` ResEntry ` class from ` Overlay
[ type : refactor ] consolidate multiple logic into a single method . ( # 3185 )
try to fix test failure on mac .
modified type variable handling in ` mmm Attr . java ` and added a new class ` ppp T6450290 . java ` with generic type box
add option to set log level via -- log - level
added logging statements for package removal in multiple classes to improve traceability and debugging when app icons are removed
added allFilesOption method to FileActivity and FileDisplayActivity , and overridden the allFilesOption method in PreviewImageActivity to enhance user experience by
add back deprecate method for backwards compatibility
modify the calculation of numPredictiveAppCols to use a conditional for phone devices to ensure accurate column count based on whether the device is a phone
updated StringUtils to initialize value with UTF - 8 encoding to ensure proper handling of character encoding in string input
added a new ` RequestMatchers ` class and corresponding test cases for verifying behavior of ` RequestMatchers ` to enhance the security framework '
make sure ` ` temporary mode ' ' do not disable temporary mode
adjust position calculations in ProgressBar . java to account for background height and width adjustments to ensure proper rendering of the knob position relative to the appropriate
[ native po ] fix path to external _ functions . json
change extra _ l0 , extra _ l1 , extra _ l2 , extra _ l3 , extra _ l4 , and extra _ l
added a condition to check if the state handler is invalidated in the gesture state check to ensure proper handling of gesture state when the state handler is invalidated
updated layout metrics calculations in CellLayout and Workspace classes to improve layout handling for landscape orientation and ensure accurate metrics calculation
added a condition to check for the file name " / robots . txt " in the robot rule parsing logic to ensure that the directory is recognized as
[ netbeans - 4088 ] use warning icon instead of statusDisplayer
updated subcommands in AdvancedGameSetupScreen from " continue " and " close " to " createWorld " and " return . " to improve game setup
updated UDFOPDivide to check both ' a ' and ' b ' are equal to zero and added a test for zero in the division logic to ensure
refactor code for improved readability and consistency in the FlowJob and StopAndRestartFailedJobParser classes to enhance maintainability and
replaced direct usage of " filterProcessesUrl " with a bean definition builder for LogoutFilter to enhance flexibility in configuring authentication request matchers
added onDestroy method to Unbind the upload service in ShareActivity and ContributionsActivity to ensure proper resource management of the upload service connection to
replaced ` thumbNail ` with ` thumbnail ` for variable naming to improve code clarity by using a more descriptive variable name
refactor multiple command handler and output format classes to improve code organization and maintainability
added request timeout configuration to RaftServerConfigKeys to ensure proper request timing for RPC communication
updated logging level from error to debug and modified memory management in ` ResourceManagerTest ` to improve error handling and ensure seal ts file resources
added system property settings in MavenModuleLoader to ensure proper configuration of system properties
added metrics for readiness checks and bad calls in the ServerMeter and HealthCheckResource classes to enhance monitoring capabilities for service status updates
fix model handler registration for animated torch
added null check before closing the writer to prevent NullPointerException when writer is null
refactor HiveConf initialization to use a utility method in UtilsForTest to improve code reusability and maintainability by centralizing configuration logic
added a link touting users in the FeaturesActivity to provide users with information about muting users
added a property to disable direct method handle usage in reflection to improve performance by avoiding unnecessary method handle lookups
hbase - 14635 splitonLeadingvarcharcolumnspolicy extend steppingsplitpolicy ; addendum
[ flink - 30613 ] [ yarn ] only add plugins directory if the distro dir exist
get word spelling from the dictionary , not from the transcript
remove extraneous newline in test data
added extra key - value pairs to the compose intent to enhance functionality by associating tweets with their IDs
add a warning log when a message listener be stop .
throw nosuchelementexception if we can not analyze a class
updated import statement for PublicKey from Key to PublicKey to ensure compatibility with the latest security standards
updated the logic for determining if a resource is incompatible to ensure accurate representation of resource dependency status
updated the parameter type of the createAccount method from Account to AccountCreateContract to accommodate the new contract structure for account creation
pdfbox - 4892 : avoid arrayindexoutofboundsexception a propose by valerybokov
http : / / issues . apache . org / jira / browse / amq - 4698 - apply patch for http : / / issues
set default value of enableOffHeapFormat to true and update related constants to ensure off - heap format is enabled by default and improve configur
truncate the title to a maximum of 2048 characters to ensure that the displayed title does not exceed database limitations
bugfix # 6977726 - preview panel width and height do not match
changed log level from info to debug for extension checking to reduce log verbosity and improve performance during development
added null check for reusable bitmap before setting inBitmap to avoid potential NullPointerException when reusable bitmap is not available
added a new import for ViewGroup and a method to retrieve its layout parameters to enhance the functionality for managing ViewGroup layout parameters
fix # 172 . throw illegalstateexception when call iterator ( ) after session be close .
pdfbox - 4071 : avoid a classcastexception find via oss - fuzz
ignore test that fail on jenkins only
added a private field ` ts ` with getter and setter methods to the message class to provide access and modification capabilities for the timestamp value
log exception at fine level ( # 2642 )
change the access modifier of the AbstractExecutor class from package - private to public to allow the AbstractExecutor class to be accessible from other packages
remove request . getHints ( ) and use request . getHints ( ) instead
removed the ' public ' access modifier from multiple test class declarations to enforce package - private visibility for class members in the test package
refactor CSRF attribute handling into a separate method to improve code readability and maintainability by reducing duplication
[ shadowclassloader ] add bootstrap support to eclipseloaderpatchertransplants
[ drools - 4684 ] do n ' t parse numeric disabled rule in excel
change log level from info to debug for default value logging to provide more granular logging when debug mode is enabled
lwjgl3controllermanager . connect ( ) should detect already use joystick
updated ObjectFactory import statements in WeldFactory and WeldFactoryTest classes to align code with the latest Cucumber library structure
refactor port forwarding logic to ensure proper handling of null host before saving the port forward to improve robustness and maintainability of the port forwarding process
added a new configuration property ` SHOULD _ SNAPSHOT _ DATA ` and its corresponding getter and setter in ` GlobalConfiguration ` to control snapshot data behavior
added logging functionality and a null check for the file name in SyncedFolderObserver . java to improve traceability and prevent potential null pointer exceptions
refactor LocationMarshaller to improve code readability and maintainability
refactor touch event handling logic to simplify condition checks for trackpad gestures
refactor VectorReader and related classes to remove the VectorReader interface and class declaration to simplify the code structure and improve maintainability
updated imports from ArgumentMatchers to Matchers in multiple test files to ensure compatibility with the latest Mockito framework version
replaced instances of ` getRelativePathName ( ) ` and ` getRelativePathSupplier ( ) ` with direct usage of ` getRelativePath ( ) `
updated the ` completeMapAndTransformRow ` method to accept ` RecordReaderConfig ` as a parameter to enhance flexibility by allowing custom
added a null check for the extractor before processing annotations to ensure the extractor is initialized before use to avoid potential null pointer exceptions
bug 10929 : use correct secondary storage if the volume have more than 1 account
fix shift flickering in inventory effect . close # 2114
add a deprecation and fix a typo
properly stop the leech in test
[ issue # 7287 ] fix the retry issue of popmessageprocessor ( # 7287 )
refactor KeyboardAddonSettingsFragment to improve code readability and maintainability
added JUnit Ignore annotation to ShadowDateUtilsTest to mark the test as ignored due to a known issue
tidy up naming and polishing
added upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to support websocket upgrade requests and their corresponding responses
added support for a connection timeout in AndroidImplementation to manage connection timeouts effectively
refactor getUserAccessPermissions and getTeamAccessPermissions methods to return a list of ` RegistrantAccessPermission ` objects instead of ` Rpc
add a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL queries with quoted casts are correctly parsed and de
updated file writable assertions to differentiate between root and non - root users in the codebase
added logging functionality and adjusted thread selection mechanism in FixedThreadExecutor to improve monitoring of thread distribution based on configurable limits
added null check for the field variable in AbstractChangeGenerator . java to prevent potential NullPointerException when field is null
updated import statements and method return types to use InitializingBean instead of CasEventListener to improve compatibility with the newer Spring framework structure
refactor the endAnimation method to encapsulate its functionality to improve code readability and maintainability by reducing duplication
added an implementation of the close method to ensure proper resource management by closing the deflater output stream
added a new file ` gsp001 . java ` to test JVMTI GetSystemProperty functionality to ensure that the system property retrieval mechanisms are function
do n ' t register default scope and factory when use @ configurationproperties
* added serialization support for camercontrol and lightcontrol via json exporter
refactor PopupNotificationPanel to use getWindowAncestor for better error handling to improve clarity and maintainability of the popup window management
7129240 : inference cleanup : remove redundant exception class in infer . java
added a method to retrieve the feature value to improve accessibility of the feature value for users
change method parameter type from int to long in VerificationAfterDelay to accommodate larger time values
added onBuild and executionDriver fields to ContainerConfig and Info classes to enable configuration options for onBuild and executionDriver in the container configuration
updated icon setting logic based on the direction of the target to ensure correct tooltip alignment for different text directions
stopfilterfactory : add option to enable position increments
added internet address to EmailsTest and SystemErrorEmailReportTest classes to enable retrieval of email addresses for testing purposes
added a new boolean variable mTryShareAgain to track the state of share attempts in the activity
added functionality to determine the terminal name based on the Jansi version in the JansiNativePty class to improve terminal identification accuracy based on
refactor bandwidth size calculation in BandwidthProcessor . java based on transaction caps to ensure correct size calculation for account creation and bandwidth cost handling
replaced direct assertions with Awaitility ' s await mechanism to improve test stability and responsiveness
updated API URL constants in EaseeBindingConstants . java to use new API endpoints to improve consistency and accessibility across the application
increased read timeout from 2 seconds to 3 seconds and added startup retries for Kafka container to improve test reliability and robustness
updated matchers in SearchResultMatcher to use ` is ( itemName ) ` instead of allOf for UUID and name matching to improve clarity and
added SSL support and improved certificate trust validation in OkHttp . java to enhance security by ensuring all certificates are validated and validated
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController to use AssistUtils for assistant functionality to improve code
added a new file ` HyperlinkFormula . java ` and changed ` StringPtg . java ` from ` byte ` to ` int `
added null checks for stdout and stderr in ShellStep . java to ensure robustness by avoiding potential NullPointerExceptions
increase timeout on slow machine for asyncappendertest
updated the ` escapeDatabaseObject ` method to use ` objectName ` instead of ` tableName ` and ` schemaName ` directly to improve consistency and
mow - 512 fix hover style for ok button , disable ok until some button be press
added state management functionality to ShadowDisplay and its test to ensure proper state changes are applied to other instances of the same display to improve compatibility with different SDK
[ geos - 10863 ] added support for direct operation in the ows service .
gwt : allow x and y as synonym for x and y
updated SQL queries to accommodate server version differences to ensure compatibility with PostgreSQL versions below 9.0
added @ Nullable annotation to the message variable to indicate that the message variable should not be null
updated method signatures and variable types in FileUtils . java to improve type safety and ensure correct URI handling for resource paths
updated RemoteCollector initialization to correctly handle application - specific monitoring URLs based on application type to ensure accurate application monitoring and context display for Jenkins applications
refactor ` HeadersBeanDefinitionParser ` to use ` resolveAttribute ` for attribute resolution to improve handling of " security . headers . disabled "
Protobuflogreader : do n ' t throw eofexception for malformed edits at the end of the file ( # 1067 )
destroy nacos registry on destroy
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor goaway frame handling to support both SPDY . V2 and SPDY . V3 versions to enhance compatibility with SPDY
updated formatting and added assertions in AuditEvent and AuditEventTests classes to improve code readability and ensure correct handling of JSON data
updated rounding error return values from ` a ` to ` a ` and changed the ` cbrt ` method from ` a ` to ` 0 ` to
fix rename default path in world editor
store dx executable path in variable before add it to builder
added assertions to verify point range queries in TestPointQueries . java to ensure correct type checking and point range query instances
hbase - 26946 testhfilecleaner fail on window due to race condition
update file label display to reflect file size difference between downloads
remove unnecessary throw in jedisclustercommand
[ hotfix ] [ stream ] set rowtimeminibatchassgineroperator chain to always true
replace ` RegExpBasedFilterInvocationDefinitionMap ` with ` PathBasedFilterInvocationDefinitionMap ` in ` FilterInvocationDefinitionSourceEditor ` to enhance URL
updated HashMap and QMapWriteBenchmark classes to include parameters for load factor and iteration to enhance test coverage and ensure correct behavior under varying load
initialize G _ SCH _ B in HybridPlotWorld to ensure G _ SCH _ B has a defined initialization state
added checks for null and empty fields , and refactored identifier handling in GroovyEngine . java to improve robustness and clarity of method resolution
ticket # 4810 : make sure all dependent drawable be invisible in av
added server configuration options for TCP keepalive and TCP keepalive settings to improve server connection management in the Hive server ' s configuration
change method name from getRenameEmptyFiles to isRenameEmptyFiles to improve clarity regarding the purpose of the method
no effective change - code cleanup - remove unused import
remove dependency on joda - time for realtime segment relocator ( # 9452 )
remove useless assignment to success variable
None
update error message to accommodate Spring Security 4.0 schema changes
updated multiple assertion classes to enhance clarity and maintain consistency in naming conventions
( chore ) camel - disruptor : make field final
added a new UDF class ` TestConfigureUDF ` for configuring Hive expressions to enable testing of the ` testconf . udf . test ` function
update regex pattern matching in LogMessageWaitStrategy and enhance test coverage with parameterized tests
simplified logger instantiation by removing final modifiers to improve code readability and maintainability
replace instances of ` updatePurgedShardShards ` and ` updatePurgedShardNodes ` with ` deletePurgedShardNodes ` and `
added support for a new Java version " 17 - preview " in JavaLanguageModule to enhance language options for users and improve user experience
polish ` ` wait for compression job to finish ' '
if we do n ' t have access to a location , do n ' t try and read it
in progress - issue batch - 1598
removed several unused base58 fields and updated error handling in JsonRpcApi and TronJsonRpc classes to streamline code and improve error reporting consistency
refactor variable assignment for clarity to improve code readability and maintainability
update longtasktimer to use basetimeunit ( ) . assecondsecond ( ) for all metric ( fixes # 466 )
# ! [ euphoria - flink , euphoria - client , euphoria - flink - connector ] do not
changed variable types from String to CharSequence and updated value retrieval logic to improve type safety and flexibility in handling color and preference values
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and update related methods for consistency to improve clarity and maintainability of the
added a constant for the maximum number of tweetweets in the conversation to limit the processing of replies based on user - defined limits
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to improve the responsiveness of the authentication process
fix : get persisted byte size correctly for fully acked delete tail page
fix classloading issue with glowserver
refactor the ` grow ` method to use a new private method ` grow ` to improve code readability and maintainability
added import statement for java . io . DataOutputStream to enable data output functionality in the GdxSetup class
camel - 20297 camel - attitude : add getsubmittedfilename method to be able to retrieve the filename of a part
added a call to markReadForLoad ( ) in LauncherFragment . java to enhance functionality to mark items as read when loading
added exception handling for NegativeArraySizeException in JarInstrumentor . java to improve error reporting by skipping invalid class sizes during instrumentation
added a method to check for spill availability in HashAggTemplate to ensure proper handling of out - of - memory errors during partition selection
changed the variable name from ` info . info . getDocStoreSegment ( ) ` to ` dsName ` in ` IndexWriter . java ` and
added a default name ID format in ` SamlProfileSamlNameIdBuilder ` to ensure compatibility with a non - empty list of supported names
added redirection and error handling for password change operations to ensure users receive proper feedback and prevent password change failures
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent potential compilation issues
add maxidle time unit to nio receiver mbean .
deleted the FontScalingTest . java file to the font size test was deemed unnecessary for the current environment
[ rrd4j ] fix invalid rrd4j filter date range ( # 1361 )
added checks for non - positive numVectors in GenericUDAFComputeStats . java to ensure that processing does not proceed with invalid vector inputs
test : migrate executablereftest to junit 5 ( # 4460 )
added null checks for view and glass pane before setting them to null to prevent potential NullPointerExceptions when view is null
camel - 13557 : added support for expression in wiretap endpoint . thanks to jens kleine - herzbruch for
change access modifier of setAction method from public to protected to restrict visibility to enhance encapsulation
[ trivial ] add topn support
[ java ] remove unnecessary construction of aerondirectory in client test .
fixed - rbatch . execute ( ) and pingconnection ( ) method do n ' t update queued attribute properly if connection be n ' t queue .
refactor HiveConf to replace InputStream with URL and add null check for confVarURL to improve resource management and prevent potential memory leaks
updated the device used in the model creation to ensure the model is created from the correct device based on the criteria
added methods to handle menu item selection in SimulationViewer to enhance user interaction with the motor details option menu
pdfbox - 4071 : fix typo find by codespell on fossies . org
add a way to specify the parent directory of the hawtio - server to run the test
added handling for empty comments and whitespace to improve whitespace processing in the Space . java code
make dictionary class volatile to ensure visibility
added printStackTrace ( ) method to Throwable to improve error handling by providing stack trace information for exceptions
make spongecommon customitemdroptest an integration test , rather than a simple test .
added ' ifNotExists ' functionality to manage partition existence checks to enhance the handling of cases when a partition does not exist
volume upload : fix potential oom error
[ java ] remove unused controlrequeststreamid method .
[ geos - 8042 ] wfs 2.0 capability transformer add spatial operator support
added import for LuceneTestCase and annotated the BasicDistributedZkTest class to address issue SOLR - 2161 as a known issue that requires a fix
improve handling of parsing of keep - alive http request .
[ java ] default the isinclusive to false for cluster . isempty . so it be the default .
hbase - 27893 remove cache configuration from jobproperties if absent
added running record count functionality to JSONRecordReader to improve tracking of the number of records read in JSON processing
added year filtering to merged items in CategorizationFragment . java to ensure only items matching the year are removed from merged items
updated drawColor calls to use a constant PorterDuff . Mode instead of a literal hex value to improve code readability and maintainability
added OpenGL version check in render method to ensure compatibility with OpenGL ES 2.0
fix for issue 146 : set correct action context
modified methods in ` BaseSemanticAnalyzer ` , ` QBParseInfo ` , and ` SemanticAnalyzer ` to support database name prefix to en
added a connection timeout setting and made the count variable final in StubConnection . java to ensure the count variable remains constant throughout the codebase
[ native ] add sanity check for approx _ percentile query
updated DEFAULT _ IDLE _ TIMEOUT to a fixed value and refactored timeout handling in WebSocketChannel to improve clarity and consistency of timeout
updated the method of retrieving shares to use the user ' s account name instead of the account ' s name
fix java . lang . unsupportedoperationexception when try to resolve ipv6 address that do not exist .
make button and progress update timing consistent .
remove internal use of session . idinternal ( ) .
change ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to ensure that
disable exception probability by default
updated the color assignment for the app icon based on whether the icon is the THEME or not to ensure correct color representation for different icon types
ticket # 269 : add optional dependency injection for mysqluser class .
added " centre " alias to aliases to enhance clarity and organization of the code
added DirectUpload class and injection method to CommonsApplicationComponent to facilitate dependency injection in the Commons application
added space spacing for left and right axes in BarChartActivity and updated related logic in BarLineChartBase and YAxisRenderer to improve visual clarity
added additional ABI flavor constants to the AndroidLibraryDescription and JavaLibraryDescription to support verification of source ABI in the Java library configuration
added operation event status type to request parameters and initialized the services list to ensure proper handling of operation events and prevent null references
fix for http : / / github . com / openjdk / openjdk / issues / detail ? id = 6662 , where tag
[ beam - 8470 ] rename startbundle to setup and teardown for javadoc
added classpath specification for the ProcessBuilder in SortedArrayStringMapTest to improve flexibility by allowing dynamic classpath configuration
updated the file path handling in PackageResourceLoader . java to ensure consistent use of the platform - specific separator for resource loading
[ fix ] [ doc ] fix maxby ( int ) and maxby ( int ) documentation
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable the test due to a known issue b / 243855320
updated error message formatting to escape percentages to improve readability and consistency of error messages in tests
fixed - jcache . close ( ) method do n ' t update cachedconfiguration object . # 4747
fix log level of exception in commandcontext . close ( )
added an initialization block for ALPNClientConnectionFactory in HTTP2Client . java to ensure proper setup for ALPNClientConnectionFactory
entitypropertiespacket : use basevalue instead of instance . getvalue ( ) to get max value
change sonosaudiosink to check the handler be initialize before play notification sound ( # 1630 )
change await timeout from 500 milliseconds to 5 seconds in ContextRegisterListenerTest . java and SpringMvcClientBeanPostProcessorTest . java to allow sufficient time
change log level from info to debug in LightThingHandler . java to provide more detailed logging for troubleshooting without flooding the logs
in case of rejectedexecutionexception , try to return to the queue for next turn .
updated method signatures and formatting in Reporter and ReturnsSmartNulls classes to enhance code readability and maintain consistency in method parameters
change parameter type from Frame to DataFrame in generate method to improve code clarity and reduce casting overhead
refactor multiple module - info . java files for consistency to improve code maintainability and readability
fix hive issue with use column name with empty column name
fix mix ( ) call in engine
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
fixed sign issue with qr code black box implementation .
simplified the check for ` leadingIncludePaths ` to improve code clarity and maintainability
apps - 2147 fix npe on matrix vector multiplication
add ` ` find ' ' and ` ` findall ' ' method to selenium proxy for search
fix passthrough for audio format with no sample .
added getter and setter methods for ` getFormula ` and ` setFormula ` in the ` XSSFName ` class to enhance the functionality of the
increase scaling factor in test to avoid false failure
updated the length check condition in ` SimpleTypeGT . java ` and added a new test method ` testPatternSchema ` in ` GMLParserTest
added unit tests for the ClassPathXmlJobRegistry class to ensure the job name retrieval functionality is correctly configured and verified
fix wrong data type on motion pause
camel - 12320 : camel - restlet - deprecate option in favor of advance api .
camel - 14263 : camel - log endpoint should use source code generate configurer to avoid reflection configuration .
refactor code to encapsulate event creation logic into a separate method to improve code readability and maintainability by reducing duplication
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to limitOrders to avoid adding invalid orders to
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to improve image processing accuracy and handle potential layout errors
ruby timestamp do not support unconverted ruby
added a condition to return the resource if its path ends with a slash and created a test for verifying that the real path does not exist to ensure
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER to ensure
fix jedittextarea to correctly set scroll amount
skip decode graph with no caller loop scope
test : migrate sniperprettyprintertest to junit 5 ( # 4469 )
replace direct instantiation of URLOutputStream with a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added @ Entity annotations to the Mail class in Mail . java to enable Morphia entity mapping for database integration
change default value of includeTablespace from false to true and update output messages to reflect this change to ensure that tablespace of tables and indexes are included
added getter methods for metaDataBuffer and valuesBuffer to improve accessibility of buffer data type for better resource management
added a check for non - empty file before clearing empty field vectors in ScanBatch . java and created a test for handling empty files in TestJsonReader .
updated failure strategy to include an internal custom name to enhance flexibility in failure reporting with custom comparison failures
added a regex pattern for checking library compatibility to improve flexibility in detecting compatibility issues with different library types
replace specific exception handling with a more general Exception catch in JrtJavaBasePackages and PackageHelper classes to improve error handling flexibility and maintainability
hbase - 25819 check dfs usage during startup ( guangxu cheng )
updated error message formatting in TranslatingJavacPhaseTracer to include the exception class name and message to improve clarity of error reporting for debugging purposes
[ mng - 7430 ] remove the descriptor cache from defaultplugincache ( # 7430 )
fix update of jabber resource when go offline .
improve documentation and clarify usage
added a new integration test class for fetching account information to ensure that the PollingAccountService correctly retrieves account information from the BTCE exchange
added mouseWheel methods to VDUInput and vt320 , and implemented mouse report logic in TerminalView to enhance user interaction with the terminal
set the correct library path for natives
no effective change - code cleanup - remove deprecate columnhstore annotation
fix checkstyle issue in entity / passivecode / glowplayer . java ( # 711 )
make test use http and https url
fixed - npe be throw when remove non - existing member during event processing .
replaced direct access to system property ` os . version ` with a privileged method using ` AccessController ` to retrieve OS version to enhance security by
updated the file suffix handling in TemplateEngineFreemarker to allow dynamic configuration of the freemarker suffix to enhance flexibility in template
updated hash code calculation in SelectMessageQueueByHash . java and added multiple select message order tests in SelectMessageQueueByHashTest . java to ensure correct message
kristianrosenvold : add animation for the toolbar ' s dock
fix caret bug
refactor platform handling in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to utilize CxxBu
replaced SimpleParameterAccessor with ParameterAccessor in multiple classes to align with the new query parameter handling approach
added a null check for the passwordAttribute before setting it on ldapAuthenticator to avoid potential NullPointerExceptions when passwordAttribute is null
[ hotfix ] fix handling of default value array
updated SslContextFactory to handle null address cases to ensure proper SSL engine configuration based on client authentication requirements
make testfstabledescriptors pass if cache hit be > = rather than = =
simonstewart : add a ` ` wddeletecookie ' ' function to the ie driver .
added a new boolean field ` mHasEndedLauncherTransition ` and updated logic to ensure controllers are reinitialized only after the launcher transition has finished
added UTF - 8 charset to HTML tags in HTMLListWriter and HTMLWriter to ensure proper rendering of meta tags for HTML content
refactor IndexReader class to improve code readability and maintainability
increased maximum stats key prefix length and refactored path handling in multiple operator classes to improve memory usage and ensure consistent path formatting
added a new class ` bug6337518 ` and modified ` BasicComboBoxUI ` to incorporate it to address bug 6337518
pdfbox - 4892 : fix typo find by codespell on fossies . org
refactor UserInfoActivity to improve code readability and maintainability
added HomeContentProvider imports and updated content resolution logic to ensure proper handling of content updates in the application
added functionality to handleStayPressed and invalidating the background in ` BubbleTextView ` and ` Launcher ` to improve user experience by allowing
updated getFallbackResponse methods to include an error parameter in multiple classes to provide more detailed error handling capabilities for fallback responses
removed the check for ` _ compile _ only ` in the condition to simplify the if statement for better clarity
added null checks for tags array length to prevent potential NullPointerExceptions when accessing array elements
update regex regex regex pattern handling to support multiple matchers to enhance flexibility in matching flexibility in SQL patterns
added functionality to set and update the action bar title in FileActivity and call updateActionBarTitle in FileDisplayActivity to improve user experience by ensuring the correct
updated the method to retrieve the last converted element in PythonDslProjectBuildFileParser and added a new test for concatenating lists in ConfigSettingIntegration
set hour to zero for the cleaning service to ensure the cleaning service starts at a specific time
updated TransactionalValidationListener to handle table partitions more effectively to improve validation logic for partitioned tables and enhance error handling
added comment to clarify that polling should be disabled
changed the data type of generatedKey from int to long and modified SQL execution logic to handle auto - increment keys to ensure proper handling of generated keys and
updated the variable name from ` proxy ` to ` _ rc ` in the ` SimpleReferenceCache ` class to improve code clarity and consistency
improve error message when fail to inline test
http client and http server : decrease default keepalivetimeout to 10
deleted the HttpTestAccount001 . java file to remove obsolete test code that is no longer needed
changed exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and updated test cases in ` DispatcherTest . java `
camel - 7999 : camel - cxf - should not set xop on attachment if not cxf message
added support for the ' ~ ' character in the ClientUtils class to enhance functionality to include additional character in pattern matching
camel - slack : delay slack message to 10 second instead of 1 second
make blockutil # getblockitemsfromblock return a modifiable list of drop item , similar to the old drop utility .
increase the minimum required layout for layout components to improve layout responsiveness and user experience
added a new file ` bug8057791 . java ` to test the rendering of a JList using ` NimbusLookAndFeel ` to
refactor flag assignment logic in LambdaToMethod . java and add new interface LambdaInterfaceStaticField . java to improve clarity and introduce a new static
fix p2p problem when both vert . x and netty have the same web socket address .
replace string length check with null check to improve null safety in ComposeActivity . java
refactor ParquetFixedWidthDictionaryReaders to handle integer reading with a dictionary conditionally to improve data processing accuracy and performance
update logic for handling app stacks and divider bars in PortraitPagedViewHandler to improve layout responsiveness based on device orientation and landscape orientation
added a new annotation ` Log ` and an ` LogInterceptor ` class for logging functionality in the ` aop ` framework to improve logging capabilities
updated thread state logging to handle empty trace arrays to improve robustness of thread state information display
updated CacheGenerator and CacheProvider to use Implementation parameter instead of KeySet to enhance cache specification flexibility by allowing different implementations
updated the creation of the ReferenceMap to include the total frame size parameter to ensure proper handling of the total frame size when creating the ReferenceMap
polish javadoc for typesafe config
camel - 16400 : added karaf feature for graphql component .
removed the main method from RFE2891944 . java and added two new test methods for bug 1 , bug 2 , and bug 3 to handle
replaced URL encoding with direct values in HttpClientIntroductionAdvice . java to simplify code by removing unnecessary URL encoding
refactor the unsupportedPlatformTool implementation to use a dedicated Tool class to improve code clarity and maintainability by encapsulating related functionality
make recovery timing more robust
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a standardized way to retrieve the number of entries
[ drools - 7 ] [ kie ] initialize addressmanager1 ' s index with random .
updated column specifications and layout specifications in VLCVideo . java to improve layout flexibility and user interface consistency
change bisq / bitsquare to bitsquare / bitsquare
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker . android . tw
update user configuration path and enhance user model parsing logic to ensure correct user identification and improve error handling
added a call to glBindBuffer with bufferHandle in VertexBufferObjectWithVAO . java to ensure the buffer is bound to the correct OpenGL array
refactor ServerHttpSecurity configuration methods to improve code readability and maintainability
added a JUnit 5 @ Disabled annotation to the PostgresStoredProcedureIntegrationTests class to temporarily disable tests that are not ready for execution
added default headers support in HttpClientProperties and CasCoreHttpConfiguration to enable customized HTTP headers for the HTTP client
return user not valid error code when credential be not valid
deleted the NoOpConfigPathGetter . java file to the configuration path getter class was deemed unnecessary for the current codebase
handle jwt key with either 0x or not ( # 3657 )
updated import statements and added checks for float properties in FloatUtil . java to improve handling of float values and ensure proper constant usage
improve documentation of planningfactproperty and related functionality
updated the ` getDefaultHeaders ( ) ` method to return a ` MultiMap ` instance instead of a ` CaseInsensitiveHeaders ` to enhance header management
refactor ` ProxyServer ` and ` Realm ` to replace ` String ` encoding and charset with ` Charset ` instead of ` String `
added a method ` getJobId ( ) ` to retrieve the ID of a job execution in ` StepContext ` to ensure that the integrity of job execution
updated comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use Long . compare instead of compareTo directly to improve performance and clarity by le
change jdk http client log level to debug
updated import statements in LegacyAuthenticationHandlerAdapter . java to include specific authentication handlers
changed the access modifier of the WingDings class from final to public to allow wingDings to be accessible outside its package
filtermanager : do n ' t remove the filter from the network if it ' s our own
relates to github # 1063 . fixed class refactoring .
make sure we close the output stream even if there be an exception
added a new test method ` testSelectAllFromView ` and updated column name extraction logic in ` HiveBaseResultSet ` to improve test coverage and
refactor FocusTransitionTest class to improve test readability and maintainability
ticket # 4810 : fix compile error
added null check for sourceTask before retrieving job instance and improved error handling to enhance robustness and robustness of job retrieval
no logical change : remove trail whitespace
refactor color selection handling in AppearancePanel to utilize ChangeListener for responsive color selection to improve responsiveness and user experience when the
pas ` ` hidden ' ' instead of ` ` false ' ' in taskhelper
fix test which randomly fail on slow ci server
pdfbox - 4892 : close randomaccessfile after use , a suggest by valerybokov
added an import statement for DefaultParameterHandler in LanguageDriver . java to utilize the DefaultParameterHandler in the codebase
lsra spill spill optimization be now controllable by default
fix test case for groovy project generation
fix ( sql ) : make sure pgstatement and pgresultset do n ' t call close ( ) twice ( # 1162 )
set default value of serviceAdvisorType to PYTHON to ensure the service advisor type defaults to Python
avro - 2287 . java : fix race in avro schema avro schema reader . get resolvingdecoder ( ) by cache the resolver
changed the constructor and methods in Path and PdfContentStreamProcessor to accept a List instead of a Collection and updated the internal buffer writing method to
replace instantiation of byte array with a memo variable to ensure consistency in memory usage during tests
added a method to set personalisation parameters for a date to enhance the functionality of the SkeinParameterSpec class for better date formatting
removed redundant code block from CodeGenerator . java to streamline code for better readability and maintainability
removed unnecessary direction parameters from the scroll method calls to simplify method usage and improve code clarity
changed the access modifier of ` pointer ` from private to public and added getter and setter methods for ` pointer ` to allow external access to the ` pointer
rename content digest history to bdc
fix : make sure we can convert boolean to ternary
replaced the use of ArrayList with a boolean flag for determining if all accepted media types are accepted to improve clarity and correctness in determining acceptance conditions
removed a redundant import statement and added a default value of false to streamline code by eliminating unnecessary dependencies
added support for auto - increment columns in Liquibase data type classes to ensure proper handling of auto - increment columns in the database schema
set default errortext to ` ` command fail due to internal server error ' '
updated imports in DeadListenerTest . java and LocalManagementTest . java to replace TestLibrary with ProcessTools and Utils for enhanced performance testing capabilities
change method calls from add to push for currentStatus and boosterStatus to improve synchronization in the simulation process
added support for AJP connector integration in GitBlitServer to enhance server capabilities by allowing dynamic port binding
added intersection type handling in TransTypes . java and created a new Intersection03 . java file to ensure correct type coercion for classes with intersection types
changed the class name from EmbeddingTest to EmbeddingITest to better reflect the intended functionality in the test context
refactor toolkit thread initialization to check if it is active before starting it to avoid unnecessary thread creation and ensure proper thread execution
[ gr - 46711 ] add an option to compress the bundle in parallel .
hide surface in case of linux
updated the temporary directory initialization to use the class name instead of a hardcoded string to improve flexibility and avoid hardcoding the string
added configuration parameters to enable full node and solidity node HTTP services to provide configurable options for enabling these services based on configuration
added a service property to the GoogleCloudFirestoreTicketDocument class to enhance ticket management by associating with a specific service
refactor Generate . java to improve code structure to enhance maintainability and readability
fix : json _ format ( ) should return java null
None
make freemarkermanager # getconfiguration non - final by default
( chore ) camel - osgi - util : add unit test for configuration exception
updated AppleTest . java to set device Udid based on the platform name and added sdkName in IdbRunTestsStep . java to ensure correct
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to change response handling and logging from error to warning , and modified test cases for consistency to improve
refactor the binding and execution of the root script and state saving logic to ensure scripts are properly initialized and executed during initialization
added a condition to set shadow layer for TEXT _ BURN in the Utilities class to ensure proper rendering of text in non - text contexts
added cleanup methods for database teardown in TestColumnAccess and TestReadEntityDirect to ensure proper database cleanup after tests are executed
added a line to retrieve a parser by its name in SecurityNamespaceHandler . java to enhance functionality by allowing dynamic parser configuration
fixed an edge case in the BoundedLocalCache ' s fastpath logic and added a test for synchronization in BoundedLocalCacheTest to
refactor RawConnection to extend WebSocketConnection and implement complete and flush methods to improve WebSocket connection handling and allow for asynchronous writing
added test cases for ` all _ assertions ` methods in ` SoftAssertionsPerfTest ` to ensure that all assertions function correctly with various assertions
added exit code handling for test failures in PythonRunTestsStep to improve error reporting for non - successful test executions to ensure that the expected exit codes
updated GlyphLayout to handle character advancements more effectively by adding a check for markup availability
refactor score comparisons in TestBooleanRewrites to use streams for improved readability to enhance code clarity and maintainability to streamline score
change enumClass assignment from getEnclosingClass ( ) to getSuperclass ( ) to ensure correct class hierarchy for anonymous classes
move player . flush ( ) from connectionmanager to player
added a check for whether the drawing process has already started to prevent multiple invocations of OnDrawListener to improve performance by avoiding redundant operations on the same
refactor code across multiple Java files to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to simplify static imports and conditionally return null for matchStatus to enhance code readability and improve rule
change the default return value of getBoolean for MEDIAPARSERV2 to true to ensure compatibility with the updated media parsing logic
add support for @Around _ type with aop on bean definition
added permission verification for TRUNCATE TABLE to ensure data integrity by verifying permissions before truncating and truncating partitions
fix recently introduce bug with global status , unable to login offline provider when request not from global status menu , but from the provider menu .
updated the random color generation logic to use a different base for color generation to improve precision of color intensity in color selection
refactor ScriptEngineFactory to improve code readability and maintainability
updated the handling of bitmaps in the HolographicViewHelper to use original and outline variants to improve visual representation and maintain consistent rendering
replaced multiple conditional checks for request method with a single method call to improve code readability and maintainability
multowireddocumulator : use pos tagger when phrase contain a word
remove unused import
updated class loading logic for HivePassThroughOutputFormat to differentiate between HivePassThroughOutputFormat and HIVE _ PASSTHROUGH _ OF _ CLASSNAME
refactor ChunkListener , BeforeChunk , and AfterChunk classes to improve code organization and maintainability
update validation logic in DOMBuilder . java to ensure valid range checks for character input
refactor graph handling in multiple classes to improve clarity and consistency in naming conventions
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , v2 ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing the interface with static and default methods along with a test class ` TestClass ` to
add support for password in keyselector with thanks to stephan
improve exception handling in LogResolverBean by replacing ThreadDeath checks with a unified catch block to enhance code readability and maintain
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
updated JGit version from " 1.0 . 0 ( 201106090707 - r ) " to " 1.1 . 0
allow path to be specify for httpclient introduction . fix # 651
added namespace support for ' transformer ' .
rename BACK _ FACTOR to REWIND _ TIME and modify duration calculations to improve clarity and accuracy in duration handling
added isScrollWheeling methods to CodenameOneImplementation , JavaSEPort , and Button classes to implement horizontal scrolling functionality to enhance user experience by
fix help command syntax error
fix typo : collection . map not collection . map
updated methods in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to replace references to getSeqFiles ( ) and getUnseqFiles ( ) with
polish ` ` remove duplicate override ' '
[ iotdb - 5668 ] project property : do n ' t synchronize rulesets when they change
fix a deadlock when look up sootfield with phantom field .
adapt to change in micrometer 1.11 . 1 ( fixes # 268 )
added methods for listener management and Gcode command creation in IController and its implementation in TinyGController , and updated BackendAPI to use IController
add a small horizontal rule to the pathological doc
use tty . print instead of system . out . println ( ) in test
updated method declarations for consistency across multiple Java files to enhance code readability and maintainability
updated condition to check for non - negative frameLength to ensure proper validation of frame length input
updated return values in IntFloatMap and IntIntMap classes to ensure consistent behavior by using the same value return values
refactor image handling to use a thread - safe variable for background image assignment to ensure consistent background image updates across the application
since now the messageconsumer handler be set to null during unregistration we should check nullity when processing message to avoid npe when processing message that be deliver after unregistration
simonstewart : remove the need for a native method to access the hasnextchild ( )
add null check to avoid npe
add more logging to the moobfilecache
refactored ColConvCCMTest . java to improve test readability and maintainability
replaced instance variable declarations with local variables for ` allowCovariantReturns ` and ` syntheticNameChar ` to improve code readability and maintainability
pdfbox - 4892 : use generic instead of raw type , improve javadoc
replaced the return type conversion from Float . toString ( ) to String . asString ( ) and added a new class X with a more generic class X
camel - 14263 : camel - file - consumer should use source code generate configurer to avoid reflection configuration .
added a new Runnable inside EventQueue . invokeLater for asynchronous execution to ensure UI updates occur on the Event Dispatch Thread for smoother user experience
updated message size calculation to use maxBinaryMessageSize instead of maxTextMessageSize to ensure consistent message size management across the application
fix : round steering value by one step .
replace usage of ` Arrays . equals ` with ` MessageDigest . isEqual ` for password equality check to improve performance and accuracy of password validation
updated JdbcSerDe to use LocalDate and LocalDateTime instead of Date and Timestamp for conversion to improve accuracy and consistency in date handling
update version number from 2 to 3 and modify metadata handling logic based on version to ensure compatibility with version 3 and improve data processing efficiency
allow flyway auto configuration with jpa dependency
added a call to sort the classes during initialization
added a method to retrieve the current stable stable state in LauncherStateManager and modified its usage in AbstractLauncherUiTest to improve code clarity and ensure
refactor SharedInformer class to improve code readability and maintainability
refactor memoryScope creation and scope management in TestCloseScope0 . java to support different memory implementations based on the Android version
increase the timeout for the adapt server to 5 second .
refactor CaptchaChannelProcessorTests to improve test coverage and ensure accuracy of validation logic
update owning collection even when the original item have change
add retry logic for save registry cache file to avoid frequent failure .
updated the variable ` trackingCFSDir ` to use ` directory ` instead of ` mergeDirectory ` to ensure the correct directory is used for tracking files
fixed bug 11112723 - unusedimports no long report false positive for import with generic
hive - 26400 : hiveiceberg insert overwrite with bucketed table ( prasanth jayachandran review by p
updated assertions in BootstrapTests to correct expected values and enhance test coverage for legacy SAML key validation
fix false positive for static field with enums
renamed the method from ` getAddressVector ` to ` getAddressVector ` and updated its usage for clarity to improve code readability and maintain
removed constants related to blocking comments to streamline code by eliminating unused constants
added IOException handling to the release method and introduced a new LockReleaseFailedException class to improve error management during lock release operations and provide clearer exception
change package name from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` in ` DataSourceInitializer . java `
fix ( ternary ) : do not transform operator twice
updated ByteBuddy instantiation to disable type validation to improve flexibility in bytecode generation
refactor ` JavacRoundEnvironment ` to replace ` DeclaredType ` with ` TypeElement ` instead of ` DeclaredType ` to
fix test flakiness on window
polish ` ` allow log _ file property to be reference from sys prop ' '
refactor ServiceApiRequest to streamline HTTP redirect handling by introducing a helper method to improve code readability and maintainability by central
added environment variables for service mapping and application ID in MicroserviceFactory to enable dynamic configuration of application and service based on environment settings
updated the way the process bean is set in ToeThread . java to ensure the correct bean name is retrieved for better clarity and functionality
changed DB _ PATH _ REGEX to static and added DB _ PREFIX for database checks in BaseAndroidTestCase . java to improve database management
update method to return unread count instead of numberNew to ensure accurate representation of unread count from the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for the virtual thread pool functionality to
added a ` limit ` parameter to the ` getAllOrder ` method in ` MarketOrderIdListCapsule ` and implemented a maximum count limit in
refactor user retrieval logic to handle null users to ensure safe access to session data and prevent potential null pointer exceptions
fix localfilesystem . match ( ) to properly consider relative path
added constants for maximum width and height limits and updated instance bounds to ensure dimensions do not exceed defined limits to improve data stability and prevent rendering issues
added logging functionality to CommonsHttpSolrServer and marked the request method as deprecated to improve error handling and provide a clearer method for setting connection manager
removed exception handling for document creation errors to simplify error reporting during document creation
refactor filename formatting to use lambda expressions to improve code readability and reduce boilerplate code
added a method to check if a string is a number and a separator is a number in SpellChecker . java and a corresponding test in SpellCheckerTest
removed unnecessary whitespace in the MESSAGE constant declaration to improve code readability and maintain consistency
refactor file action handling in FileDisplayActivity to utilize a dedicated method for OCFileListFragment to improve code organization and enhance maintainability
set daemon property to false in ReplicationHandler and wrap exception in a try - catch block to handle potential exceptions during replication logging
updated method call syntax in StoreCachedTest . java to ensure consistency in code formatting
rename the constructor parameter to clarify the purpose of the constructor and ensure proper handling of file columns in the StreamerLoader class
updated dependencies and descriptions in DependencyBank . java for better clarity and organization to enhance user understanding of backend - related functionalities and
added calculations for maximum recycled views in RecyclerView to optimize memory usage based on device profile settings for better performance
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure proper functionality of the build process
update baritone example baritonecontrol to work with mining
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality for parsing liquibase resources
added null handling support for null vectors in FilterOperatorUtils and corresponding tests in NullHandlingEnabledQueriesTest to enhance query optimization by allowing null
added validation for bootstrap method parameters to ensure the correct number of arguments and signature of the bootstrap methods are enforced
fix test on slow machine
clear the formatters in CucumberInstrumentation . java to ensure no obsolete options are removed during instrumentation
change the type of the contacts list from RegisteredServiceContact to DefaultRegisteredServiceContact and add a test for principal ID retrieval using a collection
updated the height calculation for workspace labels based on cell padding to ensure workspace labels are only shown when necessary to improve user interface responsiveness
updated assertions in ReplicationFactorTest to use assertRf method for consistency and clarity to improve readability and maintainability of the test code
[ gr - 16577 ] llvm be pre - initialized by auxiliaryenginecache . patchcontext ( ) .
removed the @ Ignore annotation from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to ensure the tests are
replace RuntimeException with JsonIOException in error handling to provide a more specific exception type for JSON - related issues
replace ` valueOf ` method calls with ` parseInt ` for value parsing to improve code readability and maintain consistency in parsing input values
updated error messages for clarity and modified file iteration limits to improve error reporting and prevent potential issues with directory handling
[ multistage ] [ segment - name ] check high level consumer segment name while create LLC segment .
added implementations of startActivity and startActivityForResult methods in ShadowFragment . java and corresponding test cases in FragmentTest . java to ensure proper
updated the return statement to use the current time instead of the current time in DueDateBusinessCalendar to ensure the correct time for accurate date calculation
update target CPU type to include " x86 _ 64 - none - linux - android " to ensure compatibility with additional CPU architectures
added a method to delete all file resources for an account in FileDataStorageManager to ensure that all related files are removed when an account is
updated help message to use ' - h ' instead of ' - ? ' for command - line option to improve user experience with command - line help
added a static method to createSuiteDescription and updated unique ID comparison logic to ensure unique IDs are validated and avoid potential null pointer exceptions
pdfbox - 4071 : do n ' t use the auto - barcode detector since it ' s the default
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor to simplify the constructor and eliminate unnecessary dependencies
[ fix ] gwczoomcontextfindertest : add range test
added support for dependency tracking in JRubyScriptEngineConfiguration to enable conditional activation of dependency tracking based on configuration settings
updated request handling to check for servlet path instead of the request URI to ensure proper validation of the request context
skip creation of already exist keyspace or table
updated WelcomeWindow to use a buffered image for improved image rendering to enhance performance by reducing the need for additional image manipulation
updated tuner configuration handling to use a unique name and improved error logging for buffer transfer failures to enhance clarity of tuner identification and ensure
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a test for ShBinary functionality to enhance test capabilities in the build process
added a condition to set includeString to " db : hsqldb " to ensure compatibility with the HSQLDB database feature
fix : javabinloader do n ' t handle eof correctly
[ gr - 16625 ] do not materialize host exception if it be empty .
exportjvmcito ( ) must call services . load ( ) if there be a provider
added unit test to verify duplicateCommandHandlerResolver usage
[ flink - 20865 ] [ configuration ] add fine - grained shuffle mode parameter
fix entityfishhook to properly handle modded block .
camel - 15836 - create an aws - sftp component base on sdk v2 , regen catalog
renamed ` commandRunner ` to ` stepRunner ` across multiple classes to improve clarity and consistency in naming conventions
changed the parameter name from useShortNames to compressPackageNames in GangliaReporter and related classes to enhance clarity and functionality by
added a check to return early if items are empty to improve performance by avoiding unnecessary processing when there are no items to display
added a conditional bean definition to ZipkinAutoConfiguration to ensure reporter bean is available only if it does not already exist
- add support for mdc property to xmllayout
added support for the " omitHeader " parameter across multiple classes to control the removal of response headers based on request parameters
fixed groupshape __ shapename property number return by getpropertynumber ( ) , add unit test
updated method call to use Description class for consistency to improve code maintainability and readability
make sure we update the scene hierarchy after remove a method from it .
check for null to avoid npe
added hashCode and updated method signatures in AbstractNamedObject , DatabaseSchemaCrawler , and TableRetriever classes to enhance object hash code generation and
wallet : set transaction confidence type to not _ see _ in _ coin .
allow client to specify header name in request . body ( ) etc .
fix ` craftinghelper ` to ignore ` _ conditions . json ` and ` _ factories . json `
hbase - 2594 addendum add log for region open failure
refactor credential comparison logic to improve readability and maintainability of the code
[ java ] client should not try to remove a subscription that do not have a image .
modified the destroy method to throw an InterruptedException to simplify process destruction process handling
fix oracle compatibility test
( chore ) camel - mail : do not try to connect mail store if not connect
added token validation in the parser to ensure there are tokens following a specified document stop to prevent parsing errors
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete
prioritize duration model ( f0 / duration ) over f0 / duration
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration of the email domain for identity
added read and connect timeout configuration constants and methods to improve configurability of request timeouts in the application
do n ' t execute processdeferredconcepts if there be no concept to save
added category annotations to RedisServiceRegistryTests to specify test categorization for Redis services
refactor ` FindDeprecatedMethodsTest ` to use ` Parameterized test ` with ` @ ParameterizedTest ` and ` @ NullAndEmptySource `
added a call to the superclass ' s paintComponent method in WaterfallPanel to ensure proper rendering of the component in the WaterfallPanel
removed unused import statements from multiple Java files to improve code cleanliness and maintainability
updated event signature handling in ContractEventTriggerCapsule and added getter / setter for eventSignatureFull in ContractEventTrigger , LogEventWrapper , and
modify filter condition to exclude sessionId from processing
paint background color to avoid clip
jbrules - 2623 : fixing error message when an invoker can not be find .
removed debug print statements from multiple Java files to clean up the code and reduce unnecessary console output
added a check for NaN scores before assertions in TestFieldCacheSort . java to ensure that score values are not considered invalid to improve test robustness
avoid concurrent modification exception in devicestate
added zeroTime method to handle zero - time values in ColumnSnapshotGenerator . java and created a test for date default values in MySQLIntegrationTest
replace occurrences of ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and `
updated the type of ` vsContext ` in multiple collector classes from ` Map < ? , ? > ` to ` Map < ? , ?
[ jbrules - 3511 ] allow to edit session model in kiecontainer ( # 2266 )
updated HiveMetaStoreClient instantiation to use ' this . conf ' instead of ' conf ' to ensure proper configuration context for metastore client
added a condition to prevent redundant processing when modalness changes
added unit tests for creating media codec profiles in ShadowMediaCodecListTest to ensure proper functionality of media codec profiles
fix # 5460 ( when enter key use , focus be wrong )
added validation for width and height , handled potential OutOfMemoryError , and ensured valid XRSurfaceData instance is used to improve robustness
updated the thousands separator from a dot to a non - zero character to ensure consistent formatting across different locales
fix stress test on slow machine
show a toast message for beta flavor in achievement and leaderboard
updated AccessMethodVisitor to use context ' s access , name , and desc attributes to ensure accurate access and desc values from the context
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java to improve test execution by allowing immediate handling of interrupted exceptions
corrected formatting in DLNAResource . java to ensure consistent code style and readability
camel - 7999 : camel - spring - xml - resequencer - make it easy to use the xml namespace in javadoc
fix possible deadlock in tablereader
flume - 522 . thrift source need to use ssl . keymanagerfactory . algorithm if available .
refactor ` getSingleSourceApplicableTest ` to include ` Applicability ` in both ` JavaSourceVisitor ` and ` TreeVisitor `
fix syntax error in blockmania
rename accessspecifier . package _ private to accessspecifier . none
renamed the method from ` unHandled ` to ` unhandled ` and updated its logging behavior to improve clarity of method naming and enhance
move get stripestats ( ) outside the finally block
added a null check for the exception before proceeding to avoid potential null pointer exceptions during execution
myhentaicomics . com should redirect to https , not http
add ' v ' command - line option to updateutils
fix export string for token
added default rotation handling based on keyboard state in ConsoleActivity . java and modified input connection methods in TerminalView . java to improve user experience by
fix unchecked warning in parallelmultisearcher
fix nullpointerexception on shutdown
add the ability to easily get the name of the headersmapfactory to the jolokia mbean
added quotation marks in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
added namespace support for ' outbound - gateway ' .
updated index reference in ArrayFunctions . java to correct the expected array value to ensure proper replacement behavior
None
updated the ` PooledConnectionImpl ` to include ` org . postgresql . PGStatement ` as a proxy instance and added a test
[ beam - 10670 ] refresh size estimate after each test to refresh bean cache
updated log level from error to warn in AtomicRemainder . java to better reflect memory usage limits
fix premature deletion of sstables with aggressive ttl
fixed - rqueue . poll and put method return nanotimeout + added test
fix format issue in jobinspectcommand
refactor Engine class to improve code readability and maintainability
refactor the stream and mapping logic in ChildHolder . java to improve readability and maintainability of the code
[ rip - 10 ] remove unused code and ignore test
change condition from checking for numIndexDims to checking for numDataDims in BKDWriter . java to ensure correct dimension count for data processing
[ hotfix ] fix npe in notebookserver
fix for ternary operator ( wrong precedence )
removed public access modifier from verifyIdsAreStable and getNodeId methods to improve encapsulation by restricting method visibility
bug 12608 : ensure that you have attach a volume before snapshot creation
removed public access modifier from write , flush , and clear methods in ItemWriter . java to enforce encapsulation
updated the initialization of the ThingImpl object to use a test identifier instead of an empty string to ensure the thing object is correctly identified as a test
added a ` toString ` method to ` ImageNameSubstitutor ` and created a test for it in ` ImageNameSubstitutorTest ` to
replace FSDirectory with RAMDirectory for directory management to improve performance and reduce memory usage during tests
replace direct assignment of lineHeight with a constant variable to improve code readability and maintainability by avoiding repetition
fix a comment typo in walletappkit
[ hotfix ] oqlengineimpl # getinputstream ( ) do not take into account the engine parameter hat . js
fix illegalargumentexception when remove transport filter .
added methods for resolving and replacing tokens in the data import handler to enhance functionality and usability in template processing
feat ( config ) : fix handling of optional bsq blockchaingroupexplorer
added attribute management methods in StandardSession and Session classes to enhance session attribute handling capabilities
added assertions to verify the name and age of the plain bean to ensure the correct retrieval of data from a JSON bean
update averages array size from pageSize to initialPageCount to optimize memory usage based on initialPageCount
refactor BatchCommandLineLauncher class to improve code readability and maintainability
added JDBC and JDBCTransactionManager bean definitions in BatchMetricsApplication . java to configure database connections and manage transactions effectively
fix checkstyle issue in util / glowrootloghttpservice . java ( # 724 )
pdfbox - 4892 : call setgraphicsstate ( ) instead of setgraphics ( ) ; set graphics state before call drawimage ( )
removed notifyAll ( ) method from DocumentsWriter and synchronized access in DocumentsWriterPerThread to improve performance by reducing unnecessary synchronization
added methods to retrieve properties related to multiple choice options and validation constraints in UiBinding . java to enhance functionality for managing UI options and constraints
updated method calls to use ` dexStore ` , ` dexSplitStrategy ` , ` source ` , and ` path . toString ( ) `
do n ' t update the tree copy when save a full tree
change affix . condition from string to pattern and add it to dictionary
replaced explicit diamond operator with the diamond operator in KrakenAdaptersTest . java to improve code readability and maintainability
removed unused CharTermAttribute import from DefaultIndexingChain to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class to improve code readability and maintainability
added a check for supported data encodings in VectorizedPrimitiveColumnReader to ensure proper error handling for unsupported encodings
added logging marker for static Admin UI files and improved logging consistency to enhance visibility of logged information for debugging purposes
destroy the metadata service proxy on instance destroy
tidy up default query repository and add unit test
modified the message construction for communication failures based on the presence of a changelog ID to improve clarity of error messages when the changelog is missing
try harder barcode decode now fail if try harder mode fails
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompile
removed unnecessary variable and simplified event counting logic in ObjectStore . java to improve code readability and maintainability
polish ` ` remove redundant support check for @ configurationproperties ' '
fix memory leak in entityawareworldprovider
added checks for exact type compatibility in IntrinsifyArrayCopyPhase . java to ensure correct handling of component types during array copying
remove workaround for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 45531
replaced the ` WantedAnywhereAfterFollowingInteraction ` class with a new stack trace format to improve error reporting by including the original stack trace
added checks for account existence and key address in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure proper validation of account and key
make it so you can sort the command alphabetically
chore : update java and python dependency ( # 86 )
set properties in BaseSingleTreeBuilder to use setProperty instead of addProperty for metadata properties to ensure consistency in property management
updated AsmLoader to initialize ` AsmLoader ` with a parent class loader to ensure proper class loading from the correct parent context
pdfbox - 4892 : avoid npe in rscurveto if no point be set
update export namespace handling in Java2TypeScriptTranslator to support declaration scope to ensure correct export behavior based on whether the declaration is a definition scope
replaced the EmptyServerHandler with an AbstractHandler to handle requests to set the response headers to ensure proper response handling for HTTP requests
updated inputManager listener calls to streamline listener registration for better readability and maintainability
hhh - 16662 avoid sqmpath . getleaf ( ) return null for empty leaf node
updated package declaration for ReadFolderTest and RenameFileTest files to ensure consistency in package structure and organization
None
[ gr - 16231 ] initialize libgraal before run api .
[ hotfix ] [ test ] remove unneeded dependency in pardotest
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 193 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
refactor CallStack class to improve code readability and maintainability
log warn when max - size per _ node config do not allow any data in map
update error messages from " AST " to " LST " in multiple files to ensure consistency and accuracy in terminology used within the codebase
if the number of thread and number of thread parameter be less than 1 , it will always be 1
replace AssertionError with returning null to simplify error handling logic
fix test on window by use the window ( ) method directly
add iterable . makestring ( ) variant to delegate to
replaced hardcoded value with a constant DEFAULT _ ORDER in OidcServicesManagerRegisteredServiceLocator to improve code clarity and maintain consistency in order management
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related instantiations to enhance flexibility by allowing a customizable weak
refactor Deflater class to improve compression handling to enhance performance and reduce memory usage
added error handling for IOException in Font . java to improve robustness by converting Throwable to IOException
( chore ) camel - core : fix empty string handle in versiontypebinding
fix null pointer exception in nearbylistfragment
modified content type check to be case - insensitive to ensure correct handling of text MIME type
changed the access modifier of AUTH _ MAGIC array from private to public and modified the key format logic in OpenSSHPrivateKeySpec . java
refactor item location and suggested folder hints updates to use a thread - safe batch execution to ensure proper handling of folder name suggestion based on feature
replaced specific Hibernate annotations with a wildcard import and modified the entity retrieval method to improve code readability and maintainability
updated the import path for DefaultOAuth2RequestFactory and added a method to TofuUserApprovalHandler to align with the correct package structure and en
fix influx name convention to not apply tag value ( fixes # 645 )
add dump method to facilitate debugging
updated cookie key in HttpURLConnection . java from " Cookie " to " Cookie2 " to align with updated cookie naming conventions
added a static method ` classMetadataUnsupported ( ) ` to ` Platform . java ` and updated references to use it in ` Subject . java ` to
added functionality to display a " Clear All " button in the OverviewActionsView based on user preferences to enhance user experience by allowing users to reset
updated the handling of the desired repository version and added a null check before creating it to ensure that the application does not attempt to recreate a cluster
remove memoryleaktest since it be a no - op
updated the return statement in ServletTester to use InetAddress for dynamic port retrieval to improve flexibility and support port configuration based on the environment
added a condition to check if MvDWAPI is enabled before proceeding with the MvDWAPI plugin integration to ensure MvDWAPI is
wait for cluster size before start a partition assignment test
added a singleton implementation for FFIProvider and modified its singleton retrieval to improve flexibility in handling FFI provider instances
add unit test for hierarchical file list in batchprocess
added null checks for ` mongoPersistentEntity ` and ` collection ` before saving to ensure that null values are handled gracefully to avoid potential null pointer exceptions
use a constant instead of magic number to save memory
added accTradeValue field and its getter method in BithumbTicker . java to enable tracking of trade values for trading operations
add segment name to log when collect realtime segment data
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` for thread management in ` OverseerTaskProcessor ` to ensure consistent
replace ArrayList with CopyOnWriteArrayList for header and data readers to ensure thread - safe access to underlying data structures in concurrent scenarios
add miss license header ( # 4104 )
added null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is null
try to fix the ci ci ci problem of camel - msv
updated comparison logic in DelegationService . java to ensure correct handling of account claims based on initial cycle
updated the RandomValueStringGenerator to generate a length of 10 instead of 6 to align with updated requirements
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of table names during object comparisons
refactor description handling and language code extraction in MediaDetailFragment . java to improve clarity and maintainability of the code
handle arrayindexoutofboundsexception properly
add withreferencefilter ( ) and withfilter ( ) method to listimagescmd ( # 1155 )
camel - 15791 : camel - jms - allow to turn off the bridge error handler a it ' s not support on the jms endpoint
added checks for specific OP conditions and default to true in OpExclusionUtils . java to ensure that no operations are excluded when no specific ops are specified
added return statements to the DatabaseCommand class to ensure methods only return false when executed successfully
add multichat operation set definition and gibberish protocol implementation
ww - 3452 beanshell init script should read from data file
camel - restlet should use port if configure to do so , not by default .
removed the WALL _ SIGN case from SchematicFormat . java to enable proper handling of sign blocks in the Schematic processing workflow
set the maximum query length to 100mb in QTestUtil . java and removed overridden configurations from SessionState . java to optimize query performance by limiting the
changed access modifiers of userName and ssl variables to private and refactored createHttpConnector method to use baseHttpConfig ( ) to enhance
[ hotfix ] [ connector / kafka ] fix typo in sink name .
updated configuration handling for Spark app name to ensure default application name is set when not provided in spark configuration
do n ' t throw exception for property that do n ' t exist
simonstewart : add the ability to maximize the window . this can be do a a part of test .
refactor methods in LocalCellProviderFactory and AbstractEmbeddedCellBuckOutInfo to improve structure and clarity to enhance maintainability by
added a null check for the error message in TestXMLEntityExpansion . java to ensure that the error message does not contain unexpected entity expansion exceptions
update table offset and length calculations to mask out sign bits to ensure consistent handling of integer values within positive range
removed the customize method that checks if customized is null in DirectMethodHandle to streamline the code by eliminating unnecessary customization assertions
refactor LineChartRenderer to improve memory allocation and coordinate bounds checks to enhance performance and prevent excessive memory allocation during rendering rendering
refactor flavor checking logic to use a for - loop to improve code readability and maintainability
updated buffer index from offset to i to ensure correct buffer allocation during rendering
added new classes Property and PropertySuper , and created a test class TestClassResolutionFail to handle resolution errors for properties and class files more effectively
remove shutdownhook when not run
updated FilterChainProxy to use FilterChjainProxy and simplified constructor parameters to enhance security management and improve code clarity
fix percentile aggregation to return double [ ] instead of collections . sort ( )
added checks to ensure the schema is loaded before loading tables to avoid errors when attempting to load non - loaded schemas
initialized ` baseType ` to ` null ` and initialized ` literalPrefix ` , ` literalSuffix ` , and ` localizedTypeName ` in ` DatabaseInfoRet
updated link syntax in multiple Java files to use { @ link } placeholders to improve link readability and maintain consistency across the codebase
replace instances of ` getInstance ( ) ` and ` getInstance ( ) ` methods with direct instantiation of ` ObjectEqualEvaluator ` and ` BOOLEANEqual
updated configuration references from " osx _ x86 - 64 " to " osx _ config " in BuildCommandIntegrationTest and ConfigSetting
added sound effect handling in AllAppsView . java to enhance user experience by enabling sound feedback feedback in the application
pdfbox - 4892 : do n ' t throw exception , a suggest by valerybokov
enable granularity for left axis in BarChartActivitySinus to enhance data visualization clarity and usability
refactor version comparison logic by introducing a separate method to improve code readability and maintainability
updated file handling in ContextHandlerGetResourceTest to use target testing directory and OS support checks to ensure compatibility with different Maven testing framework versions
added a close ( ) method to Connection and its implementations in JsonAsyncHttpPinotClientTransport , Connection , and other classes to ensure proper resource management
improve mockappender to reduce time sensitivity
[ beam - 4142 ] add check to ensure we do n ' t ignore the test
removed unused sprite batch imports from IsometricStaggeredTiledMapRenderer . java to streamline the code and improve maintainability by elim
fix misuse of handleservice . unbindhandle ( )
refactor Config and Attribute classes to improve code readability and maintainability
simplify touch event handling logic in OtherActivityTouchConsumer . java to improve code clarity and maintainability
updated NavbarButtonsViewController to use the UI _ MODE _ NIGHT _ YES and set navigation button tint color accordingly to improve button visibility based
[ junit ] make sure to abort if a language can not be find
6996192 : sun / management / jmxremote / bootstrap / bootstrap / bootstrap / classwriter / classwriter . java should use byte instead of
added support for BlockFormattingContext parameter in findBox and findElementBox methods to enhance rendering by ensuring consistent block formatting context is used
added error handling and improved logging in WorkerProcess and WorkerShellStep classes to ensure stability by gracefully managing process execution and standard error
added null checks and exception handling in CheckedListReplaceAll . java to improve error handling and prevent potential NullPointerExceptions
added volatile flags and a test method for writing on connect in SslConnectionTest to improve test reliability and ensure correct handling of connection write requests
added device configuration listener management in DeviceFlag and FeatureFlags classes to enhance responsiveness to device configuration changes
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests to temporarily disable tests due to issue gh - 1114
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve readability
[ # 7170 ] instructorfeedbackspageuitest : fix bug that result in ' no result find ' error
None
change console output to use standard output for class path entry logging
Sparserowmatrix : add support for shallow copy of row array
bug 8190 : add null check while delete volume ( volume id )
refactor file input stream creation and serialization logic in Utilities . java to improve flexibility in handling different Hadoop job configurations
[ beam - 8470 ] upgrade guava to v26.0 in udftestprovider
bugfix # 256792 - do not register memoryccprovider if not need
do not try to remove chat operation set that do not exist .
make sure save ( ) do n ' t overwrite an exist file before save it
added FolderSyncActivity to implement a new navigation drawer for syncing files to provide users with a way to sync data between the app and its
[ hotfix ] [ test ] replace with try - with - resources in sequentialchannelstatereaderimpltest
improve spanish tree normalizer to handle % sign properly
replace PointReader with heapPointWriter for appending point values to improve performance and simplify point value handling
added LocaleRandomizer class and its corresponding test to facilitate random selection of locale - specific locales
tika - 3864 -- add mime magic for font metric in tika - 3864
[ netbeans - 5870 ] upgrade java version to 10.0 ( non - final )
move the ` AccessController . doPrivileged ` call to encapsulate the ` run0 ( ) ` method to improve code readability and maintainability
fix ( net ) : set read timeout to zero by default
change the initial delay value from 120 to 600 milliseconds to improve monitoring performance by reducing the frequency of events
improve error message to include the previous column name
added support for custom date format in ThirdEyeJiraClient to enhance date handling functionality for users
refactor priority generation in HeadersGenerator to utilize a new PriorityGenerator class to improve code organization and maintainability by consolidating priority and
do n ' t resize class if there be too many class to replace
update projection test to include media . DATE _ TAKEN to enhance test coverage for media retrieval functionality
update image drawing calculations in TexturePacker2 . java to correct image dimensions to ensure proper rendering of images with improved dimensions
added support for lazy WebSocket upgrade filter in JettyWebSocketServerContainer to improve performance and reduce unnecessary WebSocket connection handling
shutdown validate sign service and transaction handle pool
added RawJsonRequestBody annotation processing to JaxrsSwaggerGeneratorContext and corresponding test cases to support raw JSON input handling in the API documentation
added a new method ` newTarget ` to the ` LoggerUtils ` class to create a ` Target ` instance with the specified ` targetType ` and `
updated BeanContainer to create a new ArrayList instead of an existing List and added a new BeanContainerTests class with a test for converting a List to ensure
hbase - 20542 fix typo in testmetricsregionserver
camel - 17806 : ensure temp stream cache be release on completion .
fix telnet protocol to set deviceid
updated method to read the first line from a character source instead of reading from a file to improve code clarity and ensure proper handling of character encoding
added a null operator check in JCAssignOp and created a new Test class for handling unknown values to ensure proper handling of assignment operations with null operator
added a boolean flag ` enableAccountHandling ` to control account handling in ` BaseActivity ` to allow conditional disabling of account handling in the activity lifecycle
use a more robust heuristically find main - connected component search ( # 2442 )
updated ` DrillViewTable ` to use a list of paths instead of a single view and made constructor parameters final to enhance flexibility
updated PooledByteBufAllocatorL to include additional configurations for memory allocation and caching based on system properties
modified ObjectInputStream to clone arrays of size short instead of double arrays to ensure consistent data type usage for array cloning
added configuration for the number of low - level IO thread pool to enhance performance and flexibility by allowing dynamic adjustment of thread pool size
update sun . security . ssl . debug and sun . security . ssl . ssllogger to jdk11
added bounds checking for latitude and longitude in LatLonGrid . java and improved test methods in TestLatLonGrid . java to ensure valid
danielwagnerhall : do n ' t show ` ` visibility of element containing ' … ' ' in the expected
added support for insert overwrites in the replaceFiles method to enhance functionality by allowing overwrites in file management operations
added a test for retrieving the enclosing object of SomeClass in ReflectorTest to ensure proper functionality of the Reflector class in unit tests
added a new configuration option " auto _ generate _ android _ facet _ sources " to the IllIJ _ BUCK _ CONFIG section and updated the
updated message formatting for hub communication failure logs to include the changeset author to improve clarity of logged messages by standardizing the output format
added properties list and corresponding getter / setter methods to Link class to allow configuration of properties for child quick links
removed unnecessary @ EqualsAndHashCode annotations and added an overridden toString method in YamlConfigFileDTO to simplify code and ensure proper string representation of the object
[ java ] fix raw type usage in awaitableserverclientcallconfiguration . java .
updated class loading methods to incorporate CallerSensitiveAdapter and improved caller - specific logic to enhance class loading flexibility and maintainability
[ ds - 3940 ] added auth to requestitemrepositoryit
use the threadpoolexecutorex , not the linkedblockingqueue
change visibility of setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
replace xstream converter with chronic format for now
shorten spark _ isolated and spark _ recessive to match vanilla behavior
updated Bitstamp and CampBXPollingMarketDataService classes to use ` getUri ( ) ` instead of ` ExchangeSpecification ` to
log4j2 - 1343 fixed println statements in recordgenerator
camel - 16401 : camel - kafka - remove auto commit from kafka consumer since it be now enable by default
release the lock in Liquibase and update logging statements in LoggingExecutor to improve resource management and enhance logging clarity during database operations
updated suppress warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests files to improve code clarity and reduce the risk of deprecation warnings
remove unnecessary sync in database class
camel - 17806 : camel - spring - boot - auto - configuration - maven - plugin must also add mutator to ensure they
use counter symbol instead of base symbol
camel - 7999 : fix the build error of camel - core
updated the way testId is set in HoneycombJdbcInterceptor to ensure the testId is retrieved instead of a generated UUID
added synchronization to date and number formatting operations to ensure thread safety when modifying date and number formats concurrently
updated package - info . java files for mmm and ppp packages
updated heightScale parameter in FractalHeightMapGrid . java from 256 to heightScale to enhance flexibility by allowing a customizable height scale
updated equality check for securityString1 to ensure proper comparison to avoid potential null reference issues
set default value of dumpPartitionId to false to ensure consistent default behavior
added imports and functionality for TronTXOutput and TronTXOutputs classes in UTXOSetTest . java to enhance transaction output management and
[ java ] unused local variable false positive for unused variable name
pdfbox - 4071 : avoid potential npe , a suggest by valerybokov
added unit test for job parameter overriding in JsrJobOperator to ensure correct job restart properties are returned
added a protected method disallowBatchOnCascade to the DatabasePlatform class to provide functionality for disallowing batches on cascading operations
refactor principal assignment logic in JaasAuthenticationHandler . java to improve clarity and maintainability of the code
refactor core shutdown process to use an ExecutorService for better resource management to improve thread safety and manage core closure asynchronously
None
refactor parameter handling in RunIdIncrementer to ensure a default JobParameters is used when none are provided
refactor BasicEntity and TestUtil classes to improve code readability and maintainability
[ iotdb - 4960 ] show device info output for schema region ( # 4967 )
[ 3.0 ] catch exception in metric event bus and log it ( # 9040 )
update EigenvectorCentrality . java to handle non - positive max values and add a new EigenvectorCentralityBuilder class for statistics monitoring to improve accuracy
updated registry port usage and formatting in LookupIPv6 . java to ensure dynamic port assignment based on test configuration
fix geometrygenerator so that ifc product OID can be use to store geometry data
fix block entity bee : set amplifier to 0 instead of 2
refactor TubeCalc . java to improve code readability and maintainability
disable health check immediately if no health check uri can be find
validator : add miss sanity check for group
added a timeout parameter to the main method for rendering the JList to improve stability by allowing additional time for the rendering process
updated the ScheduledExecutorService to use a daemon thread for thread execution to ensure that the application does not prevent JVM from exiting gracefully
fix version parsing in lexicon
added reflection access checking in JavaAdapterFactory to enhance access control for reflection - based operations
add option to turn off lazy session creation
updated ` initIOContext ` method in ` CombineHiveRecordReader ` , ` HiveContextAwareRecordReader ` , and ` RCFileRecord
remove loaderholder since it ' s no longer need .
updated file handling logic to check if the source paths exist and changed the method for updating workspace roots to improve file validation and accurately reflect
added try - catch blocks to handle potential exceptions when registering and unregistering session callbacks
updated index creation paths to remove " test " prefix to ensure compatibility with new index formats
[ hotfix ] [ rpc ] add helper method to createandstart
added retry logic for setting mapreduce . map . maxattempts to 3 to ensure more robust handling of failed exports
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a new test class SslConnectionTest to verify SSL connection behavior to ensure proper handling and closure of SSL connections in the application
added validation for address family and type in InetAddress and NetworkInterface classes to ensure that only valid address types are processed and improve error handling
added a test for date serialization in collection to ensure correct JSON serialization of date objects in collections
updated message handling logic to improve clarity and maintainability of message processing code
nifi - 7968 added log statement to putdatabaserecord for debug
update loop condition in TableOutput . java to correct calculation for running width to ensure proper alignment of output based on current width
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
[ fix ] formatstringchecker priority check pass .
[ java ] local variable could be final : add a false - pos rule
updated PDFExporter to support PDF compression and changed sample file name from " Les Miserables . gexf " to " Java . gex
add unit tests for LdapUserDetailsMapper to ensure correct mapping and handling of role attributes to improve test coverage for role attribute mapping functionality
make ldap . read . timeout a configurable ( # 4257 )
refactored TestDescription class to improve code readability and maintainability
renamed Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and clarity
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the state handler is invalidated in the gesture state check to ensure proper handling of gesture state when the state handler is invalidated
update folder creation distance and old rotation values in Workspace . java to improve visual consistency and responsiveness of folder creation functionality
updated imports and modified condition checks in OCIConfigConfigSource . java to enhance configuration handling and improve code clarity
refactor Testjsig class to improve code readability and maintainability
fix mana item take into account the stack ' s count .
regenerate client with updated copyright year ( # 4382 )
add @ suppresswarnings to fix ide warning
added error handling for empty and failed TsFile validation in DataRegion . java to improve robustness and ensure proper resource management during file operations
added new classes ` Switch21 ` and ` Switch19 ` to demonstrate string switch patterns and guard patterns to enhance code readability and
updated error messages in ComparableSubjectTest to reference the correct class name to ensure clarity and accuracy in error reporting
fix bug - streamhelper do n ' t handle standalone xml properly
updated comparison logic and improved error message formatting in Int2ObjectCache . java to enhance code clarity and ensure accurate array size validation
added order - based security filter chains and corresponding tests in WebSecurityConfiguration and WebSecurityConfigurationTests to ensure correct configuration order for security filters in
updated the order type from TimeInForce . GTC to null in BinanceTradeService . java to align with the latest API changes
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update its delegate implementation to enhance functionality and ensure valid range selection for float values
updated the key separator from ' \ 0 ' to ' \ tab ' to ensure consistent output formatting across the application
camel - 7999 : camel - jms component doc - fix return null when there be no jms component
added error handling in SourceUtils and created TestGetBound class to improve robustness of bound retrieval and provide a generic class for testing
refactor filter predicate handling in LeafFilterFactory to use a unified method for clarity and maintainability to improve code maintainability and ensure
added a check to ensure the original artifact name does not start with the SCOPED _ TARGET _ BEAN _ PREFIX before retrieving its length to improve
fix the issue that https - server fetch certificate fail to load due to certificate serial number
refactor default boolean retrieval and add DnsFallback class for configuration checks to improve code clarity and handle null values more effectively
ww - 4134 add miss import
change the ` success ` field from a boolean to a ` String ` for the ` url ` field in the ` DepositAddress ` class to provide
refactor the drop method to use a lambda expression to improve readability and ensure proper resource cleanup after use
removed " address " and " phone " scopes from the CommonOAuth2Provider to simplify the OAuth2 provider ' s scope requirements
fix # 5979 - deadlock in managedselector . start ( )
[ wled ] add the ability to set the color range of lwm2 and lwm3 in the wled binding ( # 11792 )
replaced the custom ` isValidCaller ` method with a static set of ` VALID _ CALLERS ` to simplify the code and improve maintainability
added a new method ` caseJSRInst ` to handle JSR expressions to enable support for additional JSR syntax in the InstSwitch class
ensure we always call activate and register subscription if need
refactor SQL query preparation and execution logic in DBMSProcessor . java to improve handling of metadata updates and database interactions
remove elevation support for contact item inflation
rename typeInformation to identifier identifier to improve clarity and consistency in variable naming
refactor file access in SandboxFileManager to use AccessController for security to enhance security by ensuring files are accessed in a privileged context
added support for binary access operators in Groovy parser and printer to enhance functionality for binary operations in the codebase
updated logger warning message to include the actual exception class name to improve error reporting for better debugging and clarity
updated character handling in RecordInputStream and UnicodeString classes to correctly convert unsigned byte values to short and added a new test case in TestUmlat
filedownloadviaproxy : add test for norway character
replaced RuntimeException with a CancellationException in AsyncResource . java and added cancellation handling in FingerprintScannerSample . java to improve error management by providing
fixed potential npe in timedmemberstatefactory
added a new test method to verify the removal of an object from an explicit collection in MongoTemplateTests . java to ensure proper functionality and behavior of the
update copyright year to 2022 for all file in the project
updated string formatting in Coder . java to improve readability by removing unnecessary newline characters
added functionality to forcefully finish the clear all button when expanded to improve user experience by ensuring a fresh scroll state
added COMMON _ HMS _ PROPERTIES constant and refactored parameter handling in HiveIcebergMetaHook . java to improve code maintain
added a method to check if the server addresses already in use and improved error handling to enhance clarity and maintainability of error reporting
added a classpath argument to the argument list in TestNestmateAttr . java to specify the custom class path for testing
updated schema text detail type from VERBOSE to verbose _ schema to improve clarity of output by using a more descriptive schema type
add @ override annotation and remove unused import
# 1631 - enh : add support for nested transaction use savepoint
change fetchSize from int to ThreadLocal < Integer > across multiple classes to enable thread - safe access to fetchSize in a multithreaded environment
[ java ] use noop idle strategy for ping pong to reduce load .
refactor blocking client exchange logic to use a new handleBlockingCall method to improve readability and maintainability of the code
added HDP _ VERSION configuration and logging to SliderAppsViewControllerImpl . java to ensure proper HDP version is set based on the configuration
refactor JavacProcessingEnvironment to use a ServiceLoader for ServiceLoader reloading and add close methods to improve resource management to ensure ServiceLoader references are
added DeepCloner to facilitate deep copying of parameters and methods in ParameterizedRobolectricTestRunner to enhance object cloning to improve flex
configure webserver . showstacktrace to false by default
added a check to return null if the provided object is of JSType . OBJECT to handle specific object type requirements
replaced occurrences of ` OopField ` with ` OopField ` and updated several static fields in ` SystemDictionary . java ` to improve
refactor ` JwkKeyListView ` to use ` PublicKey ` instead of ` RSAPublicKey ` and ` ECPublicKey ` to improve
[ gr - 166070 ] allow rocksdb to use onlywritablebootimageheap for isolates .
updated MBeanServerMXBeanUnsupportedTest . java to enhance test coverage for unsupported MBeanServer methods
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies and reduce unnecessary dependencies
added ` getOwnerAddress ( ) ` method to multiple actuator classes and updated validation logic in ` CreateAccountActuator ` and ` V
add a simple main ( ) that will make it easy to run the standalone
hbase - 20583 : zcount command require min / max to be positive
update protobuf annotation serializer to handle edge with empty source
[ java ] remove the correlationid from the asynccommandidset as soon a possible .
added conflict saving logic in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure files are consistently marked as conflict conflicts to improve handling
updated various methods and collections to use generics for type safety to enhance type safety and eliminate potential runtime errors
replaced usage of ` StrUtils . splitFileNames ` with direct calls to ` splitFileNames ` in multiple factory factory classes to simplify file handling by
added driver properties for remarksReporting and useInformationSchema based on the driver type to enhance database connection configuration flexibility
updated MockMethodInterceptor initialization to include a handler parameter and added a serialVersionUID to ensure proper handling of mocked methods during proxy initialization
updated time calculations in FileChangedExclusiveReadLockStrategy to use current time instead of deprecated date to improve accuracy in determining file trigger timestamps
[ hotfix ] [ table - common ] wrap classloaders in executioncontext
added thread - safe buffer change handling in TerminalView and TerminalTextViewOverlay to ensure proper updates to the terminal view when the buffer changes
simonstewart : if pid do n ' t contain . we need to check for the service pid . namespace in the pid file before process
fix ( tvm ) : do not disable tvm freeze v2
added support for insecure SSL connections in TlsConfig and updated related methods in TlsUtils to enhance security by allowing configuration of insecure SSL connections
refactor JavadocTool to use a conditional assignment for source path in searchSubPackages calls to improve code readability and maintainability by red
changed nodeColumns to edgeColumns and added an edgeIdColumn for better data handling to improve clarity and support for edge ID in graphing features
updated OneToOne relationship to cascade to ensure that the DefaultAddress entity is persisted with a cascade type
message . equals ( ) - > array . equals for good performance .
update ISO - 8859 - 1 character representation in test assertions to ensure correct encoding for ISO characters
[ hotfix ] [ rocksdb ] remove unused method in rocksdb serialized key builder
added a method to retrieve static permissions from ProtectionDomain to enhance security checks to ensure proper access to static permissions for ProtectionDomains
fix nullpointerexception when check for invalid recipe .
added parsing logic to handle comma - separated input in the parser to improve robustness by ensuring correct parsing of input
show connection error dialog on medium detail
added a new test class Issue596 to validate 404 handling for unhandled requests to ensure 404 is returned correctly for unsupported media types in the application
fix ( core ) : fix sign issue in nodebitmap
updated the ImportLayoutStyle class to improve layout management functionality
refactor ConsoleUIService to replace gitBashConfigValue with useStdIn and mintty parameters to enhance input handling flexibility
replace mocking with built - in test assertions in ShadowAccountManagerTest to simplify the test code and improve readability
do n ' t cache enclosingtype in analysistype . getenclosingtype ( )
corrected the spelling of property methods in Pairs and InPairsExpression classes to improve code readability and maintain consistency
removed the timeout parameter from the set method call to simplify the method execution and improve performance
[ issue # 5082 ] fix npe when consumer run info be empty ( # 5083 )
[ java ] generate source identity when connect to a new driver .
added a new class TopTabAction to handle toolbar actions for the Top tab in the application
camel - 7999 : dynamic router should use reactive engine to warn of dropped message .
updated import statements and refactored test class structure in AggregateItemReaderTests . java to improve test structure and align with JUnit 4 conventions
updated the Procedure constructor to use generics to enhance type safety and eliminate potential type safety issues
added functionality to display wikidata edits in AchievementsActivity and updated corresponding constants in NetworkingModule and OkHttpJsonApiClient to en
added a validation check for the length to ensure the length is within the valid range of Short . MAX _ VALUE to prevent illegal argument exceptions during execution
fixed bug about absolute value
renamed various dataset - related classes to improve consistency and clarity to enhance maintainability and readability of the codebase
enhanced error handling in ` InvalidTopologyTemplateException ` to include acceptable values for credential type to improve clarity and debugging when invalid credentials are encountered
updated the random number generation logic in TestVectorUtil to ensure that the vector elements are randomly initialized with a minimum and maximum value
pdfbox - 4892 : simplify , a suggest by valerybokov
testutil : add ssl property
simonstewart : enabling safe browsing by default in chrome
added null check before cloning the flight configuration in BaseMotorMount and RecoveryDevice classes to prevent potential NullPointerExceptions when updating the flight configuration
added a condition to disable transcoding in DLNAResource based on configuration settings
fix indexoutofboundsexception when diff table with empty list
added a custom ignore tag to the RobustJavaMethodParser to enhance parsing functionality by ignoring specific tags
( chore ) camel - sql : fix incorrect exception mapper
do n ' t require reflection for private method in order to use bean definition
refactor PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and update toolbar padding to improve UI responsiveness to enhance user experience by
deleted the ClusterNodeInfo . java file to the class was deemed unnecessary for the project
removed unnecessary whitespace in the return statement to improve code readability and maintain consistency
added debug print statements for selected ciphersuite in ServerHandshaker to provide visibility into the negotiated ciphersuite in debugging
refactor ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to handle the list of templates more appropriately to improve user
added duplicate label handling in ImportContainerImpl and associated parameters to enhance error logging and reporting for duplicate node identifiers during the import process
added a new file R2303044ListSelection . java for list selection functionality to implement a simple GUI that tests item selection in a list
[ java ] : make publicationregistration thread - safe .
added a null check for mWorkspace in Launcher . java to prevent potential null pointer exceptions when mWorkspace is not initialized
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the compound property name is not duplicated
refactor row count computation to use a local variable to improve code readability and maintainability
updated path handling and query parameter management in SpringBootDocBuildTemplate . java to improve clarity and functionality of API method documentation processing
minor refactorings to improve code readability . no functional change .
updated DistBuildSlaveExecutor to use CachingBuildEngineDelegate instead of DistBuildCachingEngineDelegate to conditionally materialize source files based on configuration to
improve exception message when response can not be parse
added a conditional debug log statement to the widget tray to optimize logging for debugging purposes
8316038 : fix doc typo in java . io . console and java . util . scanner
simplified the calculation of numTerms in SimilarityBase . java and added a new test for discount overhead in TestSimilarityBase . java to improve code
refactor assertions in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to use reflection for method invocation to enhance test flexibility
added ' exit ' and ' quit ' methods with corresponding properties to Global . java and removed the duplicate ' quit ' method from ScriptingFunctions . java
updated context retrieval for LoanBrokerGateway in LoanBrokerGatewayDemo . java to ensure proper resource management by using the application context
renamed methods from ` getFirstUnverified ` and ` getLastUnverified ` to ` findFirstUnverified ` and ` findUnverified `
[ vmware ] fix session cookie handle in vmware context
removed redundant whitespace in assertions to improve code readability and maintain consistency
fixed iv calculation in eckey
corrected the property key from " disabledMods " to " modStates " to ensure consistent naming convention for mod state management
refactor account selection handling in ` ReceiveExternalFilesActivity ` to simplify state management to improve code clarity and maintainability by consolidating
improve error message when unable to connect to client .
update error message when empty result from validator smart contract call
refactor JSON parsing to handle null values gracefully to improve robustness by preventing crashes due to empty file scenarios
remove unnecessary conditional check ( datasource and datasourcejndi )
updated memory allocation from 10 , 000 to 1 , 000 , 000 , 000 , 000 , 000 , 000 , 000 , 000 , 000 , 000 ,
if currentconsole be n ' t initialized , use system . write instead
[ flink - 20536 ] [ kinesis ] [ connector / kinesis ] set refresh delay for the kinesis connector to 100ms when
refactor AlertDialog creation to use a new showInfoAlert method to improve code readability and maintainability by reducing duplication
refactor variable names and parameter handling in T4501661 . java to improve clarity and functionality to support package - specific configurations
update Java version in test cases and assertions to ensure compatibility with the latest version of Jetty and improve error messaging
pluginbundlemanager : do n ' t add ' shared ' dependency to ' dependency ' list
fix memory leak in zipfile
renamed DATAMATRIX to DATA _ MATRIX in multiple files to standardize the naming convention for better clarity and consistency
mahout - 1642 sequencegeneratorsource . addinputstream ( ) method should return immediately if inputstream . available ( ) do not result in
[ hotfix ] fix typo in blobserver
updated methods in AnnotatedDelegate and SyntheticAnnotated to use ` findFirst ( ) ` and ` findAnnotations ( Class < T > type ) `
added support for ppc64 architecture in Bits . java and ByteArrayAccess . java to enhance compatibility with additional CPU architectures
add link to github . com / robolectric / robolectric / pull / 4736 for detail .
change timeout duration from minutes to milliseconds for transaction wait operations to improve code consistency and reduce potential indefinite blocking
fix dateutiltest to use instant instead of date object
refactor BytesRef class to improve code readability and maintainability
added a toast message indicating YouTube Player does not work on Lollipop yet to inform users to enhance user experience by providing feedback on their
added checks for unterminated dollar quotes and updated exception messages in the Parser and StatementTest classes to ensure proper parsing and handling of SQL syntax
fix crash when there be no vibrator
updated table border from " # FFFFFF " to " 1 " in DotRenderer . java and modified background color settings to improve visual consistency
added a method to check if a configuration variable is encoded in HiveConf . java and updated SetProcessor . java to use this method to conditionally decode
pdfbox - 4892 : catch all exception a suggest by valerybokov
refactor X509Certificate class to improve code readability and maintainability
make default uri implementation work with proxy uri ( # 3903 )
updated ` TimeLineCursorAdapter ` , ` NetworkedCacheableImageView ` , ` MainActivity ` , and ` ImageViewAdapter ` to
None
updated controllers version references and configurations in DependencyBank . java to ensure compatibility with the latest GDX controllers features
[ hotfix ] [ javadocs ] fix typo in launchedurlclassloader comment
updated DataSourceHealthIndicator to use DataAccessUtils for handling single result sets to improve code clarity and ensure correct column count validation
[ ds - 2058 ] add no - cache header to the logout page .
updated the warning message to use Locale . ENGLISH to ensure consistent formatting of the warning message to avoid potential locale - dependent issues
modified SolrQueryParser constructor to include an analyzer parameter to enhance flexibility in query parsing with customizable fields
update copyright year to 2016 for newly added file
removed an unnecessary semicolon in MainTest . java to clean up the code and improve readability
updated TypeContributions class to improve type contribution calculations
added support for handling VoidColumnVector in VectorizedRowBatchUtil to enhance functionality to support vectorized data processing
use request . getname ( ) to avoid name collision
remove unnecessary type match check in abstractconfig
[ java ] : added offer method to allow send vector to client outside the session .
change method names from trustAllXForwardedRemoteAddressResolver to trustAll and maxTrustedIndex to improve clarity and consistency in method signatures
add @ nobootstrap to prevent any bootstrap instruction
hbase - 26478 provide default value for maxfilesize and memstoreflushsize to tabledescriptorchecker ( guangxu cheng )
updated commit handling logic in BranchGraphServlet . java to use a temporary variable for requested commits to improve clarity and ensure correct accounting for requested commits
added ` InvocationTargetException ` to method signatures and replaced ` invokeLater ` with ` invokeAndWait ` in ` bug6794831 . java ` to
added a constant for the build ID and refactored metadata handling in CachingBuildEngine to improve code clarity and maintainability by standard
removed unused imports from TransactionCapsule . java to clean up the code and improve maintainability
removed the duplicate markAsDone method call to maintain code clarity and avoid redundancy
added configuration handling in TezConfigurationFactory to ensure proper copying of Tez settings to avoid conflicts
added a null check for keyPurposes in TimestampedSigner . java to ensure proper handling of null keyPurposes to avoid potential NullPointerExceptions
simplified the conditional statement for visibility checks to improve code readability and maintainability
updated the handling of recent sounds in OpenALAudio to include a forget method for better management of recent sounds playback
fix : set state continuity only on new render animation
added number formatting units to NumberAxis to improve readability of number representation in graphical representations
refactor ` TargetsCommand ` to use ` Builder ` for ` TargetGraphAndBuildTargets ` to improve code readability and reduce bo
removed the IndexFileNameFilter class and simplified file name checks in IndexFileDeleter . java to streamline the code and improve readability by elim
add an option to ignore collision bounding box for ladder . close # 4018
added a compression level parameter to ApkBuilder and SignedJarBuilder classes to enhance the handling of compressed output files
added a test to verify that static fields are included in a JAR file to ensure that the JAR file correctly includes static fields in the reflection result
added support for BYTES data type in MetricFieldSpec and related classes to enhance data type handling for better metric data representation
updated failure message formatting to include newline character to improve readability of failure messages in tests
replaced the use of ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed
added caching functionality to Spring DataJPAJoinFetchPagination and related classes to enhance caching capabilities and improve test coverage
fix for ticket : 263 -- add support for locale prefix .
added a condition to return a form body only if the post body is empty in SimpleHttp . java to optimize form handling by avoiding unnecessary
added a dispatcher and its corresponding shutdownNow method to ClientSideSlb and its corresponding test to ensure proper shutdown of the executor service within the ClientSide
modify texture coordinate calculation to account for vertical flipping when enabled
improve error message when discovery strategy be miss
updated contextPath declaration and added null check for contextPath to ensure contextPath defaults to " NA " when it is null
[ bz - 1059725 ] avoid npe during incremental compilation when reload reload
added a serialization header for the BTreeMap root to ensure the correct structure of the BTreeMap data structure
added support for retrieving and validating the precompiled header in the CxxSourceRuleFactory to ensure consistency and enforce rules under specific configurations
replace WeakReference with AccWeakReference to incorporate security context to enhance security by ensuring image updates are executed with proper access control
updated visibility of findNextIndex method and modified key removal logic in OrderedMap to enhance encapsulation and improve data integrity checks
set isDirect to false in VertexBufferObject . java to ensure the correct behavior of the isDirect variable
fix for ticket : 263 -- do n ' t unnecessarily cast to map .
change return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to enable method chaining for more consistent return values
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added a null check for the context before removing the close hook to avoid potential NullPointerExceptions
updated border spacing calculations for folder layouts in CellLayout and DeviceProfile classes to improve layout consistency across scalable grid components
replace NumberFormat . getInstance ( Locale . US ) . parse ( ) with ValueNumeric . of ( ) for parsing numeric values to improve code
added a condition to return the deferred authentication result if the response is deferred
updated command - line argument checks in StartArgs . java to enhance argument parsing for new functionality
added a default partition value and updated dynamic partition handling in DynamicPartitionFileRecordWriterContainer to ensure a default partition value is used when none is provided
[ hotfix ] [ runtime ] make operatorfactory nullable in streamnode and streamgraph
updated the return statements in DefaultArtifact . java to conditionally append the classifier name to the conflict string to improve the clarity of artifact identification by distinguish
camel - 16400 : camel - kafka - add rebalance to avoid call staterepository . getState twice
forward nosuchclassexception to user error .
fix : enable email notification by default
doc : [ bitcoinjks ] clarified usage of default constructor in javadoc ( # 567 )
fix test which randomly fail on slow ci server
fix checkstyle issue in entity / player
refactor Exchange class to improve code readability and maintainability
fix typo in updateuser
replaced switch - case statements with if - statements for type checks in MfaProvider , IdleTimer , JdbcMfaProviderProvisioning , and
updated AbstractMetaDataExportMojo . java file to improve code clarity and maintainability
hive - 2594 : improve error message when drop a materialized view due to ' mv _ tables _ used '
updated property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency with naming conventions
add a deprecated class ` RoboExecutorService ` to the ` org . robolectric . util . concurrent ` package to indicate that the class
fix group order for remove subgroups in group tree
updated method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified path validation logic to improve clarity and ensure
8074551 : gc / ergonomics / testdynamicnumberofgcthreads . java fails due to unrecognized option
updated return types and methods in CxxPlatforms and KnownBuildRuleTypes to use Flavor instead of ImmutableIterable to improve type flexibility and
updated SQL creation logic to include optional parameters to enhance flexibility in specifying table creation options
fix the chat background alpha blending issue .
test ( refactor ) : migrate ctiteratortest to junit 5 ( # 4501 )
lucene - 1101 : tokenstream . next ( token ) reuse ' policy ' : call token . clear ( ) should be responsibility of token producer .
fixed bug 1114114 - don \ ' t crash on block statement .
refactor StateMachineConfiguration and StateMachineFactoryConfiguration to remove Enum bounds and add a check for state machine configurers to improve error handling and
danielwagnerhall : adding testlocators . class to selenium test suite to make it easy to add locator
ww - 5094 stringconverter should accept float and double a default
fixed memory leak in aggregate lifecycle .
update touchable insets from CONTENT to REGION to enhance touch responsiveness for better user interaction
removed the condition checking for the ' ~ ' character in the FencedCodeBlockParser to simplify the code as the check was already implemented
added socketTimeout functionality to ConnectionFactoryImpl and related classes to allow customizable socket timeout values for socket read operations
simonstewart : add a delay to make the test more stable
updated BufferedReader initialization to specify UTF - 8 encoding to ensure proper handling of character encoding in the input stream
refactor List class to improve code readability and maintainability
added multiple constructors to AsyncFileImpl for handling URI and OpenOptions , and updated error handling in AsyncFileImpl to improve code clarity and
made CucumberEngineExecutionContext public and added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to enhance accessibility and
nuage vsp : fix npe and return null when nuage vsp device be not configure
update retryUploads method to retryFailedUploads in FileUploader and ConnectivityActionReceiver to improve the handling of failed uploads by ensuring
update Java version to 53 and remove redundant methods to ensure compatibility with Java 9 features and improve code clarity
ignore warning and allow serialversionid
expose the ability to remove header from asynchttpclient
replace Vector with ArrayList for storing arguments to improve performance and reduce casting overhead
updated the default grid column from 4.0 f to 3f to improve user interface layout and accessibility
updated condition in ` CalcitePlanner . java ` to include a check for ` ! forViewCreation ` to ensure that the presence of a table definition
updated regex pattern in TestHS2HttpServer . java for date formatting and improved variable assignments to enhance accuracy of date transformation logic
make graphprinter robust to failure to compile
simonstewart : allow access page with an insecure ssl certificate
fix negativearraysizeexception in byteblockpool
changed the access modifier of ` firstEncoder ` and ` secondEncoder ` from static to instance variables and modified string formatting to use Locale . ENGLISH
added catch block to handle unexpected exceptions in TcpTransport to ensure proper error management during exception handling
suppress warning on non - serializable non - transient instance field
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify the class structure and improve dependency management
change user preference to save or return to jabref
added checks for supported response types and improved error logging in various classes to enhance security by ensuring only valid response types are accepted and providing
added a call to chk ( index , 1 ) in DrillBuf . java to ensure proper validation of index before processing
hbase - 26945 addendum . allow tablemapreduceutil . inittablemapperjob to take an inputformat class directly
updated the method call from ` append ( jrubyClasspath , testClasspathElements ) ` to ` append ( jrubyClasspath , testClasspathElements
sulong : disallow access to internal language .
deprecated the use of the deprecated ' master . ' commit duration and added a version check for incompatible commit duration to ensure compatibility with Solr 7.1 and
rename ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport ` and update associated references to improve clarity and consistency in
changed the type of ` handles ` and ` keyBytes ` from ` long ` to ` Object [ ] ` in ` ECKeyPairGenerator . java `
[ hotfix ] fix job restart handling of cancelled job
replaced singleton instance of ` RotationTouchHelper ` with a direct instantiation to simplify the code and improve readability
[ UniFiControllerCache ] fix port override bug ( # 15980 )
changed variable and method parameters from ' lwp _ id ' to ' unique _ thread _ id ' across multiple classes to enhance thread identification
remove old offer to avoid stress test failure
use default tl 1.2 by default in test .
updated MockitoMethodInvocationControl to handle Class instances differently in MockitoMethodInvocationControl . java to improve flexibility in mock invocation handling for different mock
updated NotLoadedException handling to include the current object as a parameter to improve error reporting when loading metadata due to table filters
added a null check for the OCFile in the intent to prevent potential NullPointerException when passing null data
[ iotdb - 5160 ] fix compaction fail due to miss file in . wal file
refactored the stopSwipePipToHome method to use a UI _ HELPER _ EXECUTOR for synchronous task snapshotting to improve performance
added a hidden flag to CommandArgumentDefinition and updated LiquibaseCommandLine to handle it to improve command argument definition functionality to manage the visibility of command arguments
[ hotfix ] [ test ] fix the test instability
[ geos - 5962 ] make catalog lookup consistent between styleinfo and styleinfoimpl
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being executed
added setId methods to multiple map tile classes to enable dynamic tile identification
refactor Manager class to improve code readability and maintainability
updated JDBC connection string and session builder to include a version parameter to ensure compatibility with the latest features and security features of the JDBC client
added schemas and schema options to LiquibaseGenerateChangeLogMojo to enhance change log generation by including schema information
change putifabsent to put
use a logger instead of a standard error - log message
change method visibility from final to default for doPutRecord to allow method overriding in subclasses
update Tools . java to change string concatenation syntax to improve code readability and maintainability
refactor FastCGIProxyServletTest to enhance test cases for different scenarios involving large response content and slow client to improve reliability
added an intent to start the ReadInteractionsService to enable the application to read interaction functionality within the MarkReadService class
added a conditional check for ` lintClassfile ` before logging warnings for missing annotation methods to improve logging behavior based on the validity of the annotation method
[ ds - 3952 ] make server port configurable .
added retry logic for SSLFactory reloading to improve reliability and error handling during SSLFactory renewal
fix date format use millisecond
updated the assertion message in SpyingOnRealObjectsTest to clarify the reason for assertion failure due to mocking a private class to improve
added functionality to control line endings on long lines in InlineBoxing and LineBox classes to improve handling of long line breaks in the code
add null check for filePath . getParent ( ) to avoid potential NullPointerException when getParent ( ) is null
remove unused import of DocCollection from TopicStream . java to clean up the code and reduce unnecessary dependencies
added unit test for window -1250 parameter in multipart form data
added properties to configure web exposure settings to ensure sensitive data visibility in the application
added a validation check to ensure the current graph is a dynamic graph to prevent runtime errors
disable broken scope injection
add suppressexception to jsonpath and improve documentation
removed an unnecessary line of code for initializing the ControllerLeaderLocator to streamline the initialization process by eliminating redundancy
updated usage messages in CLHSDB . java and HSDB . java to clarify command usage instructions for better user experience
refactor the ` configureChunkProvider ` method to remove its dependency on ` FaultTolerantStepFactoryBean ` to streamline the method
[ beam - 10670 ] remove write . java and move write to sdk sdk
refactor AccessibilityManagerTest to use a local AccessibilityManager instance instead of a method to improve code clarity and maintainability by red
show ` ` flutter usage statistic ' ' under ` ` usage statistic ' ' label ( # 2328 )
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` across multiple files to simplify class hierarchy by removing unnecessary dependency on
refactor enumDataTypeHelper to use a dedicated PostgreSQLEnumDataTypeHelper class to improve code organization and encapsulate enum value retrieval logic
updated log path to use File . separatorChar to ensure compatibility across different operating systems
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure compatibility with
added a check for index tables before attempting to drop index tables to enforce data integrity by preventing operations on unsupported index tables
added condition to disable scrolling in RecentsView to improve user experience by preventing unintended actions
fix for repl highlight on window
add optional local variable annotation to prevent warning
change how file path is added to filePathStrings to ensure correct retrieval of file path format
removed the redundant line of code in SelectBox . java to improve code readability and maintainability
change the value of _ metaDataComplete from true to false to update the metadata processing state
modified the ` removeTaskTarget ` method to return a void instead of a boolean and added threading for bitmap creation to improve asynchronous processing and ensure
added support for handling release flavor in JsBundleGenrule to ensure correct generation of JS bundles with different flavor configurations
6500701 : arraylist . addall ( ) should deal with object array correctly .
added tests for handling new line characters in comments and Javadoc to ensure proper formatting of import statements in different formats
added support for HubMode in Liquibase change log configuration to allow dynamic hub mode configuration
removed unnecessary null check in JsrChunkProcessor . java to simplify conditional logic and improve readability
added a check for linkDb before adding it to FileInputFormat to avoid potential null pointer exceptions and improve error handling
replaced the method lookup for ` setIndexerThreadPool ` to use ` Class . forName ( " org . apache . lucene . index . Document
removed the port specification from the address string to simplify the address format for better usability
added a copy method and refactored code in MapJobExecutionDao to use it to ensure that job executions are serialized and deserialized correctly
added a new test class ` DownloadTest ` to verify the functionality of texture loading in the application to ensure proper handling of download requests and texture
fix broken audio track selection
hive - 2870 : improve error message for round ( alexander pivovarov via jason dere )
add null check for selectedVersion in managedependencies
added multiple AntPathRequestMatchers to SecurityConfig . java to enhance security configuration flexibility for request paths
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
do not generate constructor for self - referential class in self - referencing model
added an @ Ignore annotation to the HttpClientRedirectTest class to temporarily disable the test due to instability issues
[ openwebnet ] use schedulewithfixeddelay instead of scheduleatfixedrate to handle power - on and power off
simplify code by remove unnecessary code .
deleted the SunToolkitSubclass . java file to the functionality provided by SunToolkit is no longer needed in the project
updated translation logic in DefaultRenderableSorter and added a method to check for rotation or scaling in Matrix4 to improve translation accuracy by considering the center of
added a test method to register wrapper handlers before primitive types to ensure correct type registration and functionality in the type handler registry
pdfbox - 4892 : add alternate colorspace support to pdfbox , a suggest by valerybokov
replaced hardcoded URLs with constants from BuildConfig in CommonsApplication and related classes to improve maintainability and centralize configuration management by centralizing API
camel - 16400 : camel - health - add camel - main http standby test
fixed thorn chakram crash if pos . blockpos be null .
added a test for altering tables with indexes extend primary keys in AlterTableWithViewsIT . java to ensure that indexes can be created
updated ` offset ` to be ` readerContext . docBase ` and modified assertions in ` TestFunctionQuery ` to include randomness to enhance document
removed the ID field from the fields to ensure proper data handling in the record reader
added disposal methods to YeelightHandlerBase and DeviceBase , and improved connection handling in WifiConnection to ensure proper disconnection of
fix ( sql ) : support auto _ increment on create table
add explicit copy of sharedindexinformer to avoid extra thread creation
fixed npe in delete template from db .
updated image handling in ShadowBitmapFactory to utilize Robolectric ' s built - in image processing methods to enhance image size retrieval and ensure
removed deprecated constants from LauncherProvider and LauncherSettings to clean up the code and improve maintainability
move data to examples / brokers / rules
added legend top and bottom offsets to the PieChart to ensure proper positioning of legend elements to improve the layout of the legend based on its full height
added a condition to return early if the world transform is zero to optimize performance by avoiding unnecessary processing
added class maryscriptcreator to demonstrate the use of script creator .
nifi - 259 add remote host attribute to flowfile for listenhttpservlet
added and closed the compaction logger in LevelCompactionTsFileManagement . java to ensure proper resource management and avoid potential memory leaks
change xlink : href to href for component description
aws s3 stream upload : make timeout checker configurable
hbase - 20535 make isclustershutdown ( ) public and add more logging
None
trim whitespace from the active option parameter to ensure consistent command line option handling
added depth preference handling in DepthController to enable depth adjustments based on user preferences
updated the assertion in OverseerTest to verify the success count to ensure accurate tracking of the overall overall operation state
rollback : remove code for linux kernel version check
refactor ExecConstants to improve code readability and maintainability
added ScreenRecordRule import and annotation in ThemeIconsTest . java to enable screen recording functionality for test cases
added a method to set scan attributes for paging in ScanUtil to enhance functionality for managing scan attributes in the database
added a check for a non - negative lowRange in Request . java and RequestV2 . java to ensure that lowRange is valid and prevent potential
reduce asyncwritecache ' s cache size estimation for good performance
bug 9448 : use zone id instead of host ' s uuid when join a host
[ zeppelin - 5859 ] fix livy ] correct content type and add test
updated the method for removing a filesystem to ensure the correct removal of the file from the map
replaced the ` obj ` field with a ` json ` field in ` HttpRequestBuilder ` to store the JSON data as a string to improve data handling by
increased the wait time from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 5 ` and ` hard529 ` from
fix ` selenidelogger ` listener invocation during test
renamed multiple dial - related classes for consistency and clarity to improve code readability and maintainability across the dial framework
updated error logging statements in SyncQueue . java for consistency to improve readability and maintainability of error messages
updated the version of the Ryuk container to the latest version to ensure compatibility with the latest features and bug fixes
8068994 : bootclassloaderhook should return additional bootstrap path
fix the path for the patchy library now work .
[ hotfix ] [ test ] fix code style violation in yarnitcase
add stats of data included map to localmapstatsprovider ( # 15629 )
deleted the AllTests . java file to the test class was deemed unnecessary for the current project scope
pdfbox - 4892 : append a space to the end of line if the char be 30 or 31
added a test to ensure that large stack trace invocations do not starve memory in Mockito to avoid memory issues with large stack traces
updated the method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler . java ` to
pdfbox - 4892 : enable event processing by set flag to true
deleted the Controller annotation and renamed Weldby class to WeldModule to simplify the codebase by removing unnecessary annotation
only capture group in empty check when necessary
changed the visibility of the ` liquibaseProLicenseKey ` variable from private to protected to allow subclasses to access and log the license key
mondrian : fix nullpointerexception when set the schemareader
[ gr - 46711 ] add - g option to generate debug information .
mondrian : fix javadoc for mondrianproperties .
added support for handling empty friend paths in Kotlinc modules to improve compatibility with Kotlin compiler arguments
added character aliases for BATK , BRAH , and MANDAC in Character . java and modified main method logic in CheckScript .
updated the equality check in ExecutionCommand to use equals method and added a new method in StageUtils for conversion from JSON string to ExecutionCommand to
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code readability and maintainability
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope instance for easier debugging and logging
modified the handling of CSS parsing behavior to consider percentage and number types more effectively to improve clarity and prevent errors in number and percentage parsing
added a test method to verify the orientation of a local index in LocalIndexIT . java to ensure that the local index scanShouldReturnAllRows
replace ` InstrumentationRegistry ` with ` ApplicationProvider ` in ` BaseAndroidTestCase ` and update method names for consistency to streamline imports and improve cl
updated toast messages to use string resources instead of hardcoded strings to improve localization and maintainability of the user interface
simplified conditions in the ` findLiveItemsUpperBound ` loop and updated test expectations in ` RendererUtilitiesTests ` to improve code readability and
replaced Iterator with ArrayNode for better type handling to improve code clarity and ensure accurate data extraction from array nodes
added error handling for SQL execution in FileContentProvider . java to improve robustness by logging a warning when upgrading from 24 - > 30
removed a console print statement from AsyncServletIOTest . java to clean up the test output and reduce unnecessary console clutter
updated ` ConvertJoinMapJoin . java ` to incorporate calculations involving online data size and hash table load factor to improve accuracy of
added background resource handling for selectable items in ` TrackSelectionHelper . java ` to improve UI consistency and support for theme attributes in view elements
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` for handling authentication checks to enable flexible authentication verification in mock matchers
vpc : do n ' t set gateway net id if it ' s already set
[ beam - 10955 ] skip flink savepoint test on 1.11
fix the position of intdef annotation
modified loop condition to include index range to ensure actions are processed only when they are within bounds of bounds
updated BitmexStreamingExchange class to extend BitmexExchange instead of BaseExchange to improve compatibility with the BitmexExchange class
( scott phillips ) add test for virtual metadata virtual metadata
added null check for spatial before processing to prevent potential NullPointerException when spatial is null
updated logic in ConditionalTokenFilter , FixedShingleFilter , TestConditionalTokenFilter , TestConditionalTokenFilter , and FixedShingleFilter to
update unsafe store node to set the state after the node
updated method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure proper functionality
added an assertion to check if the CAS event repository is empty to ensure proper validation of the event repository state
removed the final keyword from the attributeTemplateName and attributeLine and attributeCol parameters to simplify parameter definitions and improve code clarity
added a null check for the key in MacOSXPreferences and created a new class RemoveNullKeyCheck to handle null key removal to ensure that the key
removed the overridden ` setTypeface ` method from ` CodenameOneTextPaint ` to handle exceptions that cannot be set in the runtime more gracefully
implemented ` open ` methods for ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS ` classes to
simonstewart : remove the deprecated ' fail ' method from the webdriverrunner
simplified the conditional statement for checking item sizes to improve code readability and maintainability
refactor DefaultResultSetHandler to replace the ResultObject class with a private boolean for constructor mapping to enhance flexibility and maintainability of the
update SQL assertion to use double quotes for column names in CREATE TABLE statements to ensure compatibility with SQL standards across different platforms
refactor filter mode handling in VectorizationContext . java to improve clarity and functionality of expression evaluation to ensure correct evaluation mode for filtering results
add type parameter to ensure type safety
replace the instantiation of ReorganizeTableStatement with a direct assignment to improve code clarity and reduce unnecessary complexity
updated the handling of cluster name to use constants from the default configuration to improve code maintainability and ensure consistency across the codebase
improve error message when connect fails
added support for multiple styles string array in Nano . java to ensure proper parsing of bold , concealed , hidden , and bold styles
update schematic fixer to use correct nbt conversion
update return message in NoToStringOnStringType . java to clarify that " No # toString ( ) on String " to enhance code readability
increased memory allocation size from 64m to 32m in TestThreadFailure . java to improve performance during testing
fix ( test ) : fix transient failure reporting
update return statement to use bandwidth instead of 0 to ensure correct token retrieval from the tokens array
alexeibarantsev , on behalf of emil ivov : add some more api to webdriverbackedselenium
updated the ` doPrintEntry ` method to remove the ` printWarning ` parameter and adjusted its usages to streamline the method signature and
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks for dialog opacity and background color in Dialog and Frame classes to ensure the dialog is opaque and conform to design specifications
change the access modifier of the state variable from private to private final to ensure the state variable cannot be reassigned after initialization
updated Redis connection handling in RedisObjectFactory . java to improve configuration flexibility by allowing different sentinel settings
add ' last see delayed message ' preference to the chat room .
replace ` Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` method calls to simplify the code by removing unnecessary object
refactor file sharing functionality to use a dedicated service instead of a generic create share operation to improve code modularity and separation of concerns
change logic for determining if a field is a value by simplifying the logic in BeanDefinitionInjectProcessor and added the @ Inject annotation in FieldPropertyInject
fix bug where minbuildheight would not work
modify smack integration test to handle npe more gracefully .
tmi - 107 : tiff : support read jpeg2000 data without link segment
added support for conditional executor based on the enabled state of VersionTargetGraphMode to improve dependency management in version target graphs
added a check for video format before processing media to ensure only compatible video formats are processed
chore : integrate new gapic - generator - java and rules _ gapic ( # 244 )
* lwjgl native now set lwjgl . librarypath system property
added support for configurable escape functionality in CSVRequestHandler to enhance flexibility in handling escaped values and improve error messaging
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure support for only the Authorization Code grant type
improve error message for overwrite cause .
added a new SQL query and assertions to the DerivedTableIT class , and updated the OrderedResultIterator initialization in ClientAggregatePlan . java to improve query
added RSquare mapping to RegressionEvaluator and tested it in StreamExpressionTest to enable accurate evaluation of the RSquare value in regression tests
log4j2 - 1343 add request header to threadcontext mdc filter
refactor SparkPlanGenerator to use a local variable for MapWork instead of casting to MapWork to improve code readability and maintainability by reducing
refactored image retrieval in PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for retrieving folder and country
updated caching strategy in JwtIssuerReactiveAuthenticationManagerResolver and added unit tests for trusted issuer handling to improve cache management and ensure correct authentication
check for read only resource and throw a helpful exception
add ismethod flag to interop function , fix type cache
removed redundant sleep call from AbstractBasicMockingIntegrationTest to streamline test execution by eliminating unnecessary sleep
added a new file KernCrash . java that implements a graphical user interface with kerning on a visually distinguishable text element
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure the test fails if assertions are not met
added a method to retrieve network interface IPs with a specified prefix to enhance the functionality of network interface discovery
fix memory leak with housekeeper ( )
corrected a typo in the condition check for the slave address in the AutoSwitch HA connection
refactor assertion methods for improved clarity to enhance code maintainability and readability
added a new test class ` Issue247Test ` for testing database functionality to ensure correct behavior of the ` MapDB ` class with various data modifications
changed the type of the ` results ` set from ` CategoryItem ` to ` String ` and added error handling in the ` doInBackground ` method
fix max age validation
added support for extracting alarm and error codes from the response to improve error handling and provide clearer feedback to users
modify return statement to handle cases when there are no screens to display in the workspace configuration
removed the count parameter from the getTrades method and related calls to simplify method usage by eliminating unnecessary count parameter
updated ConsoleReader and MemoryHistory classes to improve terminal handling and index boundary checks
rename . jdk file to be consistent with other project .
replaced calls to ` getBuildRuleType ( ) ` with ` getType ( ) ` for better clarity to improve code readability and maintainability by
fixed bug where jfcmodel fail to notify user of miss warning
throw illegalargumentexception if tolerance < = 0 in maximuminscribedcircle .
added methods to create and drop views with optional SQL queries to enhance database management capabilities by allowing dynamic view privileges
8010376 : test / java / math / biginteger / nantest . java fails due to expect stable float and double be skip
added DesktopTaskbarUIController class to manage taskbar icons in the overview
fix launcher crash when app be unloaded
updated file names and imports in Files . java to improve code clarity and maintainability
refactor ` AnnotationGrpcServiceDiscoverer ` to use ` Collection < ServerInterceptor > ` instead of ` Set < ServerInterceptors >
refactor DomainAwareServicesManager to extend ServicesManager directly to simplify service management by removing unnecessary interface implementation
add debug log to resourcepackloader ( # 8452 )
chore : update gapic - generator - java version to 2.1 . 0 ( # 477 )
added methods to grow and fill the Cell interface to enhance functionality for better cell resizing capabilities
simplify defaultinputhandler ( no need for current map )
resolve intermittent ci ci problem
replaced long array with byte array and updated iteration logic in MetricsMemoryTester . java to optimize memory usage and add a memory fail count check
deleted the JobParametersPrototype . java file to the functionality provided by JobParametersPrototype is no longer needed for batch processing
add config to disable data connection security ( # 15629 )
update references from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS and APPLE _ SWIFT _ OBJC _ CXX _ HEADERS
changed the value of DUMP _ TO _ FILE from true to false to disable the dumping to the file by default
work around incorrect audio stream detection on o x .
[ java ] : do n ' t update publisherlimit limit if not already set .
added a condition to check output options for dbInfo null check to ensure dbInfo is only processed when output options are enabled
make use of ssl configurable via cli
updated DOMConverter to use DOMOutputOptions for error output to improve output handling during DOM conversion
refactor assertion methods for improved clarity to enhance code maintainability and readability
[ java ] : add retain option to event and session .
[ test ] fix test serialization of null value
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix checkstyle for tumble use case
remove reference to the deprecated parsed - to - unicode parser
make sslcontext initialization thread - safe
update usage of ` cp . size ( ) = = 0 ` to ` cp . isEmpty ( ) ` and modify ` Watcher ` constructor
follow [ calcite - 2769 ] , replace calcite ' s default dialect with ansi sql
change debug to trace for no firmware update handler available
added unit tests for handling null values in date and timestamp fields to ensure correct retrieval of objects with null values
refactor string concatenation for better readability and consistency in StringSubject and Subject classes to enhance code clarity and maintainability by standardizing
added unit test to verify retrieval of multiple teams and regular teams permissions to ensure correct permission handling for repositories in the user model
added a new file ` Test7088020 . java ` to test method handles with ` invokeExact ` to ensure proper handling of ` Wrong
refactor audience validation logic to use a HashSet for better clarity to improve error handling and maintainability of audience checks
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener classes to improve code organization and maintainability by consolid
updated StdErrLog to handle null stderr streams to improve robustness by avoiding potential NullPointerExceptions when logging
added a new warning constant SEPARATION _ ORDER and logic to track the number of active stages in the event simulation to ensure that warnings are only displayed
updated the table configuration from offline to realtime in the query optimization process to optimize query performance for real - time rather than offline
updated PhoenixHBaseAccessor to include hostMinuteAggregrateSql and adjusted SQL execution accordingly to enhance metrics aggregation setup by incorporating
[ hotfix ] fix checkstyle violation in filestatehandle and savepointv2
added BluetoothClass handling in ShadowBluetoothDevice to enable support for BluetoothClass management in Bluetooth operations
fix player . isinstance ( ) incorrectly
drools - 1334 feelfunction should return an error if the list of sum function be empty ( # 2254 )
remove unneeded call to graphmodel . getgraph ( ) . readunlockall ( ) in databridge
updated the concatenation syntax for coreNodeName in ZkStateReader . java to ensure proper formatting of the coreNodeName string
chatactivity : do not refresh chat message on backpressure . issue # 241 .
fix miss license header
added a suppression annotation for the SimpleText codec in BaseVectorSimilarityQueryTestCase to avoid issues with codec compatibility during testing
updated type checking logic and added a new class T7005671 with multiple array types to improve type safety and demonstrate null handling for array types
updated triangle calculations in DelaunayTriangulator and modified test initialization to improve triangulation accuracy and ensure tests are validated
added @ Override annotations to multiple classes to ensure proper method overriding and enhance code clarity
refactor JWTClaimsSet initialization to use Builder pattern to improve code readability and maintainability
refactor state management for yellow zone to improve clarity and maintainability of state transitions
added shadow functionality to Robolectric and ShadowContentValues classes to enhance testing capabilities for SQLiteDatabase and ContentValues interactions
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java ` and added a new
replace the ` bytesPerDim ` variable with an ` ArrayUtil . ByteArrayComparator ` for comparison to utilize ` ArrayUtil . ByteArrayComparator ` to
updated Locale class to initialize default locale and script dynamically to improve flexibility and ensure default locale settings are properly set
updated the method to return the last set text alpha instead of the current text alpha to ensure the view reflects the most recently set text alpha
fix typo in configurationchangedetector
None
trim whitespace from token inputs in GzipFilter and GzipFilterDefaultTest classes to ensure cleaner input handling and improve code readability
updated outputType assignment in Response . java to ensure consistent output type handling for writer functionality
updated regex implementation property from JDK to JONI to use the preferred regex implementation for improved performance and compatibility
refactor ViewCapture to use FutureTask for managing view properties to improve handling of view properties asynchronously and background processing
another attempt at fix the ticket : http : / / code . google . com / p / mine / issues / detail ? id = 5
added a check to create a parent folder if it does not exist to ensure the folder is created if needed , improving error handling
update node discovery ip to 127.0 . 0.1 instead of 0.0 . 0.0
camel - 14506 : camel - jbpm - workitem : fix wrong default handler name in out / in work item handler
pdfbox - 4892 : move constructor to private to avoid npe
updated ` AllAppsGridAdapter ` , ` AllAppsRecyclerView ` , ` WorkModeToggleContainer ` , and ` WorkFooterContainer ` classes to improve
refactor multiple Java classes to improve code structure and consistency to enhance maintainability and readability of the codebase
fix ( prettyprinter ) : add annotation to type parameter ( # 1437 )
fix memory leak in operatorcontext
removed carriage return characters from string formatting in QueryByExamplePredicateBuilder . java to simplify the error message and improve clarity
updated eviction counter implementation and replaced cumulativeStats with an AtomicLong in ConcurrentLRUCache and FastLRUCache classes to enhance concurrency and ensure
updated ` runInJavaFXThread ` to ` runAndWaitInJavaFXThread ` and added a new method ` runAndWaitInJavaFXThread `
replace localHost check with intendedDestination check to ensure correct validation of the intended destination type
ensure data _ root and source _ root be set when run with -- data - root
added MarkedClientEnabled and MarkedServerEnabled constructors to configure the admin client and server modes to improve logging and enable configuration of admin client and server operations
[ hotfix ] fix javadoc typo in tableenvironment
removed the setStatementTimeout method and updated the timeout assignment logic in MapperBuilderAssistant and MappedStatement classes to simplify the code by eliminating
use options . gethangingtsctimeout instead of hard cod hangingtsctimeout
added serialization classes for GeoLocationRequest and GeoLocationResponse to enable handling of geolocation requests and responses in the authentication process
updated the Preconditions check to ensure the destination is a Build Artifact in the ArtifactFilesystem class to enforce the requirement that the destination must be a Source
tika - 2642 -- upgrade to openoffice 3.5 . 2 and fix jXL unit test
apps - 2104 avoid concurrent modification in conditionals list
check for available data before close the channel in tcpnioconnection
improve error message when an optional do not have a value
updated visibility elements in BackgroundAppState and modified alpha calculation in ShelfScrimView to improve UI responsiveness and ensure proper visual feedback based on the
fix a npe in the shader node editor when the navigator be undefined
mow / mow : fix bound box for absolute location
camel - 20297 camel - core - untangle commons - lang from runtime
[ astro ] fix ` ` location have be change from ... ' ' log
fix unit increment logic in singlepassandimagebasedlightinglogic .
ignore fail jms test due to hangs
updated import statements in GuiceFactoryTest . java to include specific Guice and configuration classes to improve dependency management and code clarity
added methods to manage the status of the system feature in the Robolectric package manager to enhance functionality for camera tracking tracking
updated RCAFrameworkLoader to allow dynamic property path configuration to enhance flexibility in handling additional property paths
removed logging statement for cancellation watch dog to streamline the process of stopping the dog
[ minor ] fix arrayindexoutofboundsexception in radproperty
rename variables and conditions related to inline box handling in BoxBuilder and InlineBoxing classes to improve clarity and functionality of inline box rendering logic
[ todevice ] print remote ip when tel command return from akamai
removed conditional alteration for MySQL database type in UpgradeCatalog260 . java to simplify database schema changes for upgrade item table requirements
update error messages for index and temp resources directories to provide clearer guidance on permissions to enhance user understanding of space and write permissions issues
updated DatasetUtilities . java file to improve code readability and maintainability
added functionality to append selector ID to the key to enhance the key generation process for better traceability
updated debug log statements for color processing to improve clarity and consistency in color representation logging
updated taskbar visibility management and added alpha control for smoother transitions to enhance user experience by improving the visual appearance of the
removed and added whitespace in KeyExchange . java to improve code readability and maintain consistency
added a check for JdbcConnection before executing the database query and modified exception handling to improve code robustness and enhance error management
refactor file index handling to improve clarity and avoid potential out - of - index errors to enhance maintainability and ensure correct file existence checks
added methods to retrieve media recording MIME type for audio and audio recording recording
remove the confighandler . useshaders a it be not necessary .
updated bindable filter logic to use OR instead of AND for comparison to ensure correct filtering results based on time offset
updated ZkStateReader instantiation by removing redundant parameter order to improve code readability and maintainability
pdfbox - 4892 : disable external entity reference and disable doctype reference in xmp parser
added a new interface ClientRegistrationIdentifierStrategy to provide a standardized way to identify client registrations
change the loop to continue even if there be no < script > tag
rename ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and adjust related logic for handling varargs access to improve clarity
bug 66425 : avoid exception when try to set border property to null
switch reconnect backoff log from info to debug
updated import statements and method signatures to include HubRegisterResponse to manage hub registration responses more effectively
replaced direct byte manipulation with Byte . toUnsignedInt for unsigned integers across multiple classes to ensure consistent handling of byte values and improve code clarity
no effective change - code cleanup
change caching default from ENABLED to CACHE to enable caching features by default
change the initial value of rangePannable from true to false to ensure rangePannable is set to false for proper rendering
updated the logic for adding or removing the mWorkModeSwitch view based on the current active page and current active page to ensure proper handling of the work
reformatted variable declarations in Visualizer2TopComponent . java for consistency to improve code readability and maintainability
added import for CancellationException and modified exception handling in FunctionTest . java to improve error handling for cancellation issues
change constructor visibility from package - private to protected in jarresource and jarfileresource
clarify documentation for defaulttrackselector
added a wait for unseqMerging status in LevelCompactionTsFileManagement to ensure proper synchronization during unseq merging operations
update currency in BTCMarketsAdaptersTest from AUD to BTC to ensure tests accurately reflect the correct cryptocurrency used in the application
updated SQL queries and assertions in Hibernate classes to use more descriptive identifiers and table names to improve clarity and maintainability of the test
refactor Unicode handling methods to improve code readability and maintainability
updated ` installAutoInstance ` method to include a service parameter and modified its implementation to ensure proper service communication by updating HiveLLAP settings based
fix race condition in sendheadersfirstpublisher
use @ jsonPOJObuilder instead of custom jsondeserializer for singelton key
added support for BigDecimal in RangePredicateEvaluatorFactory to enhance functionality to handle big decimal values in the application
renamed parameters and methods in TreeBackedProcessorWrapper from ' inner ' to ' javacProcessingEnvironment ' to improve clarity and consistency
remove annotation printing from parameterinfo
added support for AC3 streaming and improved seek handling in the PlaybackController and VideoManager classes to enhance playback control and provide better
update HttpResponse to include a value and a null value to enhance data representation in HTTP responses
[ apex ] fix ` ` deprecation ' ' warning
added a test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` class to validate the functionality of SQL templates to ensure
refactor RTimerTree . java to improve performance and readability to enhance the efficiency of timer management operations
change package structure for graphbuilder classes to reorganize code under the core . rules . graphbuilder namespace
test issue # 3358 add a test case for issue
updated the initialization of ` QueuedThreadPool ` and ` ScheduledExecutorScheduler ` to include a name based on the hash code to improve clarity and
make the view result visualizer more user - friendly
add documentation for user phone number .
changed class visibility from package - private to public and added constructor to prevent instantiation
added null checks for responseMap and HTTP status codes to improve error handling and logging for HTTP responses
refactor SolrRequestHandler to improve code readability and maintainability
added a condition to check if the default parallel is not set in the XmlSuite class to ensure that the parallel parameter is not evaluated when it is initially
cloudstack - 6892 : add miss commented - out line .
added handling for SCARD _ E _ NO _ SMARTCARD in the error check to improve error reporting related to smart card presence
added import for LuceneTestCase and annotation for suppressSysoutChecks to suppress unnecessary console output during test execution
camel - 6537 : camel - bindy - allow to unMarshall
temporarily disable use of custom timestamps by default
change method parameter types from Runnable to ThrowingRunnable in ` runAndCheckException ` and ` checkException ` methods to enhance error handling by capturing the
updated hash computation to handle null values for ' via ' and ' pathFromSeed ' safely to improve robustness and prevent potential NullPointerExceptions
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from 4.1 . 1 to 4.2 and replaced null checks with direct method calls in LiquibaseXMLTransformer to
bug 60795 - http ( s ) test server : increase default cert expiry time
updated the ThreadHandler class to improve frame handling and elapsed time calculation to enhance performance and accuracy of delta adjustments
added condition to check if paginator is null in HttpBatchReader and modified rawUrl initialization in HttpScanBatchCreator to improve handling of null
added null check for compaction client before marking failed to improve error handling to avoid potential null pointer exceptions during execution
added fragment instance saving logic to ShadowFragmentActivity to ensure proper handling of fragment state changes
reformatted code for better readability and consistency in method calls
added a test for parsing Android color references to ensure the color resource loader correctly handles Android color values
added error handling for NoResultException in AbstractJPAQuery . java to improve robustness by ensuring that null results are handled gracefully
fix a nullpointerexception find via oss - fuzz
updated the method of retrieving the wallpaper depth preference to use LawnchairApp to ensure consistency with the current application context
removed an unused import statement for ProcessTools in LocalManagementTest . java to clean up the code and improve readability
modified the ` updateTotalEnergyAverageUsage ` method to remove the current timestamp parameter to use the head slot directly instead of a timestamp to simplify the method
improved handling of null extensions in the ExtensionStack class to provide clearer output formatting to avoid null pointer exceptions and enhance readability
3 . x : fix inner error cancel with flowable . flatmap ( # 7127 )
added connection timeout handling for HTTP requests to improve connection stability and handling of timeout exceptions
no logical change : remove trail whitespace
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to update test class usage instead of NewModelTest
added SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher to both EdgeSyncCursor . java and TenantResourcesEdgeEventFetcher , and updated
added a test to verify that output hash is not calculated when cache is not writable to ensure correct output hash calculation when building rules with no cache
camel - 14263 : camel - netty4 - allow to turn on or disable bytebuf
updated the method call to use the qualified table name instead of the table name directly to ensure the correct table is used for the altering partitions operation
improve error message when create vert . x instance fail to create domain socket
chore ( core ) : move unit test to appropriate package
[ doc ] fix typo in javadoc
added hints for query timeouts to configure timeout settings for improved performance and user experience
added a new class ` StaticLoggerBinder ` to handle logging functionality in SLF4J
hbase - 18309 [ table - planner - blink ] do n ' t add row to table if it ' s already add ( add
added conditions to check both new and old window orientation to ensure compatibility with different screen orientation settings
unescapes the nickname ( if any ) from the jabber account .
updated parameters in longStackPut method and added Issue265Test class with compact tests to improve the functionality of longStackPut and ensure proper database compacting behavior
8169237 : fix errorprone warning in the javax . lang . model
refactored executionflowcontroltest to fix build
standardized spacing for better code readability and maintainability
fix intermittent test failure
fix eth _ trytoconnect to check total difficulty
modify action handling in DefaultPlaybackController to simplify the logic for determining current window seekability
fix concurrentmodificationexception cause by miss synchronization
Updated texture calculations in AllAppsView . java to Enhance texture space adaptation for improved visual consistency
added a check for the presence of a colon in the key alongside the existing index check to ensure proper validation of key format
added PrincipalResolver as a parameter to the CasSimpleMultifactorAuthenticationMetaDataPopulator constructor to enhance dependency injection for principal resolution
replaced ObjectMapper with ObjectBuilder for JSON parsing to enhance flexibility and support for different character encoding
added a method to remove trailing slashes from the StringBuilder to improve string manipulation by eliminating unnecessary characters
added functionality to ` PatternsMatcher ` that checks for patterns matching exact , non - matching , and non - matching prefixes to improve pattern matching
hbase - 2593 addendum fix findbugs warn
add fire event for water potion ( # 1255 )
fix reorder preview animation not correct
updated calculations in ContractStateCapsule and modified conditional logic in ReceiptCapsule to improve accuracy of decrease percentage computation and enhance code readability
added readiness checks in AsyncContentProducer and BlockingContentProducer , and created a test for idempotent behavior in AsyncIOServletTest to
removed null check for weightField in DocumentDictionaryFactory to ensure that a valid weight field is provided to avoid potential errors
added plist variable expansion functionality in AppleBundle . java and a corresponding test in AppleTestIntegrationTest . java to enhance the handling of Info . plist
turret : do n ' t gate the lava if the target team have the lava in it
cast the result of adaptOrder method to Object type to ensure proper type handling for order adaptations in KucoinAdapters . java to avoid potential Class
added a new file ` PreParseGrammarTest . java ` to test XML schema grammar parsing to ensure the grammar parser functions correctly with XML schema inputs
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java classes to address the Doclint warning about serialization warnings
added FontManager import and overridden font settings in ExtendedEditText to ensure consistent font customization across the application
always return an empty list if no user find
camel - 8473 fixed the cxf test error of camel - 8473
add dummy setUpdata ( ) to fix build
added import statement for DumpHandler in MultipartFilterTest . java to enable usage of the DumpHandler in the test class
[ hotfix ] [ procedure ] stop restore attempt on already cancel task
add a way to create a new rmi registry at runtime
use stringutils . join instead of string . join in log message
updated qualifier handling and assertions in multiple test classes to ensure accurate testing of system display metrics and default qualifiers
[ java ] : add cluster member id to service heartbeat counter .
updated the attribute count for thread allocation based on the major version to ensure compatibility with newer and newer systems
customexpression : handle special case for - 0 and nan
do n ' t log continuation continuation continuation continuation continuation continuation suspended in asynclistener
added authentication routes and authorization routes to the AuthenticityController and created a corresponding test class for successful authentication to enhance user access control functionality to ensure
added assertion to ensure nextNode is alive before processing in loweringPhase and refactored snippet template logic to improve code clarity and maintainability
updated logger initialization to reference HttpClientRequestImpl instead of ConnectionManager to ensure proper logging context for the HttpClientRequestImpl class
update track selection to account for locale change
[ hotfix ] fix checkstyle violation in runtimeserialization
tool - core : crop geo point when crop be on
improve javadoc of unitofworkfactory . getvalidationinterval ( )
updated DeviceProfile and WidgetPreviewLoader to use new allAppsIconSizePx and allAppsCellWidthPx variables to improve clarity and consistency in size
tika - 2642 -- fix bug in mail content handler , check for contenttypeparameters , not just contentdispositionfilename
updated the URI generation in ThumbnailsCacheManager to use local file ID instead of remote path to improve clarity and functionality in thumbnail generation process
added checks to reset input mark if supported to ensure proper handling of input data processing
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new code
added a configuration property to control the way error stacks are displayed on the error page to improve the user experience by allowing toggling of
bug 7119 : add more logging when cleanup be fail
[ sparc ] remove bailout code in sparc
[ drools - 7 ] make decision decision decision decision decision decision decision decision decision decision decision decision decision decision decision decision decision decision decision decision decision decision decision
added ' waitingForResult ' flag and modified the onRequestPurchaseResponse method to call it on the UI thread to ensure proper handling of purchase responses and
increase timeout in test to avoid false failure
refactor style resource qualification logic in ShadowAssetManager . java to improve code clarity and ensure correct resource name processing
deleted two files , MrefStat . java and MrefStat1 . java , including classes MrefStat . java and MrefStat1 .
updated dependency insight to use StringUtils . isBlank for scope handling to ensure that the requested scope defaults to " compile " when the scope is blank
added error handling for trade history retrieval to improve robustness by handling specific error messages instead of generic exceptions
( chore ) camel - core - optimize test code
bitcoinuri : add getpaymentrequesturl ( ) method to reverse the order of http parameter
planner - 383 throw an exception if the user type be not a collection
removed redundant line setting folder info to streamline code by eliminating unnecessary duplication
fix miss notification of write success for jfr buffer access
replace check for null values with a for - each loop to improve code readability and maintainability
updated LinterUtility to use InputResource for reading linter configurations to improve resource handling and error management during configuration loading
replace direct calls to updateBackgrounds ( ) and update paddings ( ) with a post to a Runnable to ensure UI updates are executed on the UI
fix an off - by - one error in inventory . onpick
added support for OCELOT _ BABY event type to enhance event handling for sound interactions
[ hotfix ] [ state ] add miss @ publicevolving annotation for state ttl config in ttlconfig . java
modify PreparedStatement to handle null inputs explicitly to ensure proper type safety and avoid potential null pointer exceptions
[ java ] add describe for all valid recordings in the catalog .
updated newline character in append0 method to improve consistency in newline handling
added a new JSON serialization test for a snapshot file to enhance test coverage for JSON serialization functionality
added a method to remove the transaction and block from the transaction cache in BroadTest . java to improve test coverage and ensure cache invalidation
added functionality to handle specific LensMask conditions in AmcrestHandler and DahuaHandler to improve privacy mode management by allowing direct
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify error handling for build target
added a constructor to ChangeLogIterator that accepts a list of change set filters along with existing change set lists to improve flexibility in initializing ChangeLogIterator
exit with code 1 on non - guest system .
fix : ec2 should use system property , not env
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization of objects
refactor whitespace handling in SpacesVisitor . java to improve readability and maintainability of the code
# 1640 add servercacheoptions # copy ( boolean )
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to verify that the border is not visible on floated
change the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` to ensure that the graph is associated with the correct event bus
small update for prod url constant and log a few exception .
updated regex and search path handling in SpringResourceAccessor . java to improve path resolution and enhance search functionality for better resource management
updated unit assertions for MICROGRAM _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARECENTIMERE
updated the method call from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` to include size packing for vertex attributes to
deleted the Tls12SocketFactory . java file to remove unused or redundant code from the project
fix error when resolve bibtex source for external entry ( # 3614 )
added a check for Robolectric legacy mode in ResourcesTest . java to skip execution in legacy mode when using legacy resources
added a check for FirebirdDatabase to return a new DatabaseDataType for DOUBLE PRECISION to ensure compatibility with Firebird database functionality
added null checks for the dataSource before initializing it to avoid potential NullPointerExceptions when dataSource is null
build ( module ) : improve matching of compatible version in module dependency ( # 4645 )
remove internet connectivity dependency from test ( # 1502 )
no effective change - code cleanup - remove redundant try with resource
modify TermScorer creation to conditionally use PostingsEnum . NONE based on scoreMode requirements to ensure that frequency rules are applied when scoring is
fix nullpointerexception in dataflowmetrics
bug 9879 : do n ' t search nics when deploy vm .
refactor dynamic object inspector initialization and introduce a method to find target object inspectors to improve code clarity and ensure correct object inspector is used
added a method to remove build artifacts and corresponding test cases in the ArtifactFilesystem and ActionExecutionStep classes to ensure that build artifacts are properly removed
added checks to ensure the selected row is valid before setting the row selection interval to enhance user experience by preventing unintended selections
replace usage of assertthrows arraystoreexception . class with assertarraystoreexception .
[ hotfix ] [ core ] fix typo in propertysource . java
added user agent support to HttpClientBuilder and updated related configurations to enhance flexibility in managing client environment metrics and user agents
refactor session creation logic to use a computeIfAbsent method for better readability and encapsulation to improve code maintainability and streamline session management
updated assertions and changed data structures in ` IssueTest . java ` and ` Reporter . java ` to use ` IdentityHashMap ` and ` Collections `
updated the content type assignment to set a default value for null to ensure consistent content type is used when no specific content type is provided
add event to prevent npe
remove serial warning in graphapplet
fixed update of taskview snapshot radius
added logging for generated Swagger content and set revision for microservice instances to improve traceability and debugging of microservice schema generation process
change put method to return the index value instead of void to enable method chaining for better code flexibility
updated KafkaContainerCluster to set startup timeout and streamline broker startup process to improve stability and performance of the Kafka container
[ issue # 7999 ] add retry logic for defaultmqpushconsumerimpl # sendmessage ( )
update header checking logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy
added package access check before loading the event listener class to enhance security by ensuring proper package access for event listeners
add a custom list of applications to the application view to make it easy to add new sensor functionality
updated applyIcon method to include null check for task parameter to enhance robustness by preventing potential null pointer exceptions
fix resource leak in downloadtracker
fix cast exception in baseSqmtosqlAstConverter
added JUnit Test annotations and modified the setup method in HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to enable J
refactor DataInputStreamWithTimeout to use Future for asynchronous polling and improve error handling to enhance thread safety and maintainability of the polling logic
added support for the ToposortBasedDepsAwareExecutor in VersionTargetGraphMode and its usage in VersionedTargetGraphCache to enable concurrent execution of
refactor UpgradeCatalog150 . java to improve code structure to enhance maintainability and readability of the upgrade process
rename networkparameters . testnet3 to oldnet
do n ' t update object panel if nothing select ( anymore )
updated onboarding preferences handling in AppsDividerView . java to improve code readability and ensure null safety when checking onboarding preferences
updated HdfsDirectory to extend BufferedIndexOutput and modified flush methods to enhance index output handling to improve resource management and error logging
pdfbox - 3353 : do n ' t set clip when there be no next page
removed unnecessary synchronization block when setting localAddress to improve performance by reducing complexity in the code
added a method to addToRow to handle multi - valued fields in TemplateTransformer to ensure correct values are appended to existing fields during template transformations
added a method to check if the operating system is Windows and updated file renaming logic to ensure compatibility with Windows systems when renaming files
replace the usage of ALPHABET _ STRING with a constant CHECK _ DIGIT _ STRING for character encoding in Code39Reader and Code39Writer ' s
generate code for unknown unknown type in node generator
removed unnecessary fieldType check in IndexingChain . java to streamline code for better readability and maintainability
fix ( griffin ) : handle timestamp value with nanosecond
removed conditional logic around stack trace retrieval in LwjglCanvas . java to simplify code for better readability and maintainability
reformatted the description of AbstractGCSProcessor . java for better readability to enhance code clarity and maintainability
replaced assertInitialized method with waitUntilInitialized method in ConnectionPoolTest to improve synchronization to ensure waitUntilInitialized is only executed when the connection is initialized
updated method calls from null to " single " for directory retrieval to ensure consistency in directory handling behavior
refactor FaultTolerantChunkProcessor to replace size method with filterCount and incrementFilterCount methods to improve data handling to enhance clarity and
updated method signatures and file handling in ` FileWithTabs ` , ` T4994049 ` , and ` T4994049Test `
replace instances of ` ! ( TerminalFactory ( ) instanceof WindowsTerminal ) ` with ` assumeTrue ( ) ` in ` ConsoleReaderTest . java `
remove unneeded check for admin
adjusted calculations for newSelection and threshold values in AllAppsView . java to improve visual feedback and drag interactivity with the app ' s layout
bugfix # 214055 , do not wait for collected thread availability
added model loading and refreshing functionality , simplified database connection dialog handling , and improved null - checking for connection lists to enhance user experience
changed the ` writeBufferSize ` variable to ` WRITE _ BUFFER _ SIZE ` and updated its usage throughout the ` Writer ` class to improve
lucene - 2858 : do n ' t compute segment size if no doc exist in indexwriter
blender importer : add dvert = deformvertices validation to blendermodifier .
refactor FileDisplayActivity to improve code readability and maintainability
replace instantiation of UnsupportedOperationException with a custom UnsupportedOperationException to avoid unnecessary stack trace filling in the original exception
update return statement to use streams for average line height calculation to improve accuracy of label rendering by considering line metrics
updated ` RotationTouchHelper ` to accept a ` DisplayHolder ` parameter to improve flexibility by allowing custom display configurations
refactor string parsing logic to improve readability and maintainability of the code
None
renamed the test method from ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig (
updated assertion syntax in TestSqlEntityProcessorDelta . java to improve code readability and maintain consistency
of - 2060 : add javadoc explain cache behavior in cluster
updated variable names and claims references in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in naming conventions
refactor ` doBefore ` method and variable declarations in ` TestUnifiedHighlighterTermVec . java ` for improved clarity and consistency to enhance
added a JPanel and a data button to the GcodeTable to display the number of rows in a Gcode table to enhance user interaction
make webapp uri connect timeout configurable
updated various classes to enhance type safety and clarity in the codebase
doc : fix typo in testmediastervice
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK to the messages . java file to provide a
print all btc and btc _ instead of btc
update endpointaddressinterceptor to validate that the hostname do not contain illegal character
added multiple registerSecurityKeyStart and registerSecurityKeyComplete methods to HttpAccount and AccountProxy classes to enhance functionality for managing security key
refactor ServerSpanThreadBinder class to improve code readability and maintainability
fix scenegraph change in bulletphysics
[ geot - 64662 ] csv2shape do not map ` ` location ' ' field to ` ` number ' ' , fix test
refactor : remove unused import
refactor Parameters class to improve code readability and maintainability
added a call to setIgnoreNullValues on piePlot to ensure that null values are ignored during data processing
refactor resource bundle caching logic by simplifying the process to improve code readability and maintainability
pdfbox - 4892 : fix underscore typo , a suggest by valerybokov
fix for executescriptaction disallow during edit
added a userModified flag to the LoginSamlAuthenticationProvider class to track whether the user has been modified during authentication
added a new file TestSealedObjectNull . java to test the behavior of the SealedObject with a null string to ensure that the SealedObject
renamed methods for handling WebSocket session status to improve clarity and consistency in the ConnectPromise class
added a static set of snow and updated the tag checks for SNOW to ensure compatibility with newer server versions and improve code clarity
added a lastTradeId tracking mechanism and updated Trade constructor to include an ID to ensure trades are processed against the most recent trade ID
added error handling for closing HMS connection to ensure proper resource management and avoid potential runtime exceptions
fix random seed issue with server seed
add nexus 5 to the list of device profile for improved visual representation
2 . x : fix refcount . refcount ( ) not reset state on early connect ( # 5904 )
replace type ' s newInstance method with ReflectUtil ' s newInstance method in SynthContext . java to improve instantiation handling for SynthContext
fix : add space around textual operator ( # 4635 )
updated file existence check and added tests for handling empty and non - empty project files to ensure proper file handling and validate behavior for empty and non
make mlogwriter thread - safe
http : / / issues . apache . org / jira / browse / amq - 4682 - add support for mutablelogevent in sm
change padding type from LengthLike to NonNegativeLengthLike to accommodate non - negative padding values
fix filtered / item resources to use createcontext ( ) instead of createcontext ( getUser ( headers ) )
fix soot worldbuilder to correctly handle thrown exception
improve error message when android sdk manager be not available
update cache size calculation to improve memory allocation for better performance
added a condition to check if ` start ` equals 0 and modified the JSON structure in ` InvocationStageTrace . java ` , modified test expectations
added work around for npe on fips keystore .
make test more robust
ticket # 4810 : fix : do not use panel dimension for perspective edit
add an option to disable shader cache for renderers that do n ' t use shaders .
refactor PopulatorContext to improve code readability and maintainability
do n ' t send save - all notification for the same project ( # 6064 )
updated ZQLJobManager to use IOUtils for string encoding and added character encoding handling to ensure proper handling of character encoding and improve JSON serialization consistency
added a check for non - empty arguments before verifying the type of the argument to ensure robustness by preventing potential ArrayIndexOutOfBoundsException
refactor header constants in FakeOSSOHeaderDecoder to use a common prefix for consistency to improve code maintainability and readability
camel - 17894 : camel - jbang - deprecate the short option for suffix strategy in camel - jbang
removed debug log statements related to Apache Derby driver version checks to simplify logging and improve code clarity
- add timeout to ceep test
fix high cpu usage because of author name autocomplete
do n ' t update liquibase . hub . mode if it be already set
added constants for Eclipse OpenJ9 VM versions in Constants . java and a test method in TestDDRExtensionGeneral . java to ensure proper handling of
updated font request logging to accommodate CompositeFont and added a new DebugFonts class for testing font debugging to improve message clarity and demonstrate font
added support for HTTP / 1.1 in the negotiation process of the Negotiate Server ( ALPN ) by introducing a new import and
added rate control configuration in MaxConcurrentStreamsTest . java to improve control over concurrent stream handling in the HTTP / 2 implementation
added a new file ` Test6741426 . java ` that implements a Runnable for JComboBox and JTextField using NimbusLookAndFeel to facilit
updated the error message in the assertion from " Could not verify the provided CSRF token " to " No token is found " to provide clearer context
added null checks for dbMgdPath and dbExtPath in multiple conditional statements to ensure proper handling of potential null values before proceeding
api : s3copyobjectrequest copyrequest - fix javadoc
refactor methods in SettingsActivity to simplify theme handling by removing accentColor parameter to simplify the method signatures and improve code maintainability by using
make test more informative
replaced specific type information for maps and collections with ClassTypeInformation constants to improve code readability and maintainability by using predefined constants
add check for empty or null address in client config
8225082 : add exception for expire docusign root to verifycacerts test
# 1255 return the size of the queue instead of void .
added conditional logic to set mode based on popup state and current state to ensure menu behavior only triggers when appropriate
ttf : fix arrayindexoutofboundsexception when reading end of stream
8074551 : add some test to confirm that com . oracle . java . tool . garbagecollect . finalizeinfo work correctly
camel - 14263 : camel - core - optimize cachingroutedefinitionlocator to reduce object allocation when use map
add check for custom burnman address to compensation model
refactor StringSubject class to improve code readability and maintainability
reduced the size of byte array from 1 , 000 , 000 to 1000 , 000 and added an Ignore annotation to the BatchValidateSignContractTest to optimize
rename the method from ` setmaxInboundMetadataSize ` to ` set setMaxInboundMetadataSize ` to improve clarity and consistency in method naming
modified query handling in RetweetActivity and Search classes to replace " @ " with " from : " to ensure consistent query formatting for accuracy
removed conditional check for forRebalance to simplify the code logic
added a new endpoint to import accounts from an HTTP request in YubiKeyAccountRegistryEndpoint to enable users to import accounts directly from the Y
updated shader program addition in ShaderManagerLwjgl . java and improved texture parameter handling in FontMaterialProducer . java and AbstractNode .
added null check for ` cnt ` in ` paintOnTopLoop ` and adjusted safe area handling in ` SideMenuBar ` and ` Toolbar ` to
refactor AbiWriterProtocol to improve code readability and maintainability
update caption assignment logic to handle null values for subName to ensure proper assignment of caption based on the presence of subName
set data flag for morfologik ' s gate instead of imm
improve error message when custom expression be not find
sendrepublishrequest instead of requestblindVotelistfromnetwork .
add a test for postgres data source with mbeans ( disable by default ) .
replaced double quotes with single quotes in SubtitleUtils . java and RemoteUtil . java to ensure consistent character representation in code
fix ( comment ) : trim lead carriageriage return from javadoc tag
singleimplementor fieldupdater now encapsulate the snapshot updater in a separate atomicreferencefieldupdater
added null checks before adding queries to the list to prevent potential NullPointerException when excluding certain queries
fix thing creation for mixed type bridge
replace printHelp ( ) with error ( ) for better clarity to improve error reporting for unknown commands
added a check to return the existing output file if it exists to prevent potential errors when the output file exists
added functionality to parse date strings with trailing zeros or with specific formats to enhance date parsing capabilities in the application
added a method to find a post by its slug in ` SpringDataJPALockTest ` and a corresponding query in ` PostRepository ` to
change the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and update related logic to improve clarity
added a static inner class SimpleClientHttpRequestFactory for setting request timeouts to establish a standardized timeout for HTTP requests
fix path normalization in sourcetest
remove hardcoded graalvm . version system property in favor of graalvm . version system property
added checks for access token and refresh token validity in ClientAdminBootstrap . java to ensure proper handling of token expiration settings for the client
updated the method to return a value based on the Android API version to ensure that the correct SDK version is used when available
simplified references to ` this . placeholderPrefix ` and ` this . placeholderSuffix ` to improve code readability and maintainability
updated the formatting of the Subject Key Algorithm specification in the certificate details to enhance readability and maintain consistency in the documentation
updated ZkSolrClientTest to track and assert the number of collections processed in parallel to improve synchronization and accuracy of collection processing events
added support for BigInteger in MongoMappingContext to enhance type mapping capabilities for database operations
added a condition to check if the button text matches the existing toast message to enhance user experience by preventing unnecessary toast notifications
added a condition to check if MEncoder is disabled when noskip is disabled to ensure proper handling of media processing when sync is disabled
reduce event loop size down to reduce cpu usage
changed access modifiers of several fields and methods in CountMin4 and PeriodicResetCountMin4 classes from package - private to protected to en
modified ExternalFileField . java to implement sorting functionality and added a new test class ExternalFileFieldSortTest . java to enhance document retrieval
( chore ) camel - doi : fix exception message
added source information to events in OpenRocketSaver and updated flight event handling in FlightDataBranchHandler to enhance event formatting and ensure
changed the access modifier of the check method from private to protected to allow subclasses to access and override the method
added handling for synchronization finishing in FileActivity to improve user experience by providing feedback on file synchronization operations
updated URI generation in ThumbnailsCacheManager to use URLEncoder for resized images to ensure proper URL formatting and avoid potential issues with special characters
added a check for the " cn1 $ infinite " client property to prevent further execution when the container is not initialized
update total calculation in IntHashSet to ensure correct total summation for value distribution
added a conditional check for lock status before updating an entry to log an error if the lock timeout is not met
refactor conditional checks in SolarisAclFileAttributeView . java to streamline handling of ACE flags to improve code clarity and maintainability
replaced the list of edges with a single edge array and simplified the edge assignment logic to improve code efficiency and readability by eliminating unnecessary
added IOUtils . closeQuietly ( is ) to ensure proper resource management and prevent potential memory leaks
replace \ n with \ x0d and \ x0a in bibtex parser to handle different character set
added strict property handling and corresponding command - line argument parsing in Main . java and corresponding tests in MainTest . java to enhance command -
ensure that we always fail when a custom constraint be provide with always invalid
camel - 14263 : camel - http - http - componentverifier should use http4 a key to avoid name collision .
added a call to waitForThingsToLevelOut with a timeout of 30 seconds to wait for objects to level up to a specified time to improve test reli
removed redundant length checks in UBJsonWriter to streamline code for improved readability and maintainability
updated ApplicationTest . java with new test cases to improve test coverage for application functionalities
use stringbuffer instead of string concatenation
updated method signatures and variable types from ` Type ` to ` RoboType ` across multiple files to enhance type consistency and improve code cl
[ java ] : if the recording and subscription descriptor be both on the same thread , do n ' t allow the archive / subscription to be create on
dataImporter : add cachekey and cachelookup attribute to cachesqlentityprocessor
added a new file PutfieldError . java that demonstrates the throwing of IncompatibleClassChangeError to test the exception being thrown to ensure that the
do n ' t translate ip address to be in the same domain a the service
fixed possible overflow in memtable flush
replace instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _SPACE ` across multiple
removed the duplicate encodedLength ( ) method declaration to eliminate redundancy and improve code clarity
renamed TestMethodResultMapBuilder class to improve clarity and maintainability of test code
do n ' t search for a numberformatexception inside a numberformatexception inside a numberformatexception .
[ hotfix ] fix checkstyle violation in tasklocalstatestoreimpl
updated return statements in mmm Utils . java to return specific month and hour values instead of returning zero to improve clarity and consistency in resource
updated condition checks in Utilities . java and FloatingIconView . java to use instanceof for DeepShortcutView and SystemShortcutView to improve code clarity and
changed the type of the ` validator ` from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > ` and updated
renamed methods for buying and selling in Coinmate classes to improve method naming consistency and clarify functionality
added a new file CoverageConfig . java to define configuration settings for coverage testing to improve maintainability by centralizing bean initialization and conditional class loading
added a check to ensure the EventBus instance is registered before registering sticky sticky to prevent potential errors caused by duplicate sticky registrations
added ASCII - only character count check in NormalizerBase to optimize normalization process by skipping unnecessary operations
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordinationservice
updated SQL update statements in SpillableGroupByIT and added assertions in NoOpStatsCollectorIT to ensure that statistics update fails without throwing exceptions
camel - 9168 : upgrade camel - cometd to use junit4 - features .
added ` attrs ( AttrKind . OK , ... ) ` to multiple ` HR ` methods in ` HtmlTag . java ` to ensure compatibility with HTML
added a line to write an HTML report with line breaks to improve readability and formatting of the report
update ramBytesUsed calculation to account for scores to ensure accurate memory usage estimation when scores are null
added custom Gson implementation for StringHolder and TypeToken in CustomTypeAdaptersTest . java to support serialization and deserialization of custom type adapters
add miss extra data to coordinator to allow mining
added a static final Map to track the number of parsed arguments to facilitate dynamic configuration of parsing parameters
fix incorrect javadoc in pathparamserverendpointconfig
cleanup rule management executor after migration
change parameter name from ' part ' to ' partOrList ' in multiple classes to improve clarity and consistency in naming conventions
move bootstrap . js to titterbootstrap / webflux
remove now unused basiccategory ( )
hhh - 16913 make uniquekey loader default to non - deprecated
hbase - 18309 [ ratisconsensus ] fix ratisconsensus test failure
fix off - by - one error with setsize ( ) in java2d
fix checkstyle issue .
None
fix @ client ( .. ) for executable method with no default method . fix # 1387
jbrules - 2617 : fix handling of comma in drlparser ( # 2266 )
refactor multiple subject classes to improve code organization and maintainability
prevent a protocol error when payload length be negative .
move abstractmessagedispatcher and broadcastingdispatcher from ' channel / parser ' to ' dispatcher ' in integration - channel module .
updated ` executionId ` from ` String ` to ` Long ` across multiple classes to accommodate larger execution IDs to enhance data handling
added multiple byte updates for width , height , and resolution in ImageProcessor . java to enhance the image processing by utilizing digest updates
added new import statements for SolrConfig , SolrConfigHandler , and LocalSolrConfigHandler classes to enhance configuration parameters handling and improve code organization
updated the delay time calculation in FileSyncResult to improve synchronization timing based on current time
fix checkstyle failure in segmentv1v2tov3formatconvertertest
refactor addPathToMTree method to use Path object instead of String for measurementId to improve type safety and eliminate unnecessary string concatenation
updated DefaultPackageScanClassResolver to handle URLs with file extensions and improved error logging to enhance URL processing robustness and provide clearer
[ flink - 30613 ] [ table ] introduce timestampextractor to extract timestamp data type from physical input
added a new class SpringSecurityAuthenticationSource to manage Spring Security authentication sources to enhance security handling in LDAP authentication processes
updated AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve concurrency handling to enhance performance and reliability of concurrent operations
updated minSdk version in ShadowAlarmManager from LOLLIPOP to KITKAT to ensure compatibility with the latest testing framework
replaced the autoSuggestDialog implementation with a cached file list dialog to improve user experience by using a cached file list for file suggestions
added a new test method ` testNewput ` in ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to check the asset
updated method parameter names in MongoTemplate . java for consistency to improve code readability and maintainability
map overview : fix zoom on mouse wheel up
updated KNearestNeighborClassifier to accept a Similarity parameter and adjusted related tests to enhance classification performance by allowing different similarity calculations
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query performance by utilizing a more efficient scoring mechanism
replace ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to retrieve the reason for low resource checks to
updated package - info . java files for mmm and ppp packages
added tests for requestMtu method in ShadowBluetoothGattTest and modified MTU handling in ShadowBluetoothGatt to ensure correct MTU request behavior to validate
extracted the creation of ServletOutputStream into a separate method to improve code readability and maintainability
[ vosk ] disable stricter log level for s GetField ( )
fix thread - safety issue in channelprocessingmanager
updated Japanese and Chinese resource files to improve clarity and consistency of resource strings
updated size check from 0 to 1 in JDBCTypeMapping . java and modified test assertions in JDBCTypeMappingTest . java to ensure correct mapping
made addPlayer and removePlayer methods synchronized and streamlined entity addition and removal calls to improve thread safety by ensuring synchronized access to methods
refactor accessibility state testing by utilizing regex and Matcher for control code and state extraction to improve code maintainability and ensure accessibility state
added support for a side navigation button behavior in the MenuBar and SideMenuBar classes to enhance user experience by allowing smoother navigation by
removed unnecessary variable declaration and simplified the subscription syntax in PoloniexManualExample . java to improve code readability and maintainability
updated energy limit validation logic and added a validation check in ` UpdateSettingForEnergyLimitContractActuator ` to ensure energy limits are greater than zero to
refactor URL handling in PostmanJsonBuilder and add protocol support in UrlBean to improve clarity and functionality to support protocol configuration in URL management
camel - 6192 add support for namespaceprefixref property on soapobject
pdfbox - 4892 : improve unit test , a suggest by valerybokov
added logic to restart and verify the BasicAuthPlugin in Solr integration tests to ensure proper configuration and security for the Solr client
add currency code if not useStickyMarketprice
refactor replication configuration to set default values to ensure consistent initialization of replication settings across test cases
8015349 : ` ` abc ' ' . lastindexof ( ` ` a ' ' , - 1 ) should evaluate to 0 when search for
set download to true after file be download
[ java ] set the length of the filechannel to the buffer when read from a raw log .
added a method to check if a registry is running and a file exists with retries to enhance reliability of file deletion operations
removed unused imports from EditTest , Quick3dMain , and TextureTest classes to streamline code by eliminating unnecessary dependencies
removed unused variables and added multiple @ SuppressWarnings annotations in multiple classes to improve code safety and suppress unchecked warnings during compilation
added null check in TraceFeignContext to prevent potential NullPointerException when instances are null
phoenix - 2549 modify phoenix databasemetadata implementation for transaction support
added transaction handling logic to ` AbstractStepFactoryBean ` , ` ItemOrientedStep ` , and ` SkipLimitStepFactoryBean ` to
updated ` CasManagementSecurityInterceptor ` to extend ` SecurityInterceptor ` and set a default name for the ` CasClient ` to improve
remove add category from navigation drawer since it do n ' t exist
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated its usage in ` FileDisplayActivity
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve flexibility by allowing dynamic text size based on device locale preferences
make sure constant analysis do n ' t modify invalid fact
refactor multiple Java files to improve code organization and maintainability
change return statement to return a new ArrayList instance instead of the reference to spans to ensure that the original spans array is not modified externally
removed unnecessary parameters from the parse method and cleaned up code to streamline the code for better readability and maintainability
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to reset it to null to ensure that the correct revision is used to
updated foreign key handling in TableRetriever and AbstractRetriever classes to use a formatted string for foreign key and index name to improve consistency and
camel - 16171 - add usedefaultcredentialprovider option to all aws2 component - aws2 - s3 component
removed the currencyPair parameter from the getBitstampUserTransactions method call to simplify the method signature and improve code clarity
added try - catch block to handle NoSuchComponentException when retrieving the component instance
allow the stream to push the request into the push target without require push .
updated LegacyAddressTest to read from a file instead of hardcoded values to improve test flexibility by allowing dynamic reading from a file
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from outside the package
refactor push notification handling into a separate method and improve readability to enhance user feedback and maintainability of push notification logic
add log to close channel
( chore ) camel - ldap : avoid string comparison issue
refactor DefaultAnnotationEngine and Stubber classes to improve code readability and maintainability
added an @ Ignore annotation in MemoryManagerTest . java to temporarily disable the test due to issue PHOENIX - 2840
nifi - 1255 : added timezone support to the aboutDTO class .
do n ' t split range that we do n ' t have enough to split
removed unnecessary try - catch block when reading objects to simplify code and improve readability
fix potential deadlock in active circuit management
replaced GdxRuntimeException with IllegalStateException for shader error handling to provide a more appropriate exception type for uncompiled shaders
flume - 1701 . fix stop ( ) from pollablesourcerunner and eventdrivensourcerunner .
ambari - 20527 . log more detail when fail to authenticate a user ( oleewere )
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal efficiency
make sure freehand function have a point length
renamed the constructor parameter in CasRiskBasedAuthenticationEvaluationStartedEvent to improve clarity and consistency in naming conventions
modified the connection handling and logging mechanisms in SchemaCrawlerMain and Executable classes to ensure proper resource management and improve logging clarity with
bump default tl version to v1.2 with test
[ java ] add miss ` ` metadata ' ' in exception message .
format adjustments in MediaManager . java for better readability and consistency to enhance code clarity and maintainability
updated debug logging to include the cancelled status to enhance visibility of connection status during debugging
added @ Transient annotation to JpaPersistentPropertyImpl and its unit test to ensure JPA persistent properties are correctly treated as transient attributes
updated test cases in UpgradeResourceProviderTest to reflect changes in the stack version handling to ensure accurate testing of the desired stack version in the upgrade process
truffle / instrumentation : fix eval to return object instead of symbol
do n ' t log a debug message if we ca n ' t understand the encode of a url
corrected the configuration key for dynamic partition pruning to ensure consistency and accuracy in data size settings
added priority constants to JavaProblem and modified findProblem method to improve problem selection accuracy and priority management
[ iotdb - 6061 ] remove dictionaryindexconfig . default _ offHEAP usage ( # 6064 )
( chore ) test : replace hardcoded newline with system property ` ` line . separator ` `
refactored DebugHelper . java to improve code readability and maintainability
added a boolean flag to track texture ownership in ParticleEffect . java to ensure that texture ownership only occurs when necessary
added new LDAP configuration properties to HiveConf . java to enhance security and configuration options for LDAP authentication
chore : integrate new gapic - generator - java and rules _ gapic ( # 562 )
updated the initialization of InputMethodManager to use Context . INPUT _ METHOD _ SERVICE and added necessary imports to ensure proper context usage to enhance code cl
added a test method to verify the conversion of primitive map of integer to map of map < Integer , Map < Integer , Map < Integer ,
updated size calculation in TestFileSystem to improve memory management by adjusting size
update error message in ContentTypeManager . java to provide clearer guidance on potential issues related to resource management issues
added ` dropSequences ` method implementation in multiple database classes to ensure proper handling of sequence dropping in the database operations
added a null check for the status variable to prevent potential NullPointerExceptions during execution
store the result of binaryField . createField in a variable before assignment to improve code readability and maintainability
fix hierarchicalicon parse when the node be not active
datamongo - 540 - added unit test for upsert operation with non - existing object .
replace the calculation of mid variables with a more concise low and upper bounds to improve code readability and maintainability
added functionality to record app launch statistics and refactored broadcast intent creation to enhance app performance tracking and improve code clarity
added drawing functionality to the graphics context and removed data from the object to ensure proper rendering and prevent memory leaks in the graphics context
update result page data to clear member
fix zero player inventory id
[ hotfix ] fix checkstyle violation in configdescriptionregistry
updated method signatures to include returnType and returnTypeAnnotations in ReloadableJava parser visitor classes to enhance support for additional parsing requirements
updated TileMapRenderer to handle blended tiles property to improve error handling for missing or null blended tiles input
added " java . util . concurrent . FutureTask " and " java . util . concurrent . ConcurrentHashMap $ KeyIterator " to multiple classes
fix an npe in IfcTools2D . java
updated lockOnSync initialization and usage to improve clarity and maintainability of throttle logic
[ pipe ] pipeeventbus extend pipedirectionitem to allow for override
removed the timeout parameter from ZkController instantiation to simplify the code by removing unnecessary parameters
added a test for verifying the passcode function with client parameters in TokenMvcMockTests . java to ensure that the passcode function works
added support for length filtering and length checks to broken offsets in TestRandomChains . java to enhance functionality and ensure correct behavior of token offsets
removed the unused JUnit Ignore import to clean up the code and improve readability
fix 64 - bit vms to avoid overflow
refactor method to use instance method for object positioning to simplify the code and improve readability by eliminating unnecessary pointer checks
added copyright retrieval and updated the OPENROCKET _ URL in BuildProperties . java , updated commit URL in AboutDialog . java ,
add getdistributedobjects method to jetclientinstanceimpl . getdistributedobjects ( ) [ api - 2201 ) .
fix unit test and add debug statement
updated the memory calculation in SmartDexingStep to use maxMemory instead of totalMemory to ensure the semaphore uses the correct maximum memory configuration
fix typo in createalignedTimeSeriesplan ( # 1598 )
change bisq co - founder to bisq . co - founder . replace co - founder - with bisq
updated the input string format and added tests for handling large integers to improve JSON parsing and ensure proper exception handling for large input scenarios
update capacity check for ObjectSet to allow for more flexible table size requirements
updated import statements and refactored data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure decimal digits are only set for non
removed @ AddToRuleKey annotations from several fields in AppleTest . java to simplify the code by eliminating unnecessary @ AddToRuleKey annotations
added a try - catch block to handle SecurityException in FileHelper . java and updated content trimming in TextHelper . java to improve error handling
added support for multiple attributes in the theme application to enhance flexibility in applying styles with multiple attributes
updated the method to use ` sheets . size ( ) ` for checking the number of sheets in ` HSSFWorkbook ` to ensure the correct
replaced primaryColor method with elementColor method for better theme management to improve visual consistency by using the element color instead of the primary color
None
added a binaryCollationName field and its configuration in MariaDbDbmsType . java , and implemented its in FilterSortedSkipOptimizer .
added a new method ` whenType ` to return an ` Optional < T > ` based on the class type of ` Tree ` to enhance flex
refactor navigation handling in ItemLauncher to streamline destination retrieval and improve code clarity to enhance code readability and maintainability
changed the response type from OK to temporaryRedirect to provide a temporary redirection to the specified public URL
improve error message when use non - serializable kinesis deserializer
camel - 7999 : fix the javadoc issue of camel - core
replaced a sleep duration of 2 seconds with a try - finally block to manage the lifecycle of the ZkClient to ensure resources are properly closed even if
updated method names for consistency and clarity in handling icons and banners transition progress to improve code readability and maintainability regarding transition animations
refactor read method to use a unified read method to improve code reusability and maintainability
replaced BufferUtil . allocate with ByteBuffer . allocate for better performance to optimize memory usage by avoiding unnecessary allocation in tests
removed the extra _ stream flag from the prepareStreamsToUpload method and changed the return type of prepareStreamsToUpload from void to boolean to simplify the
updated comparison logic in AbstractConfigLoader and modified config model parameters in TestMicroserviceConfigLoader to ensure consistent ordering of configurations and to correct the order comparison
added a new file ` PicOfDayAppWidget . java ` to implement a widget for Picasso ' s Picasso
cloudstack - 1125 - internal lb vm config change - set internal lb vm default value to 0 instead of null
updated HiveParserCalcitePlanner to use HiveRelOptUtil and improved join condition handling to enhance functionality and support for semi - join operations
[ hotfix ] [ stream api ] deprecate .
added user credentials and password options for remote JMX in NodeToolCmd . java to enable secure access to remote JMX for improved security
removed redundant initialization of BytesRef storage to streamline code by eliminating unnecessary variable assignments
fix widget load problem
[ desktop ] show 3d view only when need
update rotation calculation in GcodeRenderer . java to ensure proper positioning within valid range
added a new option to set the workspace directory in the TerminalClient to allow users to specify a customizable workspace location for the application
replace options . apt with options . html in climanagertest
updated test classes in ScimUtilsTest to use JUnit 5 annotations and assert statements to ensure compatibility with the latest testing framework
updated OAuthConfirmationController to use a Map for model attributes instead of a single model attribute to simplify the code and improve consistency in session management
updated session handling in HibernateIT . java to ensure that session statistics are correctly cleared and verified during tests
refactor EventBusHook class to improve code readability and maintainability
refactor MultiPaintEventTest to improve code readability and maintainability
changed the variable declaration from final to non - final for mNewScale to allow for potential modification of the scale variable after the transition animation
refactor SyncFactory to improve code readability and maintainability
added support for unique key fields in LukeRequestHandler to ensure consistent identification of unique keys across different schema configurations
added ` roundBorderColor ` property and updated color retrieval in ` EditableResources ` and ` BorderEditor ` to utilize it to improve color handling for
make bytecode parser tolerant to compiler assert .
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchSchedulingtest
added logging statements and modified return values in GatewayRSocket , PingPongApp , and RSocket classes to enhance debugging capabilities and improve code cl
added toolbar menu item functionality to RecentChatFragment to display a message about the underconstruction action
refactor ` InfoDropTarget ` and ` UninstallDropTarget ` to extend ` UninstallDropTarget ` and modify methods to return a boolean indicating success to improve
replace occurrences of ` getTail ( ) ` with ` push ` in multiple classes to improve clarity and consistency in scope management
update URLs in CommonsApplication to use " commons " prefix instead of " test " to ensure consistency with the new wikipedia namespace
refactor index handling in statement processing to improve code clarity and maintainability
replaced usage of Collections . sort with list . sort call in multiple classes to improve code readability and simplify sorting functionality
added two DateTimePatterns to the FormatData _ hr _ HR . java file to support ISO 8601 date and time patterns for improved data handling
added a line to clear focus from the clicked view to improve user experience by resetting the focus state
updated selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to improve user interaction and handling of language code selection
updated time zone name for West Samoa from " WSST " to " WSDT " across multiple language files to reflect the correct design
added native methods for registering and managing MyItem instances in Fast getField . java to enhance functionality by allowing dynamic field access based on specific
added handling for default values in JSON fields to ensure proper serialization of UNION schema fields with null values
fix flaky seda test
add null check before remapping resource to avoid potential NullPointerException
add miss constructor ( # 3390 )
http : add explicit connection close request header to properly close the http connection
increased socket timeout from 60 seconds to 120 seconds to allow more time for distributed operations to complete successfully
add a test case to show the bug
refactor Parser class to improve code readability and maintainability
refactor CasProcessingFilter class to improve code readability and maintainability
fix thanks to daniel for the patch !
planner - 165 add enum type check to fix compilation error
[ java ] wait for node to shutdown before start a new one .
improve log message when no beanelresolver property be present .
set the content type to " application / octet - stream " in WebdavEntry . java to ensure correct content type is used for binary data
added getQueueSize method to LazyTraceThreadPoolTaskExecutor and created corresponding unit tests to ensure correct queue size retrieval from the delegate ThreadPoolTaskExecutor
add envelope check to distanceop ( # 252 )
rename ` ` required ' ' field to ` ` requiredlabel ' ' to avoid confusion .
added updateProgress ( ) method call to PurgingPartitionIterator to ensure progress updates during iteration
added a method getAsUnescapedPath to SchemaPath to provide a way to retrieve the unescaped path of a schema element
added abstract methods for height and width in BaseMonochromeBitmapSource to provide consistent access to monochrome data
added validation for the number of vertices in the polygon to ensure that polygons contain at least 3 points to avoid potential ArrayIndexOutOfBoundsException
replaced instances of ObjectMapper with ObjectMappers . newDefaultInstance ( ) for better consistency across the codebase to utilize the ObjectM
make sure point [ { 0 , 1 } ] ca n ' t be create with null a point
fix reading of enR with unicode name ( bug 47384 )
amq - 6271 : fix typo in doc for abstractjmsprocessor
added logic to exclude username and password fields based on the return value of the login prompts feature
updated listener removal from a method call to a lambda expression to improve readability and maintainability of the code
added a switch statement to spin the chart with a specified rotation angle to enhance the chart ' s visual clarity during interactions
bug 7448 : delete vhd if copy fails
hbase - 25962 hmaster should not normalize table when it have a namespace quota
removed unnecessary import statements and added a resize method to improve code clarity and encapsulate resizing logic
add a static method propertyvaluesof ( ) to access all property value from a bean
ignore test that be always fail and block rpcs
correct the hopperhock ' s coordinate pass to getentitieswithinbounded so that it return the correct bounding box .
added authentication dialog to SsoWebViewClient for improved user authentication process to enhance user experience by providing required authentication credentials
updated TestStressIndexing2 . java to improve document retrieval and indexing methods to enhance test robustness and functionality for better document deletion process
[ flink - 22559 ] [ test ] disable flaky upsertkafkatableitcase
updated type list retrieval and simplified size calculation to improve code readability and maintainability
fix jsondeserializer to accept singlevalueasarray by default ( # 2720 )
added localization update strings to VersionChangeLogs . java to support multiple language preferences
adjust description of shortcut category property
drools - 1243 feel support instanceof operator and add test
nifi - 6962 - add content - type header to gethttp to preserve flowfile header if present
add toprovenance ( ) to resource _ history table to facilitate conditional deletion of resource
updated button labels and added searchable check for book content in SearchBookContentsActivity to enhance user experience by displaying a specific message when the search is
camel - 14263 : camel - nats should use source code generate configurer to avoid reflection configuration .
modified the ` invalidateStalePartition ` method to accept a ` MetastoreContext ` parameter and updated partition cache invalidation logic to improve caching
bug 60564 - view result tree : improve performance
changed drawable resource from ic _ group to ic _ chat _ bubble to enhance user interface clarity by indicating a bubble icon
change ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to use ` getLongVolatile ` to
updated method names in MocksCreationTest for consistency and clarity to enhance readability and maintainability of test methods
added a constant for the data source name and changed method visibility in CSVThirdEyeDataSource and YamlDetectionConfigTranslator classes to enhance code clarity and
updated awaiter timeouts from 10 seconds to 30 seconds in multiple locations to allow for a longer processing time for phaser synchronization
removed the ` BuildSlaveFinishedStatusEvent ` class and updated ` DistBuildRunCommand ` and ` DistBuildSlaveEventBusListener ` to
bug 10782 : fix findbugs encode warning in vmwarestoragemanagerimpl
[ task 71440 ] add workflowitem and workflowitemrestrepository integration test
[ hotfix ] [ core ] make java . lang . classloader support distinct classpath file
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating an unnecessary state access
updated argument handling in SpecificCompilerTool and added a new test for flag ordering in TestSpecificCompilerTool to improve argument parsing and ensure correctness of
added a table check before deleting partitions in HiveMetaStore . java to ensure only external partitions are deleted to avoid potential errors with directory deletion
updated HiveServer2 async execution parameters and improved error messages for better clarity to enhance the flexibility and user experience by allowing more
added a try - catch block around the dismissDialog method to handle potential exceptions when dismissing the dialog
updated UpgradeResourceProvider to properly handle service and component identification to improve the accuracy of service execution by correctly referencing the task service and its component
fix copy / paste error spot while edit sip session .
reload log tree when log tree be update ( # 865 )
updated return statements in ChannelEndPoint . java to include additional conditions for socket operations to ensure shutdown checks are more accurately represented
refactor SetNullableGenerator class to improve code readability and maintainability
camel - 14263 : camel - report -Incident : add option to turn off servlet transport .
simplified import statements and refactored form handling logic in NettyRoutingFilter and FormIntegrationTests to enhance code readability and maintain
added @ ApiOperation annotations and implemented the hello methods in AbstractBaseService , IBaseService , MyEndpointWithInterface , and MyService classes
refactor window update logic to ensure lifecycle listeners are properly paulated and dispose disposed
updated FG _ FK color from 90 , 0 to 200 to improve visibility and aesthetics of the FG element
mow - 364 disable mp3 for sound manager by default
use systemkeyspace . getBuilt indexes to test against built - indexes
plugin versioning : add a ` ` bundle - version ' ' header to the plugin ' s ` ` version ' '
[ hotfix ] [ test ] make customserializationitcase more robust
refactor MediaFormatUtil to improve code readability and maintainability
added isCellEditable method to GeneralTab class to ensure that cells in the table are not editable
added a method to conditionally print unused dependencies and modified the message construction logic to support conditional printing of commands based on the configuration settings
added a tmpCount variable and updated the v scales array in VocalTractScalingProcessor . java to accommodate a new scale value 0.
updated import statements for BaseScalarUdfTest and TestGenericUDFConcat to ensure consistency in test utility usage across the codebase
implemented hashCode and equals methods in UaaAuthenticationDetails class to ensure proper object comparison and hashing functionality for UaaAuthenticationDetails
skeletoncontrolrefresh now use animcomposer instead of animcontrol
rename nodefilter to nodecountfilter to avoid confusion .
change the condition from " less than or equal to " to " less than or equal to " in the sync block fetching logic to ensure that the fetch
improvement to the delombok ruleset to match the modular expression
updated dependency resolution logic to include scope checks to ensure that dependencies are excluded from the dependency scope
replaced the temporary variable ` tmp ( ) ` with ` dst2 ( T v ) ` and modified the parameters for ` lerp ( ) ` to
[ grid ] fix initialization of hub args
updated RustBinaryDescription to use linker flags as an ImmutableList instead of a List to enhance flexibility in linker argument configuration
[ # 8888 ] update adminemailpageuitest to work with both travis and appveyor
added configuration for HIVEQUERYNAME and improved logging in GenericUDTFGetSplits to enhance clarity in application ID generation and include external D
removed unused import of java . io . File to clean up the code and improve readability
make sure we do n ' t call flush ( ) in a locked block .
updated the ` validateQuery ` method to accept additional parameters for error messages to enhance error handling by allowing more detailed error messages
updated INDEX _ VERSION from 1 to 2 and refactored the getTree method in LuceneExecutor . java to align INDEX _ VERSION with
[ hotfix ] [ runtime ] add test for kryo serialization
added null check before removing a property from the configuration to prevent potential NullPointerExceptions when adding configuration types
updated boolean handling logic in MetaStoreDirectSql . java to improve compatibility with various data types in MySQL
added a call to hideCustomizationDrawer ( ) to improve user interface responsiveness by hiding the customization drawer
added a constant for warning keys and refactored warnings handling in TermVectorComponent . java to improve code clarity and maintainability by standard
6916623 : jshell tool : improve error message for optimistic type problem
updated expectations handling to improve clarity and maintainability of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and updated DockerClientBuilder to support Unix socket access to enhance compatibility with Unix socket configurations in the Docker
add flaky test for closeable dos filter due to low rate ip .
camel - 18366 : camel - core - optimize reactivestreamswithactivesubscriptionstest for good error reporting
refactor ` Vectorizer ` methods to use ` MapWork ` instead of ` MapRedTask ` and ` TezTask ` to improve
log4j2 - 1342 bugfix : stringappender and logdivertappender now set flag to true
fix npe if there be no gui package
[ gr - 16607 ] update sulong function to be weak .
removed and added several related Java files to improve code organization and maintainability
add test for defaulttransactionthreadlocal with transaction
added a check for invalid operation handles in HiveStatement . java to enhance error handling by logging warnings for invalid operation handles
updated command type from ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - aws : add usedefaultcredentialprovider option to all aws secret manager component - aws secret manager
refactor SimpleTree class to improve code readability and maintainability
modified the string concatenation syntax in the UserREST class to improve code readability and consistency
added a subTree parameter to the fromContent methods in Result class to provide more control over whether the result is a sub tree or not
update column width calculation in Sheet . java and add a new testColumnWidth method in TestHSSFSheet . java to improve the accuracy of
added configPath parameter to the less command to specify the configuration path for the command execution
changed data types from Set to Collection in DotWriter and GraphExecutable classes to improve flexibility in handling multiple table collections
update default sshd port for testcontainers
fix the npe on kvm side
replaced multi - valued column handling with single - value iteration to improve grouping logic and support for multi - valued columns
lucene - 759 : make test more robust to failure .
fix bcelllion gate not work correctly
fix mix in with object for property placeholder . fix # 1651
None
update rewrite function in ModifyRequestBodyGatewayFilterFactory to use originalBody instead of originalBody to ensure correct handling of empty requests based on updated data
added package accessibility checks to ConstructorFinder , FieldFinder , and MethodFinder classes to enhance accessibility validation for classes and methods in the package
replace instances of ` logger . warn ` with ` logger . trace ` in LoggingHandler . java to improve logging granularity and consistency
fix whitelisting of file with wildcard ( # 3348 )
added menu options functionality to the GalleryActivity for selecting images in a gallery to enhance user experience by allowing users to navigate to gallery attachments
refactor MongoDBServiceFactory to ensure a single instance of MongoDBServiceBuilder is used for each instance creation and avoid multiple instances of it to improve
add test to ensure inline constant mutator do not replace true / false with true / false
added a blackhole parameter to the decode method in RecordTest . java to consume and consume additional data during decoding
fix : update gapic - generator - java with mock service generation fix ( # 1249 )
updated ` getAllUnitStrings ` method to return a ` Map < String , String > ` instead of a ` Stream < String , String >
clear the witnesses list in ManagerTest to ensure no residual witnesses remain in the database
add log to jdbcsink when abort
removed the stack property and replaced it with getter and setter methods to improve encapsulation and control over stack management
removed condition that checks if the path name starts with a period to simplify the path validation logic
rename onboard to autoload for backward compat
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure proper cleanup of index before tests are executed
update boldweight normal to 0x190 , to match the spec
made thread group variable volatile and modified the timeout class to use a constructor to improve thread safety and immutability of the timeout value
refactor constructors in ValueResultData class to improve clarity and enforce immutability of the value parameter
updated hash code and equality checks in FuzzyQuery . java to ensure consistent behavior by using superclass implementations
[ test ] remove debug statement
change return type of removefile and removedirectory from sharedopenfilescache to void
updated JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to reflect the correct product version from 2.5 . 1 to 2.6 .
updated the method to create a resolved principal using a provided credential handler to improve the efficiency and clarity of the principal retrieval process
[ openwebnetbridge ] change log level to warn
replaced intHash and longHash methods with hash method for consistency across hash map implementations to improve clarity and maintain uniformity in hashing behavior
fix crash when uploading large file
updated loop condition in GroupSelectionQuery to include a retry limit to ensure robustness by allowing retries when the number of found elements does not reach the specified
add a new file ` Bug1933922 . java ` implementing a hashmap for managing program programs to address and monitor recursive compilation issues
standardized spacing and formatting in several Java files to improve code readability and maintain consistency
update character validation from 0 - 31 to 32 in FileResolver . java to ensure that only valid control characters are accepted
added a call to request focus on the component to improve user experience by ensuring the component receives focus
update instructor home page test to show correct test data
rename jsonparserasync to jsonstreamparser
updated DetailFragment and MainActivity to improve message handling and ensure consistent behavior across activities
added tests for schema template creation and fetching with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correctness of schema and times
refactor Dialog class to improve code readability and maintainability
replaced the direct call to Runtime . getRuntime ( ) . exec ( args ) with a ProcessBuilder to start the process using ProcessBuilder to ensure the
[ hunspell ] use non - deprecated inetaddress . getlocalhost ( )
refactor metrics handling to use a for - loop for setting subsystem paths to improve code readability and reduce duplication in subsystem determination
skip some test on macos
compiler : make java . specification . version and java . vm . vendor optional
updated Mockito dependency version to ensure compatibility with the latest features and bug fixes
refactor TestLargePageUseForAuxMemory . java to improve test clarity and maintainability
updated methods in BinaryParser , PlainTextParser , and ParsingExecutionContextView to utilize a Charset parameter and added charset management to enhance flexibility in
added support for configuring multipart data compliance in HttpConfiguration and created a new MultiPartFormDataCompliance enum to enable flexible handling of multipart data compliance settings
added GradleVersion . version ( " 7.2 " ) to GradleDistributionManager to support JDK 17 features and improvements
added an ` addType ` method to both ` DatabaseSnapshot ` and ` SnapshotControl ` classes to improve code clarity and functionality to enhance type
refactor Term class to improve code readability and maintainability
modify return statement to handle null or empty runWith values to ensure valid input to avoid potential NullPointerExceptions
add a small test case to check if two xares share the same resource
refactor multiple classes to improve code organization and maintainability
[ pdf417 ] fix corner case of pdf417 luminance
fix lint error in taskview
added a new file ` SumZeroAggr . java ` to implement sum zero functionalities to provide a framework for aggregating and standardizing
fix test failure on oracle .
hbase - 20535 make allocation fail warn message clearer
added a null check for propName before putting it in roleObject to avoid potential NullPointerExceptions when propValue is null
updated visibility annotations and refactored code in StatusBarTouchController , RecentsView , and StartLauncherViaGestureTests to use @
add a stream parameter to the log container command to keep the parameter
add unit test for mvstore cache performance .
updated LONG type from " L " to " J " in PrimitiveType . java to reflect the correct data type representation
changed the method signature of ` delegatingApplicationListener ` from instance to static to allow the method to be called without creating an instance of the class
set the message body to null in RestBindingAdvice to disable further processing of the message body
added FileDeletingTasklet and TaskletJobFunctionalTests classes for managing tasklet files to ensure proper deletion of files in the specified directory
update center and orientation regarding view on rotation
fix arrayindexoutofboundexception ( index out of bound ) .
refactor ` sendEventToTest ` method to use ` stateOrdinal ` instead of ` eventTag ` for improved state handling to enhance
added user agent checks for video thumbnail requests in RequestHandler and RequestHandlerV2 to ensure proper handling of video thumbnails based on user agent
fix error code selection when there be no line number
modified the placement logic for the open button based on the theme constant " menuButtonTopBool " and " menuButtonBottomBool " to accommodate
updated value in Skia . java and set preload to " libskia " to ensure correct linking of the Skia class in the code
networkparameters : add unittest id
added validation to ensure format arguments are not specified in the query command to improve error handling and provide clearer feedback when incorrect arguments are provided in
replace capacity with length in IntIterator . java to improve clarity and correctness in handling the array length
added a source rule parameter to the walkRuleAndAdd method calls to enhance dependency traversal by incorporating the source rule information during processing
[ netbeans - 3761 ] allow for source override for patched module .
[ java ] remove conditional check for semantic version support .
set single session per account only for saml auth
add requireNonNull checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure that a message is provided when the mappedTableResource is
simplify close code by use utils . close ( )
refactor AnonymousAuthenticationFilter to utilize a deferred context for security context creation to improve security context management by ensuring the current context is properly managed
modified the removeActor method to accept an unfocus parameter to enhance actor removal functionality by allowing unfocus control
refactor cloud configuration prompt to use a constant variable for valid configurations to improve code readability and maintainability
add log level support to camel - netty
refactor multiple parser - related classes to improve code organization and maintainability
fix possible ui thread freeze in codedependenciespanel
camel - 16205 : camel - groovy - support load groovy script from classpath .
o removed dependency on project . getmanagedversionmap ( ) and use collections . empty _ map instead .
[ hotfix ] make the constructor of clioptions public for use outside the package .
renamed ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and implemented a commit method to enhance clarity and functionality of shared preferences
remove debug output
simonstewart : make it easy to understand why we ca n ' t convert the response to a java . lang . string
change visibility of updateImage methods in ImageButton and ImageTextButton from private to protected to allow subclasses to access and override the updateImage method
fix block . dropplayers not drop xp ( # 8859 )
added native methods for spatial location configuration in DataOutputQueue and depthai classes to enable retrieval and management of spatial and depth calculator configurations
refactor multiple Java classes to improve code structure and maintainability
updated the ` isEmpty ` method to use ` _ root ` instead of ` keySet ( ) . isEmpty ( ) ` and added a new ` isEmpty
updated color calculation for foreground and background in AttributedStringBuilder . java to improve visual consistency by using the appropriate color values
updated the ` doFingerprint ` assignment to conditionally include a system property for fingerprinting to enhance control over fingerprinting behavior based on user configuration
changed the access modifier of the ` moveFunds ` method from private to public to allow external access to the method for moving funds functionality
removed redundant calls to maybeEmitEvent in MongoTemplate . java and added a new listener in MongoTemplateTests . java to enhance event em
fix settransactiontest and setcollection
ensure we close the tikainputstream , if we fail to open a tikainputstream in the cli , close it
updated the JSON structure in the modify method and catch block in TestCollectionAPIs . java to improve handling of API exceptions to ensure compatibility with the latest
removed unnecessary whitespace in the configuration loading statement to improve code readability and maintain consistency
fix typo in log message for servlet action failure
cleanup checkstyle fix & minor code cleanup
[ type : refactor ] remove stepping from virtual datapoint .
enhanced logging messages for acquiring and releasing shared locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality
fix scheduleJobs ( ) method to be consistent
simonstewart : fix this lameness .
update logger stack to use threadlocal for logger instance management to improve thread safety and performance in logger operations
made the ` convertToCompilationUnit ` method visible for testing purposes to facilitate unit testing by explicitly indicating that the method is intended for unit testing
added type checking and boxing for primitive types in multiple classes to improve type safety and handling of primitive types
reset orientation state on task switch
hbase - 24821 simplify the logic of getregioninfo in testflushfromclient to reduce redundancy code
fix contract data not persist in memory
updated balance calculation in TokenIssueProcessor and adjusted allowance validation in Program to ensure consistent fee handling and improve accuracy in withdrawal operations
refactor RealisticRenderStrategy to use URI for texture management instead of RocketComponent to improve texture handling efficiency and resource management
updated raster handling in Blit . java and added a new Bug7049339 . java file for image operations to improve code clarity and
added a boolean flag ` isUnselectedStyle ` and updated methods in ` Label ` and ` DefaultLookAndFeel ` to use it to improve handling
updated ArrayList initialization to specify initial capacity and improved performance to optimize memory usage and enhance efficiency in managing action collections
removed the flags parameter from several query methods in ShadowApplicationPackageManager to simplify the method signatures and improve code clarity
refactor PingRequestHandler to improve code readability and maintainability
use separate uri for test demo app
update tradfrigatewayhandler to not try to downgrade thing if firmware be out of sync
danielwagnerhall : fix javdoc warning .
updated BoxLayout and DefaultLayout to include " table - cell " in display checks to enhance layout support for table - cell display
refactor JsonDecoder to improve token handling and add a test for reordering fields to enhance code clarity and ensure correct behavior of json decoding
update removal listener to capture removal cause
[ hotfix ] ignore fail savepointtestbase
drools - 6271 drools - mvel test add @ test annotation to ensure that it pass
updated fields in ContextRegisterListener to be final to ensure immutability and prevent accidental modifications to the values
refactor ObjectHashSet to allow customizable iterator behavior to improve flexibility and control over iterator usage in the ObjectHashSet implementation
added batchBytes tracking in SparkReduceRecordHandler and ReduceRecordSource classes to accommodate batch size calculations for performance optimization
set the context mode to private to enhance security by restricting access to the context
updated logging messages in JdbcProxyGenerator to accommodate exception handling for " abort ( )ed " and " detach ( ) ed "
updated the method to use mState instead of getState ( ) to ensure compatibility with current state management in the animation framework
change log level to avoid too frequent warning
refactor scope assignment in UaaTokenServices and improve token saving logic in UaaTokenServicesTests to enhance code clarity and ensure
removed unused imports and updated the ` AvailableJDBCDrivers ` class to include a ` toString ` method to improve code clarity and enhance read
drools - 1769 add executablecommand ( ) method to make it easy to subclass
camel - jms : remove jdbctableservice since it have be replace by camel - jms
added padding getter methods to CellLayout and modified bitmap creation in Launcher to improve layout handling for different orientations
added a conditional check for non - empty candidate lists before collecting candidates to ensure candidate candidates are only collected when sufficient space is available
refactor ` SamlMetadataUIParserAction ` and related classes to use ` Action ` instead of ` SamlMetadataUIParserAction `
added a method to check the number of open ports for LDAP connections to improve test reliability by verifying the correct number of open ports
log4j2 - 1349 update javadoc for executorservices . shutdown ( )
updated URL handling logic in Fetcher . java and added null checks in HTMLMetaProcessor . java to improve robustness of content redirect handling and
updated the SolrQuery to search for " name : samsang " and modified the collated result assertion to ensure the query accurately reflects the intended search term and expected results
karaf : use new karaf console api if available
* meshhelper . getverticescolors ( ) now properly handle b - 3d mesh
excluded specific report directories and updated file creation logic in HTMLReportGenerator to ensure only timestamped reports are copied to improve data integrity by preventing
parameterise some test in order to make it easy to debug
remove unused method :
improve error message if bind status be null
removed print statement that logs the stack trace of an exception to clean up the code and reduce unnecessary console output
added a flag to allow extracting private fields and updated the readField method to support this feature to enhance functionality by allowing field extraction to be
added a replacement for device name to display the device ' s name in the web results
refactor lookup constructor initialization to use MethodHandles for improved flexibility to support Java 8 compatibility to enhance compatibility with Java 8 and later versions
zparams : rename method weight ( ... ) to weightbydouble ( ... )
updated ` writeCustomHTML ` and ` writeCustomHTML ` methods to include a ` Database ` parameter across multiple classes to enhance functionality by
removed unnecessary type casting in BTreeMap . java to simplify code and improve readability
replaced Exception handling with BalanceInsufficientException and added relevant exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to improve error
add a system property to disable zerofile functionality .
replaced print statements with sendMessage for better messaging in Main . java to enhance user feedback during command execution
reduce gc pressure by reduce size of byte array
added imports of ChunkListener and ItemProcessListener in various Java classes to enable batch processing functionality and item processing capabilities in the application
refactor code for better readability and type inference in AbstractProviderModule . java to enhance maintainability and prevent potential type casting issues
updated print statements for clarity and consistency to improve code readability and maintainability
updated Test7005594 . java file to improve test coverage and reliability of the code
update error message concatenation syntax in ResourcesValidationProcess . java to improve clarity and consistency in error reporting
refactored the TopKRollupPhaseOneJob class to improve code readability and maintainability
fix npe when vm be not attach to any network
fix gui size change issue
updated method names and import statements in IterableSubject and IterableTest classes to improve clarity and consistency of iteration functionality
camel - 14354 : camel - http : add an option to turn header on .
added assertions to verify the count retrieval methods in SQL server entities to ensure correct results are returned for various data sources
added LargeValueFormatter to BarChartActivityMultiDataset and updated related calculations in BarLineChartBase and Chart classes to improve chart readability by
optimise comment parser to avoid recursion
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress warnings related to incompatible argument types
truffle : fix typo in println statement
added a TODO comment to the NullAssertionValidator class to prepare for future code adjustments
added import for RuleKeyAppendable and utilized it to append rules to the rule key in DefaultRuleKeyBuilderFactory to enhance rule key generation
do n ' t try to create the system profile if it do n ' t exist
updated the creation of the EventLoopGroup to use a dedicated method for thread creation to improve code clarity and maintainability by reducing duplication
refactor message counting logic in HttpChannelOverHTTP and HttpReceiverOverHTTP classes to improve thread safety and encapsulation of message retrieval
added an attribute to the ImageFileInputDialog to accept an image type for file input validation
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and improved import statements to enhance transport client performance and maintainability
added witness class and its class name to the ForkController to improve debugging and traceability of witness objects
added a new test class ` NullPointerAndEmptyArrayTest ` to validate the behavior of ` NullPointerAndEmptyArray ` when handling URLs to ensure
updated the ` findConfiguredGeneratedSourcePathsUsingDeps ` method to utilize a map from ` DependencyNode ` to ` SourceNode ` to
updated UaaStringUtils to utilize a new method for constructing wildcard patterns to enhance flexibility in handling special characters in wildcard inputs
added validation for aliases in the Vectorizer class to ensure that invalid aliases do not proceed with validation failures
updated import statements and exception handling in WeatherQueryTest . java to streamline code and improve exception management for current location retrieval
added error handling for setting values in TinyGFirmwareSettings to log warnings and handle potential exceptions when setting invalid firmware settings
replaced specific imports with a wildcard import and changed the return type of getLangs method from String [ ] to Set [ ] to improve code
updated assertions in LazyTraceScheduledThreadPoolExecutorTests to improve test validation to ensure correct retrieval of tracer parameters and enhance test coverage
hbase - 26935 takesnapshothandler should pre - prepare table if snapshot creation fails
[ wasm ] add a platform null call for reference equality test .
remove okhttp3 dependency from docker quickstart test
added thread suspension handling in Thread . java to ensure proper exception handling for illegal thread states
updated Javadoc visitor classes to replace ` Since ` with ` Hidden ` and ` SerialData ` for improved clarity and functionality to
added unit test base on user forum issue
removed redundant @ Override annotations from multiple classes to improve code readability and maintainability
added module support and updated assertions in tests to verify behavior with static fields to improve test accuracy and ensure correct behavior of enum traceability
update default language to avoid issue with xssf
update badge content description to be dynamic based on badge count in BubbleTextView to enhance user experience by providing more detailed badge information
added support for mouse wheel scrolling in the scroll pane to enhance user experience by allowing dynamic mouse wheel scrolling behavior
pdfbox - 4892 : close open stream to avoid leak
replaced instances of BTC _ ETH with XRB _ BTC in KucoinAdapters and KucoinIntegrationTests classes to ensure consistency with tr
- change vacuumcontroller and vacuumframe to use string instead of location
simplified currency return by directly converting to uppercase
updated JsonFormat . java to replace Set with ImmutableSet and manage default values for messages to enhance code clarity and ensure default value fields
remove duplicate code in jacksonxmlformatmapper # writevalueasarray
updated constants and variable handling in VirtualThread . java to improve clarity and functionality to enhance thread management and state representation
refactor DirectoryTaxonomyWriter to use a consistent catTerm variable for term management to improve code clarity and maintainability by centralizing term management
refactor vetoable change support to improve code readability and maintainability
adjusted calculation of the owner Y - coordinate by subtracting one from the height to correct positioning of the owner component
pdfbox - 4892 : remove specific exception , a suggest by valerybokov
added unit tests for setting and getting short and long support messages in ShadowDevicePolicyManager to ensure proper exception handling for security exceptions related to admin
add ` ` close ' ' to help menu
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization to enhance maintainability and readability of the codebase
refactor BackendInitializerHelper and TerminalClient to use ThreadHelper for asynchronous controller state checks and add new test cases for G - code commands to
updated version and last update logic in SwingStartup . java to handle exception and newer releases to improve handling of release status changes in the application
update migration xml to include generate code comment
updated command usage syntax to allow wildcard characters for player arguments to enhance flexibility in player targeting for plot commands
deleted the files BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java to remove obsolete thread filtering logic for HDFS and Zookeeper
[ gr - 46711 ] optionprocessor : rename optioninfo . name to optionname for clarity .
added a check for parallel class in TestNGContentHandler . java to ensure compatibility with parallel XML classes during testing
http : / / issues . apache . org / activemq / browse / amq - 3990 - do not register old topic with activemq
refactor : remove static import of enums in ctmethodmethod ( # 2539 )
added serialVersionUID to multiple Java classes to ensure proper serialization compatibility
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated ` ShibbolethCompatiblePersistentIdGenerator ` to utilize ` CONST _ SEPARATOR ` for string replacement to ensure consistent string separator handling and
updated method to handle null parameters for SYSTEM _ ACTIONS _ ENABLED to improve robustness by preventing potential NullPointerExceptions
add a test case and basic skeleton for it0074
fix gossiper . instance . start ( ) by remove it usage
fix compilation error cause by previous fix
add timecolumn , timeunit and totaldocs to the json segment metadata ( # 7765 )
replace ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` and modify the foreground color setting to
added disconnectEmitters to NettyStreamingService to handle disconnect events
change scope hierarchy from String to Class < ? extends Annotation > to accommodate more flexible annotation type handling
alexeibarantsev : fix double overflow in click on an element by add a test
added a try - catch block around the dismissDialog method to handle potential exceptions when dismissing the dialog
added support for custom JNDI location and enhanced error handling to improve flexibility in JNDI configuration and logging
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to streamline the code by eliminating unused functionality
rename ` enabledCiphers ` to ` result ` and update related method calls in ` JSSESocketFactory ` to improve code clarity to enhance
fix bigqueryutils . timestamp to return millisecond time
replaced IllegalArgumentException with requireNonNull for buffer and userCredentials checks to enhance code clarity and maintainability by using explicit null checks
fix default value coercion for field with multiple value .
added additional validation for row and column indices in FlightConfigurablePanel . java to ensure valid index values and prevent potential errors during rendering
added scrollSelectionVisible ( ) method call to ThrustCurveMotorSelectionPanel . java to enhance user interface functionality by making scroll selection visible
[ java ] unnecessarylocalbeforereturn false positive with memberselector
replace the instantiation of ` ScriptEngineManager ` with a direct assignment of ` scriptEngine ` to simplify the code and improve error handling for language - specific
[ te ] squareddistimilarity : remove infinite loop
make sure we do n ' t create backup for sstables that do n ' t exist
refactor relativization logic in MorePaths to handle both empty and non - empty paths to ensure that relativization does not add extra
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper initialization of column parameters for improved data representation
[ issue # 5288 ] skip dlq test on non - temp file ( # 5288 )
replace ` toHexString ` with ` toJsonHex ` for converting byte array to JSON hex string to ensure consistency in hex string representation
rename ` ErrorHandlerController ` and ` Error404Controller ` to ` Error403Controller ` and create new controllers for error handling to improve clarity and
replaced ` resetTerminal ( this ) ` with ` resetIf ( this ) ` in ` UnixTerminal . java ` and ` WindowsTerminal . java `
fix an array allocation bug with tiny .
fixed - concurrentmodificationexception be throw if tryacquireconnection fails
updated method and variable names from ` getDateConverter ` to ` getLdapDateConverter ` to improve clarity and consistency in naming conventions
pdfbox - 4892 : check if file exist and avoid npe
include classloader when fail to create config
[ test ] increase timeouts
updated the current item setting in MainActivity to dynamically count extra pages based on user preferences instead of a fixed value based on user settings
added error handling and improved bitmap processing in AndroidImplementation . java and Bitmap processing .
pdfbox - 4892 : fix typo find by codespell on fossies . org
pdfbox - 4892 : avoid potential memory leak , a suggest by valerybokov
deleted the file TestDocInverterPerFieldErrorInfo . java to the test file is no longer needed for the project ' s functionality
added a shell command to input keyevent 82 in AbstractLauncherUiTest and modified the assertion in LauncherInstrumentation to ensure the phone ' s lock state
add filename to file dump so that it show correctly
bugfix # 20720 , make profilerserver # resultsnotified flag protect
blender importer : make image loadable again
fix test break by previous fix
updated the ISBN ISBN value from " 9781797745008 " to " 9781797845005 " to correct the IS
updated notification sound preference to dynamically set the ringtone from user preferences
add a method to report the loop count to the CallTarget class
added functionality to finalize the cluster based on the cluster ' s current stack version to ensure that the correct version is finalized during upgrades
fix listbyregionidandstate in portableipdaoimpl lead to npe
removed a redundant line of code in ItemOrientedStep . java to streamline the code by eliminating unnecessary duplication
added a new file ` CountedLoopProblem . java ` that implements a counted loop test to verify that the generated code results in an expected number of
remove unused metaspacemethod parameter from jvmci native method .
[ gr - 52328 ] avoid jvmcierror when try to get the value of a field of type long or integer via reflection .
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities for value transformation processes
[ # 1441 ] studentfeedbacksubmissioneditpage : add ' receivedpoints ' option ( # 1442 )
remove call to dynamiccolors . applytoActivitiesifavailable ( this )
added thread management and stack dumping functionality in CloseRace . java to improve error handling for child threads that do not finish gracefully
change return value from ` val ` to ` val . intValue ( ) ` in ` IntPointField . java ` and add multiple assertions for field
replaced ` arcSize ` with ` arcSizefraction ` and adjusted height calculations accordingly to improve layout responsiveness by considering dynamic arc size
ticket # 4810 : change image border width from 720x720 to 640x480 ( # 4810 )
[ hotfix ] [ sql ] rename configuration option minifysqlenabled to shrinkwhitespacesinsql
updated ` waitForStateTransitionToEnd ` method calls in ` AbstractLauncherUiTest ` and ` WorkProfileTest ` to improve state transition handling to
added multiple configuration classes to various test files including CasCoreConfiguration , CasCoreHttpConfiguration , CasCoreWebConfiguration , and C
volume : use dataio instead of file - based read
( chore ) camel - http : improve log performance
refactor classpath creation in DeclarativeHintsParser to enhance clarity and maintainability of classpath handling in the code
added default scope provider for audio and voice ( # 2455 )
added methods to get and set the layer manager for AnimComposer and updated action handling in AnimationEvent to ensure proper management of layer - level
added a check for empty mQueue in DeferredHandler and removed the showDefaultScreen method from Workspace to improve handling of empty queue scenarios
added null checks and improved exception handling in MapRecordProcessor and TezProcessor to enhance error logging and error handling consistency
fix a division by zero in a cylinder . javadoc .
do n ' t fail test due to bad usage case
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 530 . sub - query
visualvm - security : log customize the security only if really customize
added a new ` log % 20applet ` log to the API request in the ReviewInterface to enhance logging capabilities for Android Android applications
updated test cases in Test . java to improve test coverage and ensure accuracy of functionality
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in the key generation process
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
add method to write section definition to rtfdocumentheader
added distance calculation and warning for large jump positions to improve user experience by avoiding unnecessary jumping when the location exceeds a valid threshold
removed debugging print statements from TableCellLayout , TableLayout , and TableLayout2 to clean up the code and improve performance by reducing unnecessary output
doc : generate sample code in the java microgenerator ( # 241 )
use weakreference to prevent memory leak in insightfilter
simplified the addition of elements to the ` data ` and ` added ` lists by removing binary search to improve code efficiency and readability
refactored SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and removed the ThemedPreferenceActivity to streamline theme management and
updated the value class name from " HostD " to " UsingUnresolvedD " to improve clarity and consistency in naming
lucene - 6271 : fix assertion order .
added an assertion to verify the existence and type of the security policy to ensure that the security policy is valid and is a file before proceeding
camel - 14263 : camel - olingo2 - api should use source code generate configurer to avoid reflection configuration .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow additional time for thread execution
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging output for better clarity
added support for publishing an image via http . smack - 147
camel - 6555 fixed the npe issue of netty producer when channel from pool be not set
add test and fix bug in balanceddClickhousedatasource . spliturl ( )
set a system property to disable JSP compilation in FragmentActivator to improve performance by reducing unnecessary dependencies
added support for null strings in CSVRecordReader and CSVRecordReaderConfig to enhance CSV data handling by allowing null values
added LiquibaseService annotation and import for LiquibaseService to multiple connection classes to skip LiquibaseService functionality in specific configurations
fix import static field for java source file
change itemcommandtriggerhandler and itemstatetriggerhandler to use / itemname instead of / itemname / * to match command
updated exception handling to use BeanCreationException instead of BeanCurrentlyInCreationException to improve clarity and specificity of error handling related to bean creation
deprecated " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java and added assertions in TestSolrXml
fixed mana tablet not have full power in creative .
updated identifier collection in mCurrentCallEvent to ensure the current call event uses the updated identifier collection
removed unused import of DictionaryCompoundWordTokenFilter from TestRandomChains . java to clean up the code and improve maintainability
change naming convention for the thread pool executor in ScryptUtil . java to improve code readability and maintainability
refactor methods in GeneratedCode . java to improve code readability and maintainability
fix : fix wrong assertion in typedefinitionregistry
added visibility setting for shareWithMeIcon in LocalFileListAdapter to improve user experience by hiding the shareWithMeIcon when it is not present
updated Bootstrap CSS links from HTTP to HTTPS in logout page generating filters and tests to enhance security by using secure protocol for external resources
added @ NotNull annotation to headers parameter and updated test methods for header handling to enhance code clarity and improve null safety checks
enhanced assert statement to include the index and segment count in the assertion to improve debugging information for better traceability of test failures
[ api ] deprecate multilayerperceptron , it have no use now
add a check for null context in the crawling request .
added security checks to the getJspApplicationContext method to enhance security by allowing privileged actions when security is enabled
[ fix ] rocketcomponentconfig now handle off - by - one case
updated NonceService to use Google Guava ' s singleton for NonceService to improve dependency injection consistency and adhere to dependency injection conventions
added a method to update child links in FileWrapper to enhance link management by incorporating parent - child relationships
refactored method signatures and improved URL building logic in SpringCloudPlugin . java to enhance code readability and maintainability by red
fix test which randomly fail on slow machine
add a new attribute to prevent the overriding of the shift code
[ hotfix ] optimize slow zk leaderelectionmanager . isleader method
corrected formatting in NearbyActivity . java to improve code readability and maintain consistency
ambari - 21112 . kerberos : do n ' t register a kerberos id that do n ' t start with ' / '
modified ` newInstance ` methods to include a ` noop ` parameter to provide more control over cache instantiation behavior
hbase - 19837 addendum make test more robust
updated argument handling in PatchExtensionMethod . java to preserve original arguments during method call processing
make nativelibraryimpl . unload ( ) thread - safe
int - 1188 add namespace support for ' sequence ' and ' ignore - send - failures ' on < channelname >
removed unused variables and methods related to the x509 certificate publish URL to simplify the codebase and improve maintainability
modify reader assignment logic in QueryComponent . java to ensure correct subReader is used for cases with only one reader to improve robustness of reader handling
replace ValueSourceParser with Double2Parser for comparing distance values to enhance precision in distance calculations
fix nullpointerexception when swipe up .
removed unused variables and improved method signature in TokenSources to enhance code clarity and maintainability
cloudstack - 2120 : fix nullpointerexception when try to create vlan without username .
added @ Qualifier annotation and modified flowBuilderServices handling in CasMultifactorAuthenticationWebflowConfiguration . java and CasWebflowContextConfiguration
updated SQL command settings and constants in WriteJdbcPTest . java to enhance database connection management and improve code clarity
removed conditional logic for setting the UIManager ' s laf to streamline code for better readability and maintainability
updated method calls from ` getStateEntity ( ) ` to ` getStateEntity ( ) ` and ` getDesiredStateEntity ( ) ` to use direct calls
simplified margin calculation in FloatingTaskView . java to improve code readability and maintainability
added a condition to break execution in RootFolder . java and updated status line message in NavigationShareTab . java to enhance user experience by providing a
bugfix # 183997 , do not increment threadid unless necessary
fix perspective constructor to work with toolbar too
[ homekit ] add network address change listener to homekitimpl
hbase - 15429 fix testhdfseventsinkonminicluster by use namenodeadapter to get lease renewal time
replace ` prefixHeader ` with ` linkStyle ` in ` CxxLibraryDescription . java ` to ensure proper initialization of the argument properties
added null check for exception message in ExceptionHandlerRegistryFactory to ensure graceful handling of null exceptions
changed ` nextID ` variable to ` volatile ` and modified its usage to improve thread safety and ensure thread safety when accessing shared resources
fix some intermittent test failure on slow machine
added HasSourcePath interface implementation to multiple classes to provide a consistent way to access and manipulate source paths in the build process
replace StringBuffer with direct string concatenation in IllegalArgumentException to simplify exception handling by eliminating unnecessary string concatenation
added custom index field name to ` OrdinalMappingAtomicReader ` and updated tests for it in ` TestOrdinalMappingAtomicReader ` to enhance facet
updated the ` toEpochMilli ` method to handle negative seconds and positive nanoseconds correctly to ensure accurate conversion of time values for edge cases in the ` Instant
- fix compile error in renderer ( vb . getbuffertype ( ) . name ( ) )
try to fix copypaste issue
added a new file ` TestCMoveLimitType . java ` with methods to manipulate a ` CharBuffer ` for character movement limits to
fixed concurrency issue with audio recording
camel - 16462 : camel - sql - stored - template - component should use source code generate configurer to avoid reflection configuration .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current ownership of the code
refactor code to encapsulate console creation logic in a dedicated method to improve code readability and maintainability by reducing duplication
refactor token validation logic to use EncryptionUtils and reorganize methods to improve code clarity and maintainability by centralizing token validation logic
improve handling of eofexception report by eclipse
when delete a group , do n ' t fail silently .
remove unnecessary object array creation in camel - ftp
deleted the V2ReplicationProtocol . java file to the replication protocol is no longer needed for the project
updated references to ` compileTimeClasspathDeps ` to ` compileTimeClasspathSourcePaths ` across multiple classes to accommodate source path
added new files ` ConstructorArgsDemo . java ` and ` StrictDemo . java ` , and modified ` StupidFinal . java ` and ` Strict
directtemplatefeaturecollectionfactory : close open template iterators only once
make assertion less strict by increase replication factor
added a null check for the index number in ItemRowAdapter . java to prevent potential NullPointerExceptions when verifying item creation date
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
added a condition to return early if the app ' s width is below 12 to improve performance by avoiding unnecessary processing
update changelog parameter comparison from ` = = ` to ` . equals ` and add a new test for non - global properties in inner files to ensure
changed the access modifier of the loggers map from static to final to ensure the loggers map cannot be reassigned after initialization
modify return statement to call basePlot with a false parameter to ensure the correct plot is returned
[ hotfix ] [ restserver ] log an info if createuploaddir fail
added a sendStatus200 parameter to ServerGenerator , HttpTransportOverFCGI , ServerFCGIConnection , and ServerFCGIConnectionFactory classes
added a check for the length of the comment in the multi - line comment condition to ensure that the comment is not empty before processing it
added file type management functionality in BuckModule to ensure proper cleanup of file types associated with the default extensions in the Buck application
replaced multiple specific imports with a wildcard import and changed return type from ComposedToLong to ComposedToInt in ComposedUtil . java to simplify import statements
added error handling for unsupported OS and improved clarity in the launcher command - line option tests to ensure robustness and user feedback for users
fixed formatting . no logical change
refactor Player class to improve code readability and maintainability
[ modbus ] add miss mockito import
fix indexoutofboundsexception when call hoststack . getstacktrace .
reset system context in font contract
added time zone handling and modified date calculations in TimeGranularity and PinotDataSourceMaxTime classes to improve accuracy of time calculations and ensure consistent
added control flow analysis for various control flow scenarios to enhance control flow management by improving try - with - resources handling
updated assertion logic to check array length and improve clarity of error messages for different array types
fix stack size calculation in window click logic
corrected a syntax error in the index calculation to ensure proper functioning of index manipulation
nifi - 2594 : remove this unused local variable to avoid confusion
added support for dynamic annotation processor parameters in KotlincToJarStepFactory to enhance compatibility with Kotlin compiler plugins
update RESCROLL _ DELAY constant and refactor page navigation logic in PagedView to improve animation consistency and simplify page navigation handling
reload workspace when the shortcut permission change
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader to handle navigation history search backwards
solr - 7529 : coreadminhandler reload throw npe on null core name instead of a bad request error
added marker selection functionality to the NearbyMapFragment to improve user interaction by managing marker display and bottom sheet behavior
added error handling for Throwable in FileSyncAdapter to improve robustness by capturing stack traces for better debugging
updated Docker test assertions in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve reliability of memory checks and ensure
updated FeedQueues to conditionally refill and merge feeds based on application load settings to improve performance by reducing unnecessary feed processing during high load conditions
add warn log if defaultdrmsessionmanager be use on wrong thread
updated ` AndroidBinaryDescription ` to use ` Locale . US ` for string conversions and added a setter method for ` packageType ` to ensure
- rest - dsl - add mime type application / xml instead of text / xml for wfs3
updated file reference in Args . java to ensure consistency in accessing configuration properties
removed a specific sleep duration from the waitUntilReadyAndTimeout method to simplify the test by removing unnecessary wait duration
updated data types for distinct aggregation logic from int to long in HiveExpandDistinctAggregatesRule . java to ensure accurate calculations for distinct count values
added multiple checks for headless environment in GraphicsEnvironment . java to improve error handling when running in headless environments
do n ' t try to stem an furnace in the furnace processor if it ' s in the furnace world
add a configuration property movethreadcountdescription to the defaultsolverfactory
add a test to ensure search with revinclude do n ' t select wrong resource
added a new test class ` Issue582Test ` to test the functionality of the ` pumpSource ` method with varying feature counts to
[ native ] add e2e test for ' n * m ( n , m ) '
refactor LoadingCache class to improve code readability and maintainability
added a new rule to avoid constructor methods with class names in the NamingRulesTest to improve test coverage for class naming conventions
[ java ] add method to expect condition to check if an element be already select .
enhanced the ` ViewExistsPrecondition ` and ` JdbcDatabaseSnapshotGenerator ` classes to implement a new ` hasView ` method to provide
refactor DOMUtil class to improve code readability and maintainability
added functionality to log matrix transformations in TaskViewUtils and Utilities to enhance visual feedback during animations for improved user experience
updated the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false to disable the rotated rotation transform feature
added a new method ` walk ` to ` TempFSTTermsReader ` for processing and writing doc frequency in a FST to enhance
update the create methods in multiple factory classes to include support for SolrQueryRequest to enhance functionality by integrating Solr query handling capabilities
added trigger statements for content checks and modified the insert and update methods in SingleTableMySQLTriggerTest . java to ensure proper signaling for null
refactor comparator handling in FieldValueHitQueue and TopFieldCollector classes to improve code clarity and maintainability by centralizing comparator setting logic
updated assert statements to include double quotes around column names and string literals to improve readability and consistency in error messages for better clarity
wait for spark initialization before run test
added methods to handle total storage pool and fees in DynamicPropertiesStore to improve storage management capabilities for dynamic properties
added support for streaming files from a source directory in AssetsController to enable dynamic loading of resources from the specified source directory when development mode is
fix typo in mapmarksmanager .
added tokenRewriteStream parameter to generateConstraintInfos and DDLSemanticAnalyzer methods to enhance token processing capabilities during semantic analysis
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to simplify
[ jxbrowser ] do n ' t fail to load external library if fail to load
fix issue with appversion property not work on io . http : / / github . com / codenameone / codenameone / issues / 1
[ somfytahomaBridgeHandler ] fixed logging of http client start failure ( # 11448 )
( chore ) camel - alberto - aggregator : disabled flaky test on github
update unit test to remove bouncycastle warning
reduces log noise when try to export gauge .
remove session id from the session info map
added logic to set a default hostname for alerts if none is provided in the event to ensure a meaningful hostname is used for alert instances
modify the condition for flushing buffers in ChannelEndPoint . java to directly return true to simplify the return value of the loop and improve code clarity
resolve split - packages : maven - plugin - solver - java from maven - plugin - benchmarks into maven - plugin - benchmarks
added tests for seekTo functionality in ShadowMediaPlayer to ensure correct behavior of seekTo mode handling in the media player
changed method names from ` createTask ` to ` createThrowingTask ` across multiple classes to clarify the purpose of the task creation process
fix tab close button overlap in aqua laf
added connection timeouts and updated string literals in TSPTimeStampService . java , and improved assertions in TestSignatureInfo . java to enhance
added methods to create XStream with custom ClassLoader and a mapping function to enhance flexibility in handling different types of XStream operations
updated diamond application logic to ensure correct handling of non - generic type parameters
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in reloptutil
updated argument requirements for ID and value in Http2Settings . java to ensure valid input validation to enhance input validation to prevent potential logical errors
removed the MapInterfaceTest and Issue664Test files to clean up the codebase and remove obsolete tests
added a try - catch block to handle IllegalStateException when inserting a session
start new root object for featurecollection at end of json
changed the method for setting the selected index from setting a mode to converting it to its integer value to ensure consistent handling of the selected index value
added a check for manual unstashing in TaskbarStashController to ensure proper handling of state management when auto - unstashing is disabled
camel - 7999 : camel - jbang - dump route to xml with thanks to stephan
modified ` getEventMismatchMessage ` method to accept a boolean parameter for controlling event mismatch checks to enhance control over event mismatch detection during event handling
added a new file ` HeaderFixer . java ` to handle file processing for header files to ensure the correct license header is fixed when processing
added a new broadcast action for first loading completion in the Launcher class to ensure changes are broadcasted to the user when an app widget is loaded
deleted the file ` SuperJumperAndroid . java ` to the application is no longer needed in the project
[ flink - 20536 ] [ table - planner - blink ] fix broadcast join bug
remove keyvaluesprovideraware and observationconventionaware interface ( no longer use )
remove the remap resource from the missing blocks we have remapping .
change return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index ` i ` to a long to ensure correct base calculation
added caching for data format retrieval in HSSFCellStyle to improve performance by reducing redundant calculations for cached data format
updated the request to filter users by username and attributes to enhance security by restricting access to only authenticated users
LZ2 compressor : fix endless loop
updated logging for LAUNCHER _ ALLAPPS _ EXIT to include container information and page index to improve clarity and structure of log output
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
remove deadlocktest since it be deadlocked
do n ' t refresh the job if there be no change
added a menu item to open the JavaScript server and implemented a popup menu for reopening it to enhance user experience by allowing users to open a browser
added a new error message for specific output requirements and formatted code for better readability to ensure that multiple output entities cannot be present simultaneously and improve
added null checks for the addEntryListener method to ensure robust error handling for invalid parameters
fix coordinatearray . reversed ( ) to handle empty coordinate array
swapped the order of setOpen ( ) and setLastModified ( ) methods in ToolbarPanel . java to ensure proper functionality of the toolbars
fix intermittent test failure
replace direct call to enterOverviewMode ( ) with a call to showOverviewMode ( true ) to simplify overview mode handling in the launcher
fix intermittent test failure
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE to prevent potential overflow when handling integer overflow
compiler : fix error and suppress warning
improve performance of httpclientrequestimpl # write
updated artifact name transformation to ensure correct syntax for better semantic identification of dependencies
pdfbox - 4071 : avoid classcastexception find via oss - fuzz
removed debug print statement from ReferenceUtil . java to clean up the code and improve readability
fix visibility schema transformation to take query name into account
added new parameters for enabling and disabling HTTP JSON - RPC connection in the Solidity node to provide configurable options for enabling and disabling HTTP JSON -
added a type check for ` folder ` before removing it as a drop target to ensure type safety and prevent potential casting errors
refactor stub jar creation logic into a separate method and streamline processor management to improve code readability and maintainability by reducing duplication
added new feature identifiers for setup wizard and workflow in StartPageTopComponent . java to enhance user interface clarity and guide users on how to use
fix flaky cassandra startup
removed unnecessary boolean check for available fixture to simplify the code structure and improve readability
change return attributes from NONE to ALL _ USER to enable authentication for all users
added null checks for onIdleTimeout and onFailure in HttpChannelState . java to improve error handling and ensure proper callback execution to enhance robustness
http : / / issues . apache . org / jira / browse / amq - 4180 - make createendpoint non - blocking
updated TABLE _ HEADER _ SEPARATOR pattern and modified condition checks in TableBlockParser . java , and added a new tests in TableTablesTest
change return value from 32.0 f to 31.5 f to improve the accuracy of the camera ' s value
added a preference for the " startOnBootSetup " setting in GpsSettingsActivity and adjusted the URL in Utilities to ensure proper configuration of settings and
updated the client secret length from 128 to 512 to optimize client secret storage for improved security
updated null parameter checks in MySQL and PostgreSQL stored procedure tests to ensure correct parameter handling in test cases to improve clarity and correctness in error messaging
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable tests due to race conditions
refactor PinotFS methods to remove unnecessary scheme checks and plugin initialization to simplify file handling and improve integration with the PluginManager
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure compatibility with different locale settings for date display
added MetalLookAndFeel import and set it in UIManager to improve look and feel for better visual consistency
refactor ping task management to ensure proper shutdown and thread - safety to improve resource management and prevent potential memory leaks
replaced throwable . getMessage ( ) with throwable in GlobalErrorHandler . java to simplify error handling by directly using the throwable object
[ hotfix ] [ table ] remove redundant parameter in moduletable and packagetable .
catch and log exception in pinot admin
deprecated the equals ( ) and hashCode ( ) methods in Subject . java and added a new hashCode ( ) method to indicate that hashCode ( ) is unsupported
standardized spacing and alignment across multiple files to improve code readability and consistency
update zoom control values in BasicMapViewer to set minimum and maximum zoom levels to zero to improve map rendering quality and performance
updated the handling of admin users and groups in DrillRoot . java to include process user and group information to enhance user impersonation
8026017 : files . readsymboliclink call accesscontroller directly so security manager ca n ' t grant the permission
added argument extraction functionality to the DelegatedClientAuthenticationAction class to enhance service resolution based on request arguments
changed the defaultGroup variable from non - final to final to ensure the immutability of the defaultGroup variable
tilesizechanger now create tile cache when need
removed redundant calls to removeAllViews ( ) in InfoLayoutHelper . java to streamline code by eliminating unnecessary redundant operations
refactor cleanEntryForFeedsWithoutSubscriptions method to simplify its implementation and improve logging to enhance code readability and maintainability by red
replaced ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in test cases to align with updated authentication logic
nifi - 3087 : fix filebasedclusternodefirewalltest to work on window too
theorem proving : fix conic five point equation
reformat code for improved readability
added @ SuppressWarnings ( " unchecked " , " vararg " ) to mmm Fields . java and mmm MockitoBeforeTestNGMethod . java
refactor CImage creation methods to support multiple images and improve error handling to enhance image processing capabilities and ensure robust handling of empty images
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to ensure the correct comparison type is used for byte arrays
rename the " runtimeVisibleMethodOfFieldAnnotations " attribute to " runtimeVisibleFieldOrMethodAnnotations " across multiple classes to clarify the purpose of
replace null checks with ` Objects . equals ` for null - safe comparison to improve code readability and maintainability by using a utility method
change method name from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` across multiple files to improve clarity and consistency
added verification for default location views in NinjaPropertyTests to ensure that the properties are correctly populated with expected values
renamed the method from ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated its implementation across multiple classes to improve
adjusted padding for timestampsView and modified listView position offset values to improve layout consistency and ensure proper vertical margin for display
added handling for ` Thread . interrupt ( ) ` and ` Thread . currentThread ( ) . interrupt ( ) ` in ` ZkState
added null checks for field values in HttpFields . java and created comprehensive unit tests for empty headers in RequestTest . java to ensure
cloudstack - 7119 . add check if static nat service be support in the network .
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) to ensure proper visibility and functionality of the floating action button in the
remove extra empty screen .
added support for fixed width glyphs in BitmapFont to enhance glyph positioning and rendering effects
removed the boolean parameter from the createFragment method and refactored related logic to simplify the fragment creation process and improve code maintainability
added preEvent , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state management with pre - and post - transition events to
[ hotfix ] fix checkstyle violation in configdescriptionprovider
updated role creation in TestAuthorizationApiAuthorizer and enhanced configuration handling in StorageBasedMetastoreTestBase to support Windows compatibility and improve cross -
refactor conditional checks in FacetComponent . java for improved clarity and logic flow to enhance code readability and ensure early exit early for
updated the way overriding properties are created and set in CheckstyleReport . java to ensure the correct cache file path is used based on the build directory to
refactor the deletion of inactive replicas to improve the clarity and functionality of the test collection
added functionality to set and display a file name in the FileActionsDialogFragment to allow users to specify a file name for better user experience
modify the handling of on - drop modes in CellLayout to include an INVALID _ DIRECTION constant to improve clarity and ensure correct behavior of reorder direction
feat ( freezev2 ) : optimize inner transfer api endpoint
fix stresstestutils # getexecutionidifexists to wait for the job to run
add a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to provide
consolidated import statements and added new visitIdentifier methods for J . Identifier to improve code readability and ensure proper handling of identifier types in the Find
updated action text color in AuthenticatorActivity to primary dark mode to enhance user interface visibility and aesthetics
added ComparableField support to find methods in Manager , StreamSupplierComponent , Manager , and MockManager classes to enhance entity retrieval by allowing
refactor method names to be more descriptive for the ` addTestStepsForPickleSteps ` and ` createTestStepsForBeforeHooks
polish no - arg apis rename to valid
added a method to cancel a client and updated the startDriver method in SparkClientImpl to handle client cancellation to improve error handling by providing feedback on client
added ` getImplicitPreCoercionValue ` method and its implementations in ` SkylarkParamInfo ` , ` ParamInfo ` , and
initialize lastDisplayedUser with an empty optional to ensure lastDisplayedUser has a default value to avoid potential null pointer exceptions when the optional is null
added a new method ` findAll ` to the ` QueryDslMongoRepository ` class and updated the ` AbstractPersonRepositoryIntegrationTests ` class to
added null checks before stopping SchemaRegionConsensusImpl to prevent potential NullPointerExceptions during execution
planner - 290 : stop the warm up loop in case of a failure .
add pipeline option xread ( ) to support read data directly from redis
removed unnecessary ' this ' keyword in LinkedBufferInput and StreamInput classes to simplify code and improve readability
added a new WebSecurity configuration bean for CAS web security to enable customizable security settings in the application
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` to verify configuration and setup for HiveServer2 to ensure proper
added methods to register and create content providers in ShadowContentResolver and ContentProviderController to enhance the functionality for managing content providers within the
update ClassReader to use ClassFile . Version instead of Version to ensure compatibility with the latest versioning scheme
added a keep - alive configuration to SingleConnectionManager to enable connection management based on configuration settings
[ java ] [ race condition ] introduce supplier for sender flow control in medium driver .
prevent npe in 2d locus with no point in 3d
updated WebSocket classes to improve concurrency handling and error logging to enhance performance and maintainability of WebSocket connections
refactor WebDriver selection logic to dynamically select different drivers based on a configuration to improve flexibility and adaptability of the selenium driver
use assertj assertion instead of junit in test .
remove deprecate trufflelanguage . getcontextreference ( ) and replace with trufflelanguage . getcontextreference ( )
initialized the Throwable variable to null and modified exception handling logic in StubberImpl . java , and added unit tests for StubbingWith
updated error handling in Actor and Group classes to include descriptive exception for non - ascendants to improve clarity and debugging when an actor is not a
added location access and permission dialog functionalities in LocationPickerActivity to enhance location management features and improve user experience
add simple ebean sample to demonstrate use of counter
nutch - 2486 gethttp should use standard cookie spec for request cooky
simplified the intersection check by replacing the boundary condition with a more concise method to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java to improve audio output quality during audio processing
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel classes to enable users to access and utilize the monitoring
remove unused service create timeout config
update the icon resource setting for landmarks and city in NearbyListFragment to improve clarity by distinguishing between different place types
added null check for the class type before processing package names to avoid potential NullPointerException when the class type is null
added a new file PrintInlining . java that prints out the result of a print operation to provide a utility for visual comparing printed values
fix : handle nested brace in javadoc tag ( # 4018 )
[ java ] : remove unused field .
updated method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTableModel ` and ` getEdges
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
add log for set playback speed
add room remove event to cache for room remove from cluster .
change the minicluster parameter from ' replicas ' to ' cores ' to align scaling behavior with updated requirements
flip the y - axis and generate an alias key for the texture .
refactor ` PythonDslProjectBuildFileParser ` to use ` CloseRecordingProjectBuildFileParserDecorator ` instead of ` PythonDsl
add library normalization pas to j2cl transpilation .
renamed the method ` nextResponseBodyConverter ` to ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and updated its usage in
[ hotfix ] remove redundant isfreed check from memorymanager
added @ temporal to consolesessionvo so that it be serializable
added Hbs and HbsTest classes to handle Jknack ' s Handlebars template rendering to enable the use of Jknack ' s
make ` ` hint ' ' and ` ` message ' ' visible for incoming message .
change iteration over header name to use value instead of key
add test for wait until confirm dialog appear
added a check to return null if multiple distinct column indices exist to ensure proper handling of cases where multiple distinct column indices are involved
fix for url problem report by coverity
chore ( release ) : update license year for generated file ( # 419 )
updated dependency dependencies for the WebSocket server and client libraries to the correct Jetty server and client packages
return an unmodifiable view of the identity ' s attributes to enhance immutability and prevent concurrent modification issues
only repaint sketch header if code change
simplified byte array creation by returning directly the byte array instead of creating new instances to improve performance by reducing unnecessary object creation overhead
use gettimestamp instead of getdate for jdbcdatasource
added a condition to check for the " javax . naming . Context " type alongside the existing class name in HtmlJndiTreeReport .
updated the database options to include specific database types to improve flexibility and optimize database operations
updated edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct identification of mutual edges
removed the FLAG _ SLIPPERY constant and replaced it with an import for FLAG _ SLIPPERY in StatusBarTouchController . java to
fix truffleconstantfieldprovider for array with only 1 component .
added Google Drive folder path preference handling in GoogleDriveSettingsFragment to allow users to specify and set the location of the Google Drive folder
ggb - 2118 algebra suggestion will show up in algebra input box too
added @ Nullable annotation to various methods in assertThat methods to improve null safety and clarity in method signatures
modify the bitwise operations in ArrayUtil . java to improve the accuracy of color resizing logic
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to allow instrumented constructor instrumentation to improve testing coverage for
clear wait for anticompaction when a stream be terminate .
added a new method ` isKeyguardSecure ( ) ` to ` ShadowKeyguardManager ` and updated tests in ` ShadowKeyguardManager
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization
modified the control flow in GrblUtils . java to replace ' > ' with ' ' and added a conditional check for ' overrideParts ' length to
renamed the test method to accurately reflect its purpose to improve clarity and maintainability of the test case
fix possible deadlock in asyncfileimpl . checkdrained ( )
updated light intensity from 4 to 8 light intensity and changed shader from " light " to " vertexpath " , modified loop iteration from " 4 " to
replaced instances of ` TestProjectFilesystems ` with ` workspace . getProjectFileSystem ( ) ` for consistency across test files to improve code clarity and
updated variable types from String to PathWithLines in RuntimeOptions and CucumberFeature classes to improve type safety and consistency in path handling
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from TEST _ DIRS array in PubRoot . java to prepare for the removal of unused test directories
added a call to close the ParcelFileDescriptor on the real object to ensure proper resource management and prevent potential memory leaks
added thread - local support for managing prefix indices in ` BasisLibrary ` to improve thread safety and flexibility in managing prefix indices across different
added logging for HttpConnection debug level in TestDistributedStatsComponentCardinality . java to improve troubleshooting and monitoring of HTTP connection issues
added duplicate ` throwIfImmutable ( ) ` calls in ` IntList . java ` to ensure immutability of the list to maintain thread safety
updated method signatures to enforce non - null parameters and modified channel builder configuration to use a dynamic URL to improve code reliability and ensure proper URL generation based
rename org . jline . demo . graal to org . jline . demo . graal . because it be a submodule of
make keysunchangedassumption concurrency friendly and invalidate function array atomically .
added platform - specific handling for XML files to ensure compatibility with Windows when writing to the manifest file
low priority should be high priority , high priority be now normal priority .
made getConfigDescription methods nullable to improve method robustness by preventing potential null pointer exceptions
do n ' t wrap cancellationexception in runtimeexception .
pdfbox - 4892 : fix initialization of cropbox when save a page
refactor ManagerBase class to improve code readability and maintainability
add ENABLE _ ALL _ APPS _ IN _ TASKBAR debug flag to FeatureFlags to allow access to all apps from the system Taskbar
replace the way FragmentActivity is created by using Robolectric ' s activity controller to simplify the activity initialization process and improve test isolation
renamed ` getFileCoordinates ` method to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` in ` FileProcessor ` to improve
rename class names from ` ABCase1 _ 1 ` to ` TestABCase1 _ 2 ` and ` ABCase * ` to ` TestAB
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for the blackhole address to improve
refactor handler setup in OpenRocketViewer to ensure sims are properly registered and changed
added a new class ` ChangeDependencyGroupIdAndArtifactId ` to handle changes in dependency coordinates to ensure compatibility with the OpenRewrite Maven plugin
added indexable check for segment paths in IndexingJob . java and improved validation in SegmentChecker . java to ensure only valid input paths are processed
lucene - 6271 : fix javadoc in checkobjectheap .
refactor preprocessor delegate to use supplier for path replacement
rename ` JsonExamples ` class to ` Examples ` to improve clarity and consistency in class naming
added debug logging statements in ViewExtractor . java to improve traceability and debugging during file extraction and copying operations
modified the FindsByLinkText class to improve search functionality based on link text
added a new Main class to facilitate Java oop entry point testing in the project
fix concurrentmodificationexception exception when create sip registry .
[ hotfix ] remove unreachable code in nativescanner
changed the package of RendererConfigurationTest from net . pms . test to net . pms . configuration to align test with the new configuration structure
refactor dependency resolution to use a memoized supplier for improved efficiency to enhance performance by reducing redundant lookups when dependenciesQuery is not
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` for retrieving remote contains results to improve code readability and performance by using
solr - 2346 : add a chance to set content encode explicitly via content type of stream .
fix account creation with default username
fix npe when shift - clicking home with no slot
add -- ignore - transitive - repositories cli option ( default to true )
removed the duplicate declaration of the backgroundJobManager variable to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
- add null check before closing nio selection
added a condition to break the loop if the matcher matches the entire string to optimize performance by avoiding unnecessary processing
added server port configuration to MvcITest to ensure the test runs on a valid server port
added a new user - defined function ( UDFReverse ) to the Hive framework to provide a reverse operation for string transformations
updated methods to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` and simplified attribute handling in multiple classes to
refactor Tracer class to improve code readability and maintainability
[ hotfix ] ignore rocksdbstatebackendreaderkeyedstateitcase for now
updated import statements in XMLChangeLogParserTest . java to simplify imports and improve code readability
added synchronization and buffer clearing functionality to StarTreeRecordStoreCircularBufferImpl to ensure thread safety during data processing
updated the default values for forecast parameters in OpenWeatherMapOneCallHandler to improve data accuracy and performance
[ euphoria - integrate - tests ] add timeout to all test
updated RemoteTargetGluer and FloatingHeaderView to handle split task IDs correctly and added animation and suggestion mode functionality to enhance user experience by providing
updated ` splitAndMap ` to ` splitAndThenFlatMap ` and changed return type of ` parseRerunFile ` method to
add a list of chisel quartz block to creative tab .
bugfix : testradiobutton constructor return wrong expected size
added support for file sizes in RCFileCat and introduced a method to retrieve the number of rows to accurately track the file size associated with each
add copyright notice to file that be accident accident accident accident accident accident accidental commit .
improve error message when an mxnet NDArray be close .
[ hotfix ] fix checkstyle violation in blobserver
fixed bug 1277373 - unusedprivatemethod no long report call from inside initializer
replaced variable name lexicalScope with lexScope for consistency to improve code clarity and maintainability
int - 1257 add test for sftp auto startup
added constructors to STRtreeNode and Quadtree classes to enable better management of child and root nodes in spatial index construction
refactor version parsing logic to handle minor version number differently based on version number format
check if tags exist before persist them , to avoid npe
[ multistage ] add fromdatetime malformed handle option ( # 11258 )
hhh - 17100 fix handling of null in stringwrapperusertype . java
rename Log4j2ConfiguratorServlet . java to improve clarity and consistency in naming conventions
replaced instantiation of HiveException and AuthorizationException with a new version to improve code clarity and ensure proper exception handling
updated CGoCompileStep to join the paths of ` cppCommandPrefix ` and added a new test for C++ prebuilt C++ libraries to ensure
fix : make builder package buildable
removed the @ Override annotation from the Only . java file to streamline the code by eliminating unnecessary overrides
increase the read timeout for http client
updated ` PerBuildStateFactoryWithConfigurableAttributes ` and ` RawTargetNodeToTargetNodeParsePipeline ` to include a pipeline name parameter to enhance event
[ java ] add javadoc to enable / disable http trace only for test purpose
added @ Singleton annotation to ApplicationController to ensure a single instance of the application is used throughout the application
updated username assignment logic to use OwnCloudAccount ' s display name if available to improve account user identification based on user ' s display name
added batchstatus support to joblauncher
added null check for cacheConfig before processing to avoid potential NullPointerException when cacheConfig is null
[ java ] make localnode and dockersession package private again
fix a bug in the resolution of qualified class names in the compilation unit context .
pdfbox - 4892 : fix parsing of dictionary with no dictionary content
mahout - 1343 run the distributed lanczos test in batch instead of one line
refactor HttpServerTestBase to improve test structure to enhance readability and maintainability of the code
refactor assertions in PortletApplicationMapTest to use a more descriptive variable name and improve clarity to enhance code readability and
added a test for dynamoDbIgnoreNulls and implemented related methods in NestedBeanIgnoreNulls to ensure correct handling of null values in nested beans
add auto configuration customizer for spring starter
fix issue with indicator . tolist . numOf ( ) return negative value
add alternative method for execincontainer with user and profile . fix # 459
fix ( netty ) : websocket interested - in message detection
add some test for semanticgraph construction with negated attribute
added a broadcast intent to clear the selected item in the HomeFragment to improve user experience by reducing unnecessary data display
simplified the initialization of scroller and overScroller in TouchImageView . java to improve code clarity and maintainability by removing conditional checks
added flush method to prevent leak
camel - 16400 : camel3 - core optimize to not start camel if not veto start
added FloatingActionButton functionalities to ShareActivity for enhanced user interaction to improve user experience by allowing dynamic visibility and functionality of the main F
added support for inline date formats in ToDateTokenizer and updated related tests to enhance date parsing functionality and improve test coverage
updated TestAnonymousClassUnloading . java to improve test coverage for anonymous class unloading scenarios
updated Swedish error messages for various languages to improve clarity and accuracy of error reporting
added server checked state check before binding services in AuthenticatorActivity to ensure operations service is only called when the server has been checked
update doc to point to line number instead of column
added waitFor method and a new waitFor method in ManagedThread to improve thread synchronization and error handling
added a new boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented a corresponding method in ` CoreAuthenticationUtils
remove checkifloaded ( ) from defaultrecordstore . getmap ( ) ( # 16276 )
make it possible to enable ssl protocol by default
replaced ` AtomicBoolean ` with ` AtomicReference ` for better concurrency management to improve thread safety and object handling in the ` SetOnce ` class
return field name or empty string if no path expression give
updated assertions in RoundRectBorderTest to remove mode checks for corner radius , corner radius , topLeftMode , and bottomRightMode to ensure correct behavior
added a check for empty genesis configuration and modified related test parameters to enhance robustness by preventing null or empty cluster creation
remove parallel test because of race condition
feat ( freezev2 ) : optimize precompiledcontractstest . verify signature
inverted the condition checking the window state to ensure the code executes only when not windows
morecollectors : rename ` ` maxn ' ' , ` ` greatest ' ' , ` ` least ' ' , ` ` i
added null checks and improved WebSocket handling in BitmexStreamingMarketDataService to enhance robustness and prevent potential NullPointerExceptions
added validation checks for latitude and longitude in GeoPointField . java to ensure that invalid latitude and longitude values are handled properly to improve error handling and prevent
use file name instead of draft file name when create a workflow
refactor ResponderId class to improve code readability and maintainability
modified the ` getTableDocument ` method to include a ` withDependents ` parameter for conditional retrieval of ` Table ` documents to enhance flexibility in
add option to show a dialog when upload incomplete uploads without coordinate
added a cache for profile data and implemented a new endpoint for viewing profiles to improve performance by reducing redundant profile retrieval and enhancing
updated the ` setPropertyValue ` method in ` JpaMetamodelEntityInformation ` to improve handling of property values to enhance the functionality
phoenix - 6507 bootstrap last ddl timestamp for table and view base on current time
add default exception mapper to dropwizard - jersey
fix exception when add new column to table
updated nativeCreateNSWindow method to include an owner pointer parameter to enhance functionality by allowing the window to reference the associated NS window pointer
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to ensure consistency with database schema naming conventions
fix circular progress animation .
fixed - rbucket . get ( ) and rbucket . set ( ) do n ' t call codec . get ( ) if codec be provide .
add detectorUnderTest annotation to identify unrelated usages
refactor back animation handling to utilize BackProgressAnimator for improved clarity and functionality to enhance the back animation experience by integrating
fix npe at contentlimitcontainer : : updatetop
fix bug in jedisclustercrc16 and increase total operation
added comment parsing functionality to FormattedSqlChangeLogParser and corresponding test cases to handle comments in SQL change logs to improve support for comments in Liqu
remove initialization of javarchiver
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by using a more appropriate exception type
refactor conditional checks and add a multiAggregationTest method in TSServiceImpl . java and DaemonTest . java to improve code clarity and
added checks for supported formats and buffer type in GwtGL20 . java to enable pixel data handling and improve error messaging for unsupported formats
added a new test method and updated method calls throughout the code to improve test coverage and ensure debug information is properly handled
replace ` UnmodifiableClassException ` with a custom ` Throwable ` and update exception handling in ` InlineBytecodeGenerator ` to improve error messaging for
enable class initialization trace for sulong .
[ amq - 6665 ] fix typo in basebrokerrequesthandler ( # 6998 )
replaced Google Guava cache with Caffeine for loading topic route data to improve performance and enable concurrent access management
chore ( mbtiles ) : add read - only flag to mbtiles datastore
updated the regex pattern for invalid source and target release identifiers and added a fatal error log message to improve error handling for invalid target releases
updated location URI generation to include latitude and longitude checks and added a conditional check for availability to ensure location is available before accessing Google Maps API
handle null parametercontextdto . getInheritedParameterContexts gracefully
refactor ClassLoader class to improve code readability and maintainability
added origin response header handling in ProxyRequestHelper and its tests to ensure correct setting of HTTP headers to enhance request processing by correctly managing origin headers
added a new ProfileSettingDrawerItem ( ) in GpsMainActivity to enhance navigation drawer functionality in the application
make jasper validation configurable via servletcontext parameter
simonstewart : fix a bug in the firefox driver that cause the javascript string return to be evaluate incorrectly .
added maxRows handling and updated fetchSize logic in IoTDBStatement to enforce a maximum number of rows to fetch and improve error messaging for unsupported
change iscountoptimizable to isallactionsareoptimizable for clean up pipeline
added node and mouse - left event handling in StandardVizEventManager . java to enhance node selection and visualization in the visualization engine
replaced Integer . valueOf ( ) with a custom zeroBuffer method for buffer memory setting to simplify code and improve readability
make orb group assignment in terminalnode more thread - safe
remove get ( ) method from already exist source
refactor methods in SourcePathResolver to consolidate path retrieval and handling to improve code readability and maintainability by reducing redund
fix dstu2 encode issue ( # 1256 )
updated the method ` changeSchemeIfIsWebSocketUpgrade ` to be static and incorporated URL encoding checks to enhance code accessibility and
rename external test suite config to execution configs
added a private method ` getCxxPlatform ` to retrieve the ` CxxPlatform ` based on ` BuildTarget ` and ` arg ` parameters to improve code
added imports for various classes in the Lucene package to enhance functionality and improve documentation clarity for the codebase
fix nullpointerexception in concurrentlinkedstack . get ( ) return by get ( ) .
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes to
added null check for mDirectories before accessing its items to prevent potential NullPointerException when mDirectories is null
updated gesture handling logic in RecentsView . java to improve state management based on overview state and first layout conditions
added package - info . java files for multiple Lucene packages to provide package - level documentation and improve code organization
set the text of the visible auto - leveler panel to a localization message to enhance user experience by providing context - sensitive information
added post - optimize callback functionality to DirectUpdateHandler and UpdateHandler classes to enable post - optimization of event listeners based on configuration changes
updated the Deflater instantiation and adjusted padding for compressed data to ensure proper handling of padding and improve memory management
remove a useless check ( user _ data )
added a condition to check if the base is a local meta store to enhance retry logic to account for local metadata store status
[ jeliossolo ] do n ' t log an exception that we do n ' t have a hub status
refactor methods in Subject class to improve code readability and maintainability
use strong reference by default for weak and strong reference test .
updated colorDistance calculation to use absolute values and added a new test method for finding similar color in HSSFPalette to improve accuracy in color
doc : [ tpu ] fix docstring formatting ( # 138 )
alexeibarantsev : add ability to search for single element by numeric id . fix issue 266 .
added flags parameter to registerReceiver methods across multiple classes to allow for customizable receiver registration behavior
fix flaky ffmpegtest
fix memory leak in ogg
added a constant for null response message and updated the failure message assignment to use this constant to improve code clarity and maintain consistency in error reporting
[ te ] only show anomaly warn message if both anomaly failure and warning count be zero ( # 4104 )
refactor BaseActivity and DetailActivity to use a showToast method for displaying toast notifications to improve user feedback by conditionally displaying toast notifications
updated Request creation to include the HTTP method and request template to improve request handling by ensuring the correct request template is utilized
added name validation and updated referral handling in LDAPCertStore . java to enhance error handling for invalid LDAP names and improve code clarity
refactor code to utilize a new retain method for payload retention to improve code readability and maintainability by reducing duplication
renamed the class from AdapterViewTest to ListViewTest and added a test for item clicks on the ListView to improve test clarity and ensure proper functionality
[ hotfix ] [ test ] decrease code coverage of checkpointfailuremanageritcase
remove genericitemuiprovider since it be no longer use
fix a nullpointerexception in the sip comm selector box .
added isolation annotation to MetaInfConfigurationTest to ensure tests reference the correct static method of FileSystemPool
set the server connector ' s host to the bind address to ensure proper configuration of the server ' s configuration
updated access token and refresh token expiration settings based on the configuration for heart mode to improve access control and authorization consistency in the application
added a new class ` CloverInstrumentationFilter ` and updated checks for non - synthetic fields in ` SplitLogCounters ` to ensure compatibility with class types
added support for the Smartmi Evaporative Humidifier in MiIoDevices to enhance compatibility with additional devices
fix plausibletobreak to not be break on high fps
changed the visibility of setScrollRangeDelta method from private to public to allow external access for setting the scroll range delta
ambari - 20527 . ambari do n ' t allow install install install of software software software software software software software software software software
simplify the conditional logic in the IntHashSet class to improve readability and maintainability of the code
added Serializable interface to RuleAdministrator class to enable object serialization for RuleAdministrator instances
add support for regexps in crossoriginfilter ( # 119 )
updated the file paths for G3D listeners in BaseG3dHudTest and NewModelTest to ensure compatibility with the new Knight integration
added error logging for invalid solidified position updates to ensure stability by avoiding invalid updates to solidified position
hbase - 2594 fix npe in execresult ( stephen yuan jiang )
added a method to check for access permissions and null check for response in HttpServer . java to enhance security and prevent potential null pointer exceptions
refactor ClassMirror and StubJar to use a dedicated method for retrieving stub class bytes to improve code clarity and maintainability by centralizing
added a TextView to display the internal link text based on whether the file is a folder to enhance user experience by providing relevant text for shared files
updated string formatting to use Locale . ENGLISH to ensure consistent formatting across different locales
[ drools - 7 ] fix modelzootest fail on slow machine
added keyboard event logging for the IME when the device is enabled to improve user experience by tracking closed events related to keyboard interactions
configure embedded event storage before test
refactor BsdFileStore to retrieve parent directories using BsdNativeDispatcher and add new methods for path retrieval to improve directory management and enhance path
add test case for issue # 1599 resolution of anonymous inner class
added optional ' x ' and ' y ' parameters to the spawn command to allow specification of position offsets in the spawn command
added a constant for minimum content area height and refactored methods to use this constant to improve code readability and maintainability by avoiding repet
add explanatory debug scope to hotspot test ( graalcompilertest )
changed the directory initialization from ` newDirectory ( ) ` to ` newMockDirectory ( ) ` to incorporate a mock directory for testing purposes
added checks for plugin class names during upgrade upgrade to ensure all plugins are validated before proceeding with database upgrade
refactor Environment class to improve code readability and maintainability
added import for LuceneTestCase and annotated the test class with BadApple to document a known bug related to the RecoveryAfterSoftCommit functionality
modified home path construction to ensure it does not already end with a space to improve robustness of the path handling logic
updated flag names and conditions in DefaultTsPayloadReaderFactory . java to improve clarity and consistency in handling DTS and audio stream flags
None
added security property to disable certain TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing the use of weak TLS configurations
updated CxxDeps annotations to use builder and singletons to improve dependency management and flexibility in dependency construction
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualStubDirectory ` and update related test assertions to
updated the resizeThreshold variable declaration to ensure consistent formatting to improve code readability and maintainability
replace conditional checks for setting folder name with a direct string comparison to improve code readability and simplify hint logic
updated test cases to use the " uaa " context for client ID retrieval to ensure compatibility with the latest client implementation requirements
changed method visibility from public to private to enhance encapsulation
updated value printing in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to handle the closed state more accurately to ensure accurate representation of
rename MimetypeIconUtil . java file to improve clarity and consistency in naming conventions
standardized the method name from ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve consistency and clarity
add a test for handling negated instanceof in UnnecessaryParenthesesTest . java and update the type check in UnwrapParentheses . java to ensure
added a built flag and a method to teleport a Location object to ensure that the Location class is only returned if it was previously built
replaced Base64 encoding methods with Base64Utils for modulus and exponent handling in TokenKeyEndpoint to enhance security by ensuring proper URL - safe encoding
updated imports and replaced onGenerate method with report to enhance functionality by integrating ProjectComponent for statistics reporting
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and intent of the annotation ' s purpose
added a null check assertion for the result of getId ( ) method in ObjectIdentityImpl . java to ensure that getId ( ) consistently returns a non - null value to maintain data integrity
modify the handling of retweeter and user visibility in the TimeLineCursorAdapter to support muffled tweets to enhance user experience by
updated verification text handling to support addon theme support to enhance user interface flexibility based on user theme setting
[ abucoins ] minor code cleanup
camel - 16400 : camel - mongodb should use autowired option to avoid reflection configuration .
ds - 3533 support for multi - valued attribute ( list )
log a warning if hive _ corRUPTED _ COLUMN _ STATISTICS fails
added a call to UserGroupInformation . isSecurityEnabled ( ) to ensure security - related functionalities during authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 10587 ] escape html in email for export to geoserver home page
add an option to enrich system property ' s reflection through reflection
maf , add assertion to ensure the number of features be correct
bugfix : command with empty angle be now ignore
( chore ) camel - kafka : avoid potential npe
remove magic number from action _ set _ playback _ speed constant and make it static
updated ` IgnitionConfigurationHandler ` , ` MotorMountHandler ` , ` AxialStage ` , and ` FlightConfigurationID
tika - 1257 mime magic for ` ` text / nls ' ' and ` ` text / x - ms - nls ' ' file
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to indicate that the test is not stable on JDK 1.8
refactor lock file creation into a separate method to improve code readability and maintainability by centralizing lock file creation logic
updated shared preference keys in UpdateUtils . java to replace " version _ 5 _ 3 " with " version _ 5 _ 3 _ 1 " and added
added a check for the FEDERATION _ USER in the AuthenticationManager class to return null if the user is the FEDERATION _ USER to prevent
fix incorrect parameter type check in executemethodnode .
removed redundant @ Disabled annotation in JakartaWebSocketShutdownWithServerWebAppTest . java to simplify test code and improve readability
change logbackvalve to only warn when access deny .
refactor Collection and Map classes to improve code organization and readability
removed the import of ` Version ` from ` CreateIndexTask . java ` to streamline dependencies by eliminating unused imports
added handling for OracleDatabase and modified index and schema handling in MissingPrimaryKeyChangeGenerator . java to improve compatibility with specific database types and ensure correct
updated the ` execute ` method to include ` MetastoreException ` and modified exception handling to throw it along with ` MetastoreException ` to
[ hotfix ] [ kafka ] retry kafka committable before retry
[ issue # 5288 ] remove messagereceipt handle from dlq flow ( # 5288 )
added support for multiple services in DockerComposeContainer and created corresponding test cases to enhance functionality to allow users to specify service names for Docker compose operations
fix concurrency issue with resource export
removed HTML cleaner functionality and improved error handling to streamline XML processing and enhance error reporting
removed conditional check for mAppsCustomizeContent in Launcher . java to simplify the code for better readability and maintainability
change the data type of energyReactiveVArACSumConsumed and related methods from int to double in MeterRealtimeBodyDataDTO .
added a new file ` bug4150029 . java ` implementing a temporary directory and file chooser to address bug 4150029 related to
added getter and setter methods for Spark configuration state to improve configuration management and ensure proper resource cleanup after execution
added a ` longPressIndicator ` method to both ` AppIcon ` and ` AppIconMenuItem ` classes and modified the ` Launchable ` class to
add empty polygon and point empty ( fix geot - 5148 )
refactor UnflavoredBuildTarget creation to use a builder pattern and interner for efficiency to improve flexibility in building Unflavored
added a new file MultiplyByMaxInt . java that includes a method to multiply an integer by the maximum value in a loop to test the multiplication function with
removed conditional logic for enabling the drawer indicator based on the current file to improve user experience by ensuring the drawer indicator is only enabled for root files
lucene - 6271 : remove unused testRAMDirectory test class
replaced FixedBitSet with BitSet for better performance and efficiency in the automaton implementation
drools - 2769 dmn fix error message when there be no expression define for a name on the node
replace ` @ ContainedBy ( AC . class ) ` with ` @ Repeatable ( AC . class ) ` in several Java files
updated the file sending message to include the duration of the sent file to provide clearer visibility into the duration of the file transmission process
updated class name handling in OpenMBeanAttributeInfoSupport . java to ensure proper package access validation and improve code clarity
allow readresponseresolver to take in replicationfactor
update freeSize calculation to improve accuracy of memory allocation
fix for reset the aretouchesdisabled flag . issue # 794
replace SslContextFactory instantiation with SslContextFactory . Server in multiple files to improve SSL context configuration for server connections
removed the custom ` PrivilegedExceptionAction ` class and simplified the socket creation process to streamline the code by eliminating unnecessary complexity
refactor InputTest class to improve code readability and maintainability
updated animation handling methods to incorporate QuickstepLauncher integration to enhance animation control and prevent unwanted behavior during task animations
removed the current location marker functionality and added a null check for curLatLng in NearbyMapFragment . java to improve code robustness by
replace the method for retrieving client secrets to use a service - based retrieval approach to improve consistency and reliability of secret retrieval
updated SqlSourceBuilderTest to use JUnit 5 annotations for XML configurations to ensure compatibility with modern JUnit features and improve test readability
resolve intermittent ci failure
added unit tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys in the dataset
updated the handling of empty conditionDataList in ShenyuTrieRuleListener . java to improve null safety and avoid potential NullPointerExceptions
lightcontrol : rename controldir enum to clarify purpose
updated StdErrLog . java to simplify null checks and improve code readability
updated HttpSessionEventPublisher to use a dedicated method for context handling to improve code clarity and ensure consistency in context management
astvisitor : remove dead code that throw a semantic exception
[ hotfix ] [ doc ] fix checkstyle violation in flinkiodtdbsink
added a counter for custom simplification detection and modified node simplification logic to improve code clarity and ensure proper handling of simplification nodes
updated the fileIcon setting method to include a context parameter to ensure the correct context is used for file icon representation
updated indexOrConstraintName to accept the schema name as a parameter to ensure correct identification of the schema when parsing identifiers
[ bigquery ] fix bigquerytableschemawithtime ( ) for timestamp field .
added ` findViewWithTag ` method to ` ShadowView ` and ` ShadowViewGroup ` classes to enable search for views by tag in the
remove explicit cast to avoid ClassCastException .
removed unused import of PColumnFamily in IndexTool . java to clean up the code and improve readability
added constants for JSON values and updated method to retrieve enum values based on annotations to improve handling of JSON annotations and enhance value retrieval logic
svm : only load jar resource if need
* upgrade presets for j CUDA 2.0 and CUDA 2.1 to 2.16
updated ResourceLoader class to load layout directories recursively to improve resource loading functionality by ensuring all resource files are included in the layout directory
return getattachedface on redstone torch with simpleattachablematerialdata , not redstone torch
[ hotfix ] [ table - planner - blink ] support VARBINARY data type in RelToStageConverter
added import statement for DateHelper in NoteAdapter . java to utilize date utilities for date handling in the application
updated backup handling logic and messaging mechanisms in Backup . java and Captions . java to improve error handling and user feedback for missing
mow - 1293 : make sure zoom in / out of snapshot too
simplify file creation by directly using the temporary directory name to improve code readability and maintainability
sec - 1372 : remove unnecessary clearing of thread security context
updated the rule name from " optimizations " to " controversial " to accurately reflect the purpose of the inversion rule
fixed bug in integerequalscanonicalizer where x ^ y = = 0 would lead to incorrect canonicalization
remove unused STRING _ ARRAY constant to simplify code and improve maintainability
refactor keyboard handling and logging in the AllAppsContainerView , LauncherAllAppsContainerView , LiveSearchManager , StatsLogManager ,
fix miss ' setbits ' method in blockstatecontainer , close # 3098
updated assertions for sample size and discrepancy in bytes in TimelineMetricCacheTest . java for improved clarity to enhance test
add optimization to get gl _ max _ texture _ size , only calculate it once .
[ java ] stop the recording after the leader change .
added a conditional check to set startPosn to 0 when not in transform mode to ensure startPosn is zero when processing in the semantic analysis
added a new method ` isSkipStarTree ` to ` QueryContext ` and updated references throughout several classes to improve the handling of the
added a lock mechanism for refreshing nearby views and refactored the progress bar handling in NearbyActivity to improve user experience by controlling
add miss method for backwards compatibility
fix broken link in javadoc
added support for retrieving loaded launcher widget information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance functionality by allowing retrieval of widget span information
updated the ` StageSelector ` class to implement ` StateChangeListener ` instead of ` ChangeEvent ` to enhance event handling capabilities by using a more specific
added methods to get and set calling process UID and UID in ShadowBinder to enhance the functionality of the ShadowBinder class for better tracking of
refactor ExpectationFailure class to use private fields and improve cause handling to enhance immutability and simplify object creation
remove log warn for no support message
imagereplacedelement : fix for http : / / issues . apache . org / bugzilla / show show _ bug . cgi ? id =
added HTML encoding support in CoreMarkdownNodeRenderer and updated character handling in MarkdownWriter to improve rendering accuracy and ensure proper spacing across Markdown files
added a button to hide the alert dialog and refactored password setting logic to improve code clarity and maintainability by consolidating password setting functionality
refactor IoUtil to use reflection for file channel methods instead of accessing internal reflection to improve compatibility with modern Java NIO implementations
changed method visibility from public to package - private for several methods in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java
added new keytab options and options for SLIDER AM in LlapOptionsProcessor . java to enhance configuration options for Slider AM and improve
updated the ` tearOutGraphViewContainer ` method to accept an ` JFrame ` parameter and updated its usage across multiple classes to ensure
added a mechanism to bind completion runnables after loading a workspace in LauncherModel . java to ensure that tasks are only executed once to
replaced boolean fields and boolean values with final fields in multiple operator classes to improve immutability and simplify code logic
added a new parameter for message type and enhanced method signatures in ` IssueInterface ` and ` ValidationReport ` to improve message handling and provide
added a safeProviderName method to safely retrieve the cipher provider name during handshake to improve error handling and provide clearer debugging information for unavailable cipher provider names
[ flink ] replace dynamicconfiguration with flinkconfiguration in mesosutils
change logging level from WARNING to OFF in CCJSqlParserUtil . java to improve log readability and reduce verbosity
added a condition to indent if the index matches the size in the AggregateLifeCycle class to ensure proper output formatting for better readability
change image height and width to public so they can be reuse
removed the @ Ignore annotation from CovariantOverrideTest . java to enable testing of covariant overrides in Groovy
change pattern . curly ( ) to use qtype instead of new curly ( )
fix reload strategy to work well with reload spring xml file .
added space minimum and maximum settings to the X - axis of the ScatterChart to improve visual spacing for better data representation
standardized spacing in the ExpressionStringBuilder class to improve code readability and maintain consistency
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` and ` BaseState ` classes to enforce data state preservation
added a check for the existence of the UTF8 key in the properties file to ensure proper error handling when the UTF8 key is missing
updated TestReproduceMessage and LuceneTestCase to incorporate MixWithSuiteName and added randomness in the seed seed to enhance test coverage
added logging for long - press events on AllApps items to enhance user interaction tracking for analytics purposes
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure data integrity during commit operations
control : add flag to show sector land info
[ hotfix ] [ table - common ] fix unchecked warning in composite type
refactor Enum class to improve code readability and maintainability
validate nearby selection before use
improve performance of temporary cache in favor of real - time
hide sqlview and wmslayerimportcontainer when create a new layer page
initialize availability variable to UNAVAILABLE to ensure consistent initialization of availability state
feat ( network ) : optimize pbft sync logic
chore : update gapic - generator - java version to 2.1 . 0 ( # 560 )
dbmaker : make free space reclaim q option more configurable
replaced public final constants with private static final constants in KDCOptions . java and introduced a new KdcDefaultOptions . java file to improve
initialized JsonWriter and set writer to null to ensure proper handling of JSON output format
updated chipCloud references to use consistent naming conventions to improve code readability and maintainability
renamed the method ` paintBackground ` to ` paintComponentBackground ` and updated its call in ` Slider . java ` to improve clarity and functionality
added a method to retrieve the value from a class constant and a warning message for invalid property keys to enhance configuration flexibility by allowing reflection to access
[ hotfix ] [ test ] log failure to initialize kafkaservice
replace ` Sets . newHashSet ` with ` ImmutableSet ` for ` RESOURCES _ TO _ ALWAYS _ ACQUIRE ` to improve code read
improve messaging endpoint support - name instead of ` ` channel ' '
added functionality to index keywords in HTML documents to enhance the indexing process by allowing users to add keywords to documents
update SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android releases
refactor the address handling logic in MemcachedSessionDataMapFactory to improve clarity and structure of the code
replace instantiation of CorrespondenceSubclassToFactoryCall with its class reference to improve code readability and maintainability
refactor Builder class to improve code readability and maintainability
fix isbn to bibtex fetcher url
[ gr - 16625 ] do n ' t wait for engine to exit .
added null check for text before updating cursor position to avoid potential NullPointerException when text is null
update sentimentmodel to handle more case
added code to trim whitespace from comments after processing
added a conditional check to return early if the player is in Godmode to improve performance by avoiding unnecessary processing in Godmode
ggb - 1958 force undo / redo of checkboxes on password change
updated constructors in LinkedHashMapCache and BoundedLinkedHashMap to accept an additional boolean parameter to control concurrency and access order behavior
removed redundant type reference to _ channel in ChannelEndPoint . java to streamline code for improved readability and maintainability
[ minor ] fix orc acid key index bug
modified exception handling to use Locale . ROOT for string formatting in DirectUpdateHandler2 . java to ensure consistent error handling across different locales
make sure we do n ' t canonicalize non - canonical canonicalizations
do n ' t re - reach reachable outside of exception dispatch block when follow edge
add disagreement heuristic to avoid false positive
replaced ` BuildTarget . copyOf ` with ` buildTarget ` in multiple files to simplify code and improve consistency in target handling
refactor SqlRunner class to improve code readability and maintainability
change data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and ` FileStorage
refactor ` DefaultSdkProvider ` to replace ` knownApis ` with ` knownSdks ` and implement a new method for managing known SDK
change spinner to confidenceprogressindicator to be consistent with other ui component .
updated user agent header checks from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 to ensure correct identification of
fix possible infinite loop when iterate bpt
updated CrowdfundingChatAdapter to support different view types for message display to enhance flexibility in displaying different message views based on user input
replace ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL . java ` to
minor change to sbarq / sINV to follow the new advcl model
removed the ` canvas ` parameter from the ` insert ` method and adjusted its implementation to simplify the insert method by removing unnecessary parameters
refactor RefactorModule to use a default apply method for cleaner code structure to improve code readability and reduce redundancy in visitor collection
added methods to retrieve child elements by name in Xml . java to improve the functionality of XML parsing by allowing retrieval of nested XML elements by name
update Content - Charset header to UTF - 8 in HttpSolrServer and its test to ensure proper encoding for HTTP requests
added SystemUiControllerFlags annotation and updated methods to use it to enable more flexible UI state management based on device search settings
removed the private ClientConfigurationService variable from IntrospectingTokenService to simplify code and improve maintainability
enhanced error message for Hive split creation to provide clearer context about the input format used to improve debugging and error reporting
remove ownerId field ( ownerId be never null )
bug 8814 : correct the description of the backup snapshot rightafter setting
add score calculation to the merge method to ensure both frag2 and frag1 have accurate score representation
disable md4 digest by default
added validation to ensure maximumUnimprovedStepCount is non - negative to prevent illegal argument exceptions during property manipulation
added a check to return early if no currently opened editors exist to improve performance by avoiding unnecessary processing when there are currently opened editors
replaced method calls from ` verify ` to ` verify ` in ` BDDMockito ` and added new verify ( ) methods in ` BDD
[ hotfix ] fix pathscanner classloader initialization
updated ` sayHi2 ` method to return a ` CompletableFuture < String > ` and added validation checks in ` CodeFirstPojoClientIntf ` to
add log to debug flaky test
None
[ giac ] check for degree when compute locus
added support for multiple log consumers in DockerComposeContainer and created a corresponding test class to enhance flexibility and maintainability of log management in
updated the parameter type in the testMapping method from ResultSetMapping to a wildcard type to improve type safety and reduce casting errors
removed unused import of StringUtils from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to simplify the creation of a ` ThrowingSupplier ` from a supplier
replace a break statement with a return statement to ensure a successful outcome of the method
camel - platform - http : fix contenttype not work when body be a byte array
added methods to handle platform - specific separators in path strings to ensure compatibility across different operating systems when resolving file paths
added null check for authorizationContext parameters before processing to avoid potential NullPointerException when params are null
replace ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ( ) ` and add a new method ` throwExceptionIfFail ( ) `
updated the SDK version from " 4611349 " to " 4514284 " and added tests for text speech functionality to ensure compatibility with the
add a transactionlogkey to be able to uniquely identify queue transaction
add an option to enable sql without a profile
added a try - finally block to ensure _ data is reset to _ endPoint when writing bytes to avoid potential memory leaks
use eventgenerator instead of supplier supplier for registry creation
pdfbox - 4892 : fix bug , a suggest by valerybokov
updated ` getThreadInfo ` method to accept a stack trace path as a parameter to enhance traceability of thread information retrieval
added a method to post - commit in UpdateLog and increased sleep duration in LeaderTragicEventTest to ensure proper transaction handling during precommit
use 1.17 instead of p2p - v6
fix potential npe in segmentgeneratorconfig
added a new method ` calculateNormalVector ` in ` ObjUtils ` and refactored the usage in ` TriangulationHelper ` to use this
updated JdbcAuditService to use identityZoneId instead of principalId directly to improve clarity and ensure consistency in data retrieval
refactor SpanCollector class to improve code readability and maintainability
added a null check for the session manager ' s current session before accessing its properties to avoid potential NullPointerExceptions during session management
refactor TransactionIsolationLevel class to improve code readability and maintainability
corrected the spelling of " LVA " to " LogicalVolumegroups " in OshiController . java to ensure consistency and accuracy to improve
added code to set the name of the current thread to reflect the remote URL of the slot to improve debugging by providing a meaningful thread name
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
replaced the manual creation of an ArrayList with a return statement returning a new instance of ArrayList to simplify the code and improve readability
added a touch controller to the list to enhance user interaction with all apps functionality
refactor ` scaleHotseatWithWorkspace ` to ` getHotseatScaleAndTranslation ` in ` LauncherState ` and ` WorkspaceState
added a check to exclude JUnitRule elements below the " org . mockito . internal . junit . JUnitRule " from stack trace to
[ java ] replace sun . nio . ch . directbuffer with directbytebuffer in reserve range .
fix a memory leak in depositlistitem
added conditional logic to set color components based on the edge mode of the text rendering
add null check for httpClientResponse in HttpClientBeanPostProcessor . java to prevent potential NullPointerException when httpClientResponse is null
remove patternutil . checkpattern since it be n ' t use
updated logic for handling last playback time and music artist condition in FullDetailsActivity . java to improve code clarity and ensure accurate timing for playback
tika - 351 -- add support for elliptic lemma to spanishxmltreereader
added logic to clear the language " ISO " if it is empty to ensure proper handling of empty language codes during item processing
updated ReactiveLoadBalancerClientFilter to use " https " and " http " based on response security to ensure proper scheme overriding for the service instance
defaultmessagestore : fix java6 compatibility issue
[ gr - 46711 ] remove final modifier from fullpathfromclassname in nativeimagedebuginfoprovider . java
replaced custom Correspondence implementation with lambda expressions to improve code readability and conciseness
updated supported language references to distinguish between non - US and non - EN langs in JRELocaleProviderAdapter and LocaleDataMetaInfo to
fix potential npe in localtransactionsigner
minecraftforge / src / forge : add the ability to override the block render texture .
added a return statement to TxCacheDB . java to ensure proper termination of the process
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . asm ` to ` jdk . internal . org
refactor FastDictionary class to improve performance and maintainability of the code
improve handling of connection closure in case of failure to connect to nio .
updated FlightEvent constants and their definitions in FlightEventsTest . java to improve clarity and precision of event data representation
[ beam - 6022 ] enable protobuf vendored by beam - 6022
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure namespace declaration is added on the correct element
update profile picture link to include courseid and session name
add length check for short password and add length check for alphabetic and numeric sequence
simonstewart : make the timeout for retrieve last control log configurable
added the @ Test annotation to the ProxyClassSerializationTest class to ensure proper test execution for serialization tests
updated thumbnail scaling arguments in DLNAMediaInfo . java to correct the thumbnail format for improved quality quality
remove speculative guard movement phase from test suite .
added checks to ensure the authentication manager bean definition does not override bean definitions in the registry to enhance security by preventing multiple authentication managers from being
updated handling of forwarded host and server information in ForwardedRequestCustomizer . java and added corresponding test cases in ForwardedRequestCustomizerTest
set the initial buffer length in ConsoleReader to ensure consistent display by resetting the buffer length
change visibility of allowedRoles and disallowedRoles from private to protected to allow subclasses to access and modify role management logic
updated OpenIDE - module - Specification - Version from version 1.54 to 1.66 and modified version numbers in the manifest to ensure compatibility
hbase - 26003 make netty tl wrap size configurable
refactor multiple Java classes to improve code structure and organization to enhance maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to use static assertions and improve test coverage to enhance test reliability and ensure correct exception handling for incorrect line lengths
refactor OpenSamlAuthenticationRequestFactory to allow dynamic protocol binding to enhance flexibility in handling SAML authentication requests
refactor DepthController to utilize AttachedSurfaceControl for applying a Transaction to enhance surface control functionality by ensuring transactions are applied only when available
change default preview version to 2.5 . x
updated action names from WRITE to CREATE in AccessController . java to correct the authorization actions for bulk operations in the table operations
updated the subList method for unSeqMergeList to exclude the first index to ensure the subList does not exceed the maximum file size limits
camel - 1771 . fix file input stream not support in camel - spring
added a login method to DefaultShardManager and updated its builder to conditionally call login to improve flexibility in handling authentication failures during shard manager operations
fix syntax error in DeleteGlobalRef method call to ensure proper function pointer deletion
updated the join table name in AbstractRegisteredService . java to improve clarity by using a more descriptive name
camel - 20297 camel - http - httpsender : do n ' t return route complete in case of exception
add miss check for isuserstudent
added security checks for linked profiles and unc or device paths in BMPImageReader . java to ensure proper handling of profile paths and prevent
update location calculations in ClassicPlotManager to use correct values from ` ex ` instead of ` sz ` to ensure proper dimension handling for plot
fix a deadlock with pmd
refactor grid presentation handling in StdGridFragment to use a dedicated method for setting grid sizes to improve code clarity and maintainability by central
change return statements to return true in ContributionsListFragment . java to ensure that the method indicates a successful operation
added a test case for skipping a range of distinct statements in the DistinctPrefixFilterIT and modified ScanUtil to include limit handling in BaseResultIterator
pdfbox - 4892 : add test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file to enable retrieval of file metadata for better resource management
added a condition to check for valid metadata table properties in HiveIcebergStorageHandler to ensure proper handling of metadata table configurations in the storage handler
add a combobox so user can select their own currency
change exception handling from IOException to Throwable in WriteFlusher . java to improve error handling by capturing a broader range of issues
added a boolean flag ` mStartedEnterAnimation ` and updated animation logic in ` IconRecentsView . java ` to ensure appropriate handling of item changes
added a new public String field named activeKeyId to the UaaConfiguration class
rename sendmail and sendmailwith attachments action to be plural
made the ` isActive ` variable volatile to ensure thread - safe access to the value
fix : do not include order by by default
avoid compiler warning concern rawtypes
added a check for the ownCloud app name in the DisplayUtils class to ensure the Calendar against the app ' s name to enhance security by verify
hbase - 2593 hbase should automatically set the permission on the master if security be enable .
use httpresponse . getLocale ( ) instead of httprequest . getLocale ( )
8028453 : improve javadoc of java . time . instant . getepochsecond
set default state format from 2 to " 1 " in multiple classes to ensure consistent collection state format across the application
removed the type variable and simplified logging statement in CentralAuthenticationServiceImpl . java to streamline logging output for clarity and maintainability
pdfbox - 4892 : ignore illegalargumentexception , a suggest by valerybokov
reformatted conditional statement for better readability to enhance code maintainability
[ mng - 5761 ] do n ' t require a file parameter when calculate the base directory .
[ beam - 8470 ] enable coder for bytebuffer to be use by custom coder .
updated JpaQueryParsingToken instantiation to include a boolean parameter to enable strict parsing of signed numeric literals in queries
updated the ` generateLaunchLugFromRASAeroRailGuide ` and ` RailGuideHandler ` methods to include an instance count
removed the getNonceFactory method from BitmexStreamingExchange . java to the method was deemed unnecessary for the current implementation
( chore ) camel - mail : use parameterized format
[ java ] use default timer interval for pub and linger timeouts .
change default value of initializeLoadedClasses from true to false to disable class loading by default
added a call to grab focus on the search field to improve user experience by retaining focus during search operations
no - jira tl connection logging adjustment
removed an expected value from the getDouble method call in StatementTest to simplify the test since it now returns something
updated the assertion to include the server base URL in the error message to provide more context about the error for better debugging and context
replaced HttpMethod and related mock objects with ServerHttpRequest and ServerWebExchange mocks in CsrfWebFilterTests to enhance test reliability by using the appropriate
updated density handling in FilterResourcesStep . java to ensure correct drawable resource formatting based on the density value
added methods to handle UIID updates based on component type and prefix them to improve clarity and functionality of UI representation of UI elements
simplified the condition for rotation checks in RecentsAnimationDeviceState . java to enhance code clarity and maintainability
[ fix ] arraycopy regression due to different length constness
added import for LuceneTestCase and annotated ReplicationFactorTest with @ AwaitsFix to indicate that the test is known to be failing and is
null check for rscheduledexecutorservice . schedule ( ) method invocation . # 3136
simplified the condition for updating credential in FileDownloader and FileUploader classes to improve code readability and maintainability
hbase - 26945 compactor should close all storefilescanners when request be null
[ java ] fix possible nullpointerexception in netmetrics . getconnections ( ) # getconnections ( )
added parameter and claims handling to TokenMvcMockTests to verify the correct claims are returned for the nonce in the token
updated various chart editor classes to improve code consistency and maintainability
added formLayeredPane width and height settings to form . java to ensure layered pane is consistent with the input stream dimensions
added maxY method to calculate the vertical height of the owner component to ensure proper positioning of the owner component by accounting for its height
prevents dbms connection leak
replaced instances of DOCKER _ COMMAND with Platform . DOCKER _ COMMAND in DockerTestUtils and PlatformTestUtils to centralize Docker command usage across platforms
added null check for input files in initializeParameters method to ensure robust validation to avoid potential NullPointerExceptions during execution
make folder leave behind color configurable .
show an error message when the canary version of the android studio plugin do not match ( # 568 )
identityproxy : if table name be null , log a warning , and continue
remove module persist enable and disable lists from StartArgs . java to simplify argument handling for better maintainability
[ gemini ] fix error message
replace HashSet with LinkedHashSet for questions in VerifyPasswordResetRequestAction . java to maintain the insertion order of questions during verification
add some extra test case to try and reproduce security issue
fix for tck failure
added isExecutingRunnable flag and refactored runnable execution logic in Scheduler . java to improve clarity and maintainability of scheduled task management
change method parameter types in ` runCommand ` and ` AuditCommandRunner ` from ` String [ ] ` to varargs ` args ` across multiple classes to
refactor XMLParser to handle end - of - stream conditions when reading characters to improve robustness by preventing end - of - file errors
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to address issues with horizontal overflow pages and text
added pivot point configurations for mArrow in DeepShortcutsContainer . java to ensure proper alignment of the arrow based on its width and height
change handling of fileupdatemonitor interrupt signal to debug . log instead of printstacktrace .
modified the updateThumbnail method to include a refreshView parameter for better control over thumbnail updates to enhance functionality by allowing thumbnail updates to refresh based
pdfbox - 4892 : improve usage message , a suggest by valerybokov
improve hostname validation for ie . fix report by rich richard
updated references to ` AuthenticatorActivity ` and ` DrawerActivity ` to use ` this ` instead of ` this ` in multiple classes to
refactor ` SizeBasedDocIdSetBlock ` and ` SizeBasedDocIdIterator ` to use a single variable ` _ currentDocId
updated the ` promptToOpenFile ` method to accept parameters for file names and overwrite the existing directory if it exists to enhance user experience by allowing users
fix widget count not initialize properly
added transformation logic for component bounds and coordinates in FlightConfiguration . java to improve handling of component transitions and ensure accurate bounding box calculations
switch from seda to direct : in test
updated DateTimeFormatter initialization to include Locale . ROOT to ensure consistent date formatting across different locales
added permission check to dspaceobjectconverter for access control
added a test method to verify that dimension names , collection , and metric names are set to null in StarTreeConfig to ensure that null values are handled
camel - 16527 : camel - core - optimize recipientlistbuilder for dynamic and static exchange
refactor ` InlineLayoutBox ` and ` HoverListener ` to improve repaint logic and manage painting region updates to enhance UI respons
replace DetectAuthenticationMethodOperation with OperationsService for improved service management to enhance the user experience by providing a more modern operation service implementation
