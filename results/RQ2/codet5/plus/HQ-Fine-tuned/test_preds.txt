simplified the SocketAppender instantiation by removing host and port parameters to streamline the socket configuration by eliminating unnecessary parameters
refactor basic auth header handling into a separate method for clarity to improve code readability and maintainability by reducing duplication
updated the method call to retrieve the msg length directly from the buffer to simplify the code by removing unnecessary reference to RecordDescriptor
server : fix npe in getcapacity ( ) when vmdetailcpu and vmdetailram be null
added flags field and a constructor to ShadowPaint and updated PaintTest to verify anti - alias functionality to enhance the functionality of the ShadowPaint class
updated the title in MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content "
set noclassok to true if eclipse be not compile the project
added a check for non - empty nonce before processing in Realm . java and updated WWWAuthenticateHeader parsing in NettyAsyncHttpProvider
added a RemoteInputListener interface and implemented connection handling in RemoteInput . java to improve the responsiveness of the server by allowing listeners to
reordered conditional statements in OrcEncodedDataReader . java for better readability to improve code clarity and maintainability
updated filter condition to check if the thing is enabled before executing its handler to ensure that only active things are processed in the HomeConnectBridgeHandler
added null check for ` bs ` before removing and adding policies in ` AuthorizeAdminServlet . java ` to avoid potential ` NullPointerException ` when `
updated JSON assertion methods to use ` matches ` instead of ` isEqualTo ` for Java 9 - or later checks to improve readability and consistency
added JSON serialization for DAG information in TezTask . java to enable logging of DAG context and description for debugging purposes
updated heap time calculation in ComputedSummary and added a method to get heap time in HprofHeap to improve accuracy of heap time representation and
updated the upload count retrieval method in ` ContributionsActivity ` to use ` ApacheHttpClientMediaWikiApi ` instead of ` RxJava2Tasks `
do n ' t force lock even in mvcc when use multi - threaded mode
fix ( commitlog ) : fix timestamp position issue in defaultmessagestore ( # 5853 )
added a check to ensure that the associated folder is not open when a folder is marked as open to improve error handling and prevent potential errors when
added a test method to verify sorting of PGProperty names in ascending order to ensure that PGProperty names are sorted in the correct order for accurate
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in the Common . java file to
updated method signatures and variable types from Object to ItemInfo in UninstallDropTarget . java to improve type safety and clarity in handling item
updated the error message assertion in RequestBuilderTest to use isIn method instead of hasMessage to improve clarity and accuracy of error message validation
refactor NearbyActivity to use NearbyListFragment instead of a string for the nearbyMapFragment to improve code readability
renamed the parameter from ' status ' to ' sessionStatus ' in the FlatProfileContainerFree constructor to improve parameter clarity and consistency by
added a new column ` send _ zero _ anomaly _ email ` to ` EmailConfiguration ` and modified ` EmailReportJob ` to skip
[ hotfix ] [ kafka ] fix flinkkafkaproducerbase # open with restorestate
added methods to retrieve User and Geofence by their IDs in DataManager . java to improve data retrieval functionality for users and geofences
added a constructor to the BlockingResponseListener that accepts a maximum length parameter to enhance flexibility in handling response lengths
minor refactoring of the memberbroadcastsreceived method to take a byte array instead of a channeldata array
replaced System . out . println with logger . info for snapshot paths to improve logging clarity and ensure proper resource cleanup
updated assertions in LoginSAMLAuthenticationFailureHandlerTest to remove trailing slash to ensure correct URL syntax for access denied errors
[ hotfix ] fix checkstyle violation in configmetadataprovidertest
updated import statements in ListFragment . java and modified the parameter name in updateNoteReminder method in SnoozeActivity . java to
added a new ` AcceptAllFilter ` class and modified ` WindowsDirectoryStream ` to utilize it for filtering paths to improve directory stream filtering
[ hotfix ] [ test ] fix checkstyle violation in jdbctestdataset
added ClassNotFoundException handling to the lookupType method in CompilerToVM and CompilerToVMHelper classes to improve error handling for missing class definitions during type
refactor GenericContainer to improve Docker image tag validation and introduce DockerImageName utility class to enhance code clarity and ensure valid Docker image names
updated string resource for login failure dialogs in LoginActivity . java to improve clarity of error messages related to authentication failures
added ` setAutofocus ( " autofocus " ) ` method calls across multiple form classes to enhance user input validation by ensuring focus is
added tests for zone SAML properties in SamlIDPRefreshMockMvcTests . java to ensure correct handling of SAML configurations for different identity zones
added checks for non - empty and non - digit versions before adding them to the list in ComparableVersion . java and created a new test method
updated mode settings and adjusted return values in Sheet . java , and added theme properties in UIManager . java to improve layout responsiveness and
updated package structure and import statements for ParallelUniverse and ParallelUniverseTest classes to improve organization and accessibility of ParallelUniverse in the
refactor constructor invocation in LocalCacheFactory and NodeFactory to simplify type handling to improve code readability and maintainability by reducing redundancy
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to ensure consistent
added functionality to display edges and self loops in the ProcessingPreview class to enhance user experience by providing visual representation of graph elements
rename ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` to ` ALLOW _ TVM _ SOLIDITY _
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in method naming
added translation to the drag handle indicator to ensure proper positioning of the drag handle in the AllAppsTransitionController
removed log statements for collection , community , and item viewing in CollectionViewer , CommunityViewer , and ItemViewer classes to streamline logging
[ flink - 20619 ] [ hive ] improve the description of hive . optimize . ppd for query optimization
added an assume statement to the ScanningAppProviderRuntimeUpdatesTest . java file to prevent test failures on non - OSX environments
added Maven bundles for Jetty ALPN client libraries and a debug flag in TestJettyOSGiAnnotationParser to enhance support for J
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 579 : retry
updated transaction handling logic in Transaction . java to improve performance and maintainability of transaction operations
updated GenruleBuildable to exclude execution from artifact caching and modified the CustomFieldBehavior annotation to ensure Genrule execution is not relevant to artifact
added a method ` whichExec ` in ` AsyncExecute ` and modified ` FirefoxCustomProfileLauncher ` to utilize it to improve execution path
added a check to prevent adding duplicate entries in the columnFamToDynamicColumnsMapping to ensure that duplicate entries are not added , improving
[ hotfix ] [ runtime ] make hadooptupleunwrappingiterator transient
added a check for client version before processing view types in MetaDataEndpointImpl . java to ensure compatibility with client versions below MIN _ SPLITTABLE
added logic to update student attributes in AccountsLogic . java to ensure student attributes are correctly updated for the correct instructor
replaced the import of TestCellReference with the correct package in AllXSSFTests . java to ensure compatibility with the latest Apache PO
fix lens piston miss block hardness on obsidian
added a new file LongPointerPressTest3049 . java that implements a long pointer press test to demonstrate the use of
simplify inlining logic for direct call .
simplify null checks in BaseBuilder and XMLConfigBuilder for improved readability to enhance code clarity and prevent potential NullPointerExceptions
simplified the indent condition in ListBlockParser and added a new test for deeply indentedList in SpecialInputTest to improve code read
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it to improve code organization and encapsulate
added an @ Ignore annotation to WebfluxNotIncludedTests to mark the test as ignored due to https : / / github . com / spring
[ wasm ] remove use of nativestring from testcaselogger . savemessage .
camel - 16400 : camel - core - optimize route startup code to reduce call overhead .
added a condition to check if the format is video before processing in RemotePlayHandler . java to ensure only video formats are processed in the web
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing unnecessary hostname verification processes
server : do n ' t allow vm to be create in zoned scope ( # 4669 )
updated logging statements in Driver . java and QueryResultsCache . java to include the current CacheEntry to improve logging clarity and provide more context for
added a ` skipModelUpdate ` option to ` ManageDependencies ` and updated related methods in ` AddManagedDependency ` to allow users to skip
added a test for sending a PendingIntent and implemented the send method in ShadowActivity and ShadowPendingIntent to ensure proper handling of request codes and
updated rendering handling in RocketFigure3d by enabling FBO and disabling rendering hints , and refactored graphics creation logic
added synchronization to the controllerListeners list in HydrawiseAccountHandler and modified dispose method in HydrawiseControllerHandler to ensure thread safety when
solr - 9893 : easymock do not work with java 9 , disable this test
updated year retrieval logic in TimestampUtils and added local time formatting in SetObject310Test to improve accuracy in year representation and enhance time formatting
add null check before disconnecting the jabber connection to prevent potential npe .
updated the variable name from " committed . ws _ table , committed . ws _ partition , cur . ws _ commit _ id " to "
replaced ByteChunk with ByteBuffer and updated related exceptions in BufferedInputFilter . java to improve performance and handle buffer overflow scenarios more effectively
added a method ` toSync ` in ` AsyncUtils ` and created corresponding unit tests in ` AsyncUtilsTest ` to facilitate
added ActionGraphBuilder import and updated method signatures in multiple files to utilize the new ActionGraphBuilder functionality
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to ensure that the upload functionality works
removed unnecessary try - catch blocks when creating tables in SQLManager . java to streamline error handling and improve code clarity
added a check to return the local Maven directory if the file does not exist to ensure that the method returns the correct local Maven directory when the
do n ' t hide algebra label if new label start with labelmanager . hidden _ prefix
refactor : fix npe in ctelementimpl . getmetadata ( # 2649 )
replaced ` setFlags ` with ` addFlag ` for buffer flags in ` DefaultTrackOutput . java ` to ensure that the buffer flags
added a condition to check if the cached entity is sorted by ID in the reordering logic to ensure that reordering operations only occur when the
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added null check for backupFolder before logging expire information to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that implements a test for creating a void array using reflection to ensure that the
added the ` @ AddToRuleKey ` annotation to the ` toolType ` field in ` ClangCompiler ` and ` GccCompiler
updated pincode timeout condition in PinCheck . java to use a constant PINCODE _ TIMEOUT to improve code readability and maintainability by
add isampled ( ) method to prometheusmeterregistrytest and prometheusexemplarssample ( fixes issue # 241 )
removed the @ Ignore annotation from multiple test classes to mark tests as ignored due to MongoDB server requirement
http : / / issues . apache . org / jira / browse / amq - 4568 - fix unit test which fail on
updated condition to check if the table is artifical instead of the table name to ensure that only artifical tables are processed in the
updated file status checks in FileOutputCommitterContainer . java and LaunchMapper . java to use isDir ( ) instead of isFile ( ) to
added null and size checks for session attributes in MongoSessionManager . java to ensure proper handling of null or empty session attributes
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
replaced direct reference to ` _ stopping ` with a variable ` stopping ` for better clarity to improve code readability and prevent potential null
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
( chore ) camel - message - history : use timestamp to calculate elapsed time
2 . x : fix delayedmonopublishertest . testdelayedmonopublishertest . testonerror ( # 5
changed assertion from assertTrue to fail if the error is not of type WebSocketHandshakeException to improve error handling by ensuring that WebSocketHandshakeException is
refactor AllAppsTransitionController to use the instance of View . OnLayoutChangeListener instead of a custom OnLayoutChangeListener to improve code readability
refactor variable names from ` theHandler ` to ` handler ` in ` PolicyBasedAuthenticationManager . java ` to improve code readability and
add support for the default output channel attribute in the XPathRouterParser and its tests to enable proper configuration and validation of the default output channel in
updated cacheSeconds type from int to String and added @ DurationCapable annotation in MessageBundleProperties and CasCoreWebConfiguration classes to improve flex
update openapi version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple test files to
removed the append method call from ByteBufferPool to streamline buffer management by eliminating unnecessary buffer appends
added a check for the detection of the " alt - rt . jar " in the boot class path to warn users when the " alt -
updated test cases in JdbcScimUserProvisioningTests to use ' upper ' for user names and email addresses instead of ' pivotal .
[ gr - 38686 ] disable flightrecorderprofiler on java 1.7 and above .
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to condition
added a condition to check if the content view has content before processing in HttpParser . java and implemented a test for chunked PUT requests in Proxy
updated AtmosEndpoint . java file to improve functionality and maintainability of the AtmosEndpoint class
updated method name checks for " println " , " printf " , and " print " in Java2TypeScriptAdapter . java to enhance method
added a new file TestCapacityUntilGCWrapAround . java to test the capacity until garbage collection occurs on 32 - bit platforms to ensure correct
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
removed conditional check for stamped at start in SamplingStatCalculator to simplify time calculation logic for better readability and performance
added unit test base on user forum issue
tmi - jpeg : fix error message in case of bad icc profile chunk number .
fix tornado rod not reequip the item when they ' re on the same item and cause the item to reequip . close
added logic to ignore specific entries in JoobyModule and SpringModule , and registered beans in JoobyExtension if they are
refactor to use the container ' s getparentclassloader ( ) method instead of the thread ' s getcontextclassloader ( ) method
add additional nameupdater support for jmeter upgrade
add start flag to ellipsoidregionselector to track if the selector have start
updated URLs in JavaSEPort . java to use HTTPS instead of HTTP , and added a default protocol for CodenameOneComProtocol to
[ geos - 8470 ] add validation for sortby attribute in getfeature request
updated the condition for the grantor variable in AbstractJdbc2DatabaseMetaData . java to ensure that the grantor is set correctly when it is
added graphics imports and modified image creation logic in DiagramGenerationTest . java to ensure compatibility with the expected image and improve test reliability
fix npe in fmlcommonhandler when sideddelegate be null .
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
improve lock test to use asserttask instead of countdownlatch
added methods to tokenize and join tokens in StringUtil . java to enhance string manipulation capabilities for better tokenization
use response . senderror ( 404 , ` ` not find ' ' ) instead of response . setstatus ( 404 ) . setmessage (
refactor command handling and improve highlighting logic in SystemHighlighter . java to enhance code readability and maintainability by using a consistent command
updated version and version date constants in Constants . java to reflect the current release version and its date
update buffer position to use dimensionSize instead of idx to ensure correct positioning based on dimension size
added a new request type for shell drag readiness and updated related classes to implement drag - and - drop functionality to enhance the system ' s
added tests for the socket traffic class in both SecureSocketAppenderSocketOptionsTest and SocketAppenderSocketOptionsTest to ensure compatibility with Java 7 and
added support for PSK - AES256 - GCM - SHA384 and TLSv1.2 in TestCipher . java to enhance security
updated the method to retrieve long description from the place object instead of just the description to improve accuracy in displaying the long description for better user experience
added JsonProperty annotation to ScimGroupMember to enable serialization of the value property in JSON output
refactor HqlQueryRenderer to use a list of JpaQueryParsingToken for reserved word processing to improve code readability and maintainability
[ hotfix ] [ test ] fix typo in subscriptionhelper
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
updated the ` offsetStreamIndex ` method to include a ` indexStartsAtOne ` parameter and adjusted related calls to ensure the index starts at
tika - 697 -- add mime definition for cpio and arof file .
[ hotfix ] [ table - planner - blink ] remove flinksqloperatortable # getmonotonicity from flink
added inheritance annotations and equals and hashCode methods to OneTimeTokenAccount and OneTimeToken classes to ensure proper object comparison and hashing functionality for the
added a condition to check if the assistant was not launched before processing the fling event to ensure that the fling event only occurs when the
added a new file SolarisShortDSA . java that implements a key pair signing and verification mechanism to demonstrate the use
added a call to toggleSearchLabel ( false ) in ListFragment . java to disable the search label functionality in the fragment
server : fix bug in createsnapshot , do n ' t lock volume when create snapshot
replaced the existing ServiceConnection with a new DetailsServiceConnection class and added a null check for mConnection to improve resource management and prevent potential
refactor HttpClientTLSTest to use AtomicReference for error handling to improve clarity and maintainability of error assertion logic
removed the equals method from ConjunctionScorer to simplify the code by eliminating unnecessary equality checks
added a null check for the variable ` v ` in ` bindItems ` to log an error when removing colliding items to improve error handling
fix race condition in metadataraftgroupmanager # getraftgroupids
log warn if cache be full , shrink to 90%
updated API version from v2 to v3 in CryptoFacilities and related classes to align with the latest API changes and ensure compatibility with the
added a new method ` empty ( ) ` to the ` freenect2 ` class to provide a way to check if the collection is
added imports for Optional and updated test annotations in AsyncPageReader and TestDrillParquetReader to address issue DRILL - 802
updated argument validation and method signatures in SerumStreamingService . java and modified buildChannelName method in SerumStreamingService . java to enhance
add a config option to disable the animation when an item be charging on the top of a mana pool .
[ java ] do n ' t try to connect to a cluster node if the connection timeout occur and the egress subscription be not connect to
replaced the ` ignore ` variable with ` ex ` for exception handling in ` WaitForHelper . java ` to improve error logging by logging the
replace conditional directory existence checks with an assumption in DefaultServletTest . java to improve test reliability by ensuring filesystem support for question directories
updated the injection order of dialog and open screen styles in ResourcesInjectorFull . java to ensure consistent style injection behavior across the application
changed the type of ` changeLogFile ` , ` outputFile ` , and ` outputDirectory ` from ` String ` to ` FileResource ` in
fix checkstyle issue in blockworldvector . java ( # 700 )
changed access modifiers of ` CacheEntry ` class to ` final ` for ` key ` and ` value ` in ` LongConcurrentLRUMap `
refactor the handling of string literals in ReflectionProcessor to quote them before adding them to resourceConfiguration to ensure proper formatting of string literals for better
updated cache retrieval logic in FileCredentialsCache . java and modified argument handling in EmptyCC . java to improve cache handling and ensure proper file existence
updated the database path in ValidateMultiSignContractTest . java from " output _ PrecompiledContracts _ test " to " output _ ValidateMulti
fix : fast - sync - minimum - peer - count be set to 1 when there be no available ethereum peer ( # 135
danielwagnerhall : fix typo in sessionloghandler . attachtocurrentthread ( ) call .
added a check to prevent expansion of the " AreEqual [ Segment [ X , Y ] , Segment [ Z , W ] ] " format
added a conditional check to clear pending rendering operations if the implementation is minimized to ensure that pending rendering operations are only cleared when the implementation is
fix timeout issue in hazelcasttestsupport [ hz - 2362 ] ( # 24936 )
fix ` ` continuously update key in map store ' ' write - behind mechanism
set the icon of JLabel to null in GroupTreeCellRenderer to avoid unnecessary space during rendering
updated test methods in TestBlacklistAwareRedirectResolver to differentiate between strict and default redirects to improve test coverage for redirect matching functionality under different conditions
added socket resource cleanup and updated test methods in ShutdownMonitorTest to improve resource management and enhance test coverage for the ShutdownMonitor functionality
adjusted the calculation of ` moveSize ` and simplified the fill rate logic in ` RandomAccessStore . java ` to improve memory management and
added a new method ` readFields ` and improved error handling for field setting in ` Json ` to enhance field reading functionality and provide clear
[ hotfix ] [ runtime ] refactored componentclosingutils to recreateonresetoperatorcoordinator
server : remove volume when vm be in error state when snapshot be create ( # 4669 )
server : fix vlan ipv6 range check ( # 5358 )
updated variable names from ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` to improve code
updated the timeout value in the getLeaderRetry method from 15000 to 30000 to increase the timeout for shard state retrieval
refactor error message handling by removing the input parameter from the errorMessage method across multiple classes to simplify error message formatting and improve clarity in exception
updated drawImage parameters in URLImage . java from x and y to - x and - y coordinates to correct the drawing positioning for improved
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
refactor error handling in SetFunDef . java by introducing a new method isItemZeroHighCardDim to improve code readability and
added an exception parameter to the StreamTaskException constructor to improve error handling by providing more context about the exception
refactor tag processing logic in Preprocess . java to improve clarity and efficiency to enhance readability and maintainability of the code while ensuring
updated formatting of the ` read ` method in ` MessagePack . java ` to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a mechanism for mapping
add test to ensure that jsonparser do n ' t encode empty extension list
update artifact handling in Artifact . java and LibraryManager . java to include checks for external meta with no internal name to ensure correct artifact retrieval and
added an alias for the " node _ popup _ scripting " in the ScriptingMenuEntryVisitor to enhance the menu ' s functionality by
updated constants and logic in OverviewActionsView and RecentsView to enhance task visibility and animation based on device profile to improve user experience
( chore ) camel - jms : avoid unchecked cast when get the out message
removed unnecessary ` throws IOException ` declarations from multiple test files to simplify test code and improve readability
deleted deprecated classes AbstractDelegatedVerb and FailureContext to remove unused components to streamline the codebase
changed ` __ content ` and ` __ contentETag ` to ` __ contentETagGzip ` and added a new ` MicroServlet ` class to
replaced the method ` getAndAdd ` with ` getAndAddRequest ` in ` OnSubscribeRedo . java ` and added a new test
added logging functionality and improved component stop message formatting in SpeedmentImpl . java to enhance error reporting and provide clearer context for component
( scott phillips ) add a servlet to load the dspace configuration .
hbase - 26907 fix npe in storescanner . match ( ) and testWidescanner . matchbatch ( )
camel - test - support to turn off jmx by default for camel test
replaced hardcoded slashes with a constant for the canonical package separator in SourceLineAnnotation . java and SourceCodeDisplay . java to ensure consistent
added methods to find YARN and handle application ID retrieval in HiveConf , RemoteSparkJobMonitor , SparkJobStatus , and LocalSpark
added support for " maria " database names in the DbConnectionManager to ensure compatibility with both MySQL and maria databases
[ hotfix ] [ runtime ] fix log message format in splitlogmanager
added a new test class ` ExecuteAndReturnStringTest ` to validate the functionality of ` ExecuteAndReturnString ` to ensure proper error handling
added a new file ` InvokespecialInterface . java ` containing an interface and a class ` C ` with methods to invokepecial interfaces
updated the implementation of EvictingBoundedList to improve performance and maintainability of the code
use turncosts instead of turncosts = true for edge base 2dir traversal
added checks for backgroundDisabled and selection in SelectBox . java to ensure that selection is valid and prevent illegal argument exceptions
added a null check for the md variable in RpcServer . java to prevent unsupported operation exceptions when md is null
updated hotseat cell size calculation and icon center calculation in TaskbarViewController . java to improve layout consistency and align hotseat icons
updated partition name extraction logic to use ` values . get ( ` partitionColumnIndex ` ) ` instead of ` partitionName ` to improve accuracy in
make namedtaskdecorator compatible with version 4.1 ( # 18550 )
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
updated the ` equal ` variable to true and modified the comparison logic in ` DisplayModeTest . java ` to enable the comparison of display modes
updated UnicodeToLatexFormatter to handle high - codepoint Unicode characters and adjusted formatting accordingly to ensure correct formatting of high - codepoints and
added null checks and handling for ISO control characters in OAIDCCrosswalk and Item classes to ensure proper conversion of character data to string
danielwagnerhall : do n ' t select the last frame if it ' s the same a the original window handle
added a clear button to the DataBrowser and modified conditional checks in BookmarksPanel to enhance user experience by allowing users to clear all tables when
updated the URL generation in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building the base URL to improve clarity and maintainability of
updated assertions in SoftAssertionsTest to utilize parseDatetime and improve error message formatting to enhance test clarity and maintainability by using a
updated adaptOrders method to include a reverse parameter for order adaptation to enhance flexibility in order adaptation based on whether the order is reverse
delombok now print ' var ' if it ' s null or its position is - 1 , and add a new Java11Var class
danielwagnerhall : unignoring a couple of test , so that they pass in all browser . fix issue
updated Configuration initialization to set a default value of false to ensure consistent behavior when overriding Hadoop configuration properties
replaced ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha ) ` in `
added unit test base on user forum issue
updated import statements to use ` getCatalinaBase ( ) ` instead of ` System . getProperty ( Globals . CATALINA _
added unit tests for ` getBestDateTimePattern ` method in ` ShadowICU ` and refactored the return statement in ` ShadowICU
update the information style of the object in PlotSquared . java to provide more detailed color information to enhance user experience by providing clearer and more
added ZuulProperties support to TraceRestClientRibbonCommandFactory to enhance tracing capabilities by allowing custom Zuul properties
tika - 2343 -- fix unit test which fail on a system with utc timezone .
added new files ` SampleApplication . java ` and refactored ` BuildInfoMojo . java ` to utilize ` getBuildTime `
updated the calculation of xDist in PagedView . java to use the absence of mScroller . getCurrX to improve accuracy
deleted the GUIRWTester . java file to the functionality was no longer needed in the project
removed the ` @ NullableDecl ` annotation from several constructors and methods in ` LazyMessage ` , ` StandardSubjectBuilder ` , and ` Subject
updated error message format in TestStream . java to include the actual value to improve clarity of error messages for better debugging
move html and xml template parser to the ' markup ' package for consistency with other package name
added a new test method ` testXPathString ` to ` XPathTest ` to verify the evaluation of XPath strings to ensure correctness of XPath
added @ Nullable annotation import to FutureUtils . java to indicate that certain variables may accept null values
add warn if invokedynamic do not resolve during call graph construction
updated email addresses in ContextTest . java from " myfakeemail @ gmail . com " and " myrealemail @ gmail .
updated HTTP request format and modified URI validation in HttpConnectionTest . java and URIUtil . java to ensure correct response code for bad encoding and
added a ` getColumnDataType ` method to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a way
add default implementation for aws client , and remove unused import .
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
replaced ` long ` with ` Instant ` for startTime and updated related time handling in ` Statistics . java ` to improve performance and clarity
added version handling and configuration options for MediaInfoLib in LibMediaInfoParser . java to ensure compatibility with newer MediaInfo library versions and improve
added reflection - based proxy handling for IdeaDependency in ProjectReader . java to facilitate proxy creation and retrieval of dependencies based on
added a new ` SerialHeap ` class and updated the mapping from ` GenCollectedHeap ` to ` SerialHeap ` to introduce a
added multiple @ SuppressWarnings ( " serial " ) annotations to Gson $ Types . java to suppress serial warnings and improve code readability
add mouseposition to mousewheelevent to be able to pass mouse . getposition ( ) .
datamongo - 1608 - fix nullpointerexception in repository . findbyfirstnameignorecase ( ) .
[ hotfix ] [ core ] add multiset type info to maptypeinfo .
added an ` retrieveByIssuer ` method to ` XOAuthProviderConfigurator ` and corresponding test cases in ` XOAuthProviderConfiguratorTests ` to
pdfbox - 4892 : avoid nasty cmap file , a suggest by valerybokov
refactor operations service handling in ContactsBackupJob . java to use a service connection and binding to improve service management and ensure proper resource management
refactored type constraints and introduced new classes T6938454a and T6938454b for improved type handling to enhance type
add is _ config _ hidden ( ) method to accountid and implement it in accountlist .
added a check to ensure the supported bounds of displays match and log an error if they do not match to improve error handling and provide clearer
updated schema removal logic in PMetaDataImpl and added a test for schema removal in PMetaDataImplTest to ensure proper schema management and validate functionality
mow - 107 passive login now fire on load , not on loadhandler
added a new file Box2DTest . java and modified GDXTester . java and Box2DTest . java to include " Box
improve debug logging . patch by jbellis ; review by brandonwilliams for cassandra - 1493
[ hotfix ] [ runtime ] change default buffer request timeout from millis to minute .
regenerate gapic client , add iot and web security scanner client ( # 3282 )
added a help button to the OpenOfficePanel to provide users with a help documentation
updated NettyAcceptor configuration to use childOption for TCP _ NODELAY to ensure that the TCP _ NODELAY option
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService to use
refactor class reference handling in ScanResultObject . java to improve clarity and maintainability to enhance code readability and ensure class references are
refactor connection handling in DecodeServlet to improve error handling and streamline image decoding process to enhance code readability and maintainability while ensuring proper
added null handling support to the Querydsl class and created a corresponding test class to enhance null handling capabilities and ensure correct functionality through testing
added null check for actor before iterating through actions and updated index handling in SequenceAction to enhance robustness by preventing null pointer exceptions during action
refactor : fix typo in cttypetest . java ( # 2373 )
added synchronization to the synchronization mechanism in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and ` Issue888 _ KotlinI ` with default methods and tests
added functionality to revoke an existing agent certificate in the CertificateManager class to enhance security by allowing users to revoke expired certificates
added checks for HTTP response codes in AbstractHttpTest and implemented a new test for writing bodies after no body responses in HttpServerTestBase to ensure
refactor script handling in ScriptTransformer . java to improve clarity and error reporting to ensure compatibility with Java 6 and above and provide clearer
added support for Hikari connection pooling options in HiveConf and updated test assertions in TxnHandler to enhance database connection management and improve test
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to
added lock and unlock functionality to the FileMenuFilter and OCFileListFragment classes to enhance user experience by allowing toggling of file locks
updated version . java files for mmm and ppp to reflect the latest release version
clear endpoint cache in updatekeyspaces . patch by jbellis ; review by brandonwilliams for cassandra - 1487
introduced a private method ` waitForState ` and modified its usage in ` Locks ` , ` ThreadExecutionSynchronizer ` , and
updated ` getCoercedAttrValues ` and ` SkylarkDescription ` , ` SkylarkDescriptionArg ` , and `
simonstewart : make the storage interface extend the one declare in the html5 package
added null check for existing view before checking its new type in PlanExecutor . java and updated test cases in CreateViewStatementTest . java to
changed catch block from Exception to Throwable in SegmentGenerationJobRunner . java to handle all exceptions and improve error reporting
updated the query string retrieval logic in SpellCheckComponent . java to ensure a valid query string is used when the parameter is not provided
added validation for header values to ensure illegal characters and whitespace are not found to improve robustness of header processing by preventing invalid header values
[ gr - 21212 ] fix after field offset calculation in hybrid layout .
[ core ] fix type inference for astcommentcontainer . setcontainscomment ( )
hhh - 5108 - log a warning for association with ` fetch = ` join ` and ` lazy = ` true `
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpec
added assertions to verify database and table names in TestCompactionTxnHandler and set database and table settings in TxnHandler to ensure that database and
camel - 3490 : fixed timer consumer to not throw exception during graceful shutdown .
added a condition to check if the block is not processed before adding it to the traces list to ensure only valid blocks are processed and improve trace
updated the ProviderManager to use CollectionUtils for null checks and added new test cases for null elements to improve robustness of the ProviderManager and ensure
simplified the return statement for the database type check in InsertOrUpdateGeneratorPostgres . java to enhance code readability and maintainability by
added local index query and filtering functionality in LocalIndexIT , BaseScannerRegionObserver , and ExplainTable classes to enhance data retrieval and support
add type compatibility check before adding a collection in AlterTableStatement . java to ensure that collections with the same name can be used in the
modified cursor positioning logic in VDUBuffer . java and updated screen base calculations in vt320 . java to improve cursor responsiveness and
removed the static final String USE _ RETRIES from HttpShardHandlerFactory . java to simplify the configuration by eliminating unnecessary constants
added a semicolon to the END of the VERSION _ NUMBER string in JavaVersion . java and added an assertion in TestJavaVersion . java to
[ hotfix ] [ runtime ] skip streamtask if there be no input gate
added a test method to the TestReceivingMessageSourceParserTests class to verify the functionality of the message source parser
added null check for properties before accessing it to prevent potential NullPointerException when properties is null
replaced the throwing of an IOException with a variable that includes the original exception to improve error handling by providing the original exception context
updated formatting in multiple Java files for consistency to improve code readability and maintainability
added a TxConfidenceListener to manage transaction confidence updates in TxIdTextField . java to improve the handling of transaction confidence changes and ensure consistent
bugfix # 2 , add support for g1 Perm Gen in JmxSupport
removed unused imports and simplified return statements in NearbyController . java to improve code clarity and reduce unnecessary dependencies
pdfbox - 4892 : make generic , a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2 . java to use TaskInfoCompat for better readability to improve code clarity
renamed DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and updated related constants and methods to improve clarity and consistency in header handling configuration
renamed methods and variables in ShadowTelephonyManagerTest , ShadowTelephonyManager , and ShadowTelephonyManager to handle case
removed setUnfreezeAmount method call from UnfreezeBalanceV2Actuator to simplify the code by eliminating unnecessary amount settings
corrected the spelling of " PUBLISHED _ TIMESLOT _ DESCRIPTION " and " PUBLISHED _ ROOM _ DESCRIPTION
eranmes , on behalf of andreashaas : use FileUtils . copydirectory instead of files . copy to improve code readability
updated assertion classes in AbstractListAssert , AbstractUriAssert , and AbstractUrlAssert to improve consistency and maintainability of the codebase
2 . x : fix observable . delay ( ) javadocs ( # 5181 )
refactor update method to use addMultiFieldOperation for better readability and maintainability to improve code clarity and facilitate handling
added a null check for randomUUID before setting it in MockHubService to avoid potential NullPointerException when randomUUID is not provided
added hover event handling in InputConsumer and OverviewInputConsumer classes and modified InputConsumerProxy to handle hover events to improve user interaction respons
updated the logic for boostrapping configuration in CoreContainer . java to ensure that the bootstrap configuration is only applied when there are servers and
updated URI parameters to specify the consumer label and changed the maxHeadersSize variable name to maxHeaderSize to improve clarity and consistency in header
hbase - 25836 hbase . client . retries . number should be set to 15 ( # 2589 )
updated file handling in SourceSnippetHelper to use getAbsolutePath ( ) instead of toPath ( ) to improve clarity and consistency in file path resolution
do n ' t attempt to cache invalidationtestnode . execute if the graph be not cache .
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new
added functionality to manage currency metadata for Kraken assets to enhance asset management and ensure accurate currency information is stored
added a ` toString ( ) ` method to the ` AnyOf ` class and created a corresponding test class to provide a string representation of the
updated email handling to use a dimension map instead of a single entry key to improve clarity and efficiency in generating email subjects based on available dimensions
[ beam - 8470 ] influxdbpublisher : check for non - blank measurement and database before publish metric
renamed ` doTransform ( Number argument ) ` to ` downcast ( Number argument ) ` in multiple converter classes to improve clarity and
updated local address filtering conditions in NetUtils . java to include unique local addresses to enhance security by ensuring only valid local addresses are processed
log4j2 - 1343 fixed stringindexoutofboundsexception in datatextformatter
added methods to set property and properties in WrapSystem and updated method signatures in StrUtils to enhance system property management and improve code readability
added a constructor to the UpdateRequest class that accepts a URL as a parameter to facilitate the creation of UpdateRequest instances with a
changed enum declaration from static to instance variable in ProtoTypeAdapter . java to allow multiple instances of ProtoTypeAdapter to use their own instances of
added an experimental format warning to the response in DataImportHandler and ReplicationHandler to indicate that the response format is likely to change in the future
updated logging statement to include a formatted string based on the size of the module names to improve logging clarity by providing a clearer context for
bug fix : row height should be adjustable based on label size
http : / / issues . apache . org / jira / browse / amq - 4568 - fix typo in defaultbroker
add mean _ partition _ size , partition _ count , and split _ count variables to CqlInputFormat . java to improve clarity and
simplified the condition in the JUnitTestsShouldIncludeAssertRule . java file to improve code readability and maintainability
[ drools - 7 ] implement equal and hashcode in ruleterminalnodelefttuple ( # 339 )
added a check for HIVESTAGEIDREARRANGE configuration in TezCompiler . java to ensure that stage IDs are rearranged
fix jmx mbean name to match jmx name . patch by jbellis ; review by brandonwilliams for cassandra -
refactor memory management logic in LotsOfOutput . java to improve clarity and output of memory consumption to enhance code readability and ensure
added imports for ` org . apache . lucene . document . Document ` and modified several classes related to dimension handling to enhance documentation clarity
added support for anonymous read - only in LDAP configuration and updated related properties to enhance security by enabling anonymous read - only access control in LDAP
refactor DatabaseMetaData to improve code readability to enhance maintainability and facilitate future updates
fix exampleechopipelinetest so it run with junit4
added finishMocking method to MockitoSession and DefaultMockitoSession classes , and implemented failure handling in DefaultMockitoSession to improve mock
updated dependency handling in GoTestDescription to remove extra dependencies and added new test cases in GoTestIntegrationTest to improve test coverage and ensure correct
refactor buffer and handler variables in SPDYAsyncConnection and HTTPSPDYAsyncConnection to improve readability and maintainability to enhance
fix blockliquidwrapper use getflowingblock ( ) instead of getstaticblock ( ) . close # 374
updated the background class handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use data from intent instead of extra to improve data integrity by
refactor AprEndpoint class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ client ] fix clifrontend to handle streamingplan
update craftingmanager . getshapedrecipe ( ) to use computeifabsent ( ) instead of getitemhash ( )
flume - 1187 . testutils . doforcedcheckpoint ( filechannel ) should wait for previous backup to be complete .
simplified whitespace checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a regex pattern to filter temporary files in NeuteredLinesFilter to enhance file filtering flexibility for better user experience
doc ( regen ) : update sample code to set total timeout , add api client header test
added conditional logic to handle " INTERVAL " data types in DataTypeFactory and updated the handling of " NCLOB " in UnknownType to
added a check for publishing histogram before registering HistogramGauges and updated metric addition logic in WavefrontMeterRegistry to ensure metrics are only added
updated the handling of the ` DivideUpstream ` in ` ShenyuClientRegisterSpringCloudServiceImpl ` to set the
added a protected method ` registerListener ` to the ` ShadowSensorManager ` class to enhance the functionality of listener registration in the sensor manager
added SSL - related test methods to ` HttpServerTestBase ` and ` SelectChannelServerSslTest ` to handle socket exceptions to ensure proper logging
camel - 16400 : fixed camel - ignite test to work with apache ignite 1.5 . 0 . final .
added a check for zero or empty sets and modified the logic for determining if the total line number is reach the end to improve error handling and
pdfbox - 4892 : do n ' t catch all exception , just return false , a suggest by valerybokov
added unit tests for HDR capabilities in ShadowDisplayTest . java to ensure proper functionality of HDR capabilities in Android N
added a finally block to clear the classLoader reference to ensure proper resource management and prevent memory leaks
updated error messages in SemanticAnalyzer to include source , column name , and target aliases , and added logging for number format exceptions to improve debugging and
added a default constructor to the Message class to ensure proper instantiation of Message objects
added a check for the " java . awt . Component " class in SerializableIdiom . java and updated priority logic accordingly to improve bug reporting
updated ` PhoenixDecimalObjectInspector ` to accept ` PrimitiveTypeInfo ` as a parameter and modified the constructor to enforce precision scale to
modified CompressionResponseStream to conditionally use GZIPOutputStream based on response commit status to ensure gzip stream is used only when the response is already committed
updated variable names and method signatures in Authenticator . java for clarity to improve code readability and maintainability by using more descriptive names
removed redundant condition checks for specific package names in DCD . java to streamline the code by eliminating unnecessary checks for specific packages
added a method to retrieve the thread group name if it is null to improve thread handling by providing a default thread group name when the thread is
added logging functionality and improved validation in MethodInvocationPrivilegeEvaluator . java to enhance debugging capabilities and ensure proper security interceptor configuration
updated package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` in
updated import statements in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy to use Lombok ' s ToString method to
kvm : add iso path to virtualmachine when migrate vm from iso to storage pool
refactor signal handling logic in SigInt . java and update test assertions in SigIntTest . java to improve code clarity and ensure proper
replaced the static import of ArrayUtils . isEmpty with a direct call to ArrayUtils . isEmpty in NodeTool . java to improve code readability and
make axonautoconfigurationwithspringcloudtest spring boot testable
added multiple @ Override annotations in ColorRGBA . java to ensure proper method overriding and improve code clarity
planner - 234 remove deprecate method from planningentitydescriptor and planningentityselector ( # 234 )
added build time parameters to TwoLevelArtifactCacheDecorator , ManifestRuleKeyManager , and CachingBuildRuleBuilder classes to improve artifact caching accuracy
updated field handling in GroupByOperator to use getDeclaredFields instead of getFields and modified conditional check for numEntriesHashTable to improve code clarity and
added null check before adding block appearance in Wallet . java to avoid NullPointerExceptions when block is null
added support for the CNC / BTC currency pair in BTCEUtils and Currencies to enable trading functionality for the Chin
updated the ` skewAllowance ` value in multiple classes and modified the handling of ` skewAllowance ` based on the service ' s skew
added sorting functionality to the songs query in SongListActivity . java and updated the query ' s sort by in Utils . java to
removed unused imports and added a method to read body to byte array in Utils . java to improve code clarity and ensure proper handling of byte
added a new class ` LegacyBaseBlockWrapper ` and refactored ` SignBlock ` and ` SkullBlock ` to extend it to
refactor Iceberg branch execution logic to check for tag existence before retrieving the snapshot ID to improve error handling by providing a clearer message
replaced the import of ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to simplify the code
added boxesSsboBinding and modified bounce count handling in PhotonMappingDemo . java and HybridDemoSsboIn
added validation for the requirePasswwordChangeRequired property in IdentityProviderEndpoints . java and updated test cases in IdentityProviderEndpointsMockMvcTests
replace ` notInitializedInConstructors . removeAll ( assumeReflective ) ` with ` notInitializedInConstructors . removeAll ( assumeReflective ) `
updated connection handling in JdbcExecutor to determine the URL based on whether the connection is closed or not to improve error reporting by providing clearer context
added a test method to verify the required body of annotations in SpringmvcClient . java to ensure that user data and user name are correctly
updated regex patterns for user and password matching in CredentialInjector and its test to ensure accurate matching of user and password in the database connection
added a new menu item " Item4 " and a key binding for the enter key in ActionListenerCalledTwiceTest . java to enhance test
updated print statements in TestCoreParser . java to include class name and modified assertion logic to check for produced results to improve logging clarity and
updated comparison logic in SimpleNode to use ' id ' instead of ' children ' to ensure correct comparison of child nodes based on their IDs
removed the public modifier from the PopulatorContextStackItem class to restrict access to the class for better encapsulation
replaced ` int numDocs ` with ` long numDocs ` and added a new test method for small samples in ` TestMoreLikeThis
refactor ` triggerEvent ` method calls for better readability in ` QuestManager . java ` to enhance code clarity and maintainability by
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
updated query construction in MongoSessionDataStore to use append method to improve query flexibility and maintainability
make unsafegetlong a native method , and add macro substitution for it
updated time zone identifiers from ARAST to EET across multiple language files to ensure accurate time zone representation and improve clarity in time zone
updated the deprecation ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the latest deprecation features and improvements
hhh - 14850 handle jdbcexception in sessionimpl . getlockoptions ( ) when accesstransaction . getrollbackonly ( ) be
fix download of external file without a suffix ( fixes # 374 )
disable screen menu bar on mac o x by default
cas integration test : add piecewise integration test
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods in ` BaseSw
added a modWhiteListPattern assignment in HiveConf and implemented a test for modifying hive . metastore . uris in TestJdbcWithSQL
remove duplicate entry from invalidclasses when add an entry to the map .
updated the team retrieval method in MobileInput . java to use the player ' s team instead of a sharded team to ensure the target team
updated cookie domain assignment to use domainHelper ' s hostname instead of a hardcoded string to improve flexibility and maintainability of domain configuration
added handling for nullable validation in multiple classes to ensure proper validation of nullable values based on search conditions
updated multiple Java classes related to security token service to improve code organization and maintainability
added test cases for custom collection and refactored CompositeIdRouter to use static final variables to improve code readability and ensure consistency in variable
added support for snapshot management in ` ExecutablePreparedStatementBase ` and introduced new test cases for blob type change logs in ` PostgreSQLIntegrationTest ` to
updated conditional checks and improved formatting in DefaultServlet . java to enhance code readability and maintainability
added drag - and - drop functionality for library tabs in JabRefFrame to enhance user experience by allowing users to open bibfiles during drag
updated the ` ExecutionUnitRunner ` and ` CucumberTest ` classes to use ` Description . createTestDescription ` instead of ` create
updated string checks from ` isEmpty ( ) ` to ` isNotEmpty ( ) ` for myVersion and buildTimeString to improve code readability and
removed the ` public ` access modifier from methods in ` TimeUtils ` and updated package imports in ` GitBlitSuite ` and ` Time
removed initialization property for jdk . reflect . useDirectMethodHandle and refactored security frame check logic in RefectionMHTests to
updated file extension check in PreviewImageFragment to use " . jpg " and " . jpeg " instead of " jpg " to ensure
fix debug info for hosted method .
added icon loading functionality to multiple Data classes and updated the ClassDisplayed enum in DataTableTopComponent to enhance user interface by providing appropriate icons and
modified the substring logic in CounterRequestAggregation to handle cases where the last component of the request is not present to improve robustness by preventing
refactor the string replacement logic in FindAndReplace . java and add a test for dollar sign tolerated in FindAndReplaceTest .
do n ' t use xmppconnection in smackpacketdebugger if there ' s no socket .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method to copy directories and updated the copyContents method in SpecWebAppTest to improve directory structure and enhance the functionality of file copying
added an exception throw for unknown datum classes in JacksonUtils . java to improve error handling by providing clearer feedback on unknown datum classes
refactor class and source ABI retrieval in DefaultJavaLibraryBuilder to use HasJavaAbi methods to improve code readability and maintainability
removed unnecessary background padding calculations in SelectBox . java to simplify height calculation for better readability and maintainability
added normalization for dbName and tableName in ObjectStore . java to ensure consistent identifier formatting across the application
added schema handling for Oracle database types in DbSqlSession . java to ensure correct schema is used for Oracle databases without schema information
removed the unnecessary logout logic in HomeFragment . java to streamline the code by eliminating unnecessary logout process ourselves
[ hotfix ] [ test ] fix flaky test in mockstreamingruntimecontext .
added a null check for the candidates list in FastImportAction . java to prevent potential NullPointerExceptions when processing elements
updated the condition for bean management in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to improve clarity in bean
corrected the spelling of the IExecutionAttributesDialect interface to IExecutionAttributeDialect to ensure consistency and accuracy in the codebase
added a call to clearUnsafe ( ) in AlterTest . java to ensure safe memory management and prevent potential memory leaks
cmdgettime : fix npe when location be null
added null measurement checks in multiple classes and refactored the DisruptorQueue class to use a custom exception handler to improve error handling and
deleted the Session2Token . java file to the class is no longer needed for the media library
bug cs - 15047 : add cleanup and expunge functionality when a volume be create from a dest volume
added a new ` Install ` system shortcut class and implemented the ` getOnClickListener ` method in ` PopupDataProvider ` to enable users to click
added a null authoritiesPopulator to LdapAuthenticationProvider and updated its usage in LdapAuthenticationProviderTests to ensure proper handling of null authorities
update retrolambda jar path handling in Executor and CN1BuildMojo classes to ensure compatibility with default version 2.5 . 1 that
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the code by removing unnecessary
refactor ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` and improve error handling to enhance code cl
added handleNullResult method call in JMESPathExtractor . java to ensure proper handling of null values in path extraction
updated import statements in AuthorizeTag . java to include specific utility classes and added a null check for currentUser ' s authorities to improve code cl
replace DateTimeUtils with java . util . Date in test files to simplify date handling and improve code readability
server : fix typo in error message for vgpu snapshot
refactor configuration handling in RobolectricTestRunner and Config classes to improve clarity and maintainability to enhance code readability and ensure
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize a more efficient socket - based connector
added partial partition key comparison logic in HiveAlterHandler . java to ensure accurate validation of partition keys during alterations
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to enable visibility of icons in the
added whitespace to the condition in SimulationStatus . java to improve code readability and maintain consistent formatting
replaced ` SharedBlockingCallback ` with ` Callback ` in ` StandardDeployer ` , ` StandardUndeployer ` , and ` Context
added workspace listener functionality to the PreviewControllerImpl class and removed duplicate code for building the graph in PreviewUIController to ensure the graph is updated
updated conditions in ReflectionFactory to include anonymous class checks and modified class name detection in ReflectUtil to improve class inflation validation and enhance code read
refactor TransportHelper methods for improved readability to enhance maintainability and facilitate future updates
updated file path formatting in CatalinaAcegiUserRealm . java to improve code readability and maintain consistency in path structure
updated log messages in AmbariServer . java for better clarity to enhance readability and maintainability of the server and action manager processes
added null checks and assertions in JSONWriter . java to improve code robustness and prevent potential NullPointerExceptions
refactor method signatures in SliderAppsViewControllerImpl to accept FileSystem as a parameter instead of using a proxy user to improve flexibility and
added a check to ensure the backgroundManager is attached before attaching it to prevent potential NullPointerExceptions when attaching the backgroundManager
added calls to setCurrentTab and updated childWidth calculations in PagedView and adjusted newY calculation in Workspace to improve tab navigation functionality and ensure
added null check for the URL in BaseDataSource and a corresponding test case in SimpleDataSourceTest to ensure that a valid URL is provided to prevent
enable pebble module test on jdk 11 + ( # 1744 )
added EditNameDialogListener to FileDisplayActivity for managing directory creation to enhance user experience by providing a customizable directory upload dialog
added a toggleBarBorders action to manage bar border width in multiple activities to enhance user experience by allowing toggling of border width for chart
updated SSL and host references from " okcoin . com " to " okex . com " in OkCoinExchange . java to align the
jbrules - 2642 : add deciderscorecomparator to stepscope in acceptedforagertest . testpickmovesim
replaced FileChannel with SeekableByteChannel in Files . java and added a test for reading all bytes in BytesAndLines . java to
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter and improve code clarity to enhance code read
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
simplified the conditional check for serialization configuration objects in SerializationConfigurationParser . java to improve code readability and maintainability
added imports for ActivityManager and modified watch heap limit in QuickstepProcessInitializer to enable debugging capabilities when running on debug device
updated variable assignments for compensation in the sumWithCompensation function to improve clarity and maintainability of the code
http : / / issues . apache . org / jira / browse / log4j2 - 2892 : fix abstractloadb
do n ' t swallow live deletion in precompactedrow
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added InvalidRenderIntentTest . java for testing to
auto - configure meterregistrylifecyclelistener to close registry on shutdown
[ 3.0 ] change config center log level from warn to info ( # 9859 )
added two try - catch blocks for certificate generation in CertificateFactoryTest . java to ensure proper handling of CertificateException during certificate generation
( chore ) camel - core - languages : fix ambiguous binary operator in simple expression
refactor onTabUnselected method in EditorActivity and implement onFocusChanged in IDEEditor to improve code clarity and ensure windows are
added user name to the error log statement in AccessLogValve . java to improve error reporting by providing user - specific context
updated file names and scaling factors in SkeletonModelGpuSkinningTest , OgreXmlLoader , and SkeletonModelViewer classes ,
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
marked UpgradeResponse class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added support for generating declarations in the JSweet command line and transpiler classes to allow users to specify a output directory for generated d .
[ flink - 20619 ] [ kinesis ] make fetch timeout configurable for stream config
[ beam - 13434 ] fix dataflow worker to write html file for the timestamp .
increased the maximum number of metastore server threads from 100000 to 1000 to accommodate larger data sets and improve performance
changed the return type of onTaskSnapshotChanged from void to boolean to allow the method to indicate whether the snapshot was successful or not
updated the shadow radius parameter in the setShadowRadius method from mMaxShadowRadius to shadowRadius to ensure the correct shadow radius is applied for
added unit test for chain nesting and aggregation in ChainParserTests . java to ensure correct handling of message payloads during aggregation
updated loop condition in MarketSellAssetActuatorTest to use ' end ' instead of ' limit ' and added a failure message to
do n ' t use source . isinternal ( ) if it ' s interactive .
updated conditional check for previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure proper handling of null values for cachedKeytabFilePath
updated LauncherPreviewRenderer to include DisplayController in the WindowManagerProxy instance to enhance functionality by integrating display management capabilities
updated tooltip text logic for root directories in MetalFileChooserUI and SynthFileChooserUIImpl to ensure accurate identification of the root directory
replaced ` getToolkit ( ) ` with ` Toolkit . getDefaultToolkit ( ) ` in ` LooksFrame . java `
[ tflite ] change the return type of recognise method from list to list < captionobject >
test ( query ) : add test for fetch result
removed redundant point removal logic in FreeformFinSetConfig . java to simplify the code and improve readability by eliminating unnecessary complexity
updated moe version from 1.1 . 2 to 1.2 . 0 to incorporate the latest features and improvements
updated error message from " constant canot set call value . " to " constant cannot set call value . " and added gas spendment to
updated error formatting in ElementsShouldSatisfy and ZippedElementsShouldSatisfy classes to include newline characters to ensure consistent formatting of error
marked Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
amd64graphbuilderplugins : use platform - specific unsafe registration instead of hardcoded unsafe .
added @ Hint annotation to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and a new test for blacklisted modules in Android
changed mCenterPagesVertically from true to false to adjust layout alignment for better user experience
removed redundant calls to migrationInfo . doneProcessing ( ) in MigrationRequestOperation . java to streamline migration processing process by eliminating unnecessary
[ konnected ] update konnected handler to use baseUrl instead of ipAddress
changed the data type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy `
refactor test table creation and query processing in TestJdbcWithMiniLlap and LlapBaseInputFormat classes to improve database handling and
added a new test method for handling cases inside brackets in CaseExpressionTest . java to ensure SQL queries correctly interprets and deparates cases
refactor copy mode handling in ConsoleActivity to use a dedicated method to improve code readability and maintainability by encapsulating the copy mode logic
updated the ` writeXmlOutput ` method to accept a ` Writer ` instead of a string for XML output to improve flexibility in XML output
fix npe when use custom aggregationstrategy with empty split body .
( chore ) camel - core : remove usage of exchangehelper from constructor
move basicconfigurator from logback to classic package so it can be use by other package .
do n ' t use assert in type qualifier dataflow analysis if it have phinode flag .
remove unused import of sharedstringsource to fix build
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to enhance method invocation capabilities with additional parameters
renamed multiple classes related to box and whisker calculations and histogram datasets to improve clarity and maintainability of the codebase
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit5
updated equality checks from ` = = ` to ` . equals ( ) ` for field comparisons in ` InstantiatedIndexReader . java ` and
changed the access modifier of the singleton variable and the constructor of IndexFileNameFilter from public to private to restrict access to the singleton variable and ensure
refactor IfStatementTest to utilize a new PluginDefinition and improve test logic to enhance code clarity and maintainability by centralizing plugin
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java `
removed unnecessary null handling in TypeAdapter implementations to simplify the code and improve readability by eliminating unnecessary complexity
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added EXIFReader class to process EXIF metadata and updated ImageProcessingService to use it to enhance image processing capabilities by providing EXIF metadata
return none for unknown unit in cloudwatchmeterregistry batch ( # 2321 )
[ drools - 3862 ] fix pmml model apply command ( # 386 )
improve error message when countercurrencytransferstartedmessage be receive multiple time .
added a conditional check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not
[ gr - 38686 ] fix branchtargetoutofboundsexception in substrateaarch64backend .
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java to ensure proper resource management and prevent potential
added a method ` find ( Class < Ticket > ticketClass ) ` to ` TicketCatalog ` and updated logging in ` DefaultTicketCatalog `
updated SSL assertion statements and improved formatting in TestSSL . java to enhance code readability and maintainability
[ hotfix ] [ runtime ] fix npe when result partition be release .
updated Read and Write constructors to include a maximum value parameter and removed unused private constructors to improve resource management and prevent potential memory leaks
updated PluginHandleController , PluginHandleDTO , PluginHandleService , PluginHandleQuery , and PluginHandleService to include a type parameter to enhance
updated span creation in DefaultSpanCreator and SleuthAdvisorConfig to use start ( ) instead of startSpan ( ) to ensure proper span
added new GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , and GLKViewDrawableStencilFormat properties to IOS
refactor login attempt logic to use a dedicated method for improved readability and maintainability to enhance code clarity and reduce duplication in login
add unsupported operation exception for real and complex arrays in JniUtils . java to ensure that unsupported operations are handled correctly to avoid runtime errors
removed interruption check and added a do - while loop for lock name retrieval in SynchronizationStatistics . java to simplify synchronization logic and ensure
refactor Implements and ShadowPicker classes to improve code organization to enhance maintainability and readability of the codebase
refactor HttpClientOptions creation to use a new method for creating HTTP / 2 client options to improve code organization and maintainability by centralizing HTTP
added support for ` DynamicArray ` class in ` DynamicStruct ` and improved type handling in ` SolidityFunctionWrapper ` to enhance
added a boolean parameter to ` getStringProperty ` and ` getFloatProperty ` methods in ` InlineLayout . java ` and ` FontUtil . java
added ` CopyStep ` constructor with ` Path ` parameter and a corresponding test in ` CopyStepTest ` to enhance ` CopyStep ` functionality
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) method throw exception if addpermits
camel - 16400 : camel - core - optimize to reduce code duplication in test code .
added FlavorParser class and updated BuildTargetParser to use it for parsing flavor strings to improve code organization and maintainability by centralizing flavor
change the type of the witnesses address lists from List < String > to List < ByteString > in WitnessScheduleStore . java to accom
added a condition to check if resultsMeta is not empty before printing them to avoid printing empty results and improve code readability
refactor ConcurrentLinkedQueue to improve null checks and add a new RemoveLeak class for testing to enhance robustness of the queue functionality and
added a boolean parameter ` addSpecialTokens ` to multiple ` encode ` , ` batchEncode ` , and ` decode ` methods in ` H
[ hotfix ] replace arraylist with collections . nCopies in taskManagerServices . java
[ iotdb - 5353 ] fix load of single tsfile chunk data ( # 8590 )
added a new session storage context constant and updated state management in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to
add a test to verify schema validation in the jspdocumentparser .
added a default constructor to the TypeAdapter class and updated the @ Ignore annotation in Java17RecordTest to disable tests until record support is added
replaced the ` kill ` method with a ` prepareKill ` method and added error handling for killed events to improve event management and provide clear
refactor AntPathRequestMatcher to improve code readability to enhance maintainability and facilitate future updates
remove unnecessary null argument from createResourcePolicy method calls across multiple classes to simplify method signature and improve code readability
added null check for _ deflaterEntry before releasing it in GzipHttpOutputInterceptor . java and modified assertions in BlockingTest . java to
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup of tests after each test execution
update CheckSum class to normalize Unicode characters and modify MD5 computation to ensure proper handling of unknown Unicode characters and improve MD5 computation accuracy
updated command handling logic in Example . java to improve clarity and ensure null checks to enhance code robustness and prevent potential NullPointerExceptions
bugfix # 211550 - make basicprofilerstate keylistener final
updated MongoTemplate to use DBObject for JSON parsing and added a test for saving JSON strings correctly to improve data handling and ensure proper functionality of
added handling for multiple remote addresses in RequestUtils and corresponding test cases in RequestUtilsTest to enhance functionality to support multiple remote addresses in requests
changed method return types and variable types from String to ObjectBuilder in JsLibrary . java to enhance type safety and improve JSON handling in job arguments
refactor CookieManagerTest and UnmodifiableMaps to use a dedicated method for retrieving the local host address to improve code readability and maintainability
added handling for whitespace runs in GlyphLayout . java and updated a test in BitmapFontTest . java to improve layout processing and ensure proper memory
added pauseOrResumeSplits method to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase classes to ensure that only
added a new configuration variable for the HIVESCRIPTIDENVVAR in HiveConf . java and updated ScriptOperator . java to use it to
refactor ` getListedTermCounts ` method to handle sorting based on facet parameters to improve flexibility in retrieving term counts based on specified sorting
added a new action class ` UseSeparateStepSizeAction ` to manage jog step size usage to provide users with a menu option to
refactor FileMenuFilter to use final fields and introduce userId for user locking and file visibility to improve code readability and maintainability while
hbase - 26946 roundrobintableinputformat do n ' t handle empty region server split ( addendum )
replaced " false " with " 0 " and " 1 " headers with " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest to
pdfbox - 4892 : simplify code , a suggest by valerybokov
added fullscreen functionality to GwtGraphics and updated GwtApplication to utilize it to improve user experience by enabling fullscreen support for
changed the type of ` issuers ` and ` parameterName ` from ` String ` to ` URI ` and updated the ` normalizeResource ` method
add unit tests for the SoulApacheDubboClientConfiguration class to ensure correct initialization of Dubbo configuration properties
updated file path usage from ` Gdx . files . internal ` to ` resolve ` in ` SkinLoader . java ` to ensure compatibility
updated logging levels in ` ChainingAttributeReleasePolicy ` and ` OidcDefaultJsonWebKeystoreCacheLoader ` from warn to info to
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` for REALTIME _ LOCK in multiple files to ensure thread safety
changed the package declaration of Compiler . java from ` java . lang ` to ` java . lang ` to ensure proper organization and access within the
fix a bug in nullderfandredundantcomparisonfinder that could report a nullpointerexception in a redundant branch .
use defaulthttpdatasource for manifestfetcher in dashrendererbuilder
added a new configuration property to limit the number of prepared statements cached per database connection to improve performance and flexibility of the execution scheduler
changed the return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` across multiple classes to standardize the method '
removed the checkErr method from AutoScalingHandler . java to simplify error handling by eliminating unnecessary checks
updated method signatures in CombinedDataset . java to improve code clarity and maintainability
replaced an array buffer with a single byte buffer in the InflateIn _ DeflateOut class to simplify code and improve performance
add functionality to remove cryptography restrictions based on runtime environment to enhance security by restricting cryptography permissions based on the Java runtime environment
fix nether portal not be able to teleport . close # 2175
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure that the `
added a null check for the existing vectorization context before creating a new one to avoid potential null pointer exceptions when accessing vectorization contexts
updated speed calculation in WialonProtocolDecoder to use a multiplier of 0.539957 to ensure consistent speed representation across different protocols
hbase - 25836 disable user metric in testclientclustermetrics if user . metric . user . enabled . conf be set to false
added a ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
replaced the existing boolean variables ` mUserPresent ` and ` mVisible ` with ` mAttached ` and added a conditional check before un
updated multiple Java files related to asynchronous file handling to improve code consistency and maintainability across the project
added params to the zadd method in PipelineBase . java to enhance the method ' s functionality by allowing parameters to be passed
[ ds - 3952 ] fix nullpointerexception when read metadata from resource .
rename test to avoid false failure .
added a method to retrieve an Optional < TargetNode < ? , ? > > from the VersionedTargetGraphBuilder to improve handling of non -
updated time zone comparison conditions in TimeZoneProvider . java to use specific epoch seconds to improve accuracy and accuracy of time zone handling
update return value in EscherBlipRecord . java and add a new test class TestOLE2Embeding . java to ensure correct
updated variable declarations for row and column in JSONParser . java to ensure correct initialization of variables for JSON parsing
replaced ` JavaType . ShallowClass . build ` with ` JavaType . Pattern . compile ` in ` FindTypes . java `
added functionality to play and display local trailers in the BaseItemDetailsFragment to enhance user experience by allowing playback of trailers based on item
added a method to remove glyph information from a long pointer and updated its usage in CStrike . java to improve memory management by ensuring glyph
act - 1343 : fix process instance termination on scope end event
camel - 7999 : fix issue with xml type with no local name . thanks to stephan siano for the patch .
updated the endpoint URL in SimpleHttpClientTests from " http : / / www . apereo . org / scottb . html "
add ` ` prdef ' ' option to reset all preference to default value
hbase - 25813 thriftmetrics and thriftserver should be protect instead of private ( addendum )
removed deprecated channels related to manual fan speed in the Channel and DanfossAirUnitHandler classes to streamline channel management and encour
( chore ) camel - test - infra - endpoint : use hamcrest assertion instead of junit in camel - test -
removed redundant code for stopping expansionHelper in TweetActivity . java to streamline code for better readability and maintainability
added null and index checks in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure proper handling of null values and improve hash code
server : set root disk size for vm with custom parameter ( # 6373 )
added imports and modified visibility logic based on preference settings in PredictionRowView . java to improve user interface responsiveness based on user preferences
[ geos - 7898 ] allow bbox to be specify with an invalid cr
added validation methods for value and position parameters in LibrustzcashParam . java and updated the test in Librustzc
mark ithrowableentity a deprecated , move it to fml . common . registry . ithrowableentity
added random float values to the x and y variables in NodeDataImpl . java to ensure consistent positioning of nodes in the graph
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should
refactor JavacStep to use variable declarations for declared dependencies and streamline output and error handling to improve code readability and maintainability
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new version release
added a condition to check for DEEP _ SHORTCUT item type in LoaderCursor to enhance shortcut functionality in the user interface
added hashCode ( ) method to TimeGranularitySpec class to ensure proper comparison and hashing of object instances
changed access modifiers of BooleanWeight and DisjunctionMaxWeight classes from private to protected in BooleanQuery and DisjunctionMaxQuery classes to allow subclasses
added a boolean flag ` useProxyResponseCode ` to control the behavior of ` tryTransparentNTLMProxy ` based on its value to
fix aarch64 move to use scratch register instead of aarch64 address .
server : fix npe in getreservedvmcapacity ( ) and getusedcapacity ( ) in listupbyhostidtype ( )
added a condition to check if the maximum score is not null before including the score in JSONResponseWriter to ensure that score inclusion only occurs when
updated audio decoder parameters in AudioRecorderTest . java from 22050 to 44100 to improve audio quality and performance during testing
updated the calculation of newOriginX in RocketFigure . java to correctly account for scale factors to ensure newOriginX reflects the
updated error handling for null or empty data source in DruidQueryBasedInputFormat . java to ensure proper handling of null or empty data sources
added ORIGINAL _ TYPE constant and updated regex pattern in CustomProperty . java , and added corresponding tests in CustomPropertyTest . java to
added a static method ` create ` to create an instance of ` Index ` using a ` Table ` and a ` Map < String , Object
simplified the boolean assignment for boundary period checks in Dates . java to improve code readability and maintainability
updated schema compatibility logic to include an index parameter and added new test cases for reader and writer types to improve compatibility checks and ensure correct handling of
added persistent attribute type handling and improved collection processing in QueryUtils . java and EclipseLinkNamespaceUserRepositoryTests . java to enhance the
added synchronization to the spans list in TestSpanHandler to ensure thread safety during concurrent access to the spans list
replaced the generic type parameter ` List < Object > ` with a wildcard ` List < ? > ` in the ` getText ` method across
updated exception handling in ViewContextImpl . java to improve logging clarity and error handling to enhance error visibility and provide more informative debug messages
refactor OAuth2AccessTokenEntity to improve code structure to enhance maintainability and readability of the code
updated error messages in multiple classes to include " The request is rejected due to STATUS = DOWN " instead of " System is starting and not ready
added new project files for iOS data and iOS moe resources in GdxSetup . java to include necessary iOS resources for the application
replaced the import of ` ArrayList ` with ` ConcurrentMergeScheduler ` in ` TestSearcherManager . java ` to utilize a concurrent
updated condition checks in QTestUtil . java and improved list handling in GenericUDTFInline . java to enhance code clarity and
refactor MapIterable , FJIterate , and ParallelIterate classes for improved code organization to enhance maintainability and readability of the codebase
ticket # 4071 : make sure we do n ' t cancel the event if the spreadsheet key be click
hhh - 14619 fix osgitcase . stop ( ) method in hibernatebundleactivator
fix # 2321 : correct elapsed time calculation in hikaripool
make component . xml a non - packaged resource , so that non - packaged resource can be download .
updated file name handling and improved directory checks in Compat . java and FileOpener . java to enhance clarity and ensure correct file
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` in the ` Cell `
check port clash when use -- p2p - port and -- rpc - p2p - port specify multiple time
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 to use FixedMaskGen to enhance WebSocket connection handling by allowing a fixed mask
modified the return type of ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of
add nodeselectionstats to track bucket selected / non - selected node
added a new file ` Person . java ` that defines a ` name ` property with getter and setter methods to provide a structured way to store
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to improve clarity and maintainability of the code by
added clock functionality and improved logo fade behavior in PlaybackOverlayFragment to enhance user experience by providing a clearer and more informative clock
fix comparator output not be update to the correct block when it ' s place in the world .
changed the visibility of the IMPL variable and improved exception handling in SegmentReader . java to ensure proper class loading and provide clearer error
added SwingUtilities . invokeLater to manage cell update events in Sudoku . java to ensure thread safety when firing cell updates
removed the DefaultInetAddressAdapter class and updated type adapter registration in DefaultTypeAdapters . java to streamline the code by eliminating
added methods for handling single - element series in the Series class and corresponding tests in DataFrameTest to improve functionality and ensure proper exception handling for null
updated audio time stretch option in VideoManager from " -- no - audio - time - stretch " to " -- audio - time - stretch "
updated boundary conditions in GeoRelationUtils and modified GeoUtils to include minLon and minLat in GeoRect to improve accuracy in coordinate calculations and
server : fix npe in listvirtualmachinemanager api ( # 5489 )
added cleanup method to the HazelcastTest class to ensure proper resource management and prevent memory leaks
add some extra check on getinstance ( ) in blockciphertest .
added filters for printing operations logs in QFileClient . java to improve logging clarity during operations logging processing
fix @ stub in introduction of aop bean definition . fix # 3569
fix npe when connect to sip with no current connection address .
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to simplify the addition
refactor image output stream handling to use a try - with - resources statement to ensure proper resource management and avoid potential NullPointerExceptions
replaced the old ` showSearch ` method with a new ` startSearch ` method across multiple classes to streamline the search activity launching
removed unnecessary ' this . ' keyword from ` SchemaCrawlerCommandLine ` and improved ` toString ( ) ` method in ` GrepOptions `
http : / / issues . apache . org / jira / browse / amq - 4682 - add karaf web configuration
added @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests to ensure proper dependency injection for the PersonRepository class
changed the ` stop ` method ' s exception type from ` Exception ` to ` InterruptedException ` in ` UIServer . java ` and updated the
blockcactus : add more cactus to the list of available cactus block
refactor mouse event handling in ThemeSelector to use a MouseMotionAdapter to improve responsiveness and maintainability of the code by encapsulating
add a new abstract class ` AbstractMinMulticastFlowControlRhsPadding ` and replace it with an abstract class ` AbstractMinMulticast
added alignment and vertical alignment parameters to the editStringAt method in IOSNative and IOSImplementation classes to enhance string editing functionality by allowing
pdfbox - 4892 : improve error message , a suggest by valerybokov
added conditional logic to handle distinct queries in ClusterIntegrationTestUtils and modified group column handling in QueryGenerator to improve query generation logic based on distinct
make jnifunctions . getnativelinkage ( ) return the closest linkage , rather than throw a nosuchmethoderror .
corrected a typo in the property path in JSyntaxTextArea . java to ensure proper property loading and avoid potential runtime errors
added null check for children before iterating in PartitionPruner . java to prevent potential NullPointerException when accessing children
added tokenPosition and currentPosition variables and updated parsing context handling in MessagePackParser . java , and updated test cases in MessagePackParserTest .
added locale management and after class methods in AbstractSolrMorphlineTestBase . java to ensure consistent locale settings during tests
removed unnecessary conditional checks for ` DrawerActivity . translucent ` in ` LauncherFragment . java ` to simplify the code for better
add unit tests for the MetricsReporter class to ensure proper registration and retrieval of metrics
camel - 16400 : remove unused import and remove unused field in osgiserviceregistry
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for Rectangle objects
[ hotfix ] [ test ] fix npe in streamkafkaproducerstest
updated DSAParameterGenerator logic to validate prime strength and changed BigInteger usage to BigInteger to enhance validation for prime strength and improve code clarity
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration to control the FQDN of the AM machine when submitting
fix clientoutofmemoryhandlertest by wait for shutdown
added a method to retrieve the object ID from a shape ID and updated its usage across multiple shape classes to ensure consistent object ID retrieval across different
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the behavior of distinct queries in
refactor Driver and SearchTravRetLoadFieldSelectorTask classes to improve code organization to enhance maintainability and readability of the code
fix : remove reference interface for extensionadapter from managedkubernetesclient
refactor DetailsDescriptionPresenter to utilize a new utility method for retrieving information rows to improve code readability and maintainability by centralizing information
updated JUnit imports and annotations in TestAuthHandlerBoot , TestRSAProviderTokenManager , and TestRSAProviderTokenManager to use Jup
do n ' t swallow exception when generate summary html
removed redundant reset calls from intPool and bytePool in TermsHash . java to simplify the code by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
added a new ` WindowSessionDelegateU ` class and modified the conditional check for ` apiLevel ` to ensure compatibility with TIRAMIS
refactor URL handling logic to force adding scheme and host and port based on the request scheme to ensure correct URL generation with non - standard ports
added a conditional check for MSSQLDatabase in the AddForeignKeyConstraintGenerator . java file to ensure compatibility with MSSQL during foreign key
hbase - 26942 fix checkstyle issue in hbase - replication
remove debug print statement from emzuli pipe and introduce a new event handler for side checks to improve code cleanliness and allow for
simonstewart : allow the html identifier to be reject if the browser be not debug .
updated method calls from ` getProducedTableSchema ( ) ` to ` getTableSchema ( ) ` in ` HiveLookupTableSource . java
add check to listener when use wrong thread
updated schema name handling in SequenceSnapshotGenerator . java to use CatalogAndSchema to improve clarity and maintainability of schema name specification in the
updated color calculation in SpriteBatch , SpriteCache , LwjglDebugStarter , and AlphaTest classes , and modified pix
fixed - redissonconnection . tocompletable ( ) . join ( ) method throw classcastexception . # 3507
added base URL handling for HTTP and HTTPS in SolrLoggerServiceImpl . java to ensure correct base URL is used for statistic year cores
renamed the method ` launchTask ` to ` launchTaskFromView ` and updated related calls in ` TaskActionController ` , ` Task
updated import statements and modified constructor parameters in MorfologikFilter . java to enhance dictionary handling and improve resource loading to enhance flexibility
updated sorting options in GridFragment to use correct labels for community and critic ratings to improve clarity and accuracy of sorting functionality in the
added imports and visible logic for ListRow in CustomListRowPresenter . java to ensure that the header item is not visible for non - List
refactor client switch statement to use a try - finally block for resource cleanup to ensure proper cleanup of resources to prevent resource leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to ensure compatibility with DB2 database
improve jsr310 serialization of java . time ( date / time ) by default
updated import statement from org . apache . log4j . MDC to org . slf4j . MDC in LogUtils .
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver . java ` to simplify type handling and improve code clarity
reformatted code for consistency in CoinbaseTransaction . java to improve readability and maintainability of the code
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified ` ProjectCommand ` to conditionally force building with ` B
removed redundant initialization of the idleStrategy in Ping . java to streamline code by eliminating unnecessary variables
updated ` OCFile ` and related classes to use ` ContentResolver ` instead of ` ContentProvider ` to ensure compatibility with the updated API
removed unnecessary conditional checks for state changes in ReportPanel . java to simplify code for better readability and maintainability
[ hotfix ] avoid npe in testinglogicalslot when slotowner be null
added a new file ` RemoveCallsToSystemGc . java ` that implements a recipe to remove calls to ` System . gc ( )
removed redundant super ( ) calls from multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added an override for the setUIID method in ScaleImageLabel to ensure the icon is set correctly when the UIID is set
replaced ` foundEntry ` with ` update ` in the ` FeedUpdateService ` to improve clarity and correctness in handling feed updates
added support for both " - classpath " and " - cp " arguments in the Main . java file to allow execution with both classpath and cp
updated compiler option from options to compiler in avutil . java to ensure compatibility with the latest Java compiler requirements
fix npe in storageservice . initialize ( ) . patch by brandonwilliams , review by jbellis for cassandra -
updated Test7196045 . java file to improve test coverage and fix existing issues
updated density and decay values in ShaderParametersLightShaft . java to adjust shader parameters for improved rendering accuracy
added state and stateData properties to OidcConfiguration and updated OidcRedirectActionBuilder to utilize this new methods to enhance the functionality of
# 279 - ddl generation for non null column with unique constraint ( # 280 )
added federated share capability checks and modified user query conditions in UsersAndGroupsSearchProvider and EditShareFragment to enhance sharing functionality based on fed
added a method ` needsDocValues ( ) ` to return true in ` TestBBoxStrategy . java ` to ensure proper handling of document values
modified BufferAlignmentAgent and BufferAlignmentInterceptor to improve exception messages and added a new package - info . java file to enhance clarity of error
added a new method ` intForEach ` in ` Int2ObjectHashMap ` to iterate over values and unmap null values to enhance functionality
fix the worldserver global mapstorage bug , which cause us to share scoreboards early .
changed the return type of count methods from Long to long in both QueryDslMongoRepository and QueryDslPredicateExecutor classes to improve consistency
updated MManager logic to ensure MTree snapshot is created based on time differences and new line numbers to improve clarity and accuracy of MTree
refactor dotProductScore calculations in VectorUtil and TestVectorUtil for clarity and consistency to improve readability and maintainability of the code
added a new parameter ` IRREVERSIBLE _ THRESHOLD ` and its associated methods in ` Parameter . java ` , ` DynamicPropertiesStore
refactor locale handling by introducing a new ` setLocale ` method in ` GpsMainActivity ` , ` MainPreferenceActivity ` , and
added a condition to check if a new database was created in LauncherClings and updated LauncherProvider to track if a new database was
fix issue with remove collection in basicaclentryafterinvocationcollectionfilteringprovider
refactor conditional statements for clarity in Constants . java to improve readability and maintainability of the code
added a check to ensure the current thread is not the same as the current thread in TestIndexWriterDelete . java to prevent potential issues with
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access the method for better extensibility
updated imports from ` apiclient . model . dto ` to ` sdk . model . api ` in ` FullDetailsActivity . java `
added attribute setting to the document in BatikSVGDrawer to ensure that imported SVG attributes are correctly stored in the document
added a try - catch block around the user configuration parsing to handle potential IllegalArgumentExceptions and improve error logging
added functionality to control the " WaitForResult " flag in AndroidImplementation and CodenameOneActivity based on intent extras to improve user experience by
refactor HitQueue , SpanPositionQueue , PriorityQueue , TopOrdAndFloatQueue , TopOrdAndIntQueue , and TermAutom
added functionality to display a widget ' s description if available to enhance user experience by providing context - specific widget descriptions
added a maximum attribute count check in the Attribute class to prevent exceeding the allowed number of attributes and prevent runtime exceptions
move predicate test from ` predicatestest ` to ` impl . predicates ` ( # 21212 )
camel - 7999 : added case insensitivity option to defaultheaderfilterstrategy to allow header name to be case - insensitive .
updated InlineLayout and Breaker classes to handle boundary conditions and improved string wrapping logic to enhance string processing accuracy and prevent unbreakable string
added nullability annotations and improved view initialization in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
refactored the ` shouldInstrument ` method to streamline the instrumentation logic to improve code readability and maintainability by consolidating instrumentation checks
added a condition to check if the association is an insert destination before source before returning the last column to ensure the last column is always the last
updated memory limit file path handling in CmdModifierTest . java to use a dedicated method for retrieving memory limit file path to improve code clarity
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in multiple files to improve
added a null check for the rule before processing it in JavaTestRule . java to improve error handling and provide clearer feedback when the source
fix miss proxy for minecraft 1.10 / 1.9 . 4 .
removed conditional check for atIndex in StringUtils . java to simplify code by eliminating unnecessary index validation
increased timeout duration in TimeoutTest from 100 milliseconds to 500 milliseconds to improve test stability by allowing more time for tests to complete
added AssistContentRequester to TaskOverlayFactoryGo and updated constructor to accept it to improve content request handling by utilizing the AssistContent
updated the method for creating readable witness address in VoteWitnessProcessor . java to use encode58Check for witness addresses to ensure proper encoding of witness
updated test cases in DefaultMethodRegressionTests . java to improve test coverage for method regression scenarios
refactor WorkloadManagerMxBean to improve code structure to enhance maintainability and readability of the code
updated import statement from KafkaProducerException to KafkaException in KafkaOutboundAdapterParserTests . java to align exception handling with Kafka standards
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and multiple test cases for rollback exceptions in FaultTolerantExceptionClassesTests to enhance
[ beam - 8470 ] improve error message in configbuilder for beam container runner
added ` extraProperties ` parameter to ` applyTunerConfigs ` and ` TableConfigsRestletResource ` to enhance tuner configuration configuration with
added handling for in - progress instances in PinotRealtimeSegmentsManager to ensure that segments are added only if they are not already in progress
added a check to return null if the touchable is disabled in Table . java to prevent potential null pointer exceptions when the touchable is not
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` class to ensure that
throw retryablehazelcastexception if cache config be not create yet
refactor module installation logic into a separate method in ProcessUtil to improve code readability and maintainability by reducing duplication
added Jetty - managed annotations to MBeanContainer and Destroyable classes to enable monitoring and management of MBeans for components
modified conditional check to include a comment for clarity to improve readability and maintainability of the code
refactor string comparisons to use ` equals ` for string comparison in ` EspMilightHubDiscoveryService ` and ` EspM
updated isReifiable check logic and added new classes T6558559a and T6558559b to improve type safety
updated print statements in WorldEditListener to include player position information to improve debugging by providing clearer information about the player ' s position
( chore ) camel - kafka : avoid deadlock when consumer be shut down
removed the default example method from the Schema class to simplify the schema configuration by eliminating unused functionality
modified thread interruption logic and modified timeout handling in AgentRunner . java to improve responsiveness and ensure proper timeout management during agent retries
remove the time column from the dataset dimensions and results in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure correct handling of time columns in
reformatted conditional statements for better readability in FacetComponent . java to improve code clarity and maintainability
updated RustBinaryDescription and RustLibraryDescription to use CxxPlatforms for linker dependency retrieval to improve code clarity and maintainability
added ' name ' property with getter and setter methods in multiple authentication - related properties classes to improve clarity and maintainability of the authentication property
do n ' t crash if the printer can not be connect to the igv
added support for a small scan threshold in the BaseQueryPlan class and updated connection handling to improve scan behavior based on point lookup conditions
added " routeId " to the retry configuration string in RetryGatewayFilterFactory . java to provide more context about the retry route for better debugging
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
refactor ` onOverviewShown ` methods in ` ActivityControlHelper ` , ` WindowTransformSwipeHandler ` , and ` DiscoveryBounce
updated null point checks in CheckIndex . java and added a test for deleting all point documents in TestPointValues . java to improve error handling
updated the publish method to use updateLastState instead of true to ensure the state is updated correctly based on the last updated state
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper formatting of string list values
removed the first element from the exp variable in SpliteratorCollisions . java to ensure proper handling of null values in the code
danielwagnerhall : add text case - sensitivity support to the condition
replaced ` do ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code readability and
no effective change - add queryengine . forwardonlyfetchsize ( ) ... for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to log a debug level and ignore it when the channel is already closed to improve
pdfbox - 4892 : initialize arraylist with the size of beads , a suggest by valerybokov
added support for rounded corners on windows in QuickstepAppTransitionManagerImpl to improve visual consistency when managing window transitions
refactor DesktopTaskView to use View for background and icon views instead of ShapeDrawable to improve flexibility and maintainability of the code
[ type : fix ] fix the test error of upstreamcheckservicetest ( # 3649 )
updated logging statements in AbstractSession and AbstractSessionManager to improve clarity and structure to enhance readability and maintainability of logging statements for better
replaced error logging with a return statement of locks in ZooKeeperHiveLockManager . java to streamline the code by eliminating unnecessary
[ hotfix ] fix checkstyle violation in executionconfig , statebackendtestbase , bufferspiller , and streamrecordwriter
added a check for custom data before generating the mipmap in FileTextureArrayData . java to ensure mipmap generation only occurs when
updated assertions in DefaultMaskingFormatterTest to use a single quote for the string representation of the value to ensure consistency in string representation across tests
added selectable flag and related methods to manage selection behavior in List to improve event handling and ensure proper selection behavior when not selectable
removed a condition that checks if the first value count is zero in LlapArrowBatchRecordReader . java to simplify the logic for handling empty
added file separator expansion and improved logging in PolicyContext . java to enhance clarity of path handling and provide better debugging information
replaced Set with List for flatQueries and expandQueries in FieldQuery . java to improve performance and reduce memory usage
refactor TLSRestrictions class for improved readability to enhance maintainability and clarity of the code
fix npe in kafkaproducer . close ( ) when kafkaproducer be shut down
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance node state verification by allowing customizable ignorable
added a locking mechanism to delete the " LOCK " file in RocksdbMavenPomCache . java to ensure proper resource management and
hbase - 25836 use inetaddress for testhquorumpeer . testclientport ( ) in minizookeepercluster
refactored the ` getResponse ` method in ` RestClient ` to streamline error handling and logging to improve code readability and maintainability
updated the method to convert segment tar URIs to a string array instead of a raw array to improve code readability and facilitate easier
updated loginStudent method calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure
added null check for mCurrentItem . getItemId ( ) in EnhancedBrowseFragment . java and StdBrowseFragment . java to prevent potential NullPointerException
increased the maximum number of strings from 500 to 100 in TestSpecialOperations . java to accommodate larger data sets and improve performance
replaced the instantiation of ByteArrayInStream with a constructor that initializes its buffer to an empty byte array to simplify the code and avoid unnecessary object
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a check for direct substates in AbstractStateMachine and corresponding test assertions in ShowcaseTests to ensure proper handling of direct transitions and improve
added type checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding test cases in MultimapTest . java to ensure correct
added joinoperation interface to postjoinoperation to allow postjoinoperation to be associate with joinoperation .
added a new test method ` testDataIssue258 ` to the ` AdditionalPostgreSQLTest ` class to verify the execution of PostgreSQL tests
http : / / issues . apache . org / jira / browse / amq - 5035 - fix test failure
[ calcite - 1741 ] update javadoc of avaticadatabasemetadata . getconnectioninfo ( ) to clarify that it
updated MongoDbConnectionPoolProperties to use String types instead of int and added @ DurationCapable annotation for lifeTime , idleTime , and
fix cast exception in sdputils . createaudiomediaformat ( ) .
refactor filter handling in FacetProcessor to return a boolean indicating whether filters were applied or not to improve clarity and functionality of filter processing logic
added a timeout handler to the ShuffleHandler and modified the state check for WRITER _ IDLE to improve timeout management based on the enabled
replaced the initialization of ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED `
camel - 16400 : camel - xpath - add debug log to xquery builder . thanks to stephan siano for the
- fix compilation error in jdk 1.6
add a new test class EdgeCasesTokenizerTest to verify the behavior of the GoTokenizer with escaped back slashes to ensure that the tokenizer correctly handles
added a validation for the " atlas " property in the AtlasTmxMapLoader class to ensure that the map has a valid ' atlas '
camel - 15836 : camel - core - optimize property placeholder to not load property from classpath or file .
added database closing and refactored Kafka message handling in BlockchainTest . java and KafkaTest . java to improve resource management and streamline
refactor ` CoreMarkdownNodeRenderer ` to use ` List < String > ` for line handling instead of ` String [ ] ` to improve
int - 1899 remove unused import in webserviceinboundgatewayparsertests
replaced ` ImmutableList . Builder < Object > ` with ` List < Object > ` and added deprecation for methods in ` SQLBindings ` to
added support for OpenJDK in the VirtualMachine condition to ensure compatibility with additional Java versions
added keep - alive configuration to ReactorClient to improve connection stability during HTTP requests
updated vertex attribute names in MD5Renderer . java and ObjLoader . java to use ShaderProgram constants to improve code readability and maintain
camel - 7999 : camel - core - optimize to avoid unnecessary lookup of property component .
modified the logic for retrieving an account by its owner address in UnfreezeBalanceActuator . java to ensure that the account exists before proceeding
updated the version number from 3.8 . 0 to 3.8 . 1 in XMPPServer . java to reflect the latest release status and
update type handling in Types . java to use unannotatedType ( ) instead of directly returning the unannotatedType ( ) to improve
updated assertions and method calls in StorageGroupProcessorTest . java for consistency and clarity to ensure proper handling of sequence file sizes during tests
updated Jetty version from " ee10 " to " ee10 . ee10 . ee10 . ee10 . ee10 . ee10
added a waitbeforestart parameter to FFMpegVideo . java to provide a delay before starting video playback
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor across multiple classes to simplify the constructor signature and eliminate unnecessary
updated import statements and refactored test methods in AccessorsTest . java to improve code organization and enhance test coverage for list index functionality
refactor compile method and add framemap getter to graalcompiler .
updated test imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use @ ConditionalIgnore and @ Running
update boat ' s y - coordinate calculation for water to ensure correct y - coordinate is utilized when target is a water block
modified the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the method ` allowExperimentalOptions ( ) ` from the conditional check to simplify the code for better readability and maintainability
added methods to assert paths and their types in BDDAssertions . java to enhance assertion capabilities for better test reliability
updated variable names and updated port handling in ForwardedRequestCustomizer and ForwardedRequestCustomizerTest to improve code clarity and ensure correct
changed logging level from debug to warn for multiple Kubernetes config files and updated the command line syntax to improve logging clarity for better user understanding
added file upload handling logic and utility methods in FileUploadService and FileStorageUtils to enhance file upload functionality and improve code maintainability
added ` ProviderLoader ` and ` ProviderLoaderListener ` classes , and refactored ` TerminalManager ` to use these new ` ProviderLoader
updated imports and references from ` Span ` to ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests
updated the SQL statement construction in StandardChangeLogHistoryService . java to use a ColumnConfig with computed properties to improve flexibility and maintainability
hhh - 14850 - fix postgresql dialect to return current _ schema ( ) instead of sys . dummy
fix npe in internalpartitionserviceimpl when there be no data member
added checks for scheduler state before starting the scheduler and improved scheduler start handling to ensure that the scheduler is only started if it is already started
simplified the instantiation of InlineBox by removing unnecessary string conversion to improve code readability and maintainability
updated string concatenation syntax in checkArgument calls to improve readability and maintainability of the code
updated the return value of getStagedRectSlideEnd method from 383 to 500 to adjust the slide end position for better user experience
updated WaveInfoDialog and PlacementFragment to use core bundles for command mode names and nounits to improve localization and maintainability of the code
updated the condition to check for plot area ownership in BukkitMain . java to ensure that plot areas are correctly identified as owned plots when
refactor ` ShadowAccessibilityManager ` to use ` ArrayList ` for touch exploration state change listeners instead of ` ArrayMap ` to improve
pdfbox - 5328 : fix arrayindexoutofboundsexception , a suggest by valerybokov
fix : use testelement . getname ( ) instead of testelement . getpropertyasstring ( )
refactor to use POIFSFileSystem . create instead of new NPOIFSFileSystem constructor to simplify code and improve readability
added import statements and modified plot area retrieval logic in Move . java to improve code clarity and ensure the correct plot area is retrieved
updated version regex pattern in TestWebHCatE2e . java to include additional digits to ensure compatibility with the new version format
updated the range check for ` count ` in ` Filters . java ` from ` count < 0 ` to ` count < 1 ` to allow
update kafka consumer processor to use bean type instead of beandefinition to improve clarity and maintainability of the code
updated import statements and added error handling in JavacCompiler . java to improve error reporting and ensure proper execution of the javac
ggb - 1181 repaint the view when the select option be close .
camel - spring - batch - fix checkstyle issue in camel - spring
added a new method ` isAnimationFinished ` to check if an animation is finished to provide functionality for determining if an animation has finished based on
added a test for custom favicons with line breaks in LoginMockMvcTests . java to ensure proper handling of shortcut icons with line breaks in
added null check for otherUrl before comparing it to an empty string in TimeLineCursorAdapter . java and updated the refreshing text in Home
ggb - 1181 space be now a valid character , not an empty string .
refactor ObjectHashSet class for improved performance to enhance efficiency of hash set operations
refactor null checks in DataUtilities . java for improved clarity and efficiency to enhance readability and maintainability of the code
fix item comparison , allow for delete of enchanted books , mc - 12770
add microprofile test for async resource ( # 887 )
renamed ` TARGET _ FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP _ SUFFIX `
added error handling and logging for send failures in MailService . java to improve debugging and provide clearer error messages when sending failures
replaced the ` resetTaskItemView ( ) ` method with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and added
added unit tests for ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct handling of
added a semicolon to the end of a block in FileListListAdapter . java to ensure proper syntax and prevent potential compilation issues
changed the type of ` fileId ` and ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile ` and `
update index used in removeViewInLayout from getChildAt ( getChildCount ( ) - 1 ) to getChildAt ( getChildCount ( ) - 2 )
removed unnecessary internal imports from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline the code by eliminating unnecessary dependencies
changed the boolean parameter of the S3Request constructor from true to false in the S3Request constructor to control the behavior of the S3
fix # 2698 jfxradiobuttonskin # updateanimation ( ) npe when timeline be null
updated the condition for parsing Dewey numbers in DeweyNumber . java and added a test case in DeweyNumberTest .
added a new static string variable for the category set string and modified the return statement to replace " Category : " in the category set string to
updated the expected error message in WebSocketClientTest from " Invalid close control status code 1111 " to " Invalid close code 1111 " to
added a null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader to ensure proper handling of null class loader and
hhh - 14836 - fix handling of mapped super class in persistentattributetransformer . transform ( )
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to validate the PorterStemFilter functionality to ensure that the PorterStemFilter
modified the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and added a ` success ` parameter to
rename package from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch .
fix synchronization issue in chat window manager .
move system . touch ( ) call from a static block to a static block in APIUtil . java and remove it from multiple Java files to
updated the command for tracking files in HgCmdLineInterface and removed unused untracked files from NoOpCmdLineInterface to streamline the
camel - 14850 : camel - netty - make it easy to configure and allow to get the timer from the endpoint .
changed fields in DirectionalLight , PointLight , and SpotLight classes to be final and added a range parameter to improve immutability and
updated width and height calculations in X11GraphicsConfig . java and WGLGraphicsConfig . java to ensure that the target dimensions do not exceed
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes and corresponding tests to ensure proper
added an AnnoFilterTreeSet class to filter out annotated classes based on annotations to improve handling of annotation processing in the class hierarchy
hive - 26412 : bytescolumnvector overflow happen ( sergey shelukhin , review by ashutosh
make write - behind - map - store test eventually more robust
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI `
[ web ] add polyfunction . isequal ( polyfunction ) to compare two polyfunction
added null check before retrieving column class in SynthTableUI to prevent potential NullPointerException when table is null
added a try - catch block around the instantiation of CustomChange to handle ClassCastException when creating instances fails in Ant in particular
added methods to retrieve BuckConfig and updated related classes to use DistBuildConfig instead of ConfigPathGetter to streamline configuration handling and improve
do n ' t show double entry export warning when use ofx / qif
added an import statement and an @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to track down
modified the return type of ` doJoin ` from ` void ` to ` boolean ` in multiple classes to provide feedback on whether the join operation
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the code by eliminating
added FLAG _ ACTIVITY _ NEW _ TASK to the intent flags in LauncherTimelineCursorAdapter . java to ensure that the activity is
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable paging ordering checks for improved query
updated assertions in RepositoryConventionPluginTests to compare two different MavenArtifactRepositories to ensure the tests accurately reflect the expected repository URLs
add a task to display the affiliation of a pubsub node .
improve error message when uri do n ' t start with . /
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array update handling in CacheKey class and improved formatting in CacheKeyTest . java to enhance code readability and maintainability while ensuring
updated file type detector implementations across multiple Java files for consistency to enhance file type detection functionality across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
updated ShadowVirtualDeviceManagerTest and ShadowVirtualDeviceManager to improve the retrieval of virtual sensor callbacks and their direct channel callbacks to enhance the accuracy
added a condition to check if ` contextObject ` is not equal to ` contextBeforeExecution ` in ` HttpSessionSecurityContextRepository ` to ensure that
replaced the variable ` lch ` with ` loopback ` and updated the condition for retrieving IP addresses to improve clarity and correctness in
refactor BUF _ SIZE to DEFAULT _ BUF _ SIZE and update deflate / inflated buffer handling to improve code clarity and
updated KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to improve error handling and streamline URI processing to
added a check for the presence of an icon change listener before adding it to the icon to ensure that the icon change listener is only registered when
added support for Russian language in the Language . java file to enable localization for Russian users
hhh - 15836 fix duration conversion from second to nanosecond
disable frame state verification in substrate graphkit .
added setup and teardown methods to reset system properties in RobolectricTestRunnerTest and TestUtil to ensure default values are set before tests
added support for the " org . slf4j . " system class in ViewClassLoader and corresponding tests in ViewClassLoaderTest to ensure proper
added a check for " jar " packaging in the ChangePackaging class and implemented a test for removing the default packaging to ensure proper
updated file download tests to use ` withExtension ( " txt " ) ` instead of ` download ( ) ` to ensure the file is downloaded
fix ( demo ) : clear command buffer on exit
replaced ` defaultUnits ` with ` preferredUnits ` in multiple classes and updated related methods accordingly to improve clarity and consistency in units handling
updated date formatting in DatePatternConverterTest to use UTC timezone to ensure accurate date formatting based on time adjustments
removed unnecessary return statements in Terminator . java to improve code clarity and maintainability
improved error messages for invalid file URIs and improved error handling for HDFS Namenode host resolution to enhance user feedback and cl
use a timertask instead of a scheduledexecutor for showtrackingnotification
updated FtpReconnectAttemptServerStoppedIT to use Awaitility ' s await mechanism and modified connection counting logic in FtpEmbeddedService to
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to improve performance by reducing the
added an ` ignore ` method across multiple log classes to check if an exception is ignored to enhance log functionality by allowing users to ignore specific exceptions
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential null pointer exceptions during execution
removed unnecessary type casting for item damage in BukkitWorld . java to simplify code and improve readability by eliminating unnecessary
removed the cleanImage method call for the image in PanelManager . java to streamline image processing by eliminating unnecessary clean operations
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to handle MMap and SimpleFS directory configurations to enable better directory management and support for
added null check for ` ic ` before creating ` cleanUpColor ` in ` PdfCleanUpProcessor . java ` and updated test cases in `
updated the expression in the test from " f = field1 maxDocFreq = 1000 " to " field1 _ s maxDocFreq =
modified the ExtendedOperatingSystemMXBeanImpl class to enhance performance monitoring capabilities
added functionality to install left and right commands in SideMenuBar to enhance user interaction by allowing commands to be displayed based on client properties
added a new boolean variable ` advanceWindowed ` in ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity `
added support for SybaseDatabase in the DropPrimaryKeyGenerator condition to ensure compatibility with Sybase during database operations
refactor Client class to improve readability to enhance maintainability and facilitate future updates
[ java ] notify leader when a recording position be append to the leader so that it can be wait for the leader to be ready .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement to the NearCachedClientMapProxy class to ensure proper termination of the method during execution
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added error handling when shutting down the HTTP server in ListenHTTP . java to ensure graceful shutdown of the server and handle potential exceptions gracefully
camel - 14850 - camel - aws2 - s3 : add support for stream upload operation to the stream upload component
[ hotfix ] rename taskmanagermetricshandler . parameter _ tm _ id to task _ manager _ id _ key
bug 1362 : 2362 : 2362 : 2362 : 2362 : 2362 : 2362
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to append a password to logs to ensure
added a new private variable ` maxEnergyLimit ` and updated energyLimit assignment logic in ` VMActuator . java ` to ensure energy
added a maxInMemorySize property and its getter / setter in HttpClientProperties , and modified the webClientPlugin constructor to include maxInMemory
refactor Cache class to improve cache management to enhance performance and maintainability of the cache implementation
added two new Java files , RunCucumberTest . java and StepDefinitions . java , to the package ` $ ` and ` com
added error handling for JSON parsing in TypeJsonUtils and corresponding test assertions in TestArrayOperators to ensure robust parsing of double values and improve test
removed the byte array part3 from the Utf8StringBuilderTest to streamline the test by eliminating unnecessary byte array operations
added a check for parameter setting before appending the parameter value in Params . java , and updated path and stringMap handling in RestInvocationHandlerTest
camel - 7999 : camel - core - allow to configure maximum number of output on circuitbreakerloadbalancer .
set the maximum buffered documents to the maximum of 3 in TestIndexWriterExceptions . java to ensure that the application does not exceed the maximum buffered
refactor hashing methods to use Sha1HashCode instead of String for resource APK , primary Dex , and string assets hashes to improve
removed unused enum value methods from AsmRuntime . java to streamline code and improve readability by eliminating unnecessary complexity
add mangrove and deep dark biome to the list of biome that have mangrove and deep dark .
use a fixed thread pool for async image request ( fixes # 468 )
changed access modifiers of ` _ tableConfig ` , ` _ schema ` , ` _ tableDataManager ` , ` _ helixManager `
replaced occurrences of " \ u0646 \ u0648 " with " \ u0623 \ u064a " in
replaced ` getImage ( ) . equals ( varName ) ` with ` hasImageEqualTo ( vn ) ` for image comparison to improve cl
camel - 16400 : camel - jbang - add -- repos option to specify repository for camel run command .
added handling for NaN scores in CrawlDbReader . java to improve robustness by handling cases where scores are NaN
added a cleanup method to the OnStartupTriggeringPolicyTest class to set the last modified timestamp of the target file to ensure that the target
updated focus handling in FilterConditionEditor and improved focus management in FindAction to enhance user experience by ensuring the input field is focused based on
[ hotfix ] [ runtime ] make checkpointscleaner implement autocloseableasync
added a new file XPathWhiteSpaceTest . java to validate XML schema whitespace to ensure proper handling of whitespace - related errors in XML processing
bonsai : do n ' t override trie log layer if it ' s empty ( # 3740 )
[ hotfix ] fix checkstyle violation in fillednewarrayinstruction
added timeout annotation to multiple test methods in SimpleNetworkTest . java to ensure tests have a timeout duration for better stability
update parentPath handling in OCFile . java to ensure parentPath ends with a slash to improve clarity and correctness in path processing
added a print statement to indicate failure loading the skin file to improve error handling and debugging for skin file loading failures
log4j2 - 1342 use filter instead of skip for empty accumulator in lgolevel2batchsubscription
added a new constant UNDEFINED in Result . java and updated TestStep . java to use this constant to improve code clarity and maintainability by
changed assertion from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure that the callback is not registered if it ' s already registered or
uploadjobmultipartitionoperation should be serializable so it can be send to jet service
added error handling for recovery in MessageDatabase and JobSchedulerStoreImpl to improve robustness by throwing an IOException when recovering data fails
do n ' t show summary level if the node be fold or not
modified the ` pos ` variable and added a ` sizeMask ` variable in ` DataOutput2 ` , and modified the ` ensureAvail
added @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to cruel
fix possible indexoutofboundsexception in storageproxy . blockfor ( ) .
removed unnecessary whitespace in the FileManager class to improve code readability and maintain consistency
updated TransformFunctionType constants to include " plus " , " minus " , and " times " in their names to improve clarity and consistency
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` and ` package - info . java `
updated RFC3280 reference from " RFC3280 " to " RFC5280 " across multiple Java files to align with the latest standards
fix : use character instead of int in search annotation
refactor ListActivity and NoteAdapter to use SparseBooleanArray for selected items instead of HashMap to improve memory management and performance in handling selected items
refactor conditional statements in DirectUpdateHandler2 . java for consistency to improve readability and maintainability of the code
updated file path handling in ConfigFileApplicationListener and added a test for absolute resource defaults to ensure correct file path formatting and validate resource location behavior
updated PreviewPositionHelper to accept a Context parameter and adjusted insets handling in TaskViewSimulator and TaskThumbnailView to support multi - window mode
[ java ] only publish new leadershipterm when the leadershiptermid match the logleadershiptermid
updated PMDCoverageTest to use StandardErrorStreamLog for better error handling to improve test clarity and maintainability by utilizing a
refactor ByteArrayInputStream logic and add a new Skip class for skipping bytes to improve code clarity and implement functionality for skipping bytes in a stream
refactor conditional logic in UpdaterTask . java for clarity to improve readability and maintainability of the code
made the ` MAX _ HEADERS ` constant public and added a conditional check before downloading blocks to ensure the header count does not exceed the
added " rt . jar " to the list of STANDARD _ LIBRARIES in ModClassLoader . java to support additional JAR files in the
refactor the connection handling logic in AbstractHandshakeHandler . java for improved clarity and structure to enhance readability and maintainability of the
[ geos - 8470 ] geos - 8471 , geos - 8472 , geos - 8473 , geos -
added a conditional check for response commit status before sending an error response to ensure that an error response is only sent when the response is already committed
updated condition checks in HttpSession . java for improved clarity and consistency to enhance readability and maintainability of the code
updated fadeOutFakeTaskView parameter to false and added new functionality for hotseat icon visibility in gesture navigation tutorial controllers to improve user
fix prefabserializer and prefabformat to log name of unknown component .
updated external group initialization to include " internal . superuser . cn = superusers , ou = scopes , dc = test , dc = com
added validation for non - existent account transfers in FreezeBalanceActuator and TransferActuator to ensure that the minimum amount is 1 TRX
replace ' / ' with File . separator in FileResolverTestBase . java to ensure consistent path handling across different operating systems
ggb - 1346 show error message when there ' s no error
updated GpsMainActivity and AnnotationViewFragment to use session description instead of an empty string to improve user experience by providing a clearer description
added a conditional check for the number of pages before assertions in JsoupNonVisualRegressionTest . java to ensure that the test verifies
* deprecate androidbufferallocator , use androidnativebufferallocator instead
added checks for flag names starting with " ! " in multiple classes to ensure proper handling of flag names that do not start with " ! "
added a NOPMD comment to the executeQuery method in JDBCHistoryCache . java to indicate that the method should no longer execute in
updated the condition to use ` ItemUseOp . ITEM _ USE _ GRANT _ SELECT _ REWARD ` instead of ` String . equals
added a new ` toString ` method to the ` PriorityElement ` class and modified assertions in ` QueuePriorityTest ` to improve test clarity
remove redundant test code in affinityapitest . also add dependency injection for affinitygroupservice
added a null check for the main command and modified the option check in the Main . java file to handle cases where the main command is not
updated LightOutputStream initialization parameters in multiple classes to optimize memory usage for better performance
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a new class ` T8032819 ` and modified ` ClassWriter ` to conditionally display blank lines to enhance test coverage for class
removed an assertion check for the length of the ' sn ' field in the Person class to streamline the code by eliminating unnecessary validation
added a null check for the file extension before comparing it in the EXTENSIONS _ DENYLIST list to avoid potential null pointer exceptions when
replace return statement with continue in ContactRightButtonMenu . java to improve loop control flow during contact processing
added cancellation check and improved slot handling in SimpleSlot and SlotSharingGroupAssignment classes to ensure proper slot management and error handling during slot sharing
refactor loop condition in InstallShortcutReceiver . java for clarity to improve readability and maintainability of the code
refactor the bind method and improve socket handling in PlainSocketImpl . java to enhance code clarity and ensure proper resource management during socket operations
added functionality to track and remove removed media items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by tracking removed media
updated log message to reflect offsets from the element ' s center point to improve clarity and accuracy of log output for better debugging
added a new file ` bug4865918 . java ` containing a GUI test for the ` TestScrollBar ` class to verify the
replaced VelocityEngine with Velocity in ADKerberosOperationHandler . java to simplify the code and improve readability
updated import statements and added a new command case for group triggers in QuestCommand . java to enhance command functionality for managing group triggers in the
added file chooser functionality and improved budget insertion in GncXmlHandler to enhance user experience by allowing users to select a file instead of
added Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enable better string representation of objects for better debugging and logging
refactor CloudService to use a constant for the configuration URI to improve code maintainability and reduce redundancy
removed redundant view . setViewportComponent and view . setJScrollPane in BrowserPanel . java to streamline the code by eliminating unnecessary
updated key handling in LwjglInput , TWL , and Layout classes to include a new KEYCODE _ FORWARD _ DEL
added a conditional check for the " moreIndexingFilter . indexMimeTypeParts " setting before retrieving MIME type parts to optimize performance by avoiding unnecessary
added author pattern matching and modified constructor check logic in JSDoc . java to improve author identification handling for constructor declarations
added new metric constants for database , table , and partition counts in MetricsConstant . java and updated test metrics in TestMetaStoreMetrics . java
added ` DrillHiveMetaStoreClient ` and ` SchemaConfig ` parameters to ` HiveDatabaseSchema ` and refactored related methods
updated oauth2LoginLinks method to accept a MultiValueMap for query parameters and added error handling to enhance the functionality of oauth2 login links by
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Ummal
added support for firefox in WebAudioWrapper to ensure audio operations are only supported on supported browsers
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` and removed the private constructor in ` InterceptorConstants ` to enhance interceptor management
added a default charset option to the table creation in TestCompatibility . java to ensure compatibility with different database configurations
modified the termination logic in WriterRecordBatch . java and modified the conditional check in StreamingAggTemplate . java to improve code clarity and ensure
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
added a ` hasFrom ` boolean property and related getter / setter methods to the ` Delete ` class , modified ` DeleteDeParser ` ,
refactor synchronization logic into separate methods for multi - status checks to improve code readability and maintainability while ensuring proper handling of multi - status
refactor ` RecipeScheduler ` to utilize a new utility method for matching applicable tests to improve code readability and maintainability by central
updated the regex pattern in LogAnalyser to allow spaces after the colon in the log line to improve the accuracy of log parsing by allowing
( chore ) camel - google - cloud : enable integration test and disable it if application credential be not provide
fixed - redissonsearch . value ( ) method do n ' t support inclusive or exclusive parameter . # 3551
( scott phillips ) add license option to the selectlist when no license be select
added a null check before putting the value into the guidIndex to avoid potential NullPointerExceptions when the global ID is not set
updated the equality check in OptionalAssert to use a comparison strategy to improve readability and maintainability of the comparison logic
refactor margin handling in NoNewLineParagraphCssApplier , ParagraphCssApplier , and ParaGraph classes to improve code clarity and
added a new file TestArrayCopyToFromObject . java that tests the behavior of the arraycopy method to ensure that the expected ArrayStoreException is thrown
replaced ` escapeAsBashString ` with ` escapeAsPythonString ` for path separators in ` BuckPythonProgram . java `
increase async state check from = = to ! = in AjpAjpProtocol , AjpNioProtocol , and AjpProtocol
deprecate findfiles ( modcontainer modcontainer , function < path > preprocessor , processor , boolean visitallfiles , boolean defaultunfoundroot
added an import statement for JUnit ' s Ignore annotation and ignored the TestLlapSignerImpl test case to mark the test as unstable
added null check for the request exception before verifying response status to ensure robust error handling and prevent potential null pointer exceptions
refactor ` autoloadCall ` to accept a ` lowerName ` parameter and manage locks for class loading to improve flexibility in loading classes by
removed unused imports and modified server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to streamline code by eliminating unnecessary dependencies
updated KDC and OneKDC classes to use the canonical host name for localhost instead of a hardcoded value to ensure that localhost is consistent
modified the Jsr250Voter to conditionally return ACCESS _ ABSTAIN based on the presence of a config attribute to improve clarity
added multiple import statements for various ISO boxes in MP4Parser . java to streamline import statements and improve code organization
added a conditional check for the HS2 proxy user in session parameters to ensure session parameters contain the correct user context
camel - 16400 : added snappy compression for camel - hdfs . thanks to stephan siano for the patch .
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper timing for asynchronous operations in the test
fix bug # 49966 - prevent change of blank cell in multi - cell formula
updated glyph positioning logic in GlyphLayout . java and modified text message in BitmapFontTest . java to improve glyph rendering accuracy and clar
refactor K3S initialization and image pulling logic in Fabric8IstioIT . java to improve code readability and maintainability
replaced ` ReportPlaybackStartAsync ` with ` reportPlaybackStart ` and ` reportPlaybackProgress ` in ` PlaybackController ` and `
use bufferedinputstream for read access property file . patch by jbellis ; review by brandonwilliams for cassandra - 14
do n ' t hit eviction on initial load if map loader hit the eviction policy
corrected the bitwise operation syntax in ResponseFlag . java to ensure proper bitwise operation execution for proper error handling
( scott phillips ) fix default policy for community with no read
added a SoftReference for a ConcurrentHashMap to manage CompositeFont instances to ensure proper memory management and avoid potential memory leaks during font lookups
updated prefHeight calculation and adjusted its value in Tree . java to ensure consistent height calculation and improve code readability
drools - 5351 dmnevaluatorcompiler fail to compile if the offending symbol be not a valid dmn token ( # 2
removed unused imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
changed method visibility of ` finishRunningRecentsAnimation ` from private to public in ` TaskAnimationManager ` to allow access to the method from
added null checks for node id and edge type in ElementFactoryImpl , and improved edge type handling in ImportContainerImpl , and updated method
[ beam - 8470 ] handle unknown response in fnapicontrolclient and beamfnstategrpcclientcache
nifi - 1741 : fixed bug in binfiles that cause an exception when a flowfile be large than the bin limit . this
replaced geometry . findClosest with a for - loop for finding the closest core to improve performance and readability of the code
added a check to skip copying content - length when sending requests in RestTemplateCopyHeaderFilter to improve request processing by avoiding unnecessary content length
refactor handling of class and character literals in Java2TypeScriptTranslator and improve test assertions in SyntaxTests to enhance code clarity and ensure
updated channel size and sample rate calculations in multiple classes to improve performance and correctness of the channel processing logic
hbase - 26907 canary should support - allregions option to Tries all region on a regionserver .
remove unused node . environment variable from cassandra connector test
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure cursor position is reset before processing new data
added minimum size settings for the call dialog and adjusted frame size based on the new size of the call panel to improve user interface responsiveness
fix loss of state information during fall block . close # 3740
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit ' s TestSetup and improve test structure to enhance readability and
added dependency injection for KerberosPrincipalHostDAO and modified entity removal logic in KerberosPrincipalDAO to improve entity management and ensure proper removal of
removed the ' true ' parameter from the getTableSnapshot method call in StatsOptimizer . java to simplify the method signature for better usability
fix for http : / / issues . apache . org / activemq / browse / amq - 2748 - handle exception in
updated the error message for the android . licenseKey build hint in AndroidGradleBuilder . java to provide clearer guidance on how the
updated the method to retrieve the display name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource . java
[ drools - 7 ] support boot - inf . classes resource in kiebuilderimpl ( # 374 )
added an assume statement to the CheckIndexTest . java file to conditionally skip the test based on the runtime feature version
refactor assignTargetsForSplitScreen method to remove unnecessary context parameter and streamline target assignment logic to improve code clarity and maintainability by
[ hotfix ] fix checkstyle violation in leaderlatch
added methods for initializing Zookeeper parameters in SolidityNodeHttpApiService . java to enable dynamic configuration of parameters for the Zookeeper service
transaction confidence : add method to get depth future
added a new method ` createMediaRecorder ( String path ) ` in ` CodenameOneImplementation ` , ` Location ` , and `
set default value of platformName to " ios " in JavaSEPort . java to ensure compatibility with iOS platform
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated conditional checks for ` mozDash ` and ` webkitLineDash ` in ` Graphics2D . java ` to ensure consistency in context
refactor CreateVisibleSignature class for improved clarity to enhance maintainability and readability of the code
added a try - catch block around the outgoing frame logging in AbstractExtension . java to handle potential exceptions and log warnings if the callback is not
replaced the try - catch block for handling exceptions with a privileged action for the Caller class to improve security by ensuring the caller class is
added logic to reset the parent of child categories in the FeedCategoryREST class to ensure that child categories are properly removed from the database when the
updated title handling in ContributionManagerDialog to use a dynamic title based on the contribution type to improve user experience by providing a clearer and
added a new ` vwap ` field to the ` Ticker ` class and updated the constructor accordingly to enhance the ` Ticker `
added functionality to display a " no widgets " view and updated bottom inset handling in the Search and Recommendations feature to improve user experience
feat ( rendergraph ) : add rendergraphapi to allow multiple render graph instance
added a color setting to the NCFirebaseMessagingService to ensure the service uses the correct primary color for better visual consistency
refactor ShadowUsbManagerTest to improve test structure to enhance maintainability and readability of the test code
updated variable names and added logging in ` AbstractDifferenceRecommenderEvaluator ` , ` AverageAbsoluteDifferenceRecommenderEvaluator ` , and ` RMS
added a call to update the selected configuration in Rocket . java to ensure the selected configuration reflects the updated state
updated stroke width calculation to use Math . max instead of direct casting to improve code readability and prevent potential issues with integer overflow
replaced HashMap with LinkedHashMap in multiple classes to maintain the insertion order of vendor options
replaced ` ClosureManager ` with ` ClosurePool ` for closure handling in ` NativeClosureFactory . java ` to improve closure management and resource
( chore ) camel - core : migrate routetest to junit5 ( # 5409 )
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , implementing a WebSocket integration test to establish
[ ds - 3952 ] fix import metadata from dspace format to dspace api .
refactor authentication comparison logic in AbstractCasWebflowEventResolver to use a new method areAuthenticationsEssentiallyEqual to improve read
added a conditional check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to
replace ` callNode . getType ( ) ` with ` callNodeType ` in multiple methods to improve code clarity and maintainability by using a
added a new annotation ` Insecure ` to the ` MessageBuffer ` class and modified the constructor of ` MessageBuffer ` to incorporate
added multiple configuration variables to HiveConf . java to enhance the flexibility and maintainability of the Hive configuration settings
initialize scopes and policies with HashSet and add a null check for policies in DefaultResourceSetService to ensure proper initialization of collections and prevent potential null
made ` decrefOnClose ` final and updated the constructor of ` MultiReader ` to accept a ` Collection < ReaderFinishedListener >
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , and TestFrameSize Java files to improve code organization and maintainability
danielwagnerhall : refactoring inputfieldtest to use selenium instead of selenide . fix issue 2.
added a method to retrieve the first type argument from a ParameterizedType in GsonTypes . java to improve type safety by ensuring the first type argument is
changed method signatures of ` keySet ( ) ` and ` values ( ) ` from ` Set < Integer > ` to ` KeySet ` and
added duration and bgColor properties to FlipTransition and updated motion creation logic to allow customization of the transition duration and background color
removed the conditional check for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
bump version to 9.10 for forge now .
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages related to ` sun . reflect .
added support for Java 16 language levels in ParserConfiguration . java and created new classes Java15Validator . java and Java15PostProcessor . java
adjusted padding logic for statusView based on replies size in ExpansionViewHelper . java to improve UI responsiveness by adjusting padding
partition backup replica anti - entropy : do n ' t invoke on v3.9 response if version < v3.9
added metadata mapping functionality to SeedUrl and SeedResource classes to allow storage and retrieval of additional metadata for seed URLs
[ drools - 7 ] avoid npe if the xpath constraint do n ' t have the binding
updated TestCoprocessorWhitelistMasterObserver . java file to improve test coverage and ensure proper functionality of the coprocessor whitelisting
ww - 4443 add package name to actionconfig when validate
updated assertions in IterableTest to handle null arrays correctly to ensure accurate validation of iterables with only null passed as null arrays
added stream and parallelStream methods to MapIterable and PrimitiveObjectMap classes , and created a test for stream operations in MapIterableTestCase to
replace return statement to clone the notifInfo object instead of returning it directly to ensure that the original notifInfo is not modified again ,
[ web ] fix ` ` no command find ' ' error
refactor AEADBlockCipher class for improved encryption algorithms to enhance security and maintainability of the code
added methods to check if a variable is local and updated related logic to improve variable management and ensure consistent handling of local variables
added a null check for the ` id ` variable in ` PackageResourceTable ` and changed the default resource mode from best to legacy in `
added a conditional check for ` ulSize ` and ` ulPos ` before accessing the table buffer in ` TrueTypeFont . java ` to
refactor SignPlugin to accept a list of HttpMessageReader instead of a static message reader list to allow dynamic configuration of message readers based on
modified Int2ObjectCache . java file to improve performance and maintainability of the code
removed unnecessary import and validation checks for MavenDeployer in StandardMavenAuthenticationProvider . java to streamline authentication process by eliminating unnecessary
modified the implementation of the AudioNode class to improve audio processing efficiency and performance
added SSL context initialization and improved exception handling in LinkyHandlerFactory . java and EnedisHttpApi . java to enhance security and provide
refactor HiveFunctionRegistry to use Stream for string processing and introduce a FUNCTION _ REPLACE _ MAP to improve performance and readability of the
http : / / issues . apache . org / jira / browse / amq - 4568 - add service = log4j
modified the ` getBuildTargetForAlias ` method to accept a ` possiblyFlavoredAlias ` string instead of an empty string to enhance the
camel - 17836 - camel - olingo2 : do not process odata feed with no entry
update metastoreschemainfo to return equivalent version ( 0.13 . 1 )
server : do n ' t expunge vm if advance expunge fails
mark multiple methods as deprecated in AbstractDateAssert . java to indicate that these methods should no longer be used and may be removed in future versions
updated ONDashClockExtension to use a dedicated method for retrieving note titles and refactored AlarmReceiver to use this new method to
updated import statements and modified assertions in GoogleAuthUserConfigTable and TotpEndpointIntegrationTests to enhance data validation and improve test clarity
replaced ` commit ( ) ` method calls with ` apply ( ) ` method calls across multiple classes to ensure changes are applied to shared preferences
added an IdleListener to the StandardSession instantiation in AsyncTimeoutTest . java to manage session idle state during tests
[ beam - 8470 ] fix bigqueryio integration test failure .
added background resource settings for predicted icons in HotseatPredictionController and set a null background in BubbleTextView to improve UI consistency
mondrian : fix typo in property name .
add nativeworker test for native query
refactor feature retrieval logic in LIMEExplanation and add unit tests in LIMEColumnarTest to improve code clarity and ensure active
added argument handling to ` AppleSimulatorController ` and ` InstallCommand ` classes and updated error messages to include run arguments to enhance the
refactor code to use a local variable for the area object instead of direct calls to getArea ( ) to improve code readability and
added a check to ensure the lifecycle state is available before processing in ContainerBase and StandardContext classes to prevent potential errors when the pipeline is not
added clipping to outline in QsbWidgetHostView to enhance the visual appearance of the background
added flag processing and logging functionality in SQLManager , modified string splitting in BlockTypeListFlag , and improved flag caption handling in PlotArea
updated FloatingTextRenderer . java to use wildcard imports and modified depth test behavior based on whether the floating text is occluded to improve code
fix typo in target _ com _ oracle _ nfi _ backend _ libffi _ libfficontext _ linux .
added getter and setter for propagationBehavior in JdbcAggregationRepository to allow dynamic configuration of transaction propagation behavior
add regularization support for layer with l1 and l2 regularization ( # 1181 )
( chore ) camel - checker : do not throw exception on read / write failure
changed the access modifier of ` colorStack ` from static to instance variable in ` GlyphLayout ` to allow multiple instances of ` colorStack `
changed the parameter of ` getMappedStatement ` and ` hasStatement ` from ` false ` to ` true ` to enable mapping and statement existence
convert the tradable identifier and currency to lowercase in BTCEPollingMarketDataService to ensure consistency in currency handling across the application
updated QTT channel state assertions and modified test values in ChannelStateTests . java to ensure accurate testing of command state values and improve test coverage
remove enginepayloadparameter . versionedhashes from the enginepayloadparameter interface ( # 6373 )
reset the trigger price field when it ' s set to an empty string to ensure that the input field reflects the updated price value
modified conditional checks for student registration and error handling in StudentFeedbackSubmissionEditSaveAction . java to improve code clarity and ensure correct
removed unnecessary print statements in I18NPageController . java to clean up the code and improve readability
hbase - 26975 fix potential npe in hstore # getall ( ) if getall ( ) return null
updated bean state handling and refactored property change checks in EntityBeanIntercept . java , SaveManyBeans . java , and TestBeanState
added a boolean flag ` _ alwaysSaveUri ` and corresponding getter and setter methods in ` FormAuthenticator . java ` to control whether the URI
added methods to set layer type and paint in ShadowRenderNode to enable customization of rendering features in the ShadowRenderNode
replaced specific import statements with wildcard imports and added popup menu visibility handling in LWChoicePeer . java to improve code readability and ensure
updated the initialization of the insert HashMap to use lowercase method to ensure consistent behavior when the insert HashMap is already initialized
replace usage of ` scala . collection . JavaConversions . asScalaIterable ` with a static import of ` collectionAsScal
added null check for requests before processing in MockServerEventLog and improved logging messages in HttpForwardObjectCallbackActionHandler to enhance robustness
( chore ) camel - core : log a warning if the property file can not be load
[ hotfix ] [ runtime ] fix resource leak in clientmain
updated conditional check in SetOutgoingIf to include multicast support and NIC status to ensure outgoing connections are only established on valid and available NIC
updated String constructor to include offset and length parameters to ensure proper handling of string operations with the specified length
added methods to set latest consume time in UnDelegateResourceActuator and removed redundant ones in BandwidthProcessor and EnergyProcessor to stream
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to provide a way to specify a custom invalid session
improve error message when serialize empty token .
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of the ` containsKeys ` method to ensure correct
replaced ` stgen ` with ` psgen ` in ` JdbcProxyGenerator ` and added ` JDBC4TemporaryPreparedStatementMethods ` to
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated method signatures in ` DirectUpgradeTest ` to improve WebSocket container initialization and
replaced ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to utilize the ImmutableListMultimap instead of the ImmutableMultimap for better performance and
pdfbox - 4892 : use point2d instead of point2d . float , a suggest by valerybokov
added a static final method ` EMPTY ` in ` MethodHook ` and refactored the ` hooks ` initialization in ` Method ` to improve
added a ` grantAccess ` boolean parameter to the ` MockAuthenticationManager ` class and modified the authentication return logic to allow users to grant access
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to ensure proper job execution handling during job execution
added a check for file permissions in SharedLibraryLoader . java to ensure that only writable files are processed to avoid errors
feat ( generator ) : update protoc to v3.15 . 2 ( # 296 )
bug 60625 - change samplerequest to sampleevent when can get unmarshalling
added constants for BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , DISTANCE , and STARTTIMESTAMP in
change return type of applyRule method from Hashtable to Map to allow for more flexible data handling in the search expression
mow - 103 fix classcastexception when move audio
updated JoglGraphics and ProjectiveTextureTest to adjust resize listener and texture parameters , and changed UI initialization parameters , and adjusted container dimensions
refactor the setResourceToDelegate method to return a File object instead of void to improve code clarity and ensure that the output file is writable
camel - 1745 : fixed property intercepting from endpoint . thanks to daniel for the patch .
amend hbase - 25727 : fix actionscheduler to only check last attempt time if it ' s at least 2 second ( #
updated dbg _ zip initialization to handle null debug _ log to ensure dbg _ zip is set only when debug _ log is not null
fix ( render ) : add hud _ hidden event to render debug config
pipe now properly reset the gate when it ' s close
added locale handling to TestSupplementary execution in a try - finally block to ensure locale is restored after each test execution
updated the color range for the team in the Team constructor from 0.6 f to 0.4 f to improve the stability of team
replaced HashSet with ArrayList for activeMatchedStates and modified logging statements in SequenceMatcher . java to improve performance and enhance logging clarity for better
simplified the condition for checking expected exceptions in SoftAsserts . java to improve readability and maintainability of the code
updated error handling in StorageResources to include detailed error messages and added logging in StoragePluginRegistryImpl to improve error reporting and provide clearer context
refactor call tree reporting to use a new method ` toCsvFile ` instead of multiple calls to improve code readability and maintainability by
added null checks for note and noteTmp before accessing its properties in DetailFragment . java and updated view references in WidgetProvider . java to improve
added peakTasks tracking and adjusted loading logic in AssetManager . java to improve resource management and accuracy in task loading
danielwagnerhall : enable native event on window for firefox
added constants for nutch score and fetch interval , and refactored score injection logic to use this map to improve code readability and
updated import statements to use org . apache . commons . collections4 . ListUtils and org . apache . commons . collections . HashedMap
modified the condition for zkController in CoreContainer . java and added a new method isShareSchema in TestCoreContainer . java to enhance schema
updated size calculation methods to accept a boolean parameter for better control over the size calculation to enhance the flexibility of size reporting based on document store
replaced assertEquals assertions with assertNull for version1 _ 2 in VersioningTest . java to ensure that version1 _ 2 is null
updated SQL queries in ` Field . java ` and ` AbstractJdbc2DatabaseMetaData . java ` to include a condition for not null domain columns
[ java ] : do n ' t send new leadershiptermevent when there be no leader .
removed unused import of MediaType and refactored the buildMediaType method in WebClientPlugin . java to improve code clarity and reduce unnecessary dependencies
updated method names and references from ` fillUsingLengthPrefix ` to ` fill ` in multiple classes to improve clarity and consistency in method naming
refactor compaction logic in AcidUtils and add a new test for cleanup after IOW and major table compaction to improve code clarity and
added null checks for storageScheme and qualifierEncodingScheme in PTableImpl . java to ensure proper handling of null values and prevent potential NullPointerExceptions
added two new files , PojoProducersCustomized . java and RestProducersCutomized . java , to the demo package to
updated the method calls in ArtifactCacheBuckConfig to use CACHE _ SECTION _ NAME instead of " cache " to improve code readability and
removed duplicate registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to improve code clarity
add wooden slab replacement to oredictionary . close # 3740
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 15836 - fix test failure on oracle .
updated the drawing position in HelloWorld . java to correct the positioning of the sprite batch to ensure the sprite is drawn correctly within the specified
updated PlayerFunctions , PlotId , and WorldGuardListener to improve x - coordinate handling and region formatting to enhance readability and maintainability of
added a deprecated static final version constant for Lucene 8.5 . 0 to signal that this version should no longer be used and encour
updated string concatenation in the log statement for clarity to enhance readability and maintainability of the log output
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL queries with signed integers can be
refactor dependency type handling in CoNLLUOutputter to use a new DependenciesType enum to improve code clarity and maintainability
simplified the method signatures of ` NoSuchBuildTargetException ` and added a new method ` makeTargetDescription ` in ` ParseContext ` to
replaced the main test method from ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild . java ` to
updated the initialization of configBlocks to use a fixed array size of 256 instead of Block . blocksList . length to optimize memory usage and improve
updated logging statements and improved version checks in BukkitMain . java for PlotSquared and CraftBukkit support to enhance clarity
added escaping for PostgreSQL questionmark operators in AbstractSQLChange and corresponding test cases to ensure proper SQL statement generation for Postgres databases with special characters
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
updated the ` BuildNavAndPDFBody ` class to improve error handling for mismatched ' page - shortname ' and ' page - permalink '
http : / / issues . apache . org / jira / browse / amq - 4568 - fix nhcmqttconnection
refactor change set retrieval to check for a root change log before retrieving it to improve reliability of change set retrieval by ensuring the root change
updated method calls to use methodResult instead of a new instance of MethodResult to improve code readability and maintain consistency in variable usage
added HiveMetaStoreClient and logging for database dropping in TestHiveMetaStorePartitionSpecs and TestObjectStore to enhance database management and
added a currency parameter to the BithumbAuthenticated and BithumbAccountServiceRaw classes to support order currency - specific functionality
deleted the SSEFluxWebConfig . java file to remove unused configuration class to streamline the codebase
updated JsonBuildHelper , IDocBuildTemplate , SpringBootDocBuildTemplate , and JavaClassUtil to use isVoid ( ) method instead of
[ te ] add a new endpoint to list Yamls in YamlResource . java and update YAML _ READER to YAML and introduce
removed the ` public ` access modifier from ` equals ` and ` hashCode ` methods in the ` Marker ` class to restrict access to these methods
updated thread factory to use lambda expressions and refactored awaitTermination method for better readability to improve code clarity and reduce complexity in thread
added unit tests for ` PersonWithAList ` in ` MongoTemplateTests ` and created a new ` PersonWithAList ` class to
[ web ] fix size of split panel on resize
updated toolbar visibility settings in DrawerActivity to include a delayed execution to improve UI responsiveness by ensuring the toolbar is visible after a delay
refactor the unpacking logic for overlap pages in SeriesReader . java to improve readability and maintainability of the code
do n ' t save vm password if router be not running
added properties usingOutputStream , usingWriter , and isCharacterEncodingSet to false in Response . java to prevent potential memory leaks during response processing
added a check to prevent assignment side effects in GroupDialog to enhance user experience by preventing unintended assignment issues
refactor JSON handling in JSONObjectConvertor to improve code organization and maintainability
updated conditional check for icon size in FileUploadApiController . java to ensure proper alignment of icons based on their dimensions
updated import statements and modified method signatures in RegisteredServiceProperty . java , JwtTokenCipherSigningPublicKeyEndpoint . java , and JwtTokenCipherSigning
added mime type checks and improved error handling in the Basic . java file to ensure proper content type validation and provide clearer error messaging for
fix jzlib not be able to compress with netty
added a method ` doesClassLoaderDescendFrom ` to ` Util ` and removed redundant ` nestHost ` and ` securityManager ` checks to stream
removed unused imports and simplified the connect method in ChannelProvider , ProxyChannelProvider , and ProxyChannelProvider to improve code readability and maintainability
added a test for handling an empty final column in TestCsvHeader . java to ensure proper handling of empty final columns in CSV output
added compass gravity and margins to NearbyMapFragment to improve visual layout and appearance of the map
added test methods for interpolation in GeoPathTest . java to ensure correctness of distance calculations and interpolation behavior
added HiveException handling to the getLeafFilterBuilderByType method and improved exception management in ParquetFilterPredicateConverter to enhance error handling and
added a condition to set the language if the stream type is video and the current audio track language is not blank to ensure the correct language is
added a warning log for compatibility issues when schemas in new version are less than the old version to improve user experience by providing clearer guidance
replaced ` resize ( ) ` method calls with ` addAll ( ) ` method in multiple array classes to improve code readability and maintainability
reordered the try - catch blocks for closing the connection in DataSourceProxy . java to improve readability and maintainability of the code
added a method to create a registrations map and updated constructors in InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to improve null
added a method to reset the UI state in SchemaUpgradeHelper to ensure the UI state is properly updated during schema upgrades
added handling for failed steps in JUnitReporter and corresponding tests in JUnitReporterTest to improve test execution flow and ensure proper handling of pending
minecraftforge / fml @ add patch for playerselector to allow . in entity selectors .
implemented Closeable interface in Selector class to enable proper resource management and prevent memory leaks
updated MaxConcurrentStreamsTest to use MultiplexConnectionPool for connection management to improve connection management and reduce memory usage during tests
added multiple calls to stringType ( ) in CoreOptions . java to enhance type safety and improve code readability
updated token handling in HqlQueryRenderer and modified test configurations in EclipseLinkUserRepositoryFinderTests and UserRepositoryFinderTests to ensure correct
updated HTTP status checks to use HttpStatus . NOT _ SET _ 000 for better clarity and consistency to improve code readability and maintainability by
pdfbox - 4892 : simplify code , a suggest by valerybokov
fix flaky test in hikcpcollectortest due to slow connection creation .
added functionality to expand file selections in ParquetFormatPlugin and updated ParquetGroupScan to utilize this new method to improve file management and
changed the success flag of the javac task from false to true and updated the handling of compilation errors based on the compilation mode to improve error
added a BaseTableModelListener to handle table changes in DefaultSortedTableModel to improve event firing for table changes in the DefaultSortedTableModel
updated the range check for the number in ServerConfig . java from 49152 to 65535 to ensure that the number is within valid range for processing
added support for document authority in API level KITKAT and updated storage map initialization in DocumentsStorageProvider to ensure proper handling of document
removed the call to Log _ OC . startLogging ( getAppContext ( ) ) in MainApp . java to streamline logging functionality by
modified exception handling in FilterChainProxy to analyze and handle wrapped RequestRejectedExceptions to ensure that the request rejected handler is called only when the exception
updated the calculation of newSize in StringBuilder . java to use ' this ' reference instead of ' value ' to improve code readability and maintain consistency
pdfbox - 4892 : check for empty filterlist , a suggest by valerybokov
added a new file TbStopWatch . java that implements the StopWatch interface to provide a mechanism for managing and retrieving total and last task time
updated the initialization state of PListStore to ensure consistent initialization behavior
added @ Deprecated annotations and logging a warning in multiple classes to indicate that these classes are now deprecated and should use Servlet 3.0 AsyncContext
[ zeppelin - 5352 ] fix remoteinterpreterserver to use current thread context classloader
fix checkstyle issue in block / command / forgehooks . java ( # 768 )
update minSdk from VERSION _ CODES . P to VERSION _ CODES . O _ MR1 in ShadowRttCallTest .
updated variable names from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve
# 1745 - enh : add simple name to bean descriptor ( # 1746 )
updated JavaScript and CSS paths in BasePage . java and added a new WroSassProvider class in WroManagerFactory . java to stream
added a new test method ` showLatestTimeseriesTest ( ) ` to ` IoTDBMetadataFetchIT ` class to verify the functionality of
updated configuration parameter names from " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency in naming conventions and improve
refactor exception handling in OCSPChecker to use a conditional check for CertPathValidatorException to improve clarity and maintainability of exception handling
benchmarker : add option to disable output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to validate the behavior of ` SortedTableMap ` with page size and node size to ensure
added a shapeless recipe for pipe waterproof and slime ball in BuildCraftTransport . java to enhance the game ' s ability
mahout - 1340 fixed arrayindexoutofboundsexception in sequentialaccesssparc vector .
added metadata handling for ownerplot in BukkitMain , EntitySpawnListener , and Shulker classes to ensure proper management of owner
added a method getDebugLogger ( ) to DIHWriter and implemented it in SolrWriter to provide access to the debug logger for better debugging and
http : / / issues . apache . org / jira / browse / amq - 4568 - allow multichat operation to
added a new method ` isSeenTag ( ) ` to ` UpToTagChangeSetFilter ` and modified the instantiation of ` UpToTag
[ beam - 8470 ] fix checkstyle issue and use arraylist instead of linkedlist .
[ hotfix ] fix checkstyle violation in brokerroutingmanager
updated volumePaint and upPaint colors to Color . GRAY and Color . green in CandlestickRenderer . java to improve visual
replaced ` FrameLayout . LayoutParams ` with a new ` LayoutParams ` class based on ` ignoreInsets ` flag to enhance layout parameter handling
added a duration parameter to the BuildTargetDurationListener and updated related tests to support tracking of the duration of rules in the build target duration listener
replaced the import of ` @ Profile ` with ` import static java . lang . System . getProperties ` and added ` assumeTrue ` to
added null check for the user before processing claims in OAuthConfirmationController . java to prevent potential NullPointerException when the user is null
added unit test base on user forum issue
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` for the ` statements ` set in ` CassandraConnection . java ` to
api : listpublicipaddresses - add source network id to listpublicipaddresses api command
added a test for ignoring battery optimizationizations in ShadowPowerManagerTest and implemented the isIgnoringBatteryOptimizations method in ShadowPowerManager
updated the method to retrieve the Jetty version from the build properties to ensure compatibility with the updated Jetty version configuration
added unit tests for invocation verification in NumberOfInvocationsInOrderVerifier to ensure correctness of invocation verification logic
refactor debugForceEvaluation calls in TRegexExecNode . java for clarity and consistency to improve readability and maintainability of the code
added a " - foreground " option to the profile start command in NewProfileExtensionConnection . java to ensure the profile is started in a foreground
refactor executor variable names and improve resource cleanup in MiniSolrCloudCluster . java to enhance code readability and ensure proper resource management by using
changed the type of ` parseFieldnames ` from a ` Map < String , String > ` to a ` String [ ] ` and updated
updated file name logging in CodeEditorView and improved view removal in EditorTextActionWindow to enhance clarity of file information and ensure proper
updated skippedEntries to include exception messages in ClassFileReader . java and modified warning message formatting in JdepsTask . java to improve error reporting and
added LinkStorage and LuceneStorage to Fetcher and updated FetcherMain to use it for document storage to improve document storage management and enhance
updated the populateBubble method to include an existingBubble parameter and adjusted related calls to handle null cases to improve bubble population logic and prevent
( chore ) camel - scheduled : do not log warn if policy be not set
removed the method array parameter from the buildRpcExt method across multiple classes to simplify method handling and improve code readability
[ java ] do n ' t send loss message when destination be multicast and loss handler be n ' t need .
replaced GsonBuilder with Gson and added properties for client information in ClientInformationResponseView . java to improve code readability and facilit
added a condition to check if the order ' s field amount is greater than zero before setting the average price to ensure that the average price is
removed the method ` rawExecutionReports ( ) ` from the ` BinanceStreamingMarketDataService ` to simplify the code by elimin
added a ` fail ` method to handle exceptions in ` LdapTimeoutTest . java ` and modified the timeout check logic to improve error handling and
added file existence checks before reading user dictionary and improved logging for installed files to enhance robustness and provide clearer feedback when installed files do
added logic to fetch and update the password file and credential store alias in AmbariServerConfigurationHandler . java to ensure that the password is
added validation for segment parsing in ParseSegment . java and updated SegmentChecker . java with a new method in SegmentChecker . java to ensure only
[ hotfix ] [ yarn ] add application attempt failure validity interval configuration to yarnconfigoptions
make sure h2 driver be not include in the classpath before unload the geoserver
hbase - 25813 update readtype for snapshot - based inputformat ( # 258 )
add fixed height and width options to instancelogininfo in order to be able to configure the size of the instance .
added a corner radius parameter to multiple methods in ActivityControlHelper , WindowTransformSwipeHandler , ClipAnimationHelper , and LauncherLayout
updated COMMANDS _ TO _ REMOVE array and added new filter filters in QFile . java to improve organization and enhance filtering capabilities for cross
added retry logic for connection attempts on the connection pool in TxnHandler . java to improve reliability of database connection operations on the pool
make txnensurereserve a backup reserve method to avoid concurrency issue
added a new field ' strings ' as a final char array in FirstOfStringsMatcher . java to allow for dynamic assignment of string data for
updated DELETE statements to include " DELETE SERVER SELECT " and " DELETE ROWS CLIENT SELECT " in the DeleteCompiler and ExplainPlanTextTest
modified the exception handling logic in BaseServiceException to include a retryable check for SocketException and IOException to improve error handling for idempotent operations and ensure
added support for rapid install types in AdbHelper , RealAndroidDevice , and related classes to enhance flexibility in managing adb install
updated the seed pattern in SortTest . java to allow negative seed values to enhance flexibility in seed input validation
refactor MultimapSubject to use a factory for creating IterableValuesForKey and IterableEntries to improve code readability and maintainability by centralizing
update return statement in Workspace . java to adjust the vertical position based on device orientation to ensure correct positioning of the hotseat layout in
added support for a transmux flag in the Transformer and TransformerInternal classes and updated the ComponentListener constructor to include the transmux flag
added localization functionality to the Picker class to enhance user experience by providing localized strings
camel - 4322 fix the unit test error of cxfrsconsumertest
hhh - 14801 postgresql dialect should throw jdbcexception for deadlock / lockacquisitionexception / locknotavailableexception
updated database query handling and improved exception handling in HiveStatement . java to enhance code clarity and ensure robust error management across different Hive projects
[ beam - 8470 ] add usesunboundedpcollections to pardotest category .
updated HTML tags in GpsSimpleViewFragment to use " < strong > " instead of " < em > " to improve readability and
[ java ] remove unnecessary leadershiptermid parameter from joinlogasfollower method .
refactor HttpSender to use a local HttpExchange instance instead of a local HttpExchange instance to improve code readability and maintainability by redu
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
refactor method names from ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity and consistency
added null check for the tree before retrieving markers in Recipe and improved marker handling in Markers to enhance stability and prevent potential NullPointerException
xwpf : change xwpf default run style to use bigdecimal instead of float
change variable name from ` email ` to ` emails ` in ` AddressBookDoCoMoResultParser . java ` to improve clarity by
refactor exclusion handling in RawMavenResolver to use a HashSet instead of a stream to improve clarity and efficiency in managing exclusion artifacts
added error handling and initialization logic for DSX exchange information in DSXAdapters , DSXPairInfo , and DSXBaseService classes to
updated test class names in TestBlockingIO , TestParsingTable , TestResolvingIO , and TestValidatingIO to improve clarity and consistency
[ drools - 90 ] fix incremental compilation when kiemodule pom be invalid
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` to
( chore ) camel - jackson : fix typo in javadoc
hostfielddesc : do n ' t throw unknown field exception when the field be a static getter / setter .
added a new method parameter annotation for " completedStage " in DefaultNullnessAnnotations . java to ensure that the " completedStage " is nullable
adjusted the calculation for mFreezeCheckPoint in PlaybackController . java to correct the freeze check point value based on the playback duration
removed unused imports and added Whitebox access in AbstractCommonPowerMockRunner and PowerMockRunner classes to streamline code and ensure internal state is
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure the correct type
refactor indentation checks in TabsAndIndentsVisitor to improve clarity and functionality to enhance code readability and ensure correct handling of method
replaced LuceneTestCase with JUnit ' s TestCase in TestSingleTokenTokenFilter . java to align with the updated JUnit
added a wrappedText column to the HtmlProcessInformationsReport table to improve text formatting for better readability
added execution context management in JdbcStepExecutionDao , MapStepExecutionDao , and MockStepDao to enhance batch processing capabilities for better execution context
added a condition to check if the new media folder should be hidden before adding it to the root folder to ensure that only new media folders are
added null checks and widget handling in SplitPane . java to ensure proper widget management and prevent UnsupportedOperationExceptions
added handling for parameterized types in RemoveUnusedImports . java to improve type management for parameterized types in the code
updated logging statement to use the current version instead of the selected file to improve logging clarity and handle cases where no mod infos are available
changed the logger variable from instance to static in TicketGrantingTicketImpl . java to improve memory usage by avoiding unnecessary object creation
updated SQL string in PhysicalPlanTest . java to include SNAPPY ' s RLE . 81 + 12 to ensure compatibility with the latest
added a method ` isValue ( String value ) ` in ` AttrData ` and updated ` Converter ` to check for value existence to improve value
added methods to check for US _ UserDefined _ 15000 locale and character modifiers in CPlatformResponder . java and LWCToolkit
[ java ] set aeron _ publication _ connection _ timeout to prevent flakiness in test .
added a check to return false if the request URI starts with " / css " , " / images " , and " / favicon "
added assertion to verify the installation success of a wellbeing APKs to ensure that the device is rooted and the APK is
no effective change - code cleanup - remove oracle analyzer
updated the expected number of secure transport protocols from 1 to 3 in TestSimpleBodyHandler . java and TestVertxTLSBuilder . java to reflect
updated Java library paths in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest Java versions
added a flag to control the dismissal of haptic interactions in TaskViewTouchController to improve user experience by preventing unnecessary dismissal
refactor explosion cause initialization to handle Projectile and EntityThrowable to improve error handling and provide clearer context for explosion events
removed unnecessary import and setHasStableIds ( true ) in SymbolInputAdapter . java to streamline code by eliminating unnecessary dependencies
updated the Bitfinex API to use QueryParam instead of PathParam for path parameters and increased the limit bids and asks from 10 to 50 to improve
added a check to escape quotes in the result before replacing them with a single quote to ensure proper formatting of quoted strings in the output
[ hotfix ] [ runtime ] add tostring ( ) method to leaderelectiondriver
refactor SqlSessionFactoryBean to improve session management to enhance performance and maintainability of session handling logic
[ 3.0 ] tripleinvoker do n ' t throw npe when method be n ' t find in the service ( #
replaced error handling in PolygonRegionLoader from Gdx . app . error to GdxRuntimeException to improve error reporting for reading errors
added a method to check if the threadlocal Deadline is started and implemented timer handling in RawStoreProxy to improve deadline management and ensure proper
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages when a channel is closed to improve user understanding of
added null check for genres before setting the text in ItemListActivity to avoid potential NullPointerException when genres are null
[ flink - 30613 ] [ checkpointing ] fix the bug that checkpointcoordinator do not call masterhooks . reset
added unit test for prefab with collection of mapped container .
[ hotfix ] [ wal ] fix npe in walnode . getactivememtables ( )
reformatted the handle method call in Endpoint . java and added a new test case in HttpTest . java to improve code readability and ensure
update package - info . java files in the com . oracle . truffle . tutorial . background package to ensure consistency in package documentation across
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL server query behavior to ensure proper handling of escape characters in database queries and
added null checks and improved constructor parameters in CamelModule and JoobyBeanRepository to enhance code robustness and prevent potential NullPointerExceptions
replaced synchronized block with a utility method for waiting in JavaFXSEPort . java to simplify code and improve readability by utilizing a
changed the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaff
replaced ` RegionDecoderCropBehaviour ` with ` BitmapCropBehaviour ` and added a new ` createCropperBehaviour ` method
removed appName parameter from configure methods in InputRC and related classes to simplify method signatures by eliminating unnecessary parameters
add test to ensure that install / uninstall work correctly with ignore dependency .
[ java ] replacing setheadless ( true ) with addarguments ( ) for chrome test .
use value . intern ( ) to avoid memory leak
added support for " MOVE " status in the connection check to ensure proper handling of mouse events in the database
updated date formats in FixedDateFormat . java for consistency and clarity to ensure uniformity in date representation across different locales
replaced the import of ` org . apache . curator . shaded . com . google . common . collect . Lists ` with `
[ hotfix ] fix buffer release exception in hsbuffercontext . startspilling
updated permission checks for untrusted visits in plots to ensure proper permissions are granted for players with untrusted visits
do n ' t try to register a jabber protocol if it ' s not registered .
updated BasicURLNormalizer to handle curly brace conditions and added a new test for it to improve URL normalization robustness and ensure correct handling of curly
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a condition to compare the clock rate if it is zero to ensure that the clock rate is consistent between encoding configurations
added methods to retrieve and return project paths in ProjectGenerator , SeparatedProjectsGenerator , and ProjectCommand classes to improve project path management and
removed unnecessary conditional check for native digit and added validation for calendar ID to streamline code logic and ensure proper handling of calendar IDs
added a new file MSwingUtilities . java that contains utility methods for image processing to facilitate image scaling and display errors in
camel - 16400 : camel - mail should use asyncproducer so we can wait for message to be send .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure proper refreshing of configuration settings
added unit test base on user forum issue
added Main . java and ScriptRenderer . java files for scripting integration and modified jdbcJarUrls assignment to streamline the execution of scripts and
added a condition to check if ` _ inputState ` is ` __ NONE ` before processing the ` content _ type ` in ` Request .
added a check for non - negative width and height before calculating descent and implemented a method to check if an actor is a descendant to improve
updated error handling in DeploymentManager to run close hooks and added a new test for failed deployment to ensure proper context shutdown hook execution and validate the
fix wild dictionary not include item damage . close # 3740
increased the sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to allow for a longer time for thread inter
updated import statements in LoincHandler . java to use wildcard imports and modified condition to check for non - blank names to improve code read
update jollydayholidays to use getresource ( ) instead of new url constructor
added a new utility class FieldUtils with methods to retrieve and set protected fields to streamline field access and improve code maintainability by centralizing
removed conditional checks for speculative types in DeferredAttr . java and added a new DoubleStaticImport . java file with a test method to
updated layout inflation from workspace _ custom _ content to workspace _ screen and added padding for custom content to improve user interface responsiveness and
added method to update XabberAccountManager to save the last account ' s settings to ensure that accounts have the correct sync state after saving
added a new method ` setvar ` to handle setting variables with an optional help command to provide users with a way to set variable values without
[ 1.19 . x ] fix catentity not fire on animal tame ( # 8803 )
improve error message for unsigned range in windowframe
pdfbox - 4892 : improve unit test , a suggest by valerybokov
set app mode before render the page list ( fixes # 350 )
added support for building arguments in ImageFromDockerfile and created a new test class for DockerfileBuildTest to enhance functionality and ensure correctness
added a null check for threadInfos before creating new ThreadInfo instances to avoid potential NullPointerExceptions when accessing threadInfos
updated the condition for the sweep angle check in PieChartRenderer to use a constant for better readability and maintainability of the code
[ hotfix ] [ runtime ] add more log in singleinputgate for checkpoint handling .
added two new schema constants , SYNONYM , ALIAS , GLOBAL _ TEMPORARY , HIERARCHY _ TABLE ,
added a minimumSimilarity parameter to the FuzzyQuery and FuzzyTermEnum classes and updated related methods accordingly to enhance flexibility in fuzzy
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
- add support for immediateflush in outputstreamappender for 1.2 . 0 .
added additional auto configuration classes to ZipkinAutoConfiguration to ensure proper startup order for Spring Boot applications
added null check for the component parameter in JLayer . java and created a new test class bug6875716 . java to ensure robust
replaced the import of ` avro . shaded . com . google . common . base . Function ` with ` com . google . common
refactor block handling in BciBlockMapping and GraphBuilderPhase for better organization and clarity to improve code readability and maintainability by
refactor conditional checks for icon and mask handling in Label . java to improve readability and maintainability of the code
replaced intToFourBytes with Ints . toByteArray for byte array conversion in AbstractJweDecrypter and AbstractJweEncrypter
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is null
updated the type of the ` thenComparing ` method in ` Comparator ` from ` Comparator < U extends Comparable < ? super U > `
refactor DocIdSet class to improve code readability to enhance maintainability and reduce complexity in the codebase
updated the end time setting in UserRuleAnomalyFunction to use a current key value instead of a null value to ensure the anomaly result
added a try - catch block to handle NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is not thrown to prevent runtime errors
added class loader setting to the enhancer in MockFactory . java to ensure the enhancer uses the correct class loader for mocking
added a new OriginalFormat class and modified formats in ConverterWithEnumFormat . java to implement formatting and parsing functionality for enum types
replaced hardcoded date format with a constant in FileStorageUtils . java to improve maintainability and readability of date formatting
refactor JAWTRenderer class for improved performance to enhance rendering efficiency in the application
camel - 14850 - camel - aws2 - * : improve the configurability of the component - aws2 - lambda
fix uservmmanagerimpl . validateorreplacemacaddress ( ) to return the next available mac address if the mac address be not valid (
removed the check for " Authorization " header in ProxyServlet . java to simplify authorization handling logic
replaced ` submit ` method with ` execute ` in ` TraceableExecutorService ` to improve execution flow in context - based scenarios
added ` getDetails ( ) ` method and ` setDetails ( ) ` methods to multiple authentication classes to provide context - based authentication details for
updated the logic for determining ` randUsePoints ` in ` SolrTestCaseJ4 . java ` to ensure that ` randUsePoints `
replaced calls to ` appendDot ( ) ` with ` endSentence ( ) ` across multiple classes to improve clarity and consistency in sentence
updated TimeFormat methods to accept a Locale parameter across multiple classes to ensure consistent formatting of time outputs based on the specified locale
updated import statements and modified the handling of unparsed arguments in GroovyParserVisitor . java , GroovyPrinter . java , and GroovyParser . java to
added checks for negative insetPx values in Border . java to ensure proper handling of negative values to prevent runtime errors
refactor gesture state management in TouchInteractionService to use a dedicated default state to improve code clarity and maintainability by centralizing gesture state
[ llap ] use java . time . instant instead of joda - time . datetime . now ( ) . tostring ( ` ` dd
refactor openblas and openblas _ nolapack classes for improved readability to enhance maintainability and clarity of the
replaced IOUtils . closeQuietly with IOException handling in TorrentsStorage . java to improve error management and prevent potential resource leaks
added synchronization to the initTxnMgr method in SessionState . java to ensure thread safety when accessing shared resources
increased recovery timeout in AbstractDistribZkTestBase and adjusted SO _ TIMEOUT in AbstractFullDistribZkTestBase to
added a new class ` SearchResults ` to handle search results from documents to facilitate the retrieval and management of search results from documents
refactor threadCPURefresher initialization from a new Refresher instance to a single instance of ThreadsCPUView to improve code organization
initialize primitive array only if it ' s null
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to the TestBack
updated feature flags for enabling two line labels in all apps and modified AppIcon to check for app names to improve user experience by enabling
added a new API endpoint to retrieve tenant pools for the current instance to provide users with information on tenant pools available for current instance
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods in ` TopFieldCollector ` to
added support for ` isToString ( ) ` in the InlineBytecodeGenerator and created new test cases in InlineByteBuddyMockMakerTest
added logging statements to CxxCompileStep and CxxPreprocessStep to improve debugging and error handling during compilation and preprocessing processes
add stringutil . removecharacter ( string , char chartoremove ) to remove string character from the input string . ( # 16399
[ 3.0 ] fix npe when configure metadata service protocol ( # 9859 )
[ drools - 7 ] add kie - api datatransformer interface to provide a way to transform a process expression
changed the type of array elements from Object [ ] to Number [ ] [ ] in DistributionGraph . java to allow for more flexible data
modified the conditional logic in FormatStringChecker to make callbacks to sawOpcode for all opcodes and updated the index check for " Ljava /
removed unnecessary whitespace in ElectionContext . java to improve code readability and maintain consistency
refactor ITestDbTxnManager interface for improved clarity to enhance maintainability and readability of the code
refactor connection handling in DatabasePlatformFactory to use try - with - resources syntax to ensure proper resource management and prevent potential memory leaks
added testMapModel method to CodeFirstPojo and CodeFirstPojoIntf classes and implemented it in CodeFirstPojoClient to
pdfbox - 4892 : improve validation , a suggest by valerybokov
updated selection handling logic in ScaleDialog . java to improve clarity and functionality to enhance user experience by ensuring the correct selection state of scale offsets
fix nullpointerexception in itemtravelBelt . tickBelt ( player ) .
pdfbox - 4892 : break loop if there be no appearance stream , a suggest by valerybokov
replace SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to ensure insertion order is maintained during SQL command execution
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 in CancelEventTimer . java and added
updated the preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 .
added conditional logic to set all constructors to public in MainMockTransformer and created new test classes for mocking static methods with private constructors to ensure
pdfbox - 4892 : avoid unnecessary decryption if object be of type cosstring , cosdictionary , and cosarray
use java . awt . toolkit . getdefaulttoolkit ( ) to set window title .
updated depth calculation based on pixel size for better transparency handling to ensure correct depth value is assigned for 32 - bit color models
added error handling for response body reading in OkHttpDataSource to improve robustness by throwing an HttpDataSourceException for unsuccessful responses
added a new ` exit ` method in ` TopLogging ` and updated ` TopThreadGroup ` to use this new ` exit ` method to
updated the calculation of the start index in NativeRegExp . java to ensure the start index is set correctly when the regexp is not global
planner - 468 ignore test when upgrade to optaplanner 6.3 . 1
updated the index reference from ` lowIndex ` to ` highIndex ` in ` DefaultAllocator . java ` to ensure the correct high allocation is
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO , and implemented a delete method in FeedEntryDAO to ensure
change return type of appendToLabel method in AtomicCounter from void to AtomicCounter to allow method chaining in the method implementation
[ java ] implement no - op idle strategy for low - latency driver .
added handling for NOT _ MODIFIED status in CacheControlHeadersWriter and related classes to ensure cache control headers are written only when the response is
instrumentationpartialevaluationtest : replace spliceinstrumentlistener with toolevalnodefactory .
refactor paintTabArea method in SynthTabbedPaneUI to streamline painting of the tab area to improve code readability and
updated method signatures and argument handling in KrakenMarketDataService and KrakenMarketDataServiceRaw classes to improve flexibility
camel - 16400 : added fileendpoint . getfileparator ( ) and fileendpoint . isabsolute ( ) to be able to
added a new method ` build ` to ` JavaProvenance ` and updated imports in ` MavenProjectParser ` and ` JavaProvenance `
added tracing and logging for registered Hive functions , UDFs , and nondeterministic UDFs in HiveFunctionRegistry . java , and updated
increased loop iteration count from 100 to 200 in CloudStateUpdateTest . java to accommodate larger data sets for state updates
skip hint delivery for deleted cf
added a check for writable output files and formatted the error message accordingly to ensure tests are run as root and provide clearer feedback when output files
added error handling for PackageInfo retrieval in LauncherModel . java to ensure that the component ' s package is not enabled before proceeding with
server : fix db upgrade from 4.0 . 2 to 4.1 . 2
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a test for non - skippable exceptions in FaultTol
replace ` startsWith ` with ` regionMatches ` in ` LineReaderImpl . java ` to improve matching accuracy based on case insensitivity option
added global data tables and updated data table handling in Recipe . java to improve data management and ensure consistent usage of global data tables
added import for Overview and modified task dismissal logic in TaplTestsTaskbar . java to ensure tasks are properly dismissed
databaseupgradechecker : add dbupgradesystemvmtemplate interface and method to update system vm templates
removed unnecessary null checks for connection and res in LdapClient . java to simplify the code for better readability and maintainability
refactor index handling in SequenceAction . java to use a local variable to improve code readability and maintainability
do n ' t login if keyspace do n ' t exist . patch by jbellis ; review by stu hood for cassandra -
added a check to skip synthetic fields in ReflectUtils to improve performance by avoiding unnecessary processing for synthetic fields
added LoggerProvider to manage logging using SLF4J in Configuration and ApplicationController classes to improve logging capabilities and facilitate better integration
changed the type of ` builder ` and ` values ` from ` String ` to ` Object ` in ` ServerStatusCommand . java ` ,
added a deprecation warning mechanism in SpringFactory and updated tests in SpringFactoryTest to ensure compatibility with multiple glue classes that attempt to configure the spring
added a new method ` deepStart ` to the ` Startables ` class to provide a way to deep - start multiple startables
removed the ` reservePrimitiveExtensionArray ` method from the ` Shape ` interface and its implementation in ` ShapeImpl ` to simplify the interface and
added ilasertargetblock interface to the laser table , it ' s not need anymore .
simplified the condition for object name validation in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to improve code clarity and reduce unnecessary dependencies
set the expire messages period to zero in MemoryLimitTest . java to ensure that the test correctly consumes the 2 * pageSize memory
removed unnecessary null and empty checks for handlerName and norm in RequestHandlers . java to streamline code logic for better readability and maintainability
modified the logger retrieval to replace ' - ' with ' . ' in the servlet name to ensure consistent formatting of the servlet name for better read
updated import statements and refactored Python environment handling in ProjectBuildFileParser . java to improve code readability and maintainability by utilizing
updated audio format handling and frame size validation in DirectAudioDevice . java and Toolkit . java to improve error handling for invalid frame sizes and
add null check for enums before returning an Optional to avoid NullPointerException when enums is null
update error message format in CommitLogReader . java to include index information to improve clarity of error reporting for unexpected end of segment
added a policy assignment using containerScope ' s policy to enable dynamic configuration of the WebSocket session policy
updated the logic for initializing static fields in the Java2TypeScriptTranslator class to simplify the condition for initializing static fields based on the current type
updated the context creation to use a dynamic web root argument instead of a hardcoded UI _ DIR to enhance flexibility by allowing the application to
( chore ) camel - core : migrate the test to junit 5 ( # 4423 )
[ netbeans - 4687 ] use netbeans . api . editor . registry instead of netbeans . reflect . registry
updated methods in OperationFormatter , SchemaTextFormatter , BaseTextFormattingHelper , and TextFormattingHelper to use a new createHeader method to improve
replaced multiple specific imports with a wildcard import for trade DTOs and added a placeholder method for placing stop orders to simplify import statements
added buffer reset calls in ReduceRecordProcessor . java to ensure buffer state is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when setting foreground and background
updated conditional checks in FloatingDecimal . java and added a new ToString class in ToString . java to improve validation logic for decimal exponent values and
updated property type check in PropertyDescriptor . java and added a new Test7189112 . java file with property setter validation to improve type safety
removed the maxVersion parameter from the getVersions method in RealTimeGetComponent . java to simplify the version retrieval process by eliminating unnecessary
modify the origin handling in NettyRequestFactory to conditionally set the origin if the URI is not secured to ensure that the origin is
updated animation behavior in RecentsView and TaskView to utilize animate methods for modal animations to improve animation responsiveness based on the
updated error messages to include the field name in precondition checks and refactored method calls in ORCRecordReader . java to improve clarity
added new samples for HLS in DemoUtil . java to enhance video processing capabilities in the application
updated Hibernate persistence interfaces and variable names for consistency in naming conventions to improve code readability and maintainability by standardizing naming conventions
updated log paths to use the correct class name for ExecRPCInvoker and WritableRpcEngine to ensure accurate logging context for better troubleshoot
added diagnostic logging and a new test for union types and fixed fields in TestSpecificCompiler . java to improve error handling and validation of generated code
refactor WebSocket session creation logic and add a test for session closure to ensure proper session management and validate the behavior when not logged in
updated delay values and method names in multiple services for improved clarity to enhance code readability and maintainability by using more descriptive names
replaced multiple occurrences of " OpenSymphony Group " with " Apache Struts " in XmlConfigurationProvider . java and LocationAttributes . java
modified the handling of the video track stop logic in WebCamInputPanel . java to ensure proper cleanup of video tracks when the stream is
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
updated import statements in GMLExamples . java to include necessary geotools classes to streamline dependencies and ensure compatibility with the latest geot
replaced ` s . substream ( 200 ) ` with ` s . skip ( 200 ) ` in ` TargetType58 . java `
hhh - 10956 - add getidentifiergenerator ( ) to simplevalue to avoid nullpointerexception
change key binding from findfulltext to downloadfulltext . fix # 4560 ( # 4567 )
refactor URI registration logic to include host and port information in the URI list to enhance the clarity and functionality of URI handling in the application
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for non - blank OSDb hash before retrieving it and updated the parameters list to ensure that the hash is not blank before accessing
added a method to transfer tokens and updated its usage in RuntimeImpl . java to ensure tokens are correctly transfered based on call token values and
camel - 15836 : camel - ftp - allow to delete file in step -wise mode . thanks to daniel for the
updated the default search bind password from ` getSearchBindDN ` to ` getSearchBindPassword ` to ensure the correct password is used for LDAP operations
added assertions for join results and modified join logic in MapJoinOperator and HybridHashTableContainer to ensure correct behavior of hybrid hash joins and
updated HTTPSPDYAsyncConnectionFactory to accept an AsyncEndPoint parameter and added getter methods for local , host , port , and remote addresses to
added ` putExtra ( " id " , tweetId ) ` to various adapter classes to ensure the correct tweet ID is passed in the intent
refactor disconnect handling in HttpURLConnection by introducing a separate disconnectWeb method to improve code clarity and maintainability by encapsulating the disconnect logic
replaced ` int ` with ` AtomicInteger ` for tracking child counts in ` TraceContext ` and updated the test for ` NUM _ CHILD
updated various classes related to JWT , RESPONSE , and remote address resolution to improve code consistency and maintainability across the project
updated the test annotation to enable the test in ` ValueTypeTests . java ` to specify that the test should not be executed when it is disabled
resolve split - packages : move everything from kie - internal under org . kie . api : move org . kie . internal
updated the superclass constructor calls from IN to NOT _ IN in multiple predicate classes to use the NOT _ IN constant instead of IN to ensure consistency
improve error message when user try to read the account name .
added null check for witnessService before validating witness permission to prevent potential NullPointerException when witnessService is not initialized
updated the way taggedCol is constructed in JoinDesc . java to use getExprString ( ) to ensure the correct expression string is used for
added a conditional check before setting the Java documentation item in AbstractJavaClassTranslator . java to ensure that the Java documentation item is only set if
updated references to ` holderMethod ` , ` holderKlass ` , ` holderMetadata ` , ` holderKlass ` , and ` headerSize
replaced multiple instances of ` revalidate ( ) ` with ` revalidateWithAnimationSafety ( ) ` in the Tabs class to
[ hotfix ] [ connector / kafka ] fix unsupportedoperationexception in bulkformat
updated the calculation of the y - coordinate in the Polygon class to use a temporary variable to improve clarity and maintainability of the code
added import for Configuration and modified cache creation logic in CacheConfigTest . java to ensure compatibility with the updated cache configuration type
modified the condition in InheritanceUnsafeGetResource . java and added a new Bug2974855 . java file with a test method to
refactor ShadowCookieManager for improved cookie management to enhance performance and maintainability of cookie handling logic
added a configuration option for disabling external table dropping in Hive to maintain backward compatibility during storage operations
updated conditional statements in Stage . java and adjusted drawing position in ProgressBar . java to improve code clarity and ensure proper positioning of the background
cache byte array support for llvmlanguage to reduce memory allocation .
updated PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windows
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the login URL loading logic to allow dynamic configuration of
updated exception message to use the correct parameter name instead of the parameter array to improve clarity of error messages for better debugging
updated the @ RequestParam annotation for the ' after ' parameter in AuditEventsMvcEndpoint . java and modified tests in AuditEventsMvcEndpointTests .
renamed ` ExponentialTimer ` to ` PreciseThroughputTimer ` and updated related classes accordingly to clarify the purpose of the timer
added functionality to remove and delete a soft body in the btSoftRigidDynamicsWorld to ensure proper resource management and prevent memory leak
[ hotfix ] [ table - common ] make source / outputformat / inputformatprovider public .
updated logging statements in ZeppelinHubClient , ZeppelinWebsocket , and ZeppelinhubWebsocket to
[ jingle ] add test to ensure that jingle namespace be not redundant .
add a null check for redplasma to the statcrafting so that it do n ' t crash .
added HTTP request headers handling in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to ensure
refactor member and deny check logic in Remove . java for clarity to improve readability and maintainability of the code
updated the delimiter and string formatting in SimpleReport . java to correct the syntax and improve readability of the output
removed the option to ignore symbol files in JavapTask and added a new test class T6863746 to streamline the task
renamed TickerDemo class to StreamingTickerDemo and updated related references accordingly to improve clarity and consistency in naming conventions
added null checks for contract and its address in Runtime . java to improve error handling and prevent potential null pointer exceptions
g3d - 3d : only create input3d if not in applet mode
added an @ Ignore annotation to the KinesisIntegrationTests class to temporarily disable tests that are not ready for execution
scripttagpayloadreader : do n ' t throw exception on parse failure
added the ` getRepositoryFactoryBeanClassName ` method to the ` JpaRepositoryConfigExtension ` class to provide a more descriptive class name for
changed the return types of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to provide more
replaced instances of ' this ' with a reference to IOSGLES20 in IOSGLES20 . java to improve code readability and
deleted the UploadPathActivity . java file to remove unused activity to streamline the codebase
modified return statements in SimpleTextFieldsReader to include indexOptions for totalTermFreq and sumTotalTermFreq to ensure correct frequency retrieval based on
fix : fix issue where a constructor be declare with an implicit source start of - 1 ( # 189 )
added a database parameter to the populateValidateNullableIfNeeded , populateValidatePrimaryKeyIfNeeded , and populateValidateUniqueIfNeeded methods in ColumnSnapshotGenerator . java
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the application configuration
removed unnecessary IndexOptions reference in DefaultIndexingChain and updated iterator assignment in PointInSetQuery to streamline code and improve clarity by elim
removed the substring method from rawName in SchematicHandler . java to simplify the code and improve readability
added a switch statement to handle specific collection types in AbstractCollectionAssert and updated the test cases in CollectionAssert _ isUnmodifiable _ Test to improve
changed the enum Option from static to instance level to allow multiple instances of ProcessExecutor with different options
added a confirmation dialog for posting with a twitlonger text in Compose . java and removed it from ComposeActivity . java
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` FileOperationsHelper . toggleKeepInSync ( )
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` in ` ImageUtil
added new classes ` ControllerCounter ` and ` DBCallback ` to handle database operations to facilitate tracking and management of controller - related
added ' final ' modifier to the ticketId parameter in deleteTicket method to improve code readability and prevent unintended modification of the parameter
added a new file FlywayMigrationRunner . java to run Flyway migration from Spring XML to facilitate the migration of
updated HashMap checks to use size = = 0 instead of isEmpty ( ) and added a new NotEmptyHashMap class to improve code clarity and
updated the version number from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to
updated CompressionCodec to accept nullable modifiers and added a warning log for missing ORC compression modifiers to enhance flexibility in handling compression modifiers and improve
refactor main value retrieval and add error handling in LauncherHelper . java and TestHelper . java to improve robustness and provide clearer
rename test classes from " BasicErrorControllerIntegrationTest " and " SampleDataGemFireApplicationTest " to " SampleDataGemFire
update hotspotprofilinginfo to support compiler ir size instead of node count
remove the clone ( ) method from cellcopypolicy , use the new constructor instead
added a static method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and updated its usage in ` Launcher `
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
refactor IconRecentsView to use a local Resources object instead of a direct resource reference to improve code readability and maintainability by redu
deleted the AddAdapter . java file to remove unused code related to launcher functionality
fix a bug in nonstaticlifter that could cause an npe if the constructor code list be empty .
refactored the constructor of ` OpTraitsRulesProcFactory ` to include a ` processSortCols ` parameter and adjusted the logic for handling
refactor the logging test logic by introducing a looper method to check for message presence to improve clarity and maintainability of the test
added a print statement to the Java2TypeScriptTranslator class to enhance the output format for better readability
updated SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the latest release version of
added a conditional check for the SPRING _ AOP _ PROXY _ TARGET _ CLASS property in TraceEnvironmentPostProcessor . java to ensure
removed the singletonLock variable and replaced it with a direct call to BOOTSTRAP _ LOCK in TypeCachingBytecodeGenerator to simplify the
updated callback methods in CallbackActionExamples . java to include ` withCallbackClass ` and ` respond ` and ` forward ` to enhance functionality by
add ` ` append ' ' option to suitehtmlreporter to make it easy to add table header for each suite .
updated MavenExecutionContextView and MavenRepositoryMirror to improve mirror handling and streamlined repository mapping to enhance code clarity and maintainability while ensuring
added a ` name ` parameter to ` BuildRuleSourcePath ` and ` PathSourcePath ` classes , along with corresponding constructors and methods ,
replaced ` equals ` method with ` matches ` for client matching in ` OAuth20CallbackAuthorizeEndpointController ` to improve the accuracy of client
refactor annotation handling by introducing a new ` toArray ` method in ` AnnotationParser ` to improve code readability and reusability by
updated method calls in UserManagerCompatVL to use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawable
updated default value for the line separator in GlobalConfiguration . java to provide clearer output formatting options for better user experience
fix configurationmanagerutils . isimplementinginterface and configurationmanagerutils . isderivedclass for bestpathaccuracytracker .
sanitize the input before saving them in the model to ensure only valid input fields are stored in the model
chore : update java and python dependency ( # 236 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` exception to improve error handling and ensure the correct
refactor CountersReader to improve code readability to enhance maintainability and reduce complexity in the codebase
refactor container type handling in AllAppsRecyclerView and DeepShortcutsContainer for improved clarity and functionality to enhance code readability and
hbase - 25836 remove deprecated config key hbase . ipc . server . allocator . max . buffer . count and hbase
improve test coverage for window and join query
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types to improve code clarity and maintainability by central
pdfbox - 4071 : fix typo find by codespell on fossies . org
mow - 107 fix label positioning in latex rendering
hbase - 25813 increase the flush size of regionsplitpolicy from 2 to 2 * initialsize ( # 258 )
removed unnecessary model loading methods in LauncherClings . java to streamline code and improve performance by eliminating unnecessary state management
changed the declaration of keys and updates to lists in ManagedSelector . java and updated the initialization of updatesAt to ensure proper handling of data structures
added a method to set excluded datasources in SpringDataSourceBeanPostProcessor to allow users to exclude specific Spring datasource beans from processing
make sure undo info be store when delete column in table
( chore ) camel - kinesis : align method visibility with the one declare in the class
refactor channel handling in VelbusSensorHandler to use a loop for both pressed and released channels to improve code readability and maintainability
disabled the ` LocalCacheSelectorCode ` and modified the ` BoundedLocalCache ` logic to disable tests due to unfavorable benchmarks
added a test for illegal database names and improved error handling in the IoTDBSessionSimpleIT and PartialPath classes to ensure that illegal database
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly added during garbage collection
rename ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx ` and introduce a new method ` getHorizontalMarginPx
reformatted code for consistency and clarity in CharTokenizer . java to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
server : fix xenservernetworklabel to xennetworklabel in apiconstants . java ( # 5358 )
updated libgdxVersion and libgdxNightlyVersion from " 1.5 . 5 " to " 1.5 . 6
replaced the private Set < String > metricNames with a ConcurrentHashMap . newKeySet ( ) in SolrCore . java to improve performance by
replaced ` URI ` with ` Path ` for handling manifest file paths in ` MavenManifestFactory . java ` to improve code clarity and
replace direct string comparison for " mac " with a static final boolean variable to improve code readability and maintainability by reducing duplication
[ hotfix ] [ table - common ] fix typo in jdbcaggregationrepository
added methods to clear and add slots to the slotList in the Frame class to ensure that modifications to the slotList do not affect the new
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predCount variable after tests
added imports for AbstractConfiguration and ConfigurationManager , and implemented the mergeProperties method in ConfigurationSpringInitializer to enhance configuration handling by merging configuration properties
updated logging configuration to use the SLF4J logger instead of the classic logger to ensure compatibility with the Logback framework and improve error handling
replaced HashMap with LinkedHashMap in multiple classes to maintain the order of elements during iteration
added logic to retrieve the JDBC handler map if the type is a class and its superclass is not Object to ensure proper handling of type handlers by
added debug logging for item writers in Hibernate , JPA , FlatFile , and Jms item writers to facilitate troublesh
updated the parsing logic in LocaleUtils to remove the ' ; ' character from the wellformed string before parsing to ensure that the last character is
modified ` Http2ServerResponseImpl ` and ` VertxHttp2Handler ` to execute on an IO thread using ` handlerContext ` to
make xssfevaluationworkbook . gettable ( ) return xssftable or null if the sheet do not have a table
updated schema text detail type checks and simplified symbol assignment in BaseSchemaTextFormatter . java to enhance clarity and maintainability of schema text handling
updated MongoFactoryBean references to MongoClientFactoryBean in MongoNamespaceReplicaSetTests . java to ensure compatibility with the new MongoDB client structure
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to ensure insertion order is maintained for better iteration
added a check for properly cloned table scan operations in SkewJoinOptimizer . java to ensure that the join operation tree is properly cloned before proceed
added a null check for the client ID before retrieving it in DynamicRegistrationClientConfigurationService . java and updated imports in JsonFileRegisteredClientService
fix bug where achievements list do n ' t clear when remove a stat
initialize userName , productName , and productVersion with an empty string in MutableDatabaseInfo . java and MutableJdbcDriverInfo . java to ensure
updated permission strings from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissions
added a new method ` readLongs ` to ` ByteBuffersDataInput ` and ` ByteBuffersIndexInput ` for reading long data to enhance
updated file time fields to include second and millisecond precision in UnixFileAttributes . java and improved time conversion in Basic . java to enhance accuracy
added a new file TestNoEagerReclaimOfHumongousRegions . java that implements a garbage collection test for humongous
added search bar visibility control based on user preferences in AllAppsContainerView . java to enhance user experience by hiding the search bar when the
updated method call from ` env . router ( ) ` to ` env . routes ( ) ` in ` EnvRouterFeature . java ` to
added null checks for ` cur ` and ` next ` in ` LineChartRenderer . java ` to prevent potential NullPointerExceptions during rendering
added a new action for reloading the current page in the menu to enhance user experience by allowing users to refresh the displayed page
changed logging level from info to warn for missing entries in SQLManager to provide clearer warning messages when missing entries do not exist
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that the configuration type has a selected version to prevent runtime
[ geos - 7890 ] use serviceloader to load geoserver extension
added a call to closeTable ( ) in HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added a method to stop the statement executor in JdbcConnector . java and updated HiveViewImpl . java with logging in HiveViewImpl . java
updated features in DocumentFactory and related classes to disallow doctype declaration and nonvalidating external DTD to enhance XML parsing capabilities by disabling external
8274560 : jdbtest . teststopthreadidtest . java fail on window due to miss application . exit prompt
added a method ` getType ` to ` ShadowContentResolver ` to retrieve the type of a URI to enhance the functionality of ` ShadowContentResolver
updated the removal logic in ExpressionThreadPoolManager to use a Future < ? > instead of a Runnable to improve clarity and correctness in handling
updated the property key from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the correct HTTP port
replaced ` addCaptureListener ( new ChangeListener ( ) ) ` with ` addListener ( new ChangeListener ( ) ) ` in ` Dialog
increased the default batch size from 10 to 3 processors in NewSessionQueueOptions . java to optimize memory usage based on available processors
[ hotfix ] [ runtime ] log error when establishing resource manager connection in task executor
added a null check for classFile and refactored exception handling in LambdaRewriter . java to improve error handling clarity and maintainability by
updated the exception message in the ProgressBar . java file to include the minimum and maximum values to improve error reporting for better debugging
updated method signatures in multiple classes to include an owner parameter for message handling to improve clarity and functionality of message processing by associating messages with
added new interfaces ` Cursor ` and ` Database ` , and ` Row ` , along with a new abstract classes ` Database ` and ` Row
updated multiple assertion classes for consistency in naming conventions to improve code readability and maintainability
# 1181 - enh : add setbeanid ( ) method to ebeanserver ... provide ability to convert id to bean type
updated the xsl file path for the add - menu - to - site - descriptor XSLT transformation to ensure the correct XSLT is used for site descriptor
added a matchers list to manage request matchers in HttpSecurity . java to enhance the flexibility of request matching by allowing multiple matchers
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing of ContactResource objects
move getrequest ( ) into abstractprocessor so it can be use by other processor .
updated logging messages in FileManager . java for clarity and improved error handling to enhance readability and provide more informative logging for saving
reset mock control in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper resource management and cleanup after tests
updated import statements and simplified method calls in SyntaxTests . java to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
use fallbackparser in parserdecorator instead of emptyparser in tika - http : / / github . com / tika / tika /
improve security check for minecraftclient / minecraftserver
removed unused variables ' serverUrl ' , ' username ' , ' newAccountName ' , and ' password ' in AccountUtils , IndexedForest
updated parameter retrieval from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
added a new test method ` testJsxComment ` and modified ` Parser ` and ` DumpingVisitor ` to handle comment tokens to improve
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for test b / 195263971
added a new test method to verify error handling when Buck configuration is missing to ensure that the application correctly handles errors when the Buck configuration
added physical memory checks and error handling in TestStringBufferAndBuilderGrowth . java to ensure proper resource allocation and provide user feedback when the
marked ConversionService as deprecated and updated conversion logic in MapToLocalDateConverter to ensure compatibility with the latest ConversionService features and improve code
added a success flag to HiveMetaStoreClient to indicate the operation was successful
updated the condition for the include value in ResourceReferenceInfo . java and changed the type of the bundle in Dstu2BundleFactoryTest
added support for " amp . twimg . com / v / " in tweet detection logic to enhance user experience by allowing both vine and
mark the AreaReference class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
added assertions and modified reference kind handling in MemberName . java to improve error handling and ensure correct reference kind management
changed the default value of __ submitKeyUpdates from " false " to " true " and added synchronization to runChange method to ensure thread safety
simplified the conditional check for MouseEvent in EditNodeTextField . java to improve code readability and maintainability
camel - 1770 : fixed bean expression with static method . thanks to daniel for the patch .
http : / / issues . apache . org / jira / browse / amq - 4682 - fix javadoc issue
refactor exception handling in AgentRunnerTest to use a lambda expression to improve readability and maintainability of the test code
add a method to provide descriptions for various Maven project properties to enhance clarity and usability of the Maven project property management functionality
refactor face tracking logic in ObjLoader . java to improve clarity and maintainability to enhance code readability and ensure accurate tracking of face
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future updates
[ ci ] use separate lock instead of reentrantlock
updated the ` getBomReference ` method to include ` mavenPackaging ` as a parameter in the ` getBomReference ` method to support
replace back ( ) method with back ( evt . getComponent ( ) ) in UIBuilder . java to ensure back is called on the correct component
refactor certificate verification logic in SASLAuthentication . java for clarity to improve readability and maintainability of the code
updated generic type annotations in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to enhance type safety and improve code clarity
replaced instances of ` NutchConf . get ( ) ` with ` getConf ( ) ` in multiple classes to standardize configuration retrieval
bug fix : when sheet be unselected then only select the late stub
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID for external use
added null checks before setting time interval for nodes and edges in ImportContainerImpl . java to avoid potential NullPointerExceptions when setting time interval
updated command in MockServerContainer to use " - serverPort " instead of " - logLevel INFO " to streamline server configuration for improved
updated error logging to include exception message to improve error reporting for better debugging
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` in the ` DispositionProcessor ` class to utilize the
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
update file path handling in DefaultPackageScanResourceResolverTest to use File . separator for better cross - platform compatibility to ensure consistent file path formatting
added new imports and a method ` alternativePath ( ) ` in ` ExpectNewDemo . java ` to provide functionality for alternative file paths and
replaced ` input . init ( ) ` with ` getFirstFilter ( ) . init ( ) ` in ` LogEntryParseTester . java
added a protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security by restricting buffer alignment operations
added dispose methods for mesh , batch , and texture in WaterRipples class to ensure proper resource management and prevent memory leaks
added a configuration option to disable unsafe external table operations in HiveConf . java and implemented logic in DynamicPartitionPruningOptimization . java to
updated the authorization header description in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
added FLAG _ SHOW _ WALLPAPER to the window in Launcher . java and updated wallpaper offsets in Workspace . java to
updated SybaseASADatabase return values and modified SequenceSnapshotGenerator and CreateSequenceGenerator to include a check for SybaseASADatabase to
nifi - 1181 : ensure that the driver / database handle the commit / rollback when set autocommit to false . this close #
added file creation checks and assertions for master and slave XSLT directories in SnapPuller and TestReplicationHandler to ensure proper directory structure and error
updated the AppTargetId from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure the correct launcher
updated framer . frame method to accept an output ByteBuf instead of a raw ByteBuf to improve flexibility in frame handling by allowing output to be
removed unnecessary parameters from constructor calls in various classes to simplify code and improve readability by eliminating unnecessary complexity
updated the description of the GenericUDFStringToMap class and added an extended message to clarify the purpose of the map creation process and
updated PlainFormatter to use TemporalUnit for improved date formatting to enhance code clarity and ensure proper truncation of date values
replaced the TIMEOUT _ MS constant with a RETRY _ CLOSE _ TIMEOUT _ MS and added a retry close method in AgentRunner . java
hhh - 14850 optimize classloadingstrategyhelper . useslookup by use reflection instead of reflection .
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
corrected a typo in the debug log message from " Closing " to " New " in HiveProtoLoggingHook . java to ensure
ignore samplingnamingtest until we can fix it
updated the exception message for IllegalArgumentException in GridLayout . java to clarify that rows and columns must be greater than zero to improve error cl
updated string concatenation in DecisionNode and WagonCART classes for consistency and clarity to improve code readability and maintainability by using
added support for sorting BoundSheetRecord based on BOF position in XLS2CSVmra and TestBOFRecord classes to enhance the functionality
refactor impulse calculations to include start and end thrust values in ThrustCurveMotor . java to improve accuracy of impulse
nifty jme : fix niftyjmedisplay to pass the inputmanager to the inputsystem
[ gr - 32913 ] fix universebuilder . getinstanceidentityhashcodeoffset ( ) return - 1 when use explicit identity hash code
remove block . getmesh ( ) deprecate in favor of block . generatemesh ( )
[ hotfix ] fix typo in yarntaskmanagerrunner
added a new option for empty word options and modified matchers initialization in LineReaderImpl to handle cases when empty word options are provided , enhan
do n ' t write commit log when push view replica update
added auto - open functionality in CaptureActivity and updated result handler implementations in ResultHandler and URIResultHandler to enhance user experience by allowing auto -
added a test for batching in JoinedTableTest . java and modified additional properties in JoinedTableTest . java to improve test coverage
added a check for EntityExistsException before logging errors in JpaPersistenceService . java to improve error handling for duplicate timestamps during item persistence
removed the deprecated ` format ` option and its usage from multiple classes to streamline the codebase by eliminating unused options
removed the save ( ) method call from PMS . java to streamline the code by eliminating unnecessary operations
added a check for ` mBackKeyListener ` before executing the back key action in ` ExtendedEditText . java ` to ensure that the
refactored the capacity calculation in AbstractStringBuilder and added a new Capacity class for testing to improve code clarity and facilitate testing
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to enhance note
added support for handling endnotes in XWPFDocument , XWPFParagraph , XWPFRelation , and XWPFWordExtractor
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event details for better context in authentication transactions
add a test to make sure gdal version be available
added a new file ` Lifecycle . java ` that implements network error handling and displays a connection error dialog to provide a mechanism for managing network errors
deviantart ripper now download on 404
removed unused imports and improved type casting in BodyTubeShapes and RocketFigure classes to streamline code and enhance clarity by elim
added surface scaling logic and modified viewport and scissor calculations in PJOGL . java to improve rendering performance and ensure correct pixel scaling based
auto - select project offline if pub . dartlang . org be unavailable ( # 5351 )
replaced ` PackedInts ` usage with ` BlockPackedWriter ` in ` DiskDocValuesConsumer . java ` to optimize memory usage
refactor DefaultStatusRoute class to use originatingType instead of status directly and update routesByStatus to use SortedSet to improve clarity and
removed unused imports and modified data handling logic in GoAwayTest . java to streamline code and improve readability by eliminating unnecessary
added functionality to populate and set properties for ` java . util . Map ` and ` java . util . FluentBean ` in ` ReflectionUtils `
updated BlockingHttpEndpoint to use CharStreams and introduced a new HttpResponse class for HTTP response handling to improve code clarity and ensure non - null
( chore ) camel - core : filesorter unit test fix
updated print statement to use ` getLastAppearedTaskId ( ) ` instead of ` mLastAppearedTaskTarget ` to improve cl
added support for pdf conformance and write image scaling information in the RtfDocumentSettings class to enhance document configuration options for better image processing
added conditional handling for aggregate function name in TSServiceImpl . java to improve flexibility in processing aggregate functions based on SQL parameter
updated test classes to extend ` WithNestedTests ` instead of ` LuceneTestCase ` and added cleanup methods to improve test structure and ensure
added functionality to select and set the XCap server URI based on registration status to enhance user experience by allowing dynamic configuration of the XCap server
ww - 4340 add struts . handle . exception to allow custom exception handling to work in dev mode
added stopEditing methods to CodenameOneImplementation , Display , TextArea , and AndroidImplementation classes to enable better control over text editing behavior
nifi - 259 : fix npe in controlrate . getgroup ( ) when groupingattributename be null
updated the ` showDialog ` method to handle a new ` isNewComponent ` boolean and added a ` alwaysOpenPreset ` checkbox to enhance component
added error handling to send messages to the client in ChatAnnotation . java to ensure thread safety when sending messages to the client
added a conditional check for Windows OS in HTMLDataFlavorTest . java to ensure the test is only run on Microsoft Windows to avoid errors
added SQL _ SERVER _ SNAPSHOT transaction isolation level to the TransactionIsolationLevel enum to support database snapshotting in the application
modified the way recids are offered in AsyncWriteEngine to improve responsiveness by allowing more time for recids to be added
use java . util . zip . zipfile instead of jrecompat in all resource set
added a null check for the command class before processing services to avoid potential NullPointerExceptions when the command class is not set
set default disk failure policy from best _ effort to ignore . patch by jbellis ; review by brandonwilliams for cassandra
remove unnecessary public access modifier . no functional change .
fix filter in peerdiscoveryagent to handle ipv4 address correctly .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to streamline the code by eliminating unused method
updated import statements in PinotSegmentRebalancer . java and modified computePartitionAssignment method call to include a new ClusterDataCache instance to enhance
douniaberrada : remove the docker container delete method . it be no longer use .
refactor DefaultSeleneseCommand to improve parsing logic and add test cases for command parsing to enhance error handling and ensure correctness of command
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
update schema reference handling to use Components . COMPONENTS _ SCHEMAS _ REF instead of hardcoded names to improve code maintainability and
updated the ` EntityDeletedEvent ` class to utilize ` JsonUtils ` for serialization and improved type safety to enhance code clarity and
added GOP handling in FormatConfiguration . java and updated related imports in DLNAMediaInfo . java and LibMediaInfoParser .
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate testing of the return type
added locking mechanism for configuration operations in ParseConfigUtils . java to ensure thread safety when accessing shared resources
make minmaxvaluebasedselectionorderbycombineoperator use acquirereleasecolumnssegmentoperator to release memory
simonstewart : unignoring a few more test in the firefox driver
updated method signatures and return types in HasAndroidDeviceDetails . java to improve clarity and structure to enhance code readability and provide more detailed
do n ' t call getprojectstats ( ) if the bug be n ' t dead
updated color handling for disabled labels in ImportPanel . java to ensure consistent color representation for GTK scenarios
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code for better readability and maintainability
added logic to return a date in the future if no weekly actions are specified to ensure that the scheduled action returns a date in the future
replaced the uploadButton with a actionMenu for enabling the single upload feature to streamline the user interface by utilizing the action menu
updated multiple classes related to security metadata to improve code organization and maintainability
added ` loadMetaData ` method implementations in ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading of exchange metadata
added JSON serialization for Writable objects in CrawlDbReader . java to enable proper handling and serialization of Writable objects in JSON output
removed the private static class TesterRequest and updated import statements in TestJaspicBasicAuthenticator . java to simplify code by eliminating
updated the component annotation to include a service and configuration pid to enhance component configuration management for MDNS discovery
added null check before scrolling to position in ChatViewerFragment to prevent potential NullPointerException when messageItem is null
refactor ForkJoinPool initialization in BPIndexReorderer and add a new ForkJoinWorkerThread in TestBPIndexReorderer
removed assertions checking for dependency dependencies for DATANODE and NAMENODE in RoleCommandOrderTest . java to streamline test by eliminating
added restoreLocalInfoFromTableInfo ( ) and dedupWithTableInfo ( ) methods to PartInfo . java to ensure tableInfo is not null
formatted code for consistency across multiple Java files to improve code readability and maintainability
added matrix transformation to sprite batch in BitmapFontTest . java to ensure proper rendering of logo sprite and its positioning
[ hotfix ] [ python ] exclude built - in aggregate from streamphysicalpythongroupwindowaggregaterule
removed the ` hasPendingEcho ` volatile and modified related methods in ` EndpointState ` , ` Gossiper ` , and ` Server
add method to get unreachable token owner . patch by brandonwilliams , review by jbellis for cassandra - 1487
do n ' t change to multiplication in geosymbolicnode . isvariable ( ) ( fixes # 374 )
refactor content type handling in FormAuthenticator and SavedRequest classes to ensure the correct content type is set based on the request ' s content
changed variable access modifiers from static to instance variables for display and local environment , and added null checks for localEnv , device , and config to
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
replaced ` Object ` with ` ReentrantReadWriteLock ` for lock management in ` EnvironmentImpl . java ` to improve thread safety
added a test method to read an identity provider in a specific zone using an OAuth access token to ensure that the identity provider can be read in
updated job scheduling to use an ExpireJob in ObjectTypeNode . java and modified timestamp handling in PointInTimeTrigger . java to improve job
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
fix ( rebalance ) : send heartbeat to all broker when rebalance topic change
chore ( core ) : make cairo detached mkdir mode configurable ( # 509 )
[ java ] add a test to verify that the follower do not remain stable when there be a slow follower .
updated default label pattern from " [ authors3 ] [ year ] " to " [ auth ] [ year ] " in JabRefPreferences
updated ` DBinaryDescription ` , ` DLibraryDescription ` , and ` DTestDescription ` to utilize ` CxxPlatforms `
refactor GoogleCloudAPI to use an OAuth client service instead of a boolean initialized flag to improve resource management and ensure proper disposal of services
camel - 16400 : camel - core - optimize to delete done file on completion if it have dynamic file name .
added a configuration option to reopen readers in SolrConfig . java and modified the condition in SolrCore . java to allow users to control reader reopen
[ freeplane ] add dialect version to map writer
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding test cases in ` UpdateTests ` to enable
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor assertions in AddConfigWidgetTest and RequestPinItemTest to use lambda expressions instead of an abstract class to improve code readability and
replaced ` TermQuery ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` to improve search performance by using a
removed unused imports related to Java ' s invoke package from ConcurrentClassLoadingTest . java to clean up the code and improve readability
added a new method ` providesDirectNearbyUploadPreferences ` to the ` CommonsApplicationModule ` class to provide shared preferences for nearby
added support for the ` sysDummy1 ` database mode in the ` Parser ` , ` Mode ` , and ` TestCompatibility ` classes to
refactor logging statements in TraceGatewayEnvironmentPostProcessor and add a new sampler auto - configuration in SamplerAutoConfiguration to improve code readability
added lastPid tracking and a method to retrieve it in POIXMLProperties . java , and updated test cases in TestPOIXMLProperties
tiff : fix for negative infinity nodata in geotiffreader
updated import statements and refactored the executeDriver method in CliDriver . java to improve error handling and streamline the process of command execution
updated MockRestAdapter to use Scheduler instead of Executor for thread - safe execution to improve responsiveness and performance of the MockRestAdapter by
[ type : refactor ] optimize ruleconditionmapper by partition rule id set
added a method ` addExitDescription ` to ` ExitStatus ` and updated references in ` AbstractJob ` , ` AbstractStep ` , and
fix the multiblock render issue when the player click on the right - click block .
renamed ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity by using a more descriptive variable name
removed unnecessary import statement in PlotConfiguration . java to streamline code by eliminating unnecessary dependencies
defaultiostream : add ok and cancel action to the alert view
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in parameter naming
removed an assertion that checks if the message is null in AdvServiceTest . java to ensure that the message retrieval logic behaves correctly in
updated key handling in MappingMongoConverter to properly escape and convert map keys to strings to improve key conversion accuracy and ensure proper handling of custom write
updated logging statement formatting in NearbyMapFragment . java to improve code readability and maintain consistency in log output
camel - 16400 : camel - jbang - show deprecated option from command line instead of javaType option .
added null check for terms in FuzzyLikeThisQuery and implemented a test for non - existing fields to improve robustness by preventing null
updated the ` writeApplicationsLinks ` method to accept a boolean parameter for better control of the tabular list to enhance flexibility in displaying application links
( scott phillips ) remove dependency on dspace . utils from createmissingidentifiers
updated assignBytes method calls to use bw . getLength ( ) instead of bytes . length to ensure correct length is used for byte assignment
changed the method signature of ` getDisplayScript ` from abstract to non - abstract to provide a default implementation that returns ` null ` for the method
danielwagnerhall : use the same sequence a keytopress / keytorelease instead of the same key to
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
added a condition to wait if no active interfaces are available in NetworkConfigurationWatcher . java and added null checks in NetworkManagerListenerImpl . java
refactor HSSFWorkbook to utilize a new method for retrieving embedded objects from a shape container to improve code readability and maintainability
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve readability
replaced the initialization of hostParams with roleParams for better clarity to improve code readability and maintainability by using a more descriptive
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbol fonts
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
refactor calendar usage in LiveTvGuideActivity to use a dedicated mCurrentGuideStart Calendar instance to improve code clarity and maintainability by
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` , and added new test classes ` Common
added dlopen libraries for freetype and fontmanager in JREUtils . java to ensure proper loading of shared resources for the application
refactor function parsing logic to improve clarity and maintainability to enhance code readability and ensure proper handling of multi - variable functions
loop safepoint elimination : add guard for unsigned range guard
fix dataflow analysis for ` instanceof ` method .
added a new ` LocalizedString ` class and updated methods in ` Attr ` , ` Resolve ` , and ` T6758789
added a new boolean property ` disableClasspathSearch ` and its getter / setter in ` ServerConfig ` , and modified the condition in ` Default
made the formats array and its elements final in DataLine . java to enforce immutability and prevent unintended modifications to the formats
updated the default retries value from 0 to 2 in Reference . java and changed the corresponding test assertion from 2 to 1 in AnnotationPropertyValuesAdapter
added support for a settings file in TexturePacker to enhance the texture packing functionality by allowing customizable settings
added text views for uploaded images and used by wiki in AchievementsFragment . java to improve user experience by providing clearer feedback on
added annotation processing tests in TranslatingJavacPhaseTracerTest . java to improve test coverage for annotation processing functionality
added ` CategoryInfo ` class and modified ` CategoryInterface ` and ` MwQueryPage ` to include ` categoryinfo ` to enhance category
updated assertion messages for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error reporting
added accessibility support and refactored timeout alarm logic in TaskbarStashController . java to enhance accessibility support and improve code maintain
added a check for the ' ^ ' character in the signature validation logic to ensure that NoSuchElementException is thrown when the signature has already thrown
updated access flags in ClassVisitorDriverFromElement and added tests for generic interface signatures and enum stubbing in StubJarTest to ensure correct access
added null checks and improved null handling in IntervalFilter and LowpassIntervalsSource classes to enhance code robustness and prevent potential NullPointerExceptions
added testEntrySetIteratorLastHashNext and testEntrySetIteratorLastNext methods to validate iterator behavior to ensure proper handling of NoSuchElementException in the
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization
changed the timestamp type from Instant . ofEpochMilli to Instant . ofEpochSecond in ImageData . java to ensure the image creation time is
add locus2d support for f2m locus , use it for ca translation
deleted private and public keys for accounts in AccountRemovalJob . java to ensure proper cleanup of encrypted keys for account removal
refactor keep - alive header value retrieval into a utility method in ` AsyncHttpProviderUtils ` to improve code readability and maintainability by
added check for empty interceptor list in PostJoinMapOperation to prevent processing when a map has no interceptor andLiteMember joins
jbrules - 2862 : remove custom inlining processor for text , javascript , and css .
[ hotfix ] [ table - common ] remove unsupportedencodingexception from hybrid hash table
refactor environment variable retrieval into separate methods for clarity and reusability to improve code readability and maintainability by reducing redundancy
fix issue with defaultactionmapper do n ' t work with extension
added import for SerializableMode in Mockito . java and removed unnecessary closing brace in PluginSwitch . java to enhance serialization support and improve code read
do n ' t throw dependency injection exception when set a null value of a field
added isolation level handling to the Parser and Mode classes to support different isolation levels in select statements
added constants for Hive server2 transport mode and thrift HTTP path in HiveConnection . java to improve code readability and maintainability by reducing
added an implementation of the ` isCacheable ` method in ` GlobalOrdinalsWithScoreQuery ` to return false to ensure that caching
added a new file TestStrangeControl . java that contains a main method that calls StrangeControl . test to facilitate testing
updated file names in JsFile and JsLibrary to use " % s . jsfile " and " % s . jslib " instead of
added selectionStart and selectionEnd variables and their respective methods in ShadowEditText . java to enhance text selection functionality in the ShadowEditText class
refactor grpc server initialization to use a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
updated the ` use ` method in ` Jooby ` to accept a ` String ` path instead of an empty string to ensure a
added a null check for the fst variable in FreeTextSuggester . java to ensure that lookups are not supported at this time to prevent
updated newline handling and improved jar verification logic in T4975569 and T6729471 to ensure consistent line endings and handle
added ABI writer class loading and handling in JavacInMemoryStep . java to ensure proper processor instantiation for ABI writers based on
suppress warning about booleanmethodisalwaysinverted in pubroot . java
log a warning if the pullmessageservice have be shut down
refactor EnergyEndpointer class to improve error handling to enhance reliability and maintainability of the code
refactor column handling in ComponentPresetChooserDialog to use a list of displayed columns instead of an array to improve code readability and maintainability
remove unused import of bufferedinputstream from bazaar , cvs , and indexdatabase
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the files Constants . java and DistanceUtils . java to remove unused components to streamline the codebase
refactor key splitting logic in RandomPartitioner . java to improve clarity and efficiency to enhance code readability and maintainability by using substring
do n ' t fail build - time initialization if jdk . internal . foreign . abi . fallback . fallbacklinker be n ' t
added a test for creating a role binding in RoleBindingTest . java and modified the create method in RoleBindingOperationsImpl . java to improve
added logging statements to UaaSessionCookieConfig for better traceability to enhance debugging capabilities for session cookie configuration
updated the calculation of fName in HotseatFileLog to use the current calendar day of year instead of a fixed value to ensure
update the condition to check for the variable ' v ' instead of ' o ' in ObservableBlockingSubscribe . java to ensure the correct variable is
added error handling for invalid use of options in JavapTask . java and created a new T8033711 . java file to
replaced calls to ` collect ( Collectors . toList ( ) ) ` with ` toList ( ) ` in multiple Java files to simplify code and
updated logging level from error to warn and modified error handling logic based on shutdown status to improve logging clarity and ensure proper handling of exceptions during
[ flink - 20536 ] [ network ] enable maxrequiredbufferspergate for hybrid result partition with tiered storage
replaced the static SUCCESS _ CODE constant with a utility method isNotSuccessStatus to improve code readability and maintainability by centralizing success status
added useGL20 configuration and updated LwjglApplication instantiation in CubocDesktop . java to enable OpenGL 2.0 functionality
removed unnecessary type check for VoidType in JimpleBody . java to simplify code logic for better readability and maintainability
replaced the usage of DefaultSourcePathResolver with SourcePathResolver and updated the return statement in OutputMacroExpander . java to enhance the
filter out job that be not a light job to avoid test failure .
added a condition to exclude " \ build \ " from file path checks in MergeWordsListTask . java to ensure proper handling of file paths
change return type of getResponseComments method from Map < FeedbackQuestionAttributes , List < FeedbackResponseAttributes > > to Map < String ,
reformatted code in Container . java for consistency to improve readability and maintainability of the code
added a new file TestEscapeThroughInvoke . java containing a class A with methods to test escape behavior to ensure proper handling of object creation and
replaced ` stream . skip ( start ) ` and ` stream . read ( bytes , 0 , length ) ` with ` IOUtils . skip
added interceptor handling and logging for connection pool errors in ConnectionPool , DataSourceProxy , JdbcInterceptor , and TestSlowQueryReport classes to improve error
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching all thrown exceptions
hbase - 26953 addendum fix a bug in lublockcache # getcurrentsize ( ) and add test
removed unnecessary check for zero task count in RecentsView . java to simplify code logic for better readability and maintainability
added an instance config change listener to HelixBrokerStarter and adjusted sleep duration in HelixServerStarter to improve broker configuration management and
added a new ` CoinmateMetadataServiceRaw ` class and modified ` CoinmateExchange ` to utilize it for metadata retrieval to
[ mng - 5342 ] systempath should not point at file within the project directory ( # 5343 )
pdfbox - 4892 : do n ' t reuse the actual object key , a suggest by valerybokov
[ beam - 8470 ] add ptransform . setdisplaydata ( ) to set displaydata .
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSION _ ERROR , null ) ` with ` assertThat (
set jdk . certpath . disabledAlgorithms to MD2 and RSA keySize in ClientJSSEServerJSSE . java to disable SSL
added checks for subcommand types and updated error messages in OptionData . java to ensure correct usage of subcommands and improve clarity in error reporting
updated module - info . java files for mmm and ppp modules to improve module dependencies and organization
added error handling and improved connection management in IOSImplementation . java to ensure proper error management and prevent connection issues
removed unnecessary line breaks in LauncherInstrumentation and updated logging in LogEventChecker to improve code readability and ensure proper resource cleanup
added exception handling and refactored writer closing methods in FileSinkOperator . java to improve error logging and resource management during file operations
added diagnostic messages to the SchemaGenerator to enhance error reporting for Java file operations
replaced SemanticException with OptiqSemanticException in SemanticAnalyzer . java to improve error handling by using a more specific exception type
updated test cases in DataSourceMonitorTests . java to improve test coverage and ensure data source monitoring functionality
added a set to track loaded resource paths and modified the scanning logic accordingly to improve resource loading efficiency by avoiding duplicate scanning of resources
refactor test instance retrieval to handle null case and improve error logging to enhance robustness and provide clearer context for service initialization failures
added null check for HttpResponse and modified response handling logic in RoutingInBoundHandler . java to improve error handling and ensure proper response assignment based on
added a nullable string for natIp and updated the warning log message format in EkeyUdpPacketReceiver to improve clarity on IP address
updated imports and method calls in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , Deserializer , and Serializer to use the new Arrow
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added null checks for header and body buffers in HttpConnection . java and implemented a new test case in RFC2616BaseTest . java to
refactor the TimeoutSubscriber to use an AtomicReference for the upstream subscription to improve thread safety and maintainability of the subscription handling logic
improve performance of leveledmanifest . getcompactioncandidate . patch by jbellis ; review by stu hood for cassandra
added @ Test annotation to TestOrcTimezone1 . java to ensure test methods are executed for the correct functionality
updated metric and timer system property handling to support multiple substrings to enhance flexibility in determining enabled metrics and timers based on specified substrings
added error handling for JSON processing in PinotSegmentRestletResource and simplified return statements in TraceContext and TraceContextTest to improve robustness
modified JTable to check for null superclass before retrieving the renderer and added a new Test6888156 class for testing to improve robustness
added conditional checks for the existence of the SHELL and BUSYBOX paths in IDEService . java to ensure that paths are only
updated the deleteWithoutSubscriptions method parameter from 10 to 1 in DatabaseCleaningService . java to remove subscriptions without being removed for a specific feed
replaced List with Set for testInstances in MockitoExtension . java and added a new ClassWithDependency test in JunitJupiter
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
removed transactionDisable ( ) calls and updated fileMmapEnableIfSupported ( ) method calls in BTreeMapTest . java to ensure proper
modified the iterator initialization in SortedIntList and added a new Iterator constructor and a test for iterator allocation to ensure proper iterator behavior and validate functionality
added JMXHelper to unregister the default object and modified exception handling in JMXHelper to improve resource management and enhance error handling clarity
[ hotfix ] increase rocksdb writebuffer size to 64mb
removed unnecessary parameters from the constructor call in Style . java to simplify the constructor signature and improve code readability
replaced the method call from ` addArgument ` to ` addArgumentNoEncoding ` in ` FacebookShare . java ` to avoid potential encoding issues when
do n ' t log json graph in samza runner
* fixed bug in helloaudio that cause sound / environment / nature / ocean waves to not be position
loop rotate bad node budget : fix typo
updated convertToMongoType method to accept TypeInformation for improved type handling to enhance type conversion logic and ensure compatibility with type information
[ web ] real and imaginary unit should be display a ' i ' instead of ' i ' for complex geosurface
danielwagnerhall : remove unnecessary array copy from tostring ( ) method of sendkeytoactiveelement
added methods to calculate and scale a BufferedImage with specified dimensions and transparency to enhance image processing capabilities and ensure proper scaling of images based on specified dimensions
removed the extendArgumentCheck ( ) and extendWrapStore ( ) methods from DBMaker . java to streamline the code by eliminating
added a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to ensure the shift state is updated when necessary
removed the ` DETECTED _ ACTIVITY ` constant and updated related classes for backward compatibility to simplify activity detection handling and maintain compatibility with backward
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket .
removed unused import of Buildable from AaptPackageResources . java to clean up the code and improve readability
8274396 : use ` ` unused ' ' keyword instead of ` ` unused ' ' keyword in java . lang . file .
updated the error message in WebSocketUpgradeHandler to include the response status code to provide clearer context for the invalid upgrade protocol
updated formatting of blockMode assignment in P11Cipher . java to improve code readability and maintainability
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed redundant conditional checks for plot ownership in Merge . java to streamline code for better readability and maintainability
remove deprecate getconversationid ( ) method from httpcontentresponse , httprequest , httpresponse , request , and response
replaced the import of ` PhoneSet ` with ` de . dfki . lt . mary . unitselection . featureprocessors .
refactored the ` stripQuotes ` method in ` BaseSemanticAnalyzer ` , ` PartitionSpec ` , and ` PlanUtils ` to
refactor updateRendering method in DLNAResource and Request classes to simplify rendering handling to improve code readability and maintainability by reducing
added multiple resolution and remote artifact repositories to the DefaultPluginManager to enhance the management of plugin repositories for better artifact resolution
( chore ) camel - cxf : fix unit test failure on window
doc : generate sample code in the java microgenerator ( # 419 )
added JUnit @ Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failure
added a new File object instantiation in the ZipFile class to facilitate file handling based on the provided name
marked the handleAll method as deprecated in TryType . java to indicate that the method should no longer be used and may be removed in
make channel uid non - null by default ( # 4669 )
added stack trace logging and utility methods in GenericDAOImpl , ReflectionUtils , and ForumServiceImpl classes to enhance debugging capabilities by filtering out specific
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution by eliminating unnecessary test annotations
modified the unparseList calls in FunDefBase and ParenthesesFunDef to conditionally handle parentheses to improve flexibility in handling
updated the query to include cluster names in clusterconfigmapping and refactored the handling of configs selected more than once to improve clarity and
rename ` supressWarnings ` to ` suppressWarnings ` and add a conditional check for ` jdk . internal . misc . Innocu
updated JsonTreeReader to handle unexpected JsonToken values and added a test for nextJsonElement in JsonElementReaderTest to improve error handling and ensure correct
added a new option to handle extra arguments in the TestCommand class and a corresponding test in ExternalTestRunnerIntegrationTest to improve test execution by
added new methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality by allowing
[ flink - 33238 ] [ examples ] add support for different planner type in streamsqlexample
added a call to clear the database in MssqlIntegrationTest . java to ensure a clean state for testing purposes
updated progress handling in Progress . java and added dispose method in RSSReader . java to improve resource management and ensure proper disposal of progress listeners
added a condition to check if the parent file does not exist before proceeding to ensure that the parent file does not already exist , preventing
added static methods for writing documents with file and output streams to enhance file handling capabilities in the IOUtils class
replaced println statements with print statements for runOptions , sketch , and exportClassPath to improve readability and maintain consistency in output formatting
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for its root and dots per point
added generic user search query handling in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to improve LDAP
added default ports functionality to NettyHttpServer and related classes to enable dynamic port assignment for HTTP requests based on user - defined ports
updated SnmpTargetHandler to check if the thing handler is initialized before updating the status and refactored status verification in tests to improve code
update feedback session edit page action to only include instructors with submit privilege .
added @ Deprecated annotation to AvailableSettings . java to indicate that the class is outdated and should no longer be used
refactor path handling in FileResolverImpl . java and add a new WarFileResolverTest . java file to improve path resolution logic and
updated string concatenation for newFlushedSize in DocumentsWriterPerThread . java to clarify that newFlushedSize includes docstores
fix ` ` dirt . getunlocalizedname ( ) ' ' call in examplemod .
updated whitespace checks from ` stripWhitespaceX ` and ` stripWhitespaceY ` to ` stripWhitespaceX ` and ` stripWhitespaceY ` to
increased the lock duration in FeedRefreshUpdater from a fixed value to a fixed value of 1000 to allow for more time for the lock
updated the parameter from ` false ` to ` exactSearch ` in ` TsFileSequenceReader . java ` and added a test for the `
simplified the method signature of ` makeResultFromDelimitedString ` by removing the ` dateFormat ` parameter to streamline the code by
added preferred size of FList in NavigationShareTab to ensure proper layout of the UI components for better user experience
replaced OffsetAttribute with a State variable in BeiderMorseFilter and added a test for custom attributes in TestBeiderMorseFilter
updated multiple Upnp handler classes for consistency in naming conventions to improve code readability and maintainability across the Upnp module
update burst ' s collidedat position to use blockpos with x , y , z instead of pos . getblockpos ( )
added JUnit 5 assertions and refactored the ` toJson ` method in ` JsonTest ` to improve test coverage and enhance code readability
refactor MutableContextDataSupplier to improve code readability to enhance maintainability and facilitate future updates
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by logging a warning instead of throwing a ServerError
updated the KubernetesMockServer constructor to use https instead of true to enable secure connections to the Kubernetes server
add stamp computation to foreign call node in defaultjavalinkingprovider to ensure that the stamp be correctly compute for the foreign call operation
updated response handling in DefaultServlet to allow " GET , HEAD , OPTIONS " instead of " METHOD _ NOT _ ALLOWED " to accommod
tika - 2338 -- fix for tika - 2339 -- use locale . us for decimalformat
updated exception handling in ShowFileRequestHandler to return a NOT _ FOUND exception instead of BAD _ REQUEST to improve error reporting for missing files and
added exception handling functionality in ReflectorClassWriter and corresponding test cases in ReflectorTest to improve error management and ensure correct exception handling in the
added a ` clamp ` method to the ` Vector ` and ` Vector2 ` classes and modified its implementation in ` Vector2 ` to enhance
added client scope handling and updated access token creation in ChainedTokenGranter . java to improve token management by ensuring the correct client is
refactor BC _ instanceof class for improved readability to enhance maintainability and clarity of the codebase
removed setSaveFlags ( SAVE _ ALL ) from EditorBottomSheetBehavior . java to simplify code by eliminating unnecessary save flags
updated UaaUrlUtilsTest to use JUnit 5 annotations and annotated the test class with PollutionPreventionExtension to improve test structure and
use basicdomaintype instead of type in nativequery implementation
added a WeakHashMap to track font availability using a boolean flag to improve thread safety and performance of font access
replaced ` IntBigArray ` with ` IntArrayList ` for ` blockPositionByHash ` and updated its size calculation to improve performance and
danielwagnerhall : use session id instead of sessioid in the return value of getwindowhandles method . fix
[ hotfix ] fix checkstyle violation in brokerrequestutils
refactor instance handling in InjectorBuilderImpl to use a map for better order handling to improve clarity and maintainability of the instance creation process
updated the method to use ` getBasePath ( ) ` instead of ` getAbsolutePathToBuildFile ( ) ` in ` BuildTargetToRawTarget
http : / / issues . apache . org / jira / browse / amq - 4328 - fix npe in ech
make keepalivemanager thread safe for jabber connection .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to simplify the constant definition and improve readability
added methods to retrieve all physical variations from VectorizationContext , VectorPTFOperator , and VectorPTFDesc classes to improve data handling
move htmlassettranslator and stringeresourcetranslator to client package , so it can be reuse by other package .
refactor conditional checks for overview actions in OverviewState . java to streamline logic for better readability and maintainability
added @ Entity annotation to BaseActivityEventEntity class to facilitate the persistence of activity events in the database
added tracing sections in NavBarSwipeInteractionHandler , TouchInteractionService , and TraceHelper classes to enhance debugging capabilities for launcher interactions
added a new file ` InvalidOptions . java ` to handle invalid Java options to ensure proper usage of options and provide clearer error handling when
added a check to ensure the supported bounds of displays match and log an error if they do not match to improve error handling and provide clearer
refactor OAuth20UsernamePasswordAuthenticator to use a new utility method OAuth20Utils for retrieving client ID and client secret to improve code organization and
set the default value of _ unwrapServletException from false to true in ErrorPageErrorHandler and AsyncContextTest to enable unwrapping of servlet exceptions
added a condition to update the status of the shortcut in PackageUpdatedTask . java to ensure the shortcut is set to the default status when not
camel - 7999 : fixed seda component so it can configure a bounded queue size if it ' s set to zero .
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App . java and implemented it in Kernel . java to enable batch processing
added HttpClient support to ThirdEyeApplication using Dropwizard to enhance HTTP request handling capabilities in the application
added sorting functionality to JobInstanceFetchRequest and updated batch size retrieval in JpaJobPersistenceImpl to enhance job management capabilities by allowing retrieval of
updated the ` cancelCryptoFacilitiesOrder ` method in ` CryptoFacilitiesTradeService ` to utilize ` CryptoFacilitiesAdapters ` for
mow - 107 hide keyboard when mouse down in algebraviewweb
refactor memMove method to use NativeFunctionHandle instead of generic byte array to improve memory move functionality by utilizing native function interface
formatted code for consistency in the BindLdapAuthenticationHandler . java file to improve code readability and maintainability
ggb - 1181 set tooltip to ` ` block ' ' , not ` ` unblock ' ' .
updated DefaultDateTypeAdapter to use getDateTimeInstance ( ) instead of getDateInstance ( ) and added a new setDateFormat method to improve date formatting
updated player ID formatting in ListCommand . java to improve clarity of player identification in the output
added a check for an empty list and return the current instance if it is empty to ensure proper handling of empty lists and prevent potential runtime errors
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper command exception management during invocation
updated the ` getLikeExpression ` method to include a ` isLike ` parameter and modified its logic to handle RegExp UDFs to enhance the
added ` start ( ) ` and ` stop ( ) ` methods to ` StreamSupplierComponent ` and ` NativeStreamSupplierComponentImpl ` to
updated locale handling in LuceneTestCase to ensure default locale is set correctly during test execution
fix : update copyright year to 2020 ( # 2021 )
refactor context handler initialization into a separate method to improve code readability and maintainability by reducing duplication
camel - 16400 : added unit test for routebuilder reference in osgi blueprint test .
nifi - 1181 : fixed test to use contains instead of substring ( 0 , 31 ) in execution . error
refactor returnTypeSubstitutable methods for clarity and consistency to improve readability and maintainability of the code
added ThrottleType enum and modified throttle processing logic in TestExecutor . java to support different throttle types for improved handling of character and byte
removed unnecessary variable assignment for pixel values in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve
updated annotations in Annotation . java and AnnotatedElement . java files to improve code clarity and maintainability
added a new interface ` Model ` in the ` Sheet ` and ` Workbook ` classes and modified ` Sheet ` and ` Workbook `
( chore ) camel - core : replace hardcoded regex with constant
added a ` clearEntityManager ` option to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to allow configuration of the
added null checks for ShortcutInfo and intent in multiple classes to improve error handling and prevent potential null pointer exceptions
replaced instances of ` new TwoDimensionalCollectionValuedMap < > ( ) ` with ` new TwoDimensionalCollectionValuedMap < >
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange being used in the application
added null checks for columnReaders and reader before proceeding in OrcEncodedDataConsumer and EncodedTreeReaderFactory to prevent potential NullPointerExceptions when
added null check for segments in SegmentInfos . java and implemented a test for OpenReaderAfterDelete in TestIndexReader . java to ensure robust
fix r4 search with elastic search ( # 4349 )
refactor code to store the percentValue in a variable before returning it to improve code readability and handle negative values appropriately
updated limit validation from less than 1 to less than 0 in RangeInputStream and RangeReader classes to ensure that the limit value is non - negative
( chore ) camel - route - collector : optimize logging
make hlschunksource . getnextchunk accurately reflect the position of the playlist
updated package and import statements in NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase to align tests with the new LuceneTestCase
added a new stateful mapper and updated the output handler in OutputHandler . java and StatefulOperatorTest . java to improve state management and ensure
removed unnecessary null check for ' fill ' and ' stroke ' in Area . java and added bitmap shader shift in Line . java to streamline
removed the dbExists method and updated blockchain initialization logic to streamline database existence checks and improve code clarity
trim whitespace from the result of matcher . group ( 2 ) in SQLPlusSupport . java to ensure consistent parsing of input without leading or trailing
fix for http / 1.1 apr protocol ( such a http : / / www . nabble . com / )
ticket # 4071 : do n ' t set the divider location when there be no divider
add health check metric for controller ( # 6373 )
added visibility control for shared avatars in LocalFileListAdapter to improve user interface by hiding shared avatars when needed
move mebis resource into their own package , so they can be reuse by other package .
update argument length checks in BurstSendReceiveUdpPing , ReceiveSendUdpPong , and SendReceiveUdpPing classes to
added a conditional check to execute commands based on logging level to ensure commands are only executed when the logging level is not FINE
replaced CountDownLatch with assertWaitUntil for span verification in EventBusTracingTestBase . java to improve code readability and streamline
initialized the locale variable and refactored the parse method in QueryParser to improve clarity and encapsulation of locale management
use linkedhashset instead of hashset to preserve order .
[ drools - 7 ] fix beta node constraint when attach a column
added a new class ` OcspUnauthorized ` and modified ` OcspResponse ` to include a new ` OcspUnauthorized ` class for handling
added serverState variable and modified sleep logic in SSL . java to improve server failure handling and ensure proper state management
added functionality to track the number of open connections in SourceCounter and updated its usage in AvroSource to improve connection management and ensure accurate tracking of
add builder . fields ( list < graphqlfielddefinition > ) to allow add field definition to interface type .
added a method ` getSrcRoots ( ) ` to ` BuckConfig ` and refactored the ` createDefaultJavaPackageFinder ` method
replace OutputWriter with PrintWriter in ScriptExecutable . java to improve output handling for better error reporting
updated the temporary file path generation to use a UUID for the temporary file to ensure unique temporary files and avoid conflicts during test execution
added import for DataTable and modified jrubyArgs to include JavaEmbedUtils to convert DataTable instances to Ruby strings for improved functionality
updated visibility settings and refactored API queries in SearchImagesRenderer . java and ApacheHttpClientMediaWikiApi . java to improve code clarity
pdfbox - 4071 : fix typo find by codespell on fossies . org
improve formulaparser error message
added methods to get and set the bind address and modified WebSocketFuture visibility to enhance WebSocket connection handling and improve encapsulation
[ java ] delete the aeron directory when the cluster be shut down in the consensusmoduleharness .
refactor WidgetGroup to simplify width and height setting logic and add hit method to improve code readability and maintainability by reducing complexity in
added a check for Boolean . valueOf ( sessionFixationAttribute ) in HttpSecurityBeanDefinitionParser . java to ensure session fixation attribute value
refactor code to use a switch statement for edge option handling to improve readability and maintainability of the code
danielwagnerhall : introduce exponential backoff mechanism to speed up chrome test .
added HTTP method and route attributes to ` TraceExchangeFilterFunction ` and updated ` ClientResponseWrapper ` to include ` httpRoute ` to enhance tracing
fix npe in precompactedrow when gcbefore be set to int _ min _ value
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added InvalidRenderIntentTest . java for testing to
[ # 7640 ] feedbackquestion : fix noture option for edit question ( # 7641 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
removed the Serializable interface from the KafkaRecord class to simplify the class structure and avoid unnecessary serialization
added PGConnection import and modified connection proxy instantiation in PooledConnectionImpl . java , and added a test for PGConnection in BaseDataSourceTest
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging messages in TokenAuthenticationHandler to provide clearer guidance on how token encryption secret is defined to improve logging clarity and provide clear
marked the Hazelcast class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added topology update event handling and modified command report creation in AmbariManagementControllerImpl , AbstractServerAction , and FinalizeKerberosServerAction
added support for iterator and end handling in NamedListCodec to enhance data processing capabilities for named lists
log warning if assigncompletelylostpartitions be call without exception
added schema inclusion rule to ApiExample . java to enable public schema access in the API example
updated the expected value in the assert statement from 3.0 to 7.0 in StreamExpressionTest . java to accurately reflect the correct
fix sdo . getcoordinatesequence ( ) for polygon with non - valid ring
added methods to retrieve the base name and dimension count in ConstantPool to enhance functionality for better resource management in the constant pool
added method to set debug evaluation output in HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes to enhance debugging capabilities
test : migrate testmodule and refactoringtest to junit 5 ( # 4649 )
updated ExoPlayerProfile initialization and modified live TV check condition in PlaybackController to ensure proper profile initialization and prevent live TV playback
added a return statement to the DynamicStyleBar class to ensure proper execution flow in the method
added logging statements for setting and resetting database properties in Utils . java to improve visibility and debugging of database property settings
refactor ReactiveAuthorizationManager to improve code structure to enhance maintainability and readability of the code
added a check for boolean type in MethodEmitter to promote strings to objects to ensure proper handling of boolean types in the code
truffle / llvm : make sulongstackframenuller a llvmaddressnuller so it can be nullify
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add test for caffeine cache default configuration
added a method ` calculateBoundingBox ( ) ` to the ` Mesh ` class to calculate the bounding box of vertices to provide functionality for bounding box
added a target hash function option and refactored hashing logic in TargetsCommand . java to allow customization of hash functions based on the target
refactor DefaultConfigurationProperties for improved configuration handling to enhance maintainability and readability of the configuration settings
added high light color and high light alpha settings to ListViewMultiChartActivity , and modified highlight arrow drawing in BarChart to enhance visual cl
removed duplicate entry for pg to sgPathPlanMap in ClusterPlanRouter . java to streamline the code by eliminating redundancy
( chore ) camel - infinispan : remove unused parameter
added checks for artifact existence and refactored artifact fetching in MavenArtifactFetcher and MavenDependencyResolver to improve reliability and maintainability of artifact
modified the fragment shader string to include a conditional check for GL _ ES to ensure compatibility with OpenGL ES by preventing unnecessary precision in the
hbase - 25836 use set instead of SortedSet for server list in rsgroupinfo
updated logging level from warn to debug for no TldProcessor configuration in TagLibConfiguration . java to improve logging granularity for better troublesh
removed the default match version check and added a test for version aware filters in CustomAnalyzer and TestCustomAnalyzer to ensure compatibility with the Lucene
added a test for reading values from set package archive info in ShadowPackageManagerTest . java and modified the method in ShadowPackageManager . java
replaced direct method invocation with MethodUtil . invoke for consistency across multiple classes to enhance code readability and maintainability by utilizing ReflectUtil
added imports for ProjectConfigurationStartEvent and TaskStartEvent , and modified progress listener to include progress update types to enhance project configuration handling and improve
douniaberrada : remove unnecessary synchronization in androidwebdriver . java
make initialization fail fast by default
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` getResult ` method to simplify
updated the ` isNative ` field to be transient and modified the handling of its value to ensure serialization and deserialization of the ` isNative `
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
automation : rename ruleenablehandler to ruleenablementactionhandler ( # 4370 )
refactor several classes to improve structure and readability to enhance maintainability and facilitate future feature additions
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity in debugging output for authentication requests
updated test cases in KafkaDynamicTableFactoryTest to use more specific source and sink options to improve clarity and maintainability of the test code
added null check for the registrant repository in UsersPanel . java to improve error handling and provide clearer feedback when the repository is not found
added support for both . otf and . OTF file names in the Font and SunFontManager classes to enhance flexibility in font handling
refactor the handling of target type and argument types in AnnotationMatcher . java to improve clarity and maintainability of the code
updated the error message from " OFF " to " SEVERE " in Grep . java to improve clarity of error reporting for better debugging
added a check for debug logging before logging messages in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when
fixurefireplugin . includes / excludes should be empty instead of null
added home intent handling logic in Launcher . java to ensure proper movement to the default screen when the home intent is triggered
reduced the maximum bitrate from 110 to 30 in the PMS configuration to optimize performance and reduce memory usage
removed the ` getOptions ( ) ` method from the ` CommandLineParser ` class to streamline the code by eliminating unnecessary uniqueness of options
trim whitespace from the description returned by the method to ensure consistent formatting of the description
updated the path for the output file in XOMParserTest . java to ensure the correct file name is used for generated output
removed the process ID from the error log statement in ProcessBesuNodeRunner . java to simplify the log output by eliminating unnecessary
added getLoadedMusic and getLoadedSound methods to MusicLoader and SoundLoader classes to provide access to loaded music and sound objects
updated import statements for clarity and type casting in OnBeanCondition . java to improve code readability and maintain type safety
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for test case b / 215673732
cpu and memory feature : disable the pause button if the feature be disabled
refactor preferences handling by replacing ` accountsPrefCategory ` with ` mAccountsPrefCategory ` and introducing a new ` createAddAccountPreference
fixed checkstyle issue in xmppconnection . java
modified the initialization of StringBuilder in ObjectInputStream to use an initial capacity based on utflen to optimize memory usage by avoiding unnecessary allocation when utflen
added property values to the WebApplicationContextRunner and ReactiveWebApplicationContextRunner configurations to disable metrics export in the test application context
refactor InterruptedException class to improve error handling to enhance reliability and maintainability of the code
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the code
refactor connection handling logic in ConnectionCheckOperation . java to improve clarity and structure to enhance readability and maintainability of the connection check
updated the conversion logic in ArgumentArrayMessageMapper to include a check for Map target type to ensure proper handling of target types when converting strings to
[ ds - 3862 ] fix test , and change expect status to ok for item update rest controller
removed the AuthenticatorActivity from the list of exemption of PasscodeActivites to streamline the app by eliminating unnecessary activities and
fix ( patternparameterconfigurator ) : deprecate method in favor of template ( # 3390 )
modified the ` beginDraggingWidget ` method to return a boolean indicating success or failure to ensure that the widget is not dragged if the
added an import statement for JUnit ' s Ignore annotation and ignored the TestPackedInts test to address issue LUCENE - 44
added a null check for the root variable and collected components in the tabbedPane to prevent potential NullPointerExceptions when processing components
add confusionmatrix to testclassifier and testsentence so that it can be write to a file .
rename variable and method to make it easy to read
added unit tests for BluetoothHeadset ' s connected devices and connection states in ShadowBluetoothHeadsetTest . java to ensure correct behavior
camel - 7999 : fix typo in autowire method name . thanks to stephan siano for the patch .
added " clone " and " finalize " methods to the objectMethods set and introduced a constant for the finalize method in ResultObjectProxy . java
[ hotfix ] [ test ] add null check for counters object in integrationtestbiglinkedlist
added support for refering objects in JDWP and introduced a new REFERRING _ OBJECTS class to handle instance info request to
updated the filter condition in SamlIdPServicesManagerRegisteredServiceLocator to include a matching service ID to ensure that only valid SAML services are
added null check for getActivity ( ) before running the Runnable in PhotoFragment . java to prevent potential NullPointerException when accessing getActivity ( )
rename logger to logger in order to be consistent with naming conventions .
added stringType property and methods to set and get the string type in DatabaseAdaptor and JDBCSessionDataStore classes to allow customization of the string
updated assertions in UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " to align
refactor thread name handling by introducing ` updateThreadName ` and ` resetThreadName ` methods in ` CliDriver ` and ` Session
refactor TaskletAdapter class implementation to improve code readability and maintainability
drools - 2200 dmntableimpl . evaluateall ( ) should throw npe on negative dmn output ( # 2601 )
[ macos ] make sure the texture map creation finish before move on the texture map
added a tooltip text to the showCGCP checkbox in RocketPanel . java to improve user experience by providing context - sensitive tooltip information
fix bug in enum and interface factory , and add unit test
add text and description to the FlutterRetargetAction and related classes for HotReloadFlutterApp and RestartFlutterApp to enhance
apps - 2694 use stringtemplate instead of simple label for spreadsheet label
removed unnecessary whitespace in the BRIGHTNESS _ FACTOR constant to improve code readability and maintain consistency
update sscm history parser to parse context , not branch
added an isAdmin parameter to the createUser method and implemented listUsers and userIsAdmin methods in HomekitAuthInfoImpl . java to allow users to
added checks for ` indexedWriteMethod ` and ` writeMethod ` in both ` IndexedPropertyDescriptor ` and ` Introspector ` classes ,
replaced string concatenation with parameterized logging in DynatraceExporterV2 and updated test assertions in DynatraceExporterV2Test
updated method parameters in Context . java to use ' task ' instead of ' runnable ' for better clarity to improve code readability and maintain
fix setcapabilities from spongecommon builder not work properly .
updated assertion in LifecycleUtilsTest to compare execution ID instead of a default string to ensure consistency in execution ID comparison across tests
added checks for different contract types in Wallet . java and updated related servlets in GetContractServlet . java and TriggerSmartContractServlet . java
added package - info . java files for multiple packages and created new package - info . java files for image , java , and runtime classes to
refactor the add method in DocumentsWriterDeleteQueue to improve queue management to enhance performance and maintainability by reducing unnecessary synchronization
added a check to prevent duplicate JavaFileObjects in JavadocTool . java and updated test execution in T7091528 . java to improve
changed the default value of the STRIP _ IPV6 property from " true " to " false " and adjusted the substring logic accordingly to
refactor LoginServerTokenEndpointFilter to accept a list of parameter names and handle new user parameters more effectively to improve flexibility in handling OAuth
added a new constant C _ KEY and updated language condition checks in LanguageFactory . java , and updated CPPParserTokenManager . java to
replaced the existing ThreadPoolExecutor with a new MoreExecutors class for improved concurrency handling to enhance code maintainability and facilitate
added cache control and expiration headers to the FormAuthenticator response in LoginService . java and assertions in ConstraintTest . java to enhance response security by
updated error logging to include exception message to improve error reporting by providing more context about the error
refactor HSSFTests to use TestSuite instead of AllHSSFUtilTests and update test class visibility to improve test organization and
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output file before retrieving the class directory to prevent potential NullPointerException when the output is null
added access controller settings for before and after access controllers in Java2DRenderer . java to enhance resource resolution control for better resource management
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure that the build fails gracefully on certain fonts on Windows machines
modified the visibility of the mbean variable and added CPU time testing logic in GetInternalThreads . java to enhance thread CPU time validation and improve error
add comment to tabsandindentsvisitor if there be no comment
updated assertions in TestTriggerIntegration to limit the rate checks to a maximum of 100.0 instead of 5.0 to ensure that the rate
updated equality checks to be case - insensitive for change sets in multiple classes to ensure consistent behavior regardless of case in change set paths
added an implementation of the ` getString ` method in ` ShadowBundle ` to provide a way to retrieve a string value based on a key and
added date and time formatting based on locale settings in TweetActivity . java to improve user experience by enabling customizable date and time display
nifi - 174 : fix npe in case of empty connection list return from standardprocesssession
refactor keyboard request logic into a separate method ` requestFocus ` to improve code readability and maintainability by encapsulating focus request logic
modify the way the canonical path is set in the main class to handle empty paths correctly to ensure that the canonical path is correctly formatted for the
[ web ] fix npe in coordmatrix . solve ( )
int - 1746 added import statement for org . springframework . integration . core . Message
refactor SQL queries in PostgresConnector and TaskAttempt classes to use a join method for joining task attempt tables to improve code readability and
updated file filtering logic in AquaFileChooserUI to ensure the selected filter does not contain the file filter to improve user experience by prevent
fix synchronization issue in p2ptransportmanager
modified the method to return a string representation of a Boolean in ArrayPtg and added a test for it in TestArrayPtg to ensure
updated import statements in PGtokenizerTest . java to use specific assertions instead of wildcard imports to improve code readability and maintainability by standard
refactor variable handling in Java2TypeScriptTranslator and add test for nested anonymous classes with parameters to improve code clarity and ensure correct functionality
added sequence creation for auto - increment columns in the AddAutoIncrementChange class to ensure PostgreSQL supports auto - increment columns and properly set default values
updated byte reading logic in DataInput . java and modified readUtf8 _ slow method call to ensure correct reading of UTF - 8 data and
added assertions to verify metadata for vertical and horizontal physical pixel spacing to ensure proper handling of physical pixel spacing in image parsing
updated parent assignment in Component . java to ensure proper parent context is used for component hierarchy
reformatted code for consistency across multiple Java files to improve code readability and maintainability
replaced ` ENGINE _ finish ` with ` ENGINE _ free ` and added ` ENGINE _ init ` in ` NativeCryptoTest . java `
added iteration handling methods in InterleaveControl , RandomController , CounterConfig , UserParameters , ConstantTimer , GenericController , and IterationListener to
release HttpContent resources in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent memory leaks
added a call to delete logs in TestRecovery . java to improve resource management and prevent potential memory leaks
added a condition to load a URL if it contains " twitter : / / " before loading it in BrowserActivity . java to ensure that the
fix flakiness in deploymentgrouptest . testdeploymentsgroup ( )
updated the logResult parameter from false to true for the listLabels method to enable the logging of allowed labels in the visibility controller
increased the maximum number of auto - retries in RestTemplateRetryTests from 0 to 25 to improve test reliability by allowing more retries
removed System . out . println ( result ) from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java
added support for the " fraction " resource type in the resource loading process to enable parsing of fraction attributes in the application
remove redundant file confirmation check in BasicFrame . java to streamline code by eliminating unnecessary confirmation logic
added checks for null values for groupId and artifactId in UpgradePluginVersion . java to ensure that groupId and artifactId are not null before proceeding with
hbase - 26946 namespace state manager should throw quotaexceededexception when table be too large ( # 469 )
refactor multiple token and attribute classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class to improve code structure to enhance maintainability and readability of the test code
added a check to ensure f0 is non - negative to prevent potential errors when f0 is negative
added null checks for ` pkColumn ` and ` fkColumn ` before adding foreign keys in ` TableRetriever . java ` to prevent potential `
refactor encoders management in CoyoteAdapter , InputBuffer , and B2CConverter classes to use a synchronized stack for encoding to
added SharedPreferences functionality to control the allowing for empty screen settings to improve user experience by allowing empty screen settings based on user preferences
added a warning log for the deprecation of the cucumber - needle feature to inform users that the feature is deprecated and recommend using cuc
updated theme handling and improved resource management in ShadowThemeTest , ShadowArscAssetManager , and ShadowVMRuntime classes to enhance theme functionality
updated string concatenation for error messages in VerifyFast . java to improve clarity of error messages for better debugging
no effective change - code cleanup - remove @ system _ versioning _ alter _ history
added conditional checks for ` PROTO _ PROPERTY _ NAME ` and refactored methods for retrieving and setting proto in ` Global ` to improve
updated the shuffle method in TestFilterDirectoryReader to use a random number generation to improve randomness in the shuffle process during testing
updated display name retrieval logic for remote clarification based on user and share with to improve user experience by providing more descriptive clarification
updated the path formatting in CookieRetrievingCookieGenerator to use a default empty string if the path is blank to ensure that a valid path is
removed unnecessary closing braces in Jvm , AttachModel , JvmJvmstatModel , and JvmstatModel classes to improve code readability and maintain consistency
updated cache name assignment from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated the comparison logic in ValidationResult to use ' ve . pageNumber ' instead of ' pageNumber ' to ensure that ' ve . pageNumber ' is correctly
added a condition to check if the focused widget is equal to the current widget in UIDropdown . java to ensure that the highlighted widget is
fix checkstyle issue in soundutil . java ( # 700 )
refactor ApplePackageDescription to utilize FlavorDomain for managing AppleCxxPlatform to improve code clarity and maintainability by
fix test for ` ` format tabseparated with name and type ' ' bug
renamed ` onConnect ` methods to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to accur
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a new file TestGetLoggerNPE . java to test logging behavior with different permissions to ensure that logging functionality behaves correctly with different
added a data map and a method to retrieve it in PathSharingContext , modified sharedMap initialization in ScriptedProcessor , and ScriptedDec
truffle / espresso : use compiler directives . castexact instead of unsafe . getunsafefield .
added support for " NEXT VALUE FOR " in NextValExpression and updated related tests to enhance functionality and improve test coverage for Oracle database interactions
add more info on unsupportedfeatureexception in localizationsupport
refactor BoundedLocalCache to limit the number of pending writes based on the write buffer size to ensure that pending writes do not exceed the
added exchange - specific parameters for Leverage _ Level in QuoineExchange and created order direction property in QuoineNewMarginOrderRequest
added a method ` boundInitialization ( Class < ? > beanClass ) ` to the ` PropertyDescriptor ` class and created a new ` Test719
replaced ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` in ` LwjglGraphics
added a check to reset buttonsAwatingRelease in the parent form if it is not null to ensure proper handling of button release events in the
refactor wrapWidth calculation in LineCell and update its usage in StyledTextAreaSkin to improve code clarity and maintainability by
corrected spacing in XSLTErrorResources _ it . java to improve code readability and maintain consistency
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain the order of parameter values during processing
danielwagnerhall : return string . format ( string , object ... ) instead of call string . format ( string ,
simplified namespace URI retrieval in StaxXmlPullParser to improve code readability and maintainability
removed the ` nestedJoins ` configuration from multiple test classes to simplify the code by eliminating unnecessary checks for nested joins
update condition to check if caller type is not _ ADMIN instead of _ NORMAL to allow admin - only configuration for root users
added JavacFileManager caching and updated CompletionTaskProcesor constructor to include a cursor parameter to improve caching efficiency and provide more context
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
replaced JUnit ' s Assert import with Hamcrest ' s MatcherAssert import in KuduIOIT and XmlIOT
add nullability annotation to textrenderer and metadatarenderer to avoid npe .
updated the offset memory size calculation in SymbolMapReaderImpl . java and added a new test for symbol file mapping in LineTcpConnectionContextTest
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the output and improve test readability
removed the ` Reflection ` class and updated package declarations in ` jooby . internal ` to streamline the codebase by eliminating
refactor ThreadlessExecutor to use getter and setter methods for finished and waiting states instead of constructor parameters to improve code readability and maintainability
refactored exception handling in DateTimeFormatter . java and added new test cases in TestDateTimeParsing . java to improve error handling robustness and ensure
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and introduce a new method ` chunkLengthInKB ` to improve
added a wildcard case in ` Types . java ` and created a new class ` T7034495 . java ` with generic interfaces to
removed unnecessary do statements in LotsOfEvents . java to improve code readability and maintainability
refactor character checks in TransclusionDecideRule for clarity to improve readability and maintainability of the code
print micronaut version in ` ` micronaut . version ' ' output
added unit tests for the " Print _ Area " formula in the TestBugs . java file to ensure the functionality of the Print _ Area formula
update MindIconFactory to use a description string if the name starts with a slash to improve clarity and maintainability of the icon description
updated onHomeIntent method to accept an internalStateHandled parameter to provide more context about the state being handled
refactor the handling of the preferDependencyTree variable in CxxBuckConfig . java to improve clarity and maintainability of the code
added showDetails method to multiple activity classes and updated related methods in FileDisplayActivity , FolderPickerActivity , FileFragment , and OCFileList
removed the ' $ apply ' modifier from function names and methods across multiple files to simplify function naming conventions and improve code readability
added randomization logic for byte arrays in MinimalEncoder and updated test assertions in HighLevelEncodeTestCase to ensure accurate encoding and validation of
added support for required and since fields in SourceBuilder . java to enhance the flexibility of header and parameter handling in the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure that the adapter updates correctly when data changes
removed the ` setDefaultWALSyncMode ` method from ` ShadowSQLiteConnection ` to streamline the connection configuration by eliminating unnecessary
refactor type checking in RemoveJavaDependenciesAdapter and add assertions in Collections to improve type safety and ensure proper removal of elements from the list
camel - 14850 - camel - aws : remove unused getter method from defaults3crtasyncclient
updated test cases for corrupted stream out of bounds length in ParserTest . java to improve clarity and accuracy of error messages related to stream length
improve error message when the collection do n ' t match the expected size
do n ' t bailout if exception be throw during compilation .
mow - 107 make sure penimage2 be large , make sure penoffsetx and penoffsety be set to 200x 200
refactor SQLXML class for improved readability to enhance maintainability and ease of understanding for future developers
added a limit parameter to the getOrderBook method and updated related methods in YoBitMarketDataService and YoBitMarketData
renamed ` GotWrongOOMEException ` to ` HeapOOMEException ` and updated related imports and class names to improve clarity and
nifi - 2323 : ensure that the stream read constraint be not exceed int . max _ value in standarddataflow . write (
updated the method to retrieve the engines from a configuration string or an empty string to improve robustness by preventing null pointer exceptions when accessing the
updated exception messages and class names in TimerWheel . java and TimerWheelTest . java to improve clarity and consistency to enhance code
added error handling for bug formatting in BugInstance . java to improve robustness by logging errors and providing custom description
increased the timeout duration in the test from a fixed value of 3 seconds to a constant WAIT _ CHUNK _ IS _ READY _
changed the visibility of the menu item from true to false to ensure the menu item is not displayed in the user interface
refactor DefaultResultSetHandler to resolve discriminated ResultMap and add a new Contract class for testing to enhance result mapping functionality and ensure correct
refactor conditional checks for null defaultHome and unregister the receiver if necessary to improve null safety and ensure proper unregistration of the home app update
removed unused VertxGen import and annotation from PumpImpl . java to clean up the code and improve readability
removed unnecessary casting of FileDisplayActivity to mContainerActivity in FileDetailFragment and OCFileListFragment to simplify code and improve readability by
trim whitespace from the last token in the ConfigAttributeEditor and add a test for trailing and leading spaces in ConfigAttributeEditorTests to ensure proper
refactor ClassUsingAnotherAuxiliary and SelfClassWithAuxiliary classes for improved clarity to enhance maintainability and readability of
svm : expose single module reference to dynamichub . singlemodulreference .
modified case handling in DatabaseMetaData to set relKind to " SYSTEM TABLE " based on the presence of " pg _ " prefix to ensure correct
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated the order of the RQST field and related cases in ThriftHiveMetastore . java and HiveMetaStore . java to
added a new module - info . java file for the core module to define module exports and dependencies for better modularization and organization
added flush state management and updated fill state logic in SslConnection . java to improve handling of encrypted output and ensure proper fill state management
updated Log4j2LogDelegateFactory and LoggerFactory to improve delegate creation logic and added a new test class to enhance error handling and ensure
updated ExecutionEnvironment , TestHelper , Test7029048 , Test7029048 , and Test7029048
refactor methods in ExecutableFindOperation , MongoOperations , ReactiveFindOperation , and ReactiveMongoOperations for improved code organization to enhance maintainability
fix ( griffin ) : use libpqfactory for ssl connection string ( # 1181 )
disable this test until i find a way to fix it
added sorting functionality for resource names in EditableResources . java to ensure consistent order of resource names for case insensitivity
added a new file OSvTerminal . java and updated TerminalFactory . java to support OSV support to enhance terminal functionality and support for OS
added support for additional file extensions in ClassType . java to ensure compatibility with both . gs and . gr , including . grs
updated ` combinedVectors ` from ` HashMap ` to ` TreeMap ` in ` DrillTestWrapper . java ` and simplified method calls in `
updated the loop condition to include both names and values in XPathEntityProcessor . java to ensure that the loop does not exceed the bounds of the
refactor WebSocketPolicy implementation to improve code readability and maintainability
changed access modifiers of ` readPhoneStatePermission ` and ` accessWifiStatePermission ` from static to instance variables in ` ShadowTele
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5595 : add more
refactor AsmUtil to use Class < ? extends MethodVisitor > and Class < ? extends ClassVisitor > asSubclass for better type
added LoggingAuditService and UaaAuditService interfaces with logging and user authentication methods to enhance user auditing capabilities in the application
[ tado ] handle null temperature range in air conditioning zone
do n ' t generate aop proxy for @ around method that be not abstract . fix # 2391
camel - 16400 : camel - http - allow to configure proxy host and port on the server side .
updated the maximum encoding version from 1.1 to 1.2 in TemplateDTO . java to ensure compatibility with the latest encoding standards
added jdkSerialFilter ( ) method to System . java to enhance serialization filtering capabilities
( chore ) camel - core : log the capacity of the pool in the info message
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple files to standardize the method name for
updated the method signature to accept a raw realtime table configuration and applied environment variables to ensure the realtime cluster is up to the correct configuration
added error handling methods to ValidationReport and updated status management in DisallowValidator to improve error reporting clarity and ensure proper status management during validation
refactor inline QSB handling in InvariantDeviceProfile to use closestProfile instead of defaultDisplayOption to improve flexibility and maintainability of
updated ` createClassPath ` method to throw ` Exception ` and replaced URL encoding with ` Charset . defaultCharset ( ) ` to improve error handling
updated regex patterns in TransformSteps . java for passing parameters to improve flexibility in matching method calls
add null check for retina prop and fillRect method in PGraphicsJava2D to avoid potential NullPointerExceptions when image is null
refactor timeout handling in FaultToleranceTest to use a configurable timeout value to improve flexibility and maintainability of the test timeout logic
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to enable dynamic configuration of the Docker image in the environment
[ drools - 7 ] call system . gc ( ) in knowledgeagenttest to prevent memory leak
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replace ` createHardLink ( ) ` with ` copyFile ( ) ` for file copying to enhance error handling and improve file copying functionality
renamed ` appendToDescription ` method to ` getDescription ` across multiple classes to improve clarity and consistency in method naming conventions
[ api ] make lstm work on all device ( # 1181 )
added a conditional check for XML type before initializing FindIndentXmlVisitor and FindLineFormatJavaVisitor to ensure only XML documents are processed to avoid
refactor tests in NotesHelperTest , GeocodeHelperTest , and ReminderHelperTest to use AndroidJUnit4 instead of Instrumentation
added GasLimitRule and ParentGasLimitRule to the list of rules in CommonConfig . java to enhance rule configuration flexibility for frontier
changed the access modifier of setupData method from public to private in BaseAssumptionsRunnerTest . java to restrict the setupData method to
rename ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class and update related references accordingly to improve clarity and
triple : do not close deframer if listener be null .
[ hotfix ] [ doc ] add doc for task _ failure _ recovery restart strategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure proper handling
updated method implementations in Common . java to improve performance and maintainability of the code
refactor Launchable . java to use try - with - resources for context layer handling to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ stream ] fix typo in streamexecdeduplicate javadoc .
[ hotfix ] [ kafka ] log error when send kafka message to topic .
added imports and a method to set the PersistentPropertyAccessorFactory in SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to enable configuration of the
modified the ` setCoord ` method in ` GeoCoordSys1D ` and ` GeoSegment3D ` classes to return a boolean indicating
added logging for scroll events and updated swipe handling logic in AskGestureEventsListener . java to improve debugging and ensure correct scrolling behavior based on
modified the comparison logic in NGramEstimator to handle multiple keys correctly to ensure consistent ordering of elements in the comparison process and avoid potential errors
updated import statements to reference the ` io . cucumber . core . runtime ` package instead of ` cucumber . runtime ` to
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve accessibility and maintainability of the code
updated method call from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
add a new file TestSkeletonPredicates . java that implements a test for loop predicate functionality to ensure correct handling of loop unroll and stress
refactor SelectionHighlighter to improve object comparison and handling of ViewModelInfo objects to enhance code clarity and ensure proper handling of range and
added a new ` StringResultConverter ` class and refactored ` AsmRuntime ` and ` AsmUtil ` to utilize it
camel - 19751 : disable test that do n ' t run reliably on apache ci
updated the condition from ` WaitForSingleObject ( console , 100 ) ! = 0 ` to ` WaitForSingleObject ( console , 100 ) =
added null checks and buffer limit handling in BufferUtils . java , and modified method visibility in loadMethod . java to improve code robustness and
updated the assertion in TestSolrDiscoveryProperties to use File . separator for data directory path to ensure consistency in file path handling across different operating systems
updated OS detection logic in AutoUpdaterServerProperties . java to include support for macOS and pre10.15 to ensure compatibility with macOS
updated the Lock class to accept a lock name as a string instead of a File object to improve clarity and flexibility in handling lock names
updated the method for retrieving the app icon and its visible bounds in Overview . java to improve clarity by using a more descriptive variable
updated references to ` this ` for clarity and consistency in ` ClientDatagramEndPoint ` to improve code readability and maintainability by using
updated GET _ STEP _ EXECUTIONS string format to use " order by STEP _ EXECUTION _ ID " instead of " oreder
updated button handling in LwjglInput to return - 1 instead of Buttons . LEFT and added checks for unknown buttons to improve input
added tests for approving and rejecting claimed tasks in TaskRestRepositoriesIT . java to ensure that claimed tasks are submitted correctly and
replaced transient logger instance with a static logger instance in multiple response builder classes to improve logging consistency and maintainability across the response builder
updated the expiration time calculation in ` SsoAccessTokenProvider ` and modified test method visibility in ` SsoAccessTokenProviderTest ` to ensure correct
[ geos - 8470 ] skip some geoserver test that do n ' t run on window
added alarm suppression methods and imports in GreetResourceMockedTest . java and OciMetricsCdiExtensionTest . java to implement
reformatted conditional checks for the default close operation in JFrame . java to improve code readability and maintainability
refactor database connection handling in LibraryScanner . java to check for null before accessing the MediaDatabase connection to enhance stability by preventing potential
replaced ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to streamline metrics initialization by using the
updated file list footer formatting logic in OCFileListFragment . java to handle cases where filesCount and foldersCount are negative to improve user interface
set " HashKnownHosts " configuration to " no " and change the return type of loadKeys methods in FileKeyPairProvider and ResourceHelperKeyPair
refactor SourceVersion class to improve code organization to enhance maintainability and readability of the code
added a new test class ` ThreadFactoryTest ` to verify the functionality of ` MyThreadFactory ` to ensure that the correct thread group is
refactor lock period retrieval logic in DelegateResourceActuator to use a dedicated method to improve code readability and maintainability by reducing duplication
added a new TicketModel instance to the EditTicketPage to facilitate ticket editing functionality
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the option to dimiss apps
updated superclass constructors in multiple assertion classes to use the class type parameter to enhance type safety and prevent unchecked cast warnings
added a new menu item for quote functionality and modified the visibility of the MENU _ QUOTE menu item to enhance user experience by allowing users
make sure current interrupt be finish , prevent another start yet
renames ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and updates related methods for clarity to improve code readability
added a conditional check for result before offering failure in ServerHTTP2StreamEndPoint . java to ensure failure is offered only when the result
updated German and French error messages in XSLTErrorResources to improve clarity and accuracy of error messages related to German and French
added @ ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety for concurrent access
updated imports and method implementations in MockRestAdapter , RestAdapter , and RestAdapterTest to use ' Subscriber ' instead of ' Observer ' to
reformatted the code for better readability in ComponentPresetManager . java to improve code maintainability and adhere to coding standards
added support for unique column names in the resultset configuration to enhance the flexibility of column identification in the resultset
added item listener for default voice selection in MaryGUIClient . java to improve input handling for limited domain voice input
added validation to ensure the session is valid before proceeding to prevent illegal state exceptions when accessing the last accessed time of a session
deleted the ExceptionHelper . java file to the class was deemed unnecessary for the current project
change key pair size from 256 to 255 in JceX25519Domain . java to improve security by using a larger key pair size
added a codec setting to the Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure the correct postings format
[ hotfix ] do n ' t import checkpointrange if there be no header to import
updated algorithm parameter handling in OperatorHelper to use " OAEP " instead of " RSA / ECB / OAEPPadding " to
replaced ` Platform . DARWIN _ AARCH64 ` with ` Platform . MACOS _ AARCH64 ` across multiple files to
added handling for SecurityException in DebugSourcesResolver and improved exception management to enhance error handling and provide clearer logging for source resolution failures
modified the conditional check for the OS in AbstractTest . java to ensure proper handling of the OS before returning transport values
updated error handling and logging in FileUploadUtils , ControllerConf , UploadRefreshDeleteIntegrationTest , and related classes to improve error reporting and ensure
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and updated byte buffer creation to use ` ByteOrder . nativeOrder ` to
changed the value of USE _ PIPELINE _ DOWNLOADER from false to true in FastSyncChainDownloader . java to enable pipeline download
removed ZONE _ OFFSET setting from Calendar in SimpleDateFormat . java and added a new test class Bug7130335 . java for date formatting
refactor variable declarations in AllAppsView . java for clarity and consistency to improve readability and maintainability of the code
server : fix npe in listvirtualmachines api ( # 4560 )
refactor StringBuffer class for improved performance to optimize string manipulation and reduce memory usage
added a new attribute ` ruleUID ` to the ` rule ` object in ` RuleResource . java ` to ensure that the rule ' s
added null check for listener before unsubscribing in RegistryProtocol . java to prevent potential NullPointerException when listener is null
added a new property " pretty _ print " to JoltTransformJSON to apply pretty print formatting to the output of the Jolt transform to
make access _ table public so it can be access from outside the class .
update error messages in ` DataSourceInitializer ` and ` DataSourceInitializerInvokerTests ` to include the location of resources when they do not exist to improve
make xmpptransport . run ( ) method protected so it can be override by subclass .
updated multiple Java classes including EventDirContext , Control , ControlFactory , ExtendedRequest , ExtendedResponse , and UnsolicitedNotification to improve
added parameters for effectiveClusterVersion and isUpgradeSuspended in AmbariManagementControllerImpl . java to improve handling of upgrade suspension
simonstewart : after a code grant , the code be copyright the sfc and the selenium committers . start to update the
removed unnecessary line of code in Resolver . java to improve code clarity and maintainability
updated EncryptionJwtCryptoProperties and OAuthProperties to set default key sizes for encryption and signing to improve configurability and ensure default key sizes are
replaced calls to ` getColumnFamilies ( ) . length ` with ` getColumnFamilyCount ( ) ` across multiple classes to improve code clarity
replaced the ` AllowedResourceAliasChecker ` with a lambda expression using ` ( path , resource ) - > true ` to simplify the alias
updated ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and Serializable classes to improve code consistency and maintainability
added a reset method to the Cluster interface and its implementation in ClusteredServiceAgent to provide a way to reset the idle strategy for better resource
increment the currentChunkID in ChunkedWriter . java to ensure the correct chunk ID is used for sequence file writing
added a new abstract class AbstractJobExecutor for job execution management to provide a standardized way to run jobs in the batch framework
replaced direct replay call with a variable replayFuture to improve clarity and maintainability of the replay process
rename variable ` hugeStaticBase ` to ` staticBase ` for clarity to improve code readability and maintainability by using a more
[ hotfix ] [ consul ] do not try to get service id when discovery be not enable
replaced the use of ` Math . random ( ) ` with ` SecureRandom ( ) ` for generating hashSalt values to improve security by
add support to verify runtime compilation framestates during bytecode parse .
updated currentStart and baselineStart calculations in TimeOnTimeComparisonHandler . java to ensure accurate time tracking during comparison
added abstract methods and tests for mocking in CallsRealMethods and CreatingMocksWithConstructorTest to ensure proper handling of abstract methods and improve
refactor ` checkPackageAccess ` method to accept a ` Class ` parameter and update its implementation to utilize it to improve flexibility and
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration tests to improve test structure and ensure proper plugin
refactor ContributionListPanel to use a more descriptive variable name for the table model to improve code readability and maintainability by redu
added support for the " has - touch - interaction - service " request in the QuickstepTestInformationHandler and LauncherInstrumentation classes to
replaced SwingUtilities . invokeAndWait with a Mutex . EVENT writeAccess for thread - safe access to improve event handling and ensure thread safety
updated references from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` and ` ShowOptions . Builder ` to ensure type
added two new class files , ArrayHelper , Asserts , Comparables , Constructor , Enums , NativeRegExp , and Objects to the java
added support for ' & ' and ' HOME ' keys in the command line input handling to improve user interaction by allowing navigation through home and end
removed synchronization around the retrieval of connected plots to simplify code and improve performance by eliminating unnecessary synchronization
refactor intent creation in Utilities . java to use a Intent chooser for sharing actions to streamline activity sharing logic and improve code readability
removed the public access modifier from the Roster constructor to restrict access to the constructor for better encapsulation
added basic constraints to the certificate generation extension in TestUtils . java to enhance security by enforcing basic constraints during certificate validation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to verify behavior when using different transform offsets
removed redundant checks for multiValued ( ) in TrieDateField and TrieField classes to simplify code and improve readability by eliminating unnecessary
removed the TaskbarStateHandler class and updated BaseQuickstepLauncher to utilize it to streamline the codebase by eliminating unused state
added a new class ` ArrayLength ` to test the behavior of ` getField ( ) ` and ` getDeclaredField ( ) ` on an array type
add log to hzstartit to help diagnose test failure
refactor the save method in ApplicationSettingsService to use @ PostConstruct and use @ ApplicationScoped instead of @ Singleton to improve resource initialization and
fix safepoint . iswithin ( int value , int newValue ) to handle negative value .
updated thread name field type from char array to string to improve compatibility with Java ' s string representation
updated the DEFAULT _ RAND _ SEED constant from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder .
add font support for stroke and font in pgraphicsjava2d
[ calcite - 1181 ] allow window and groupby with dynamic star column ( jesus camacho rodriguez
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to find nested children of a comment to enhance the
added import for Messages and updated HTTP status code in HTTPServer . java to provide a warning icon for the PMS 141 status
use event . getmodifiersex ( ) instead of nativeevent . getmodifiers ( ) in psurfaceawt and psurfacejogl (
node : increase node cycle for amd64countleadingzeronode and amd64counttrailingzeronode .
( chore ) camel - as2 : fix npe when disposition notification be not set
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
added a button to clear logs and implemented a clear method in ErrorConsoleViewModel to enhance log management functionality and improve user experience
updated the assignment of mRecentsAnimationController in RecentsView . java to ensure mRecentsAnimationController is properly set to null
updated caption handling and message serialization in multiple classes to improve clarity and maintainability of caption management functionality
added connection pooling functionality to multiple test classes and improved data source handling in AbstractTest to enhance test reliability and ensure proper resource management
simonstewart : adding support for the opera driver to the default session
update exception handling in ManageJournalsPanel . java to show a message dialog when a file download fails to improve user experience by providing clear
added multiple Lifx product entries and updated their descriptions in LifxProduct . java to enhance the functionality and user experience of the Lifx product
added asynchronous handling and request management in OverseerCollectionProcessor , CollectionsHandler , and CollectionsAPIAsyncDistributedZkTest to improve asynchronous
refactored the ` PostgresDatabase ` and ` PostgresDatabaseTest ` classes to use a new ` assertPrimaryKeyName ` method for
updated LogPage and SummaryPage to use the repository HEAD if the objectId is empty instead of null to ensure the correct repository reference is used for
skeletoninterbonewire : use bone ' s unit _ xyz instead of bone ' s unit _ y
added a ` browserDestroy ` method to the ` AndroidImplementation ` class and modified the deinitialize method in ` AndroidImplementation . java ` to
added a call to wait for the active collection to check for readApiTestViolations to ensure the test environment behaves correctly with the expected
refactor loop structure in ScreenTerminal . java and update import statements in Tmux . java to improve code readability and maintainability by
updated SoftResetAction to use getControllerState method instead of backend . isIdle ( ) and backend . isPaused ( ) to improve clarity
disable imageio stream cache , speed up texture pack reloading .
added conditional logic to set the parentFolder variable in Request and RequestV2 classes to ensure proper resource retrieval for different media types in the application
api : fix typo in networkofferingvo ( # 5358 )
replaced the method of deleting the temporary file on exit to ensure proper resource management and avoid potential memory leaks
added error handling for 403 responses in StandardGitHubRepository . java to improve robustness by logging the received 403 response for better debugging
added a method to retrieve the original MessageFactory in MessageFactory2Adapter and updated tests to use this new method to improve encapsulation and ensure
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress serialization warnings
updated regex pattern in Version . java to include minor version numbers to ensure compatibility with versions starting from 1.3
added initial and dismiss delay settings to the ToolTipManager in ExtractionModelFrame . java to improve user experience by providing a smoother
refactor ProjectCommand to utilize an ImmutableSet for passed - in targets instead of options parameters to improve code clarity and maintainability by central
added timezone settings and an assertion to the format2445 method in TimeTest to ensure correct formatting of time values for UTC timezone
refactor MediaSessionConnector to improve code structure to enhance maintainability and readability of the code
refactored code to use the endpoint ' s ssl implementation directly instead of a new JSSEFactory to improve code readability and maintainability
updated accuracy display in GpsLoggingService to use getAccuracy instead of getAltitude to improve clarity of accuracy information displayed based on user
added a check for futures enabled in BinanceExchange and updated related services accordingly to ensure that future data adaptation only occurs when futures are enabled
update admin account management to use instructor course table instead of instructor account table
added connector . setAcceptQueueSize ( maxWorkerThreads ) to ThriftHttpCLIService . java to specify the maximum number of worker threads for
replaced usage of ` getClass ( ) . getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` in `
http : / / issues . apache . org / activemq / browse / amq - 2748 - fix for issue with ssl
replaced ` UserException . parseError ( e ) ` with ` UserException . validationError ( e ) ` in ` DrillSql
updated the calculation of the duration in GCInspector . java to ensure it may be zero for a really fast collection to prevent runtime errors
refactor JavadocComment handling by replacing ` flatMap ` with ` filter ` and ` map ` for improved readability to enhance code clarity
added OS detection and refactored memory handling in ReserveMemory . java and WhiteBox . java to improve code clarity and support for
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure that regions
hbase - 13063 hbaseadmin # waitfor should provide procid when wait for completion ( chunhui )
camel - 16400 : camel - cxf - make it easy to configure and allow to use custom service class .
refactor YAML change log serialization to use a map - based approach to improve readability and maintainability of the code
replaced ` out . println ( ) ` with ` out . print ( ' \ n ' ) ` for schema element printing to improve read
updated debug road regeneration and clipboard format handling in multiple classes to streamline road regeneration process and improve code maintainability
updated HomeFragment to use getActivity ( ) instead of getContext ( ) for nowPlaying and footer instances to ensure compatibility with the current activity context
added a GenericGenerator annotation for " native " in multiple classes and updated the @ GeneratedValue annotation to include it to specify a specific generator for
removed the country parameter from the getSystemTimeZoneID method in TimeZone . java to simplify the method signature and reduce unnecessary dependency on user . country
updated BZip2Codec to include position and remaining parameters in the write method to ensure proper writing of uncompressed data to the output stream
[ web ] move startlogger ( ) method from appw to geogebralogger
added a constant for empty value type and modified the creation logic in Value . java to ensure a default value type is used when no type is
replaced ` = = ` with ` . equals ( ) ` for group comparisons in ` GroupManager . java ` to ensure proper string comparison
renamed Liquibase classes and updated their references in LiquibaseDropAll . java to improve clarity and consistency in naming
refactor SimplexNoise class to improve code structure to enhance maintainability and readability of the code
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated tests to use ` newInstanceExact ` instead of ` newInstance `
rename min / max row compacted size to min / max row size . patch by jbellis ; review by brandonwilliam
fix json serialization of artifactmetadata in modmetadata . close # 2373
added a boolean flag ` hasPrevious ` and modified the logic for setting and deleting a object in ` NativeArray . java ` to improve handling
updated file handling logic to set the parent file ID for uploads to ensure the upload context reflects the current file ' s parent directory
added a new file UTF8ReaderBug . java to test UTF - 8 handling of supplementary characters to ensure proper XML parsing with UTF -
added unit test base on user forum issue
updated Binance integration tests to include " ethbtc @ depth " and " ethbtc @ depth20 " in both BinanceUs
added a resetAllocation method to the Wrapper class and invoked it in SimpleParallelizer to reset the initial and maximum allocation values for better resource management
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct usage of ` System . getProperties ( ) ` with synchronized access to ` configProps ` and ` props ` to ensure thread safety
refactor ModelUtils to improve code structure to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert to improve code structure to enhance maintainability and readability of the code
added conditions to adjust width and height based on the index of mLabels to ensure proper alignment of labels with their respective entries in the layout
added testDelay ( ) and testAbort ( ) methods to CodeFirstSpringmvcIntf and TestResponse classes , and implemented test
updated method to retrieve values from a dictionary instead of using a string array to improve flexibility in handling multiple text fields
replaced the method of obtaining the source path in Omnibus . java to simplify the code by using BuildTargetSourcePath directly
disable ` ` download latest ' ' command by default
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` variable to track the number of
removed the " - b " argument from AidlStep and updated the format string in GenAidlTest to simplify command - line
delete obligation on edge comparison , fixes # 79
added a TODO comment to the FakeHttpLayer class to indicate that the test method should no longer be used
replaced ` handleError ( cause ) ` with ` revokeLeadership ( ) ` in ` EmbeddedLeaderService . java ` to improve clarity
replaced ` Stream ` with ` Single ` for handling discovery clients in ` CompositeDiscoveryClient . java ` to improve performance and readability by
replaced ` applySystemConfiguration ` method with ` applyQualifiers ` in multiple files to unify method naming for clarity and consistency
[ hotfix ] [ config ] improve jobmanageroptions description
refactor updateNoWidgetsView and updateNoSearchResultsView methods to update recyclerview visibility based on adapter type and search mode to improve
added class loading for WstxOutputFactory in XmlUtil . java and updated test assertions in MultiVersionXmlParserTest . java to ensure
refactor test setup in AuditAliasCommandIntegrationTest to use a setup method to ensure proper resource management and initialization of the ProjectWorkspace
removed debug logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to streamline code by eliminating
( chore ) camel - cxf : disable test that depend on the parent class
added error handling for periodical refresh in CachedStore . java to improve robustness by logging errors when updating the store
refactor ` ChainingAuditPrincipalIdProvider ` to use ` @ RequiredArgsConstructor ` and modify ` CasCoreAuditConfiguration ` to improve
added default background fill checks and refactored color retrieval logic in HSSFCellStyle and HSSFPalette to ensure consistent behavior and
updated ZonedDateTimeFormatterBenchmark . java file to improve benchmarking accuracy for date formatting
refactor DistributedUpdateProcessor to use a dedicated ` shouldBufferUpdate ` method for better readability and maintainability to improve code clarity and
added a condition to check if the rocket stage is null before proceeding to ensure that the program does not proceed if the stage is not
updated command descriptions and refactored item retrieval logic in WorldEdit . java to improve clarity of commands and enhance functionality for handling item replacement
updated the ExtendedMasterSecretExtension class to improve secret management functionality to enhance security and maintainability of the application
changed the declaration of the processor variable from non - final to final to ensure that the processor variable cannot be reassigned after initialization
added listener to notify on write failure in WritableKeyProcessor to improve error handling when the end of the stream is reached
added a new constant " CUBE " to the MySQLDatabase class to support support for the " CUBE " database type
added a try - catch block around the rm method in TestReplicationHandler . java to handle potential IOException when removing the snapDir
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related methods and
refactor tests in DefaultOkHttpClientFactoryTest to use direct method calls instead of reflection to simplify test code and improve readability by reducing
updated BatchUpdateException , PreparedStatement , and Statement classes to improve code clarity and maintainability
added null check for the variable ' os ' in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerException when ' os ' is null
ticket # 2694 : fix bug in algebravieww . getparentsplitpane ( ) and algebravieww . setwidget
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified the exception message in ` UIUtil ` to
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added shared preference for pull unread status in TalonPullNotificationService to manage pull unread status effectively during notifications
fix isnullnode to only replace object input if it be an object type .
updated Box2DTest . java , Pong . java , OrthographicCamera . java , and OrthographicCamera . java to
refactor layout management logic for comments RecyclerView in ViewPostDetailFragment . java to improve code clarity and ensure proper handling of null references
changed log level from trace to warn in CLIService . java to better reflect the severity of the operation aborted
added a print statement to display the method instance name and flags in JimpleBodyBuilder . java to improve debugging by providing visibility into method instance
ggb - 1347 do n ' t invoke callback on ie10 +
updated the ` getNotificationUsers ` method to include a ` deviceId ` parameter and modified the return logic in ` CacheManager ` to filter notifications
updated the baseUrl string in CGIARProvider . java from " http : / / droppr . org / srtm / v4
replaced the file chooser removal method with a property change listener removal method and added a new test class for bug 6520101 to ensure
change return type of handle method from void to boolean in HollowDiffUIRouter , HollowHistoryUI , and HollowExplorerUI to
refactor ` getRuleOptional ` and ` getRuleWithType ` methods to return ` Optional < T > ` and improve exception handling in ` Build
added visibility control for transport spinner based on whether the shortcut is making or not to improve user interface by hiding the transport spinner when the shortcut
added null check for attributes _ field in Attr . java and created new classes T7043371 . java and T7073477
modified backPressed method to return a boolean indicating whether the back button is clicked across multiple fragments to enhance user interaction by allowing the back button to
added support for long view index feature in QueryServices and updated MetaDataClient to retrieve view index data type to enhance functionality and ensure compatibility with long
updated string concatenation from " V " to " v " in SDRTrunk . java to ensure consistency in character representation
updated the private key path handling in PrivateKeyParserTests to use StringUtils to clean the path before validating the private key path
removed the columnPosition parameter from the diffDropColumn method and related calls to simplify the method signature and eliminate unnecessary parameters
updated IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the current version of the
hbase - 26975 add strict column family check to importtsv ( # 466 )
[ java ] : use a subscription id instead of a string for the log recording channel .
replaced calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent , string ) ` for starting activities and updated
added a condition to skip processing if the first element is a string equal to " i " to avoid unnecessary processing when there is a single input
hbase - 25813 procedure - addendum : fix typo in javadoc ( # 258 )
added Locale and ClassLoader parameters to the applyResourceBundle method calls in Toolkit and Window classes to ensure proper resource loading with default locale and class loader
[ j2kt ] implement normalizearraycreationskotlin pass for type with newarray .
added checks for zero counts and improved logic to handle missing counts in the PerSegmentSingleValuedFaceting class to enhance robustness and prevent
fix potential npe in modmetadata . getauthorlist ( # 6321 )
added a new module - info . java file and a new OSGiTest . java file for testing the OSGi dependency to ensure
nifi - 3323 this close # 3324 . fix propertydescriptor . isdependentserviceenableable .
hbase - 26975 remove the need to clear the buffer on fail in htable # setautofflush ( )
test ( annotation ) : add test for annotation apply on any element in a class
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and a corresponding test in ` SimpleFeatureImplTest ` to provide a
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify exception
refactor RelyingPartyRegistration class for improved clarity to enhance code maintainability and readability
removed the enableLogging method from JavaCompiler . java to streamline logging configuration by eliminating unnecessary method
added a new class ` InJavaSourceSet ` to handle Java source sets and updated imports in ` UsesJavaVersion ` to improve code organization
make sure gdalinfo file be load by the externalparser when run the test
added a new method ` createGetter ` to the ` ReflectionHelper ` class to provide a way to create getter objects based on specified attributes
removed the conditional check for external storage version in DirectUpload . java to simplify the code for better readability and maintainability
added a new configuration option ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and updated related classes to handle commit
createvolume api : make diskofferingid or snapshotid optional
added null check for content assignment in ToHtml . java and updated assertion in BaseTestCellComment . java to ensure content is not null and
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new file ` Issue382 . java ` that implements error handling with specific error types to address issue # 382 related to specific
replaced the import of RuntimeException with a static import for signum and simplified the return statement in PositionUtils . java to improve code readability and
set the visibility of the text holder to GONE when the condition is not met to improve user interface by hiding the text view when the
fix : fix npe in astparentconsistencychecker , jdtimportbuilder , ctimportimpl . getimportkindfor ( ) ( #
simonstewart : allow the xpi driver to get the profile from the firefoxoptions object .
add bucketpickup hook to liquidblock ( # 61422 )
http : / / issues . apache . org / jira / browse / amq - 2902 - fix unit test that do n '
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to accurately reflect
refactor ` DistinctObservation ` handling by removing the ` existingObservations ` parameter and replacing it with ` distinctObservation ` to
updated ` TEST _ NIGHTLY ` , ` TEST _ WEEKLY ` , ` TEST _ AWAITSFIX ` , and ` TEST
renamed the method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and updated logger initialization logic to improve clarity and ensure
added denyAccess method for reflective access control in GraalContext . java to enhance security by restricting access to specific classes
refactor pixel handling in PGraphics2 to use WritableRaster for improved data management to enhance code clarity and maintainability by encapsulating
updated the transaction properties in HiveAbstractReader to include the partition to ensure proper verification of transactional properties for the table and partition
refactor logic for overlay scrolling and add zero overlay handling to improve clarity and functionality of overlay scrolling behavior
hhh - 14619 introduce unmodifiablebatchbuilderimpl and unmodifiablebatchbuilderinitiator to facilitate concurrent modification of batchbuilder
improve error message when shouldnotreachhere be throw during analysis .
added a new test class ` MockWithStaticStateDemo ` and a method to verify its state to ensure that spying on a class ret
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure SQL syntax is correctly parsed and
added null check and error handling for the UGI action execution in SecurityUtil . java to improve robustness by handling potential exceptions during action execution
added error code handling to the audio buffer allocation error message in OpenALMusic . java to improve debugging by including the original AL error code
camel - 16400 : camel - endpoint - rename reslovestringparameter to resolveparameter . deprecate reslovestringparameter a
[ calcite - 1343 ] rexnodeconverter should use correct scale for decimal literal when unscaled < 0
updated the way vendor and device properties are retrieved in WebAuthnMultifactorDeviceProviderAction . java to use Optional for null handling to
updated the parameter in the updateAccount method call from " testName " to " now " to ensure the account update is successful with the correct
changed the type of ` topStage ` from ` AxialStage ` to ` RocketComponent ` and updated selection handling in the ` Design
added longRunningTime parameter with getter and setter methods to Args . java to enable dynamic configuration of the long running time for the VM
tweak ref comparison warning and add test for ideas
updated import statements in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to use java . util . ServiceLoader instead of sun
fix gml3encodingtest . testencoding ( ) so it do n ' t crash .
simplified assertion statements in TestRestClientRequestImpl . java to improve code readability and maintainability
updated conditional check in MissingUniqueConstraintChangeGenerator to include a reference database comparison to ensure unique constraints are validated correctly based on the reference database
refactor the handling of Android constants in IjProjectTemplateDataPreparer to improve readability and streamline the proguard configuration path retrieval
replace assertions with await statements in DuplicateCookieTest . java and SessionRenewTest . java to improve test reliability and wait for requests to be
updated the ChromeTraceBuildListener and ChromeTraceBuildListenerTest to include user arguments and daemon status in the build map to enhance the build information
svm : substitute resourcebundle in nativelibraries instead of localizationsupport
corrected a typo in the log message from " Set match limit to " to " Set match order to " to ensure accurate logging of
added a new file TheRockMetaDataDemo . java to demonstrate retrieval of exchange metadata to provide an example of how to access
made ` FloatingDecimal ` and ` FormattedFloatingDecimal ` class strictfp and added strictness checks in ` ParseDouble ` to
removed unparseIdentifier from column name appending in ColumnStatsSemanticAnalyzer to simplify column name handling by eliminating unnecessary identifier parsing
added a test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and updated method signatures in ` BlockStatementTemplateGenerator ` to
added a check for synthetic methods in InstantiateStaticClass and implemented a new test method in Bug1282 to ensure correct instantiation of static classes and
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the path
added handling for pending rescues in IkStepDefinition . java to improve control flow by managing pending rescues more effectively
make equal ( ) and hashcode ( ) method final in type to avoid npe
added a method to retrieve the SyncLevel based on a string representation or default to FLUSH if the specified sync level is null or empty to
test : fix flakiness of controlcommandstest . testpause ( )
added a condition to check if the recovery state is not in the CONSTRUCTION state and RECOVERY state to ensure that the recovery process
* fix issue with ` opencv _ core . create ( ) ` not call after ` opencv _ core . create ( )
added sdkPath field and updated related methods in AppleBundle and SwiftStdlibStep to utilize it to enable dynamic SDK root configuration for
[ hotfix ] [ runtime ] remove local file lock from transientblobcleanuptask
cloudstack - 3555 : fix typo in warn message
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type
fix checkstyle issue in betterblockpos . java ( # 700 )
updated the proxy retrieval method in EmbeddedVelocityToolboxView . java to use the class loader to ensure the correct servlet context is used for proxy
refactor nightly warning logic to use a dedicated method for version checks to improve code readability and maintainability by centralizing version checks
added support for OracleDatabase in LoggingExecutor and JdbcExecutor , and modified statement replacement logic in LoggingExecutor and JdbcExecutor to ensure proper handling of
add findbugs . nullderef . assumensp flag to disable null value analysis
add a port to the jolokia test so that it run on the correct port .
updated BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN constants in DrawAudio . java ,
added a method to add the multifactor authentication provider bypass to the DuoSecurityMultifactorProviderBypassConfiguration to enhance security
reformatted method signatures in MaxRectsPacker . java for consistency to improve code readability and maintainability
[ drools - 7 ] fix checkstyle issue in drools - core
added helpPage static variable and its getter / setter methods to PMS , and refactored HelpTab . java to use this method to
added two new files , GeocodeProviderFactory . java and Constants . java , to implement geocoding features in the Omni Notes
updated import statements for CharArraySet from ` util . util . CharArraySet ` to ` org . apache . lucene . analysis .
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated GATEWAY _ SERVER _ ID to use Protocol . GATEWAY _ SERVER _ ID and added checks for object IDs in MemoryCommand
updated condition checks in SegmentsInfoRequestHandler and refactored SolrInputDocument creation in CollectionsAPISolrJTest to improve code clarity and
updated the calculation for numPredictiveAppCols based on phone type to ensure correct app column count for phone devices
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated related logic in ` DrillJoinRelBase ` ,
add a base class for buildcraft to make it easy to drop item from the inventory .
updated layout parameters and gravity settings for the target layout in DeviceProfile . java to improve layout positioning and align with the search bar ' s
replaced the method call from ` run ( ) ` to ` start ( ) ` in ` YahooSession . java ` to ensure
initialized ` ms ` and ` metaStoreClient ` to null in ` HiveMetaStore ` and ` HiveMetaStoreClient ` to ensure proper
updated locale handling to honor the default DISPLAY locale in the getDisplayScript method to ensure that the locale does not honor the default display script
updated import statements for ZkStateReader and simplified return statement in Replica . java to improve code readability and maintainability by using the correct
replaced ThreadLocalRandom with Random in StoreDirectTest . java to simplify random number generation and improve code readability
added a condition to check if the launcher is ready before backuping favorite items to avoid unnecessary backup operations when the launcher is not ready
update exception messages in Cell . java to include " space " and " top " , " left " , " bottom " , and " right
added unit test base on user forum issue
rename method ` getBodySpace ` to ` getBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability to enhance maintainability and facilitate future updates
use hamcrest assertion instead of junit in tests / integration / filemessagehistorytest .
added debug logging statements to the LoggerFactory in Grasscutter . java to facilitate troubleshooting and monitoring
changed the visibility of the highlightCnstScrRngQuery variable and its getter / setter methods to static in SpanScorer . java
updated conditions for workspace state checks in Launcher . java and added a method to retrieve the current state in Workspace . java to ensure proper handling
updated multiple assertion classes for consistency in naming and structure to improve maintainability and readability of the codebase
updated conditional logic to include cacheable check before notifying new templates to ensure that notifications are only triggered when the cache is enabled and the appropriate number
added ` SCOPE _ SOLR _ CORE ` and modified ` variables ` and ` dataImporter ` to utilize ` coreScopeSession `
added a primary key constraint for the measurement table in DatabaseMetaDataTest . java to ensure that the measurement table can be retrieved by its primary keys
rename -- permissions - config - path to -- permissions - config - file in PantheonCommand . java and PantheonCommandTest .
sec - 539 : remove unnecessary try / catch block when get the httpsession from the securitycontextholder .
added a new file TestIfWithDeadRegion . java that includes a method to retrieve string values using a Supplier to facilitate testing
rename englishud to englishusd to avoid confusion
refactor test concurrent access in SnowflakeIdGeneratorTest to ensure high - resolution timer is enabled and disabled after iterations to improve test reliability
added a static UI setting in AppSettings and modified MainFragment to conditionally hide the toast bar based on the settings to enhance user experience by
modified the privilege handling in WindowsSecurity . java to use a lambda expression to ensure proper resource cleanup to improve code readability and maintainability
refactor parameter handling in SamlRedirectLogoutHandler and WhitelistLogoutHandler to use ` setParameterIfAbsent ` instead of ` setParameter ` to improve
updated message dialog usage in MEncoderVideo , NavigationShareTab , and PluginTab to use localized messages to improve localization support and maintainability of
tika - 2275 -- add mime type for Excel Excel file ( tika - tika - ooxml )
added logging statements and improved feature path handling in Runner , FixJava , and FeaturePathFeatureSupplier classes to enhance debugging capabilities and ensure accurate
camel - 13850 : camel - eip - documentation - enricher - fix xml output with empty line .
do n ' t wait for migration from remove node . patch by jbellis ; review by brandonwilliams for cassandra -
added debug logging for stored notify and playback devices and refactored device setting logic in DeviceConfiguration . java and PortAudioAuto . java to
added WebSocketConfig and updated ReactorNettyWebSocketClient to accept ShenyuConfig as a parameter to control the maximum frame payload size
refactor CacheValidationListener to implement ISuiteListener and enhance test result handling to improve test validation process and ensure proper cleanup of test results
updated content length handling in MoreIndexingFilter to check for empty values before adding to the document to ensure that content length is only added if it
fix race condition in defaultsolverjob # terminate ( )
ignore pathalreadyexistexception when concurrent insert a non - exist timeseries ( # 10619 )
added a check method in Authz . java to return a boolean result to provide a way to check if a boolean value is present
changed access modifiers of several methods in Shadow classes from public to protected to enhance encapsulation and restrict access to these methods
fix the bug : do n ' t finalize the owner if the projectid be not specify
updated HttpParser and HttpParserTest to remove unnecessary null checks and improve code readability to streamline parsing logic and ensure proper handling of null
refactor thread initialization into a separate method for clarity to improve code readability and maintainability by reducing duplication
added an ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created corresponding tests in ` EnvironmentTest ` to facilitate
[ jbrules - 3534 ] add test case for mvel type coercion in drools9
updated import statements and formatting for consistency across multiple Java files to improve code readability and maintainability
added exception message to logger in ActionNode . java to improve error handling by providing more context about the exception
fix a bug in parse telephone number with tel : prefix .
modified visibility logic for shared file icon based on file type in FileListListAdapter to improve user interface responsiveness based on file type and
deprecated the deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and removed it from TestTxnCommands3 . java to
refactor configuration overlay handling in ExecuteStatementOperation , Operation , and SQLOperation classes to improve clarity and maintainability of session and
replaced usage of Lists . newArrayList with Arrays . asList in BTCMarketsStreamingAdapters and BTCMarketsStreamingService to improve code
fix ogrtest . testcomparetypes ( ) to be consistent with the other test .
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to simplify the interface by eliminating unused functionality
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 14850 : camel - netty - http - make it easy to configure http url with port or hostname . thanks to
use logging instead of system . out . println in testnonblockingapi
added a check to prevent processing if a connection row exceeds the size of the connection list to ensure that the connection list does not exceed the maximum
[ java ] adding a new rule that check if a method have the same name as the enclosing class .
added ` ExtendedPlatformComponent ` class and refactored ` ManagementFactory ` to utilize it for registering and retrieving platform mbeans to
added quote replacement for SQL queries in BasicQueryTest . java to ensure proper SQL syntax for SQL queries
updated parsing statements in BleutradeDtoTest and BleutradeExtendedDtoTest to include the " org / knowm / x
refactor TextEscapeUtils for improved readability to enhance maintainability and clarity of the code
added a filter parameter to the FunctionQuery in AbstractSpatialFieldType and updated the return statement in TestSolr4Spatial to enhance query flexibility by
added auto email functionality in GpsLoggingService and updated email handling in AutoEmailHelper to improve user feedback during GPS logging and ensure email is
replaced ArrayList with HashSet for inlinks and added iterator methods in Inlinks . java , LinkDb . java , and LinkDbReader .
added synchronization to stopScan and removed obsolete results in TradfriDiscoveryService to ensure proper resource management and prevent potential memory leaks
updated filter parameters in HiveMetaStoreClient and modified testFilterForPartition method to accept a boolean parameter to improve flexibility in filtering behavior based
added " Abandoned " to the list of statuses in TicketModel . java and updated related workflow variables in TicketsPage . java to handle
removed the initialization of columnAliasPrefix in multiple platform classes to simplify the code by eliminating unnecessary null assignments
updated record readers and input formats to use BytesWritable instead of Text to improve data handling capabilities in the Llap module
add warn for non - native jdks ( 32 - bit jvm )
simplified the conditionals in PdfCopy . java to improve readability and maintainability of the code to enhance code clarity and ensure
added a new daemon option DAEMON to the OptionEnum and implemented the handling of the PendantUI in TerminalClient to enable
added a new file ` FlushIndexTask . java ` that implements a performance task to flush the next buffer in the index writer to ensure that
update flush path calculation to use estimated size instead of guessed size
added a new condition to check for SEASONS in the expectedOutput conditions to enhance functionality to support additional output scenarios
added a new file LocalSocketAddress . java that demonstrates the use of DatagramSocket with IPv6 addresses to verify that the local
updated grid size coordinates in GridSizeMigrationTask . java to correct grid size points for migration process
replaced calls to ` getName ( ) ` with ` name ` in ` SerializerPojo . java ` to streamline code by elimin
added read - only mode support to the Context class and updated related methods accordingly to ensure objects are only modified in read - only contexts to prevent
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future updates
updated the calculation for the lastRunEnd and adjusted the offset check in BlockBoxing . java to improve the accuracy of runEnds and ensure
added support for EOFException in GracefulStopTest to ensure proper exception handling for closed channel exceptions
refactored lock usage to separate put and get methods in NetJavaImpl . java to improve code readability and maintainability by reducing
refactor NetworkParameters class to improve method organization to enhance code readability and maintainability
updated the method for setting account asset optimization in DynamicPropertiesStore to ensure correct asset optimization configuration based on application settings
added a new static final integer for J9 _ GC _ POLICY _ NOGC in VM . java to define a default gc policy for
added error handling for invalid contract proto errors in TransactionCapsule . java to improve robustness by throwing a specific P2pException for invalid
[ core ] remove strictexception rule ( no longer use )
updated resource path and improved error logging in HelpContent . java to ensure localization is available and fall back to English when no localization is available
added a new file ` ProcessorInfo . java ` to manage processor information to provide a way to retrieve available processors and handle security checks on linux
add - html option to generate html output ( default stylesheet be default . xsl )
disable logbackloggingsystem . logbackxmllocation in favor of optional .
updated HostLevelParamsHolder to improve handling of ServiceComponentRecoveryChangedEvent and made clusterId final to enhance code clarity and enforce immutability of
added conditional property checks for tag propagation in SleuthTagPropagationAutoConfiguration and updated test cases in SleuthTagPropagationAutoConfigurationTests
refactor dependency type handling in RustCompileUtils to use a switch statement to improve readability and maintainability of the code
updated oauth2LoginLinks method to accept a MultiValueMap for query parameters and added error handling to enhance the functionality of oauth2 login links by
hbase - 26975 fix halfstorefilereader to seek to the first kv before seek to the end of the file ( #
add default generationtiming . always to generated value and vmvalue generation , deprecate since 6.2 .
add test for layernorm ( ) function with nan and inf ( # 489 )
refactor showShareFile method calls to use a FileOperationsHelper for consistency across multiple activities to improve code maintainability and reduce redundancy across
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of LiquibaseUpdateMojo
convert the proxy type string to uppercase when setting it to ensure consistency in the proxy type representation
added a new file mod _ MinecraftForge . java that defines a mod for MinecraftForge to facilitate
added logic to fetch and cache columns based on table and column names in JdbcDatabaseSnapshot . java to improve performance and maintainability by reducing
added a new container and a label to the CSSBorderTest class to enhance the UI with a customizable border style
refactor ` RetryAutoConfiguration ` to ` RetryInterceptorAutoConfiguration ` and introduce a new ` RetryableStatusCodeException ` class to enhance
replaced ` FILL _ PARENT ` with ` MATCH _ PARENT ` in the superclass constructor to improve layout handling by using a more appropriate layout
updated the calculation of parentTaskName in PinotHelixTaskResourceManager to use currentTimeMillis ( ) instead of nanoTime ( ) to ensure accurate
added error handling for invalid input in the AddServiceRequest method to improve robustness by providing clearer error messages when parsing fails
refactor indexdatabase . isindexversionedfilesonly ( ) to always return true for non - versioned file .
[ giac ] do n ' t attempt to fix arrayindexoutofboundsexception in giac
updated AnonCipherWithWantClientAuth . java file to improve security and enhance encryption features
mark multiple methods as deprecated in ProducerTemplate . java to indicate that these methods should no longer be used and may be removed in future versions
updated JLayer class to improve functionality to enhance performance and maintainability of the code
use asserttrueallthreadexception instead of sleep in evictiontest . testeviction ( )
replaced the internal ` encodeInternal ` method with a direct variable ` saltedPass ` in ` Md5PasswordEncoder . java `
removed unnecessary variable assignment for viewTreeObserver in IconRecentsView . java to simplify code and improve readability by eliminating unnecessary variable
refactor Response class for improved readability to enhance maintainability and facilitate future updates
fix typo in sstablemetadata . getmaxtimestamp ( ) . patch by jbellis ; review by stu hood for cassandra
increase the size of the security panel so that it wo n ' t appear multiple time .
added null and empty checks for reply handling in multiple classes to ensure that compressReplies behavior is only applied when replies are not empty
refactor HitbtcBalance class to improve string representation and implement equals and hashCode methods to enhance code clarity and ensure proper object comparison
fix ( sql ) : fix where clause with timestamp ( timestamp ) order by
updated return statement in RetriesExhaustedWithDetailsException to return the addresses as a string to improve error handling by providing a clearer
added OpenCookie import and refactored file handling in EditGcodeFile . java to improve code clarity and maintainability by using a
updated import statements in JsonToGrpcApplicationTests . java to use the new version of Apache HTTP client classes to ensure compatibility with the latest
updated energy handling logic in PipePowerWood . java to use the minimum energy to ensure that the battery ' s energy is set correctly
added a check to delete the temporary output file if it exists to ensure proper resource management and prevent potential memory leaks
updated the JSON property name from " tid " to " id " in BitstampWebSocketTransaction and added new test cases in BitstampStreamingMark
added time limit checks in ReplayProcessor and ReplaySubject , along with corresponding test cases in ReplayProcessorTest and ReplaySubjectTest
corrected a typo in the expectedCitation string in CitationStyleGeneratorTest . java to ensure proper formatting of the expected citations
added new SQL statements and modified the prepared statement for inserting columns in MediaTableFiles . java to improve code readability and ensure default values are
g3d - 310 : show _ definition _ for _ equation _ in _ exam should not show equation definition in exam
added a null check for the component before proceeding with further operations to prevent potential NullPointerExceptions when accessing the component
hbase - 26975 add caching for meta scan when startrow = = null and scanroot = true
updated the init script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes to improve code organization to enhance maintainability and readability of mathematical functions
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable or disable the transient taskbar in the
[ hotfix ] fix checkstyle violation in accessexecution and archivedexecutionvertex
added a condition to set the density if scale is = 3 to ensure consistent density for non - 3 scaling scenarios
rename the ' optional ' boolean to ' vararg ' in the Parameter class and related methods to improve clarity and consistency in naming conventions
added an exception parameter to the log statement in RegionStateStore . java to provide more context for debugging and error handling
refactor assertion in TestClusterUpgradeUtils to use a lambda expression instead of an anonymous AssertTask to improve code readability and simplify the assertion
updated warning log message format and refactored AsyncHttpConnection and AsyncContextTest classes to enhance clarity of warning messages and improve code organization
added a boolean parameter ` showArrow ` to the constructor of ` SearchUiManager ` to allow the option to show the arrow in the search
added a conditional check for MVStore before setting lock mode in Database . java and removed the testSetMode method in TestRowLocks . java
skip big endian test on linux / amd64
added type checks for ` Integer ` , ` StringValue ` , and ` IntValue ` in ` Scalars . java ` to improve type safety
improve error message when create table with multiple primary key specify
added conditional logic to set drawable resources based on LMP status in multiple classes to ensure appropriate UI elements are displayed based on the status of the
fix an npe in vmservicemanager . getviewcount ( ) ( # 5346 )
added methods to configure content type , xss protection , cache control , strict transport security , and frame options in HeadersConfigurer . java to
refactor ObjectEnumerableAssert to improve code readability to enhance maintainability and facilitate future updates
[ grid ] move cdp test from smoke to distributedcdp
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the aggregate root ' s type for
added support for prebuilt libraries in the Python binary configuration to enhance dependency resolution for Python modules in the build process
added client authentication handling in NetServerOptionsConverter and updated HttpServerOptions to use this new constant to improve clarity and maintainability of client authentication
updated repl directory paths to use " / user / hive / " instead of " / user / $ . system : user . name " for
refactor task view retrieval logic in RecentsView . java to improve clarity and efficiency to enhance readability and maintainability of the
http : / / issues . apache . org / jira / browse / amq - 4568 - add timeout to the amq
removed clearAll ( ) method from DataTableTopComponent to improve performance by eliminating unnecessary operations
rename ` controller ` variable to ` flowController ` in multiple classes to improve code readability and maintainability by using a more descriptive variable
fix ( griffin ) : fix pipeline breakage in operator tree generation .
added a new import statement for ClassLoaderHandler in module - info . java to utilize the ClassLoaderHandler functionality in the module
added methods to set and retrieve a solution in SolutionBusiness and updated SolverAndPersistenceFrame to utilize this new solve method to improve code
added JsonIgnore annotation to ApplicationSettings . java to exclude sensitive fields from JSON serialization
updated null check condition from checking if throwable is null to checking if it is not null to ensure proper handling of null throwable scenarios
refactor null check for queryInfo in QueryTimeManager . java to improve readability and maintainability of the code
fix auto - workbench progress bar not be visible for recipe with no material .
fix gl200 text decoder ( fix # 2696 )
rename ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` for clarity to
removed redundant calls to HttpMethed . waitToProduceOneBlock in HttpShieldTrc20Token004 . java to streamline
ww - 3990 add injectable interface to allow container to initialize instance
refactor timerObservationHandler to streamline tag creation and error handling to improve code readability and maintainability by reducing redundancy
changed the type of SYNC _ DELTA _ RATE from float to double and updated the fetch time calculation logic to improve precision in
deprecate unwrapped fragment expression in thymeleaf 1.2 . 0 ( # 1841 )
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when accessing concurrent data structures
resolve http : / / issues . apache . org / activemq / browse / amq - 2698 - fix for http :
added new color constants and improved extractInto method to handle fallback color extraction to enhance color extraction functionality and support for dark text hints
add data folder access check in SketchBuilder . java to ensure the correct source folder is included in the list
updated the return value of ` appendContent ` method to use ` StringUtils . isEmpty ( ) ` instead of ` TextUtils . isEmpty ( ) `
removed instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify the session registry initialization process
added error logging for reconnection failures in NettyStreamingService to improve error tracking and debugging for connection issues
updated proxyFactory initialization to use JavassistProxyFactory instead of Factory to ensure compatibility with the internal Javassist framework
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` for the ` _ threads ` field in ` QueuedThreadPool . java ` to
updated SocketExceptions to use String . join for joining messages and improved exception message validation to enhance code readability and provide clearer error messages
added a check for view paths under the repository directory in ProjectView . java to improve error handling for view directories that are not under the repository
remove ` ` tab - header - area ' ' drag - and - drop functionality from ` ` jabrefframe ' '
add usecompressedclasspointers option to dump and load class .
do n ' t log error if update log be not in active or replay state .
deleted the ConnectionHook . java file to remove unused code related to connection management
removed unnecessary null assignments for ` waitForReplicasInSync ` in multiple test files to streamline code and improve clarity by eliminating unnecessary
updated assertions in ParameterAssert , RestSwaggerArrayEnumTest , and RestDslXmlGeneratorTest to use " integer " and " number
updated the ApexLanguageModule to use the external version string instead of a hardcoded value to ensure compatibility with the application ' s external version
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory and modify thread management to improve thread management and ensure proper shutdown of the aggregate engine
updated WebSocketAsyncConnection to accept a ByteBufferPool parameter instead of a StandardByteBufferPool to improve memory management by utilizing a custom buffer pool for
added scrolling functionality to the thumbnail layout based on the index to improve user experience by ensuring the thumbnail is visible at the appropriate position
fix ( griffin ) : fix sample by on timestamp override by other column alias ( # 1181 )
added an @ Override annotation and refactored animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation to improve code clarity and
added a condition to disable the default user agent in the HttpClient builder to enhance security by preventing user agent management during HTTP requests
added conditional handling for pubsub hub bub settings in FeedRefreshUpdater to ensure proper handling of pubsub based on application settings
changed the visibility of the finalize method from public to protected to restrict access to the finalize method for better encapsulation
added handling for synthetic classes in StubJarClassEntry . java to ensure correct ABI calculation for synthetic classes
( scott phillips ) add dspacewebapp to disable the ui
added null check for leftTableAlias and implemented method to retrieve its value in RowResolver to ensure that column names are present in any of these tables
[ hotfix ] [ runtime ] fix typo in jobgenerator # withidentity
updated logging levels and transaction handling in Wallet . java for better clarity and consistency to improve error handling and provide more informative logging for broadcast
increased the timeout duration for put a value in a map from 3 seconds to 6 seconds in BasicMapTest . java to allow more
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` to ensure
added a new enum TlsClientCertPolicy and refactored client certificate policy handling in GitBlitServer to improve code clarity and
replaced a conditional check with a debug log statement in KrakenFuturesStreamingService . java to simplify the code and improve readability by
added headers and subProtocols to the ProxyWebSocketHandler to manage WebSocket protocols to enhance WebSocket handling by allowing customizable protocols from the request headers
added a debug log statement for fetchReq in HiveQueryResultSet . java to facilitate troubleshooting by providing insights
updated the formatting of dimensions and label in HolidayEventFormatter . java to improve clarity and consistency in event display
refactor ` FinalizePrivateFieldsTest ` to ` ignoreInnerClass ` and add a new method ` isInnerClass ` to improve test cl
updated UnexpectedJobExecutionException . java file to improve error handling for unexpected job execution exceptions
removed the module - info . java file and modified the buttonShouldBeOpaque variable in AquaLookAndFeel . java to
updated maxFreq and maxCost references from int to long in DrillSidewaysQuery and DrillSidewaysScorer classes to improve accuracy
added a new classRegsitry entry for GeoDegeneratePath in StandardObjects . java to support GeoDegeneratePath functionality in the
removed the ' preFill ' parameter from multiple pool constructors in the Pool and FlushablePool classes to simplify pool initialization by eliminating unnecessary
updated taskbar state handling in TaskbarLauncherStateController and added SYSUI stashing in TaskbarStashController to ensure taskbar
added null check for default style before comparing and removing styles to prevent potential NullPointerException when accessing default style information
refactor GuiUtil methods for better size management and introduce a new MarqueeLabel to enhance user interface responsiveness and
refactor icon retrieval logic in FileTreeViewHolder . java to streamline file name checks and improve code readability to enhance maintainability and
updated assertions in ParallelUniverseTest to use contains instead of isEqualTo to improve clarity and consistency in test validation
fix concurrentmodificationexception in xmlreporter . reporttests ( )
add a new test class for native probability function query
added a call to deregister the ClientContainer instance in ShutdownThread to ensure proper resource cleanup and prevent memory leaks
hhh - 14836 - fix issue with sybase dialect that do not drop temporary table after use
danielwagnerhall : do n ' t use color . fromrgba ( ) in htmlunitwebelement . fix
updated multiple Java files related to Solr core , XML writer , DocIterator , FunctionQParser , and QueryParsing to improve code organization and maintain
refactor LinksIndexingFilter to improve code readability to enhance maintainability and facilitate future updates
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommitRecommit . java to improve readability of memory allocation logs
update ad playback state handling in AdTagLoader , AdsMediaSource , and AdPlaybackState classes to ensure proper state management when no adGroup
refactor the equality check in MultimapSubject to use a boolean variable for clarity to improve code readability and maintainability by avoiding
corrected the spelling of " deg _ text " to " unit _ hz " in the fetchPropertyValue method calls to ensure consistency and
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated the initialization of the TreeMap to accept includedLabelSets as a parameter to improve flexibility by allowing multiple label sets to be included
fix npe in vertexlighterflat when the vertex format be null .
add ` grpc . message _ received . visible ` to ` grpc . tracing . currenttracecontext ( ) ` if ` grpc . message _
updated time zone handling in ScheduledTrigger . java to utilize TimeZone to improve code clarity and ensure correct conversion of time zones
added new files AsyncBucket . java and InMemoryExtension . java , and updated Bucket and ConfigurationBuilder to use this new extension class to enhance
added regex pattern matching for class paths in resexhausted003 . java to improve error reporting for missing test class paths
formatted code for consistency and readability in AbstractConnector . java to improve code maintainability and adhere to coding standards
renamed OngoingStubbing class for clarity to improve code readability and maintainability
added support for reuse of a WebServer and modified related methods to enhance the flexibility and control over web server reuse in the application
changed the variable name from ' productConstructor ' to ' constructor ' in HttpClientUtil . java and added a static block in SolrTestCaseJ
ww - 4243 clear thread allowlist when use parametersinterceptor
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests ` to ensure the correct item writer is used for
[ drools - 7 ] do n ' t analyze gap / overlap if hitpolicy = collect
[ beam - 8470 ] add test for sliding window combine .
updated logging statements in LauncherModel . java and added a conditional check for allAppsDirty before binding all apps to improve logging clarity and
removed assertion for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to streamline test by eliminating unnecessary assertions
reformatted the code for better readability in the Solution . java file to improve code maintainability and clarity
refactor AquaMenuBarUI to utilize AccessController for accessing system properties and streamline usage of the useScreenMenuBar property to
fix glowentity . setrawlocation ( location , boolean fall ) not work properly .
refactor the query logic in SimpleJpaRepository to use criteria queries and set maximum results to improve code readability and maintainability while ensuring
added timestamp , parent hash , nonce , and difficulty attributes to the builder in BlockUtil . java to enhance the BlockUtil class ' s
replace loop safepointinsertionphase with safepointinsertionphase because it do n ' t support safepoints
hbase - 25836 fix npe in rsgroupinfomanagerimpl and rspcs when zkcontroller be n ' t
changed access modifiers of methods in ArtifactResolver from package - private to public to allow access to these methods from outside the package
stop the client connection handler and ensure proper resource disposal in BulletPhysics and ChunkProcessingPipeline to improve resource management and prevent potential
added a validation check for the minimum number of maxBufferedDocs in IndexWriter to ensure that maxBufferedDocs is at least 1 to prevent runtime
added logic to manage the login state in the LoginActivity based on the current state of the login process to improve user experience by ensuring the login
added null checks for source and valueExtractor in Pump . java and implemented a reverse order test for UUIDs in PumpTest . java
modified access modifiers of several methods in HttpShardHandlerFactory and LBHttpSolrServer from private to protected to allow subclasses to access these methods
updated the order variable from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added unit tests for DefaultAuthenticationService
added Jetty server handler imports and handlers in TestJNDI . java to enhance server functionality and improve error handling
refactor code for improved readability and clarity in SortedDynPartitionOptimizer . java to enhance maintainability and ensure proper validation of child
changed the return value of the method from checking if the loop is an NioEventLoop to always returning true to simplify the logic by directly
updated the logic to set the number of nulls in the StatsUtils class to ensure accurate handling of null values based on the new number of rows
camel - 13850 : camel - jbang - add kamelet option to export to dsl . thanks to stephan siano
added authorization handling and improved token upload process in OSMJob . java to enhance security by ensuring users are authorized before uploading to OpenStreet
refactored test to return compilationresult instead of void
added client authentication support to IoTDBRestServiceConfig and RestService classes to enhance security by allowing client authentication based on configuration
refactor mock injection in PropertyAndSetterInjection and add a new test class ChildWithSameParentFieldInjectionTest to improve code clarity and
updated BloomFilter32bitSplit and BloomUriUniqFilter to use BloomFilter64bit and added InitializingBean functionality to
changed cursor adapter from false to true in HomeFragment . java and added preference for refreshing in TweetPager . java to enable refreshing
updated the intermediate header height ratio from 1f to 75f to improve layout responsiveness and user experience
updated import statements and added a new RecompilationEvent class for improved event logging to enhance code clarity and provide more informative logging
added support for managing system host preparation status in the execution command to enable users to check if system hosts are pre - installed before proceeding
added a boolean parameter to the include method in DatabaseChangeLog . java and created a new test class UnknownChangeLogFormatLoggingTest . java
added a loop to delete the first slash in the location when it equals ' / ' to ensure proper handling of path separators in the application
added support for entity and score properties in StaticPipeline to enable dynamic configuration of pipeline entities and scores
refactor filename handling and improve path management in Frame . java , WhoopsModule . java , Utils . java , and Whoops
[ geos - 8470 ] catalogrepository . lookupdatastores ( ) now throw an exception if the data store be not find in the
updated assertions in Assert . java to improve readability and maintainability of the code
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` , ` MultiLineJaggedTextTests ` , and
fix unit test which fail on slow ci server
updated the parameter types of ` writeMeasurementScheams ` and ` write ` methods from ` List < IMeasurementSchema > ` to
update memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to include expected memory usage to ensure
updated the jar file name from " slf4j - log4j12 " to " slf4j - reload4j "
[ hue ] add wait for assertion before check status detail ( # 11347 )
changed package declarations from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` in multiple activity
[ drools - 1276 ] ignore test when drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that accepts a ` File ` schema file and a ` StreamDataProducer ` to facil
refactor AbstractExpressionPart to improve code structure to enhance maintainability and readability of the code
[ hotfix ] fix checkstyle violation in taskslot
change listener name from FIRE _ EXCEPTION _ ON _ FAILURE to CLOSE in NettyWebSocket . java and NettyWebSocketTest . java to
added error handling when releasing locks in MoveTask . java to improve robustness by catching potential LockException during unlocking
replaced Properties loading with ResourceBundle loading for GEM _ PATH , GUBY _ VERSION , and RUBY _ VERSION to improve code
transaction : use byteutil . empty _ byte _ array instead of a static zero _ address array
reformatted code for clarity in ClassGraphClassLoader . java to improve readability and maintainability of the code
[ hotfix ] [ test ] fix the blob storage directory test in jobmanagertest
chore ( bazel ) : update version of protobuf to v3.20 . 1 ( # 173 )
added a Bundle extras to the builder in FileDisplayActivity . java to store and utilize additional bundle data for the builder
modified conditional statement to ensure particle is not null before proceeding to improve code clarity and prevent potential null pointer exceptions
updated the expected number of cluster results from 4 to 3 in AmbariManagementControllerImplTest and AmbariManagementControllerTest to reflect
removed nullable annotation from the service column in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry . java
updated Bug4823811 . java file to implement new functionality related to bug 4823811
replaced direct addition of patternToDelete with a path relativization function to improve path handling by utilizing a custom path relativization function
refactor requestFullState method to accept a boolean parameter to control the initial request behavior based on whether the initial request is active
added a new attribute field and updated related methods in ShibbolethCompatiblePersistentIdGenerator . java to allow for customization of the attribute
corrected the spelling of " RequestValidationService " in the Inject annotation to ensure proper injection behavior and avoid potential runtime errors
refactor keyboard handling to utilize a bundle for logging statistics to improve logging efficiency and maintainability by centralizing the message data
modified conditional statements in FileNodeProcessor . java , MManagerBasicTest . java , and MTreeTest . java to improve code clarity
updated NavigableMap and NavigableSet classes to improve functionality to enhance performance and maintainability of the code
add a testslurpfile ( ) to make sure that ioutils . slurpfile do n ' t throw an ioexception
changed access modifier of ` client ` and ` wrap ` methods in ` GrpcChannelsProperties ` , ` GlobalClientInterceptorConfigurer ` ,
refactor span retrieval logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
added date conversion support in ETypeConverter and updated related classes to support date types in Parquet to ensure compatibility with Parquet ' s date
updated the string splitting mechanism in StyleConverter . java to use a constant for the COMMA _ SEPARATOR to improve code readability and maintainability by
ggb - 1181 fixed validation of start , end , and step value
refactor column validation logic in SemanticAnalyzer . java to improve clarity and maintainability to enhance error handling for mismatched column counts during query
refactor conditions for updating max scores in WANDScorer . java to improve clarity and correctness of document handling logic
refactor Correspondence class for improved clarity to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes instead of wildcard imports to improve code clarity and reduce
initialize ` curPixVal ` to a default value and add a new test class ` WhiteTextColorTest ` to ensure consistent pixel value handling and
use a collection to store supertypes , not a list , for the biome type .
corrected the variable name from ` withinTolerance ` to ` exceedsTolerance ` and updated the conditional check accordingly to improve clarity and accuracy in
updated test stability annotations in TaplTestsLauncher3 . java to include LOCAL and PLATFORM _ POSTSUBMIT flavors to
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
add a check for non - empty log file suffix before processing to ensure that the log file suffix is only processed if it is not empty
updated PythonBuckConfig . java for improved configuration handling to enhance clarity and maintainability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManager and ShadowApplicationPackageManager to ensure proper functionality of system shared library
fix meiligao protocol decoder ( fix # 168 )
added null check for tile before accessing its properties in PowerDiode . java to prevent potential NullPointerException when tile is null
updated cache deletion logic to include a progress dialog and improved cache size reporting to enhance user feedback during cache trimming and ensure accurate cache size
fix ( render ) : use com . google . common . base instead of com . google . api . client . util
http : / / issues . apache . org / jira / browse / amq - 4568 - throw a notauthorizedexception when
refactor scheduler . scheduleperiodically ( ) to return a new abstract method scheduleperiodically ( t state , action0 action ) .
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( operation . getRemotePath ( ) ) ` in `
added debug logging and improved handling of file matching logic in StreamUtil . java to enhance error handling and provide clearer feedback when multiple files
updated the ` create _ table ` method to accept a ` CreateTableRequest ` instead of a ` Table ` parameter to simplify the table creation
added an aborted flag to the FixedRateFragInsStateTracker and modified start and abort methods to be synchronized to ensure thread safety when accessing shared
blockquote , document , fenced , html , list , listblock , listblockparser , htmlstart . none ( ) should return
added network wifi status receiver and change wifi autoplay feature in postfragment .
simplified the condition for checking if a control frame is not final in FrameGenerator . java to improve code readability and maintainability by
set visibility of the collapse handle in WidgetsBottomSheet to VISIBLE to ensure the collapse handle is visible for better user experience
added new files ` Issue475 . java ` and ` XSS . java ` to implement server feature tests for HTML and JavaScript escaping to
added a conditional check to return early if units to scroll is zero to optimize performance by avoiding unnecessary scrolling when no units are available
updated the condition from checking if the contract list size is not greater than one to checking if it does not contain one to ensure that the contract
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes and corresponding tests in ` JsonArrayTest ` and `
added hashCode method to IPPPrintService and created TestRaceCond class for validation to ensure consistent hash codes for equal print services
replaced instances of ` version ` with ` getVersion ( ) ` in ` DB2iDialect ` and ` DB2zDialect ` to
added a condition to check if the transaction ' s platform fee is greater than zero in BaseStripeManager . java to ensure that only valid transaction
updated BatchUpdateException , PreparedStatement , and Statement classes to improve code clarity and maintainability
improve handling of encrypted and non - encrypted input buffer in mediacodecrenderer .
removed the ` public ` access modifier from several class declarations in ` AsynchronousAntn ` , ` BulkheadAntn ` , ` Circuit
added import statement for Retrofit in Part and PartMap classes to utilize Retrofit features in the application
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter handling and add new object handling to enhance code clarity and ensure proper handling of
added ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to the list of supported types in ` AbstractFloatingView . java ` to enhance
fix : update gapic - generator - java with mock service generation fix ( # 162 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation responsiveness based on
removed the second parameter from the render script creation in AllAppsView . java to simplify the render script initialization by eliminating unnecessary parameters
pmd ( build ) : fix checkstyle issue
refactor ` PluginListCellRenderer ` to use a new method ` isSystemBundle ` for checking system bundles to improve code readability and
hbase - 26975 fix checkstyle issue in integrationtestsparkbulkload ( addendum )
replace hardcoded 0.01 with a constant LOW _ FALSE _ POSITIVE _ RATE in KeyChainGroupTest . java to improve code
updated variable references from ` rocketConfiguration ` to ` config ` for clarity and consistency to improve code readability and maintainability by using
server : fix npe when agent be n ' t find by host id ( # 4597 )
add null check before converting data value in DefaultRecordStore to avoid potential NullPointerException when handling null values
kvm : improve error message when host can not be add .
updated string literals for NO _ NAME and NO _ VALUE in ParamAction . java to include NAME _ ATTRIBUTE and VALUE _ ATTRIBUTE to improve cl
updated constructors in ` BaseStubbing ` , ` ConsecutiveStubbing ` , and ` OngoingStubbingImpl ` to accept a `
added a method to strip method parameters and modified the ` getMethodLine ` method to use this new method to improve method name handling by removing unnecessary
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the new version release and ensure versioning accuracy
mondrian : use set instead of list to prevent concurrentmodificationexception .
[ geos - 7894 ] fix symbolmblayer styling issue ( # 4669 )
ggb - 2207 popup : resize popup only if there ' s overlap feature
updated error messages to include " - " prefix in ValidationSuite . java to improve clarity and consistency in error reporting
added a new ` StartingWindowListener ` class and refactored the ` onTaskLaunching ` method in ` QuickstepTransitionManager `
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code documentation and maintainability
updated exception messages in CheckPackageAccess . java to reflect PackageAccess and PackageDefinition security exceptions to improve clarity and accuracy in error handling for
increased the timeout in the awaitTermination method from 30 seconds to 90 seconds and added an assertion to check if the executor service is terminated
changed the loggingEnabled variable from a boolean to a Boolean and added a conditional check before setting it to improve flexibility in setting loggingEnabled and
added @ JsonIgnore annotation to the Schema class to prevent serialization of these fields during JSON processing
increased test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete before
updated method signatures and variable names in SimpleNaiveBayesClassifier . java for clarity and consistency to improve code readability and maintain
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to improve clarity and maintainability of the module ' s
refactor methods in Prototype . java for improved readability to enhance maintainability and clarity of the codebase
added a check for transactional table property in SemanticAnalyzer . java to ensure the correct table type is used for transactional scenarios
[ java ] : replace recordingwriter . writefragment with recordingwriter . onblock in replaysessiontest .
updated CeaDecoder and CeaSubtitle to use Format . OFFSET _ SAMPLE _ RELATIVE and modified return statements in CeaDecoder
added an " alias " attribute to the groupByTypeAndTag calls in KairosDatastoreTest . java and implemented the getAlias method in Datastore
replaced multiple currency pairs in VaultOfSatoshiBaseService . java with new currency pairs " BTC " , " LTC "
hhh - 13663 fix test failure on window due to resource leak .
updated import statements for KafkaSender in ZipkinKafkaSenderConfiguration . java and ZipkinAutoConfigurationTests . java to align with the new
added two new files , GwtBinaryIntegrationTest . java and A . java , to implement integration tests for building GWT binary to ensure proper
added a condition to hide the loading cause label and modified the handling of mouse events in SQLConsole . java to improve user interaction by preventing
reformatted code in EnhancedRandomImpl and EnhancedRandomImplTest for consistency to improve readability and maintainability of the code
refactor XMLSecurityPropertyManager usage in DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to improve code clarity and ensure consistent
added a new file ` InlineDefaultMethod . java ` with default methods and subclasses of ` InterfaceWithDefaultMethod0 ` , ` InterfaceWithDefaultMethod
updated SQL field predicate handling to use GLOB ( \ ' * \ ' ) instead of LIKE ( \ ' % \ ' ) to improve
[ drools - 7 ] make dmnprofiles protected to allow subclass access
fixed - rscript . executeasync ( ) method throw concurrentmodificationexception if redisson node be not master or slave . # 3507
remove setwordfieldvolatile from staticobject since it ' s not use
updated debug log statements to use ` size ( ) ` instead of ` String ` for targets and modified verbose logging to improve logging clarity and
fix memory leak when send fmlproxypacket to fmloutboundhandler .
added a new constant for HTTP Jetty server handlers in ExecConstants . java and updated the thread pool initialization in WebServer . java to allow
replaced the handling of shortcuts to manage removed shortcuts and added checks for pinned shortcuts to improve shortcut management and ensure proper cleanup of unpinned
remove unnecessary type check for ` value ` in ` DefaultHttpClientBinderRegistry ` to simplify the code for better readability and maintainability
removed the case for the home navigation in DetailFragment . java to simplify code by eliminating unnecessary navigation logic
added a condition to check if there is an Android market before processing play services to ensure that play services are only included when there is a market
update TableBlockParser to handle non - whitespace cells correctly and add new test cases for header pipes to ensure proper rendering of table rows and validate
added support for bridging headers in the NewNativeTargetProjectMutator , NewAppleNativeTargetBuilder , and ProjectGenerator classes to enhance
refactor PotentiallyDeadCode to improve handling of unused methods and streamline source path management to enhance code clarity and maintainability by redu
added diamond detection functionality in ` Attr . java ` and new classes ` Foo ` and ` T6939780 . java `
replaced calls to ` startSend ( ) ` with ` onStartSendRequest ( ) ` in ` HighwayClientFilter ` and `
removed unused import and logging statement in SolrCacheHolder . java to improve code clarity and reduce unnecessary dependencies
added catch blocks for AuthenticationException in LdapCtxFactory . java to ensure proper exception handling for authentication issues
updated the condition for checking float values in Test6796786 . java to ensure accurate comparison of floating - point values
added a local configuration file for " logback . dev . xml " in JoobyMojo . java and updated the Main .
added a new file JaasEventCheck . java to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent in the authentication process to
refactor QuickstepTransitionManager to use a list of views to animate instead of a single view to improve code readability and maintainability by
updated the string distance comparison logic in ConjunctionSolrSpellChecker and added a new test class for ConjunctionSolrSpellChecker to ensure
changed the type of fetchers from HashMap to Map in ShadowSystemServiceRegistry . java to improve flexibility by allowing multiple fetchers to be
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
removed the public access modifier from the setAuthentication method in AuthenticationException to restrict access to the method for better encapsulation
kvm : increase default wait for modify storage pool command to 5 minute ( # 5357 )
added JDBC _ SCHEMA parameter to table parameters in AbstractJDBCConnectorProvider to ensure proper schema context is used for JDBC operations
corrected a typo in SQL update statements from " sqlUpdateAUP " to " sqlUpdate " across multiple files to ensure consistency and
refactor schemaTypeCache to use a synchronized map instead of a synchronized block to improve performance by reducing synchronization overhead
refactor header checking logic in StaticServerHttpHeadersWriter to use a loop instead of disjoint to improve readability and maintainability of header
added JUnit Ignore annotation to LatticeDemo . java to mark the test as ignored due to files available only from CMU
added mkdirs ( ) method call to TestCollector . java to ensure storage directory exists before processing new data
added chunked streaming mode to StarTreeJobUtils to improve data transfer efficiency in HTTP requests
added two new syntax checker classes , BasicSyntaxChecker , MultipleTypeSyntaxCheckerTest , and SingleTypeSyntaxCheckerTest to establish a structure for
hbase - 25827 import protobuf from thirdparty ( addendum )
added a test for populating beans with recursive structure and created a new Node class to ensure that beans with recursive structure do not cause stack overflow
added IOException to the getRemoteName method signature to handle potential IO exceptions during method execution
updated exception handling in UserAccountManagerImpl and ClientFactory to include IllegalArgumentException and implemented createPlainClient method in ClientFactoryImpl to improve error handling
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for using AspectJ mode with protect - pointcut definitions in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration by allowing users to
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by enabling hostname verification
added a ` remove ( int index ) ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests
updated method call from ` invoke ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService . java ` and modified
refactor joint removal logic in World . java to ensure proper cleanup of joints to improve resource management and prevent potential memory leaks
fix null pointer exception in search filter .
[ hotfix ] [ test ] move sourcereaderbasetest to testutils . sourcereader
refactor exception handling in DocumentsStorageProvider to use try - finally blocks for document retrieval to ensure proper resource management and prevent potential resource leak
added new ` HookDefinition ` interface and ` JavaHookDefinition ` class , along with a new ` JavaHookDefinition ` class for handling Java
refactor flushIfDeadlockRisk method into a separate private method for improved readability to enhance code maintainability and reduce duplication in
updated the ` setExoOptions ` method to include a ` allowTs ` parameter and modified the video direct play profile ' s container string
removed the USER identifier from the identifier collection to clean up unused identifiers and improve code maintainability
added an INVISIBLE color constant and modified the toString method in Color . java , and updated import statements in RailButtonShapes . java to
updated null handling logic in CountAggregationFunction and added a new test for null handling query options in NullHandlingIntegrationTest to enhance null handling functionality
set the deep variable to - 1 in InternalTransaction to initialize the deep state for further processing
added XML escaping to the name variable in StreamInitiation . java to ensure that the name is properly escaped for XML processing
updated file paths to use a configurable work directory instead of a hardcoded " work " string to enhance flexibility and allow for different work directories
[ drools - 7 ] mark rule a deprecated if it have no attribute set
make amd64directcallop . jmp use the codebuffer . position ( ) instead of the dummy label .
refactor TimeRange to use static final constants for minStamp and maxStamp to improve code readability and maintainability by avoiding repeated initialization
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future updates
refactor connection handling in AbstractTimelineMetricsSink to use a dedicated emitMetricsJson method to improve code readability and maintainability by reducing
refactor attachment MIME type checks and enhance gallery functionality in DetailFragment and GalleryActivity to improve code readability and ensure proper handling of video attachments
do n ' t fill tank ' s fluid if they ' re not on the server side .
added conditional checks for ` RuleAnalysisLegacyBuildRuleView ` before processing ` CsharpLibrary ` and ` PrebuiltDotnetLibrary `
fix a bug that could cause the pep service to not be create when an iq have type get .
intrinsification : only run intrinsification if runtime be not null .
updated conditional logic in MetricTrackingWindmillServerStub and StreamingDataflowWorker to ensure active work is refreshed only if not empty to
pdfbox - 4892 : keep track of last object offset , a suggest by valerybokov
added a new constructor to LwjglAppletApplication that initializes the canvas with a new Canvas instance to enhance the application ' s functionality by
updated the string representation method in EnvironmentAndSystemPropertyClientProviderStrategy to handle null DockerClientConfig to improve robustness by avoiding potential null pointer
refactor LdapAuthenticationHandler and AccountStateHandler to improve password policy handling and streamline authentication process to enhance code clarity and maintainability by
modified Int2ObjectCache . java file to improve performance and maintainability of the code
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to set it to improve
refactor Readable class methods for improved readability to enhance maintainability and clarity of the code
updated JsoupNonVisualRegressionTest to use TestSupport . WITH _ FONT for page break handling to simplify the code and improve read
updated the share menu item icon in CaptureActivity . java to use the correct drawable resource for the share menu item
updated JVM version checking to support both Java 8 and 9 to enhance compatibility with different JVM versions
ignore nosuchmethoderror and abstractmethoderror in non - jdbc 41 compliant driver
updated method implementations in GenericContainer . java to improve performance and maintainability of the code
replaced HashSet with ArrayList for filteredSet and filteredList to improve performance and reduce memory usage
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasView classes to ensure proper method overriding and improve
removed unnecessary whitespace in ChartProvider . java to improve code readability and maintainability
updated working directory preference to use the file ' s parent path instead of the file path to ensure the correct parent directory is used for database operations
refactor JavacParser to return an empty list instead of a block statement and add a new ExtraSemiTest class to improve code
added support for the createdAt field in the User class and related repository methods to enable retrieval of users based on their creation time
updated Test15FloatJNIArgs . java file to improve performance and maintainability of the test code
updated version string formatting in the plugin . java file to improve readability and maintainability of version information
nifi - 2323 : fix mockprocesscontext . encrypt to return the last character of the encrypted string if there be no last character
[ java ] ensure non - reentrant call be not permitted during callback in aeronarchive .
added a null check for the dependency before merging it in OpProcFactory . java to avoid potential NullPointerExceptions when accessing the dependency
added timeout annotation to SslBytesServerTest to improve test stability by allowing more time for tests to complete
refactor Peer class to improve code readability to enhance maintainability and simplify future updates
added methods to handle realtime segments in RealtimeIndexingCoordinator and updated StreamProvider interface in StreamProviderConfig to enhance functionality and improve clarity
added null check for exportedData before calling writeTo to avoid potential NullPointerException when writing to the output
refactor scrolling logic in RecyclerViewFastScroller to use a dedicated method for radius calculation to improve code readability and maintainability by central
updated message to clarify restarting IntelliJ and added a method to check if a tool window is instantiated to improve code read
added a conditional check for Windows before adding the preventSleep checkbox in GeneralTab . java to ensure that the preventSleep checkbox is only selected on
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java `
added cropping and size calculations for vertical bar layout in QuickstepAppTransitionManagerImpl and FloatingIconView to improve layout handling for better
added full - screen exclusive mode functionality to XWindow and its peer classes to manage window state management to enhance the system ' s ability to manage
fix stringindexoutofboundsexception when parse played duration
added credentials management functionality to DagUtils and TezTask classes to enable better handling of credentials for MapWork and ReduceWork instances
( chore ) camel - core : use entryset instead of keyset
trim whitespace from the last element of the names array before setting the thread name to ensure consistent thread name formatting and avoid potential errors
updated the message in GpsMainActivity to include " to a file " for clarity to improve user understanding of file - related operations
[ hotfix ] fix checkstyle violation in job
added a new abstract class ` Unused ` and a method to test the ` Unused ` type in the ` Main ` class to ensure
updated the key for " HBASE _ MASTER " from " hbase _ master _ host " to " hbase _ master _ hosts "
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused interfaces to streamline the codebase
modified the return type of the performJoin method from GenericRecord to List < GenericRecord > in GenericJoinUDF and JoinPhaseJob to
updated MAX _ DELEGATE _ LOCK _ PERIOD validation and adjusted related logic in ProposalUtil , CommonParameter , and WalletTest classes to
cloudstack - 4892 : fix npe in case of zero network rate
removed the ` applySpecification ` method and initialization logic from the ` CmcExchange ` class to streamline the exchange specification handling by elimin
updated the configuration retrieval logic in GossipLocalNode . java to handle the " seed . node . ip . list " configuration correctly to ensure that
ensure tpc be disable by default if system property ` ` hazelcast . client . tpc . enabled ' ' be set to false (
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple application classes to ensure compatibility with the
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve code clarity and
refactor key assignment logic in NamedObjectList . java for clarity and consistency to improve readability and maintainability of the code
refactor cleanup methods in query compaction classes to use cleanupEmptyTableDir instead of cleanupEmptyDir to improve clarity and correctness in handling
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it in SerializationUtilities to enable serialization of RCFileInputFormat for improved data handling
added default methods ` typeOf ` and ` categoryOf ` to the ` TypeMapperComponent ` interface to provide a standardized way to retrieve Java
added error handling for invalid host headers and improved port parsing logic to enhance robustness and provide clearer error messaging for invalid host headers
refactor ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for method calls instead of TimeZoneFinder to improve test reliability and maintain
standardop : remove addoutgoingvalues and forEachoutgoingvalue from standardop .
changed the visibility of the ` cfsDir ` variable and updated its usage in the ` SegmentCoreReaders ` and ` SegmentReader ` classes
added a new method ` hasMainThreadProfile ` to the ` AggregateDao ` and ` TransactionCommonService ` classes to check for existence of
added validation for annotation definitions in a Buck rule with required _ for _ source _ abi = absent or set to True to ensure that annotations
replaced " greekLowerCase " and " irishLowerCase " names with " greekLowercase " and " irishLower
updated HSSFSheet and Sheet classes for consistency to improve code maintainability and readability
( scott phillips ) change to use discoverysearchrequestprocessor since dspace 4.0
added a list to store time zone identifiers and updated the method to convert them to a string array to improve code clarity and maintainability by
updated the initialization of SurfaceSyncGroup to include a specific name to improve clarity and specificity of synchronization in the application
datamongo - 2392 - fix nullpointerexception in gridfstemplate . delete ( ) .
added unit tests for querying column indices in ShadowDownloadManagerTest and implemented total size and bytesSoFar in ShadowDownloadManager to ensure correct retrieval
refactor character enter handling in TextField . java to use a boolean variable for clarity to improve code readability and maintainability by reducing
added a check to prevent unnecessary equality checks in GroupNodeViewModel to improve performance by avoiding unnecessary object comparison
refactor afterSetStatements method in Lower and BlockLexicalContext classes for improved clarity and functionality to enhance code readability and maintain
added hashCode methods to IntervalXYDelegate and updated equality checks in XYSeriesCollection and IntervalXYSeriesCollectionTests to improve hash - based functionality and
added cleanup method to clientqueuestest to clean up resource
reformatted code in CloudWatchAppender . java and updated method names in RegisteredServiceScriptedAttributeFilterTests . java to improve code readability and
updated method name from serializeSpecialDoubleValues to serializeSpecialFloatingPointValues in Gson . java to ensure proper serialization of floating - point values for
added calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in
added checks for non - empty subtags and improved language tag handling in Locale and LanguageTag classes to ensure proper canonicalization and handling of
server : allow ssh to agent to be enable / disable for kvm agent ( # 4358 )
updated access modifiers of ` ScheduledAction ` , ` ImmediateAction ` , and ` OnCompletedAction ` methods in ` SchedulerWhen . java
removed the import statement for PagerSlidingTabStrip in EmojiKeyboard . java to streamline dependencies by eliminating unnecessary imports
added a condition to check if the filter string does not contain a hyphen to ensure that only valid filter strings are processed
updated text translations for sort columns in BrowserContentPane and refactored stats retrieval in DataBrowser to improve clarity and maintainability of the
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 7 ) ` to improve performance and reduce
updated the ` write ` method in ` HtmlSessionInformationsReport ` to use ` htmlEncodeButNotSpace ` when ` remoteAddr ` is
fix item state trigger for ` ` smarthome / items / ' ' resource ( # 3649 )
simplified the synchronization of the format cache in FastHttpDateFormat . java to improve performance by reducing unnecessary synchronization overhead
added thread management for file move operations in Hive . java to improve responsiveness and error handling during file move operations
added methods to trigger a TimerTask with a specified period in WrapTimer . java to enhance task execution control based on specific time periods
[ flink - 18443 ] [ table - planner - blink ] support local _ date and local _ time type in blink
added a verbose option to the error logging mechanism in AbstractStatusReporter to enable more detailed error reporting based on context options
mow - 107 toggle menu if not unbundled or menu be show
s2s vpn : do n ' t allow vpn connection to be establish between same account and domain
datamongo - 2366 - notify error handler only once in cursorreadingtask .
added encryption checks in PDFBoxThumbnail and PDFFilter classes to prevent creation and extraction errors when the PDF is encrypted
[ 3.0 ] curatorzookeeperclient . getchildren ( ) do n ' t throw exception when client get children error ( #
updated AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code organization and maintainability
updated the URI generation and item deletion logic in HostsList . java to ensure the correct ID is used and improve the functionality of the delete operation
updated assertions in Java6Assertions and Conditions classes to improve code consistency and maintainability
changed the method signature of ` replaceOrderBulk ` to return a list of ` BitmexPrivateOrder ` and updated the parameter type for
modified the ` enterDefault ` method to ` enterIdentNode ` and added a new method ` enterFunctionNode ` in ` Lower . java
added a new ` J9ConstantHelper ` class and modified ` ObjectHash ` to use a new method for retrieving long values to improve code
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent invocation behavior to ensure that concurrent modifications do not
add method to notify roster offline and remove resource .
replaced calls to ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator ` and added a method to
updated code formatting in FunctionObjectCreator . java to improve code readability and maintainability
added null check for extTypeCustomDesers before initializing it in MessagePackFactory . java and updated test methods in MessagePackFactoryTest .
set the logging level for the mock server to WARN in Main . java to provide more detailed error reporting for testing purposes
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test execution by eliminating unnecessary tests
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to improve code clarity
replaced the scoreMap with a termScoreMap for better organization to improve clarity and maintainability of score management
updated condition checks in U64 . java to use negative values for the parameter ' s data to ensure correct handling of negative values in the comparison
set the headline style to a red error color in MainViewModel . java to improve the visual appearance of the application ' s head
added a check for ` didSupportDarkText ` in ` notifyChange ` logic to ensure that dark text support is correctly handled based on
[ hotfix ] [ checkpointing ] fix checkpointrequestdecider to handle non - forced savepoints correctly .
updated core pool size and keep alive time from milliseconds to minutes to improve responsiveness and maintainability of the code
replaced ` filter ` with ` anyMatch ` for provider matching in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
* skip test that fail on window server core container ( e . g . arm )
resolve http : / / issues . apache . org / activemq / browse / amq - 2698 - add prefetch option to
modified the ` getReturnValue ` method to throw an ` Throwable ` and updated exception handling in ` Py4JNetworkException ` to improve error
added a new annotation interface ` Issues ` with a value method in the ` Issue ` class to provide a mechanism for referencing multiple ` Issue
updated user properties from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and its test to
fix : do n ' t connect to socks proxy if no socksproxyhost set
[ hotfix ] fix checkstyle violation in slotreport and slotstatus
removed the import of ClassUtils from ReflectionUtils . java to streamline dependencies by eliminating unnecessary imports
replace HashSet with LinkedHashSet in SslContextFactory . java to ensure insertion order is maintained for protocol and cipher suite selection
added a static instance of Resources to manage system resource location to improve resource management and avoid potential null reference issues
updated the allocation size for plaintextSegment in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to use a constant for
updated circuit breaker fallback URI path in ServerMvcIntegrationTests . java to ensure proper exception handling for invalid fallback URLs
added SSL connection socket factory to the HttpClient setup in AppPage . java to enhance security by enabling hostname verification for HTTP connections
replaced the ` resetBytesReadCounter ( ) ` method with a size limit setting and removed the redundant call to ` resetBytesReadCounter
move preferAES getter / setter from ProtectionPolicy to StandardProtectionPolicy to streamline the code by eliminating unnecessary getter / setter methods
( chore ) camel - opentelemetry : replace system . out . println with log
chore ( test ) : remove unused test in elbintegrationtest . testloadbalancerinstanceoperations ( # 2323 )
renamed the method from ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity
added error handling for file creation in DiacriticTest . java to ensure robust testing by handling InvalidPathException during file creation
hhh - 14850 fix followonlockingtest fail on oracle 11 due to timeout
added validation for texture file existence and improved file handling in TextureUnpacker . java to ensure that the atlas file is valid and provide clear
added locking mechanism to manage thread safety in AmbariManagementControllerImpl . java to ensure thread safety when modifying service and component states
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the ResultSet does not close statements to ensure proper resource management and error handling in statement closure logic
removed unsupported mark support check from InputStreamBodyGenerator and refactored test cases in ChunkingTest to improve code clarity and enhance test coverage
modified the return statement in ClusterSchemaManager to include a check for pre - deleted databases to ensure that only deleted databases are processed in the schema
remove the chunkedwriter from the h2c pipeline if it exist
updated item deletion logic in EnhancedBrowseFragment and FullDetailsFragment to include a confirmation dialog for deleting items to enhance user experience by allowing confirmation
refactor CSS rule handling to use a RuleBank interface instead of a RuleFinder instance to improve flexibility and maintainability of CSS rule processing
added try - catch block around the cipher initialization in JcaTlsCrypto . java to handle potential exceptions and throw a fatal alert for encryption failure
added two new files , TestMonomorphicObjectCall . java and Object . java , implementing monomorphic object calls to demonstr
updated method calls from ` removeMetaDataSource ( session ) ` to ` toFront ( ) ` in ` DataBrowser . java ` and `
hbase - 25836 fix npe in defaultmemstore . shouldseek ( scan , store )
[ hotfix ] [ runtime ] make taskManagerServicesconfiguration . getlocalstatedirectories public
modified the constructor of AlterTimeSeriesStatement to accept a boolean parameter and updated its usage in the setAlterView method to ensure proper handling of
# 18 fix ` ` matchtext ( ) ' ' method that return ` ` match text * ' '
added error handling around the retrieval of the routing table builder in HelixBrokerStarter . java to improve robustness by handling potential exceptions when
replaced ` put ` method with ` putIfAbsent ` for setting parameters in ` HttpClientIntroductionAdvice . java ` to improve null
( chore ) camel - jms : use char [ ] instead of string [ ] for password
fix recursive api call to listdomainchildren , and add recursive api call to searchfordomainchildren
updated the equals methods in Counters to use ' ! = ' instead of ' Math . abs ' for count comparisons to simplify comparison logic and
modified the ` initialize ` method in ` BasicTumbleStepper ` to accept a ` SimulationStatus ` parameter and set warnings to
add truffle boundary to getcurrenttimemillis for sulong .
updated the method call in PrettyPrinter to store the JCTree variable instead of the tree object to improve code clarity and maintainability by
modified LRUDictionary to check if the indexToNode array is null before creating it to prevent potential NullPointerExceptions when accessing the indexToNode array
modified filtering logic in DatagramSocket and DatagramChannelImpl to improve filtering efficiency to enhance performance by ensuring only valid datagram packets are processed
updated JUnit imports and annotations to use JUnit 5 API in TestQueryDNS . java to migrate tests to the newer JUnit 5 API
added a new class NutchServerInfo with fields for startDate , configuration , jobs , and running jobs to provide data structure for managing server
replaced OffsetAttribute with AttributeSource for token attributes in EdgeNGramTokenFilter to simplify attribute handling and improve performance during token processing
added timestamp functionality to CqlInserter and ThriftInserter , and updated return statements in SettingsColumn to include a timestamp option to
updated DSAParameterGenerator logic to validate prime strength and changed BigInteger usage to BigInteger to enhance validation for prime strength and improve code clarity
modified NumberUtils and Numbers classes to improve handling of float and double values and added new methods for double and int bits to enhance functionality and
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and validate functionality through testing
added SQL exception handling for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to data integrity issues
[ issue # 5251 ] remove consumer offset request header setzeroifnotfound ( # 5252 )
added methods for adding tabs and refactored tab creation logic to improve tab management functionality and maintainability
updated array initialization to use zero - length arrays instead of size - based operations to improve performance by avoiding unnecessary array allocation
[ hotfix ] [ runtime ] add mockenvironment . taskmanagerruntimeinfo to mockenvironmentbuilder
refactor return statements in MavenVisitor . java for clarity and consistency to improve readability and maintainability of the code
updated test cases in ZookeeperDataChangedListenerTest to replace " MOCK _ APP _ SECRET2 " with " MOCK _ APP
added a new test class FormatCheckingTest for verifying class format errors to ensure that the application correctly handles illegal class names during execution
updated line number assignment logic in CodeGenerator . java to improve clarity and maintainability of line number handling
added a try - catch block around the retrieval of service properties in ConfigHelper . java to handle potential exceptions and prevent application crashes
added methods to create toggles from strings , commands , and button groups in RadioButton . java to enhance functionality by allowing toggling
updated LRUCache to initialize the cache with a specified cache size and changed CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 to adjust
int - 1746 , int - 1747 , int - 1748 , int - 1751 , int - 175
fix npe in osgimanagementnamestrategy when symbolicname be null .
add usemode system property to modecontribution to load mode
added error handling for shutdown hook addition and removal in IOManager and improved logging in YARNSessionFIFOITCase to enhance stability
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and related methods to improve clarity and consistency
http : / / issues . apache . org / jira / browse / amq - 4568 - fix npe in abstractmessage
refactor CompareMode class to improve readability to enhance maintainability and facilitate future updates
added HasTests interface implementation to Arg class and implemented it in RustBinaryDescription and RustLibraryDescription to enable testing capabilities in the build
updated placeholder and error drawable resources in FileMessageVH . java to improve clarity and consistency in drawable resource usage
modified OnExitTest . java file to improve test execution flow and maintainability
added onUserPreferenceChanged method to recreate the taskbar to ensure the taskbar is refreshed when user preferences are changed
added conditional handling for heap dumping based on whether the JVM is an IBM vm to improve compatibility and support for different JVM versions during heap
camel - 16400 : camel - mybatis should ensure session be close even if commit fails .
danielwagnerhall : implement ability to switch to a window , and quit in the ie driver .
updated imports and modified trigger patterns in IteratorToFor . java for clarity and consistency to ensure compatibility with Java 5 and improve code readability
added a call to set the application ' s state to STATE _ UNAVAILABLE to ensure the application is in an unavailable state before proceeding
updated buffer position and limit handling in multiple buffer classes to improve clarity and maintainability of buffer operations
removed ` toUri ( ) ` method from ` moveStrSplits ` in ` ConditionalResolverMergeFiles . java ` to simplify code by elim
added setEmpty methods for various array data classes and modified array deletion logic to handle cases where the array length does not match the expected number of
changed enums in VirtualAuthenticatorOptions from package - private to public to allow access to these enums from other packages
added a new document field ` doc6 ` and updated the assertions in ` TestMultiPhraseQuery . java ` to ensure the correctness of
updated reservation logic to assign tickets to offline payment and added a set for pending reservation statuses to improve ticket management by distinguishing between pending and offline
added onTimeout thread handling and updated request state management in HttpChannelState . java to ensure proper synchronization and error handling during timeout events
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to use debug level instead of
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
fix npe in storageproxy . read ( ) when consistencyforpaxos be local _ serial
added a condition to check for " Home " model name in HeosDiscoveryParticipant . java and updated HeosPlayerHandler . java to handle
added a new ` Wait ` class and integrated it into ` PlainSelect ` and ` SelectDeParser ` for handling SQL queries with timeout settings
refactor Neo4j to use AttributeController for node and edge data retrieval and update label setting logic to improve code readability and maintain
added null check for serverName in the condition to prevent potential NullPointerException when serverName is null
nifi - 6703 : move rocksdbmetronome to controller / repository so it can be use in other package
updated the method to read the " IS _ GRANTABLE " result from a string instead of a raw boolean to improve flexibility by allowing
updated javascript context logging and conditional logic in JavascriptContext . java to improve logging clarity and ensure proper URL handling for async execution
( chore ) camel - cxf : skip test on macos
updated column modification logic in LoadTestTool . java to handle new cf cases to ensure correct handling of column definitions when a new cf is provided
implemented the Disposable interface in the Texture class to enable texture operations to be disposable
updated WebappRegistrationCustomizerImpl and related classes to use WebBundleDeployerHelper instead of WebappRegistrationHelper to improve code clarity
refactor go quorum compatibility check into separate method ` checkGoQuorumGenesisConfig ` to improve code readability and maintainability by reducing
replace IOException with Throwable in HttpInput . java to improve error handling by capturing the original error state
added a condition to exclude JP as a valid country in the LocaleTest . java file to ensure that issues related to the change in era
rename ` Wrapper ` interface to ` HostResponseWrapper ` across multiple files to improve clarity and consistency in naming conventions
updated query equality and hash code logic in FilteredQuery . java to include boost comparison to ensure accurate comparison and hashing based on the boost value
reformatted the constructor of FileMenuFilter for consistency to improve code readability and maintainability
mow - 107 use scrollpanel instead of listbox ( for debug )
add a new file TestCMSClassUnloadingDisabledHWM . java that tests the CMS class unloading behavior to ensure that the CMS class
fix forgeevent . getentities ( ) return null when no entity be present .
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and updated related method signatures to improve clarity by
fix compaction test to use identity query filter . patch by brandonwilliams , review by brandonwilliams . cassandra
added null check for the " type " attribute in MiniAapt . java and a corresponding test case in MiniAaptTest . java to
added a new ` SPEL ` operator and its corresponding ` SpELJudge ` class in the ` OperatorJudgeFactory ` to
planner - 2266 fix checkstyle issue for ` ` ordinalitytype ' '
bugfix # 252 , use lookup instead of service provider to get default profiler
updated CertBlacklist , ConscryptCertStore , ConscryptHostnameVerifier , Java8EngineSocket , and ConscryptTest classes to
changed the initialization of ` start _ offset ` and ` length ` from ` 0l ` to ` 0L ` in ` AttributeResolution9
updated the source and target version in fullOptions from " 1.5 " to " 6 " to ensure compatibility with the latest version of the
[ calcite - 1342 ] support metadata for project in table source scan ( jesus camacho rodriguez
added sorting functionality for localized names in the AboutActivity to ensure consistent ordering of localized names for better user experience
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
modified the handling of the " should _ refresh " preference based on whether live streaming is active to ensure the preference is set correctly based on the
hhh - 14850 include the original exception in the mappingexception when create an auditstrategy
( chore ) camel - file : fix flakiness in fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in SchemaLoader , CompositeType , List , and DynamicCompositeTypeTest classes to use generics to improve type safety and reduce
added support for multiple transport types in GitClientApplication and updated related logic in RepositoryUrlPanel to enhance the application ' s capability to support different
updated the delegation names across multiple input consumer classes for consistency across the application to improve clarity and maintainability of the code by standardizing the
added null check for mavenMetadata and modified version filtering logic in ChangeParentPom . java to improve robustness by handling cases where mavenMetadata
8274560 : [ testbug ] testlargepageuseforheap fail on window due to gc + heap + coops =
bug 118to22 : do n ' t migration if the cloud _ usage db do n ' t exist
http : / / issues . apache . org / jira / browse / amq - 4568 - fix test failure on window .
added a new test class ` TestObjectStreamClass ` and modified ` requireInitialized ( ) ` in ` ObjectStreamClass . java ` to
simplified the condition checks for data center info in ZoneAwareDiscoveryFilter . java to improve code readability and maintainability by reducing
changed log level from error to warn in OpenTracingTracer . java to better reflect the severity of the capture failure
added a toString ( ) method to the Generator class to provide a readable string representation of the generators
refactor URI quoting logic to initialize ` dontquote ` as an empty string when the authority starts with " : " to ensure proper handling of
added a check for null or empty resources in ClusterControllerImpl and implemented a test for NoSuchResourceException in ClusterControllerImplTest to ensure proper error
added null check for API response and improved error logging in AccepttoApiUtils . java to ensure robust handling of API responses and provide clear
removed conditional checks for Android and version in VertexBufferObject . java to simplify buffer allocation logic for compatibility with newer Android versions
refactor SybaseASADatabase class implementation to improve code readability and maintainability
added a ` forceProjection ` boolean parameter to the ` HashJoinInfo ` class and updated related methods accordingly to support backward compatibility by allowing projection
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` StringDistance ` object for
added FLAG _ MUTABLE and FLAG _ CANCEL _ CURRENT flags to PendingIntent flags in AndroidImplementation . java and updated pending intent creation logic
added methods to append and read column IDs in HiveFileFormatUtils and updated HiveInputFormat to utilize this new method to improve code cl
updated UPNPHelper to use getIPv4MulticastAddress ( ) instead of getUPNPAddress ( ) for better multicast address retrieval to
added a method to display a temporary toast message in SavedExperiments . java to provide user feedback when a temporary feature is removed
added version setting logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure the service info ' s version reflects the parent version
added a new test class ` RawSerializationTest ` to validate JSON serialization of collections and parameterized objects to ensure that the ` Gson ` functionality works
simonstewart : make the selenium server interface implement the sslcertificategenerator
refactor loop to iterate over replies directly from the list instead of using a for - each loop to improve readability and maintainability of the
increased the timeout duration in the ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for ResourceAccessException to occur
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the NGram filter
refactor AclImpl class implementation to improve code readability and maintainability
added unit tests for randomizing arrays in EasyRandomTest . java and removed redundant test cases in SeedParameterTests . java to improve test coverage
bug 10489 : do n ' t swallow exception in citrixresourcebase . stopvm ( )
added a ThreadLocal variable ` __ tryWriteAgain ` and modified the handling of ` tryWriteAgain ` in ` SslConnection . java `
added a method to check if ancestors are visible and updated parent and actor references accordingly to improve actor visibility checks and ensure proper hierarchy traversal
added logging for the failure of the rolling - update step in RollingUpdateOpFactory . java to improve debugging by providing clearer error messages during
[ hotfix ] [ table - common ] fix nullability issue in datastreamsinkprovider and sinkprovider
added error handling for nonexistent username in DaoAuthenticationProvider and created AuthenticationFailureUsernameNotFoundEvent to improve robustness of authentication failures by providing
updated AtMostXVerificationTest . java file to improve test coverage for at - most X verification functionality
updated default query type handling in QParserPlugin and related classes to ensure consistent usage of the default query type across the application
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added the isInitialized method to ILanguageServer and implemented it in JavaLanguageServer , and created a new LocalsCompletionTest _ template file to
updated test cases in ClientAPITokenIntegrationTest to use ' shouldHaveIdToken ' instead of ' idToken ' to improve clarity in
added transaction management methods to DatabaseAdapter and refactored account insertion in GncXmlHandler to improve database connection handling and streamline the bulk
refactor byte array handling in MimeType . java to use ByteArrayOutputStream instead of byte array to improve performance and simplify string conversion process
improve error message when reply to client have already receive
added a new method ` isAcceptable ` to the ` AutoFormatVisitor ` class to check if a source file is an instance of `
set maximum buffered documents to Integer . MAX _ VALUE and RAM buffer size in TestIndexWriterMergePolicy . java to improve performance and resource management
added a method to clear all witnesses and implemented the ` updateWits ` method in ` Manager ` to ensure all witnesses are updated
added error handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing application crashes due to NoSuchElementException
( chore ) camel - flume : remove unused logger parameter
updated BasicAuthIntegrationTest and DaemonStream classes to enhance basic authentication and daemon thread management to improve test reliability and ensure proper execution of operations
replaced HashMap with LinkedHashMap in DependencyUtil . java to maintain the insertion order of the nodes array
log internal error when jersey throw an error
refactor header validation logic in Http2TestBase . java to use a new validateHeader method to improve code readability and maintainability by
refactor system property handling to use a switch statement to improve readability and maintainability of the code
change method parameters from String to CharSequence in StringSubject . java and add corresponding unit tests in StringTest . java to enhance flexibility in string
add checkgraalintrinsics for jvm . countertime ( ) , jvm . getclassid ( ) , and jvm . getevent
rename ` IntUtilsTest ` to ` PrimUtilsTest ` in ` IntUtilsTest . java ` to clarify the purpose of
updated the DataSource reference to use a new instance based on the condition for compactor to ensure the correct connection factory is used when compactor is
updated DeploymentOptions class to improve deployment configuration handling to enhance flexibility and maintainability of the deployment process
modified the parameter type of ` updateTextButtonWithDrawable ` from ` Drawable . ConstantState ` to ` Drawable ` and adjusted drawable dimensions accordingly
( chore ) camel - yaml - parser : use stringreader instead of inputstream
added support for the " coalesce " SQL operator in RexNodeConverter and registered it in SqlFunctionConverter to enable handling of coalesce
( chore ) camel - hl7 : remove the fail test from the test suite
added context class loader setting and modified exception handling in JavassistProxyFactoryFactory . java to ensure proper class loading context is maintained
removed the initialization of DefaultDateTypeAdapter and synchronized the serialize and deserialize methods in DefaultTypeAdapters . java to simplify the code and improve thread
refactor formatting of method declarations in DocumentUtil . java for consistency to improve code readability and maintainability
replaced the ` newQuery ` boolean with a ` setURI ` method for URI handling in ` HttpClientRequestBase ` to streamline the URI
removed the filterOldEntries ( ) method and adjusted the size of entries in FeedRefreshUpdater . java to limit the number of entries to 50
changed log level from fatal to warn in FSHLog . java to better reflect the severity of the error being encountered
refactor NodeMap to implement Iterable < T > and improve iterator functionality to enhance code readability and maintainability by encapsulating value retrieval logic
updated import statements and refactored predicate definition in DiscoveryClientRouteDefinitionLocator . java to improve clarity and maintainability of the code by
added a check for non - empty fields before processing in MongoRecordReader . java and updated return condition in RexToMongoTranslator . java
defaultadminprovider should add an admin to the list if it ' s empty .
updated imports in IGainTermsQParserPlugin , SignificantTermsQParserPlugin , and TextLogisticRegressionQParserPlugin to use
updated bean string representation in ConstantBeanHolder to include class name and identity hash code to improve debugging by providing more context about bean instances
modified the logic for determining the primitive type and adjusted the return statement in GroovyParserVisitor . java to ensure proper handling of primitive types and improve
svm : remove uninterruptible java . lang . string . hashcode ( ) from frameinfoqueryresult .
increase offertimeout in sedablockwhenfulltest . testblocking ( ) to make it more reliable .
added a new package - info . java file for the org . apache . lucene . core . testresources to provide package - level documentation
updated the logic for calculating the read length in MessageUnpacker . java to ensure the correct length is read based on the position and string length
updated import statement for Nullable in HttpClientTimingInstrumentationVerificationTests . java to align with the new package structure for better clarity and organization
updated SQL query to include user filtering in IconDB to ensure icon retrieval is performed on the correct user context
http : / / issues . apache . org / jira / browse / amq - 4598 - fix the wrong property name for
added a ` isClassfileOnly ` parameter to the ` addWhitelistedResource ` method across multiple classes to control whether the resource is whitelisted based
cloudstack - 410 to 420 : add foreign key constraint for baremetal dhcp device
removed the IJava2DRenderer interface and its implementation from Java2DRenderer . java to simplify the codebase by eliminating unnecessary interface
added onTearDown method to DefaultAudioSink that calls onOffloadBufferEmptying if the audio track is stopped to ensure proper cleanup
refactor UpstreamCacheManager to use a ScheduledThreadPoolExecutor for scheduling upstream tasks to improve responsiveness and control of upstream task execution
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated assertion in Recording . java to include an additional error message to improve debugging by providing clearer context on the assertion failure
added admin role checks and modified message handling in FilestorePage . java and RootPage . java to ensure proper authentication and access control for
( chore ) camel - elasticsearch - rest : ignore the test until it can be fix
modified the accept method to include a check for the lifecycle class to ensure that only the Lifecycle class is accepted to prevent runtime errors
updated button text for Altcoin and Fiat buttons in OfferBookChartView . java to improve user interface clarity by reflecting
camel - 7999 : fix issue with invalid restlet url . thanks to stephan siano for the patch .
update block . createnextblock and block . createnextblockwithcoinbase to accept coinbase instead of block height .
removed the Serializable interface from BTreeMapJava and updated tests to use a new serialCloneNoCatch method to ensure proper handling of non -
[ drools - 7 ] do n ' t log stack trace in case of npe during startup rule execution
refactor conditional statement for clarity in Main . java to improve readability and maintainability of the code
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter .
deleted the PlainVerifier . java file to remove unused code to streamline the project
added a condition to close system windows when triggered from an alternative tab to ensure proper resource management and prevent potential memory leaks
updated DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog handling and state management to enhance test reliability and maintainability by ensuring
updated MimeUtil . parseCharset method calls to include " UTF - 8 " encoding to ensure proper handling of character encoding in HTTP requests
added a call to super . deinitialize ( ) in the TextField class to ensure proper resource cleanup and prevent memory leaks
replaced specific imports with a utility method for serialization in LogFormatTest . java to simplify code and improve readability by utilizing a utility
updated the parsing method to use ` previousUntilLastClause ` instead of ` previousClause ` and modified the ` PreviousFill ` constructor to include
updated array size validation logic and added handling for negative lengths in JAXWSExceptionBase . java to ensure proper exception throwing for negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 4423 )
updated thread join duration from 10 seconds to 60 seconds to allow more time for thread execution to complete
[ hotfix ] [ runtime ] change default scheduling strategy from legacy to region
added title property and methods to set and get the title in ShadowActivity , ShadowAlertDialog , ShadowDialog , ShadowTextView , and Shadow
replaced Apache Commons Logging with Apache POILogFactory and POILogger in POIFSFileSystem . java to improve logging consistency and
updated alarm handling in InstarHandler . java to use string replacements for alarm codes and object codes to improve clarity and maintainability of alarm
increment remove latency in mapdeletemessagetask when it be call from mapcontainer
refactor status check in Option . java and Response . java to use a switch statement to improve readability and maintainability of the code
added a method to find the Java file location and updated the loop structure to improve code readability and maintainability by centralizing javac location
add project name to ` fluttercreateadditionalsettings ` ( # 640 )
added a new test class ` DeprecatedStubbingTest ` to verify the behavior of stubbing methods to ensure that deprecated stubbing functionality is removed
replaced the import of ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType `
fix a bug in the english grammatical structure that cause a treebank parse error .
add system property to allow rsa key exchange in fips mode
replaced ` output _ reader ` with ` reader ` in multiple files to improve code clarity and ensure proper resource closure
added OAuth client service handling in PubSubAPI and SDMAPI , and implemented deletion of OAuth services in SDMAccountHandler to ensure proper resource
updated interpolator used in TaskbarEduView from AGGRESSIVE _ EASE to EMPHASIZED to improve animation
added handling for UpdateRegionLocationPlan in ConfigPhysicalPlan and improved logging in RegionMigrateProcedure to enhance region migration functionality and provide clearer
added a new file ` FileDialogLeakTest . java ` implementing a test for the ` FileDialog ` class to ensure that the `
hbase - 26907 move testopentableincoprocessor out of org . apache . hadoop . hbase . coprocessor
truffle / feature : do n ' t generate uninterruptible method if it be @ uninterruptible
[ hotfix ] [ protobuf ] remove unused variable in pbcodegenrowserializer / deserializer
updated the condition to check for non - null disi before proceeding to ensure that disi is not null before proceeding to avoid potential
refresh the source info when a prepared source be update
added JVM version checks and updated Java version comparison logic in Constants . java and Helper . java to ensure compatibility with Java 9 and improve versioning
updated the instantiation of FileReporter to cast null to String and File to ensure proper type handling and avoid potential NullPointerExceptions
updated the condition from isFalse to isTrue for end - to - end encryption keys existence to ensure that encryption keys are validated correctly based on the
added menu item handling for home button in DirectMessageConversation to enhance user navigation by allowing back navigation when the home button is pressed
added support for the GET _ USER RPC request and updated protocol version from 5 to 6 to enhance security by restricting access to users based on
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL to check for architecture compatibility to ensure tests are only executed on
updated the handling of the notFound strategy in WhiteboxImpl . java to use the original start class to improve clarity and maintainability of the
updated exception message format and improved local management in DexBody . java to enhance clarity of error messages and ensure consistent local reuse with
replaced ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl . java
fix nimbus look and feel on demo app
update version string formatting in AppPage . java to ensure consistency in version formatting across the application
refactor animation listeners in LauncherAppTransitionManagerImpl to use launcherAnimator and appIconAnimatorSet to improve clarity and maintainability of
dumpedprivatekey : improve error message .
update extra data map from offerPayload to newOfferPayload to ensure the correct payload is included in the data map
modified the handling of milestone parameters in TicketPage . java to differentiate between open and closed tickets to improve clarity and functionality of milestone parameter
fix wood pipe battery not set to 80 %
added a new method to generate a cluster key for cluster instances with blueprint names and revisions to improve clarity and maintainability of cluster state machine
initialized the ` downgradeAllowed ` variable to ` true ` and added a new test for the ` isDowngradeAllowed ` method to ensure
updated the ` scanQName ` calls to use ` ELEMENTSTART ` and ` ATTRIBUTENAME ` instead of ` ATTRIBUTE ` in multiple classes
feat ( loadlibrary ) : add option to emulate system library load
refactor comparators in LauncherModel to use a dedicated method for retrieving app names to improve code readability and maintainability by reducing
modified entry handling and output stream creation in DefaultPlatformManager and FatJarStarter classes to ensure the correct parent directory is used for file
reformatted the ` doTest ` method and improved assertion message formatting to enhance readability and maintainability of the test code
camel - 16400 : camel - core - optimize to use spring camel context to find route builder .
[ hotfix ] [ doc ] fix typo in metricoptions description
hbase - 26946 testfulllogreconstruction fail on slow machine ( addendum )
added reuseAddress and trafficClass options to DatagramSocketOptions to allow customization of socket reuse address behavior
fix serverconfig ' s shutdown message ( # 714 )
douniaberrada : removing deprecate interface from org . openqa . selenium . internal
updated error messages in VersionInfo . java for clarity to improve error reporting for non - searchable and non - retrievable fields in the schema
refactor StarTreeIndexOperator to replace equalityPredicateColumns with predicateColumns and update related logic to improve clarity and maintainability of the
reordered the initialization of the channel in the HandshakeHandler . java file to improve readability and maintainability of the code
updated closing brace formatting in Navigator . java to improve code readability and maintainability
added a new constant for default record reader configuration and updated the register method to use this constant to improve clarity and maintainability of the code
added case handling for " GREATER _ THAN _ EQUAL " and " LESS _ THAN _ EQUAL " queries in MongoQueryCreator to improve
refactor group by expression validation in CalciteSqlParser to include checks for outside the GROUP BY clause to improve error handling and prevent compilation errors
updated MappedByteBuffer and FileChannelLinesSpliterator to utilize an AtomicInteger for buffer reference counting to improve resource management and prevent potential memory leaks
replaced direct calls to ` l . getValidator ( ) ` with a variable ` validator ` for clarity to improve code readability and reduce
added a schedule method to CircuitBreakerImpl and updated testCircuitBreaker method to utilize this new timeout mechanism to improve reliability of circuit break
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from the intent flags in Launcher . java to simplify the intent
change ` ` webui . submit . upload . ajax ' ' to ` ` webui . submit . upload . progressbar ' '
updated TableExtRetrieverTest to disable column privileges and added a Disabled annotation to improve test clarity and control over the retrieval strategy for column privileges
added synchronized keyword to addExportedCount and getExportedCount methods in EntityGraph . java to ensure thread safety when modifying exported counts
updated import statements from ` IntRangeUtil1 ` to ` IntRangeUtil ` in ` MetricsImpl . java ` to ensure compatibility with the
modified HttpParser to handle encoded headers correctly and improved error handling to ensure proper parsing of encoded headers and provide clearer error messages
updated layout resource from trends _ activity to configuration _ activity to reflect the new configuration functionality
updated the print statement in SLWTTextListing . java to include the position of the SLWT found to improve clarity of
refactor ` ForceLeaderTest ` and ` HttpPartitionTest ` to utilize ` TimeOut ` for better control over Tlog replicas usage
refactor Thread class to improve thread management to enhance performance and maintainability of the code
updated RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES and added RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES _
camel - 6371 fixed the issue that cxf payload do n ' t set the xmlns attribute when it be the same a c
reformatted code in YamlRepresenter . java for consistency to improve readability and maintainability of the code
updated date formatting in ToChar . java to use String . format for better readability to improve code clarity and maintainability by standardizing
added imports for ValidTxnList and ValidTxnWriteId in GenericUDTFGetSplits . java to manage transaction validation based on configuration settings
updated logging statements to use ` Collections . emptyList ( ) ` instead of ` ArrayList < String > ( ) ` for columnNames and columnTypes to
fix nullpointerexception if the book do n ' t have an initial image
modified the ` SSTDeserializer ` class to include a check for ` ContinueRecord . sid ` when manufacturing strings to ensure that strings
added a constant for the default grid column and updated related logic in AppPreferencesImpl and ExtendedListFragment to ensure consistent handling of grid column values
updated error message in ` Platform . java ` and ` ComparisonFailureWithFieldsTest . java ` for clarity to improve user understanding of
added a new boolean variable ` waitingForKeys ` and updated related logic in ` DecoderInputBuffer ` , ` ClippingMediaPeriod `
updated API endpoint paths in OkexV3 . java from " / api / margin / v3 / accounts " to " / margin /
simplified the comparison of coordinate comparisons in LineUtilitiesTests to improve code readability and maintainability
updated JavacParser to handle varargs syntax and added new classes for varargs and old array syntax to improve error logging for syntax errors related to
add warn log if defaultdrmsessionmanager be use on wrong thread
added support for a METHOD context in VariableContext . java and corresponding tests in TestVariableContext . java to enhance functionality to support method calls and
added tests for invalid compilation unit and profile string JSON in ExperimentParserTest . java and removed the asNullableBoolean method from ExperimentJSONParser .
updated buffer limit logic in Piece . java and SharingPeer . java to use the current position of the buffer to ensure the buffer is
added a response timeout property to the HttpClientProperties and updated NettyRoutingFilter to utilize it to enhance response management by allowing configurable timeout values
refactor CxxLibraryFactory to use NativeLinkTarget directly instead of NativeLinkTargetGroup for better clarity to improve code readability and
added unit test base on user forum issue
added support for handling RexFieldAccess in ASTConverter and RexNodeConverter to enhance the parsing of field access expressions in the Hive query
replaced direct reference to ` QueryLogEntry . values ( ) ` with a static final array of ` QUERY _ LOG _ ENTRY _ VALUES `
add predicate to prevent webclient from use noproxy . fix # 3560 ( # 3561 )
updated PKCS12KeyStore and StoreSecretKeyTest classes to handle certificate chains more effectively to improve certificate management and ensure proper handling of trusted certificates
added reflection access checks and updated method names for clarity in NativeObject and ReflectionCheckLinker classes to enhance security and improve code readability
removed the public access modifier from the CollisionMap constructor to enforce encapsulation within the CollisionMap class
deprecated the method ` getRawInputFromTransactionInput ` and added a null check using ` checkNotNull ` to improve code clarity and ensure input is
refactor log level handling to use a switch statement in ConfigurationValueConverter . java and Main . java to improve code readability and maintainability
server : remove unnecessary ` ` region _ id ' ' parameter from sql insert statement ( # 4358 )
added encryption support for Old Excel files and a corresponding test case to ensure proper exception handling for encrypted documents in the extractor
add extra - image build argument to mx _ java _ benchmarks . py for micronaut
updated visibility logic for the image holder in TimeLineCursorAdapter to ensure the image is displayed correctly in the UI
increased sleep duration in BatchingStateChangeUploadSchedulerTest from 10 seconds to 50 seconds to allow for more time for scheduler attempts to complete
refactor file creation logic in ShadowContext to handle null type parameter and improve directory deletion in ContextTest to enhance robustness of file handling and
replaced the implementation of ` ExceptionFactoryImpl ` with a direct method reference for ` ArgumentsAreDifferent ` to simplify code and improve readability
updated the WAIT _ TIME _ MS constant from 10000 to 60000 to increase the wait time for better stability during testing
updated import statements and added audience handling in ConnectOAuth2RequestFactory , ConnectRequestParameters , ConnectTokenEnhancer , and ConnectOAuth2
removed the default value of breakOnFirstError from the KafkaParam annotation to simplify the configuration by eliminating unnecessary default settings
added a new constant selectableItemBackground with a value of 0x10a13 to define a background color for the selectable item
replaced multiple specific imports with a wildcard import for trade DTOs and added a placeholder method for placing stop orders to simplify import statements
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type is set when the record is null
use the resumablelistener instead of the resumablehandler so that the file can be seek / write .
update class loader to use " AbstractAccessLogValve $ 3 " instead of " AccessLogValve $ 3 " to ensure compatibility with
added an iterator to manage format records in HSSFDataFormat . java and updated unit tests in TestWorkbook . java to improve data format
[ hotfix ] [ kafka ] deprecate the flinkkafkaproducer in favor of flinkkafkap
updated the condition to check for the maximum compressed length in CompressedInputStream . java to ensure that the checksum length does not exceed the expected maximum
camel - 16400 : camel - redis should use idempotent operation for string idempotent operation . thanks to stephan siano for the
fix containerrepair not repair item in vanilla world . close # 3770
fix legacylocalrepositorymanager to return the correct artifact path if the layout be local
added checks for task manager initialization before starting the LocalInstanceManager and improved error handling in JobManager to ensure proper initialization process and provide clear
added deployment command to allow users to deploy files to a specified repository to enhance the artifact resolution process by allowing users to deploy files directly from the
updated temporal path retrieval methods in UploadFileOperation and added a new method in FileStorageUtils to improve clarity and maintainability of temporal path
added a new method ` findByEntries ` to ` FeedEntryStatusDAO ` for retrieving feed entry statuses based on entries and subscription to streamline
added thread execution management in ` ContextImpl . java ` and refactored ` BlockedThreadCheckerTest . java ` to improve thread management
updated the ` instantiate ` method to accept a ` formatterString ` parameter and modified related logic in ` FormatterConverter ` to ensure that the output
updated LoadContactsTask . java to conditionally load Ezcard file based on Android SDK version to ensure compatibility with devices running Android O and
replaced ` setRemoteAddress ` and ` setRemoteHostname ` methods with direct assignment to ` remoteAddress ` and ` remoteHostname ` to simplify
added a null check for realClass in Robolectric . java to ensure that the shadow class is not annotated with @ Implements to prevent
added a condition to check if tlsMutualAuthenticationRequired is true in NettySslContextFactory . java and ExampleNettySslContextFactory . java
added a test to verify that requesting a plain HTTP endpoint over HTTPS throws a SSLException to ensure proper handling of SSL - related exceptions in the
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance accessibility of the consumer and producer components
refactor SitemapWidgetEvent creation in PageChangeListener . java and add widget ID replacement in FrameRenderer . java to improve code readability and
updated warning log message from " Could not send email to [ { 0 } ] " to " Could not send SMS to [ { 0 }
# 1181 - enh : add query . fetch ( ) ... to fetch bean with draftable element
added exception handling for resource temporarily unavailable in MultipartBody . java to ensure robust handling of NIO issues and improve error logging
refactor : fix typo in byte [ ] array declaration ( # 2361 )
refactor multiple classes related to configuration and security to improve code organization and enhance maintainability
fix ` ` attach file ' ' button not work directory when attach ( # 4329 )
added LoadOptionsBuilder to SchemaCrawlerOptionsBuilder in AccessTest . java to enhance schema crawling options configuration for improved performance
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
replace throw statement with return statement in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties of a ProjectProperty to enhance the functionality of ProjectProperty by allowing customizable properties
refactor connection handling in AbstractDbmsOperationHandler to use a try - with - resources statement to ensure proper resource management and avoid potential memory
[ hotfix ] [ doc ] fix typo in datastreamjob javadoc
replaced the try - with - resources statement for FileOutputStream handling in TestContentProvider . java to ensure proper resource management and avoid potential memory leak
camel - 16400 : camel - cxf - make it easy to get the service class from the context .
modified the conditional logic in HTTP2ServerConnectionFactory to include a check for " h2 - 14 " protocol and cipher to ensure proper handling of
refactor LambdaToMethod and ClassFileVisitor to improve parameter handling and condition checks to enhance code clarity and correctness in method symbol processing
make sure we do n ' t ignore ' what ' in the barq regex
increased timeout duration for file copying in DL4JInceptionV3Net . java from 5000ms to 60000ms to
added a line to set the phrase slop in the QueryParser to enhance query flexibility by allowing dynamic phrase slop
increased the sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow more time for the mouse listener
updated the port from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to align
fix ( game ) : refactor game scheduler to use a separate thread monitor
updated visibility condition for the compound view in EditShareFragment to ensure the compound view is only visible when available for editing operations
added a progress calculation in DepthController . java to ensure a minimum value of 1 to prevent potential errors during progress updates
remove session . packetreceived ( packet ) method that be n ' t use .
added debug logging in ` DefaultCasDelegatingWebflowEventResolver ` and refactored authentication handling in ` DelegatedAuthenticationGenerateClients
added null checks for the service parameter in the SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction classes
added hidden attribute to PantheonCommand ' s arity and message in PantheonCommand . java to enhance command functionality by allowing users to
added doNotInstrumentClass method to exclude " androidx . room . CoroutinesRoom $ Companion " to ensure proper instrumentation of
added synchronization to the ` isSupported ` method in ` NegotiateAuthentication . java ` to ensure thread safety when accessing the context class loader
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the code by eliminating unnecessary initialization scripts
camel - 7999 : added maxconcurrentconsumers to persistent and temporary queue reply manager . thanks to stephan siano for
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added conditional logic to handle tagged images in PdfDocument to ensure proper rendering of tagged images when needed
log4j2 - 1343 add test case for patternselector .
danielwagnerhall : use selenium - server in htabrowserlauncher instead of throw an exception . fix issue #
added a new class ` MwThankPostResponse ` and modified the ` thank ` method signature in ` Service . java ` to
added a new ` SocketBased ` interface and refactored ` ChannelEndPoint ` to use it instead of ` ChannelChannel ` to enhance socket
removed redundant initialization of revokingStore and adjusted max size calculation accordingly to streamline the code and improve clarity by eliminating unnecessary
added unit tests for HQL collection implicit joins in HQLTest . java to ensure correctness of query results for call history and timestamps in
updated assertion to normalize line separators in NonVisualRegressionTest to ensure consistent line endings across different operating systems
refactor file handling in IndexWriter and add assertions in MockDirectoryWrapper to improve resource management and ensure unreferenced files are properly managed during commit
replaced the ` final ` modifier with the ` @ Final ` annotation in ` BaseError . java ` to enforce immutability of the
added validation for user resource percent in ConsumeUserResourcePercentActuator to ensure that the percent value is within the valid range of 0 to 100
added a condition to check if show _ old _ login is true before showing the legacy login to ensure legacy login only occurs when the new login
rename ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to improve clarity and consistency in test class naming
changed the response page setting from EditTeamPage . class to UsersPage . class to ensure the correct page is displayed for user management
updated debug log message to include the exception cause to improve clarity of error reporting during plugin initialization
refactor connection management to ensure proper shutdown of server socket channels to improve resource management and prevent potential memory leaks during shutdown
refactor Rocket class to improve code readability to enhance maintainability and facilitate future updates
added a method ` createDynPartSpec ` to handle dynamic partition specifications in the ` BaseSemanticAnalyzer ` class to improve the logic for
use scientific format for round half up factor ( fixes # 374 )
added directory handling methods in JarDirectoryStep and corresponding tests in JarDirectoryStepTest to improve directory traversal and ensure proper handling of directory entries
added a new file JWKSetEditor . java to handle JWKSet configuration to facilitate the editing of JWK sets in the application
refactor finish method in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionBlockTreeTermsWriter to remove unnecessary parameters and
truffle : fix tracethrowable method and add truffle boundary .
change fetcher . threads . per . host . by . ip default from true to false to disable the fetcher thread per host by IP
updated conditional check for queryTimeout in StatementUtil . java to ensure proper handling of transaction and query timeouts
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to handle target configuration
refactor ReplicaPosition class to improve code readability to enhance maintainability and facilitate future updates
bug cs - 15934 : fix npe in network usage stats update task ( # 15934 )
updated interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use a new final interpolator to improve code clarity and maintain
adjusted swipe length calculation in Background . java to account for display density to ensure proper layout responsiveness based on device density
added a new module - info . java file for the org . eclipse . jetty . http3 . server package to define module dependencies
fix npe in jsontype when value be null
reformatted code for clarity in ResourceResolverBean . java to improve readability and maintainability of the code
[ hotfix ] fix checkstyle violation in checkpointconfig
updated the ` reportInnerClassReferences ` method to accept a ` Element ` instead of a ` TypeElement ` and added a new ` visitPackage
added an empty string for the " test . tool . vm . opts " property in TimestampCheck . java to prevent potential null pointer exceptions when
replaced FluentIterable with MoreCollectors for file listing to simplify code and improve readability
[ 3.0 ] support register dubbo service to registry ( # 9859 )
on setting change , end all session if otr mode be disable
added properties for outline size and transparency in PreviewProperty and updated renderProcessing method in NodeLabelRenderer to allow customizable outline properties for label rendering
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
changed the boolean parameter from - false to true in Win32FontManager . java to enable the font management functionality in the application
added null check and cursor setting before visiting a tree to prevent potential NullPointerExceptions when the view is not initialized
added error handling policy to JDTBatchCompiler based on classpath status to improve error handling behavior based on compiler environment settings
added content alignment and text anchor properties to LabelBlock and updated related tests to enhance functionality by allowing customizable text alignment options
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader to improve code readability to enhance maintainability and facilitate future updates
changed the type of the ` isLoopback ` variable from ` boolean ` to ` Boolean ` and added null checks for ` NetworkInterface ` to
updated the ` fromRfc1123DateString ` method to accept a ` Locale ` parameter across multiple classes to ensure consistent date formatting across different locales
fix flaky test : ` $ . download ( ) ` return ` ` null ' ' for missing file
nifi - 11845 : output no hit flowfile when no hit find for a query
cloudstack - 7999 : fix calculation of aggregation ratio in quota usage api
[ java ] fix race condition in election work count calculation .
remove unnecessary null check on streamfilesp . processfile ( )
refactor widget event handling logic in PageChangeListener . java to improve clarity and structure to enhance readability and maintainability of the code by
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` HSSFWorkbook `
added a try - catch block around the unregisterInvalidatedSessions ( ) method call to handle potential exceptions and log them for debugging purposes
refactor CategorizationFragment to improve code structure to enhance maintainability and readability of the code
updated the thing status message from " reachable = false " to " not reachable " to clarify that the light is not reachable for better
added a loading flag and a method to check it in FMLClientHandler . java , and created a new GameSettings . java file to
updated string formatting in UI and BlockInventoryFragment to include unit management using Core . bundle to improve readability and maintainability of the code by
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code readability and
added parameterized tests for using reserved words as relationships in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure the query correctly handles
added tests for serialization and deserialization of nested maps in MapTest . java to ensure proper handling of nested maps in JSON format
added boundary checks for x2 and y2 based on offset in GeometryUtils . java to ensure proper positioning of elements within the specified offset
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to use SortingOrderDialogFragment to improve code clarity and maintain
print an error if the testplan could not be find .
refactor ` GeneratedEntityTranslator ` and ` JdbcManagerSupportImpl ` to use ` Lazy ` references for ` DbmsType ` and `
updated the argIdent assignment logic in the Parser . java file to handle both strict and non - strict identifications to ensure that the argIdent
updated the default protocol setting in JettyHttpComponent9 to use the protocol from the scf object instead of a hardcoded string to improve
set default value of displayVolume from false to true to enable the display of volume information in the application
refactor version handling in JavahTask and add version testing in VersionTest to improve clarity and maintainability of version management logic
refactor condition checks and improve null handling in ChangeLogParameters . java to enhance clarity and ensure correct retrieval of changeLog parameters based on
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity and improve performance during development
skip test for oracle due to bug in basicformatterimpl
removed redundant calls to startHandshake and updated socket timeout handling in Connection . java to streamline socket handshake process and improve code clarity
updated action bar size calculation to include popup status in both HomeFragment , DMFragment , ListFragment , and MentionsFragment to improve user interface
change the default value of ` CHA ` from ` false ` to ` true ` in ` EspressoOptions . java ` and make
resolve http : / / issues . apache . org / activemq / browse / amq - 2698 - add log to determine
replaced specific imports with a wildcard import and refactored test methods in JodaTimeRangeRandomizersTest . java to simplify import statements
added conditional resource redirection for Jakarta servlet versions in WebDescriptor . java to ensure compatibility with Jakarta EE9 and
refactor readiness check to allow node to be ready
replace liveEndpoints with handler . endpoints in StorageProxy . java to ensure all endpoints are processed correctly
added a null or empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions when processing creation statements
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new versioning of the
added a null check for the security manager before checking package access in ObjectStreamClass and ObjectStreamField to enhance security by ensuring package access is
removed unused imports and changed access modifier of UGSCommandCount in XLCDCommunicator to private to streamline code and enhance encaps
replaced the import of ImmutableMap with a HashMap and modified the return statement in DefaultMetricsTagProvider . java to improve code readability and maintain
simonstewart : make the mockbrowsersuitetest a bit easy to understand
change default level from OFF to ERROR in opt2 to improve error handling by providing a clearer default level
changed private fields to final in IconNormalizer . java and simplified file path construction in IconNormalizer . java to enhance immutability and improve code
ww - 4440 add option to prepareinterceptor to turn off prepare do when first call prepare do be call
refactor the workspace handling by replacing ` showWorkspaceAndExitOverviewMode ` with ` showWorkspace ` and introducing a ` mHasFocus `
replaced eager singleton binding with direct binding for FormAuth and BasicAuth providers to simplify the binding process and improve performance by eliminating unnecessary
updated the ` incomingAssociations ` method to include an ` ignoreInvisibleAssociations ` parameter to control whether associations should be ignored or not based on
remove private ip capacity when remove pod capacity for a private ip address
improve documentation for async profiler on linux 4.6 +
refactor required flag handling in ModelResolver and add a new RequiredRefFieldModel class to improve clarity and functionality of required field management in
updated class names from ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreConfigurationWatchAutoConfiguration `
updated the implementation of feature flags in FeatureFlags . java to enhance functionality and improve performance of feature management
[ hueemulation ] fix uuid generation for large hueids ( # 11347 )
added functionality to set and retrieve a CacheableBitmapDrawable in TimeLineCursorAdapter and TimelineArrayAdapter to improve image handling by ensuring the
updated error message for major compaction configuration in HiveConf . java to clarify that compaction on insert - only tables are performed via queries instead
added a null check for the storage path before verifying if the activity is down to avoid potential null pointer exceptions when the storage path is not
refactor resize conditions in VectorMapJoinFastBytesHashMap , VectorMapJoinFastBytesHashMultiSet , VectorMapJoinFastBytesHashTable
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connections
deprecate @ xmlattribute in favor of @ xmlattribute ( required = true )
added debug tracing logs in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to facilitate debugging by tracking
added a condition to check if the class name starts with " com . intellij . rt . junit . " to ensure compatibility
updated assertions in TestMultiSearcher to check length of hits2 and hits3 instead of hits to ensure the correct number of hits is returned
added a new file LucenePackage . java that defines a class for managing Lucene packages to provide a centralized way to access Lucene
updated the calculation for sizeInBytes in RAMDirectory . java to ensure correct sizeInBytes is added to the existing size
updated calculations in StatsRulesProcFactory , GenericUDAFBloomFilter , and related classes to use final modifiers and added estimation methods in Generic
added a null check for drawerToggle before processing target shapes in MainActivity to avoid potential NullPointerExceptions when the drawerToggle is not initialized
added @ SuppressWarnings annotation to the subject parameter in convertToAuthentication method to suppress warnings related to unused subject variables
added logic to control module scanning based on classpath and class loaders in Scanner . java to improve flexibility in configuring module scanning behavior based on
fix MSBibConverter to retrieve author information from entry instead of string representation to improve readability and maintainability of the code by avoiding
added core recovery cancellation logic in CoreContainer to ensure proper handling of core states during shutdown
refactor time measurement and position difference calculations in bug5070081 . java to use a dedicated method to improve code readability and maintainability
updated conditional logic in RepoEditView . java to handle multiple tabs and auth control options more effectively to improve user experience by ensuring proper interaction with
chore ( core ) : fix typo in description of pgproperty property ( # 1181 )
added security expression root object configuration to the SecurityEvaluationContextExtension to allow customizable role prefix settings for security expressions
added a check to set exponentSize to primeSize - 1 if it is zero to ensure proper initialization of exponentSize based on primeSize
refactor file usage calculations in SynchronizeFolderOperation and UploadFileOperation , and introduce a new method in FileStorageUtils to improve code
fix ( griffin ) : distinct sql aggregation do n ' t throw exception when combine multiple aggregation
added a test method to verify the execution of post - login activities for a user during successful authentication to ensure that the user service correctly executes the
extractorspanishstrippedverb : use a non - static instance of spanishverbstripper instead of a static instance
refactor character array handling in CharArraySet and add a test for object contains in TestCharArraySet to improve code clarity and ensure correct
fix a bug in muxerwrapper that cause track count to not be set after add track format .
refactor JsBundleGenrule to use AndroidPackageable instead of JsBundleAndroid for better package management to improve code clarity and maintainability
set character encoding to UTF - 8 in PinotClientRequestServlet and modify string handling in StringDictionary to ensure proper handling of UTF - 8
updated the handling of " Logical Analyzer " and " Logic Analyzer " applications in InstrumentsFragment . java to use drawable resources instead of
added a static variable ` instanceClassName ` and ` instanceClass ` to manage the instantiation of ` Vector ` to prevent multiple instances of ` Vector
removed the syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unnecessary synchronization
return ` ` no response ' ' instead of ` ` response answer ' ' when there be no response
added TestLoggingExtension import and annotated DiagramRendererTest with @ ExtendWith to enhance test logging capabilities for better debugging
updated method signatures to include a boolean parameter for useCamelCaseMapping across multiple classes to enhance property retrieval flexibility based on whether the mapping is used
added support for the VIOMI Internet electric water heater 1A ( 60L ) in the MiIoDevices class to enhance
replaced direct calls to ` getSslSessionData ( ) ` with a local variable ` sslSessionData ` to improve code readability and
add a new file ` CreateNewSpreadsheet . java ` that creates a spreadsheet from multiple sheets to facilitate the creation of spreadsheet
replaced ` Duration ` with ` long ` for ` timeToLive ` in ` CacheProperties ` and updated related getter and setter methods accordingly to
updated content URIs to use CONTENT _ URI _ NO _ NOTIFICATION for favoriting operations to prevent notifications from being inserted in the database
updated the testCompile group version from ' 2.14 . 0 ' to ' 2.27 . 2 ' in SwaggerResolveTest . java
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager . java `
added a condition to check if the character is less than or equal to ' < ' in DocClassUtil . java to ensure proper handling of
removed unnecessary String . format call to simplify code and improve readability
added validation error message to the UI in ValidateCommandStep . java to improve user feedback when no validation errors are found
added web resource configuration and modified context hierarchy handling in IntegrationTestContextLoader . java to improve integration test setup for web application contexts and ensure proper
modified scroll handling logic and updated component retrieval methods in multiple classes to improve scroll responsiveness and streamline pointer event checks
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated related methods to use ` String ` instead of ` Long ` for client IDs to improve cl
updated string replacement logic in CellContentConverter to handle newline characters correctly to ensure consistent formatting of the expression for better readability and correctness
simonstewart : fix a bug in the regexp test that cause the test to fail on window .
mondrian : fix typo in mondrianproperties . java
added stack trace printing in ProcessTools and modified launcher existence checks in CustomLauncherTest and LocalManagementTest to improve error handling and ensure correct permissions
removed the testEmbeddedImage method from TumblrRipperTest to streamline the test by eliminating unnecessary functionality
added a condition to check if the symbol has a slot for the storeType before converting it to avoid potential errors when the storeType is not
refactor initialization of extractor wrapper in ContainerMediaChunk and InitializationChunk classes to improve code clarity and maintainability by consolidating initialization logic
updated import statements and refactored IndexWriter initialization in BaseLockFactoryTestCase . java to improve code clarity and utilize PrintStreamInfo
add dynamic option to serviceloader to allow dynamic loading of service
added package - info . java files and updated imports in DocLint . java and DocLintTester . java to ensure compliance with package -
added a new import command constant and updated condition checks in DataImportHandler . java to support both DELTA _ IMPORT _ CMD and IMPORT
added a test to verify that inner classes are not modified if ignoreDefinition is true to ensure proper handling of inner class definitions during rewriting
removed unused import of android . util . Log from JettyService . java to clean up the code and improve readability
modified the ` checkItemPlacement ` method to include a ` ArrayList < Long > workspaceScreens ` parameter and updated related conditions to enhance
alexeibarantsev : adding servlet to kill the jvm
fix npe when decode a realtime record with multiple record ( # 6373 )
added a condition to check if the operating system is Windows and retrieve the display name for Teredo to ensure proper handling of Windows - specific
added a check to ensure the protocol provider is registered before proceeding with the add contact dialog to improve user feedback when a contact is already added
updated bean registration method in AuthenticationConfigBuilder to use a new BeanComponentDefinition to improve flexibility and maintainability of bean management
modified the drawBitmap method to include a null parameter to avoid potential null pointer exceptions when drawing the bitmap
fixed date format in MeitrackProtocolDecoder and TotemProtocolDecoder from ` yymmdd ` to ` yymmdd
changed access modifiers of ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager `
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods should no longer be used and may be removed in
fix ` ` reachedmaxsizeexception ' ' cause by ` ` executionexception ' ' in ` ` clientmapstoretest ' ' ( #
added a boolean flag ` keepEmptySentences ` to control the handling of empty sentences in the ` DocumentPreprocessor ` and ` Sent
added error handling for artifact subdirectory creation and improved exception messages for POM and JAR files to enhance stability and clarity in error reporting
replaced static initialization of ` systemProvider ` with instance variable and removed the ` IDELazyTreeLoader ` class to simplify the code and
added null check for resource answer in DirectAgentAttache . java to ensure proper handling of null resources and improve error logging
removed exception handling for email sending in the sendEmail method to simplify the method signature and improve error logging
added a new package - info . java file for the buildcraftapi and modified PipeItemsObsidian . java to handle null checks
updated DateFormatEvaluator and FileListEntityProcessor to accept a Locale parameter instead of using the default locale to enhance flexibility by allowing locale - specific
added a boolean flag ` includeDecals ` to ` StorageOptions ` and a ` JCheckBox ` to ` StorageOptionChooser ` to enable
updated the ` generateDocumentation ` method to include a ` null ` parameter in the ` getImplementedDatabases ` method to improve method functionality by allowing
refactor HiveProtoLoggingHook to utilize a loop for logging end times and improve test coverage for performance logging to enhance code clarity and
updated error messages in SolrIndexConfig and DocExpirationUpdateProcessorFactory for consistency to improve clarity and maintainability of the code
update class version check in ignoreRecordAttribute to use a dynamic MAJOR _ VERSION string to ensure compatibility with different runtime versions of the class
added a new test class LdapPasswordAuthenticationTest for LDAP user authentication to ensure proper connection and attribute retrieval for users in the LDAP directory
updated import statements and condition in TaskCompiler . java to use BasicStatsNoJobTask ' s canUseFooterScan method to improve code cl
fix npe in ` ` save all ' ' action in flutterreloadmanager . java ( # 5358 )
refactor VisibleAdvance class to improve code readability to enhance maintainability and facilitate future updates
refactor Reflector to allow restarting without reconnecting and add a test for terminal exception handling to improve reliability of the reflector ' s
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance functionality to allow dynamic number columns in data processing
added null checks for getGroupId ( ) , artifactId ( ) , and getVersion ( ) in RawPom . java to enhance code robustness by
update api assignment logic to handle null apiInfo to ensure that the default value is used when apiInfo is null
updated HeadersConfigurer and CacheControlHeadersWriter classes to improve header configuration and cache control functionality
added lighting and shader loading functionality in PhotoPanel and FlameRenderer classes , and implemented disposal methods in FlameRenderer class to enhance
fix insn editor not open if method do n ' t have local variable
refactor conditional checks in CSSParser . java for improved readability to enhance clarity and maintainability of the code logic
added a check for the " isLookAndFeelDecorated " property in UIServiceImpl . java to enable default look and feel
removed unnecessary ' NOT EXISTS ' condition from SQL query in HostRoleCommandDAO . java to simplify the SQL query and improve code readability
updated message identifiers in LJ1200Message . java to include " 2 - TOWER TEST " and changed return statements for specific function
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance swipe - to - new task
replaced HostDatabase with ColorStorage in ColorsActivity to utilize the new color storage functionality
refactor methods in String class for improved readability to enhance maintainability and reduce complexity in the codebase
removed unused logger imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to retrieve global entries from the map
added two assertions to verify the sending of a witness in MultiSign34 . java to ensure that the sendcoin method behaves correctly with the
test : migrate cufiltertest to junit 5 ( # 4523 )
use system . getproperty ( ` ` path . separator ' ' ) instead of system . getproperty ( ` ` ; ' ' )
changed the method access modifier of augmentSuccessViewModelObjects from static to instance to allow access to the augmentSuccessViewModelObjects method from other
updated method calls from ` getField ` to ` getDeclaredField ` in ` InheritanceTest . java ` and modified field retrieval in ` TestUtil .
removed unnecessary configuration parameters from Outlink instantiation across multiple parser classes to simplify the code and improve performance by eliminating unnecessary dependencies
removed ` LexicalContext ` parameter from several methods in ` Lower . java ` , ` RuntimeCallSite ` , and ` GenericPropertyDescriptor
added imports and modified the return statement in UseLambdaForFunctionalInterface . java to include modifiers and remove unused imports to enhance code clarity
removed the appendClassSelector method from the file set addition in TestNGAntTask . java to simplify the file set handling by eliminating
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary
[ 1.19 . x ] fix npe in registryevent . mapping ( # 8843 )
removed redundant assignments of x3 and y3 in the Intersector class to streamline code for better readability and maintainability
added default methods for decoding length and limit in MessageDecoderFlyweight to implement unsupported operations for the SBE version of the MessageDecoderF
updated ElasticsearchContainerTest . java to use a constant for the ELASTICSEARCH version and refactored related imports to improve code readability
replaced a direct buffer copying with a ByteBuffer wrapper for PeerMessage parsing to improve performance and reduce memory usage during message processing
added version ID handling and refactored cluster definition retrieval in ClusterDefinition . java and GSInstallerClusterProvider . java to improve clarity
( chore ) camel - ftp : remove unused setconfiguration method
[ zeppelin - 5353 ] . fix interpreter setting error when dependency can not be fetch
added a new test class NoLocalsMustBeReservedForDCEedVarsTest to verify that local variables cannot be reserved to ensure correct
added a check in ForwardBuilder to return early if the target certificate constraints do not match to ensure proper handling of basic constraints in certificate processing
added initialization logic for database connection in JdbcPostgresqlDAO to ensure values with the same time are upserted when the database version is greater than
updated WebSocket configuration and added buffer size validation in AbstractWebSocketConnection to ensure the input buffer size is less than the minimum allowed size for WebSocket connections
replaced the boolean flag ` undeleteAll ` with ` rollbackUndeleteAll ` and updated related assertions in ` SegmentReader . java `
added null checks for scopes in ClientRegistration and updated test cases in ClientRegistrationTests to ensure proper handling of null scopes and improve test coverage for
added null checks for " orderBy " before processing parameters in CartesianProductStream . java to avoid potential NullPointerExceptions when " orderBy " is not
[ hotfix ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t back up snapshot on kvm user when it be back up ( # 7432 )
added a debug log message to the initialization of the HiveLog4j in HiveServer2 . java to improve visibility into the initialization process for
added a check to ensure tasks are not empty before processing to prevent potential NullPointerExceptions when processing tasks
openpgp : return true on failure instead of void
fix bug : do n ' t create a new relation entity when there be no value
added checks for empty result strings in Code128Reader and Code39Reader and implemented error handling in FalsePositivesBlackBoxTestCase to ensure
use linkedhashset instead of treeset to preserve order .
added a check for control characters in the Escaper class and updated the expected string in InternationalizationTest to improve handling of control characters
updated SQL provider method return type checks and changed method return types from String to CharSequence in SqlProviderSqlSource . java to improve type safety and
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` to ` PagedView ` and updated the calculation of ` scrollDelta ` in ` Workspace
updated compilation unit handling and improved code readability in JavaTemplate . java to enhance clarity and maintainability of the code structure
added method . setAccessible ( true ) to WidgetInterceptor . java to ensure that the method is accessible for access control
added a conditional check for the " database . server . id " field before setting the literal initializer to ensure that the literal initializer only applies to
fix ripper do n ' t work on window 32 - bit machine
added a web interface menu item to the popup containing the server URI to enhance user experience by allowing users to browse the web interface directly from the
[ j2kt ] fix getter on field with actual value .
added error handling for the buildRecordAtOffset method in EncryptedSlideShow . java to ensure robust handling of ArrayIndexOutOfBoundsException when building the record
[ hotfix ] [ runtime ] log more debug information in queue and filecheckpointio
call loadbattlepassmanager before avatar postload to avoid null pointer exception .
updated SSH container version from 1.0 . 0 to 1.1 . 0 and added additional options for agent forwarding and TCP forwarding to enhance
added a new long array and forced an initial full - gc in ThresholdTest . java to optimize memory usage and ensure proper garbage collection during testing
updated log condition checks and modified logger level handling in StdErrLog . java and StdErrLogTest . java to improve logging logic and ensure
fixed - rremoteservice . getremoteserivce ( ) method throw classnotfoundexception if redisson _ remote _ service
added methods to check if the emblem is selected and set its value in MultiButton . java to improve the functionality of the MultiButton class
updated the import statement for UpNextActivity to NextUpActivity and changed the intent from UpNextActivity to NextUpActivity to ensure the correct
reformatted code for clarity in BrokerController . java to improve readability and maintainability of the code
refactor RedisReactiveHealthIndicator to use a ReactiveRedisConnection for connection handling to improve resource management and ensure proper closure of redis connections
refactor background color handling in ProgramGridCell and introduce theme color method in Utils to improve flexibility by allowing theme attributes to be retrieved
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added multiple type adapter registrations for various classes in the ToolingApiLauncher to enhance functionality and maintainability of the tooling API
updated the color value in TestPayloadCheckQuery . java from a darker to a lighter to enhance visibility and aesthetics
refactor ConsoleReader to streamline character printing and add a new test for reading lines with a mask to improve code readability and ensure correct
added user information and command line output in BaseCommand . java to improve user context handling and provide context - specific information during execution
move exportingclassloader from test to api package .
[ hotfix ] remove unused constructor in slotsharinggroup
modified the condition for creating ` Java9Specific ` based on the ` one . util . streamex . emulateJava8 ` flag to
updated texture paths in DecalTest , MusicTest , and SimpleDecalTest classes from " data / wheel . png " to "
updated the registration and unregistration of the system dialog receiver in the Launcher class to ensure proper resource management and prevent potential memory leaks
updated import statement for Cluster in HostsRemovedEvent . java to ensure consistency with the correct package structure
updated ` reuseRefreshToken ` to true and added ` allowIntrospection ` boolean to ` ClientDetailsEntity ` , modified ` ChainedTokenG
updated HtmlSessionInformationsReport to use htmlEncode for user session attributes and content to ensure proper HTML encoding for better security and data integrity
added multiple link statements to PhraseQuery , PhrasePrefixQuery , and SpanQuery in Query . java to enhance query functionality and improve code
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` for better readability in ` CommentsInserter . java
refactor isLiteralString method to isThisElementAnOperandInABinaryStringConcatenation for clarity and consistency to improve readability and
updated method signatures in ` AbstractAssert ` , ` Assert ` , and ` DateAssert ` to use ` Object ` instead of ` A `
[ type : refactor ] refactor jwt lambda plugin to jwt exception plugin ( # 3883 )
added methods to get and set uploader behaviour in AppPreferences and updated PreferenceManager to use preferences instead of static context to improve encapsulation and ensure
fix : targetedexpression . getlaststatement ( ) should return null when there be no element in the factory .
updated BitmapDrawable initialization to use Robolectric ' s newInstanceOf for creating Bitmap instances to ensure compatibility with Robolectric ' s
updated method names and parameters in DutchStemmer . java to improve clarity and consistency to enhance code readability and maintainability by
updated the drawable resource used in PageMarkerResources from " ic _ pageindicator _ add " to " ic _ pageindicator _ current " to
added a counter for reinvocations and updated log messages in BasicInvocation . java to track the number of invocations and provide clearer context about
updated the calculation of topPadding in DefaultLookAndFeel . java to use getInnerHeight ( ) instead of getHeight ( ) to ensure proper
added a break statement in the Recognize . java file to ensure the loop terminates when a specific condition is met
added preference management and haptic feedback functionality in multiple classes to enhance user experience by providing tactile feedback during drag operations
refactor ExcelBatchReader to handle formula types more effectively and add new test cases for text and numeric formula functionality to improve data handling and ensure
fixed bug 1248825 - immutablefield . getvalue ( ) should return null when use an anonymous inner class .
added a userAgent field to CommaFeedConfiguration and updated HttpGetter to retrieve it if it is null to ensure a default value is used when
added @ XmlAttribute ( required = true ) to both AvroDataFormat and BarcodeDataFormat classes to ensure that required attributes are required for
changed log level from info to debug for file not found message to reduce log verbosity and improve performance during debugging
rename the class QueueTest to QueuedPipeTest to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to use a method for retrieving the unique ID to improve robustness by ensuring the
camel - 13850 : camel - core - optimize to avoid npe if the include pattern be empty / false .
added a ` vertexColor ` boolean property and modified the rendering logic in ` PShape3D . java ` to allow customization of color
added primary key filtering functionality to the SchemaDotFormatter and updated related test cases to enhance the diagram rendering by allowing filtering of primary keys based on
replaced ShadowMatrix with direct matrix retrieval in ShadowMotionEvent . java to simplify code and improve performance by eliminating unnecessary shadow extraction
changed package declaration of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
refactor class definition handling and simplify return statements in GroovyEngine . java to improve code readability and maintainability by reducing complexity
change package name from ` io . hawt . web ` to ` io . hawt . branding . plugin ` and implement
removed redundant print statement for command output to streamline output for clarity and maintainability
replaced updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve event handling
added a test method to verify expected exceptions and updated cause assertions in ThrowableAssert _ hasCause _ Test . java to improve error handling and ensure
removed duplicate flatten and pack variables in AutomaticDependencies . java to streamline code and improve readability by eliminating redundancy
updated variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve clarity and consistency in scope management logic
eranmes on behalf of andreashaas : adding test for firefoxoptions and capabilities .
camel - 7999 : camel - management - add option to set route description . thanks to daniel for the patch .
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added edge weight setting in ImporterCSV . java to ensure edges have the correct weight based on the specified weight
fix ( core ) : fix the calculation of the cost per hour for the current month ( # 4358 )
updated SQL query in DatabaseMetaData . java to include an additional condition for attribute definitions to ensure that only relevant attributes are retrieved from the database metadata
added null check for binarized sentences in SentimentAnnotator . java to ensure that binarized sentences are not built by the parser
added string representation of user properties in the User class to improve debugging by providing detailed username , password , account status , and authorities
camel - 16400 : use message . getbody ( ) instead of extractbodyasstring ( ) to convert the message to string .
[ hotfix ] [ runtime ] use partitionproducer directly instead of executionvertex in taskdeploymentdescriptorfactory
improve roster access to check if a user be a member of a node group . jm - 495
added a classpath reference for " maven . test . classpath " in AbstractJRubyMojo and removed unchecked suppression in Cucumber
updated method handle type handling in MethodHandleImpl . java and added a new test for user class in MethodHandlesTest . java to improve type
added import statements for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , and LegacyHTMLStripCharFilterFactory to enhance
updated width and height checks in URLImage . java from greater than or equal to to not equal to placeholderImage dimensions to ensure that images are
added a condition to skip class names that do not start with " META - INF / " and improved the handling of package names to ensure
refactor ImageDownloadService to use Display for scheduling background tasks when using Edt to improve UI responsiveness on Edt for image downloads
updated assertions in StackWalkerTest to use a dynamic expected number based on VersionCheck version to ensure compatibility with version 22 and improve test reliability
changed the access modifier of the addViewportJob method from protected to public to allow broader access to the method for better usability
removed the " num - output - partitions " argument from the SimpleWordCount command and updated the buildFlow method signature to simplify command usage and
removed server restart and exit settings in TestDatabase . java to streamline the code by eliminating unnecessary server settings
added null and empty check for block in NodePathsConvertOperator . java and modified child iteration logic in SchemaQueryMergeOperator . java to improve
add total harvesting time to call info .
updated font dimensions in ParticleEditor . java for improved visual appearance to enhance the visual appearance and user experience of the particle editor
added functionality to retrieve and update the Hadoop environment configuration in UpgradeCatalog240 . java and corresponding tests in UpgradeCatalog240Test . java to ensure
added a transparent background color to the SvgViewerFactory to enhance visual consistency by using a transparent background
removed the minSdk annotation from the ShadowKeyguardManagerTest and ShadowKeyguardManager classes to simplify the code by eliminating unnecessary configuration
updated the method signature of ` containsExactly ` to accept a varargs instead of using ` accumulate ` to improve flexibility in handling varargs for
updated Bandwidth limit builder to include refillGreedy method and improved key handling in Bucket4jFilterFunctions . java to enhance
updated GermanAnalyzer , GermanStemmer , and WordlistLoader classes to implement an external list of stopwords to enhance text analysis capabilities
added support for materialized views and modified generator initialization to include post - execution hooks to enhance query optimization and ensure proper execution of lineage evaluation
added exception handling for NoClassDefFoundError in REngine . java to ensure support is set to Boolean . FALSE when the class definition is
refactor span handling in TraceFilter and TraceWebFilter to use a new SpanAndScope class to improve clarity and maintainability of span
updated exception handling to check for null before setting the exception message to improve robustness by avoiding potential null pointer exceptions
updated SolrServerException instantiation to include the base URL from the exception to improve error handling by providing the base URL for better context
update printSetupRecord ' s landscape property from ' ls ' to ' ! ls ' and modify its return statement to ensure correct handling of
update return statement in JavaVoidObjectInspector to handle null inputs more gracefully to ensure that a null object is returned when the input is null ,
added validation to ensure argument names do not contain tab characters to prevent illegal argument names and improve error handling
added support for background location listener in AndroidLocationPlayServiceManager to manage location updates based on the activity ' s context or background class to improve
changed the condition from checking if primitiveType is not GL _ POINTS to checking if it is equal to GL _ POINTS to
trufflestring : do n ' t compare byte [ ] array if the length do n ' t match
added a line to set the command list in ComboBox to ensure the command list reflects the current state of the ComboBox
nifi - 3740 : ensure that the alias filename be not escape . this close # 3747 .
updated ZkCLI command line arguments to use " zk - zkhost " instead of " zkcli . sh - zkcmd " and added
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ' equals ' instead of ' equals
added a conditional check for remoteGrpcStatus before posting a console event for missing dependencies to ensure that the build fails gracefully when the remote
refactor method signatures in XYItemRenderer for improved readability to enhance maintainability and clarity of the codebase
fix entity entity not be save in the chunk when it be add to the forge chunk . close # 183
added error string handling and refactored error reporting in GLSurfaceViewAPI18 . java to improve clarity and maintainability of
added a method to retrieve supported locales and updated the InfoRequestHandler to handle locale validation to improve error handling and provide clearer feedback on unsupported locales
updated the server URI construction and assertion in RFC2616BaseTest . java to ensure the test verifies the correct response location with a specific host
added a method call to addToHelperList in the Construction class to enhance the functionality of the helper list in the construction process
added handling for the end of the escape sequence in GlyphLayout . java to ensure proper parsing of the escape sequence in the layout process
added security permissions handling in Transport and TCPTransport classes to ensure proper context class loader management during privileged actions
added null check for folder and refactored file handling logic in ReceiveExternalFilesActivity . java to ensure proper folder context is maintained and
updated the loader assignment to handle null class loader case to improve robustness by avoiding potential null pointer exceptions
removed a debug log statement in BarrowmanCalculator . java and modified the deltap calculation in TubeCalc . java to streamline the
added type check for Node and updated column addition logic in TimelineControllerImpl . java to improve type safety and ensure correct column retrieval based on
added a method to register extra components in BaseBrokerStarter to enhance the application ' s capability to manage additional broker configurations
added a test method for bug 4658 in MultiCfQueryExecIT to verify query execution for specific column values to ensure that the query
peergroup : do n ' t send witness message if the client version do n ' t support it .
fix builder cycle not be update properly .
[ iotdb - 4560 ] fix ratis max retry attempt ( # 7890 )
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
added a null check for the ManagedService annotation before registering and unregistering JMXHelper to avoid potential NullPointerExceptions when accessing the JMXHelper
tika - 3745 -- fix parsing of non - unicode zip entry in packageparser
added a new file TestSplitThruPhiDivMod . java with methods for modulating and dividing integers to implement and test the behavior
added methods to lookup generic types and superclasses in TemplateRegistry to enhance template retrieval capabilities for better type management
change the initialization size of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for better performance
added TODO comments regarding available language symbols in PlayerSettingsScreen . java to clarify that these symbols are not yet available and improve code read
refactor byte transfer logic in TransferCompletionHandler . java to optimize memory allocation to improve efficiency by reducing the number of bytes sent during transfer
fix bug where popup menu would not show if the user click on it .
added null check for the source node before throwing a SemanticException for invalid tables to improve error handling by providing clearer error messages when the source
added scaling functionality to the AABB calculation in SkeletonRenderer . java to ensure proper position and extent calculations for skeleton rendering
added getSolrHome method to DistributedClusteringComponentTest and BaseDistributedSearchTestCase classes to provide a way to retrieve the Solr home
added ComponentScan annotation to SpringWebConfig . java to enable component scanning for improved configuration
removed the getAccount ( ) method from UserListItem . java to streamline code by eliminating unused method
added default process name assertions and updated package info handling in ShadowPackageManager and ShadowApplicationPackageManager to ensure proper installation and retrieval of package information
updated AvailableSettings class for improved functionality to enhance user experience by providing better configuration options
added TransactionCapsule and ReceiptCapsule imports , and implemented initialization and execution methods in TransactionTrace to enhance transaction management and ensure proper resource cleanup
add client property to shuffle member list ( # 15656 )
replace Text with CrawlDatum in SegmentReader . java to improve data handling by using CrawlDatum instead of Text
refactor JsonDeserializer to improve code structure to enhance maintainability and readability of the code
updated configuration paths and modified fetch size handling in TsfileDBConfig , QueryProcessExecutor , and OverflowQueryEngine to use ThreadLocal to
updated error message in GenericUDFTrunc from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument to " trunc (
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialize the title variable to an empty string instead of null to avoid null pointer exceptions when accessing the title property
added a null body to the response in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that the response body is not
deprecated the new interface EmbeddedServerInstance in the io . micronaut . runtime . server package to indicate that the interface is no longer
use reflection to register mac event in jabrefframe instead of direct access to macadapter .
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated related method calls to improve
removed unnecessary whitespace in the HandlerLibrary . java file to improve code readability and maintain consistency
fix : pgconnection . hideunprivilegedobjects ( ) should be final ( # 1854 )
updated logging level from info to fine in ThreadedAcousticScorer . java and modified data source instantiation in AudioDataSourcesTest
added a conditional check for Android Q in IOUtils . java to handle video saving for Giphy on Android 11 to ensure compatibility with devices running
fix issue with variable be not serialize in second service task . fix http : / / github . com / activiti / activiti
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 135 )
( chore ) camel - maven - logger : use computeifabsent instead of conditional check
hbase - 25836 remove unused class dataoutputoutputstream ( # 258 )
updated the row identifiers in TestAcidOnTez . java from 1 to 2 and modified the configuration to disable autogathering to ensure
changed log level from info to debug for successful enhanced class to reduce log verbosity and improve performance during development
added a method to retrieve the default provider name and modified the provider name assignment logic to improve clarity and maintainability by centralizing the provider
added import statements and processing for Captor annotations in MockitoBeforeTestNGMethod . java to enhance the functionality of Mockito by processing
added checks for non - empty test class and method names and improved error handling in TestSuiteBuilder . java to ensure that only valid test
updated imports and modified method parameters in GroovyAutoComplete . java , GroovyLanguage . java , and GroovyCompletionHelper . java to enhance code read
use osm instead of graphhopper for import , fixes # 269
[ java ] refactoring handlesession to use clientconfig instead of url to make it easy to configure .
changed mHideSysUiScrim from final to non - final and added top shadow handling in SysUiScrim . java to
modified method signatures and added cancellation logic in Call and OkHttpCall classes to improve call management and ensure proper cancellation of calls
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance swipe - to - new task
updated RequestMatcher interface to extend from org . springframework . security . web . util . RequestMatcher to ensure compatibility with Spring Security ' s
added a new class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr ` to include ` IF ` to
refactor testboxedprimitivetype and testboxingconstructors / testboxingvalueof to be more comprehensive
added unit tests for display metrics ' default density ' and ' hdpi ' in DeviceConfigTest . java and updated DeviceConfig . java to
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated timestamp initialization in PinotDataTypeTest . java to improve error handling and
replaced the logo resource with a custom icon from the R . mipmap . ic _ launcher to improve user interface by using a more
added error handling to set a content text in the error builder to improve user feedback by providing clearer error messages
refactor ConcurrentHashMap to improve thread safety to enhance performance and reliability of concurrent operations
added methods to adapt user trades from AbucoinsFill objects to improve code modularity and facilitate the adaptation of user
removed unnecessary call to callRemovePlot and updated the return condition for plot claiming to streamline code logic for better readability and correctness
alexeibarantsev : implement ability to set the http proxy for the htmlunit driver
added handling for VARBINARY data type in BlobType . java to ensure proper handling of VARBINARY data types in the database
refactor cookie version handling in SetCookieSupport . java to improve code clarity and maintainability by using a consistent variable name for version variable
added synchronization to the language ' s cachedEnvType initialization to ensure thread safety when accessing shared resources
updated InboundBuffer to use ContextInternal and VertxThread instead of Context to improve clarity and consistency in context handling
updated the ` waited ` variable and refactored ` LdapTimeoutTest ` to include a new timeout test method to improve timeout handling and
updated usage message from " UniocdeData . txt " to " UnicodeData . txt " in CharacterName . java to clar
camel - 16400 fixed the unit test error of cxfmessageheadersrelaytest
updated multiple Synth UI classes to ensure consistent naming conventions to improve code readability and maintainability across the Synth component
added support for BoosterSet in ComponentAssemblySaver and modified return value in BoosterSet to ensure proper handling of BoosterSet parameters
added support for java . net . authentication . authenticator . setdefault ( ) in jabref ( # 6373 )
rename ` BLOCKCHAIN __ FORK _ COUNT ` to ` BLOCKCHAIN _ FORK _ COUNT ` across multiple files to standardize
replace ` throw new InternalError ( " Compile stub invoked ! For JEP 359 support see https : / / github . com / ec
updated logging imports in TestIPCUtil . java to use Apache Commons Logging instead of Mortbay ' s Log to streamline
simplified the request handling in NettyRoutingFilter by removing chunked transfer logic to streamline the request process and improve code readability
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure proper initialization of token attributes
added a pollingPeriod parameter to the VerificationAfterDelayImpl and updated related classes accordingly to improve handling of assertion errors during verification operations
added compaction functionality to the SemanticAnalyzer and SessionState classes to ensure table masking only occurs when a compaction is active
[ zeppelin - 5352 ] fix zeppelin / zeppelin / interpreter / docker -
hbase - 26975 fix checkstyle issue in hbaseadmin
added an @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to unintended behavior
removed redundant calls to ` calcXBounds ` in both ` CombinedChartRenderer ` and ` Renderer ` classes to streamline code by elimin
added error handling to XML parsing in a try - finally block to ensure proper resource management and prevent memory leaks
added a release of the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to improve test
added null and closed check for ResultSet before closing it in JdbcExecutor . java to prevent potential NullPointerExceptions and ensure proper resource management
update driver version from - 1 to 10 and 6 in DerbyDatabase . java to ensure compatibility with the latest database versions
fixed bug 1244441 - usesstringbufferlength no longer throw an exception if there be no literal .
removed error logging statement from RemoteSparkJobMonitor . java to clean up the code and improve readability
refactor createDb method to return a Connection object to improve resource management and ensure proper closure of the database connection
refactor CreateCustomMetric , ListResources , and CreateCustomMetricTest classes to improve code organization and maintainability
hbase - 26975 add option to disable off - peak compaction when use compaction . max . size . offpeak
added handling for " address " in BitstampDepositAddress and created a new test class for JSON unmarshalling to improve address unmarshalling functionality
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener to ensure proper error handling when buffering capacity is exceeded
updated the method to use ` toAbsolutePath ( ) ` for path handling to ensure that the link path is relative to the absolute path for
updated InvocationFinishedEvent to implement MetricsEvent and replaced HashMap with ConcurrentHashMap for allRegisteredMetrics to enhance event handling capabilities and improve thread - safety
fix optionstest . testmulticast ( ) failure on jdk8
refactor the conditional check for validCheckSums to iterate through validCheckSums directly to improve code readability and maintainability by redu
added a clone method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to ensure that the clone method does not throw an unsupported operation exception
updated circle comparison logic to use radius instead of x and y calculations to improve accuracy in determining if a circle contains a specified radius
added a conditional check before setting the frequency band in P25Channel . java to ensure the frequency band is only updated when the identifier matches the
replaced ` tapSquareSize ` and ` inTapSquare ` with ` tapRectangleWidth ` and ` tapRectangleHeight ` , and updated
set default replicate _ on _ write to false by default
added a new query parameter for the lastFillTime in CryptoFacilitiesAuthenticated and utilized this method in CryptoFacilitiesTradeServiceRaw to
added delegate methods to TraceCallable and TraceRunnable , along with corresponding test cases to enable testing of the delegate functionality of the TraceCallable and Trace
updated error handling and synchronization logic in FileActivity , FileDisplayActivity , OCFileListFragment , and FileDetailSharingFragment to improve user feedback
added stream writable method implementation in ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to enable proper writing of streams
danielwagnerhall : do n ' t allow script to be execute in a browser that do n ' t support it
removed unnecessary parameters from TableCell constructors in BaseTextFormattingHelper and TableCell to simplify the code and improve readability by eliminating unnecessary
added a new file ` TracingAutoConfiguration . java ` to configure Spring ' s tracing features to enable better integration and configuration of tracing features in
refactor the content addition logic in Submissions . java to use a Para variable to improve code readability and maintainability by reducing
decrease the number of queryable segment by one when there be no more in the data manager
updated VertxBufferTest . java for improved buffer handling to enhance performance and reliability of buffer operations
refactor message submission chunk handling and add unit tests for it to improve code clarity and ensure proper functionality of message submission chunk processing
changed the visibility of mContext from private to protected to allow subclasses to access and modify the mContext variable
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve readability
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` and tests to utilize it to improve error handling for MongoDB
[ hotfix ] fix checkstyle violation in jobcoordinationservice
refactor ` bitsToHumanReadable ` method to ` bytesToHumanReadable ` and introduce a new ` mimeType2HUmanReadable
replaced ` newMergePolicy ( random ( ) ) ` with ` newTieredMergePolicy ( ) ` in ` TestUpgradeIndexMerge
added a conditional check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
update error message in CpuNDArrayFactory . java to reference the correct CPU support link to improve clarity and address performance issues related to CPU
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter and updated related methods accordingly to enhance flexibility in loading setting models
added null checks for input parameters in FilterLeafReader and updated constructor visibility in FilterTermsEnum to improve robustness by preventing null pointer exceptions
add check for negative key size in jcecrmfencryptorbuilder .
updated IOException to include the message from the exception instead of the original exception to improve error handling by providing a clearer error message
remove unnecessary import of javax . inject . Inject in multiple Java files to simplify code and improve readability by eliminating unnecessary dependencies
updated the expected size in BundledDistributionTest from 9 to 10 and added new assertions in PostgreSQLTest to verify the correctness of database user
add pipeline . name option to allow user define job name .
refactor scale calculation in OverviewState . java to handle different device profiles for two - panel layouts to ensure correct scaling based on the device
updated IcePlainsBiome to extend SnowyBiome and modified populators for the tall grass to enhance biome functionality
removed unnecessary DateTimeZone parameter from methods in DataUpdateManager and StorageUtils to simplify method signatures and improve code readability
[ j2kt ] fix thisreference when the target type be a qualified type .
[ xhamster ] fix xhamster ripper on window .
fix checkstyle issue in entity / glowworld . java ( # 700 )
hhh - 14615 oracledialect should include the schema in the table name if it ' s null or empty
fix a typo in the flutter console filter ( # 643 )
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing dynamic selection of files based on the
[ java ] change network publication to use termlengthmask 1 instead of termwindowlength .
modified the GuildUpdateOwnerEvent class to improve event handling logic to enhance the accuracy of guild updates during event processing
adjust inportalticks when creativetasks be call in player , not in entity .
added compression handling and adjusted spacing in ClusterMonitorTileSkin . java to improve layout responsiveness based on tile compression status
updated ResponseTemplate , TransactionalListCodecTemplate , TransactionalMapCodecTemplate , TransactionalQueueCodecTemplate , and TransactionalSetCodecTemplate classes to improve code
change variable types from int to long for length calculations in Base64 . java to prevent potential overflow when handling large binary data sizes
removed null check for header in RendererConfiguration . java to simplify the conditional check for renderer initialization
server : allow volume to be create with custom service offering ( # 7432 )
updated import statements in HitbtcAdapters . java and modified Order . java to include LimitOrder . java to enhance code clarity and
fix idle count issue in lrt segment data manager ( # 2321 )
updated the service description from " JRuby Scripting " to " jrubyscripting " to clarify the purpose of the service in
replace name with displayName in ConfigCategory . java to improve clarity by using a more descriptive variable name
updated the condition to allow negative exchangeAmount values in ParticipateAssetIssueActuator . java to ensure proper handling of negative exchangeAmount values
removed an index variable and its condition from the FeedUtils class to streamline the code by eliminating unnecessary loop conditions
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to verify HDF4 file parsing functionality to ensure
added a constant for CALCITE _ 6092 _ FIXED in Bug . java and updated SqlOperatorTest . java to include checks for
reformatted code in IDEEditor . java for better readability to improve code maintainability and clarity
added a method to quietly close a list of AutoCloseable objects and updated the loop structure to improve resource management by allowing quiet closure of
updated the confirmation button text in RemoveFileDialogFragment to use a common yes string instead of a specific confirmation button to improve user experience by providing
added a null check for srcWidth , srcHeight , and dstWidth and dstHeight before drawing an image to avoid potential NullPointerExceptions when processing
replaced ` ReflectionHelpers ` with ` ProtectionDomain ` and refactored the ` defineClass ` method in ` UnsafeAccess . java
updated fqdnRegexPattern format and added validation assertions in GUIUtilTest to improve regex pattern matching and ensure validation of domain names with port
replace boolean conflict with long conflicts in CachedRowSetWriter . java to improve handling of row conflicts and provide clearer error messaging
cache the version of the flutter sdk ( # 6373 )
refactor reference handling in ReferenceMemory . java for clarity to improve readability and maintainability of the code
added handling for seed files and improved error logging in Injector . java to enhance functionality and provide clearer error messages when no seed files are
added a condition to hide the original view if its tag is an instance of ItemInfo to improve user experience by ensuring the original view is hidden
updated maxNodes calculation and modified maxTrips condition in DefaultLoopPolicies . java to ensure that the maximum number of iterations does not exceed zero
added a warning log for unsupported texture coordinate types in CombinedTexture . java and introduced a method to check texture coordinate types in UVCoordinatesGenerator
added error handling for barcode file deletion and validation in multiple classes to improve robustness by logging errors and preventing application crashes
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality by allowing seeking and closing the delegate resource
updated SQL query to use the length of oldPrefix instead of the position of handle to ensure accurate substring extraction based on the length of oldPrefix
replaced ` ArrayList . addAll ( collection ) ` with ` ArrayList . addAll ( collection ) ` in ` JSONSerializer . java ` to
mark the constructor of AbstractTimer as deprecated to indicate that the constructor should no longer be used and may be removed in future versions
added a warning dialog for the Universal Gcode Sender on nightly builds to inform users about outdated features and improvements while maintaining
added team name check and improved response sorting logic in FeedbackSessionResultsBundle . java to ensure proper handling of team - related responses and
updated return message from " Remove unnecessary throws " to " Remove unnecessary ` throws ` declarations . " to clarify that unnecessary throws are removed
deleted the CacheApplication . java file and updated CommonsApplication . java to replace it with CommonsApplication . cacheData to streamline the
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet to improve code structure to enhance maintainability and readability of the code
replaced direct configuration update with a conditional check for SDK version to ensure compatibility with devices running KitKat and above
added a constant for the version definition ' s stack repo update link and a corresponding test case to ensure proper handling of the existence of the stack
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
add null check for oldIndexName in CFMetaData . java to prevent potential NullPointerException when oldIndexName is null
added " com . sun . org . apache . xml . internal . resolver . helpers . " and " com . sun . org . apache
rename method ` save ` to ` add ` and ` updateExecutionContext ` in multiple repository classes to improve clarity and consistency in method naming
fix loop input replacement when exit a loop .
updated RecyclerView references to WidgetsRecyclerView in SearchAndRecommendationsScrollController . java and added a reset method in SearchAndRecomm
added a check to ensure terminal is supported before proceeding to prevent errors when the terminal is not supported
change the data type of timeAllowed from Long to Integer and update related methods in CloudExitableDirectoryReaderTest and LBHttpSolrClient
added session validity check before flushing the response in AbstractSessionCache . java and updated session handling in RemoveSessionTest . java to ensure sessions are
refactor index handling to check for null column names before processing to improve code robustness and prevent potential NullPointerExceptions
replaced ` java . util . Vector ` with ` ArrayList ` for managing ` RadioButton ` instances to improve performance and simplify the management of
updated UserManagerCompat and UserManagerCompatVL classes to include UserManagerCompatVM and UserManagerCompatVNMr1 for compatibility
added getDatabaseMajorVersion and getDatabaseMinorVersion methods to MockDatabase , AbstractDatabase , HibernateDatabase , and ReorganizeTableStatement classes to
updated the handling of mismatched build rules and improved error messaging in ActionGraphCache . java to enhance clarity and accuracy of error reporting
added LockDatabaseDesc and UnlockDatabaseDesc classes for managing database operations to provide detailed information for locking and unlocking databases in the Hive query plan
updated ` RankingTopComponent ` , ` RankingUIModel ` , and ` RankingToolbar ` to use setter methods
added handling for disconnect messages and updated logging in HandshakeHandler . java and NodeImpl . java to improve connection management and provide clearer debugging information
added a test for setting and deleting storage groups in IoTDBAuthorizationIT . java and implemented the delete privilege in AuthorityChecker . java to
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added validation for variable declarations and improved method calls in Assertions and FindMissingTypes classes to enhance type checking capabilities and ensure correct handling of
added ` afterTestClass ` and ` beforeTestClass ` methods to ` StepScopeTestExecutionListener ` to ensure test context is properly managed
[ java ] update countermanager to use utf - 8 encoding for metadata .
updated ` toString ( ) ` methods in ` MultiSteps ` and ` SendEmail ` classes to remove unnecessary ` toString ( ) ` calls to
added null check and cloning for joinKeys in JoinDesc . java to ensure joinKeys can only be modified if it is not null to
added a default PrincipalResolver to the authentication handler registration to enhance flexibility by allowing customizable principal resolution
added support for additional search paths in the ` addSettingsFromFile ` method and updated related tests in ` XcconfigParserTest ` to enhance
added ' final ' modifier to several fields in Oracle . java to enforce immutability and prevent unintended modifications
[ hotfix ] [ checkpointing ] exclude unaligned checkpointing from execution
[ hotfix ] [ sql - client ] make unsupportedoperationvisitor valid for query parser
make the compiletheworld test more verbose ( graal - 495 )
added a check to ensure that lValue is an instance of LocalVariable before throwing a CannotDelambaException to prevent runtime exceptions related to
added support for MySQL in CreateTableGenerator to handle timestamp columns to ensure proper handling of timestamp data types in the database
added class loader management and context class loader setting in EnvConfiguration . java to ensure proper context class loader management and prevent potential memory leaks
added a condition to set the ejection delay for the motor when the stage is 0 to ensure that the ejection delay is set correctly for
updated methods in SpringApplicationTests to use BeanDefinitionOrderRunnerConfig instead of FunctionalRunnerConfig to improve clarity and maintainability of the
updated import statements in TransactionUtil2 . java to improve code clarity and maintainability
updated the issuer handling in token signing and encryption services to use an Optional < OAuthRegisteredService > instead of a JWTClaimsSet to enhance the
added null check for the document collection before returning its string representation to avoid potential NullPointerExceptions and provide clearer error messages when the collection is null
updated method call from ` getStyle ( ) ` to ` getAllStyles ( ) ` in ` TextArea . java ` to ensure the correct style
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance the functionality and flexibility of foreign key column management
[ java ] throw a warning when a follower try to notify a leader fails to join catchup and live .
refactor ` shadowOf ` method to ` shadow . extract ` in ` ShadowActivity ` and ` ShadowBluetoothDevice ` to improve code
added a check for null or empty root in FileSelection . java and improved path handling in TestBugFixes . java to enhance error
deprecate iforgeryitem . oninventorytick , use iforgeryitemstack . inventorytick instead
fix : add support for war resource in ioutil . getextension ( )
added a null check before invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when theherlock activity is not initialized
updated widget binding logic in AppsCustomizePagedView and Launcher classes to handle null options to improve robustness of widget binding by
added new capability constants and their values in EcobeeSensorThingHandler . java to support handling of air pressure , quality , and co2
fix possible npe in operationsetserverstoredcontactinfofacebookimpl when try to get the profile page .
added environment variable " AAPT " and " AAPT2 " to Genrule . java and updated tests in GenruleTest . java to
only dump access table if truffleinstrumentbranches . value be set .
added null check before disposing the message to prevent potential NullPointerException when disposing the message
changed the access modifier of the ` db ` variable and added a new ` initCache ( ) ` method in ` TronStoreWithRev
updated warning messages for unimplemented log4j and improved message formatting for SLF4J version to clarify that LogWatcher is
replaced printStackTrace calls with fail methods for cloning failures in CategoryPlotTests . java to improve error handling by providing a clearer failure message
updated phone number dialing and introduced a new SmallByteArrayOutputStream for byte array handling to improve null safety and provide a clearer output stream
* fix shader attribute access to use intmap instead of hashmap for good performance
changed the connection string from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java
fix npe when get first / last exchange completed timestamp from route mbean .
updated language handling in TestHtmlTag and added new output checks in TestUseOption to ensure correct handling of language options and improve test coverage for
added a condition to check if the completion result is not incomplete before proceeding to ensure that the completion process does not proceed if there is more
added a new parameter ` timeColumnName ` to the ` HybridClusterIntegrationTestCommandLineRunner ` class and updated the usage message accordingly to improve
pdfbox - 2852 : add support for svg . html extension , a suggest by valerybokov
changed the condition from checking if ` isQsbEnable ` to checking if ` minQsbMargin ` exceeds ` hotseatBarBottom
added equals and hashCode methods to AnimationList and modified equality checks in SceneKey and GltfModelKey to improve object comparison and ensure consistent
added date handling functionality to AbstractGenerator and updated HttpGenerator to utilize it to enhance date management capabilities and improve code clarity in response handling
replace Adler32 with CRC32 in Store . java to optimize memory usage by using a more efficient CRC32 implementation
server : set xen . heartbeat . interval to null when implement xenserver self fencing
added a new ` ZERO _ AREA _ FIN ` warning and updated related checks in ` FinSetCalc . java ` to enhance geometry warnings
refactor Elasticsearch serialization to use Jackson for DocumentMetadata to improve JSON serialization compatibility across different backend versions
hhh - 14619 add support for trunc ( ) and date _ trunc ( ) on oracle
added error handling for memory pool not found errors in MetricUtils . java and updated test cases in MetricUtilsTest . java to improve robustness
added a boolean parameter ` useJavaScript ` to the ` UserContext . ensureSignedUp ` method calls and modified return statements in multiple classes to
updated error messages to use ` RUNTIME _ PROTOTYPE _ TYPE . classNameWithEnclosingNames ( ) ` instead of ` @ Config
[ te ] change backfill from / generateanomaliesinrange to / replay ( # 4358 )
replaced instances of ` new DataWord ( ) . getData ( ) ` with ` new DataWord ( 1 ) . getData ( ) `
refactor app notification logic in AllAppsContainerView . java to improve readability and maintainability of the code to enhance code clarity and
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated context start methods in ResourceService , ResourceHandlerTest , and ServletContextHandler classes to correct behavior to ensure proper handling of context handlers after the
removed conditional check for WORKSPACE _ CUSTOM in Cling . java to simplify drawing logic for better readability and maintainability
remove assert that lookupmodule be not null .
updated the test method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to ` shadowInvocationWhenChildIs
updated import statements in multiple demo files to reflect the correct version of ItBit to ensure compatibility with the latest version of the ItBit API
ww - 3560 fix for npe in profile activation interceptor
changed class declarations from public to public final for Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes to enforce immutability and
server : fix resource leak in listuseraccount api ( # 4669 )
updated type handling in Util . java to use " java . util . Vector " and " java . util . Hashtable " instead of " o
added the table type to the warning log for invalid retention time to improve log clarity by including the table type in the warning message
added trimming to the length check of the fragment list in QueryExecutorImpl . java to ensure that the first element of the fragment list is
fix modfileresourcepack . getmodfilepath ( ) not return the file path . close # 3812
updated variable names and refactored transformer builder handling in PartitionToolbar . java to improve code clarity and maintainability by using more descriptive
modified conditional logic in RecentsView . java to include a check for task view focus and visibility to improve task view handling and ensure proper
refactored the calculate method in CalculatorEndpoint and CalculatorRestEndpoint to return BMIViewObject instead of Map to simplify the method
removed the Comparator dependency from the thenComparing method in QueryCommand . java to simplify the comparison logic and improve code readability
fix hay bale ' s damage when it should n ' t damage it ' s in the world . close #
use openj9 _ java _ command _ line instead of ibm _ java _ command _ line if it exist in the environment
added support for custom plugin properties in OptionsParser and corresponding tests in OptionsParserTest to enhance the flexibility of plugin configuration options and ensure proper
update condition to check if hashTable is not empty instead of null to improve null safety and avoid potential NullPointerExceptions
updated timestamp handling in ` Timestamp . java ` and refactored test methods in ` TimestampTest . java ` to improve test clarity and
[ java ] do n ' t use archive context in clustered service agent when create archive .
added a condition to check if the compilation is not active before proceeding to ensure that the compilation process does not proceed if the method is not
[ geot - 6892 ] add test for image mosaic join feature ( # 3751 )
added a listener for property changes and refactored related methods in TogglableFlag . java , LauncherAppState . java ,
updated logging statements to include placeholders for error messages to improve clarity and consistency in error reporting
added a condition to skip processing for Android in SnapshotScreenListener . java to avoid unnecessary processing for non - Android platforms
updated assertions in RoutesTest to use assertThat for better readability to improve test clarity and maintainability by using hamcrest matchers
added new functional interfaces BytePredicate , ByteToLongFunction , FloatToLongFunction , and ShortPredicate for byte , float , and short data types to
updated getSubsColor method to return a String instead of an int and improved logging for bitrate limit configuration to enhance flexibility in handling
added a conditional check before deregistering the invocation in the Invocation class to ensure that the invocation is only deregistered when the future is complete to
replaced the manual output handling with a direct output method in AbstractWebSocketConnection to simplify the code and improve readability by eliminating unnecessary
updated LoginActivity and SignupActivity to handle intent extras in LoginActivity and add a redirect flag to SignupActivity to improve user experience by
added a new ShadowCheckedTextView class to handle checked text functionality in Robolectric to enhance testing capabilities for CheckedTextView in the
added Serializable interface to ParserState and made these fields transient in AccessorProperty and Property classes to ensure proper serialization of ParserState and maintain transient
added " identrustdstx3 [ jdk ] " to the VerifyCACerts class to support certificate verification for the IDentr
removed redundant assignment of TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline code by eliminating unnecessary
fix miss nick in occupant message . smack - 103
updated QuicSession and QuicConnection classes to accept a new context parameter instead of a volatile reference to improve flexibility and maintainability of
updated MergeScheduler , MergePolicy , and max field length settings from writer to writer . getConfig ( ) in CreateIndexTask . java to ensure
refactor character handling and variable names in ICU4JImpl and TextPosition classes for clarity and consistency to improve code readability and maintain
added imports for ComputedDateValue and ComputedNumericValue and refactored exception handling in AddDefaultValueChange . java and AbstractDatabase .
refactor NbtScoreboardIoService to improve code organization to enhance maintainability and readability of the code
updated SAML2Configuration , SAML2FileSystemMetadataGenerator , SAML2ServiceProviderMetadataResolver , and SAML2ServiceProviderMetadataResolverTest to improve metadata handling
changed the visibility of the ` printer ` variable from private to protected and refactored the ` createPrinter ` method into a separate method to
added calculation of field cash amount and order average price in HuobiAdapters . java to ensure accurate price representation for orders
updated field handling in ProjectionOperation and TypeBasedAggregationOperationContext to use the target field instead of the name to ensure correct mapping of fields based
modified player connection handling in FakePlayer . java to check for existing viewers before sending a new packet to improve efficiency by avoiding unnecessary player
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve memory efficiency and state management during drawable operations
refactor SPDYConnection initialization to use a session controller instead of a connection to improve clarity and maintainability of the connection handling logic
fix protostuffobjectoutput . writeobject ( null ) and add test
pdfbox - 4892 : improve javadoc , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future updates
ggb - 1343 do n ' t show / hide x / y axis when view . showaxes be false .
replaced setFilter and setWrap methods with unsafeSetFilter and unsafeSetWrap methods to enhance performance by optimizing filter and wrap settings
removed unnecessary whitespace in XmlWorkflowServiceImpl . java to improve code readability and maintain consistency
added SSL trust management and verification functionality in CustomUrlJob . java and created CustomUrlTrustEverything . java for SSL connections to enhance security
refactor clock rate handling in EncodingConfigurationTableModel and MediaStreamStatsImpl to use getRealUsedClockRateString method to improve clarity and
updated TextureAtlas . java file to improve texture rendering functionality
updated method to return the module name instead of the product name in ProjectGenerator and added a method to set the module name in AppleLibrary
[ hotfix ] [ runtime ] fix testslot . testreleaseinternal to ensure thread safety .
# 1181 - enh : add sqltreebuilder . findids ( ) ... for id _ list query with inheritance
updated WebSocket response header assertion and refactored byte buffer handling in WebSocketServletRFCTest . java to improve response clarity and ensure proper
[ wasm ] fix a bug that could cause a stack overflow in wasmfunctionnode . pushreference .
[ type : refactor ] add ttl option to log collection ( # 3555 )
updated serialization type in CustomChangeWrapper , CustomPreconditionWrapper , and XMLChangeLogSerializer to use NAMED _ FIELD instead of NEST
updated import statements and added server setup and teardown methods in DeploymentExceptionTest . java to improve test setup and teardown for better resource management during tests
added error handling and improved Fresco initialization in CommonsApplication and NearbyController to enhance robustness and prevent application crashes
modify the return statement to conditionally trim the objectName if it is not null and not empty to enhance robustness by preventing potential null or
updated exception message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve
[ hotfix ] [ table - planner ] introduce constant for planner and executor factory in environmentsettings .
updated variable names and improved null handling in KeyTool . java and Resources . java to enhance code readability and prevent potential null pointer exceptions
added a deprecated annotation to RuntimeOptions . java to indicate that the class is outdated and should no longer be used
replaced ByteBuffer encoding with direct byte retrieval from a string to simplify code and improve performance by eliminating unnecessary byte buffer management
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a mechanism for evaluating permission
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader ` and modified ` LineReaderImpl ` to
hbase - 25836 masterfilesystem . getmasterinfo ( ) should return null for non - online server ( # 3210 )
updated exception types from CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR in P2pException and
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4662 .
improve error handling in defaulthttpclient , fullnettyclienthttpresponse , and httpclientresponse . decode ( ) method .
updated container initialization from BorderLayout . center to BorderLayout . centerAbsolute to ensure the container aligns with the absolute positioning of the spinner
[ hotfix ] [ runtime ] fix npe in networkbufferpool . requestmemorysegments
refactor MBeanServer handling in TestJmxIntegration . java to ensure proper release of the MBeanServer when it is null
replaced JUnit4 runner with RetryTestRule in AbstractIT . java to utilize RetryTestRule for improved test reliability
use transactionmanager . isautocommit ( ) instead of a boolean in calltask and querystatemachine . isautocommit ( ) ( #
add package - info . java for test case and add license header .
added support for both ` javax . net . ssl . DistinguishedNameParser ` and ` javax . microedition . khron
[ hotfix ] [ test ] remove unchecked compiler warning in streamtasktestharness
updated request handling logic to return null if _ uri is null and HTTP method is CONNECT to improve robustness of URI retrieval and ensure correct authority
updated the storage point retrieval methods in MainApp and WhatsNewActivity to use legacy available storage points to ensure compatibility with newer Android versions and
added methods to handle session availability and unavailability in the SessionManager class to improve session management functionality for better user feedback
added a method to add a package to the scan for " liquibase . pro " to facilitate package scanning for the
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in the ` MainApp ` and ` SyncedFolderProvider
updated the ` loadWithNewGlobal ` method to accept an additional ` Object [ ] ` parameter to enhance functionality by allowing more flexible argument
refactor FastPathResolver to use a separate startIdx variable for region matching to improve code readability and maintainability by reducing duplication
replaced calls to ` ( Slice ) footer . length ( ) ` with ` ( Slice ) stream . getRetainedSize ( ) `
renamed ` hasRandomizedType ` and ` isExceedRandomizationDepth ` methods to ` hasAlreadyRandomizedType ` and ` hasExceeded
added support for the LEAD and LAG functions in UnsupportedOperatorsVisitor . java and created a corresponding test case in TestWindowFrame . java
clear proxy request headers in AbstractProxyServlet to ensure proxyRequest headers are reset before processing new requests
added a check for SA attach in CompressedClassSpaceSizeInJmapHeap . java to ensure tests are skipped if SA attach is not
added null check for bgColor before evaluating its alpha value in GraphicsDevice . java and created TranslucentWindow . java for testing window transl
added null checks for userInfo and improved error message handling in UserInfoActivity to enhance user information validation and provide clearer feedback when no information is
added serialization support for precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers can be used on different machine to avoid
[ flink - 16400 ] [ table - planner - blink ] support append update mode in kafkatablesinkfactory
added a new test class ` MultipleOutputsIntegrationTest ` to validate functionality of named output groups in the build process to ensure that named output groups
updated regex pattern in FileSettings . java to handle newline characters correctly to ensure consistent formatting of content after changes in settings
nifi - 1343 : ensure that variable value be provide via json in statelessflow configuration
replaced instances of ` new Object [ ] ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java
added a taskbar mode switch for persistent storage in TaplTestsQuickstep . java to enhance taskbar management for better performance
added new device status entries for " leaving - dock " and " energy - save - mode " in DeviceStatus . java to enhance device status
improve error message when item model can not be load .
removed unused imports and added the @ Ignore annotation in KrakenFuturesStreamingPublicDataTest . java to mark the test as ignored due to
pixeldensity ( opengl ) : return 1 on non - 2x graphics
refactor RussianLowerCaseFilter to improve code readability to enhance maintainability and facilitate future updates
refactor server and client properties handling in CsvBulkLoadToolIT and QueryUtil to simplify configuration retrieval to improve code readability and maintainability by
replace ` File . separatorChar ` with ` File . pathSeparatorChar ` in ` FileDisplayActivity . java ` to ensure consistent file separator
* fixed bug in wavloader that cause the wav file to be seek to the start of the stream .
added a flag to repeat the first line indentation in ColumnText . java to improve indentation handling based on user preferences
cast the oid to Object before comparing it to ensure type safety by explicitly casting the oid to the correct type
update hikaripool . initconnection ( ) to be consistent with hikaripool . initmetricregistry ( ) ( #
loopex : fix controlflowanchornode to controlflowanchored .
added focus painting behavior to buttons in WindowsPlacesBar to improve the visual appearance of the button elements
added support for UniqueConstraint in the backing index handling in DatabaseSnapshot . java to ensure proper handling of cases where there is no backing index (
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and a new API endpoint ` getAccountLedgers
( scott phillips ) add check that dc . title be present in the group metadata .
added a check for empty words before returning the next Utterance in GapInsertionDetector . java to improve robustness by preventing
added unit test base on user forum issue
updated thread count from background threads to database update threads in FeedRefreshUpdater and added corresponding getter and setter methods in ApplicationSettings to improve thread management
increased FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 milliseconds in RecyclerViewFastScroller . java to improve scrolling
updated the system class name to use " Ljava / lang / System " instead of converting it to an internal name to ensure compatibility with the
hhh - 13644 - provide a way to retrieve the result stream from the procedure call .
updated the initialization of the APIProperties map to handle potential null values to ensure that the APIProperties map is initialized only when it is not null
added BinaryFrameGenerator and TextFrameGenerator classes to handle WebSocket binary and text frames to enhance WebSocket frame processing capabilities in the application
danielwagnerhall : use ` ` until ' ' instead of ` ` find ' ' to check for page presence .
updated random coordinate calculations for lat and lon in RandomGeo3dShapeGenerator . java to improve accuracy in generating shape coordinates
added a keepAlive method to manage ClassLoader references to prevent garbage collection of ClassLoader instances
changed the return value from false to true in the SQLiteDatabase class to enable the operation of a specific condition
findjsr166lockmonitorenter ignore util concurrent sig if it start with ` ` ljava / util / concurrent / '
added MkdirStep to multiple classes and updated assertions in FatBinaryTest to ensure proper directory creation for output files and improve test coverage
refactor error handling in MeshLeveler . java to include error message formatting to improve debugging by providing clearer context for illegal argument exceptions
[ drools - 725 ] skip kie - pmml parsing and compilation if there be no jpmml library available on the classpath
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure accurate tracking of the thermal status during power shutdown
added a conditional check for the OS before creating a temporary directory in MountableFile . java to ensure temporary directories are only created on macOS
do n ' t write memory map buffer on window if it do n ' t support it
added a null check for the organization in the pom . xml file to ensure that Plugis are required to have an organization in the pom
updated contributor license agreements in SepPostingsWriterImpl . java to ensure proper handling of contributor license agreements
deleted the TerminateWebSessionListener . java file to remove unused listener implementation to streamline the codebase
updated the method to execute a child process by using the system property ` java . class . path ` instead of an empty string to allow for
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv ,
added a test to verify that Javadoc is not changed in the AddLicenseHeaderTest class to address issue # 3198 by ensuring Javadoc changes are
changed the LAUNCHER3 _ PHYSICS flag from false to true in FeatureFlags . java to enable the launcher3
added a " < div class = ' noPrint ' > " element to the HtmlThreadInformationsReport to improve the display of thread information
updated the main version of Lucene from 3.1 to 4.0 and changed the test version from LUCENE _ 31 to
added symbolicator and task handles to BsdDebuggerLocal and updated platform check in PlatformInfo to support both MacOS X and MacOS X
use weakreferences to avoid memory leak in fml client .
add debug log for connection reset by peer in networkdispatcher .
[ java ] initialize conductor by default if it ' s null to avoid potential npe .
added a break statement in the TouchImageView . java file to terminate a switch statement when a switch is encountered
chore ( regen ) : regenerate with update license year
simplified the flush operation in FeedableBodyGenerator by removing the SSL handshake listener to streamline the code by eliminating unnecessary handshake
added conditions to check if a Java type is assignable to a specified bound in TypeUtils . java to ensure proper handling of specific Java type constraints
replace NonBlockingHashSet with ConcurrentSkipListSet in ColumnFamilyStore . java to improve performance and reduce memory overhead during flushing
added null check for errs before calling memberEnter and updated error handling logic in JavaCompiler , Erroneous , and TestParseErrors classes to
changed the background style of the browser from SWT . NO _ BACKGROUND to SWT . NONE to improve the visual appearance by using a
replaced ` finish ( ) ` method with ` dialog . cancel ( ) ` in the ` AboutActivity ` to ensure proper cancellation of
modified the calculation of newLowerBound and newUpperBound in IntegerStamp . java and added a new test method in IntegerStampTest . java to ensure
added a method to read a stream from an InputStream and updated the Image instantiation to use this new method to improve code readability and facil
added variable declaration handling in CaseStmtToken and updated related classes to improve variable management and scope handling in the code
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions during the handshake process
added " psapi . lib " to the additional dependencies in WinGammaPlatformVC10 . java to ensure compatibility with the new library structure
updated StringUtils and StringUtilsTest to use the system - dependent line separator to ensure consistent line endings across different operating systems
added versioning and encoding settings in TemplateEngineFreemarker and updated maliciousJavascript to handle special characters to ensure proper rendering of
replace ByteArrayInputStream with a direct byte array conversion in CRDGeneratorTest . java to simplify code and improve readability by eliminating unnecessary byte
bug 60564 - make ` ` hold _ samples ' ' and ` ` mode ' ' configurable
added a null check for the " testngEmailableReporter " system property before adding it to the EmailableReporter to avoid potential NullPointerExceptions
added quote quoting logic in CommandLineBuilder and updated test assertions in CommandLineBuilderTest to ensure proper handling of quote characters and improve test coverage for quoting
removed public access modifier from multiple interfaces and classes in Clock , DelegatingGauge , MetricProducer , and VendorDefined to enhance encapsulation and
added a line to set the number of reduce tasks in FreeGenerator . java to allow dynamic configuration of reduce tasks based on the number of fetch
refactor object field value retrieval into a separate method for clarity to improve code readability and maintainability by reducing duplication
updated FILEVERSION from " 505365 " to " 532077 " in SaveService . java to reflect the new version of the
added support for both OES _ texture _ float and GL _ ARB _ texture _ float extensions in FloatTextureData . java to ensure
update version to 2.1 . 20050211 and add write ( ) and closefile ( ) method .
updated output directory initialization to check if ` outputDirectory ` is null and ` jarStream ` is null before setting it to ensure that the output directory
added performance measurement using PerfStatsCollector in ShadowSQLiteConnection to enhance performance tracking for SQL operations
updated JDK tool references from ` getCurrentJDKTool ` to ` getTestJDKTool ` in multiple files to ensure compatibility with the new test
add a new enum resourceerrorhandling to handle resource - related error .
added a condition to check if the position does not exceed the buffer size and introduced a test for EOFException in TestRAMDirectory to ensure proper
updated error handling in DefaultServlet and JspServlet to include localization for missing resources to improve user experience by providing context - sensitive error messages for missing
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class for permission testing
updated CHECK _ EVERY _ N constant and modified checkFreeMem ( ) logic in Caches . java to improve memory management checks and enhance
hbase - 26946 testsplittransaction . testsplitdaughter fail on hudson ( addendum )
added null check for currentSelectionArea and improved code formatting in CompatibilityEngine . java to enhance robustness by preventing potential NullPointerException
added a new test method for JaasDemo in DemoModulesTests . java to verify the functionality of Jetty ' s Jaas demo
added span checks to the folder creation logic in CellLayout . java to ensure proper spacing when spanX and spanY are equal to 1
updated CacheOffHeap class implementation to improve performance and reduce memory usage
create table depend on another table with a higher id , prevent the database from be re - opened
added height check before parsing XML gid values in TiledLoader . java to ensure extra XML gid values are ignored and avoid corrupt maps
inmemorytilecache : synchronize setworkingset to avoid concurrentmodificationexception
added a new Java class to calculate and print the minimum and maximum steps of a given number to implement functionality for determining stone boundaries based on
added a new interface ` AddressChecker ` and modified ` TrackerRequestProcessor ` to use it for checking bad addresses to improve address validation by
fix translucent model render bug ( # 6323 )
added a method to remove specific tags from the tool tip in GuiConfigEntries . java to improve the clarity of configuration element comments by
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType . java ` , and updated its
added null check for recieptents before mailing and updated time retrieval methods to use milliseconds instead of seconds to ensure accurate time representation and
refactor code to use a private method ` isSingle ` for clarity to improve readability and maintainability of the code
updated DockerClientFactory to accept a failFast parameter for fast client pinging and improved logging in RemoteDockerImage to enhance client reliability
added a resourcesMode parameter to the AndroidMetadata constructor and updated the perfStatsCollector to include it to enhance metadata tracking by including resource modes for
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 579 : truncate
replaced ` importProject ` with ` importProjectCore ` in ` OpenAndroidModule . java ` to utilize the core import method for
added handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting and provide clearer usage information
refactor TreeMap class implementation to improve performance and maintainability of the code
added methods to enable and disable asynchronous stack traces in Display . java and updated EdtException handling in Display . java to improve stack trace management
added a method to set the glow color in BubbleTextView and updated Folder to use this new method to allow customization of the
added styling classes for link and description in LinkedFilesEditor . java to improve the visual appearance and consistency of link and description elements
added a new table and a test for class matching in ResultSetMetaDataTest . java and AbstractJdbc2ResultSetMetaData . java to ensure correct retrieval
removed unnecessary IOUtils . deleteFilesIgnoringExceptions call in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify file deletion process and
added null check for the _ info object before checking its status in HttpConnection . java to prevent potential NullPointerException when accessing the _ info object
added a constructor to ShadowLocation that accepts a provider string to provide a way to initialize ShadowLocation with a specific provider value
added a condition to check if deviceRam exceeds 2048 when determining maxRAM to accommodate larger ram limits for 32 - bit devices
add miss localmapstatsclients to empty _ local _ map _ stats when no data be present
added logging functionality to FileProfileActivator by implementing LogEnabled and adding logging for file existence , missing , and no file specified to enhance debugging
update the parameter in the addToBody method from " noname1234 " to " invalid _ " name to improve clarity by using a more
changed ` collect ( Collectors . toList ( ) ) ` to ` collect ( Collectors . toSet ( ) ) ` for role collection to ensure
updated the return value in ExpandableUploadListAdapter from - 1 to 1 and modified the array length check from 30 to MAX _ NUM _
added assertions to verify the delete method in the DashboardUserMapperTest class to ensure that the delete method correctly handles the expected results of the delete
update parameter name from ' giver ' to ' primary ' in instructorfeedbackresultspagedata . java
sulong : implement deref handle handling in the llvmpointerstorenode .
added a method to retrieve the buffer size in BufferedIndexOutput to provide access to the buffer size for external use
feat : add -- headless to the terasology command help help message
updated action bar title handling and added notification functionality in DrawerActivity . java to improve user interface responsiveness and manage interactions more effectively
refactor CommandLineParserTest to improve test coverage to enhance reliability of command line parsing functionality
added interpolator settings for all apps animation in QuickstepAtomicAnimationFactory and modified visibility of all apps in PortraitStatesTouchController to
refactor method to use ` javaNameFromExternal ` instead of ` Character : : toUpperCase ` for better clarity to improve code readability
removed unused native methods from CWrapper . java to improve code cleanliness and reduce unnecessary dependencies
added constant value checks in the Checker . java file and created a new ValueTest . java file to ensure correct handling of constant values and improve
updated test files for MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen to improve test coverage and ensure correct
removed null check for constructors in PojoUtils . java to simplify the code by eliminating unnecessary checks
refactor JiraConfiguration class for improved clarity to enhance maintainability and readability of the code
updated string formatting from " [ FAILED ] " to " ( COVERAGE ) " in UploadBuild . java to improve clarity of error
updated bounds settings in DeviceProfile . java to include search bar offset to improve layout responsiveness by accounting for search bar positioning
corrected spelling of " IOException " and improved logging messages in PulseAudioAudioSource , PulseaudioClient , and Pulse
refactor activity starting logic to run on the UI thread in OverviewCommandHelper . java to ensure that tasks are executed on the UI thread
removed the method ` getSourceGroupOptional ( ) ` and its usage from ` AppleSource . java ` to simplify the code by elimin
increased the timeout duration for trigger firing from 22 seconds to 32 seconds in TestSimTriggerIntegration . java to allow more time for the
updated variable names from ` outputPositionCount ` to ` positionCount ` in ` FloatSelectiveStreamReader . java ` to improve code clarity
improve performance of node cost search ( # 2175 )
added a conditional check to skip processing for specific UI components in ResourceEditorView . java to ensure that only Form and Dialog components are processed to
replaced ` UiThreadHelper ` with ` LauncherModel ` for background thread handling in ` DragView ` and ` FloatingIconView
added a null check for commitPoint and set it to the latest commit if it is null to ensure that a valid commitPoint is used for
added tests for IMEI and MEID retrieval in ShadowTelephonyManagerTest and implemented related methods in ShadowTelephonyManager to
added debug request entity handling in SimpleHostRoutingFilter . java to improve debugging capabilities for HTTP requests
added the ` destory ( ) ` method to multiple classes and implemented the ` close ( ) ` method in ` BitmapInvertedIndex `
[ rip - 10 ] fix the test failure of normalmessagensendandrecvit and statictopicit ( # 10 )
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 26967 bulkload should n ' t crash if a multi - hfile do n ' t exist in the table (
added a commission parameter to DefaultWithdrawFundsParams and updated its usage in RippleWithdrawFundsParams to allow users to
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to improve code clarity and reduce unnecessary dependencies
solr - 1745 : catch all exception in morphline loader , not just solr - 1746
added a check for abstract overloaded methods and improved method parameter handling in Java2TypeScriptTranslator . java to ensure proper method invocation and
added StacklessLogging to manage disk sweeping in TestFileSessions . java to improve logging capabilities for better debugging and resource management
updated ` MutableColumnDataType ` and ` SqlDataType ` to implement ` Serializable ` and improved entity management in ` Entities ` to enhance serialization
updated test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a check for null claimRequestString before parsing it in ConnectOAuth2RequestFactory . java to avoid potential NullPointerExceptions when claimRequestString
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and maintainability of the rule
updated the type hint processing logic in UpdateMapper and added unit tests for null values to ensure correct handling of null values for various data types and
replaced ` CoreAdminResponse ` with ` CoreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and added a
initialize transformers and locators lists with new ArrayList instances to ensure that the lists are properly initialized before use
no effective change - improve error message for illegal inits
[ gr - 38686 ] pegraphdecoder : improve the decoding of method call stack .
updated method names from ` setOf ` to ` copiedSetOf ` for clarity and consistency to improve code readability and maintainability by
( chore ) camel - mail : remove dump of mailmessage
fix for http : / / issues . apache . org / activemq / browse / amq - 2698 - avoid npe
added setIsPropertyName ( ) method to getIdentifierName ( ) to ensure that the identifier name ' s property name is set correctly during parsing
move wave generator activity to main activity , instead of toast
added logging functionality and improved null checks in KeyedProperties . java and SheetOverlaysManager . java to enhance error handling and prevent potential
added unit tests for logging and exec functionality in PodIT . java to ensure proper functionality of pod logging and execution in the client
added a test method ` testNoWriter ` to the ` TestReplicationHandler ` class to verify that no index is detected and create a new
add miss call to super . dispatchmethodkernelokra ( range , args ) in graalkerneltester
updated DnsClient , MxRecord , and DefaultMxRecord classes to implement a Comparable interface and updated record sorting logic to enhance type safety and
refactor thread creation in XToolkit to use a privileged action for improved encapsulation to enhance code clarity and maintainability by
added validation ( ) method in SelectBox . java and set the dropdown selected to " Linux6 " in UITest . java to ensure
replace IllegalStateException with printStackTrace in JobGlobalListener . java to improve error handling by providing stack trace information
added support for a parent split state in the FlowBuilder and SplitState classes to improve flow management and state management during aggregation
changed connectionState variable to be volatile and updated its usage in the return statement to ensure thread safety and improve connection state management
increased the default polling period from 10 to 1000 in AbstractPollingEndpoint and added integration tests for PollingConsumer and PeriodicTrigger to
refactor memory handling in MemoryStack and MemoryUtil to use local variables instead of malloc calls to improve performance and readability by reducing
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error reporting and
[ java ] unusedmodifier - fix false positive with enum
refactor lambda expressions to use method reference syntax for clarity to improve code readability and reduce boilerplate
added a parameter name " ssl " to the AbstractHttpClientServerTest parameters to provide more context for testing SSL connections
[ scb - 2687 ] fix illegalformatexception in transformationhelper ( # 2687 )
updated user permission retrieval from ` getUserPermissions ( ) ` to ` getActiveConnectionPermissions ( ) ` in ` ActiveConnectionRESTService . java `
replaced direct equality checks with Apache Commons Lang ' s EqualsBuilder in the Point class to improve code readability and maintainability
modified the process method to handle null outputRoot case to improve robustness by preventing potential NullPointerExceptions
pdfbox - 4892 : add annotationfilter interface , a suggest by valerybokov
updated StackTraceCleaner . java file to improve stack trace handling functionality
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure proper content type is set for both CSS and JavaScript files based
hhh - 14850 skip test on some dialect that do n ' t support query literal
updated the ` upgrade ` method to use ` slotSize ` instead of ` slot ` and added null checks for the ` stats ` array to
added a new ` getStats ( ) ` method to multiple classes and modified ` docCount ` and ` deletedDocCount ` to ` AtomicLong
added long polling functionality to the KieClient and KieConfig classes to enhance performance by controlling polling behavior based on configuration settings
replaced gesture handling methods in PagedView and BaseOverview with a new scroll method in LauncherInstrumentation to improve gesture responsiveness
replaced the existing unlocks dialog instantiation in UI . java and added a button to the PausedDialog . java to streamline the unlock
added a line to clear the drop list in the PlayerEventListener to ensure the event drops are properly initialized before processing
added a DEFAULT _ PARAM constant with a value of " inputName " in StreamResult . java to provide a default parameter for input handling
updated the ` testNormalizeOrder ` method to throw ` IOException ` instead of ` MalformedURLException ` to improve error handling by explicitly defining the specific exception
updated the marker output format in TsFileSketchTool . java and adjusted the position in LocalTsFileInput . java to improve clarity of
added a filter to exclude specific Swift headers in UmbrellaHeader . java and updated tests in ProjectGeneratorTest . java to ensure that
renamed the method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java `
added encode ( ) method call to RequestPlugin . java to ensure proper encoding of request data
mondrian : fix ` ` float ( ... ) ' ' for ` ` count ( ... ) ' ' on db2 .
added validation for null or blank password in LdapAuthenticationProviderImpl and created corresponding test cases to ensure LDAP user authentication behaves correctly when a null
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear complexWriters if the conditional check fails to ensure that complexWriters is properly initialized before processing
added @ SuppressWarnings ( " serial " ) annotations to multiple Java files to suppress serialization warnings during compilation
changed the access modifier of ClassGraphClassLoader from public to package - private to restrict access to class loaders and improve null safety
added a check for " _ errors " and modified the return statement in ErrorResponseException . java to handle schema errors more effectively to improve error reporting
added a constructor to ` EventSourcingRepository ` that accepts an ` EventStore ` and ` SnapshotTriggerDefinition ` as parameters to ensure
refactor symbol handling logic for binary nodes in mmm Attr . java to improve clarity and maintainability of symbol definition and scope handling
updated SearchedPeopleCursorAdapter to handle space - separated screen names in cursor text to ensure accurate display of search results based on user input
removed the ` @ Nullable ` annotation from command handling in ` NuvoConnector ` and ` NuvoHandler ` to simplify command processing logic and
tmi - tiff : change default planar configuration from tiffextension . planarconfig _ planar to tiffbaseline . plan
added a call to close ( ) in ItemListTag . java to ensure proper resource management and prevent memory leaks
added a new class ` AverageUtil ` for tracking average values and refactored the ` updateEntity ` method across multiple classes to improve code
added two new files , SigInt . java and SigIntBarrier . java , implementing signal handling in the agrona concurrent package to
refactor graph handling to support hierarchical and dynamic edges to enhance functionality to support both hierarchical and dynamic edges in the graph model
refactor TCTLSeparatedProtocol to use Text for character encoding instead of byte array to improve compatibility and prevent potential memory leaks
[ # 7640 ] feedbackrubricresponsedetails : fix indexoutofboundsexception ( # 7641 )
updated condition in CatalogComparator to check for original case in CatalogAndSchema to ensure correct ordering based on schema and catalog cases
simonstewart : make the browsermobproxy test easy to understand
[ mng - 6892 ] fix string concatenation in modelrepositoryimpl . java ( # 6893 )
removed redundant calls to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline the code by eliminating unnecessary
refactor InternalByteArray and TruffleString classes to improve code organization and maintainability
[ hotfix ] [ graph ] use tuple2 instead of tuple3 in foreachedge
updated Java6 assertion classes for consistency in naming conventions to improve code readability and maintainability across the project
deleted the ` ClassA \ 314 \ 201 . java ` file and created a new ` DiacriticTest . java ` file
replaced CountDownLatch with CyclicBarrier for synchronization in ClusterMembershipTest . java to improve thread safety and allow for asynchronous execution of
added error handling and improved workspace reader initialization in DefaultMaven . java and DefaultGraphBuilder . java to enhance robustness and prevent potential
updated SSL scheme check and improved IP port retrieval in ServiceRegistryConfig . java ; modified assertions in TestServiceRegistryConfig . java to enhance
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed unnecessary whitespace in Jdbc3Connection constructor declaration to improve code readability and maintain consistency in formatting
added ` ensureInstance ( ) ` method to ` ServletHolder ` and removed synchronization from ` ensureInstance ( ) ` method to improve thread safety
added deltaServerTimeExpire field and modified related logic in BinanceExchange and BinanceBaseService classes to manage and retrieve the deltaServerTime
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " binding in Tomcat
added null check before deregistering the animated component form to prevent potential NullPointerException when the component form is not initialized
added options parameter to decodeResource and drawBitmap methods in ShadowBitmapFactory and ShadowCanvas to enhance bitmap decoding capabilities and improve drawing functionality
[ java ] use a constant for the number of message in the example .
added functionality to prevent next click events and refactored text handling in TimelineArrayAdapter to improve user interaction responsiveness and streamline
added " text " to the list of unmodifiable data types in PostgresDatabase and updated related conditions in NumberType to support additional data types and
re - enable entryprocessorbouncingnodetest due to issue # 3683
updated state checks from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` AmbariManagement
added null check for bridgeUid before adding the result to the inbox and improved exception handling in CreateBridgeServletTest to ensure robust handling of
synchonized access to robots validation and expiration logic in CrawlServer and PreconditionEnforcer classes to ensure thread safety when modifying robots and
added null check for display name before checking if it contains " Teredo " in multiple classes to prevent potential NullPointerException when checking for display name
updated the ` SpriteBatch ` constructor to accept a ` ShaderProgram ` parameter and refactored shader creation logic to improve flexibility
added synchronous commit option to the configuration in TestUtil . java to enable asynchronous processing during commit operations
added type coercing functionality for sorted sets using TypeCoercer to improve error handling for duplicate elements during type coercion
updated confirmation message handling for file and folder removal in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve user feedback based on file type and
added a limit on the length of the safe array in URLPathEncoder . java to ensure safe array access does not exceed the maximum length and
fix ( core ) : fix port issue in register fragment storage
removed unnecessary expect statement in HostResourceProviderTest . java to simplify test code and improve readability
[ hotfix ] remove unused logger parameter from yarnentrypointutils . loadconfiguration
refactor SIPCommFrame to use a separate init method for color and style initialization to improve code readability and maintainability by reducing
deleted the ShadowHtml . java file and updated HtmlTest . java to reflect this change to streamline the codebase by eliminating unused shadow
added a new file StarTreeRecordStoreFactoryBlackHoleImpl . java that implements the StarTreeRecordStoreFactory interface to provide a
updated JettyLogger instances to include " org . eclipse . jetty . http3 " , " org . eclipse . jetty
changed the access modifier of the addListeners method from private to public in MockSettingsImpl . java and added a test for listener validation in Mock
[ hotfix ] fix checkstyle violation in statehandlestore
updated import statements in HttpAuthMethodPriorityTest , HttpBasicAuthComponentConfiguredTest , and HttpBasicAuthTest classes to reflect the new package structure to
update student attribute to use constant instead of string ` ` None ' '
use try - with - resources to avoid resource leak
( chore ) camel - test - infra - camel1145 : fix port not available issue
added ` buildTarget ` as a parameter and refactored related methods for jar parameters to improve code clarity and maintainability by separating
corrected a typo in the link in TrustEverythingTrustManager . java to improve the clarity of the error message regarding peer certificate
api : remove ` ` getpagesizeval ( ) ' ' method from listcapacity and use ` ` setpagesize ' ' command
added handling for the CLOSED case in IteratingCallback to prevent further processing when the callback is closed
added a new boolean field ` isAuthorized ` and updated related methods in ` AccessControlContext ` , ` AccessController ` , and ` ProtectionDomain
added a check for ` AbstractOSGiApp ` before registering and sending the DEPLOYING _ EVENT to ensure that the OSGi
added a conditional check for " tiff " codec and container in DLNAMediaInfo . java to ensure correct MIME type is used
fix thread safety in optimizedcalltarget . profileargument ( )
added a new file ` CubocDesktop . java ` and refactored ` Cubocy . java ` and ` Map .
updated PolicyMonitor initialization to use the target directory instead of the test resource directory to ensure the PolicyMonitor uses the correct target directory for testing
added a call to removeAllFiles ( ) in TrashbinActivity to ensure that all files are removed to prevent memory leaks
replaced org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) with com . sun . jdi . Bootstrap . virtual
truffle / llvm : add checkglobalvariablestoragestorenode to be able to check global storage .
updated the ` createLauncherEvent ` method to include an additional ` Intent ` parameter and updated launch source data accordingly to enhance event data handling by
added a constant for the maximum burn factor and updated the return statement to use this constant to improve code readability and maintainability by using a
updated import statements and refactored the method for creating unique constraints in UniqueConstraintSnapshotGeneratorSnowflake . java to improve code clarity
modified the logic for generating the item string in DMLTransformer . java to handle cases where the statement builder is empty or null to improve cl
updated import statements and method signatures in ServiceValidateControllerTests . java to use wildcard imports and changed the parameter for the PGT URL to improve
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added a ` hideDefaultName ` method to handle default
refactor JarLauncher to improve code structure to enhance maintainability and readability of the codebase
updated generic types in BlockingQueue , RepeatInternalState , RepeatInternalStateSupport , RepeatTemplate , RepeatSynchronizationManager , RepeatInternalState , Repeat
added dimension parameter to DeviceConfiguration , modified return statement in OperationSetVideoTelephonyJabberImpl , and implemented sendHolePunch
added a test for updating a PostgreSQL object in ResultSetTest . java to ensure proper handling of PGobject data in ResultSet operations
added checks for empty email results before returning BAD _ REQUEST and CREATED in PasswordResetEndpoints . java to improve error handling and provide clearer response
updated the method of retrieving the properties element from the document to ensure accurate retrieval of the properties element from the document
refactor Cache class to improve cache management to enhance performance and maintainability of the cache implementation
change field name from timeInSec to timeMillis and prevTimeMillis in Isochrone and SPTResource classes to improve clarity and
added a check for valid light relay bindings and refactored the binding logic into a separate method to improve code readability and maintainability by
added a new ` Chainer ` class and modified ` CollectionSubject ` to use it for chaining items to improve the functionality of ` contains `
refactor Model class to improve readability to enhance maintainability and facilitate future updates
update recordedTime calculation to include a new value of 619315200000L to ensure accurate time tracking in the application
added a condition to resize the status if the terminal type is Windows to ensure proper display of status in non - Windows environments
updated log message formatting and added a conditional check before setting the host version state to improve clarity of log output and ensure the host version is
[ j2kt ] move the jre bundle deploy jar into integration test .
replaced instances of HashSet with LinkedHashSet in multiple classes to maintain the order of artifacts and settings during processing
simplified the assignment of the ` op ` variable by removing unnecessary exception handling to streamline code and improve readability by eliminating
reformatted the method call in KnativeEnvironment . java for improved readability to enhance code clarity and maintainability
corrected a typo in the executor name from " commitlog _ archiver " to " CommitLogArchiver . java " to ensure
added connection checks and upload tests for CloudSolrClient in TestCloudSolrClientConnections . java and TestCloudSolrClientUploads . java to ensure
breakpoint and debuggersession : fix synchronization issue
added methods to clear files and cache in ShadowContext and refactored file creation in RobolectricTestRunner to improve code organization and
added imports for LinkedHashSet and TreeMap in SecureXStream . java and updated test assertions in XStreamPersisterTest . java to ensure proper handling of
[ drools - 7 ] allow to pass a kiemodule to the kiemodulebuilder in kiehelper
added a check for Farmland instances in BlockEventListener to prevent dry operations on Farmland objects to improve data integrity by ensuring
added a default implementation of the ` getLocalIp ( ) ` method in the ` FinishedSpan ` interface to provide a default way to retrieve the
updated execution context handling and improved test cases in JdbcStepExecutionDao , AbstractStepExecutionDaoTests , and StatefulRetryStepFactoryBean
updated code calculations in ` AbstractDictionary ` , ` BigramDictionary ` , ` HHMMSegmenter ` , and ` WordDictionary ` classes
* fix build for tensorflow with cpython and mkldnn
added a refresh button to the PluginTab and refactored the plugin list retrieval logic to improve user experience by allowing the plugin list to be
changed logging level from info to warn for history file errors in DefaultHistory . java to better reflect the severity of errors encountered during history file reload
server : fix npe in vmwarestorageprocessor when vm be not in the data center
camel - sftp fixed the test failure of sftpservertestsupport
updated ExperimentalMockitoJUnitRunner . java file to improve code clarity and maintainability
updated serial handling in GpsSettingsActivity , Session , and HttpUrlLogger to utilize a new utility method to retrieve the build serial value
updated the SwapGBuffers class implementation to improve performance and maintainability of the code
animcontrol : fix potential npe in removeskeletoncontrol ( ) .
added support for setting smart replies in ShadowRanking to enhance testing capabilities for the Ranking class
[ java ] only list the first segment file in the archive if it do n ' t already exist .
updated the initialization of the carrot2ResourcesDir variable in CarrotClusteringEngine . java to ensure the correct resource directory is used for
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to ensure robust
updated the ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to reflect the latest
improve error message in recommendermapper , retriever and cachetest
added client information to the SurrogateAuthenticationEventListenerTests to ensure proper client context is used for test execution
added a new boolean variable ` isUserView ` and initialized it to ` false ` in ` CardPresenter . java ` to manage user view state
removed unnecessary imports and simplified method calls in GraphvizUtility and GraphvizJavaExecutorUtility to improve code readability and maintainability by reducing
added new histogram assignments for ` constructBatch ` and ` syncLogTimePerRequest ` in ` LogDispatcherThreadMetrics . java ` to improve
added a new module - info . java file for the SQLite connector to define module dependencies and exports for better modularization and organization
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper timing for stream reset operations
removed conditional check for " new " and " api " in the permissionsManager initialization to simplify the code for better readability and maintainability
refactor DateParser and TestDateParser classes for improved clarity to enhance code maintainability and readability
added a depth method to SpringLoadedState that returns a constant value of 0.5 to provide a default depth value for better state management
replaced manual array copying with a utility method for improved readability and performance to simplify code and enhance maintainability by using a dedicated minimum
[ hotfix ] fix checkstyle violation in executiongraph
remove notification from the activity and replace swipe layout with a reveal listener in NotificationRenderer to enhance user experience by allowing notifications to be read when
updated exception handling to return " none " for non - null invocation to improve clarity in exception messages when processing none
fix checkstyle issue in util / glowcontainer . java ( # 700 )
replaced MethodHandle usage with reflection for setting fields to improve compatibility with Java ' s reflection framework
replaced the use of ` uniqueResult ( ) ` with ` intValue ( ) ` for query results in ` MathTest . java ` to
replace StringUtils . join with direct string concatenation for metrics and datasets in BaseEmailContentFormatter . java to simplify code and improve readability by redu
added layoutProvidedPanel to manage a simple panel in LayoutPanel . java to enhance user interface by providing a layout - specific property sheet component
added a null check for the location object in the condition to avoid potential NullPointerExceptions when accessing the connection
add javadoc to pipeline and pipelinefactory to clarify usage .
added null check for key parameters in DSAPublicKey and simplified key usage in BasicChecker . java to improve error handling for missing key parameters and
refactor MediaTypeRequestMatcher logic to use a dedicated method for ignoring media types to improve code readability and maintainability by encapsulating the logic
updated task number handling in LlapBaseInputFormat to use the correct task number from the task attempt ID to improve clarity and accuracy of
updated the SpringBootTest annotation to include a properties property to allow bean definition overriding to enhance flexibility in test configuration
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
updated package names from ` service ` to ` btcmarkets ` in multiple Java files to improve organization and clarity of the BTCMark
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest . java ` to verify rendering behavior of code blocks
added a new file CompatibilityTest . java to test the compatibility of XML properties to ensure that the application correctly verifies the expected and actual
added new utility classes for PushUtils , SecurityUtils , and VariantComponentsModule to provide utility functions for push registration and key management in the application
refactor the handling of replicas in TableRebalancer to use a loop for better readability to improve clarity and maintainability of the code
bump version to 2.7 . 0 and tidy release note
log4j2 - 1343 fixed test failure on window .
improve error handling in ajpaprprocessor . read ( )
initialize friction , restitution , density , and sensor fields to zero and set their default value to false to ensure default values are
updated methods in ClassificationTaskRunner , AnomalyClassifier , AnomalyDetectionInputContextBuilder , and TimeBasedAnomalyMerger to use
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to improve error handling when attempting to wait for broadcast idle
added unit tests for reading font and link tags with attributes in ResourcesTest . java and modified the return statement in ResStringPool . java to
[ 1.19 . x ] fix stats component not load in 1.19 . x
added call phone permission handling in Launcher . java and a constant for Android SDK version in Utilities . java to ensure proper access to phone content
updated return values and modified method signatures in SimulationPanel , PlotDialog , BasicEventSimulationEngine , and Startup classes to enhance user interface
changed the visibility of the BUF _ SIZE _ LONG constant and modified the return value of the fromBytes method in GeoEncodingUtils to enhance
added a synchronized method ` isDockerAvailable ( ) ` to check if a Docker client is available to improve thread safety when accessing the Docker client
removed the static final String VPX from CodecTypes . java to eliminate unused code to improve maintainability
added a coordinator address option to DistBuildFactory and updated DistBuildRunCommand to set it to " localhost " to enable remote coordinator thrift server
added path matching functionality and synchronized timer management in FsUtils and WrapTimer classes to improve file path handling and ensure thread safety during task scheduling
added a conditional check before adding label values in TestTaxonomyFacetSumValueSource . java to ensure labelValues are only added when the value is
mow - 107 fix possible null pointer bug
removed the @ Test annotation from TestPerfBenchMarkDriver . java to streamline test execution by eliminating unnecessary test annotations
added materialization time setting functionality in ObjectStore and created a test for update creation metadata in TestObjectStore to ensure correct materialization time is
added error handling for UnsatisfiedLinkError in the VoskSTTService class to improve robustness by notifying the listener when
remove the ' one - way ' property and modify the string concatenation in JMSSamplerGui . java to improve clarity of log messages
updated break weight logic in GlyphView . java to handle cases where the break spot is equal to the current position to improve accuracy of break weight
hive - 26495 : rcfile . readsync should use system . copy instead of in . readfully ( ) ( serg
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to indicate a pending fix for SOLR - 1302
replaced the retrieval of step and processor data with a unified unwound list for improved clarity to enhance code readability and maintain
removed unnecessary parameters from the setToSortedDataFlavorArray method and simplified the comparison logic in DataTransferer to streamline the data transfer process
hbase - 26975 add the thrift info port to the args in testthriftservercmdline ( addendum )
added a check for EOF in the RegExpScanner class to prevent processing if the scanner is at the end of the regex
refactor metric and timer handling to use a static set for enabled metrics and timers to improve performance and maintainability by centralizing enabled metrics and
added null check for nickname before comparing resource to avoid potential NullPointerException when nickname is null
improve error message when a file can not be find
refactor refresh token handling into a separate method for clarity to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] remove unnecessary jobgraph # clearjob from yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a way to retrieve the hardware
added SSL URI configuration to the BTCChinaExchange to enable secure communication for the BTCChina API
pmd ( ant ) : fix pmd - ant output on window
added OauthController and Oauth2PluginTest files to implement OAuth2 plugin functionality and tests to ensure proper integration and validation of the OAuth2 plugin
refactor SemgrexPattern class to improve code readability to enhance maintainability and facilitate future updates
added ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and removed them from ` EntryStream ` and ` StreamEx
updated error logging message format and improved exception handling in ExceptionToProducerResponseConverters to enhance clarity of error messages and ensure proper response handling
updated the boolean condition to allow both org . specs2 and scala . java tests to be run with Maven Surefire to ensure compatibility
do n ' t send sdp if it ' s not transmittable .
updated the type check for ` defaultValue ` in ` CreateTableGenerator ` and added a new test for ` current _ timestamp ` in ` Create
added tests for station 3 and 4 in NormalizedMultiValuesTest . java to ensure correct handling of station data in GML documents
added a volatile boolean field and modified related methods in NetworkTestUtils , UaaHttpRequestUtilsTest , and NetworkTestUtilsTestTest classes to
added conditional checks and modified return statements in ColumnarDataSource , RowProcessor , and BinaryResponseProcessor classes to improve code robustness and ensure proper
refactor ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and introduce a new ` getPositionsArray
added XLCDCommunicator and XLCDController classes , and refactored firmware checks in FirmwareUtils to improve code organization
[ drools - 6862 ] allow kie - maven - plugin to load xsd from kie - maven - plugin classpath ( #
updated conditional checks in EventQuery001 , EventQuery002 , and EventQuery004 to include retry times and transaction message to ensure that retry times
replaced ` awaitThreadState ` and ` awaitThreadState ` methods with ` join ` and introduced a timeout mechanism to improve thread management and
updated the ` equals ` method in ` DelegatingMethod ` and introduced a new test class ` DelegatingMethodTest ` to ensure proper equality
updated constant values for freeze and unfreeze values from 20000 to 10000 in EnergyCost . java to accommodate larger freeze values
removed redundant calls to ` pid . waitFor ( ) ` and modified the ` command ( ) ` method to throw ` ConfigurationException ` to streamline
deleted the ` SpringTransactionHooks . java ` file and changed ` SpringTransactionHooksTest . java ` to use ` AbstractSpringTransactionHooks
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue . java ` that implements a test for uninitialized string values to ensure that the ` String `
added support for provided dependencies query in AndroidLibraryDescription and updated related tests to enhance dependency resolution and improve test coverage for provided dependencies
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of the keyboard
added a static boolean variable ` sSavedBugreport ` and modified the logic for saving bugreports to simplify bugreport saving logic and improve code
added a new constant for " cinepack " format in FormatConfiguration . java and updated LibMediaInfoParser . java to use this constant
added camera bobbing functionality and adjusted hand movement animation offsets to improve player responsiveness based on configuration settings
updated the method from ` describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java `
deleted the HSQLDBServerFilesFilter class and replaced it with a custom FilenameFilter in TestUtility to simplify the code by eliminating
updated conditional checks to include a null check for restoreFromSeed and restoreFromKey to ensure proper handling of cases where restoreFromSeed and restore
updated latestVersion assignment from APIDataVideoVersion to APIDataSeriesVersion and added a trace log statement to ensure compatibility with the latest API data
added a method to handle method invocation with a type existence check to improve type safety by ensuring only valid method invocations are processed
replaced array size calculation with a constant for values in AmbientCubemap . java to improve code readability and maintainability by
bugfix # 211640 - display a message when the current mode be not configure properly
added checks for zero values in GenericUDFMask and GenericUDFMaskFirstN , GenericUDFMaskLastN , and GenericU
test : use temporary folder instead of hardcoded db name
add itemstack . isitemstackdamageable ( ) and gethassubtypes ( ) method to itemstack class . close #
fix mc - 167447 ( renderstate . linewidth ( ) do n ' t work properly )
eranmes on behalf of andreashaas : setting the default browser . startup . page to 1 in the firefox driver .
added a condition to handle both CONNECT and GET requests in Http1xClientConnection . java to ensure proper response handling for both HTTP methods and
rename the " compile " task to " process - classes " in JoobyMojo . java to improve clarity and consistency in
replaced the shutdown method with closeIdleConnections method in HTTPHC4Impl . java to improve connection management by allowing more time for idle connections
added a conditional check for the presence of the aggregate function suffix before creating metrics to ensure metrics are only created if the function does not already have
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to utilize this new fullscreen parameters to enhance the
added a new Java class to calculate and print the frequency of a given number to provide a solution for counting occurrences of a specified number in a
[ java ] initialize socketchannel to null to avoid potential npe .
refactor MutisignOperationerGodicTest class to improve test structure to enhance readability and maintainability of the test code
added error handling to ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` methods in ` StaxEventItemReader
replaced specific imports with a wildcard import in ShadowTextView . java and added null check for qualifiedResourceName in TestAttributeSet . java to
updated import statements from ` com . nimbusds . jose . shaded . json ` to ` net . minidev .
updated OS detection logic to handle " AIX " and added support for Linux S390x - 64 architecture to ensure compatibility with AIX
fix router access to the private ip address in the appliance command ( # 4077 )
added a method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate asynchronous execution of runnable tasks with
deleted the ` PresenceMessageComboTests . java ` file to the test class is no longer needed in the integration test suite
refactor calculations for outRect , primarySnapshotWidth , and primarySnapshotHeight to use Math . round instead of int casting to improve code read
updated variable names in TestClusterDumper for consistency and clarity to improve code readability and maintainability by using uniform naming conventions
hbase - 26942 fix the alignment of the rowcache in kv ( addendum )
camel - 16400 : add a type converter to the defaultcamelcontext so it can be use in a camel context .
added handling for ConditionalTask in SparkCrossProductCheck . java to improve task dispatching logic for conditional tasks
updated action filtering logic in Launcher and LauncherAppState classes to ensure proper reloading of the model when managed profile actions are added or
modified the condition for account chooser and discovery in LoginInfoEndpoint . java and added unit tests for passcode prompt functionality in LoginInfoEndpoint
add todescriptivestring ( ) method to make it easy to debug
updated field names from ' message ' to ' msg ' and ' result ' in HuobiAccountInfo . java and HuobiAccount
added a reserved word " PERIOD " to the MariaDBDatabase and implemented a test for the AddPeriodColumnMariaDb to ensure
portablepipelineoptions : add default docker image , external service , and process command to portable worker
added instructions for Android 7.1 - you now have Launcher shortcuts and some changes to the dictionary loading mechanism to enhance user experience by providing
updated the access modifier of NUM _ MILLIS _ IN _ DAY from private to public in TestUtil . java to allow access to the constant
removed the print statement for URI in ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] check that aeron client use conductor agent invoker before invoke aeron client .
added a check for implicit lambda parameters and updated type validation logic in ` ppp Attr . java ` , and created a new ` NoWarn
refactor menu item handling by introducing showMenuItem and hideMenuItems methods to improve code readability and encapsulate menu item visibility logic
updated BTCETransHistoryResult and BTCETransHistoryJSONTest to use BTC _ deposit instead of withdrawal to
replace ArrayList with HashSet for series and exceptions in RetryFilterFunctions . java to improve performance and prevent duplicate entries in the list
mark the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
updated the condition in LastQueryExecutor to handle cases where the end time is larger than the sequence time and added a new test for unseq
removed newline characters from the request string in HttpResponse . java to ensure consistency in request formatting
added a static block to set a default error log level to " ERROR " in BuildImageMojo . java to improve error handling by setting
added a method to set safe area on the title bar to improve user experience by ensuring the title bar is safe to display
reversed the iteration order of TimeSeriesChunkMetaData list in OverflowSeriesImpl . java to ensure correct retrieval of timeseries chunk metadata from the list
added SQL statement parsing and deparsing for renaming columns in AlterTest . java to ensure that the ALTER TABLE command behaves as expected
changed the access modifier of the copyState method from package - private to public to allow access to the copyState method from other classes
fixed - redissonexecutorservice . executecallable return a completable future . # 3637
file system split now support file suffix . part , not . part
[ hotfix ] fix checkstyle violation in orc .
added a null check for ` nameArg ` before processing in ` CompareFunctionsProcessor . java ` to avoid potential ` NullPointerException ` when ` name
do n ' t throw on insufficient disk space when expect disk space be too big
removed unnecessary ` toString ( ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes
added a check to return early if the handler is invalidated in AbsSwipeUpHandler . java and unregistered the task stack listener in TaskAnimation
added methods ` getLockTimestamp ( ) ` and ` setLockTimestamp ( ) ` to ` AppPreferences ` and updated ` PreferenceManager ` to
refactor artist retrieval logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when accessing data
nifi - 3740 fixed npe in splittext when there be no header file
added support for Windows key store in HttpsConnectorFactory to ensure proper key store management for Windows environments
increased the default check timeout from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to allow more time for
added a condition to handle FILE _ NOT _ FOUND result code in FileSyncAdapter . java to ensure that FILE _ NOT _ FOUND
added animation capabilities to the Slider class by introducing animateFromValue and animateDuration and animateInterpolation to enhance user experience by allowing customizable
updated assertions in LineSeparatorProcessorTest to use consistent variable names to improve code readability and maintainability
increased maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to accommodate larger texture sizes
added a test for negating a ternary in the UnnecessaryParenthesesTest . java file and updated the UnwrapParentheses .
camel - 16400 : fixed npe in hazelcastqueueconsumer when consumer body be null .
added a new ` TextFeedbackTest ` class and modified ` AllTests ` and ` TestRunner ` to utilize it to enhance test coverage
replaced ` Math . round ` with ` Float . compare ` for score comparison in ` DefaultSolrHighlighter . java ` to improve precision
updated DENSITY constants in AddAndScaleMultiImage . java and ResourceEditorApp . java to use different DENSITY values to ensure
fix arraycopysnippets to read class element offset correctly .
log4j2 - 1343 log4j2 - 1346 log4j2 - 1347 fix log4j
added support for remote SCM management in Configuration and RuntimeEnvironment classes , and updated options in Indexer to allow toggling of remote SC
updated the state check in MieleApplianceHandler to include additional states to ensure proper handling of additional states in the on - off state
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for handling launcher events in ` StatsLogCompatManager . java ` to
updated variable name from ' log ' to ' LOG ' for consistency to improve code readability and maintainability
added tests for ProjectGenerationEvent types in EventSerializationTest . java to ensure correct serialization of project generation events
ticket # 269 : add support for preview point ( preview _ points feature be not support yet )
refactor JavaCompiler class to improve code readability to enhance maintainability and facilitate future updates
hbase - 25815 increase the test execution time of random read in integrationtesttimeboundedrequestswithregionreplicas ( # 32
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the test suite
added additional flags to the ldflags in NdkCxxPlatform . java to include gc - sections and nocopyreloc to
updated the fallback URI generation in SpringCloudCircuitBreakerFilterFactory and added a new test for variable handling in SpringCloudCircuitBreakerTestConfig to
eranmes on behalf of andreashaas : adding license header to all test file .
fix bug # 52222 - do not allow shared string table to be read - only if the table name match the local name
added a method to retrieve account network by HTTP in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to
updated SwingUtilities2 to handle negative text width and modified Test6635110 to skip the test to ensure proper text layout handling and avoid
refactor the FlatteningIterator initialization and simplify its logic in FileResourceIterator and FlatteningIterator classes to improve code clarity and maintainability
updated the method to remove color HTML tags from title and body in NotificationUtils . java to ensure only non - HTML tags are processed in notifications
doc : generate sample code in the java microgenerator ( # 136 )
[ # 7640 ] instructor : edit question : remove an existing question should not delete it ( # 7641 )
update return values in HSSFSheet . java and add assertions in BaseTestSheet . java for row number assertions to ensure correct behavior of
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and PackageManagerHelper classes to enhance security by preventing malicious int
[ java ] move session in init state to cluster session in sequencer so it can be connect to other cluster node .
refactor hashCode method in AbstractParquetMapInspector to use AbstractParquetHiveMapInspector instead of StandardParquetHiveMapInspector
added a check to flush the QUIC session if the connection is remotely closed to ensure proper resource management and prevent memory leaks when the
added the AutoCloseable interface to the SplitReader interface to ensure proper resource management and prevent potential memory leaks
removed the deepCopy method from GsonBuilder to streamline the code by eliminating unnecessary copy settings
sulong : cache sulong source map to avoid npe .
updated fileOpenFuture initialization and refactored file handling in RestClientRequestImpl . java to improve code clarity and streamline asynchronous file
updated the dispatchStatusString method call in GrblController . java to ensure consistency in status string dispatching
replaced the class loader retrieval method in MockFactory with a new SearchingClassLoader to improve classloader management by combining loaders based on class types
add a new test class TestRefreshFlagBug with a scene node and a material to test the refresh flag behavior to ensure that the refresh flag
hive - 26412 : add left semi join support in constantpropagateprocfactory ( ashutosh chauhan via
updated response and request handling logic in HttpReceiver and HttpSender classes to ensure proper termination of responses and requests based on their status
amd64 : fix array length offset calculation to use oop desc length offset .
http : / / issues . apache . org / jira / browse / amq - 4568 - add default policy to the broker
updated multiple Java classes for consistency and clarity to improve code maintainability and readability across the project
added a check to ensure the application context is not running before stopping it to prevent potential errors when the application is not running
changed the return type of drawItem method from void to GlyphLayout in List . java to allow the method to return a GlyphLayout instead of
updated SpringmvcClient to use MetricsPublisher for metrics retrieval and modified CodeFirstSpringmvc to throw an InvocationException to improve metrics
updated the variable name from ` SAFE _ ACCOUNT _ AGE _ DATE ` to ` accountAgeWitness ` in the ` AccountAge
refactor code formatting for consistency and clarity in StructureHeader . java and StructureReader . java to improve readability and maintainability of the
added a new ` ResourceUrlProviderExposingInterceptor ` to the ` CasWebflowContextConfiguration ` and updated related tests to enhance webflow
added dex return inlining functionality and a new dex return inliner class to enhance the transformation process for return statements in the
make enrichedruledto contain additional property ( # 4669 )
removed the NOFOLLOW _ LINKS parameter from the isDirectory method in PathResource . java and added new arguments in AliasCheckerSymlinkTest . java
[ hotfix ] [ sql ] remove sqldialect from executionentry and executioncontext
updated ` AndroidPackageableCollection ` and ` AndroidBinaryGraphEnhancer ` to use ` Supplier < ImmutableSet < String > > ` for
add a new test class ` ASTPackageDeclarationTest ` to verify the functionality of ` getPackageName ` method to ensure that the ` getPackageName `
added minimum cross compaction unsequence file level configuration to IoTDBDescriptor to allow dynamic configuration of the minimum cross compaction unsequence file level for better
[ hotfix ] [ runtime ] move activeresourcemanager into resourcemanager . active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated ZipResource to handle URISyntaxException and modified URI creation logic to improve error handling and ensure correct URI construction
formatted code for consistency and readability in ExpandableUploadListAdapter . java to improve code maintainability and adhere to coding standards
refactor RobolectricTestRunner to process classes hierarchy and merge configuration between parent classes and methods to improve clarity and maintainability of
filter the block and item registry names before loading them in ModelLoader . java to ensure only non - null registry names are included in the list
refactor ` AbstractDataChangedListener ` to extend ` AbstractDataChangedListener ` and update method visibility in ` WebsocketCollector ` to improve
added handling for enum types in JSONPojoConvertor and enhanced test assertions in JSONPojoConvertorTest to improve type safety and ensure
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper ` to indicate that the option will be removed soon
changed the type of ` originalPayload ` from ` String ` to ` byte [ ] ` and updated related logic in ` GWTRequestWrapper .
added orientation correction listener to GyroControl to handle device orientation changes to improve control responsiveness based on device orientation changes
update BIOME _ LIST _ SIZE from 256 to biomeGenBase . getBiomeGenArray ( ) . length to ensure B
changed interface declarations from ` println ` to ` print ` in ` GetInterfaceTest . java ` to standardize output formatting for better readability
removed redundant assignment of the environment variable in FileCompilerConfig . java to streamline code by eliminating unnecessary duplication
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a structured way to collect byte
added preload parameter to MMapDirectoryFactory to turn - off preload mode for improved performance
added custom metrics for various storage configurations in BukkitPlatform to enhance monitoring capabilities for enabled components
refactor QuickConnectREST class implementation to improve code readability and maintainability
added aspect ratio setting and default card image in CardPresenter . java to improve image handling for better visual presentation
( scott phillips ) change authentication logic to use loginpageurl ( ) instead of isimplicit ( )
update cloning logic for longValues , doubleValues , decimalValues , byteValues , and byteLengths in VectorHashKeyWrapper . java to ensure
add a new test method ` testSystemNanoTimeJit ` and implement the ` testSystemNanoTimeJitWarmupPhase `
added trimming for empty lines in MultiPartFilter and included a print statement in MultipartFilterTest to ensure that empty lines are properly handled and
add experience drop event to entitylivingbase . experiencedropdevent . close # 3883
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use localized strings instead of hardcoded strings to improve localization and maintainability
[ sql - planner ] remove unsupportedoperatorsvisitor from beamqueryplanner
added support for RdepsFunction in GraphEnhancementQueryEnvironment and updated test cases in GraphEnhancementQueryEnvironmentTest to enhance dependency
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added logic to check for the entire rocket before setting the selection option index to ensure selection option is only selected when the entire rocket is
replaced ` Arrays . toString ( byte ) ` with ` rs . getBytes ( 4 ) ` in ` UpdateableResultTest . java `
added time boundary attach functionality for offline and realtime tables in BaseBrokerRequestHandler to enhance the handling of time boundaries for hybrid tables in the broker
simplify logic of add socketref to the poller in the apr processor
update eightmuses ripper to download full size albums
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to standardize
added phone profile checks to QuickstepLauncher to ensure proper layout behavior for phone devices in non - landscape orientation
replaced calls to ` getValue ( query , PROPERTY ) ` with ` query . unwrap ( QueryImpl . class ) ` in ` PartTree
replace direct file reading with a dedicated method ` readMatchingLines ` to improve code readability and handle privileged actions more effectively
added dynamic method to retrieve the result stream from JpaQuery to enhance query execution flexibility by allowing dynamic stream retrieval
added null check for entity before processing to avoid potential NullPointerExceptions when processing entities
added a test to clear the map when value attributes are indexed in EntryProcessorTest . java to ensure that the entry processor clears the map when
added support for join jitsi - meet - room ( jitsi - meet - room - header ) in sip implementation .
updated color calculation in Utils and modified HTML message in UtilsTest to ensure consistent color formatting and improve test readability
add ability to disable text input for menu and normalize name ( # 6373 )
updated scratch path format and added recursive linking in Aapt2Link . java to improve path management and enable recursive linking for build artifacts
replaced ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java `
mow - 107 clear selected geos only when need
( stuart lewis ) camel - ysld : improve error reporting when cql expression parse fails
implemented the ` isCanceled ( ) ` method across multiple classes and updated the cancel logic in the ` ExecutorCallAdapterFactory ` to ensure consistent
refactored the ` isAnnotationPresent ` method across multiple classes to use a default implementation to improve code clarity and reduce redundancy across the annotation
added a default implementation of the ` removeAllWidgets ` method in the ` UILayout ` interface to indicate that the method is not implemented yet
[ hotfix ] [ yarn ] fix yarnsessionfifoitcase test failure
opensslcipher : use the maximum output size , not the minimum .
added logic to force a transcode of high - res content in the PlaybackController to ensure proper handling of media streams for Fire TV
[ beam - 8470 ] make readsourcetranslatorbatch a mock readsourcetranslatormockbatch and make datasetsourcemock static .
replaced ` Date ` with a wildcard import and modified listener handling logic in ` GpsLoggingService . java ` to simplify import statements and
changed the parameter type of putString method from boolean [ ] to byte [ ] and updated the wide attribute handling in Relay . java to improve
added import for BaseItemDragListener and modified item creation logic in FolderIcon . java to support item drag - and - drop functionality in the
added a new method ` createEmptyArtifact ` to multiple connectors to handle empty artifact configurations to improve artifact creation logic and ensure proper handling of empty
removed unnecessary whitespace in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed unnecessary calendar check before verifying if a video link contains " . m3u8 " to simplify the video link validation logic
camel - sftp : fix file path compact in sftp operation . thanks to daniel for the patch .
increased the timeout in the assertion from 20 seconds to 20 seconds in BaseWeatherConsumerTest to allow for more time for mock endpoints
updated variable name from ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by
fix double plant not work when there be a large fan , close # 1861
changed tree focus behavior from focusable to requestFocusEnabled in TranscodingTab . java to improve user experience by enabling request focus for the
do n ' t swallow exception in virtualmachinemanagerimpl . getvirtualmachine ( ) when vm be not available ( #
updated DB2TestSystem to accept the license and modified DockerDatabaseWrapper to check if the test system is not instance DB2TestSystem to
refactor unit management in DoubleModel and GeneralOptimizationDialog for improved clarity and functionality to enhance the user interface by allowing dynamic unit
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionality for the BTC /
added sample setting logic in TestPBRLighting . java to ensure that the number of samples is set correctly based on context settings
removed the " job . step " prefix from the test assertions in StepWithSimpleTaskJobParserTests . java to streamline the test by
changed variable declarations from non - final to final for credential and service in CentralAuthenticationServiceImplTests . java to ensure immutability of
update ggbabs function to use parentheses instead of string concatenation to improve readability and maintainability of the code
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to improve the handling of service output
[ drools - 7 ] fix bigdecimal coercion when use objectcreationexpr
added a comment to hide the jdt used by jetty in WebAppContext . java to improve clarity and maintainability of the code by
simplified the return statement in NegotiateAuthentication . java to simplify the logic for authentication caching
updated namespace assignment to capitalize the first segment of the namespace string to ensure consistent namespace formatting for better user experience
( chore ) camel - direct : move directconsumernotavailableexception to a new class
added null check for zooKeeper before setting it to null to prevent potential NullPointerException when accessing zooKeeper
corrected the spelling of " Phase 2 " in the progress bar message to ensure consistency and accuracy in the message displayed during initialization
replaced direct calls to ` mVibrator . cancel ( ) ` with a helper thread ` runOnUiHelperThread ( )
added a call to updateLastRemoteStreamId in HTTP2Session . java to ensure the last remote stream ID is updated correctly
added text antialiasing rendering hint to EditorHeader and EditorToolbar classes to improve visual quality by enabling text antialiasing for
[ java ] : use currentwindowsize instead of termwindowsize for flow control over run .
refactor : remove static import of enums in ctannotationimpl . java ( # 2563 )
refactor ExoPlayer class to improve code structure to enhance maintainability and readability of the code
replaced the ` getRGBPixelImpl ` method with a call to ` getRGBPixels ` in ` WRobotPeer . java `
added a new method ` newPrintStream ` to handle encoding for output streams to improve flexibility in setting output stream encodings based on system properties
updated vibrate parameter from 1 to 25 in TouchableMovementMethod . java to improve movement speed and responsiveness
updated import statements in AppEngineSqlCloudSession . java , FlybushDataClearer . java , and TestEnvironment . java to
reformatted constructor calls in WebSocketClient . java for consistency to improve code readability and maintainability
simonstewart : move the test _ i18n . html to the start page , not the end page
refactor error handling in BytecodeParser and SharedGraphBuilderPhase to use handleLoadConstantException instead of handleIllegalArgumentException to improve clarity in
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper authentication state management during tests
pdfbox - 4892 : add case insensitive comparison , a suggest by valerybokov
refactor JavadocTool to streamline source file loading and enhance warning messages for non - empty files to improve code readability and provide clearer
simonstewart : adding test for the form handling functionality in the firefox driver
added a validation check for the length of keys in HighestKvno . java to ensure that the number of keys is less than 9
added error handling for attribute retrieval in HDF5BatchReader to ensure compatibility with Huge objects BTrees with 1 record to avoid runtime errors
[ beam - 8470 ] use writeresult instead of pdone in bigquery transform
openapi - spec : add implicit param to processgroupresource and copysnippetrequestentity
added a new file TestMultiANewArray . java to implement a Java test for multi - array operations to ensure proper functionality and error handling
update secondary storage configuration to disable vm dependency on management server
refactor synchronization logic in SyncBlockChainMsgHandler . java to improve clarity and structure to enhance readability and maintainability of the code
added theme setting functionality in PreviewTabView to ensure the correct theme is applied for the preview tab
added null check and closing for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a test for HTTP idle timeout in ConnectorTimeoutTest and updated the connector ' s idle timeout configuration in ServerConnectorTimeoutTest to ensure proper
update the dictionary to use propertiesutils instead of hardcoded string array .
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) `
updated type declarations in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests for clarity to improve code readability and
changed log level from warn to debug for child node name resolution to reduce log verbosity and reduce noise in the log output
refactor color handling in ColorExtractionService to utilize a new method for retrieving hotseat palletes to improve code maintainability and
added default table entry and cell transformer methods to TypeRegistry and updated related imports in TypeRegistry . java to enhance the flexibility of data table
removed an assertion that checks if newAvailableShared is less than or equal to initShared to streamline code logic by eliminating unnecessary checks
doc : [ texttospeech ] fix docstring formatting ( # 9859 )
added a boolean field ` projectGenerated ` and its getter method to ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator `
updated conditional check to use ` containsKey ( ) ` instead of ` contains ( ) ` to improve readability and maintainability of the code
added contact form functionality to the application to provide user feedback on their name , email , and description
guac - 1101 : return objectpermissionset for connection and connectiongroup permission instead of permission .
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version for improved functionality
[ drools - 7 ] fix checkstyle issue in traitfactory
updated methods in MetricConfigManager to use " alias like : name " or " name like : name or " instead of " name like :
replaced manual closure of PerDocConsumer with IOUtils . closeSafely to improve resource management and avoid potential memory leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button to show the menu when it is clicked to ensure the menu is displayed correctly when the user clicks the
updated error messages related to null references in multiple classes to clarify that a subject is a non - null reference to improve clarity and
ggb - 1181 update line height of help button when heuristic be true .
move protobufferutilitiestest to core / util so it can be reuse by other test .
do n ' t set divider position if the side pane wo n ' t have a divider ( # 3640 )
add support for crossref in aux file generation ( # 3745 )
[ geos - 8470 ] use metadatamap instead of map to store geoserver metadata
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity and consistency in naming conventions
fix avatar cache when metacontactavatarupdatenotfoundexception occur .
updated import statements in ShellCommand . java and ShellFactoryImpl . java to reflect the new package structure to ensure compatibility with the updated package structure
added a test method to clean up the audit log table after parameters by position to ensure that the audit log table is cleaned up correctly based on
changed the return type of the inject method from T to Object and added a suppress warning to ensure type safety and avoid unchecked cast warnings
added regex patterns for parsing comments and updated parsing logic in ACLFileParser to enhance comment handling and improve parsing accuracy in the ACLFileParser
updated import statements and modified the isReadable method signature in MapRDBFormatMatcher . java , and modified the JsonCreator annotation in MapRDB
added ancestorDimensionValues to StarTreeNodeImpl and updated node name formatting in StarTreeImpl to improve dimension handling and enhance logging clarity
added user unlock check before dumping plugin information and refactored closeOpenViews method in Launcher to improve handling of user unlock state and
updated variable name from widthStr to positionStr in Photo . java to improve clarity and consistency in variable naming
refactor PKIXValidator logic to improve certificate validation structure to enhance readability and maintainability of the validation process
[ hotfix ] [ hadoop ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest ` to ` org . apache . shenyu .
cloudstack - 4321 : fixed restart of project network when acltype = skipprojectnetworks
updated the method for retrieving the label JSON element in RuntimeTypeAdapterFactoryFunctionalTest . java to ensure the correct shape type is retrieved and
do n ' t store undo info if property do n ' t exist
updated XRCompositeManager to use AccessController for accessing the grad cache to enhance security by ensuring the grad cache is accessed in a privileged context
updated StreamCloseTest to use Awaitility ' s await syntax for stream management to improve test reliability and readability by reducing the
removed the ` doAfterFlush ( ) ` method and adjusted the handling of ` perFields ` in multiple classes to streamline the flushing process
filter out deprecated and non - sensitive property from configuration metadata . fix # 350
refactor capacity and mask variables to be final in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity and enforce
increased the number of threads from 25 to 15 in HiveConf . java and updated file path handling in Hive . java to improve file
improve logging and exception handling in parallel nio sender
added a null check for the context before creating a new SchemeAndroidIDE instance to prevent potential NullPointerExceptions when context is null
[ gr - 38686 ] fix native - image context classloader issue .
modified the ` modifyGrantedAuthorities ` method in ` SwitchUserAuthorityChanger ` to return a list of granted authorities instead of void
refactor JaxrsIntegrationTest to JaxrsIntegrationTestBase and introduce new JaxrsSpringIntegrationTest and JaxrsSpringMain
improve handling of query - timeout and is - jdbc4 compatibility .
added DataProviders for general and supplementary character test data in XslSubstringTest . java to improve test coverage and organization for XSL substring
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` and added ` close ( ) ` method
added support for MariaDB sequences in MariaDBDatabase and updated related logic in CreateSequenceGenerator to enhance sequence handling and ensure compatibility with
updated error messages in MappedResizeableBuffer , UnsafeBuffer , CompilerUtil , and Int2ObjectCacheTest to improve clarity and consistency in
added TableDataManagerProvider import and setServerMetrics in multiple test files to enhance test coverage and ensure server metrics are properly registered
added support for MFL N and MFL extension in SSLExtension to enhance security by enabling additional MFL extensions
refactor ObjectHashSet and ObjectIterator classes to simplify iterator initialization and improve clarity to enhance code readability and maintainability by reducing complexity
update character remaining text logic in Compose . java and TweetFragment . java to adjust the length calculation for shortened URLs to ensure accurate
add ttl to data point write buffer to allow ttl to be configure
updated the ` checkForAndKillXcodeIfRunning ` method to accept an additional ` enablePrompt ` parameter and improved logging messages based on
add a method to get terrain at a cell in the TerrainGrid class to enable retrieval of terraing from a cell in the
added default value handling in mmm Pretty . java and created a new file ppp T6665791 . java with a Java compiler
added error logging for missing quest keys in ResourceLoader . java to improve debugging by providing clearer feedback when quest keys are not found
added a condition to check if the transport is not push for push support to ensure that push operations are handled correctly in the HTTP channel
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign method call for local witnesses in BlockUtil . java to streamline the code by eliminating unnecessary signing logic
modified FileSystemView . java to handle empty roots array and added security checks in Win32ShellFolder2 . java to enhance robustness by ensuring
updated row height retrieval and refactored content copying logic in ColumnText and PdfPRow classes to improve code clarity and maintainability by
updated ListFragment to use a SparseArray for undo notes and refactored note removal logic to improve memory management and enhance code readability by
[ # 8594 ] fix problem with duplicate feedback question id ( # 8596 )
removed null check for data in getTransferData method to simplify error handling by eliminating unnecessary checks
# 16 - remove deprecate pstmtdelegate from serverconfig ... no longer use
replaced ` Padding ` class with ` Rect ` for widget padding retrieval in ` AppWidgetResizeFrame ` and ` Launcher ` classes
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code readability and enhance argument filtering for ConsString
updated ClassGraph and ScanResult classes to improve code structure to enhance maintainability and readability of the codebase
renamed the CountDownLatch variable from " latch " to " goAwayLatch " and updated its usage in the test to improve cl
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` for better readability in ` IterableSubjectTest . java
replaced ` ThreadLocal ` with ` Workbook ` for managing the ` currentBook ` instance to simplify the handling of ` Workbook `
introduced a ` supports ` method in ` ContactSecurityVoter ` and modified the ` vote ` method signature in ` ContactSecurityV
removed unused imports for GachaHandler and Tools in DataLoader . java to clean up the code and improve readability
added functionality to handle the " rowsAffected " parameter in the postUpdateLog method across multiple command steps to provide user feedback on the number of
mow - 107 remove unused import and fix margin
initialize foregroundFPS and backgroundFPS to a default value of 60 in JglfwApplicationConfiguration . java to ensure default fps values are
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog to ensure proper resource management and prevent memory leaks
replaced the use of DefaultWebSocketFrame with a custom ChannelFutureListener for closing the WebSocket frame to improve code clarity and maintainability by
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and implemented ` OnStateMachineError ` listener functionality to improve clarity
updated the background color setting for the list view in SettingsActivity to enhance the visual appearance by using a consistent background color
updated import statement from Apache Commons Lang to OpenHAB ' s StringUtils and added a null check for the line to ensure compatibility with the
added a new method ` accumulate ` to ` JavaUserDefinedAggFunctions ` to handle user - defined accumulation of values with specified weights to
hbase - 26975 fix checkstyle issue in hbase - replication ( addendum )
replaced ` VALID _ CACHE _ SET ` with ` REGEXP _ CACHE ` and updated regexp compilation logic to improve cache management and simplify regexp
added a reset method to the GameThread class to provide a way to reset the GameThread instance
added an override for the login method in DigestAuthenticator to check the realm before proceeding to ensure that the authentication process only proceeds with the
refactor parameter handling in SavedRequestAwareWrapper to improve handling of saved parameters to enhance parameter management and ensure consistent merging of existing and wrapped
updated InfoStatus messages in BasicConfigurator , LoggerContext , and ConfigurationAction classes to provide clearer context about configuration settings and error messages
replaced ` countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog . java ` and ` HAService . java
added a condition to check if the device is not Android O before processing image view in PhotoViewerActivity . java to ensure compatibility with devices running
updated schema info level from minimum to basic in SchemaCrawlerOptions to improve clarity and consistency in schema information configuration
fix save task to work on window
updated character encoding handling and refactored string conversion methods in TestPayloads . java to improve code readability and maintainability by using a
fix npe in world . getentityat ( x , y , z ) , fix mc - 103516 ( # 4321
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter "
[ drools - 7 ] fix protobuf marshalling of multi accumulate function ( # 191 )
reformatted case statements in NowSearchTerm and SearchTermBuilder for consistency to improve code readability and maintainability
pdfbox - 4892 : remove public modifier , a suggest by valerybokov
added imports and modified method and headers handling in RemoteEndpointServiceAccessStrategy . java , and updated URL resolution in WSFederationRelyingParty
added a new method ` newResponseBuilder ` to create a ` ResponseBuilder ` instance to streamline the creation of ` ResponseBuilder ` for
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command start notifications
added a call to recomputePreviewDrawingParams in FolderIcon and modified the visibility of the computePreviewDrawingParams method in PreviewItemManager to ensure
updated tokenizer and filter handling in LukeRequestHandler . java to use CharFilterFactory instead of TokenFilterFactory to improve code clarity and
replaced explicit null checks with ParamChecks for plot , generator , and hotspot arguments to improve code readability and reduce boilerplate code
added verbosity handling to the ` createSubContext ` method in ` ExecutionContext ` and modified related logic in ` JavacStep ` to
added schema conversion for Oracle database type in DbSqlSession . java to ensure consistent schema handling for Oracle databases
added a context name to the context description in AsyncLoggerAllThreadContextImplementationsTest . java to provide clearer context information for better debugging
added a new file TestShrinkToOneRegion . java containing a main method that calls System . gc ( ) to facilitate garbage collection
replace string splitting with Splitter for better readability in SandboxTestRunner . java to improve code clarity and maintainability by using a
updated context handling in AnalyzingInfixSuggester and added a test for binary context in AnalyzingInfixSuggester
updated the handling of attachments in PushsaferMessageBuilder to use a local variable for better clarity to improve code readability and maintainability
removed the ` showLabelStats ` method from ` ModelExplorer ` and replaced ` provenanceHash ` with ` jsonResult ` in ` StripPro
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
removed the ' final static ' modifier from the FORMATTER function declarations in multiple test classes to simplify the code and improve readability by elimin
updated the evaluate method in UDFRound to handle both Double and Integer parameters to improve flexibility in evaluating double values and ensure proper rounding behavior
replaced direct null checks with ConfigParser . valueAsOrElse for injectionEnabled and useIncludedLibrary to simplify code and improve readability by using
changed class access modifiers from package - private to public in Test1 . java and Test2 . java to allow access to these classes from other
updated permission messages in PlayerEventListener to use " deny . no _ enter " instead of " permission . no _ permission _ event " to improve
fix optimization for count ( * ) in conditionandor
replaced ` doTestNormsVersusStoredFields ( new LongProducer ) ` with ` doTestNormsVersusDoc
added random body creation and friction reset functionality for boxes and circles in Box2DCharacterControllerTest . java to enhance test coverage
8015340 : [ testbug ] hotspot / flink / options / lightorder / testbadoptionvalues . java fail
removed redundant output checks for power of 2 and multiple of 8 in ObjectAlignment . java and Options . java to streamline code by elimin
added a method to extract the target package from the APK manifest and related classes to enhance instrumentation capabilities by allowing users to determine the target package
updated method signatures in DocHelper . java to improve code clarity and maintainability
updated the initialization of acceptableThrowawayItems to use an ArrayList instead of an array to improve flexibility in handling acceptable throwaway items
updated type casting for boolean , byte , char , short , int , and int invokeExact methods to ensure type safety by explicitly casting the result
removed unnecessary line breaks in MessageHandler . java to improve code readability and maintainability
refactor inflection methods for improved readability to enhance maintainability and ease of understanding for future developers
added methods to retrieve and set the locale in EvaluationContext to enhance locale management capabilities in the evaluation context
added import statement for Plugin in SummaryPrinter . java to utilize the Plugin class in the SummaryPrinter class
added a break statement in DrawerActivity . java to properly terminate a switch case in a switch statement
updated import statements in MongoQueryCreator . java to use wildcard imports and modified debug log message format to improve code clarity and ensure correct query
add xwork . loggerfactory system property to allow customization of loggerfactory
renamed test methods in AdminAddPeerWithP2PDisabledAcceptanceTest to include " onTargetNode " and " hasNoEffect
added " livenessStateHealthIndicator " and " readinessStateHealthIndicator " beans to AvailabilityContributorAutoConfiguration and AvailabilityProbesAuto
added a ConcurrentMap to manage PStore configurations and modified the return logic for local PStore retrieval to improve thread safety and ensure proper handling of
changed the access modifier of the deleteFiles method from public to private to restrict access to the method for better encapsulation
rename ` Provider ` class to ` ServiceProvider ` and update related methods accordingly to improve clarity and consistency in naming conventions
truffle : do n ' t throw unsupportedmessageexception if a field or method do n ' t exist .
added toolchain creation checks and updated related methods in AbstractCell , ToolchainProvider , DefaultToolchainProvider , and DaemonLifecycleManagerTest to
do not remove context that be already add to the engine if it be already remove .
( chore ) camel - check - descriptor : use contains instead of indexOf
updated linker flags handling in PrebuiltCxxLibraryDescription and related tests to ensure exported linker flags are correctly used to build shared libraries
replaced the ` onConfigurationChangedInternal ` method with ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` Re
updated generic type parameters in multiple classes for better type safety to enhance code readability and prevent unchecked warnings
abstractblockchain : get split point hash from the new block object instead of the old one .
[ rip - 10 ] fix defaultmessagestore . getphysic ( ) to return the commitlog path . ( #
remove try - with - resources for JvmGcMetrics and JvmHeapPressureMetrics in MicrometerMetricManager . java to ensure resources
add miss / found statistic for compaction log ( # 10601 )
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used
added methods to check and execute the system UI elements in AbstractLauncherUiTest to improve test reliability by verifying the " keyguard _
changed ` logger ` from ` static final ` to ` final ` in ` SessionRegistryImpl . java ` to enforce immutability of the
make sure removeall on empty cookie store return false
added a toString ( ) method to BonsaiValue and improved debug logging in BonsaiWorldStateArchive and BonsaiWorld
updated getText method in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to accept a CharSequence instead of String to
[ java ] unignoring a test for marionette , see http : / / bugzilla . mozilla . org / show _ bug
added a finally block to handle IOException during connection return to improve error handling and ensure proper resource management
renamed ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and updated related references to improve cl
added synchronization to the heartbeat executor thread pool in DbTxnManager . java to ensure thread safety when accessing shared resources
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce a new method ` wrapWithTracing
added an ` updateFirstLineShowing ( ) ` method to the ` TextArea ` class to fix drag - selecting text out of the
added new configuration directories for mapreduce operations in TestInformationSchemaWithPrivilege . java to ensure proper location of temporary and staging directories for mapreduce
refactor graphics configuration retrieval logic for clarity and efficiency to improve readability and maintainability of the code
tika - 3748 -- turn off legacy oom test in tika server
camel - 17850 : camel - core - optimize pipeline . process ( ) to reduce code duplication .
refactor PrintTagList . java to handle command - line arguments for parsing and displaying tags and states to improve user experience by providing clearer
updated the method from ` getFullyQualifiedName ( ) ` to ` toString ( ) ` in ` InsertDeParser . java ` and added a
http : / / issues . apache . org / jira / browse / amq - 4568 - fix test which check for eof
[ java ] startfromtruncatedrecordinglogtest . teststartfromtruncatedrecordinglog more robustly by wait for cluster ready
changed the calculation of the arc variable in LineBorder . java from an integer to a float to improve precision in drawing the rectangle by using a
added checks for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to ensure that the adapter handles cases where no galleryImages are available
replaced the method ` generateDeploymentId ( ) ` with ` resetDeploymentId ( ) ` in ` StandardChangeLogHistoryService . java
pdfbox - 4892 : rename fdf to interactive , a suggest by valerybokov
removed unnecessary boolean parameter from multiple methods in AlterTableAddConstraint . java to simplify the code and improve readability by eliminating unnecessary
camel - Quickfixj : introduce provisionalEngines map to store provisional Quickfixj engines to improve management of provisional Quick
added support for display zoom controls in RoboWebSettings to enhance user control over zooming behavior in the application
added corporea block , brick , and slab to the mod , and register them with the corporea spark . close #
refactor ConnectionFactory methods for improved readability to enhance maintainability and facilitate future updates
added EnableDisableMenuItems ( ) method to control the disabling of menu items in GpsMainActivity to provide user control over the menu
updated the message string resource for empty favorites and headlines in ExtendedListFragment . java to improve clarity of the empty list messages for
replaced multiple instances of @ ServiceRegistry . Setting with a single @ Setting annotation to streamline the code and improve readability by reducing
added auto - resize settings and column creation options to the MotorMountConfigurationPanel to improve UI responsiveness by preventing the table
updated LINE _ SEPARATOR from System . lineSeparator ( ) to System . getProperty ( " line . separator " ) in StringJoiner . java to
added getter and setter methods for creator and subject in POIXMLProperties , and implemented a test for document properties in TestPOIXMLProperties
reformatted the call to super . doStop ( ) in HandlerWrapper . java to improve code readability and maintainability
[ java ] do n ' t wait for the cnc file to be create if it do n ' t exist or be empty .
renamed ` Marker ` interface and ` Marker ` to ` Command ` and updated related methods accordingly to improve clarity and consistency in type constraints
added support for handling JMod files in ClassFileSourceImpl . java to improve compatibility and management of JMod files within the application
modified the ` TreeBackedElement ` and ` TreeBackedPackageElement ` classes to remove the ` PostEnterCanonicalizer ` parameter to
updated tokenRequest initialization in Saml2TokenGranterTest and UserTokenGranterTest to create a new instance with request parameters
updated method call from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure correct retrieval
added synchronization methods in ZKAssign and ZooKeeperWatcher classes to ensure proper synchronization of ZooKeeper nodes
added checks for EGL _ NO _ CONTEXT in GlUtil . java to ensure that the current context is valid to prevent runtime errors
[ drools - 7 ] avoid to remove the activation of a ruleflowgroup when it be active
added a return statement to HystrixDashboardConfiguration . java to ensure proper execution flow in the Hystrix dashboard functionality
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added a test for it in IoTDBPipeIT . java to ensure
added cleanup method to clientqueuestest to clean up resource
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl . getsignature ( ) ( # 2649
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated imports in GeoPointField , GeoPointTokenStream , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and GeoPointNumeric
added a new ` FakeBuildable ` class and updated ` OnDiskBuildInfoTest ` to use it for mocking the output file to
use item . isempty ( ) instead of itemstack . getitem ( ) in unusualbucket . getemptybucket ( )
rename ` path ` to ` timeseries ` in ` TSParser . java ` and update corresponding test cases in ` SQLParserTest . java `
modified the calculation of the velocity in TubeCalc . java to include a check for negative values to ensure that the velocity does not exceed the
replaced calls to ` getBucket ( ) ` with ` _ storage ` for blob management in ` GcsPinotFS . java ` to
replaced the blockCloseVertxByName call with a finally block in TestHighwayTransport . java to ensure proper resource management and prevent potential
added methods to create and recreate the history view in DbTriggerBasedHistoryDdl and PostgresHistoryDdl classes to improve database schema management
updated the test method from 2 to 3 in the CarrotClusteringEngineTest class to reflect the correct expected result from the clustering engine
added JUnit Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored because it needs to be rewritten
refactor ParserCacheCommand to use a new ParserStateObjectInputStream class and add validation for invalid data to improve serialization handling and ensure proper class
added null checks for ` changeLog ` and ` objectQuotingStrategy ` before setting it in ` ChangeSet ` and ` DatabaseChangeLog `
updated MetainfoParser method from ` parse ` to ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to improve
deleted the CsrfControllerAdvice . java file to the functionality was no longer needed in the project
added a method to quote the path list in the AntCompiler to ensure proper handling of file paths in the endorsed directories configuration
added scrim animation and updated background animation properties in Launcher and AllAppsBackgroundDrawable to enhance visual feedback during action screen off transitions and ensure
updated the type inference logic in TypeInferenceUtils and added new test cases in TypeInferenceUtilsTest to ensure correct handling of string types and validate
regenerate client with updated copyright year ( # 4382 )
added validation for Windows path types and corresponding test cases in WindowsPathParser and PathOps to ensure only valid paths are processed to prevent runtime errors
replaced InetSocketAddress with a default MulticastSocket instantiation in Promiscuous . java to simplify socket initialization by removing unnecessary InetSocketAddress parameters
updated writer and Query initialization in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
modify return statement in IndexColorModel to clone the nBits array instead of returning it directly to ensure that the original nBits array is not
changed the access modifier of ` deriveCollectorName ` method from private to protected and added tests for custom collector names in ` TestProfilerCollector `
datamongo - 2043 - fix type hint when write simple type .
added performance measurement to the factories initialization in ProxyMaker . java to enhance performance tracking during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
added exception handling for connection exceptions in TCPConnection . java to improve error reporting and provide more context for connection failures
refactor reinflateWidgetsIfNecessary ( ) method to call Workspace . reinflateWidgetsIfNecessary ( ) instead of Launcher .
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a file dialog to ensure that the right - click
* lwjglabstractdisplay now call display . processmessages ( ) when renderable be set to false and autoflush be set to true (
[ # 7770 ] instructorstudentlistpageuitest : add test for show a picture ( # 7771 )
added environment variable handling for onlyRun and method parameters in TestIgnorance . java to allow tests to be ignored based on environment variables
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature for better usability
updated the logic to handle null Pageable in QueryDslJpaRepository and added a test for null pageable in QueryDslJ
[ hotfix ] [ runtime ] add memorymanager . computememorysize ( fraction ) to check that the memory fraction be within the range of
increased the test timeout duration from 2000000 to 20000 in JMSPublisherConsumerTest . java and updated method calls in
refactor SnowballAnalyzer to improve code readability to enhance maintainability and facilitate future updates
updated previousIndex initialization and simplified internal batch handling in StreamingAggTemplate . java to improve code clarity and ensure proper state management during batch processing
refactor error handling for null checks in BytecodeParser . java to improve clarity and maintainability of error reporting
added a new method ` stream ( TableIdentifier < ENTITY > tableId , computeIntensityDefault ( ) ) ` to the ` StreamSupplierComponent
updated logging messages to clarify that a watched file is fully played and added retry logic for file moving to improve logging clarity and
updated method names and access modifiers in InjectorProxy , StandardInjectorProxy , and related classes for enhanced constructor accessibility to improve code clarity and
[ hotfix ] remove out . close ( ) from flinkstreamingcreatefunction
added unit tests for various SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest to ensure proper parsing and deparsing of
replace returning null with returning an immutable list instead of returning an empty list to ensure that the method returns an immutable list instead of null
updated the element in the string from " Deliberate error , to test CruiseControl ] " to include " Quality Distribution ,
added a ` websocketReconnect ` flag and modified connection handling in ` DeconzBridgeHandler ` , ` WebSocketConnection ` , and ` Dec
replaced ` setAttribute ` with ` removeAttribute ` for session attributes in ` AbstractProcessingFilter ` to simplify session management by removing unnecessary attributes
hbase - 25836 retry createtable ( ) in testregionreplicareplicationendpoint . testregionreplicareplication
added PmsConfiguration initialization to FormatRecognitionTest . java to ensure proper configuration for Pms during test execution
server : create data disk template only if it do n ' t already exist ( # 4327 )
updated test imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 instead of SpringBootTest to improve test
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated table and upsert statements to use ' metricVal1 ' instead of ' metricVal ' and added a new column ' metricVal1 '
added a check to ensure deleted document counts match and throw a CorruptIndexException for mismatch to improve error handling by providing clearer diagnostics when
add getloggername ( ) and logtrace ( ) method to siplogger . logexception .
updated the version number in FilamentFactory from 1.0 to 0.9 for staves w / no starting barline to ensure
set handleFileUploads to false in VertxPlatformHttpServerConfiguration and set it in VertxPlatformHttpEngineTest to disable file uploads handling
added a new test method to verify the CSRF protection matcher behavior with case - sensitive methods to ensure that the access denied handler behaves as expected
replaced static field references with instance variable references in HotSpotObjectConstantImpl . java to improve code readability and maintainability by redu
renamed the ` add ` method to ` addFrequency ` across multiple classes and updated references accordingly to improve clarity and consistency in method naming
fix fileio . withwindowing ( ) to avoid windowing .
made ` cteDefinition ` non - final in ` SqmCteStatement ` and updated the copy method in ` registerCopy `
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData for improved SQL result handling
updated the library command to include the root directory as a parameter to enhance the flexibility of library output based on the project ' s root directory
updated the angle slider from - 180 to - Math . PI in the RailButtonConfig panel to correct the slider positioning for better visual
adjusted the position of the encloser in OverlayRenderer . java and modified save handling in Saves . java to improve rendering accuracy and
added expressionLanguageSupported ( true ) to KerberosProperties . java to enable support for expression language in authentication process
removed unnecessary conditional checks and simplified translation and rotation methods in ThirdPersonRemoteClientSystem . java to improve code readability and maintainability by
updated the ` setupViews ` method to include a ` ScrimView ` as a parameter in the ` AllAppsTransitionController ` and
[ flink - 24936 ] [ state - backend ] add configuration option to disable periodic materialization
added a value property and its getter / setter methods to ProtocolParameter , and updated List and ParamTagHandler classes to utilize this property to
add unit test for chunking with head response
introduced a ` isBumped ` boolean variable and modified the ` parseDetails ` method to return a boolean indicating whether the router was
added a Content - Type header to the SwitchToPostInterceptor and updated the SearchRequestUnitTest to include this header to ensure proper handling of
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging to PhoenixResultSet for ignoring setFetchSize ( " rows " ) and replaced SQLFeatureNotSupportedException with a warning message to
added multiple instances of AndroidNet initialization in AndroidDaydream . java to ensure proper resource management and avoid potential memory leaks
updated parameters in the LLRealtimeSegmentDataManager class to use the correct maximum row count to ensure accurate tracking of segment data consumption
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
removed the unused PrefixTreeCodec class from TableMapReduceUtil . java to clean up the code and improve readability
added a boolean flag ` inflationFailed ` and modified the back press behavior in ` DesignerActivity ` to handle inflation failures and ensure
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future updates
loweringphase : use schedulephase instead of controlflowgraph to compute control flow
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to provide clearer feedback
makefile : handle line endings with \ r \ n or \ \ \ t
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( ) ` in ` ReadTask . java
replaced ` super . setTransformRefresh ( ) ` with ` refreshFlags | = RF _ TRANSFORM ` and ` setBoundRefresh
make sharedmethod uninterruptible instead of guarantee safepoints .
added framebuffer size callback functionality to LwjglWindow to handle window size changes to improve responsiveness and responsiveness of the
updated animations for centering and offscreening tasks in LauncherAppTransitionManagerImpl . java to improve animation responsiveness and user experience
updated ` LiteralNode ` to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` and modified related methods to enhance type safety and
added file length calculations and set length methods in CompoundFileWriter , FSDirectory , and IndexOutput classes to ensure accurate tracking of file pointer and
updated manifest handling and added new test imports in AndroidNdkScriptGenerator , AntScriptGenerator , and LwjglDebugStarter to
camel - 14850 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource
added permission check for " * " role in RuleBasedAuthorizationPlugin and updated related test cases in TestRuleBasedAuthorizationPlugin to enhance security by
updated ZookeeperClientServerRegisterRepository to improve URI handling and add event type management to enhance clarity and functionality of register URI events and ensure
refactor methods in ReturnsDeepStubs for improved clarity and structure to enhance code readability and maintainability by using more descriptive
updated call to toByteArray ( ) to handle empty contract values to ensure that the method returns an empty byte when the contract is empty
print bibentry date in debug log instead of string concatenation ( # 2321 )
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and changed the PBE algorithm string to " PBEWith
tmi - tiff : fix offset out of range exception .
added validation for job parameters and improved error message handling in CommandLineJobRunner to ensure valid parameters are provided and provide clearer error messaging for
updated test assertions in SmtpTests and MailTests to remove newline characters from the content to ensure the test accurately reflects the expected output
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve code readability and reduce redundancy
replaced ` synchronized ` with ` AtomicLongFieldUpdater ` for sequence ID handling in ` LongSequenceGenerator ` to improve thread safety and ensure
added a new file ` Test . java ` containing a class ` Test ` with a static method ` sum ( ) ` to calculate the sum
updated ` minSdk ` and ` maxSdk ` annotations to ` R ` , modified fields in ` WifiUsabilityStatsEntryBuilder `
added a new file ` Solution . java ` containing a class that checks if two integers do not exceed a specified key to implement functionality for performing
use concurrenthashmap instead of map in table . patch by jbellis ; review by stu hood for cassandra -
refactor taskbar recreation logic based on screen size and orientation changes to improve readability and maintainability of the code
refactor SyncFutureCache class to improve synchronization handling to enhance performance and maintainability of the synchronization mechanism
updated default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and changed the latest version
[ java ] Uselessstringvalueof : fix handling of literal and name
added a new test method ` testEllipseNoseconeDrag ` in ` SymmetricComponentCalcTest . java ` to verify the functionality
add targetmaxtypeshardsize to hollowproducer to support large target state
added new version identifiers " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBack
refactor CompilationTask class to improve code structure to enhance maintainability and readability of the compilation process
updated assertions to verify that the database location is not shown in test mode and improved parameter handling in DDLTask to enhance test reliability by
added an executor for clearing database change log tables in AbstractJdbcDatabase to ensure proper cleanup of database change logs during operations
added version handling and updated URL construction in RestClient and CallPath classes to improve versioning and ensure correct URL generation based on call specifications
updated error handling and added closed check in PhoenixDriver . java to improve error reporting and ensure proper resource management of the driver
replaced null return with UnsupportedOperationException in TouchApp , ToolBar , and ToolBarMenu classes to improve error handling for unsupported operations
added test setup and teardown methods in ConflictsResolveActivityIT , FolderPickerActivityIT , and UploadFilesActivity to ensure proper resource management and
[ gr - 21212 ] do not replace input for deoptimization when in dev mode .
camel - 6641 : fixed stringhelper . removeleadingandendingquotes to return the original string if the copy length be less than 2
refactor type handling in JpaQueryCreator and add NOT _ CONTAINING case handling in ParameterMetadataProvider to improve code clarity and
do n ' t retry account authentication if it be too long .
added a dispatch statement to handle message copying in P25MessageFramer to improve message handling and ensure proper dispatching of messages
added null checks for handler in WebSocketImpl . java and implemented a test for clearing client handlers in WebsocketTest . java to ensure proper handling
( scott phillips ) change test to use indexobject . type instead of string .
updated widget padding calculations to use default padding values from the Launcher class to improve flexibility and maintainability of widget padding configuration
added a method to hide all apps in the Taskbar UI and updated the close overlay method in the BaseActivityInterface to improve user experience by
removed synchronization from the launch method and replaced Thread . sleep with launcher . join to improve thread management and ensure proper synchronization
updated the calculation of the point in the JavaSEPort class to correctly position the event based on the canvas ' s position to ensure the event
replaced ` notificationManager . notify ` with ` startForeground ` and added a conditional check for ` toUpload ` to improve code clarity
added static final tests for public and private static final classes in ExcessivePublicCountTest . java to ensure correct behavior of static final methods
added a configuration to set the retry number for the HBase client in TestThriftHBaseServiceHandler to limit the number of retries for improved
change log level of half offset from info to debug
added exception handling for FileNotFoundException in ResourceUtils . java and changed log level in AbstractCipherExecutor . java to trace in AbstractCipherExecutor . java
added BittrexTickersResponse class and integrated it into BittrexMarketDataServiceRaw to retrieve tickers from the Bittre
hhh - 14611 avoid unchecked cast in entityentry . getenumconstants
refactor register and unregister session method signatures to use Object instead of Class to improve type safety and maintainability of session management
updated Unicode character array to include additional Unicode characters to ensure accurate representation of Unicode characters in the file system
added stylesheet management functionality to ResourceService and updated related classes to utilize ResourceHttpContent to enhance stylesheet handling capabilities and improve resource management in the
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
replace ` ObjectParameterStrategy ` with ` PointerParameterStrategy ` in ` X86MethodGenerator . java ` to ensure proper handling of pointer parameters
updated the condition to check for CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with CockroachDB ' s
removed the condition checking for the " isEnum " variable in ObjectStreamClass . java to simplify the logic for handling string types
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and add a new SymbolNotFoundError class to improve error handling by providing a more
added conditional logic to handle pseudo fields in BinaryResponseWriter to improve document retrieval based on whether only pseudo fields are returned
added handling for WebSocket PING and PONG cases in WebSocketImplBase . java and a corresponding test in WebSocketTest . java to improve WebSocket
updated the NON _ IDENT _ ESCAPES string to include an additional character to ensure proper handling of special characters in regular expressions
refactor DnsResolverProvider to use wildcard imports and enhance DnsCache configuration options to improve code readability and allow for more flexible cache options
added a conditional annotation to check for the presence of MessagingTracing class to ensure that tracing functionality is only enabled when the appropriate class is present
mondrian : fix quote identifier for ` ` customer ' ' in db2
updated import statements across multiple classes for consistency and clarity to improve code maintainability and readability by aligning import statements with updated event handling
added a check for the ' / ' character in XMLLightweightParser and set the status to VERIFY _ CLOSE _ TAG to ensure proper
set visibility to GONE in TouchCharInput . java to improve user interface responsiveness by removing unnecessary visibility control
added null check for the current user before comparing its ID to prevent potential NullPointerException when accessing the current user
modified JSObjectLinker to conditionally set a slot based on the index value to ensure that the slot is only set when the index is
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to improve suffix handling and resource management to enhance code clarity and
marked SecurityConfig as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added @ Deprecated annotations to multiple Java files to indicate that these methods are obsolete and may be removed in future versions
deleted the JoglDebugAdaptor . java file and refactored its usage in RocketFigure3d and GuiceStartup .
added toString methods in ExtraFieldPropagation and AWSPropagation classes for better string representation to enhance readability and usability of the class for better debugging
added PendingIntent import and initialized mNotification . contentIntent in FileDownloader . java and FileUploader . java to facilitate notification
refactor nextOrd method implementation in Lucene80DocValuesProducer to a separate set method to improve code readability and maintainability by redu
updated DateTimeFormatter class to improve formatting to enhance readability and maintainability of the code
removed unnecessary try - catch block when retrieving desktop properties to simplify the code and improve readability by directly using the class name
added null checks and validation for administrator credentials in KerberosOperationHandler to ensure that both principal , password , and keytab are provided to prevent
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and adjusted width usage based on device profile conditions to improve
use pgl . beginrender ( ) instead of pgl . endrender ( sketch . sketchWindowColor ( ) ) in PSurfaceJO
refactor hashing logic in Hashing . java to improve code readability and maintainability
modified the accept method in FileSenderFactory to use a folder name and a file name instead of a string to improve clarity and accuracy in
added a content description string resource to the UserInfoDetailsItem and updated the addToListIfNeeded method to include it to improve localization support for user information
removed redundant null check for type in J . java to streamline code by eliminating unnecessary null checks
updated the activity start delay from 500ms to 800ms to improve responsiveness during activity transitions
added a static variable WEBAPP _ HOME to SolrJettyTestBase and updated its usage in JettyWebappTest to improve code read
removed unnecessary calculation of diameter and reset selectedMotorSet to null and clear selection to streamline the motor selection process and improve code clarity
added import for BufferUtil and used it to clear the buffer to fill to ensure the buffer is properly initialized before use
fix notification rule not trigger when create a device via rest api
changed configuration property from " authorization . ldap . groupBase " to " authentication . ldap . groupObjectClass " , " authorization . ldap .
http : / / issues . apache . org / jira / browse / amq - 4568 - fix durableontransient test failure
[ hotfix ] [ test ] fix flakiness in bulkslotproviderimpltest
improve error handle when client can not connect to server
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
updated Quartz2Adapter . java file to improve functionality and maintainability of the code
added a try - catch block around the lookup execution in SulongLibrary . java to handle potential IllegalStateExceptions by returning false when the lookup
update Spring Security schema version from 6.2 to 6.3 in multiple classes to ensure compatibility with Spring Security 6.3 features and impro
updated ` ConfigMappedNameResolverFactory ` , ` DiscoveryClientNameResolver ` , and ` ConfigClientNameResolverFactory ` to use ` Args
added conditional handling for non - empty annotations and introduced a method to determine earlier position to ensure proper positioning of annotations while maintaining compatibility with
added " com . sun . naming . internal . " to the CheckPackageAccess . java file to ensure compatibility with internal package access requirements
changed the ' strict ' variable from false to true in StaxEventItemReader . java to enable strict mode for event processing
added an ` isExhausted ` array and modified the ` readPartition ` method to include it in the ` isExhausted `
refactor ActionResetingPool class to improve code readability to enhance maintainability and facilitate future updates
added a check for XY mode before converting light state to HSB type to ensure only valid light states are processed in XY mode
refactor ` getFolderCreationRadius ` and ` getReorderRadius ` methods to accept a target cell array and update related logic to improve flexibility
added loading dialog functionality to FileOperationsHelper and removed loading dialog from FileDetailFragment and OCFileListFragment to improve user experience by ensuring loading
added null check for uigestureFile before loading logs to avoid potential NullPointerExceptions when accessing uigestureFile
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for name comparisons to ensure consistent behavior across different locales in test cases
added a line to set listeners in the XmlSuite result to ensure listeners are properly initialized for the result
added a new method ` loadWithNewGlobal ` and modified existing methods in ` Global ` , ` Context ` , and ` ScriptFunctionImpl
added JSON serialization and deserialization methods to StarTreeIndexSpec class to enable handling of StarTreeIndexSpec objects in JSON format for better
added ObjectPostProcessorConfiguration import and modified HttpSecurity configuration to enhance security configuration options for object post - processing
replace occurrences of " \ " with a single quote in multiple files to ensure consistency in file path formatting across the application
[ drools - 7 ] fix in operator to work with null
added import for FieldCache and modified commit and purgeFieldCache method calls in TestDistributedSearch . java to avoid FC insanity during
added test for message boundary event on subprocess and inside subprocess
added ` resolveStaticCall ` method to ` ProgramManager ` , ` PointerAnalysisImpl ` , and ` JimpleProgramManager ` classes to
http : / / issues . apache . org / jira / browse / amq - 4682 - allow to configure the number of
refactor slot handling in Secmod . java to use constant slot IDs instead of a boolean flag to improve code readability and maintainability by
added alignment parameter to the add method in Layout . java and modified return type in GdxRenderer . java to enhance layout management by allowing alignment
[ hotfix ] [ test ] disable unalignedcheckpointitcase for now
added MIDI class imports and a conditional check for class types in JDK13Services . java to ensure proper handling of non - MIDI types
added a check to prevent duplicate keys in keywordToReference to ensure that only unique keys are processed to avoid redundancy
( chore ) camel - core : fix classcastexception in multicastprocessor
removed unused methods from SegGraph , SegToken , and WordDictionary classes to improve code clarity and reduce unnecessary complexity
escape special character in telegraf metric name ( fixes # 644 )
add udp port support to member serialization . add udpport to memberimpl .
rename ` OperatorMulticast ` class to ` OperationMulticast ` across multiple files to improve clarity and consistency in naming conventions
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for the send operation to
added a try - finally block around the node start process in VertxTestBase . java to ensure proper resource management and prevent potential memory leak
hhh - 14836 avoid leak eventlistenerregistry in sessionfactoryserviceregistryimpl
simonstewart : refactoring the test to use the jwt _ token from local storage instead of the home page
refactor IValueUtilsTest to replace PtNDArray with NDArray and add new test methods for tuple and map of tensor functionality to improve
added a TaskStackChangeListener to manage task stack visibility in RecentsView to ensure proper handling of pinned stack animations during activity state changes
itext - pdf : fix bug in defaultsplitcharacter . checkdatepattern ( ) , add test .
camel - 14850 : camel - cxf should use source code generate configurer to avoid reflection configuration .
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
added logging for playTime and adjusted playTime calculation in LauncherAnimationRunner . java to improve debugging and ensure correct playTime is set based
added a conditional statement to handle exceptions based on the BailoutOnException option to improve error handling by allowing configuration of bailout behavior based
changed ` signup ` and ` passwd ` to null in ` Links . java ` and updated corresponding assertions in ` IdentityZoneConfigurationBootstrapTests
[ hotfix ] rename slotprofile . previousexecutiongraphallocations to slotprofile . reservedallocations
replaced the use of SimpleDateFormat with a dedicated method for retrieving the only format to improve code clarity and maintainability by centralizing format retrieval
geotiffreader : use nodatacontainer to store no data in the rendered image
sulong : fix npe in sulongwritenode when source section be not available
replaced ` out . toString ( ) ` with ` out . toByteArray ( ) ` in ` JdbcExecutionContextDao ` and ` DefaultExecution
replaced ` client . blockUntilConnected ( ) ` with a ` CountDownLatch ` for handling connection state transitions to improve responsiveness
added null checks to array type handlers in ArrayTypeHandler . java to ensure proper handling of null values to avoid potential NullPointerExceptions
replaced the ` RegexpTunnel ` class with a direct access to the ` prefix ` field in the ` REProgram ` class to simplify the
updated the application picking method to use the Application class instead of null to ensure compatibility with the updated application type handling
[ drools - 7 ] avoid npe on mutable global when remove a rule from a context
updated AssetIssueActuator to use TransactionUtil for validating asset names , URLs , and descriptions to improve validation logic and ensure valid asset names and
make sure copy paste do n ' t work for textfield
updated action and status messages in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , LGWebOSHandler , and
replaced method calls to set seed , active node , and trust nodes with method calls to addAll in TronNetService . java to stream
added error handling and improved logging in BaseTokenStreamTestCase . java to enhance debugging capabilities and ensure proper thread management during tests
log4j2 - 1343 allow trigger policy to modulate time interval
added item click functionality to ` ShadowAdapterView ` and removed it from ` ShadowListView ` to streamline the code by eliminating
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added afterMethodScope method handling in GraphDecoder and PEGraphDecoder to ensure proper execution of after method scopes during graph decoding
updated HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and refactored attribute retrieval to improve clarity and maintainability of
added a test to verify the change of the service name in Zipkin using manually provided names to ensure that the tracer correctly changes the service name
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory , and updated spool mode handling in Javac
renamed ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and updated references accordingly to improve clarity and consistency in
increased the timeout duration in the tryLock method from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to allow more
updated ConfluentSchemaRegistryDeserializerProvider to include a default cache capacity and configurations to enhance flexibility in handling schema registry configurations
rename JCheckBox ' remind ' to JCheckBox ' checkAtStartup ' and update its tooltip and selection logic to improve clarity and consistency
added new methods for key and value strength checks , and refactored the NodeFactory enum to use these methods to improve code readability and
hhh - 13434 - fix a bug where a proxy can not be transient if it break the foreign key validation
added static final methods for retrieving and setting proto and its checks in ScriptObject . java to improve code readability and maintainability by centralizing
updated the default read mode from " heap " to " mmap " and modified the ImmutableSegmentLoader to include logging for segment loading success to enhance
added import for ByteArrayTemplate and integrated it into ArrayTemplateBuilder to enable byte array handling in the template implementation
added Hipchat properties to SamlServiceProviderProperties and created CasSamlSPHipchatConfiguration class to enhance SAML service provider configuration for better
changed ` commandRegistryUrls ` from ` List < URL > ` to ` Set < URL > ` and updated resource retrieval logic to improve performance
updated logging messages in ConstraintSecurityHandler to include the current context to improve clarity of warning messages regarding uncovered HTTP methods
removed unnecessary checkLoggedIn ( ) method call in SvnRepositoryConnector . java and set loggedIn to true in SftpRepositoryConnector . java
fix for http : / / issues . apache . org / activemq / browse / amq - 2698 - remove the lazy
api : fix typo in vmwareresource . java ( # 4568 )
refactor Timers class for improved performance to enhance efficiency and reduce execution time
replaced the constant ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in the ` DefaultDefectReporter `
removed deprecated token types and updated constructor calls in UAX29URLEmailTokenizer to ensure compatibility with the LUCENE _ 31 version
removed unnecessary Map implementation from ScriptObject class to simplify the class structure and improve code readability
updated EventBusMetrics class to improve event handling metrics to enhance performance and accuracy of event processing metrics
( scott phillips ) change to use i18nutil . getepersonlocale ( ) instead of create new locale object
updated JaversTransactionalDecorator to implement InitializingBean and modified the ensureSchema method to be called after properties are set to ensure schema initialization
removed null check for pgTypeName before adding it to the pgNameToSQLType map to simplify the code by eliminating unnecessary null checks
added multiple server settings to the ScopedHandlerTest class to ensure proper server management during tests
fix calltimeoutexception in waitnotifyserviceimpl and calltimeoutexception in invocationimpl .
updated the check for empty password in RestLoginProcessingFilter to ensure that the username and password are not blank before proceeding with the login process
updated permission node comparison from an empty string to a wildcard string in CommandMap . java to allow for wildcard permissions in the permission node validation
rename encoding variable to sourceCharset and update related methods for clarity to improve code readability and maintainability by using a more descriptive variable
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and related methods to
added imports for GenericComponentModifier and FlightConfiguration in GeneralOptimizationDialog . java to streamline simulation modification process and improve code clarity
camel - 16400 : add option to reload all camel context when context reload be enable .
updated logger configuration settings in CommonTestUtils . java to ensure consistent logging behavior and improve clarity in logger configuration
refactor PrologSizeSanityCheck class to improve code clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a check to ensure ` nonCloseable . markSupported ( ) ` is called before invoking ` invokeSafely ( ) ` in `
( chore ) camel - test - infra - neo4j : do not run the test if the setting be disable ( #
fix ( debug ) : save and restore default value for character health and movement
[ type : fix ] fix the bug of randomloadbalancer . random ( ) when the weight be small than the total weight . ( #
refactor GsonParser to simplify cache string handling and improve timestamp validation to enhance code readability and ensure correct retrieval of time relative to the request
updated parameter descriptions for sorting and direction in ApacheHttpClientMediaWikiApi . java to improve clarity and maintainability of sorting functionality
replaced multiple calls to checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) in AbstractSharedSessionContract and SessionImpl classes to
replaced ReentrantLock with PipeTaskCoordinatorLock and added a new PipeTaskCoordinatorLock class to manage thread locking to improve thread safety
modified the handling of instrumented Jars in DefaultSdkProvider to conditionally use preinstrumented jars based on configuration to improve flexibility in
changed the conditional check from " if ( ! isSilent ) " to " if ( isSilent ) " in ExecDriver . java to ensure
added checks for unsupported attributes on dynamic fields in IndexSchema . java and created a corresponding test case in BadIndexSchemaTest . java to ensure
do n ' t randomly read repair if digest mismatch
replaced ` ImmutableSortedSet ` with ` Iterables ` and added a test for include directories in ` PrebuiltCxxLibraryDescriptionTest `
refactor AdaptableX509CertSelector to enhance null checks for startDate , endDate , isSKIDSensitive , and isSNSensitive , and
log4j2 - 1343 nosqlappender should use abstractappender instead of stringhelper to parse the buffer size .
mark the GuiScreenEvent class as deprecated to indicate that this class should no longer be used in 1.16
added methods to add and remove categories from a list in CategoryEditSearchRecyclerViewAdapter to improve category management functionality in the user interface
# 169 - enh : add servercachetype parameter to servercachecache . getcache ( string ) ... for more flexibility
updated RocketComponent to clear massOverriddenBy , CGOverriddenBy , and CDOverriddenBy from an iterator to ensure
refactor JavaCompilerService to use post instead of doCompile and improve error handling in JavaDiagnosticProvider to ensure proper closure of resources and provide
refactor Task class to use a Supplier for task execution to improve code readability and simplify the task execution process
refactor executor initialization in WanReplicationServiceImpl to use a synchronized lock to improve thread safety and prevent concurrent access issues
added null checks for sd and user name in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
refactor code to simplify the execution of tasks in LocalServiceRegistryClientImpl and RemoteServiceRegistry to improve code readability and maintainability by
added a new test class ` FilesTest ` and a static method ` delete ` in ` Files ` to validate file deletion functionality to ensure that
removed exception handling for socket close calls in ServerSocketAdaptor and SocketAdaptor to simplify the code and improve readability by eliminating unnecessary exception
updated class name check in SSLLogger to use Logger instead of " java . lang . System " to ensure correct class identification for better logging functionality
refactor the way working directories are added to the current working directory list to improve code readability and maintainability by using a dedicated method for
added a null check for the ` cn ` variable in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure
changed the visibility of the ` final static String ` field from public to private to restrict access to the field while maintaining encapsulation
updated Java configuration options for CSV and JSON types in SimplePostTool . java to streamline the configuration for better readability and maintainability
apps - 2207 add test for max and min command with symbolic toggle
refactor client container initialization and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and
change condition from ' && ' to ' | ' for checking open with application type to ensure proper handling of cases where the type is not set
added teardown methods to cleanup web application context in multiple test classes to ensure proper resource management and prevent memory leaks in tests
added search functionality by introducing a method to retrieve search strings based on query parameters to enhance user experience by allowing users to search for resources based
removed the visibility setting for the neutral button to ensure the button is visible when necessary
( scott phillips ) improve performance of itemservice . countitems and itemdao . countnotarchiveditems
updated SQL create table statements to include quotes for column and table names to ensure compatibility with SQL standards and improve readability
added exception handling functionality to CheckTokenEndpoint to improve error management and logging for OAuth2 exceptions
updated multiple Java classes including ` XYDrawableAnnotation ` , ` IntervalCategoryItemLabelGenerator ` , ` IntervalCategoryToolTipGenerator ` , ` XY
updated identity zone handling and improved test assertions in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to enhance test clarity and ensure
updated ToolTipManager dismiss delay from 20000 to 10000 in ExtractionModelFrame and DataBrowser classes , and added tooltip text in SQLConsole
update warning message and version for single test method with junit 5
modified exception handling in WorkerShellStep to throw a RuntimeException instead of HumanReadableException to improve error handling for communicating with external processes
[ hotfix ] [ stream ] move @ experimental to flink . annotation
pdfbox - 4071 : fix typo find by codespell on fossies . org , improve javadoc
added a check to prevent indexing when the index exceeds the size of the items list to ensure proper handling of cases where the index does not exceed
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure correct expression type handling in tests
added confirmation option to the DebugPaste class to enhance user experience by allowing confirmation when attempting to paste data
replaced calls to ` get ( ) ` with ` orElseThrow ( ) ` for endpoint retrieval in multiple configuration classes to improve error handling by
ggb - 1181 fix for rabbit menu ( rabbit menu do n ' t work in web )
updated ` Arg ` class to ` AbstractGoBinaryDescriptionArg ` and refactored related imports in ` GoBinaryDescription . java ` to
added a check for the existence of the application ' s environment configuration in Jooby . java to ensure that the application ' s environment
replaced ` RetryListenerSupport ` with ` RetryListener ` in multiple classes and created a new ` SecondDummyRetryListener ` to simplify the
print counter count with decimal instead of nan ( fixes # 498 )
made email and author fields final and added a constructor to the Contribution class to enhance immutability and prevent unintended modifications to
replaced a loop with a do - while statement in JUnitFormatter . java to improve readability and maintainability of the code
refactor the initialization of the ' elements ' variable to use a local variable instead of a local variable to improve code readability and prevent potential
updated exception messages in StaxEventItemReader to include the resource URL and improved test assertions in StaxEventItemReaderTests to enhance
improve testmultirenderendtarget so it do n ' t use geometry .
updated clientResult assignment to handle null currentProfile and added a debug log message to improve robustness of client retrieval and provide clearer feedback when
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
added imports for BigInteger and DSAParameterSpec in KeyStoreManager . java to enhance security parameters for key store operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape ` and `
added engine version setting to process definition in BpmnDeployer and its corresponding test in BpmnDeployerTest to ensure correct engine version is
updated Velocity property names and settings in SpecificCompiler . java to improve clarity and consistency in resource loader configuration
do n ' t run centrypointsnippets if the current thread be not attach .
added null check for the map before accessing its values in GenericUDFMapValues . java and created a test for null maps in TestGeneric
rename " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to improve clarity and consistency in naming conventions
added configuration properties for oil well generation rate and enable oil spouts in BCEnergyConfig . java and updated OilGenerator .
added a cleanup mechanism for the " . clean - me " file in the ImportContext and updated JobQueue to check for it to ensure the
improve error message when memoryrealm . readxml fails
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code by eliminating unnecessary dependencies
updated ZipConstants and ZipConstants64 to include new ZIP constants and import it to ensure compatibility with the latest ZIP standards and improve code organization
refactor file handling in ZipFileSystemProvider to improve error checking and file existence checks to enhance robustness by ensuring only valid file systems are created
replaced ` Box . createHorizontalStrut ` with ` Box . createHorizontalGlue ` in ` IfControllerPanel . java ` to
updated connection initialization in FailoverUpdateURIsTest . java to ensure proper database connection setup
added Gson @ SerializedName annotations for baseUrl , mirrorsList , and repoId in ServiceOsSpecific . java to enable better serialization and deserialization
add databaseadapter . deletebook ( ) to delete database entry only when the book be delete .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
corrected the calculation of response message size in AbstractAjpProcessor . java to ensure proper alignment of response messages during processing
do n ' t stop the web app context if the admin server fail to start
removed the unregisterHandlers ( ) method from WebSocketImplBase . java to streamline the code by eliminating unnecessary synchronization
added configuration options for device ID transformation method , enabling ID table and log file configurations in IoTDBDescriptor . java to enhance flexibility and
updated the number of documents in ExitableDirectoryReaderTest from 2000 to 100 and changed the expected result in assertions to accommodate a new
updated the condition for determining mockTsp from " = = null " to " ! = null " to ensure that the mockTsp is
refactor script handling in multiple classes to use a dedicated witness script variable to improve code clarity and maintainability by centralizing script creation logic
updated the expression pattern in IndexSchema . java to include " / schema / types / fieldType " to ensure compatibility with additional schema types in the
updated completer logic in Completers . java and added OptionCompleterTest . java in OptionCompleterTest . java to enhance completer functionality
corrected the formatting of the ListObjectsRequest initialization in S3Utils . java to ensure consistent code style and improve readability
[ iotdb - 5597 ] fix npe in iotconsensus when selfpeerid be null ( # 5598 )
refactor file upload logic into a separate method ` UploadFile ` to improve code readability and maintainability by reducing duplication
updated the alpha transparency of the reply button in TweetFragment to enhance the visual appearance of the reply button for better user experience
added mocking for ` AccessLogContext ` and updated expected timestamp formatting in ` AccessLogSupportTest . java ` to improve test reliability
update file path in MaryCacheTest . java from " testfiles - deleteme " to " tmp / testfiles - deleteme "
removed null checks for subscribers and simplified the return statement for better readability to streamline the code and improve performance by eliminating unnecessary null
added null check for marshaller in AbstractSamlObjectBuilder and removed unused imports in AbstractSaml10ResponseView to improve error handling and eliminate unnecessary dependencies
replace printStackTrace ( ) calls with LogUtil . warn ( ) in DataBrowser . java to improve logging consistency and enhance error handling
added a check for the existence of the assets directory in dev mode before processing assets to ensure that only non - existent assets are processed in the
[ hotfix ] [ runtime ] update rocksdbkeyedstatebackend to use writeoptions for put operation
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to standardize format
make dijkstrabi request hint default to ` ` no instructions ' '
use secp256k1 and altbn128 native by default
rename DuclsSandboxTest to SandboxTest for consistency to improve clarity and maintainability of the test class
camel - 1745 : do n ' t log a warning if we can not process the message
changed the visibility of the forwardPropagateTree method from package - private to public to allow access to the method from outside the package
updated the group by expression in JDBCExample . java to include additional time range parameters to ensure accurate counting of results based on time range constraints
[ mng - 5352 ] warn user that $ { project . basedir } be not support during profile activation
refactor Style class for improved readability to enhance maintainability and ease of understanding for future developers
added zoom functionality and an onKeyDown method to handle back key events in ShareActivity to enhance user interaction by allowing back navigation to the zoom
added a conditional check to skip processing for deprecated fields in Json . java to improve efficiency by avoiding unnecessary processing for deprecated fields
added animations for showing and hiding the send layout in LauncherFragment . java to enhance user experience by providing smoother transitions during layout
[ hotfix ] fix checkstyle violation in util / utils . java
added Progressable parameter to multiple methods in Utilities and related classes to enhance progress tracking during file operations
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove a contribution from the panel by its contribution in ContributionListPanel . java to ensure proper cleanup of contributions and maintain UI consistency
rename ` @ Component ` to ` @ Component ` in ` BareMetalTemplateAdapter ` and ` HyervisorTemplateAdapter ` classes to
added a default value for dPath if it is empty to ensure dPath is set to the user ' s directory when it is not explicitly
defaultaudiosink : set default sampleRate if format . no _ value
log4j2 - 1343 log4j2 - 1344 improve mapfilter to avoid unnecessary call to getdata ( )
refactor VerificationInOrderWithCallsTest to improve test clarity to enhance readability and maintainability of the test code
[ fix ] quaternion . setfromaxis ( axis . z , axis . x , axis . y , axis . z ) do n '
corrected a typo in the constant value from " colelction . delim " to " collection . delim " to ensure consistency in the
add a test to verify that the first listener state be correctly connect at start .
# 5355 - fix documentation for method and union type
replaced direct calls to ` SystemProperties . getBoolean ( SUPPORT _ ONE _ HANDED _ MODE , false ) ` with a private
added onDetachedFromWindow ( ) method to manage asynchronous tasks in AppsCustomizePagedView to ensure proper cleanup of running tasks
added support for a dictionary resource in the MorfologikAnalyzer , MorfologikFilter , and Morfologik
removed the count variable and adjusted exception handling logic in ResultSetTest . java to streamline test code by eliminating unnecessary count counters
changed the initialization message from " debug " to an empty string in GradleBuildService . java to simplify the message for better clarity
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` and added ` preventedByMVCC ` to manage exception handling to
updated tooltip text handling in ComponentTree and ComponentTreeRenderer classes to improve code readability and maintainability by consolidating tooltip text logic
increased the timeout duration in the await statement from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for
update deviantart ripper to bypass the age gate if no username / password provide .
replaced KNOWN _ GOOGLE _ SIGNATURES with GOOGLE _ PLATFORM _ KEY and GOOGLE _
updated method call from ` solutionBusiness ` to ` createSolutionBusiness ( ) ` in ` ImportDirSolveAllTurtleTest .
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes for better user experience
added emailDescription handling in EntityGroupKeyContentFormatter and updated detection description in TestEntityGroupKeyEmailContentFormatter to include a test description for
updated the method call to use ' data . remove ( sel ) ' instead of directly calling ' remove ( sel ) ' to improve code cl
modified language retrieval logic in Locale . java and added error handling in LocaleTest . java to improve robustness of language retrieval and ensure proper error
refactored ChangeLogParser usage and refactored UpdateVisitor creation in Liquibase . java to improve code readability and maintain
added a check to return early if the screen is pinning is active to optimize performance by avoiding unnecessary processing when the screen is pinning
added customizable text for no chart data in Chart . java to improve user experience by providing clearer and more descriptive text
added synchronization to the ` Http1xServerResponse ` , ` Http2ServerResponseImpl ` , and ` HttpTest ` classes to ensure
refactor chunk handler logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
added " : scheme " header to multiple headers in Http2TestBase . java and updated test header limits in TestHttp2Limits . java
fixed - redissonlocalcachedmap . getall ( ) and getallvalues ( ) method return cached value if storemode = localcache
camel - 16400 : fix npe in jpa component when use jpa endpoint . thanks to stephan siano for
updated the jumpSpeed variable from fallSpeed to jumpSpeed in PhysicsCharacter . java to ensure the character ' s jump speed is correctly
added a condition to check if reparsedFunction is null before processing to ensure that the function is only processed when reparsedFunction is not null
renamed variable ` log ` to ` logger ` and updated related methods for better clarity to improve code readability and maintainability by using
added deprecated methods for retrieving HTTP and HTTPS URI segments in FileUploadDownloadClient . java to signal that these methods should no longer be used and
updated trackingObj to include a filter parameter to enhance tracking functionality by allowing filtering based on specific conditions
( chore ) camel - juel : add miss test for invalid expression
added a range check for the alpha variable in RecentsView . java to ensure the alpha value is within the valid range of 0 to
updated string replacement syntax in ManifestReversion . java to ensure proper formatting of version strings for import packages
refactor DataSyncConfiguration class to improve synchronization mechanism to enhance performance and maintainability of the data synchronization process
added import for JavaSnippetRepository and initialized it in JavaLanguageServer . java to facilitate the creation and usage of Java snippet repositories
added a loop to update time buckets in the StarTreeRecordStoreCircularBufferImpl class to ensure correct handling of time buckets based on the
[ java ] update chromedriver download url to the storage googleapis . com index . html
( chore ) camel - pgevent : use preparedstatement for database operations
updated import statements in FeedParser . java from sun . syndication to com . rometools . rome for SyndFeedInput
added Content - Length header handling in TransferCompletionHandler and updated NettyAsyncHttpProvider to use this map to ensure accurate tracking of total transfer
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
removed the constructor from EnhancedRuntimeException class to simplify the class structure and improve code readability
[ log4j2 - 1343 ] socketappendertest do n ' t swallow interrupted exception
( chore ) camel - event - admin : remove unused builder
added exception handling for NoSuchMethodException and IllegalAccessException in ByteArray . java to improve error logging and handle potential issues with JDK8 performance
added a method to disable input proxy and log warnings for non - down motion events in RecentsAnimationWrapper . java to improve touch event
camel - 6770 fixed the test error of restletdomainservicetest
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method in ` HashTableTemplate . java ` to simplify method
move module - path test from ' tests ' to ' test . modulepath ' ( # 21705 )
added a method to retrieve source directories and improved error messaging for compiler creation to enhance code clarity and provide clearer context when source directories
updated menu item identifier from ` menu _ open _ web ` to ` menu _ mute _ hashtags ` in ` TweetPager
updated test methods to verify that nodes are not ancestor and not descendant , and modified conditions in HasParentNode and Node to improve clarity and
updated calculations for y and initialY in WorldEditPlayer . java to ensure values are non - negative to prevent potential errors in position calculations
added PathNotExistException to the selfCheckDataTypes method and updated related exception handling to improve error handling for non - existent device paths during partial
updated closing brace formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ runtime ] remove unused mailboxexecutor from yieldingoperatorfactory
hbase - 26953 add unauthorized test for fix / settablestateinmeta and / setmetas in master rpc ( #
updated method reference from ` meter ` to ` Meter : : getId ` in ` GatewayMetricFilterTests . java ` to improve code readability
updated the constructor of BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) to ensure compatibility with the correct
[ drools - 7 ] use lasttimedata instead of remoteitems when handle the delete event
update calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to correctly account for padding to ensure proper layout
[ hotfix ] [ core ] add a constant for the parent - first - logging - PATTERNS in coreoptions .
updated conditions to use ' this . doc ( ) ' instead of ' doc ( ) ' in BooleanScorer2 . java to ensure correct
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the merging process for
updated session interface to implement java . io . Closeable and changed close methods return types to void to ensure proper resource management and avoid potential memory leak
updated method names in GetLocations . java to improve clarity to enhance code readability and maintainability
updated exception handling logic to check for null before printing stack trace to improve error handling by avoiding unnecessary stack trace printing when the exception is null
updated exception handling to ignore IOException instead of throwing a UncheckedIOException to improve error handling by avoiding unnecessary exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android versions and improve app compatibility
ruby flavor : refactor emitsnippet to accept a charsequence instead of a string
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove usecaches from nio2endpoint - it be not need anymore .
refactor CasGeoLocationConfiguration to use Resource for database reading instead of MaxmindProperties to improve flexibility and reduce dependency on Maxm
update instructorfeedbackresultspageuitest to use correct helper view name
updated the ` useEncodedQualifierListOptimization ` method to accept a ` Scan ` parameter and modified its logic in ` BaseResultIterators
replaced public access modifier with package - private for several approval methods in ApprovalStore and ApprovalsControllerService to enhance encapsulation
added a delay mechanism to cancel downloads when the service is started to improve user experience by preventing unintended downloads from being canceled
updated method calls in TaskbarDragLayerController to use getAnyView instead of getOpenView and added new methods in AbstractFloatingView to improve
update project version from 1.0 . 11 to 1.0 . 13 and modify copyright year from 2000 - 2008 to 2000 - 200
replaced multiple instances of ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure thread
updated GsonBuilder . java file to improve JSON handling to enhance performance and maintainability of JSON processing
added null checks before adding centerGeo to circleCenters and fixedPoints to avoid potential NullPointerExceptions when centerGeo is null
remove espressohome option , use homefinder instead
doc : fix javadoc error in ctcodeelement , ctif , ctvariablewrite , cttypeinformation , and ctqueryable ( # 4
changed the access modifier of the DeleteSessionAction class from protected to private and updated session max inactive interval handling to enhance encapsulation and improve session
corrected the class name from InvalidDocumentStoreApiUageException to InvalidDocumentStoreApiUsageException to improve clarity and consistency in exception
modified the initialization of ` sz ` and modified the logic for creating ` SortedIntDocSet ` in ` SolrIndexSearcher ` , and
updated the ` triggerMediaScan ` method to include an additional ` file ` parameter to enhance media scan functionality by allowing the file to be processed
simplified the postTestResults method by removing conditional printing of test results to simplify the code and improve readability by eliminating unnecessary
added custom G - code settings to the MainWindow class to enhance user experience by allowing custom G - code settings
( chore ) camel - additionaljaxbmappingproducerimpl : use bufferedwriter instead of printwriter
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future updates
added exception handling for " unset . sys . property " in TestBadConfig . java to improve test reliability by ignoring specific exceptions during tests
added a method to remove fragments and the action bar in GpsMainActivity to improve user experience by ensuring the action bar is hidden after fragments
updated spanish tokens and spanishTokens2 in TokenizerAnnotatorITest . java to include a new newline token to ensure consistent formatting and
updated range handling in RemoteMediaHandler , RemoteRawHandler , RemoteUtil , and RemoteUtil classes to return Range . Byte instead of Range to
updated the gcode file path and improved print statements in VisualizerCanvas . java , and modified condition checks in GcodeViewParse .
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to the TestBack
updated the formatting of the assertion statements in InstanceOfAssertFactories _ Test . java to improve code readability and maintainability
added a null and state check for the output stage in StatementResource . java to ensure proper resource management and prevent potential resource leaks
fix IntegrityCheck and FileUtil to make filename private instead of public to enhance encapsulation and improve code readability
removed the import of SolrClient and the shardToClient map from ChaosMonkey . java to streamline dependencies by eliminating
added null check for the file object before accessing its properties to prevent potential NullPointerExceptions when accessing the database configuration store
reformatted the ` populateItem ` method in ` NestedRepositoryTreePanel ` for consistency to improve code readability and maintainability
change the constructor of ExtensionTypeHeader to public and add a validation for the extension type to ensure that the extension type is within the valid range
pdfbox - 4892 : do n ' t throw ioexception , throw specific exception instead
changed the default value of deleteOnShutdown to pushOnShutdown and added getter and setter methods for pushOnShutdown to allow configuration of the push
added trigger callback functionality to ReactiveStateMachineExecutor for handling events to improve error handling and logging for state machine triggers
added a test for setting the Python executable on the first path in BuckConfigTest . java to ensure that the Python interpreter is correctly set
added a default button to the root pane in InitialAccountRegistrationFrame . java to enhance user interface by allowing the sign in button to be displayed
added a new configuration option Tez _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging messages to include email and exception details to improve error reporting for better debugging and troubleshooting
rename org . axonframework . util . reflection to org . axonframework . util . util
added a static method ` listableCollector ( ) ` to the ` OidcIdTokenClaimCollector ` class and created unit tests for its
removed the ` center ` field from multiple Circle , Ellipse , Polygon , Polyline , and Rectangle classes to streamline the code by elim
[ hotfix ] fix checkstyle violation in registerandprocessbundleoperation
refactor SslContextFactory for improved SSL context handling to enhance security and reliability of SSL connections
removed the DEFAULT _ MAX _ EXPECTATIONS constant and updated assertions in ConfigurationPropertiesTest to use default values instead of a hardcoded value
updated the return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive error message for access
[ 3.0 ] introduce consumerclassloaderfilter ( # 9859 )
updated the ` shiftRows ` method to include a ` boolean copyRowHeight ` and ` boolean resetOriginalRowHeight ` parameter to enhance row
updated the icon settings forRolloverIcon and setRolloverPressedIcon in FontImage . java to ensure proper handling of pressed icons in the
replaced ` getGridTranslationSecondary ` method with ` setGridTranslationY ` in ` TaskViewUtils ` , ` TaskViewSimulator
updated assertion methods in Assertions . java to improve code readability and maintainability
added a check for ` currentDateTimeFunction ` in multiple database classes to return it if it is not null to ensure consistent retrieval of the current
added an ` anonymousPath ` method to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling for anonymous
updated the ` call ` method in ` DigitalWellBeingToast ` to include an additional ` contentDescription ` parameter to enhance
increased timeout duration in CatalogTracker . java from 0 to 50 milliseconds to improve stability by allowing more time for metaServer connection to
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
update genericitem to use stateconverterutil . defaultconversion ( ) instead of return null
added a new integration provider and a test for fetching post and details in BidirectionalOneToOneNPlusOneTest . java to ensure proper
added a method to remove extra empty screen and updated startSearchPageIndex based on workspace screens to improve user interface responsiveness by
updated HashMap and Set initialization to include size of derived references and added null check for the value in IndexedValueMap to improve memory management and prevent potential
updated string formatting from single quotes to double quotes in GoogleLineChart and GooglePieChart classes to ensure consistency in string formatting across the application
refactor the wait logic for batches sent in SendingAccountor . java to improve clarity and ensure proper handling of interrupted exceptions
added position functionality to WALPrettyPrinter and integrated it into the output to allow users to seek to a specific position in the file during printing
updated the parameters of the NettyTransceiver initialization in TestNettyTransceiverWhenFailsToConnect . java to set the connection
sort the list of log event before generate a report ( fixes # 374 )
added a test method to verify CSVLine handling with escaped quotes to ensure proper formatting of CSV lines containing double quotes
add coref . doscore and coref . scorer option to the dcorefchinesebenchmarkslowitest and fix
added check for non - remote recipient in iqhandler / iqrouter .
removed the @ JniImpl annotation from VM . java to streamline the code by eliminating unnecessary implementation details
updated ` Fetcher2 . java ` to use ` Protocol . CHECK _ BLOCKING ` and ` Protocol . CHECK _ ROBOTS
added a condition to check if the video HDR format is not " dolbyvision " before processing video parameters to ensure compatibility with different
updated package names from " other _ package " to " other _ package2 " in AstTests . java to ensure consistency in naming conventions
fix : worldborder # update ( ) do n ' t update diameter if percentage be large than 1
hbase - 25813 get walgroupsreplicationstatus return empty map if master be not online or master can not host user region ( #
mow - 107 remove caller from loginoperation when login fails
refactor ` markDataResourceOnline ` calls to use a list of ` InstanceConfig ` instead of a list of ` ArrayList < InstanceConfig
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
added a test to verify that erroneous Maven projects contain references are correctly handled to ensure that the application correctly handles errors during project building and
simplified the conditional check for oldProto and newProto in PropertyMap . java to improve code readability and maintainability
refactor getControllerId method to accept a nullable configId and streamline relay handling to improve clarity and efficiency in retrieving controller ID based on
replace ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper resource
removed the condition checking for refresh token in the OidcConsentApprovalViewResolver to simplify the logic for handling consent prompts
removed the print statement for closing the HTTP client executor to streamline the code by eliminating unnecessary console output
replaced a generic extractor call with a NoopGetter enum for better clarity to improve code readability and provide a no - op getter
rename ConditionalOnEnabledResourceChain . java file to improve clarity and consistency in naming conventions
added a condition to check if the tree root has children in BarrowmanCalculator . java to ensure that the calculation only occurs when there are
pdfbox - 4892 : use unfiltered stream instead of filtered stream , a suggest by valerybokov
updated log messages to include " CN1 " prefix and enhanced exception handling in FacebookImpl . java to improve clarity of logged messages and ensure
replaced return string " h : mm a " with return skeleton in ShadowICU . java and added a new test in ShadowICUT
removed unnecessary KeyguardManager dependency and simplified device lock check condition to streamline code and improve readability by eliminating unnecessary dependencies
server : fix npe in setvolume ( ) when the cloud . com - custom disk offering be not find
replaced FileChannel with AsynchronousFileChannel and added position variable in UtowBodyHandler . java to improve asynchronous handling of file operations and ensure
refactor signal handling methods in SigInt . java and SigIntTest . java for consistency and clarity to improve code readability and maintain
ggb - 1181 do n ' t update text when resize , so prepare text instead .
change return value from - 1 to 0 in Asset . java to indicate a successful execution of the method
make scrambledzipfian benchmark a bit more efficient
added a refresh listener to the UploadListFragment to notify when the data set changes to ensure that the UI reflects the current state of the
update bibdatabasecontext to use optional < path > instead of file .
refactor ParticleEffect to use get ( i ) for accessing emitters instead of items [ i ] to simplify array access and improve code
update tomcat . xml to use findservices ( ) instead of findservices ( ) . findchildren ( )
updated error message formatting in multiple Java files to improve clarity and consistency in error reporting
added a conditional check to skip processing if the playback state is not playing to improve performance by avoiding unnecessary processing when the playback state is not
replaced the use of ` ServiceComponentDesiredStateEntityPK ` with ` findById ( 0L ) ` in ` DeleteServiceTest . java
added a new class ` InnerClassFieldClash ` and modified ` Java2TypeScriptTranslator ` to handle inner class field clashes to
added logging and follow redirect filter features to DockerClientFactory and DockerClientProfile to enhance Docker client configuration flexibility based on user - defined settings
replaced awtUnlock ( ) with awtLock ( ) for displayChanged ( ) to ensure thread safety during display changes
hhh - 10183 fix test failure on sql server 2008
refactor the verification of the zip header in the ZipHelper class to ensure proper resource management and prevent potential memory leaks
changed access modifier of storeClassFile method from private to public to allow access to the method from other classes
replaced an assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues and added a new test class TestSortedSetDoc
updated error messages in CGIHandler and added null check in JavaVM to improve clarity of error messages and ensure runnable is not null before
added support for additional newline characters in LineReaderImpl . java to ensure proper handling of newline characters in string processing
changed the parameter type of ` multiFetchSourceFiles ` from ` List ` to ` Set ` across multiple classes to improve immutability and
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to improve performance by avoiding unnecessary
updated test methods to improve verification error messages and added new test cases for verification in order to enhance clarity of verification failures and ensure accurate error
updated method call from ` FileUtil . createData ` to ` FileUtil . createFolder ` in ` MacroService . java ` to ensure
truffle / typesystem : remove unused import
updated JsonObject class to improve data handling to enhance performance and maintainability of JSON processing
updated condition in SelectChannelEndPoint . java and modified HttpConnection . java to include maxIdleTime check in HttpConnection . java to ensure idle
[ 1.19 . x ] fix plant block not be able to sustain plant ( # 8785 )
added a new database metadata table and modified the query in QueryDatabaseMetaDataIT . java , and updated the UpgradeUtil in UpgradeUtil . java
updated HttpCookie . java to use Locale . US and added a new class B6791927 . java for validation of cookie expiration dates
removed multiple redundant calls to db . close ( ) in DbHelper . java to improve code readability and maintainability by eliminating unnecessary
increased timeout duration for processing and recovered messages from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests to allow more time for
add trace phase to economyallocationstage if tracera be enable
add save _ database and save _ all keybindings event to code area ( # 6373 )
added a static block to set the line separator for ObjectMapper to ensure consistent line endings across different operating systems
updated Windows path handling in NativeEnvironmentRepository . java to ensure consistent path formatting across the application
added Application resource management and shutdown method to multiple test classes to streamline application initialization and ensure proper resource cleanup
[ java ] remove duplicate code from recordinglog . validateexistinglog .
fix : update gapic - generator - java with mock service generation fix ( # 162 )
testfuzzoptimizations : remove unnecessary sleep
added a private boolean field ` reverseImage ` and updated its assignment from shared preferences to streamline the code by eliminating unnecessary shared preferences
updated conditional checks to use ` equals ( ) ` instead of ` equals ( ) ` for string comparison to improve readability and prevent potential null
fix : mdm match link should not overwrite golden resource attribute ( # 4358 )
updated JUnit imports and annotations in AuthenticationSuccessListenerTests . java for Jupiter API compatibility to ensure compatibility with the latest JUnit 5
fixed arrayindexoutofboundsexception when gettypes ( ) return - 1 .
refactor TypeUtil methods for improved readability to enhance maintainability and ease of understanding for future developers
updated triggerTime variable to use LocalDateTime and TimeZone for better date handling to ensure accurate timestamp formatting based on the default timezone and zone
added a method ` maybeCreateAbstractMethodErrorThrower ` to create a ` MethodHandle ` for abstract method errors to enhance error handling by
camel - catalog - allow ` ` $ { body . ognl } ' ' instead of ` ` $ { body . ognl
removed condition that checks if ` toExplore ` is empty before returning ` TargetGraph . EMPTY ` to simplify the logic by returning an
camel - jclouds fixed the unit test error of camel - jclouds
camel -ConsulTest - remove the @ Ignore annotation from the test case to enable the test to run and ensure the OSGi bundle
added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest to ensure all methods have the ACC _ STRICT access
[ java ] increase connection timeout to prevent intermittent test failure .
added a new file ` FileExtensions . java ` containing multiple file extensions for C language source and headers to provide a centralized way to access
replaced the custom ThreadLocalDateFormat implementation with a static final instance of ISO8601CanonicalDateFormat to simplify the code and improve performance by reducing
added deprecated options for FastTLABRefill , DeferPollingPageLoopCount , SafepointSpinBeforeYield , and De
added display name property and modified custom properties in client classes to enhance client configuration flexibility by allowing customizable display names
replace RuntimeException with EarlyTerminationException in multiple operator classes to improve exception handling for early termination in query execution
removed unnecessary whitespace in the TraceFunctionAroundWrapper . java file to improve code readability and maintain consistency
updated HttpBindServlet , HttpConnection , HttpHttpSession , and HttpSession to improve response handling and connection management to enhance server responsiveness and
add a null check for the parent before create a capabilitydispatcher ( # 6321 )
removed KeyCrypterException from the catch block in WalletTool . java to simplify exception handling for better readability
marked SubmitOrderedCompletionService as deprecated to indicate that the service should no longer be used in favor of a new implementation
updated the variable ` len ` to use ` origlen ` instead of ` len ` in the ` HyphenationTree ` class to ensure
added a sleep of 200 milliseconds in IQRegisterHandler . java to ensure that the register operation completes before proceeding with further operations
add method getimage ( string imageid ) and getresource ( string resourceid ) to the resources class .
updated the error message for PARAMETER _ NEEDS _ TO _ BE _ NAMED in ParameterBinder . java to clarify that Java
added a new flag ` providersChanged ` to the ` ConfigurationManager ` class to track whether providers have changed
added a method to escape identifiers in the SemanticAnalyzer class to ensure proper handling of identifier formatting in the SemanticAnalyzer
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated type casting for AnalysisSPILoader in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings
refactor condition in Window . java to improve clarity and structure to enhance readability and maintainability of the code structure
added null check for appManifest before accessing its target SDK version to prevent potential NullPointerException when appManifest is null
refactor ` ConfigurationMetadataGenerator ` to use ` MAPPER ` instead of ` DefaultPrettyPrinter ` for JSON serialization to improve code readability
added userName property and corresponding getter and setter methods to Driver and HiveSemanticAnalyzerHookContext classes to enable user identification in the driver context for
camel - 14850 : camel - xslt - add option to set the transformer source , url , and converter for the xslt component
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , TaskExecutorTestHelpers , and TestFirstInFirstOutComparator classes to
updated file size calculations in ShadowAssetManagerTest , ShadowContentObserverTest , ShadowDownloadManagerTest , and ShadowDownloadManagerTest to ensure accurate
added null check for request . getMappingData ( ) . context before logging access to prevent potential NullPointerException when context is null
( chore ) camel - log4j2 - throughputlogger : fix test failure
added a new ` VMOptionWarning ` class and modified ` CompilerConfigFileWarning ` and ` ConfigFileWarning ` to use ` Platform . isDebugBuild
refactor MeterDetailStatisticsModel loading to use a dynamic map instead of a static map to improve flexibility and maintainability of the statistics model
replaced System . err . println statement with a method to resolve the logback system property to improve code readability and maintainability by using
added @ NotNull annotations to method parameters in multiple classes to enforce non - null constraints to improve code robustness and prevent potential null pointer exceptions
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in multiple files to standardize command
refactor tests to use try - with - resources for container wait logic to ensure proper resource management and avoid potential memory leaks
rename test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class as
updated formatting in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate shield addresses in RpcApiService to enable retrieval of shield addresses from the wallet
changed the return type of ` readConsoleInput ( ) ` from ` byte [ ] ` to ` String ` in multiple classes and updated the
updated regex patterns and initialized sRunFlavor variable in TestStabilityRule . java to improve pattern matching accuracy and clarify platform handling
updated the handling of fragments in DefaultSolrHighlighter and added a test for the preservation of multi - valued fields in HighlighterTest to
modified the ` tryToLogin ` method to accept a ` Uri ` parameter with username and password to enhance login functionality by allowing credentials to be
refactor ` HandlerSceneEntityDrownReq ` and ` PacketSceneEntityDrownRsp ` to improve entity handling and fight property
http : / / issues . apache . org / jira / browse / amq - 4325 - fix typo in jmsprodu
removed unnecessary wrapping of the parameter in the update method to simplify the method call and improve code readability
added handling for unknown currency in BTCEAdapters . java to improve error handling and logging for currency errors
http : / / issues . apache . org / jira / browse / amq - 4682 - fix for amq - 4
pdfbox - 4892 : increase default averagechartolerance and spacingtolerance , a suggest by valerybokov
modified the ` startController ` method to accept a ` boolean useTenantIsolation ` parameter and added tenant creation and creation methods for various test classes
simplified the return statement by directly casting the response value to a Map to improve code clarity and reduce unnecessary method calls
added a condition to check if the size of attributes is greater than or equal to 4096 in ProjectWorkspace . java to ensure that attributes are not
added methods to retrieve JDK , JDK type , and language level in IjProjectConfig and related classes to improve project configuration management and
[ hotfix ] [ doc ] fix typo in hivesessionproperties description
added user details to the GrantedAuthorityEffectiveAclsResolverTests and updated test method names for scott to enhance test coverage for user
updated the method call to use ` getSolvedJavaLangObject ( ) ` instead of creating a new ` ReflectionClassDeclaration ` to improve clarity
added a new variable ` numberOfButtons ` and a constant ` MAX _ BUTTONS _ SUPPORT ` in ` XToolkit . java `
updated import statement for assertEquals from jdk . testlibrary . Asserts to com . oracle . java . testlibrary . Asserts to
added a new ` MessagePackFactory ` class and refactored ` MessagePacker ` constructors to use it to improve code organization and fac
add is _ desert and is _ cave tag to the biome tag . close # 3740
rename ` present ` method to ` draw ` in multiple screen classes to improve clarity and consistency in method naming
added conditional logic to adjust layout based on whether the component is horizontal or not to improve layout handling for better user interface responsiveness
simplified the matcher check in DOIServiceImpl . java to improve code readability and maintainability
replaced ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` Android
[ java ] remove the ` ` iscounterUnavailable ' ' flag from the ` ` commitposition ' ' counter from the ` ` clustered
# 1181 - enh : add @ embeddable entity for usersite ( # 1188 )
refactor HttpConverterRegistrar to handle URL parsing and port retrieval more robustly to improve error handling for invalid addresses and ensure proper port configuration
apiresponsehelper : check storage capacity type before check host / pool id
replaced ` dir . openInput ( ) . close ( ) ` with ` dir . fileLength ( ) ` in ` NRTCaching
modified the JavascriptCompiler class to be final and refactored method names for clarity to improve code readability and enforce immutability of
removed the synchronized modifier from the store method in UISettings . java to ensure thread safety when accessing shared resources
added a conditional check for native text input and changed the access modifier of fireDataChanged method from private to public to enhance text editing functionality and
fix spannerio . retryonabortdexception to not be retryable if the emulator only support one transaction at a time . (
use diamond operator ( no functional change )
updated ObjectInputStream handling to return a short array instead of a double array and added a new CloneArray class to ensure correct cloning of short arrays
changed nonce claim type from ` getClaim ` to ` getStringClaim ` and updated related logging messages in ` OIDCAuthenticationFilter . java `
added a conditional check for relationship fields in DCInputSet . java to ensure correct handling of relationship fields during data processing
added server slogan capability to the capabilities table and updated related methods in the FileDataStorageManager , FileContentProvider , and DisplayUtils
updated conditional logic for tinting menu items in DrawerActivity . java to ensure menu items are correctly tinted based on the current
replaced fail test with assumeNoException in SolrRequestParserTest . java to improve test reliability by ensuring no exceptions are thrown before running
added a check to return early if no missing symbols are present for a specified build ID to improve performance by avoiding unnecessary processing when no symbols
added a new test data row for data 5 - 4 in StringHelperTest . java to ensure the correct representation of data 5 - 4 in the
log a warning if the data provider return an empty array or iterator . this test be not do anything .
( chore ) camel - service - health : replace return collections . empty _ set with collections . emptyList ( )
updated freeplane XML version from 1.9 . 0 to 1.9 . 8 and refactored selection style handling in MapStyleModel
updated the parameter in the setRestitution method from mass to restitution to ensure the correct restitution is set for the Ph
added AutoFtpActivity . java and FtpHelper . java to implement FTP testing functionality to facilitate the auto - sending of
refactor token handling in BaseSemanticAnalyzer to use a local variable for token types to improve readability and maintainability of the code
added methods to retrieve and set component state in multiple classes to enhance state management capabilities for better user experience
added a new class RemoteExecutionEnabled for custom field serialization and deserialization to enable control over remote execution behavior in the build process
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated file reading from FileReader to InputStreamReader with UTF - 8 encoding in ImportCsv . java to ensure proper handling of character encoding for improved compatibility
added a new method ` assertWorkingScoreFromScratch ` to verify that shadow variables are not stale to ensure that the working score is
updated SEMIJOIN _ CONVERSION configuration from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin .
added debug logging for invalid message content in various DatagramPacket classes to improve traceability and debugging when ignoring non - serializable DatagramPacket instances
replaced ` mStorageManager . removeFile ` with ` mStorageManager . removeDirectory ` and updated related logic in ` FileDisplayActivity
added unit tests for the ` PollingTransactionReceiptProcessor ` class to ensure the correct handling of transaction hashes in the receipt processing logic
added @ Deprecated annotation to ISchemaRegion and updated test methods in SchemaRegionBasicTest to indicate that these methods should no longer be used and
added null check for sampleMimeType in MediaCodecRenderer . java to ensure that a valid sampleMimeType is provided to avoid runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in multiple classes to improve notification handling and ensure thread safety
added @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) annotation to @ AllArgsConstructor in J . java to ensure that properties
added a SQLFeatureNotSupportedException for handling view creation in MetaDataClient . java to inform users that creating an index on a view is not supported yet
added a new ` Website ` class and modified ` PopulatorImplTest ` to validate its functionality to ensure that the ` Website `
added a setup method to set a default locale in BSFormatterTest to ensure consistent test environment for different locales
log a warning when there be too many badly download jar file .
updated the assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase for better case sensitivity to improve test reliability by
added checks for single parameter and its tokens in SimpleExprGenerator . java to ensure proper handling of variable expressions in the analysis process
added a volatile boolean flag to track the creation of the Vertx component to ensure that the Vertx component is only created when it is created
updated writeAttributes method calls to use the node parameter instead of null to ensure proper handling of node - specific attributes
updated log message format from " Synchroned " to " Synchronized " in SynchronizeFolderOperation . java and added null checks for OC
added a new boolean field ` ignoredReadStatus ` and updated related methods in ` Entries ` , ` CategoryREST ` , and ` FeedREST
updated resource handling in TestAnnotationConfiguration and WebAppContextTest to use MavenPaths for target directory resolution to improve code maintainability and ensure correct resource
added validation logic for URI and MetaDataRegisterDTO in RegisterServerConsumerExecutor . java and removed unused imports in URIRegisterExecutorSubscriber . java to
updated the condition for checking play state in GwtMusic . java to ensure that play state is only checked when the sound is not paused
added a new permission check for the ADMIN _ SUDO _ AREA permission in MainCommand . java and defined it in Captions . java
add trace to pinot query when timeout or trace be enable
updated file name checks in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to
updated assertions in ResourcesTest to use constant values for emoji strings to improve code readability and maintainability by avoiding hardcoded values
updated native methods in WhiteBox . java to change NMTWaitForDataMerge to NMTOverflowHashBucket and NMTMalloc
[ hotfix ] [ serializer ] introduce javaeitherserializersnapshot for backwards compatibility
updated AddressResolverOptions to use constants for default NDOTS and ROTATE options and introduced a new resolvOption method in AddressResolver
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestR
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML namespace paths from " liquibase / parser / core / xml / " to " www . liquibase . org
move commonmimetypelocator to test package and move commonmimetypelocator to test package .
changed the repository state from INIT to NOT _ REQUIRED in multiple classes to accurately reflect the required state of repositories
updated the compare method in GenerateChangeLogTask to include schema comparison options to enhance the comparison process with different schema configurations
updated import statement from org . junit . Test to org . testng . annotations . Test in TestBackwardAnoamlyFunctionUtils
added a new file ` ProgressiveJPEGTest . java ` that implements a progressive JPEG test to demonstrate and test the progress
update material loading logic in MaterialLoader . java to use a new float parameter for alpha discard threshold to improve clarity and maintainability of material
improve error message when native - build on window be not support
added a null and empty check before setting the size in the Label class to avoid potential NullPointerExceptions when text is null or empty
updated readVarInt ( ) method to include integer division by 1 , 000 , 000 to ensure correct handling of integer values in the data processing
changed PushUtils , ThumbnailsCacheManager , and PushUtils classes to be final and added a private constructor to enforce immutability and prevent
updated the method of obtaining the length from ` curConfig ` to directly use ` getLength ( ) ` instead of using ` getBounds ( )
removed unnecessary casting of ` MockDirectoryWrapper ` in ` TestDirectoryReaderReopen . java ` to simplify code and improve readability by elim
updated the file pattern in the componentPresetDao . load method from a wildcard to a wildcard to allow for more flexible loading of presets based
added a condition to check if the duration is greater than zero in TaskbarStashController . java and updated related references in ActivityContext .
replaced the use of ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( ) `
add a test to make sure we can target both JDK 1.3 and JDK 1.5
replaced PowerMockito with MockitoJUnitRunner for testing in QuotaResponseBuilderImplTest to simplify test setup and improve readability
schematoolcatalogops : use system . err / out instead of system . err
added a DFSClient parameter to FanOutOneBlockAsyncDFSOutputSaslHelper and updated related methods to utilize this new DFS
updated MongoQueryMethod constructor to include RepositoryMetadata parameter to enhance query method functionality by integrating repository metadata
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4565 .
removed duplicate import statements for PhoenixDatabaseMetaData in MetaDataEndpointImpl . java to streamline code and improve readability by elimin
increased the allowed repeated deadlocks in TxnHandler and added a retry interval in TestTxnHandler to enhance transaction management and prevent potential dead
renamed variable ' xl ' to ' xAxis ' for consistency to improve code readability and maintainability
added support for validating printable character names in FsUtils . java to ensure that printable character names are handled correctly across different operating systems
renamed the method ` in ` to ` using ` in the ` Selenide ` and ` WebDriverRunner ` classes to improve clarity
added processpluginconfiguration to projectbuildingrequest so plugins can be process by default .
updated calculations in ProxyConnectionManager and ServerTrafficCounter to use ' d ' instead of ' int ' to ensure precision in decimal representation for accurate
test : fix itsystemtest . java test resource path ( # 239 )
modified return values in ModeledConnectionRecord and ActiveConnectionRecord , and added remote host retrieval in AuthenticatedUser to improve connection handling and provide
( scott phillips ) add an admin button to the CommunityListServlet to allow access to the admin page when the user
refactor compaction thread names to use an AtomicInteger to track the execution time for long and short compaction threads to improve thread tracking and provide clearer
updated package name retrieval from ` getApplication ( ) . getPackageName ( ) ` to ` resources . getResourcePackageName ( R . array . wallpap
refactor player retrieval logic in Near . java to use a dedicated method for filtering players to improve code clarity and maintainability by redu
updated AndroidManifest , ResName , ShadowMediaPlayer , ShadowActivity , and ShadowActivity . java files to improve code consistency and maintainability across
updated test cases in MlibOpsTest . java to improve test coverage and ensure reliability of memory operations
use a constant for the operatingsystemimpl instead of a hardcoded string .
corrected a typo in the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a
removed unnecessary key and iv checks in UploadFileOperation . java to simplify code and improve readability by directly using EncryptionUtils
added @ Stability annotation for the WorkProfileTest class to indicate that the test is intended for local and post - submit scenarios
removed a conditional check for bucketing version in TezCompiler . java to simplify the code by eliminating unnecessary complexity
changed the method call from ` setCursorPosition ` to ` input . setCursorPosition ` to ensure the correct input object is used for cursor
refactor LockFreeBucket to extend AbstractBucket and introduce LockFreeBucketContendedTimeMeter abstract class , and add LockFreeBucket _
add ` ` tpstats ' ' to node probe to show thread pool stats . patch by jbellis
updated maximum bitrate retrieval to include user preferences in ExternalPlayerActivity and PlaybackController to ensure bitrate is set correctly based on user preferences
updated ZipkinHttpSpanExtractor and added new utility methods for handling trace and span IDs to improve code clarity and maintainability by centralizing
move isbsqswapordaoactivated check from data model to protected method to allow subclass to access paymentaccount
fix an npe from the right - aligned method of the fluttercompletioncontributor ( # 6373 )
added a project setting to the filesystem to ensure the project context is updated correctly
updated JsBundle , JsBundleBuilder , JsLibraryBuilder , and JsTestScenario to include ProjectFilesystem as a parameter to enhance filesystem handling and
updated multiple Java files related to envelope and databinding features to enhance functionality and maintain consistency across the codebase
refactor MetricsDSLContext to improve code readability to enhance maintainability and facilitate future feature additions
removed the VersionConfig interface and modified the handling of universes in VersionBuckConfig . java to streamline the code by elimin
added a try - catch block around the bindShadowClass method in Robolectric . java to handle potential TypeNotPresentException when binding
changed the access modifier of the ` validateTypes ` method from static to public and updated the exception message format to improve accessibility of the method
fix : update gapic - generator - java with mock service generation fix ( # 162 )
added SLF4J logger imports and a static logger in SimulationStatus . java to enhance logging capabilities for better debugging and monitoring
updated the version position and font size in Splash . java from 138 to 150 to reflect the latest version and improve performance
added a runLater method to the notifications collection in UserInterfaceComponentImpl . java to ensure notifications are executed on the event thread for better respons
updated method stubs in AdditionalAnswers and ReturnsElementsOf classes to improve clarity and functionality of mocking the foo method
corrected a typo in the error message for non - string partition columns to improve clarity and accuracy of error reporting
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify the functionality of handling line file
added a method to retrieve the version code from the MainApp class and updated references in FeatureList and WhatsNewActivity to improve code organization
camel - 16467 : camel - core - optimize beaninfo method to avoid ambiguity . thanks to stephan siano
updated method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java `
added buffer ownership checks and created a new VAO in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper buffer management and
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through
updated JerseyClientConfiguration . java for improved configuration handling to enhance performance and maintainability of the client configuration
int - 1817 change ' characterstreamreadingmessagesource ' and ' characterstreamwritingmessagehandler ' to be a package - private class name
updated variable names from ' s ' to ' o ' in multiple test files and modified return types in TypeUtils to improve code clarity and
added methods to handle empty arrays and adjust column and row counts in StringDict and Table classes to ensure proper handling of empty string arrays and maintain
added deprecation annotations and implemented AutoCloseable interface in GenericContainer to indicate that the container ' s methods are deprecated and should no longer be used
changed logging level from info to error in MediaInfo . java and updated method signatures in RendererConfigurationTest . java to improve error handling and ensure
added schemapattern option handling in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector classes to allow configuration of schemapattern for improved
update return statement in ProvSSLSessionImpl to handle null id variable to improve error handling by returning an empty byte array when id is null
refactor calculation of ratio and create bitmap in AndroidGraphics . java to improve clarity and maintainability of bitmap creation logic
refactor Base64 class implementation to improve code readability and maintainability
sulong : add miss miss specialization guard for readmanaged and readmanagedsinglecontext
eranmes on behalf of andreashaas : ignoring a test that fail on iphone because it ' s not a selenium server
updated FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
replace ` ResName ` with ` int ` in ` AttributeResource ` and update related constructors and methods accordingly to simplify resource handling and improve code
resolve tls . cert . path in defaultdockerconfig ( # 2373 )
updated JUnit method annotations from ` tearDown ` to ` setUp ` in ` SimpleReactiveElasticsearchRepositoryTests ` to ensure proper setup
modified type variable handling in ` mmm Attr . java ` and added a new class ` T6450290 . java ` with multiple
added logging level configuration and related methods in LoggingFlags and LoggingOptions classes to allow customizable logging levels and improve flexibility in logging behavior
added logging statements to LauncherModel , SecondaryDropTarget , ModelWriter , and PackageUpdatedTask for better traceability to enhance debugging capabilities and
added allFilesOption method implementations in FileActivity , FileDisplayActivity , and PreviewImageActivity to enhance file handling capabilities in the application
added deprecated methods for ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` to signal that these methods should no longer be
updated the calculation for numPredictiveAppCols based on phone type to ensure correct app column count for phone devices
removed UTF - 8 character encoding from the content string conversion to simplify the code by eliminating unnecessary character encoding
added new ` RequestMatchers ` class and its corresponding test class ` RequestMatchersTests ` to provide utility methods for various request matchers in the security
mow - 107 use inputbox instead of button for temporary mode
adjust position calculations in ProgressBar to account for bgBottomHeight and bgRightWidth to ensure correct rendering of the ProgressBar background elements
fix external _ functions . json path for presto - spark
changed ` extra _ L0 ` , ` extra _ L1 ` , and ` extra _ L3 ` to ` extra _ L4
added a condition to check if the state handler is invalidated in the gesture state check to ensure that the gesture handling logic only proceeds when the
updated layout metrics handling in CellLayout and DynamicGrid classes for landscape and portrait layouts to improve layout accuracy and maintain consistent metrics across different
added a condition to check for " / robots . txt " file before processing the redir to ensure only valid robots . txt files are processed
improve netbeans - api documentation for install nb - javac library
updated button subscriptions in AdvancedGameSetupScreen . java to use " createWorld " and " return " instead of " continue " to improve cl
updated the condition in UDFOPDivide to include a check for zero values in the evaluate method to ensure that the method correctly handles
updated method signatures and formatting in AbstractJob , FlowJob , and StopAndRestartFailedJobParserTests classes to improve code readability and maintain
updated login and logout handling in FormLogin and LogoutBeanDefinitionParser to use a new request matcher to enhance security by ensuring proper request processing for
unbind the upload service connection in ShareActivity and ContributionsActivity to ensure proper resource management and prevent memory leaks
updated references from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure the correct thumbnail is
refactor multiple database - related classes to improve code organization to enhance maintainability and readability of the codebase
added request timeout configuration to RaftServerConfigKeys to ensure proper handling of RPC request timeouts
updated logging message in TsFileResourceManager and modified test cases in ResourceManagerTest to improve clarity of error handling and enhance test coverage for
added a method to set system properties in the MavenModuleLoader class to ensure system - specific configuration is applied to the model source
added server metrics for readiness checks and refactored related methods in HealthCheckResource and AdminApiApplication to enhance monitoring capabilities for readiness checks
add animatedtorch model to the modelhandler , close # 349
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when closing the writer
added a method to retrieve Hive configuration from a directory of Tez configurations to streamline configuration management for better integration with Tez tests
added a new link " Muting Users " to the FeaturesActivity to enhance user experience by providing direct access to users
added initialization for " jdk . reflect . useDirectMethodHandle " in System . java to ensure proper handling of direct method handles in the
hbase - 26975 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy ( #
[ hotfix ] [ yarn ] add support for empty plugins folder in yarnclusterdescriptor
replaced calls to ` getPronunciations ` with direct calls to ` getWord ` in ` BuildTranscriptHMM ` and
removed unnecessary newline characters from JSON string formatting in JsonUtilsTest . java to improve code readability and maintain consistency in formatting
added intent extra for tweetId in Compose . java and updated related methods in TimeLineCursorAdapter , TimelineArrayAdapter , and Com
[ hotfix ] [ runtime ] log warning when terminating messagelistener .
improve error message if no class be find to analyze in classpath
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to
updated the initialization of the isIncompatible variable to true to ensure compatibility with the latest API standards
updated the ` createAccount ` method to accept ` AccountCreateContract ` instead of ` Account ` to enable handling of account creation in the RPC
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
http : / / issues . apache . org / jira / browse / amq - 4682 - fix for amq - 4
enable off - heap format by default and update default star tree format version to " OFF _ HEAP " to ensure that the star tree format is
modified the title handling in FeedUpdateService to truncate the length of the title before setting it to ensure that the title does not exceed 2048 characters
refactor JColorChooser to retrieve the preview panel using ColorChooserComponentFactory to improve code clarity and maintainability by centralizing preview panel
changed log level from info to debug for model checking messages to reduce log verbosity and improve performance during development
add null check before setting bitmap options in AndroidTileBitmap . java to avoid potential NullPointerException when reusable bitmap is null
added layoutParams field and its getter method in FakeView . java to enable retrieval of layout parameters for better testability
added check for closed state in DefaultCursor and a test for iterator behavior in CursorSimpleTest to ensure proper exception handling when accessing the iterator method
pdfbox - 4892 : avoid npe if the parent dictionary contain kids / pages , a suggest by valerybokov
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private String field ` ts ` and its getter and setter methods to the ` Message ` class to store and manage the timestamp associated with
improve error response in case of web api exception
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the class from other packages
remove legacy query param when use isochrone
removed ` public ` access modifier from multiple test classes to enforce package - private visibility for test classes
refactor CSRF token handling into a separate method called setCSRF to improve code readability and maintainability by reducing duplication
[ shadow ] allow shadow classloader to be bootstrapped .
jbrules - 2642 add support for disable numeric on sheet ( e . g . xssf )
changed log level from info to debug for default value logging in HiveConf . java to reduce log verbosity and improve performance during debugging
added null checks for axes , buttons , and polledControllers in Lwjgl3Controller and Lwjgl3ControllerManager to
updated ObjectFactory import statements in WeldFactory and WeldFactoryTest classes to align with the latest Cucumber library changes
refactor port forward saving logic in PortForwardListActivity to improve readability and maintainability of the code
added a new configuration option ` SHOULD _ SNAPSHOT _ DATA ` to control snapshotting of Liquibase data to provide configurable options
added a null check for the temp file before creating a job in SyncedFolderObserver . java to avoid potential null pointer exceptions and improve job
refactor LocationMarshaller to improve code readability to enhance maintainability and facilitate future updates
refactor touch event checks in StatusBarTouchController and OtherActivityInputConsumer for clarity and consistency to improve readability and maintainability of
refactor VectorReader and its implementations across multiple files to improve organization and clarity of vector reading functionality
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to standardize the import statements for better readability and maintainability
replaced the method ` getRelativePathName ( ) ` with ` getRelativePath ( ) ` in multiple classes to streamline the retrieval of the relative path
updated ` RecordReader ` and ` CompositeTransformer ` to utilize ` RecordReaderFileConfig ` instead of ` RecordReader ` to enhance flex
added a null check for the extractor before instantiating it in ControllerMethodInvoker . java and updated parameter classes to use the @ WithArgumentExtractor
fix resource limit for template and account when set default max secondary storage
fix inventoryeffectrenderer ' s potionshiftevent be cancelable . close # 3889
deprecated the deprecated ` COLD _ READS _ TO _ OMIT _ KEY ` and removed it from ` uncheckedOptions ` to streamline
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent memory leaks
[ issue # 5790 ] add retry metric ( # 5791 )
refactor KeyboardAddonSettingsFragment to improve code structure to enhance maintainability and readability of the code
added an @ Ignore annotation to the ShadowDateUtilsTest class to mark the test as ignored due to a moment
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references
added upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to improve websocket connection management and ensure proper handling of upgrade requests
added timeout support and timeout handling in AndroidImplementation . java to manage connection timeouts more effectively
refactor user and team access permission retrieval methods in GitblitClient . java and RepositoriesPanel . java to streamline permission handling and improve
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL queries with quoted cast expressions can be
added a conditional check for root directories and introduced a method to determine if a file is writable or not based on the operating system to ensure proper
added configuration properties for executor group and thread per group , and refactored executor selection logic to improve flexibility and maintainability of executor management
added null check for the field before checking for " catalogname " in AbstractChangeGenerator . java to prevent potential NullPointerException when the field is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to streamline bean initialization and improve clarity in the event
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by reducing duplication
added an override for the close method in DeflaterOutputStream in RegionFile . java to ensure proper resource management and prevent memory leaks
added a new Java file ` gsp001 ` to test system properties retrieval at early phase to ensure that JVMTI GetSystemProperty
refactor bean definition processing to use ` concreteClassMetadata ` instead of ` annotationUtils ` to improve code clarity and maintainability by reducing
* added export support for camcontrol and lightcontrol in jme3 export package
updated PopupNotificationPanel to use the window ancestor for disposal of the popup window to improve code clarity and ensure proper window disposal
replaced instances of ` NoInstanceException ` with ` InferenceException ` in the ` Infer . java ` file to standardize exception
added a method to retrieve the feature value to provide access to the feature value for external use
changed the parameter type of the ' after ' method from ' int ' to ' long ' to accommodate larger value ranges for improved
added ` onBuild ` and ` executionDriver ` fields with their respective getters and setters in ` ContainerConfig ` and ` Info ` classes to
updated icon setting logic in Toolbar . java and adjusted layout adjustments in FlowLayout . java to ensure correct icon display based on RTL
added support for enabling position increments in StopFilterFactory to allow customization of position increment behavior in the StopFilter
[ teammates - admin ] fix email test failure due to wrong email address
added a new boolean variable ` mTryShareAgain ` and initialized it to ` false ` in ` FileActivity . java ` to control the
( chore ) camel - jansi : use clibrary . ttyname ( 0 ) if available
replaced ` bytes ` with ` bytesSize ` in ` BandwidthProcessor . java ` for better clarity to improve code readability and
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to improve test reliability and ensure thread safety
[ easee ] update api url to easee . com base on circuit id
increased sleep duration in KafkaIOIT from 2 seconds to 1 seconds and added startup attempts in KafkaContainer to allow more time for Kafka
replaced the use of ` hasJsonPath ` with a new ` is ( itemName ) ` matcher in ` SearchResultMatcher . java ` to
added SSL certificate trust management and hostname verification in OkHttp . java to enhance security by ensuring proper certificate validation during HTTP requests
refactor button click handling in NavbarButtonsViewController and TaskbarNavButtonController to utilize a new long click listener to improve
added a new file for HyperlinkFormula . java and changed field _ 1 _ length from byte to int in StringPtg . java to
added nullability annotations for stdout and stderr variables in ShellStep . java to ensure that the working directory is not null to avoid potential NullPointerExceptions
increased timeout from 1000 milliseconds to 2000 milliseconds in AsyncAppenderTest . java to allow more time for asynchronous logging operations to complete
updated the ` escapeDatabaseObject ` method in ` AbstractDatabase ` to include an additional ` objectType ` parameter and adjusted return statements accordingly to enhance
added a new boolean flag ` inputChanged ` and modified logic in ` MaterialRenameDialog . java ` to handle input changes to improve the handling
added a test for state change functionality in ShadowDisplayTest and implemented state management in ShadowDisplay to ensure proper state changes are applied to other instances
add dispatcher . invokedirect ( string , object [ ] ) for direct operation invocation . also add dispatcher . invokedirect ( string , object [
[ web ] fix x and y keyboard ( x ^ 2 and x ^ 3 )
updated SQL query conditions based on server version in PgDatabaseMetaData . java to ensure compatibility with PostgreSQL versions prior to 9.0
[ hotfix ] fix checkstyle violation in queuechannel
updated variable names and URI handling in FileUtils . java for clarity and consistency to improve code readability and maintainability by using more descriptive
added support for monitoring and collection of Jenkins nodes in the CollectorServer class to enhance the application ' s capability to monitor and collect Jenkins nodes for
refactor attribute retrieval in HeadersBeanDefinitionParser to use a dedicated method for resolving attributes to improve code readability and maintainability by centralizing
hbase - 26975 ProtobufLogReader should not throw an exception when the eof be reach the end of the file at the position of
remove nacos listener from nacosregistry when application be stop
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor status code handling in GoAwayGenerator , GoAwayBodyParser , and GoAwayGeneratorTest to use a dedicated method
updated the formatting of the AuditEvent and AuditEventTests classes for improved readability to enhance code clarity and maintainability by standardizing
added checks for negative rounding errors and changed the return value of Math . cbrt to zero to ensure proper handling of negative rounding errors and
fix ` ` / defaults / ' ' in forge ' s default folder path . close # 3740
refactor code to store the executable path in a variable before adding it to the builder to improve code readability and maintainability
added multiple assert statements to verify the behavior of PointRangeQuery in TestPointQueries . java to ensure the correctness of point range queries and
hbase - 26942 fix testhfilecleaner . testarchivedhfile ( ) fail on hudson ( addend
updated file label setting logic to include a condition to ensure the file name is set only if it does not match the original file name
fixed - jedisclustercommand . execute ( ) do n ' t throw exception when error occur during execution
[ hotfix ] [ runtime ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap `
refactor benchmarks in QMapReadRandomKeyBenchmark and QMapReadSequentialKeyBenchmark to use HashMap and FastMap for improved performance
initialize G _ SCH _ B as a new HashMap < > in HybridPlotWorld . java to ensure G _ SCH _ B
added null and empty checks for fields and improved identifier handling in GroovyEngine . java to enhance robustness and maintainability of the code by
ggb - 1340 do n ' t hide drawable for angle in dependent number
added new configuration options for socket timeout and TCP keepalive in HiveConf . java and updated HiveServer . java to utilize this option to improve
corrected a typo in the method name from ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve code readability
no effective change - code cleanup - remove unused import
refactor RealtimeSegmentRelocator to use lambda expressions instead of custom ThreadFactory to simplify code and improve readability
cloudstack - 4892 : fix npe in createvpccmdbyadmin . java ( # 4893 )
updated windowAlpha calculation to ensure it does not exceed zero and adjusted progress check in FloatingIconView to improve accuracy of windowAlpha and prevent
updated fatal error message for schema declarations in SecurityNamespaceHandler . java to clarify that schema declarations are compatible with Spring Security 4.0
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
change fields in DisruptorProviderManage , QueueConsumer , and DisruptorProvider to be final to ensure immutability of these fields
added a new file TestConfigureUDF . java to implement a generic UDF to test configuration to facilitate testing of the UDF '
updated regex pattern in LogMessageWaitStrategy and modified test parameters in LogMessageWaitStrategyTest to enhance text matching accuracy and improve test coverage for
replaced multiple instances of ` logger ` initialization with direct usage of ` LoggerFactory . getLogger ( INTERNAL _ LOGGER _ NAME ) ` to simplify
updated SQL queries and method names in SchemaDao , ShardDao , and TestShardCleaner classes for handling deleted shard nodes to improve clarity
added support for Java version " 17 " and " 17 - preview " in the JavaLanguageModule to ensure compatibility with the latest Java features and
make fileappenderresiliencetest more comprehensive by wait for compression job
fix volatilereadnode . lastlocationaccess to be non - null when there be no access check .
added a method to retrieve steps and modified formatting for consistency to improve code readability and maintainability
removed specific fromBase58 and toBase58 fields from JsonRpcApiUtil and TronJsonRpc , and adjusted formatting in TronJson
refactor currency pair retrieval to use a variable for better readability to improve code clarity and maintainability by reducing duplication
update longtasktimer measurement to use basetimeunit ( ) instead of TimeUnit . NANOSECONDS .
# ! [ euphoria - flink ] fix incorrect usage of hashpartitioner in reducebykeytranslator
changed the type of ` colorValues ` and ` colors ` from ` String ` to ` CharSequence ` and modified the preference handling logic to improve
rename incompatibledatabasehandler to databaseversionhandler for clarity
added a MAX _ TWEETS _ IN _ CONVERSATION constant and modified the condition to check for replies size to ensure that the
increased refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map to refresh
queue : fix getpersistedbytesizecorrectlyforfullyackeddeletedtailpages when the tail page be empty
fix checkstyle issue in server / glowserver . java ( # 700 )
refactor the grow method in DataIO to improve clarity and structure to enhance code readability and maintainability by encapsulating the grow logic
removed import of DataOutputStream in GdxSetup . java to simplify code by eliminating unnecessary dependencies
camel - 7999 : added getsubmittedfilename ( ) to attachmenthttpbinding so we can get the filename the request be send to the endpoint
added a method call to markReadForLoad ( ) in LauncherFragment . java to enhance readability and maintainability of the code
added ClassNotFoundException to the main method and simplified exception handling in JarInstrumentor . java to improve error handling and provide clearer feedback on negative array
added a method to check spill possibility in HashAggTemplate . java to ensure proper handling of partition flushing during aggregation operations
updated the variable ` dsName ` to ` dsName ` and modified the addition of ` codecDocStoreFiles ` to use ` dsName
added a default name id format to the supported name formats list in SamlProfileSamlNameIdBuilder to ensure a valid name id format is
added redirect handling for password change aborted in ChangePasswordPage . java to improve user experience by providing feedback when a password change is aborted
removed unnecessary closing braces in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide access to the maximum idle time for
deleted the FontScalingTest . java file to the test is no longer needed for the user interface
[ rrd4j ] validate start and end date before filter ( # 11347 )
added checks to return early if numVectors is negative to optimize performance by avoiding unnecessary processing when there are no vectors to compute statistics
test : migrate executablereftest to junit 5 ( # 4523 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java
camel - 16400 : added wiretap option to allow to use expression in wiretap component . thanks to stu hood for
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
added topn planner option to enable push limit to topn
[ java ] remove unused aeron directory name in test .
fixed - rconnection . pingconnection ( ) method do n ' t call connection . setqueued ( false ) if it ' s already queued
replaced ` InputStream ` with ` FileOutputStream ` and refactored ` getConfVarInputStream ` and ` getConfVarURL ` methods to improve file
updated the model creation to use the criteria ' s device instead of the default device to ensure that the model is created on the correct device context
added options menu functionality to the SimulationViewer class to enhance user interaction with the motor details option
refactor CertificateValidator class to improve certificate validation logic to enhance security and reliability of certificate processing
use . hawtio . dirname instead of . hawtio by default
added a condition to handle empty comments and whitespace in the Space class to ensure that SINGLE _ SPACE is returned when comments are empty or whitespace is
changed variable visibility from private to volatile in multiple dictionary - related classes to ensure thread safety when accessing shared resources
removed stack trace printing from Throwable in ContextHandler . java to improve error handling by avoiding unnecessary stack trace information
refactor customitemdroptest to extend basetest and add integration test .
added a ` ifNotExists ` boolean parameter to ` AddPartitionDesc ` and modified related classes to handle partition existence to enhance partition management by allowing
refactor input handling in NfsSecondaryStorageResource . java for improved readability and efficiency to enhance performance and maintainability of the code
[ java ] remove unused controlrequeststreamid from cluster service node .
[ geos - 8470 ] add support for wfs spatial operator to getcapabilities
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with @ AwaitsFix to indicate that the test
added a condition to handle a preface start condition in Http11InputBuffer . java to improve request processing logic based on the presence of a
[ java ] disable exclusive in aeron cluster by default .
added new cache keys and refactored job properties for HBase to use an array to improve cache management and reduce redundancy in configuration handling
added methods to calculate the current record number and update the running record count in JSONRecordReader . java to improve clarity and maintainability of
added year filtering logic to the mergedItems list in CategorizationFragment . java to ensure only valid years are filtered out from the mergedItems
replaced ` 0x00000000 ` with ` Mode . CLEAR ` in ` CacheableTextView ` , ` CellLayout ` ,
mesh : remove render method that be not support with opengl ES 2.0
ww - 4560 set actioncontext to null when execute the background process
modified methods in BaseSemanticAnalyzer , QBParseInfo , SemanticAnalyzer , and SemanticAnalyzer to include a default database name parameter to enhance
added connection timeout configuration and changed the ' count ' variable to be final in StubConnection . java to improve connection management and ensure ' count '
added test cases for ` approx _ percentile ` queries in ` TestHiveAggregationQueries . java ` to ensure that the ` approx _ percentile
updated DEFAULT _ IDLE _ TIMEOUT to 30 seconds and refactored idleTimeout and idleWriteTimeout handling in WebSocketChannel to improve timeout management
updated the method to retrieve shares to use the user ' s platform account instead of the account object to ensure compatibility with the user ' s platform
updated Inet6Address . java to use generic enumeration types and improved null handling for scope _ ifname to enhance type safety and prevent potential
refactor PlaybackControlView to improve button enabling logic and streamline view management to enhance code readability and maintainability by reducing
updated method signatures and session handling in Session . java and Token . java to improve clarity and consistency in session identification logic
updated the method from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary .
update graaloptions . useexceptionprobability to use ___ _ instead of true
updated the logic for setting the new plate color based on whether the icon is themed or not to improve the visual appearance of the
guac - 1115 : do not overwrite user with blob when create a new user .
added " centre " alias to the aliases in Middle . java to enhance functionality by allowing centre alignment
added DirectUpload class to CommonsApplicationComponent and injected it into DirectUpload class to facilitate dependency injection for the direct upload functionality
added space top settings for left and right axes and modified range checks in BarChartActivity , BarLineChartBase , and YAxisRenderer classes
added multiple ` HasJavaAbi ` flavors to ` AndroidLibraryDescription ` and ` JavaLibraryDescription ` to support additional Java ABI
added operation event status type handling in OnlineHubService and changed services list in CompositeLogService to improve event tracking and ensure proper initialization of
added debug print statements and a check for annotations in DexAnnotation . java to improve debugging capabilities and ensure annotations are only added if they are
replaced the @ StartBundle method with @ Setup and @ Teardown methods for better clarity to improve code readability and maintainability by
refactor classpath handling in SortedArrayStringMapTest to use a variable for the classpath to improve code readability and maintainability by reducing
updated the loading method in PackageResourceLoader to use a consistent resource separator to improve clarity and maintainability of resource loading logic
[ hotfix ] [ table - common ] fix dataset . minby ( int ) and dataset . maxby ( int ) to work on
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable tests related to issue b / 243855320
updated error message handling to escape percent characters in ShouldHaveMessage . java and added a new test in ShouldHaveMessage _ create _ Test .
fixed - jcache . close ( ) method do n ' t call cachemanager . geturi ( ) method if it return null . #
fix log for activititaskalreadyclaimedexception when close command context
reformatted the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
entitypropertiespacket : use instance . getbasevalue ( ) instead of instance . value ( )
do n ' t play notification sound if sonos speaker be not initialize
increased the timeout duration for countDownLatch . await from 500 milliseconds to 5 seconds in multiple test files to allow more time for the
changed log level from info to debug for error message in LightThingHandler . java to reduce log verbosity and provide clearer guidance on GitHub
asyncjobmanagerimpl : return the job to the queue for next turn when a rejectedexception occur
updated imports and formatting in Reporter . java , modified method parameters in ReturnsSmartNulls . java , and added a test for smartNullPointerExceptionMessage
updated the parameter type in the generate method from Frame to DataFrame to ensure proper type handling for DataFrame in data generation
updated multiple package - info . java files in the project structure to improve organization and clarity of package documentation
fix issue with empty orc file
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine . java ` file to enhance the
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated test cases in FinderPatternFinder , QRCodeBlackBox1TestCase , and QRCodeBlackBox2TestCase to improve accuracy in
simplified the condition for checking the presence of leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability by
renamed the test method from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and re
# 399 fix for $ $ and $ x for find ( ) and all ( )
defaultaudiosink : set default sampleRate if format . no _ value
added methods to get and set formula in XSSFName class and modified XSSFName class to implement a final class to enhance code
increased the target value from 60000 to 90000 in HighDimensionsTest . java to accommodate larger data sets for improved
gml : fix pattern schema validation , add test case
added a new test class ` ClassPathXmlJobRegistryContextTests ` to verify job retrieval and retrieval from the ` ClassPathXmlJobRegistry
changed the data types of ` mHistoricTimes ` and ` addPositionAndTime ` methods from float to long to accommodate larger
camel - 12320 : camel - restlet should use advanced label for consumer , deprecate deprecated consumer option
camel - 14263 : camel - log should use source code generate configurer to avoid reflection configuration .
refactor the submission of ChromeTraceEvent into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to prevent
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct image layout and prevent invalid layout errors
updated timestamp handling in Event . java and JrubyEventExtLibrary . java to utilize JrubyTimestampExtLibrary ' s newRuby
added a check to ensure the real path does not end with a slash in ContextHandler . java and implemented a test for it in WebAppContext
updated the method name from " TypeErrorThrower " to " GETTER " in ScriptFunctionImpl . java to improve clarity and consistency in
renamed variable ` amt ` to ` scrollAmount ` for clarity and updated logic for setting horizontal and vertical values to improve code readability
graphdecoder : do not set guardsstage if callerloopscope be null
test : migrate sniperprettyprinterjavaprettyprinterjavatest to junit 5 ( # 4536 )
updated URLOutputStreamTest to use try - with - resources for better resource management to ensure proper closing of URLOutputStreams to prevent resource leaks
added @ Entity annotations to Mail class to facilitate the use of morphia ' s entity relationships in the Mail class
updated default values for includeTablespace from false to true and added an option to include indexes to ensure that tablespace information is included , en
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to improve encapsulation and provide access to the underlying buffer objects
added a flag to manage reading of an empty file in ScanBatch . java and a corresponding test in TestJsonReader . java to ensure that
added custom string comparison logic in StringSubject . java and updated test assertions in StringTest . java to enhance failure handling and improve test clarity
added a regex pattern to check for library names in LibUtils . java to ensure that only valid C++ libraries are processed
updated catch blocks in JrtJavaBasePackages . java and PackageHelper . java to catch all exceptions except Error to improve error handling by catch
hbase - 26958 masterfilesystem . open ( ) should wait for write to the file system to be in safe mode
updated error message formatting in TranslatingJavacPhaseTracer . java to include the exception class name and message to improve clarity of error
o no longer need to cache plugindescriptors , so remove it from maven - plugin - plugins
do n ' t fire contact presence status change event if the parent contact do n ' t have a connection
fix checkstyle issue in core / servlet / requestdetails . java ( # 722 )
added a new integration test class for fetching account information from the BTCE exchange to ensure that the PollingAccountService correctly retrieves account information
added mouse wheel functionality in VDUInput and vt320 classes and updated TerminalView to include mouse wheel handling in TerminalView to enhance user interaction
updated library path handling in Natives . java to use a local variable to improve code readability and maintainability by avoiding repeated calls to
no effective change - code cleanup - remove unused
fix player skin flag not be store in metadata ( # 640 )
updated ` LoadBalancerWithServiceTests ` to use ` Logger ` and modified master URL handling to improve logging clarity and ensure correct master URL retrieval
fix npe when call mapservice . getmember ( eventdata ) .
replaced ` System . getProperty ( ) ` with ` AccessController . doPrivileged ( new GetPropertyAction ( ) ) ` for retrieving the OS version
updated TemplateEngineFreemarker to use a configurable file suffix instead of a static value to allow for dynamic configuration of the file suffix
update hash code calculation in SelectMessageQueueByHash . java and add multiple order IDs in SelectMessageQueueByHashTest . java to ensure
ggb - 1181 fix h - dragger and h - dragger - right panel styling on layout change .
refactor binding logic in StyledTextAreaVisual to use EasyBind . when instead of EasyBind . bindConditionally to improve code
added declaredPlatforms field and updated related methods in multiple classes to utilize CxxBuckConfig to enhance platform configuration management and improve code
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` in multiple classes to improve parameter handling in the JPA query creation process
added a null check for the passwordAttribute before setting it in LdapAuthenticationProviderConfigurer to avoid potential NullPointerExceptions when the passwordAttribute is null
added a check for array type in DataUtilities and implemented default value array tests in DataUtilitiesTest to ensure proper handling of array types and validate
updated SslContextFactory to handle null address and improve host name verification to enhance robustness by ensuring host name verification only occurs when the address is not
pdfbox - 4892 : avoid infinite loop , a suggest by valerybokov
eranmes , on behalf of andreashaas : refactoring cookie deletion code to improve code readability and maintainability
added a boolean flag ` mHasEndedLauncherTransition ` to track the end of the launcher transition and modified the condition to recreate controllers only when
added " < meta charset = ' ' utf - 8 ' ' > " to the HTML header and footer in the HTMLListWriter and HTML
refactor IndexReader to improve code readability to enhance maintainability and facilitate future updates
updated the maximum stats key prefix length from 200 to 150 and refactored related methods in HiveConf , FileSinkOperator , and TableScan
added a new class ` bug6337518 ` to ` BasicComboBoxUI ` and modified ` JComboBox ` to include an arrow button
updated TestRandomAccessBuffer class for improved random access testing to enhance performance and reliability of random access operations
refactor UserInfoActivity to improve code structure to enhance maintainability and readability of the code
added ` notifyChange ` method calls to ` CatchupPull ` , ` TimelineRefreshService ` , ` TrimDataService ` , and
added functionality to manage the visibility of pressed and focused backgrounds in BubbleTextView and Launcher classes to improve user experience by ensuring proper
updated ` getFallbackResponse ` method signatures to include ` Throwable error ` parameter across multiple classes to enhance error handling by providing more context about the
removed conditional check for ` env . _ compile _ only ` in ` DumpBytecode . java ` to simplify the conditional logic for better read
add null check for tags before accessing its elements in ChannelUri . java to prevent potential NullPointerException when tags are null
updated JAVA _ REGEX _ SPECIALS format and modified testSqlPatternContainsMUltipleMatchers to testSqlPatternContainsMultipleMatchers to ensure
added a key for the action bar title in FileActivity and updated the action bar title handling in FileDisplayActivity to ensure the action bar title
updated the method from ` Iterables . getOnlyElement ` to ` Iterables . getLast ` in ` PythonDslProjectBuildFileParser . java
updated the schedule annotation from " * " to " 0 " for hour and minute in CleaningService . java to ensure that the schedule is
updated import statements and added methods to handle partitioned tables in TransactionalValidationListener . java to improve validation logic for partitioned tables and enhance error
refactor ReplicationHandler and SnapPuller classes to improve code clarity to enhance maintainability and readability of the code
changed the data type of generatedKey from int to long and updated the prepared statement to return the generated keys to ensure correct handling of primary keys
refactor variable assignment for clarity in SimpleReferenceCache . java to improve readability and maintainability of the code
updated test messages to reference " failed to inline " instead of " disallowed by ciReplay " and " unloaded signature classes " to improve cl
increased keepAliveTimeout and keepAliveTimeoutCustom from 60 to 10 and adjusted thread pool stop timeout settings in WebClientFactoryImpl . java to
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
changed exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and refactored tests in ` DispatcherTest . java
camel - 1745 fixed the unit test error of defaultcxfbinding
added a case for the ' ~ ' character in ClientUtils . java to handle the ' ~ ' character correctly in the application
camel - slack - add an option to set a delay in milliseconds before the next poll .
fix blockutil . getitemstackforblock not fire blockharvesting when drop a block .
updated the layout parameters and modified the JCheckBox string concatenation in TranscodingTab . java to improve layout flexibility and correct a typo in
added a new file ` bug8057791 . java ` that demonstrates the use of Nimbus Look and Feel
refactor logic for setting flags _ field in LambdaToMethod . java and introduce a new interface LambdaInterfaceStaticField . java to improve
refactor subscription manager creation to use WebSocketMethodsFactory and add a new test for eth subscribe availability to improve the management of WebSocket methods and ensure
updated null check condition from checking if the ' to ' parameter is not empty to checking if ' to ' is not null to improve null safety
refactor ParquetFixedWidthDictionaryReaders to improve handling of dictionary values and add a new test for BigInt with dictionary to enhance functionality and
refactor conditional checks and adjust calculations in PortraitPagedViewHandler . java to improve readability and maintainability of the code logic
added a new annotation ` Log ` and ` LogInterceptor ` classes with aspect - based logging functionality to facilitate logging before and after
updated thread state dump formatting in QueuedThreadPool . java to improve clarity of thread trace information when available
refactor CacheGenerator to accept an Optional < Implementation > instead of ReferenceType to enhance flexibility by allowing different cache implementations
added totalFrameSize ( ) parameter to the createReferenceMap method in FrameMap . java to specify the size of the reference map for better
refactor TypesafeConfigurator to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - graphql : added karaf test for the camel - graphql component
added two static methods , bug1 , bug2 , and bug3 in RFE2891944 . java to demonstrate
removed URL encoding for entry keys and values in HttpClientIntroductionAdvice . java to simplify error handling by directly using the entry keys
replaced the deprecated ` unsupportedPlatformTool ` method with a new ` UnsupportedPlatformTool ` class to improve code clarity and maintainability by
changed the type of ` loopCount ` from ` double ` to ` int ` and updated the logging statement to use ` TimeUnit . MILLISECONDS `
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
[ drools - 7 ] make abstractaddressmanager index configurable via reflection
updated column and row specifications in VLCVideo . java to align with new layout requirements to improve user interface responsiveness and alignment
updated URLs from " https : / / bisq / bisq " to " https : / / bitsquare / bitsquare " in multiple
updated the authority string from " com . klinker . android . talon . provider " to " com . klinker .
updated user configuration directory path and improved file existence checks in MavenCli . java and MBoot . java to ensure the user configuration directory exists
added a call to bind the array buffer in VertexBufferObjectWithVAO . java to ensure proper resource management and avoid potential memory leaks
updated ServerHttpSecurity configuration settings to enhance security features and improve request handling
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests that are not ready for execution
added default HTTP headers to HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP request configuration flexibility
add userpasswordnotvalidexception and response for invalid username / password
deleted the NoOpConfigPathGetter . java file to the class is no longer needed in the project
replaced base16Decode method with Bytes . fromHexString for signingKey to improve code readability and leverage built - in byte utilities
replaced the import of CascadedStyle with constants for CSSName and added validation for float style properties to improve code readability and ensure
planningfactproperty , planningentitycollectionproperty , planningentityproperty , planningscore , planningsolution , planningfactcollection
refactor ` getDefaultHeaders ( ) ` method to return a ` MultiMap ` instead of using ` CaseInsensitiveHeaders ` to improve header handling
replace string encoding with charset in ProxyServer , Realm , and SimpleAsyncHttpClient classes to improve code flexibility by allowing charset instead of string
added a method ` getJobId ( ) ` to ` StepContext ` to retrieve the job ID from the job execution and its job instance to
replaced ` compareTo ` method calls with ` Long . compare ` in ` ExpandableUploadListAdapter . java ` and ` FileStorageUtils
replaced error logging with debug logging in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity for better troubleshooting
updated import statements in LegacyAuthenticationHandlerAdapter . java to include NamedAuthenticationHandler and removed specific imports to streamline dependencies and improve code clarity
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
added a check to ensure the invalid filter is not our own before removing it from the network to improve error handling and provide clearer logging for
added a static method ` wrap ` in ` BCPGInputStream ` to create instances of ` BCPGInputStream ` to streamline the
replace DataOutputStream with BufferedOutputStream in MinimalLockingWriteAheadLog . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` doTestSelectAllFromView ` and modified assertions in ` TestJdbcDriver2 ` to include ` tableName `
updated FocusTransitionTest . java with new test cases to enhance test coverage for focus transition functionality
gwt : fix compile error due to unused import
added a check for ` sourceTask ` before retrieving the job and counters in ` CounterStatsAggregator . java ` to avoid potential ` NullPointerException `
removed redundant whitespace in HttpInput . java to improve code readability and maintain consistency
refactor color handling in AppearancePanel to use a ChangeListener instead of reflection to improve responsiveness and error handling when color changes occur
updated the constructor call in TaskHelper to use ' hidden ' instead of ' false ' to allow the TaskHelper to be instantiated with a hidden
http : / / issues . apache . org / jira / browse / amq - 4682 - disable exponential backoff in test
pdfbox - 4892 : avoid resource leak , a suggest by valerybokov
updated imports in BoundSql , SqlSource , and LanguageDriver classes to utilize DefaultParameterHandler to enhance functionality and improve parameter handling in the
fix ( griffin ) : do n ' t optimize spill interval if loop depth be less than or equal to spill depth .
add a new file MicronautAstBuilder . java for Groovy AST compilation to facilitate testing of Groovy scripts in the M
fix : pgstatement . execute ( ) do n ' t call closeoncompletion ( ) twice ( # 1375 )
change the initialization of serviceAdvisorType from null to ServiceAdvisorType . PYTHON to ensure the correct service advisor type is used for Python
avro - 2207 . java : fix java . lang . runtimeexception in genericdatumreader . read ( ) .
change the parameter type of the ` Path ` constructor from ` Collection < ? extends Subpath > ` to ` List < String > ` and
updated assertions in SendCoinShieldTest to use a memo byte instead of a new byte array to improve clarity and consistency in test assertions
added a new method ` setPersonalisation ` to handle personalisation date and email and distinguisher in ` SkeinParameterSpec `
removed redundant conditional check for argument count in CodeGenerator . java to streamline code by eliminating unnecessary complexity
removed the ` 1 ` parameter from the ` scroll ` method across multiple classes to simplify the method signature for better readability and maintainability
made the ` pointer ` variable public and added reset methods to ` FlatRecordReader ` to allow external access to the ` pointer ` variable
rename ` ContentDigestHistory ` class to ` BdbContentDigestHistory ` and update related logger references accordingly to clarify the purpose of
refactor casting logic in CastExpression . java to streamline type handling and improve readability to enhance code clarity and maintainability while ensuring
replace ArrayList with a boolean variable for accepted media types to improve readability and maintainability of the code
added a boolean variable ` false ` to the ` TaskView ` class to control the behavior of task processing
added isAutoIncrement method to LiquibaseDataType and modified CreateTableChange logic to ensure correct handling of auto - increment columns based on column
initialize errorText to a default value of " Command failed due to Internal Server Error " to ensure error text is set to a meaningful default value
updated import statements in DeadListenerTest . java and LocalManagementTest . java to utilize the new ProcessTools import and utilize VM options
changed ` toSimulate . add ` to ` toSimulate . push ` for ` currentStatus ` and ` boosterStatus ` to
added AJP connector initialization and updated port handling in GitBlitServer . java and Build . java to ensure proper AJP port configuration and
added type coercion logic in TransTypes . java and a new class Intersection03 . java with assertions in TransTypes . java to
rename the class EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
added a native method to start a toolkit thread in WToolkit . java to ensure the toolkit thread is only started when necessary ,
[ gr - 21212 ] use compression in parallel for bundle localization .
show the surface on window only if the platform be window ( e . g . linux )
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability
added configuration parameters for fullNodeHttpEnable and solidityNodeHttpEnable in CommonParameter . java and updated service addition logic in Args . java
added a service property to GoogleCloudFirestoreTicketDocument and updated its return statement in GoogleCloudFirestoreTicketRegistry to enable tracking of the
updated method implementations in Generate . java to improve performance and maintainability of the code
[ flink - 33230 ] [ table - planner ] fix json _ format ( java null ) to return string null
modified badge rendering logic to conditionally display text and icons based on the DOTS _ ONLY flag to enhance flexibility in badge rendering by allowing
made the ` getConfiguration ` method synchronized in ` FreemarkerManager . java ` to ensure thread safety when accessing the configuration
added a new test method ` testInvalidExcludedPackageNamePatterns ` to ` OgnlUtilTest ` to ensure that ` excludedPackageNamePatterns `
updated deviceUdid assignment logic to handle " mac " platform and added sdkName to the IdbRunTestsStep class to ensure compatibility with
updated logging levels and modified response handling in DefaultHttpClientFilter and TestDefaultHttpClientFilter classes to improve error handling and provide clearer error messages for
added null checks for mScript and mState before binding and executing it in AllAppsView . java to ensure proper script handling and prevent potential
added a constant for text burning and modified the conditional check for line count to improve text rendering control based on whether text burning
added teardown methods for table and view dropping in TestColumnAccess and TestReadEntityDirect to ensure proper resource management and prevent memory leaks
added a call to get a parser by name in SecurityNamespaceHandler . java to ensure a valid parser is retrieved for the specified name
reformatted conditional statement in BoundedLocalCache . java and added new test cases in BoundedLocalCacheTest . java to improve code read
refactor RawConnection to extend WebSocketConnection and implement flushing functionality to enhance WebSocket connection handling and improve performance during frame processing
added two new test methods to the SoftAssertionsPerfTest class to verify the performance of assertions using softly
added handling for test failures in PythonRunTestsStep and updated the assertExitCode method in ProjectWorkspace to improve test execution flow and ensure correct exit
updated the handling of xAdvances in GlyphLayout . java to include a conditional check for markupEnabled to ensure proper positioning of x adv
refactor assertions in TestBooleanRewrites to use Java Streams for better readability and performance to improve code clarity and maintainability by le
updated the method for retrieving the enum class to use ` getSuperclass ( ) ` instead of ` getEnclosingClass ( ) ` to ensure compatibility with
remove playerconnection . flush ( ) call from player .
added a check to prevent multiple calls to removeOnDrawListener in the Launcher and LauncherAnimUtils classes to improve performance by avoiding
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
replaced specific import statements with wildcard imports for MatchStatus and Phase in ReplicaAssigner . java to simplify import statements and improve code readability
change the default value of mediaparserv2 from false to true in RendererConfiguration . java to enable mediaparserv2 functionality by
do n ' t generate aop proxy when there be only around _ type
added assertions and permission verification for table operations in FolderPermissionBase . java to ensure proper permissions are granted for table operations
publish status for wrong protocol provider in wrong state
updated the random number generation logic in PastelColor . java to use a configurable color base to improve flexibility and maintainability of color
updated imports in ScriptEngineFactory . java to improve code organization and maintainability
refactor bitmap handling in HolographicViewHelper to store original and outline bitmaps to improve code clarity and maintainability by redu
refactor request method handling to use HttpMethod . fromString for better readability and maintainability to enhance code clarity and prevent potential null pointer exceptions
improve the multiwordpreprocessor to handle the case where a phrase contain a word do n ' t match a word .
removed an unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
added handling for HivePassThroughOutputFormat in mmm Table . java and ppp Table . java to improve output format retrieval based on the
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added a condition to check for negative length in the DOMBuilder class to ensure proper handling of cases where the length does not match the expected length
updated conditional logic in ClusteringCoefficient , EigenvectorCentrality , DiameterUI , GraphDensityUI , and HitsUI
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static methods and default methods to demonstrate the
camel - 13850 : defaultkeyselector should use camelcontext to load property from keystore . thanks to stephan siano for
replaced instances of Throwable with ThreadDeath catch blocks in LogResolverBean and ResourceResolverBean to ensure proper handling of ThreadDeath exceptions
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated JGIT _ VERSION from " JGit 1.0 . 0 " to " JGit 1.1 . 0 " and modified
refactor client key assignment and path handling in HttpClientIntroductionAdvice . java to improve clarity and maintainability of the code
int - 1813 add namespace handler for transformer bean definition .
added a new constant REWIND _ TIME and modified conditions for duration checks in ResumeObj . java to improve clarity and accuracy in handling
added the ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` and ` JavaSEPort ` classes to
updated usage syntax in UtilityCommands and improved documentation printing in DocumentationPrinter to ensure consistent usage format and enhance clarity of command usage information
fix checkstyle issue in util / communitylistservlet . java ( # 722 )
removed setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource and updated mergeFiles size in RewriteCrossSpaceCompactionSelector
remove duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor ruleset synchronization logic and improve logging in ProjectPropertiesModelImpl . java to enhance clarity and maintainability of ruleset update logic
fix a bug that cause fieldref . getfieldunsafe ( ) to throw an npe on phantom field .
add convention for camel case meter tag name ( fixes # 217 )
added methods for listener and command creation in IController and TinyGController , and updated BackendAPI to use IController instead of AbstractController
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to ensure rendering correctly handles huge horizontal rules
replace System . out . print statements with TTY . print statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to standard
updated formatting in multiple Java files for consistency to improve code readability and maintainability
changed the condition from checking if frameLength is zero to checking if it is less than or equal to zero to ensure proper handling of frame length
added return statements for value and default value retrieval in IntFloatMap and IntIntMap classes to ensure proper handling of zero values in the map
refactor ImageDownloadService to use Display for icon setting and revalidating component form after updates to improve UI responsiveness and ensure component
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerException when the registered variable is null
removed the ` hasNextSibling ( ) ` method from multiple node classes and updated the return statement in the ` IeNavigator ` class to simplify
fixed - npe be throw if redisdistributedmapcacheclientservice do n ' t return any result
hbase - 26975 add log for mobfilecache enable / disable
updated ColConvCCMTest . java with new test cases to improve test coverage and ensure compatibility with recent changes
replaced instance variables with local variables for ` target ` and ` allowCovariantReturns ` , and updated method calls accordingly to improve code read
pdfbox - 4892 : optimize memory usage , a suggest by valerybokov
replaced ` Float . toString ( jsonData . asFloat ( ) ) ` with ` asString ( ) ` in ` Json . java ` to
added a return statement to the GenericFileConsumer class to ensure proper termination of the file processing process
added a Runnable to invoke the EventQueue . invokeLater in bug6638195 . java to ensure UI updates occur on the Event Dispatch
updated the maximum message size calculation from ` getMaxTextMessageBufferSize ( ) ` to ` getMaxTextMessageSize ( ) ` to align with the
update steeringValue calculation from addition to subtracting 1 to correct steeringValue logic across multiple test files
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
updated JdbcSerDe to utilize LocalDate and LocalDateTime for date and timestamp conversion to improve code clarity and ensure compatibility with local date and time
updated version number from 2 to 3 and refactored metadata reading logic to handle different versions to ensure compatibility with newer Java versions and improve code
added FlywayInitializerJpaDependencyConfiguration and modified FlywayAutoConfiguration and FlywayAutoConfigurationTests to enhance JPA dependency
added sorted ( ) method to ClassesImpl . java to ensure the classes are processed in a consistent order
added a method to retrieve the current stable state in LauncherStateManager and updated its usage in AbstractLauncherUiTest to improve state management and
refactor SharedInformer to improve code structure to enhance maintainability and readability of the code
refactor TestCloseScope0 . java to utilize VersionCheck for memory scope and resource scope implementations to improve compatibility with different versions of J
reduced the timeout from 500ms to 5000ms in the test method to allow more time for the test to complete successfully
refactor CaptchaChannelProcessorTests to improve test structure to enhance readability and maintainability of the test code
fix a bug in metadata import that could cause an item to be remove from the owning collection when the change occur .
added retry logic for saving properties in AbstractRegistry to limit the number of retries when saving properties
updated TrackingDirectoryWrapper initialization to use ' directory ' instead of ' mergeDirectory ' to ensure compatibility with the new directory structure
added test cases for unused imports in ` UnusedImportsRuleTest ` , ` RuleTst ` , and ` UnusedImportsRule ` to
added validation for Iceberg sink description and a check for bucket partitioned tables in HiveIcebergStorageHandler to ensure that insert overwrite
updated assertions in BootstrapTests to correct the expected number of SAML keys and added a check for legacy SAML keys to ensure the correct configuration of SAML
updated method names and conditions in Excluder . java to include non - static local checks to ensure that both anonymous and non - static
removed the synchronized keyword from the getAddressVector method and improved the email sending logic to enhance performance by reducing unnecessary synchronization when accessing the address
removed WAITING _ FOR _ LINE _ COMMENT and WAITING _ FOR _ BLOCK _ COMMENT from CommentsParser . java to streamline comments processing
added IOException handling to lock release methods and introduced LockReleaseFailedException for better error management to improve resource management and provide clearer exception handling for lock
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to organize test classes under a
updated SpelExpressionTransformer , LiteralNode , OperatorNode , and MongoQueryMethod classes to conditionally handle unary operators and improve code clarity
updated ByteBuddy initialization to disable type validation in MockBytecodeGenerator to improve security by disabling type validation during testing
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` and added a new file ` Err
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest . java to ensure that the
polish ` ` allow logging . file property reference to system property ' '
refactor HTTP connection handling in ServiceApiRequest . java to utilize a loop for followed redirects to improve reliability and maintainability of HTTP redirection
added constants for service , version , and application mappings in ServiceCombConstants . java and updated MicroserviceFactory . java to use these constants to
updated method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to provide a more
changed DB _ PATH _ REGEX to DB _ PREFIX and updated related assertions and imports in BaseAndroidTestCase and GeocodeHelperTest to improve
replace return statement to retrieve unread count from HomeDataSource to improve data retrieval accuracy for user accounts
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method in ` DistributionTests
added a limit parameter to the getAllOrder method and modified related logic to limit the number of orders returned based on a specified limit
added null check for the user before retrieving settings to avoid potential NullPointerExceptions when the user is null
added a method to retrieve the absolute file path in LocalFileSystem and implemented a test for relative wildcard paths in LocalFileSystemTest to ensure accurate file
added width and height limits to instance bounds in ComponentBuilders . java to ensure that the instance does not exceed defined dimensions to prevent runtime errors
added SLF4J logging and deprecated connection manager timeout method in CommonsHttpSolrServer . java to enhance code readability and maintainability
removed unnecessary import of ExceptionHandler in PrintController . java to streamline error handling by eliminating unnecessary dependencies
refactor CrateType and RustBinaryIntegrationTest to streamline the filename generation process to improve code readability and maintainability by redu
added number checking logic in SpellChecker . java and a corresponding test in SpellCheckerTest . java to improve spell checking accuracy and ensure
updated the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
added a method to get the OCFileListFragment from a file and refactored the file actions handling logic to improve code organization and enhance
added a daemon mode setting and a try - catch block around the logReplicationTimeAndConfFiles method call to improve error handling and ensure proper
updated the method call to include the recid parameter in the update method to ensure the correct record ID is used for updates
renamed the parameter ` materials ` to ` theMaterials ` and added a check for ` fileColumns ` to improve parameter clarity and
updated dependency names in DependencyBank . java for improved clarity and organization to enhance maintainability and understanding of the dependencies
added calculations for maximum recyclable views in AppsContainerRecyclerView to improve the responsiveness of recyclable views based on the
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure proper functionality of building
baritone control : do n ' t crash if no location find for a given waypoint .
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality and ensure compatibility with the L
added null handling functionality to FilterOperatorUtils and corresponding test cases in FilterOperatorTest to enhance filtering capabilities and ensure correct behavior of range and equal
added validation for the length of bootstrap method arguments and their types in JDynamicInvokeExpr . java to ensure that the bootstrap method ' s signature
fix unit test which fail on the ci - server .
removed the clear of formatter settings in CucumberInstrumentation . java to ensure the formatter is reset before each test execution
changed the type of the ' contacts ' list from ' List < RegisteredServiceContact > ' to ' List < DefaultRegisteredServiceContact > '
added a conditional check to adjust workspace labels based on cell padding to ensure workspace labels are hidden only when necessary to maintain layout consistency
refactor assertions in ReplicationFactorTest to use a unified assertRf method to improve code readability and maintainability by centralizing assertion logic
sulong : add support for pre - initialization in llvmlanguage .
removed JUnit Ignore annotations from tests in ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to enable
replace RuntimeException with JsonIOException in error handling to improve error reporting for JSON - related issues
replaced ` Integer . valueOf ` with ` Integer . parseInt ` for value and value2 in ` VisualScoreTagTest . java ` to
updated error messages in ` Copy . java ` for clarity and improved directory handling to enhance error reporting and ensure accurate attribute copying process
added checks for high - level and low - level consumer segment names in HLCSegmentName , LLCSegmentName , and SegmentName classes
added startActivity and startActivityForResult methods to ShadowFragment and corresponding tests in FragmentTest to enhance fragment functionality and ensure proper exception handling when
replace DateTime . now ( ) with new DateTime ( clockReader . getCurrentTime ( ) ) in DueDateBusinessCalendar . java to ensure
added a target CPU option for x86 _ 64 - none - linux - android in the return list to specify the architecture that should be used
added methods to deleteAllFiles in FileDataStorageManager and implemented deleteAccountFiles in ManageAccountsActivity to improve file management functionality and facilit
updated command line option syntax in SchemaCrawlerCommandLine . java to improve clarity by using the " - h " option for help
added a static factory method to create a suite description and updated equality checks based on the unique ID to ensure that the unique ID is valid and
replaced the manual decoding of bitmap with a direct method call to decodeBarcode to simplify the code and improve readability by eliminating
removed the ` ImmutableList < String > ` parameter from the ` BuckTarget ` constructor and updated its usage across multiple files to simplify the constructor
added unit tests for range checks past end and past start in GWCZoomContextFinderTest . java to ensure correct behavior of zoom context
added a new configuration option for dependency tracking in JRubyScriptEngineConfiguration . java and updated related methods in JRubyScriptEngineFactory . java
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
attempt to create a new table / keyspace if it already exist . patch by jbellis ; review by stu hood for cassandra -
refactor WelcomeWindow to use a compatible image for caching instead of a hardcoded background image to enhance flexibility and improve performance by allowing
updated tuner configuration management to include unique ID generation and improved error handling for submitting buffer transfers to enhance tuner configuration management and ensure
added HasTests interface to AbstractShBinaryDescription and implemented a new test method in ShBinaryRuleIntegrationTest to enable testing capabilities for the Sh
added a condition to set the includeString variable for " db : hsqldb " to ensure compatibility with HSQLDB database configuration
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintainability
truffle : do n ' t materialize host exception when there be no exception .
refactor service loading logic to handle Java 8 and Earlier scenarios more effectively to improve error handling and export JVMCI to the service provider
added test to verify duplicate command handler resolution
[ flink - 20865 ] [ runtime ] add fine - grained shuffle mode for all edge in batch job .
fix the fish hook not work properly in the world . close # 416 and # 466
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - file component
rename ` getCommandRunner ` method to ` getStepRunner ` across multiple classes to improve clarity and consistency in method naming
rename ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class and related methods to improve cl
added a check to return early if the list is empty to improve performance by avoiding unnecessary processing when no items are available
added a conditional annotation for the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration . java to ensure the bean is
log4j2 - 1349 add support for mdc property to xmllayout
added a new constant ` OMIT _ HEADER ` in ` CommonParams ` and implemented the ` remove ` method in ` NamedList ` to
modified the return statement in EscherProperty . java to use getPropertyNumber ( ) instead of getName ( ) and added a new test class Test
updated return statement in the Description class to ensure consistency in method usage across the project
refactor SootClass to use a variable for the Scene object and modify the hierarchy to improve code readability and maintainability by reducing
fix npe in tradedatavalidation . testifdisputetryreplay ( )
added a new ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified several methods in ` DatabaseSchemaCrawler ` , `
wallet : make sendtx confidencetype nonseen in the chain .
refactor HttpClientIntroductionAdvice to handle both Body and Header annotations more effectively to improve clarity and maintainability of the code
fix craftinghelper . processconditions to skip factory and constant json file .
hbase - 26975 region . close ( ) should log warn if close region fail ( # 466 )
refactor length checks in Credential . java to use local variables for better readability to improve code clarity and maintainability
[ java ] do n ' t allow image to be remove when a subscription be remove in the client conductor .
refactor the destroy method to use destroyForcibly and wait for the process to improve process destruction handling and enhance error logging
added a condition to check for Oracle in TestDefaults . java to ensure compatibility with Oracle database operations
camel - 7999 : fixed unit test error when the mailconsumer be not connect to the mailstore .
added token handling logic in the Parser class to ensure proper cancellation of queries that have not been consumed
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` e ' ' complete
added getter for ` getDataFileName ( ) ` method in ` Model ` and modified model assignment logic in ` Voice ` to improve code readability
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes , along with corresponding tests to enable setting and
added new configuration constants for request read and connection timeouts in Configuration . java and updated ViewRegistry . java to use these timeouts to improve configur
added a condition to check if deferredConcepts or conceptLinksToSaveLater are not empty before processing to improve efficiency by avoiding unnecessary processing
added import statements and category annotation for RedisServiceRegistryTests to categorize tests related to Redis functionality
updated ` FindDeprecatedMethodsTest ` to use ` ParameterizedTest ` and modified ` FindDeprecatedUses ` to accept a ` typePattern ` parameter
updated paintComponent method call in WaterfallPanel to ensure proper rendering of the image during component painting
removed unused imports from multiple classes to improve code clarity and reduce unnecessary dependencies
updated ` ContractEventTrigger ` , ` LogEventWrapper ` , and ` ContractEventTriggerCapsule ` to include ` eventSignatureFull `
updated filter condition to check if the sessionId ends with an underscore instead of contains to ensure that the sessionId does not end with an underscore in the
replaced ` g . clearRect ` with ` g . fillRect ` and set the background color using ` getColor ( ) ` to
jbrules - 2642 : fix compilation error when invoker be not present in package
removed debug print statements from multiple Java files to clean up the code and improve performance by eliminating unnecessary output
added a conditional check for NaN score values before assertions in TestFieldCacheSort . java to ensure that score comparisons are only performed when they are
replaced the direct assignment of entity keys with a copy of the device profile entity keys to ensure the original keys are not modified , preventing
added logic to handle zero - time strings in ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to ensure correct handling
replaced instances of ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and
updated constructors of FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , and FunctionFirstPassGroupingCollector to use generics to improve type safety
[ drools - 7 ] fix edit session configuration for kiesessions ( # 339 )
updated the constructor of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure the correct configuration is used for
added a conditional check to return early if modalness changes to improve performance by avoiding unnecessary processing when modalness changes
added a test for creating a CodecCapabilities from a profile level and implemented a native method for global settings in ShadowMediaCodecList to ensure correct
fix # 5460 ( when enter key use , focus be wrong )
added validation for width and height , improving error handling in SunVolatileImage , X11SurfaceDataProxy , and XRPMBl
updated thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure consistent formatting for
replaced ` int [ ] ` with ` AtomicInteger [ ] ` and updated thread management in ` AsyncStressTest ` and ` Stress
added beta flavour check and improved menu visibility handling in AchievementsFragment and LeaderboardFragment to ensure users are aware of beta
added access , name , and desc to the SearchMethodVisitor properties in Search . java and SearchMethodVisitor . java to improve context handling for
added sleep calls and modified exception handling in IoTDBInsertWithoutTimeIT . java to improve test responsiveness and ensure proper exception management
updated the formatting of the media duration setting logic in DLNAResource . java to improve code readability and maintainability
camel - 16400 : camel - jbang - add @ xmlrootelement to specify the name of the xml element for the resequ
refactor txn management into separate methods in TableReader . java to improve code readability and maintainability by reducing duplication
flume - 1186 . thrift : make trustmanager algorithm configurable via system property .
refactor the ` getSingleSourceApplicableTest ` method to use ` Applicability ` instead of ` JavaIsoVisitor ` to streamline the
added exit ( ) method and conditional check for the TAB key in Blockmania . java to ensure proper exit behavior when the tab key is
replace ` PACKAGE _ PRIVATE ` with ` NONE ` in multiple files to standardize access specifier usage across the project
refactor method names and improve error logging in Check . java and add a new class T6199153 . java to enhance clarity of
updated OrcInputFormat to retrieve stripes and stripe statistics from orcReader and orcTail to ensure correct retrieval of stripes and
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions during execution
myhentaicomics ripper now use https instead of http
added functionality to show the current version in the app option to provide users with information about the current jar version
replace split method with splitTokens for exportList to improve code readability and maintainability
added keyboard rotation handling in ConsoleActivity and updated input connection in TerminalView to improve user experience by allowing dynamic rotation based on user preferences
updated the type of the PriorityQueue in ParallelMultiSearcher from HitQueue to PriorityQueue < ? extends ScoreDoc > to improve type
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when accessing ownerConnectionAddress
camel - 16400 : camel - jolokia - add support for jolokia header map factory to manage camel context .
updated string concatenation syntax in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
int - 1212 jmsoutboundgateway now implement initialization and allow to configure the jmsqueue
updated the index parameter from ` i + 1 ` to ` i2 ` in the conditional check from ` expecting ( env , trace , i
fix npe when add a script engine module class loader ( # 11307 )
updated PooledConnectionImpl to include PGStatement class in the proxy instantiation to ensure compatibility with PostgreSQL statements in connection handling
refresh size estimate when run cassandra integration test
changed log level from error to warn in AtomicRemainder . java to better reflect the severity of the memory limit encountered
fix TTLExpiryTest to verify that aggressive timestamps are properly expired to ensure that the system correctly handles aggressive timestamps during compaction
fixed - rblockingdeque . polllastasync ( ) and rblockingdeque . pollfirstasync ( ) method return negative timeout .
removed unnecessary string concatenation in JobInspectCommand . java to simplify output and improve readability
refactor Engine class to improve code structure to enhance maintainability and readability of the code
replace usage of ` Stream . of ( children . values ( ) ) ` with ` entrySet ( ) . stream ( ) ` for sorting children
[ issue # 5790 ] fix acl client do not work properly ( # 5791 )
changed the condition from checking numIndexDims to checking numDataDims in BKDWriter . java to correct the logic for handling data dimensions
[ hotfix ] do n ' t print stacktraces to stderr in notebookserver
change function name from ' funN ' to ' lt ' in ExpressionNodeEvaluator to improve clarity and consistency in naming conventions
removed the public access modifier from verifyIdsAreStable ( ) and getNodeId ( ) methods in NodeIdAccessor . java to enhance encapsulation
server : improve error message when try to attach a volume to a vm before create snapshot
changed method visibility of write , flush , and clear in ItemWriter from public to package - private to restrict access to the method for better encaps
updated the parameter of the ThingImpl instantiation from an empty string to " test " to provide a more specific test for the ThingImpl functionality
added a ` toString ` method to the ` ImageNameSubstitutor ` class and a corresponding test in ` ImageNameSubstitutorTest
replaced FSDirectory with RAMDirectory in TestNorms . java to optimize memory usage and improve test performance
added a conditional to calculate the line height based on the current height of mDrawTextRectBuffer to ensure the line height does not exceed the
updated WalletAppKit . java file to enhance wallet functionality and improve user experience
do n ' t load hat . js if the scriptengine be nashorn
remove the checkboxes from the menu and button group in ChatTransportSelectorBox . java to ensure that the checkboxes are properly removed from the
added resolve and replaceTokens methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes to provide functionality for resolving and replacing tokens in
fix nullpointerexception if bsq block explorer do n ' t have a value
added attributes map and methods to manage session attributes in StandardSession . java to enhance session management by allowing retrieval , setting , and removing attributes
added assertions to verify the behavior of the ` getPlainBean ( ) ` bean in ` TestDbJson _ List ` to ensure that the
update averages array initialization from pageSize to initialPageCount to ensure accurate representation of page count in the averages array
refactor BatchCommandLineLauncher for improved clarity to enhance code maintainability and readability
added JDBC datasource and transaction manager beans to BatchMetricsApplication . java to facilitate the use of embedded database and transaction management in the
make glowrootloghttpclient implement httpservice instead of unauthenticatedhttpclient
pdfbox - 4892 : reduce memory usage , a suggest by valerybokov
removed synchronization from the close method in DocumentsWriter and added deleter refreshing in DocumentsWriterPerThread to improve thread safety and ensure
added methods to manage multiple choice options and validation constraints in UiBinding . java to enhance property management capabilities and improve code readability
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for better consistency across multiple classes to improve readability and
added a fullSave flag to control the saving of the whole tree and improved error logging for better clarity to enhance user experience by allowing
updated the condition handling in Affix to use a Pattern object instead of a String to improve flexibility and maintainability of the condition pattern management
replaced generic list initialization with diamond operator in KrakenAdaptersTest . java to improve code readability and reduce boilerplate
removed unnecessary import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class for improved clarity to enhance maintainability and readability of the code
removed unsupported encoding check in VectorizedPrimitiveColumnReader to streamline code by eliminating unnecessary error handling
updated conditional checks for static admin UI files and improved logging structure in HttpSolrCall . java to enhance code clarity and maintainability while
destroy the metadata service proxy when the service instance be change to ensure proper cleanup of metadata resources after service instances
fix infinite recursion in defaultentityqueryrepository when maxlevel = 10
updated error message construction for null changelog ID in HubChangeExecListener . java to improve clarity of error messages when the changelog has not been
add try - harder to blackbox test to make sure it work
refactor ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of an integer to improve type safety and clarity in handling
updated event range handling logic in ObjectStore . java to improve clarity and maintainability of the event loop
simplified the support check in ValidatedLocalValidatorFactoryBean to enhance readability and maintainability of the code
fix a race condition in entityawareworldprovider . removetemporaryblockentities ( ) .
[ intrinsification ] remove redundant type check in intrinsifyarraycopyphase .
remove unused logging configuration in TestCoyoteAdapter . java to clean up the code and improve readability
updated exception handling in Reporter and removed WantedAnywhereAfterFollowingInteraction class to improve clarity of error messages and streamline stack
added validation for ownerAddress and key address in AccountPermissionUpdateActuator , modified variable names in PermissionAddKeyActuator , and PermissionDelete
( scott phillips ) change command sorting to use a sorted map .
chore : [ lifecycle ] update go _ package to match open source code ( # 9365 )
replaced ` addProperty ` calls with ` setProperty ` for metadata properties in ` BaseSingleTreeBuilder ` to improve clarity and consistency in metadata configuration
updated AsmLoader constructor to accept a ClassLoader parameter and modified class definition logic to ensure proper loading of classes based on the parent class loader context
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the export statement in Java2TypeScriptTranslator to use " declare " or " export " based on the presence of a definition scope to
updated HttpClientTest to use AbstractHandler instead of EmptyServerHandler to improve request handling and ensure proper output stream management
simplified the addListener method calls in HelloInput . java to improve code readability and maintainability by removing unnecessary array parameters
added a null check for the lhs variable in AbstractSqmPath . java to avoid potential NullPointerExceptions when accessing the lhs path
updated package declaration in multiple test classes to ensure consistency in package structure across test files
refactor image handling in AwtCanvas to manage grayscale and invert operations more efficiently to improve image processing efficiency and handle different image types
make native - image - location - qualifier configurable in compilerconfigurationfactory
[ beam - 8470 ] remove dataflowportabilityapiunsupportedexception from usestimersinpardo .
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 119 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log warn if max - size configuration do not allow any data in map
updated return statements from " AST " to " LST " across multiple Java files to clarify that the code reflects the current L
corrected the calculation of scoreablesPerThread and improved the handling of scoreable jobs in ThreadedAcousticScorer .
replace AssertionError with a return statement in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated goTo and title calls to use window ( ) . title ( ) instead of title ( ) method to improve code readability and maintain
added default makeString methods to ParallelIterable , RichIterable , AbstractSynchronizedRichIterable , AbstractMultiReaderMutableCollection , and Rich
replaced ` Ordered . HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` in ` OidcServicesManager
added a ` weakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` and ` WeakAssociationsCatalogLoader ` classes to allow customization of
refactor Deflater class for improved performance to enhance compression efficiency and reduce memory usage
added error handling for IOException in Font . java to ensure proper resource management and prevent potential resource leaks
camel - 7999 : camel - core - optimize versiontypebinding to avoid nullpointerexception when content be empty .
refactor the onPostExecute method to directly return the places list instead of using the result list to improve code clarity and reduce unnecessary variable
change content type check from uppercase to lowercase in MailConverters . java to ensure case - insensitivity in content type validation
changed access modifier of AUTH _ MAGIC from private to public in OpenSSHPrivateKeyUtil . java and updated OpenSSHPrivateKeySpec . java to
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter and modified its implementation to handle folder name suggestion more efficiently
updated import statements in InheritanceCacheTest . java and modified the @ Cache annotation in InheritanceEntityTest . java to streamline imports and
updated import statements in ConnectOAuth2RequestFactory . java and added a new getUserApprovalRequest method in TofuUserApprovalHandler . java
fix influx name convention not apply to tag value ( fixes # 645 )
do n ' t print bug pattern if there be no resolution for a marker
updated the cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the new cookie format
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and modified its usage in the ` Subject ` class to ensure
added functionality to enable or disable the " Clear All " action based on user preferences to enhance user experience by allowing clear - all tasks to be
updated ` desiredRepoVersion ` to be a final string and added null check for ` existingCSVer ` before creating a new cluster stack version
remove memoryleaktest since it be nightly test
updated the return statement in ServletTester . java to use the local host address if localhost is true to ensure that the returned URL reflects
added a condition to check if MvDWAPI is enabled and modified the BAN _ DELETER flag in Settings . java to
fix abstractpartitionassignmentcorrectnesstest by assert cluster size after each instance
refactor FFIProvider to use SingletonHolder for singleton instantiation to improve code maintainability and ensure proper initialization of FFI providers
add a test for hierarchical file list ( in batchprocesstest )
added null and collection name assertions in MongoTemplate . java and corresponding test cases in MongoTemplateTests . java to improve error handling and ensure data
change the return value of Position constructors from 0 to NODE _ LIST in NodeClass . java to change the logic for determining the position based on
added a new BigDecimal field ` accTradeValue ` and its getter method in ` BithumbTicker ` , along with corresponding tests in `
enhanced logging messages in RealtimeSegmentDataManager and AvroUtils to include the segment name to improve clarity and debugging by providing more context
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java
replace ArrayList with CopyOnWriteArrayList for headerReaders , dataReaders , and readers in FixedByteMVMutableForwardIndex and FixedByteS
fix typo find by codespell on fossies . org
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during transition operations
( chore ) camel - maven - plugin : replace @ ignore with thread . sleep
updated condition to check if ` beginCycle ` is greater than or equal to ` currentCycle ` in ` DelegationService . java ` to
updated the random value string generator from 6 to 10 in JdbcExpiringCodeStore and modified assertions in CodeStoreEndpointsTests and Autologin
added a type check for UniqueConstraint in StandardObjectChangeFilter . java to enable matching of unique constraints based on their table
updated the handling of language descriptions in MediaDetailFragment . java to improve clarity and functionality to enhance the readability and maintainability of the
catch both arrayindexoutofboundsexception and classcastexception , log recoverable exception .
added support for reference filters in ListImagesCmd and ListImagesCmdImpl classes to enhance flexibility in filtering options for image listing operations
( chore ) camel - jms : remove bridgeerrorhandler from endpoint builder
added checks for specific conditional lines in OpExclusionUtils . java and set allOps to true if no ops are found to ensure proper handling
added two return statements in DatabaseCommand . java to ensure proper error handling during database operations
added two new Politician instances , p1 , p2 , and p3 in HonestPoliticianExample .
[ zeppelin - 4560 ] fix bean shell init file be n ' t be blank
camel - 7999 : camel - restlet - make it easy to configure the restlet port . thanks to stephan siano
removed unnecessary case handling for WALL _ SIGN block in SchematicFormat . java to streamline code and improve readability by elimin
added a system property to set the maximum query length in QTestUtil and removed overridden configurations in SessionState to limit query performance and eliminate unnecessary
changed access modifiers of userName , securityMgr , createHttpConnector , and HttpConfiguration to private and introduced a baseHttpConfig method to enhance encaps
updated processor names from " writeHdfs " , " writeKafka " , and " s3Sink " to " hdfsSource " across
updated Spark application name handling in HiveConf and HiveSparkClientFactory to ensure the correct application name is set based on configuration
renamed variable ` whiteName ` to ` includedName ` for clarity to improve code readability and maintainability by using a more d
danielwagnerhall : use the window . maximize ( ) method instead of the window . restore ( ) method .
updated methods in ` LocalCellProviderFactory ` , ` AbstractEmbeddedCellBuckOutInfo ` , and ` DefaultProjectFilesystemFactory ` to
removed an assertion check for " entity expansions " in TestXMLEntityExpansion . java to streamline error handling by elimin
update table offset and length calculations to use bitwise operations to ensure correct handling of integer values within the range of 0 to 7FFFFFFF
added an assertion to verify that the customized form is not null to ensure that the form is properly initialized before use
refactor the line buffer allocation logic in LineChartRenderer . java to use a variable for the number of floats to improve code readability and
refactor flavor handling in AndroidBinaryDescription to utilize a loop for better readability and maintainability to improve error handling for unrecognized Android targets
changed buffer index from offset to i in LwjglGL11 . java to correctly reference the buffer for rendering
added new classes Property and PropertySuper , and implemented a test class TestClassResolutionFail to ensure proper functionality and error handling during class resolution
remove shutdown hook only if shutdownhook _ enabled .
updated FilterChainProxy and VirtualFilterChain classes to use " FilterChjainProxy " instead of " FilterChainProxy " and improved
replaced ` Collections . sort ` with ` Arrays . sort ` and updated return statements in ` PercentileAggregationFunction . java ` to improve
added checks to ensure schema is loaded before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to prevent potential null pointer exceptions
initialize baseType to null and add literalPrefix , literalSuffix , and localizedTypeName to MutableColumnDataType to simplify type handling and improve clarity in
updated link references in multiple Java files to use the @ link syntax to improve readability and maintainability of the code
replaced singleton evaluator instances with final static evaluator instances in EvaluatorFactory . java to simplify the initialization process and improve code readability
updated paths in BuildCommandIntegrationTest and ConfigSettingIntegrationTest to use " config " instead of " osx - > osx _ config
added sound effect handling in AllAppsView . java to enhance user experience by enabling sound effects during playback
added IOException to the main method signature in RemoveFirstPage . java to handle potential IO exceptions during the main method execution
added a line to enable granularity for the left axis in the BarChartActivitySinus class to improve data visualization by enabling granularity for
refactor version comparison logic in GdxSetup . java to use a separate compareVersions method to improve code readability and maintainability by redu
updated file handling in ContextHandlerGetResourceTest to use a target testing directory and added assumptions for OS compatibility to improve test reliability and
added close methods to Connection , JsonAsyncHttpPinotClientTransport , PreparedStatementTest , and ResultSetGroupTest classes to ensure proper resource management and
log4j2 - 1343 mockappender now use a linkedblockingqueue instead of a hardcoded number of event .
[ beam - 4142 ] use guava to check if a resource be a directory .
removed multiple static import statements related to SpriteBatch in IsometricStaggeredTiledMapRenderer . java to streamline import statements
remove duplicate call to unbindHandle in ItemServiceImpl . java to improve code readability and maintainability by eliminating redundancy
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
simplified the condition for touch handling in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated NavbarButtonsViewController to use UI _ MODE _ NIGHT _ YES for dark theme handling to improve UI responsiveness
replaced ` abort ` with ` throw ` for error handling in ` PolyBenchLauncher . java ` to improve error handling by explicitly throwing
replaced the handling of bootstrap method and name and type indices with a new variable refKind to improve clarity and maintainability of the code
added support for BlockFormattingContext parameter in findBox and findElementBox methods to enhance box rendering flexibility based on block formatting context
added error handling and output logging in WorkerProcess and WorkerShellStep classes to improve process termination and provide better error information during job execution
added null checks and improved handling for null operators in CheckedListReplaceAll . java to enhance error handling and provide clearer feedback when passing
added a test for writing connections based on the ` _ testFill ` flag and a ` _ writeCallback ` in ` SslConnectionTest .
added listener management to DeviceFlag and modified default value handling in FeatureFlags to improve responsiveness to device configuration changes and ensure consistent default value
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to mark the test as ignored due to a known issue gh - 111
removed unused import of MalformedURIException in StandardRequestHandler . java to streamline code by eliminating unnecessary dependencies
update instructorfeedbackeditpage to focus the endDate box when edit a new feedback item
refactor synchronization for ownTradesObservable and userTradeObservable in KrakenStreamingTradeService . java to improve code readability and maintain
changed System . err . println statements from " System . err . println " to " System . out . println " in ChangeableUrls .
refactor SparseRowMatrix to accept a boolean for random access instead of a RandomAccessSparseVector to improve flexibility and control over random access
bug cs - 15936 : do n ' t trigger volume . delete usage event if the volume pool be n ' t exist
refactor file input / output handling for the HIVE _ PLAN job based on configuration settings to improve flexibility in handling local configurations and
[ beam - 8470 ] upgrade guava to v26.0 - jre in udftestprovider
do n ' t register memory cct provider twice in memorycallgraphbuilder
do n ' t send message if there be no multi user chat operation set
added file write validation in Save . java to ensure that only valid files can be written to prevent illegal user actions
added a new ` FolderSyncActivity ` class and integrated it into the ` DrawerActivity ` to manage folder synchronization functionality to enhance user experience
[ hotfix ] [ test ] use closer for resource cleanup in sequentialchannelstatereaderimpltest
improve the spanishtreenormalizer ' s handling of comma - separated word . also fix a bug in the spanisht
replaced direct point reading with a packed value slice reading in SimpleTextBKDWriter . java to improve performance by utilizing a more
added LocaleRandomizer and its corresponding test class to facilitate random locale randomization in the application
added assertions to verify mime type detection for specific font types in TestMimeTypes . java to ensure correct detection of font types and improve error handling
[ netbeans - 4560 ] upgrade from 8.0 to 9.0 cause an exception
reformatted the code in TCPTransport . java for improved readability to enhance maintainability and clarity of the code structure
modified the read timeout calculation in Http2AsyncParser . java to include a default value of 0 to ensure that the read timeout is always set
updated the default watch initial delay from 120 to 600 milliseconds in TimelineMetricConfiguration . java to improve the responsiveness of the watch metrics
updated the string format in the PRIMARY KEY column error message to include the previous column name to improve clarity in error reporting for better debugging
added date parsing functionality to the ThirdEyeJiraClient class to enable handling of date fields in the issue builder
refactor priority generation to use a new ` PriorityGenerator ` for better code organization to improve maintainability and streamline priority frame handling
added a constant for maximum scalar replace code size and updated the scalarReplace condition to ensure that the code size does not exceed a maximum of 2
added DATE _ TAKEN to the projectionTest array and updated folderSortOrder and fileSortOrder in MediaProvider . java to ensure the media data
updated drawImage parameters in TexturePacker2 . java to adjust image dimensions to ensure proper rendering of images with adjusted dimensions
added WebSocketUpgradeFilter functionality to JettyWebSocketServerContainer and updated related classes to enhance WebSocket handling and improve test coverage for lazy WebSocket upgrade filters
added shutdown calls to Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper resource cleanup and avoid potential memory leaks
added a new ` RawJsonRequestBodyAnnotationProcessor ` class and registered it in ` JaxrsSwaggerGeneratorContext ` , ` Echo ` ,
added a new method ` newTarget ` to create a ` Target ` instance with specified type and extension to facilitate the creation of
updated BeanContainer to initialize entries as an ArrayList and added BeanContainerTests for testing to enhance functionality and ensure proper test coverage for ListBeanContainer
hbase - 26975 fix the typo in testmetricsregionserver # assertgauge ( string , int )
camel - 1745 fixed the issue of cachedoutputstream not close when exchange be complete .
added a line to set the device ID in the position object to ensure the position object has a valid device ID for processing
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` in ` HybridProjectBuildFileParser . java `
added a new ` visitAssignop ` method to handle null assignments in ` Attr . java ` and created a new test class ` FailOver
added enableAccountHandling flag to BaseActivity and modified onCreate method in FirstRunActivity to conditionally call onCreate based on the enableAccount
do n ' t try to find the main polygon if the point do n ' t exist in it
refactor DrillViewTable to accept a path list as a parameter and update its usage in WorkspaceSchemaFactory to improve flexibility in view
added default allocator settings in PooledByteBufAllocatorL . java to enhance memory allocation options for better performance and resource management
updated ObjectInputStream handling to return a short array instead of a double array and added a new CloneArray class to ensure correct cloning of short arrays
added a new configuration variable for low - level IO thread pool size in HiveConf . java and updated LlapIoImpl . java to use
use sun . security . ssl . ssllogger instead of sun . security . ssl . debug in jdk8
updated latitude and longitude range checks in LatLonGrid . java and added assertions in TestLatLonGrid . java to improve validation logic and ensure
alexeibarantsev : adding expectcondition to allow element to be visible
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and modified its access level to control whether to overwrite existing files or
added a test for the outer class reflector in ReflectorTest . java to ensure correct behavior of the getEnclosingObject method in the inner class
added " auto _ generate _ android _ facet _ sources " configuration to ConfigIgnoredByDaemon and updated IjProjectBuckConfig to use
updated message formatting in HubChangeExecListener . java for clarity and improved logging messages to enhance readability and provide more informative feedback
added properties list to the Link class and a corresponding test in QuickLinksConfigurationModuleTest to ensure proper handling of overridden properties in QuickLinks configurations
updated ` @ EqualsAndHashCode ` and ` @ ToString ` annotations in ` InitialConfig ` and ` YamlConfigFileDTO ` classes , and added
updated generic type parameters for SimpleForwardingServerCall and SimpleForwardingClientCall in AwaitableServerClientCallConfiguration . java to enhance type safety
added @ CallerSensitiveAdapter and private static methods for class loading in mmm Class . java and ppp Class . java to enhance security by
replaced ` isEmptyOrNullString ( ) ` matcher with ` is ( emptyOrNullString ( ) ) ` for better readability in ` Request
updated ThreadPoolExecutor to ThreadPoolExecutorEx and replaced LinkedBlockingQueue with LinkedBlockingQueueEx in GroupExecutor . java to enhance thread management and improve
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes or packages
updated TimeStepdefs . java to replace HumanTime with ChronicConverter and modified imports for better date handling to improve date conversion functionality and
fix ` spark _ isolated ` , ` spark _ recessive ` , ` spark _ isolated ` and ` spark _ recessive `
updated ` BitstampPollingAccountService ` , ` BitstampPollingMarketDataService ` , and ` CampBXPollingTradeService
updated print statements in RecordGenerator . java for clarity and consistency to improve code readability and maintainability by standardizing output formatting
( chore ) camel - kafka : remove auto commit from resume test
removed unnecessary lock release logic in Liquibase and updated logging execution in LoggingExecutor to streamline lock management and improve code clarity
updated @ SuppressWarnings annotations in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to improve type safety and suppress warnings related to raw types and serial
added synchronized keyword to several methods in Database and SessionRemote classes to ensure thread safety when accessing shared resources
polish ` ` allow auto configuration of nested property ' '
updated the ticker adaptation from baseSymbol to counterSymbol in VirtExMarketDataService . java to accurately reflect the correct symbol
( chore ) camel - core : fix checkstyle issue
replace UUID . randomUUID ( ) . toString ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor
added synchronization to date and number format parsing methods in DefaultJobParametersConverter to ensure thread safety when modifying date and number format properties
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
updated height scale setting in FractalHeightMapGrid to use a dynamic variable to improve flexibility by allowing dynamic adjustment of height scaling
updated equality check in SecurityConfig and changed assertion in SecurityConfigTests to ensure consistent behavior and improve test clarity
changed the default value of ` dumpPartitionId ` from ` false ` to ` false ` in ` StdoutSink . java ` to ensure that
added unit tests for TronTXOutput and TronTXOutputs in UTXOSetTest . java to ensure the correctness of transaction
[ java ] unused variable name ignore by java 9 it ' s ok
pdfbox - 4892 : avoid npe , add null check
added a new test to verify that new job parameters override previous restart parameters in JsrJobOperator to ensure that job restart properties are correctly applied
added a protected boolean field ` disallowBatchOnCascade ` and a method ` isDisallowBatchOnCascade ( ) ` to the
removed redundant code for creating a principal in JaasAuthenticationHandler . java to streamline the principal creation process and improve code clarity
refactor core shutdown process to use a dedicated executor service to improve thread management and error handling during core closure
removed unused imports and added visibility check for mActionsView in RecentsView . java to improve code clarity and ensure mActionsView
refactor parameter handling in RunIdIncrementer to use a conditional assignment to improve code readability and reduce potential null pointer exceptions
refactor BasicEntity and TestUtil classes for improved organization to enhance code readability and maintainability
added unit tests for ` getMatchedDevices ` method in ` SchemaRegionBasicTest ` to ensure correctness of device matching logic in the schema
[ 3.0 ] metricseventbus do not invoke metric collection exception ( # 9011 )
modified the EigenvectorCentrality class to include a conditional update and added a new EigenvectorCentralityBuilder class
updated registry initialization to use a generated port variable instead of a hardcoded one to improve flexibility and maintainability of registry configuration
updated geometry data creation to include type and index and color data in GeometryGenerator . java to enhance geometry processing by incorporating additional parameters
set the amplifier of the beacons to 0 instead of 2 to fix a bug where the beacons do n ' t
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable health check by default and streamline health check logic in the HttpClientConfiguration and ServiceHttpClientFactory classes to improve clarity and maintainability of
defaultvalidator : ensure group be an interface instead of an array
added a new key and a timeout option to the bug8057791 test to improve test reliability and address a specific bug in the
make the scheduler thread daemon to allow speedment application to exit via main method completion fix # 322
remove the backslashes from the version string when retrieving the build number to ensure compatibility with the GRADLE version format
added a reflection access check in JavaAdapterFactory to enhance security by ensuring proper access control
camel - 16400 : add the option ` ` lazysessioncreation = true ' ' to camel - mina
updated ` initIOContext ` method in ` CombineHiveRecordReader ` and ` HiveContextAwareRecordReader ` to include ` RecordReader
deleted ` ClassLoaderHolder ` and ` LoaderManager ` classes and refactored ` VerticleManager ` to use ` loader ` directly to simplify
added a configuration change method and updated workspace root handling in FileStore . java , and refactored file system retrieval in ScanClassPath . java
added error handling around session callback registration and unregistration to improve stability by catching potential exceptions during callback registration and unregistration
updated index paths for " src / test / org / apache / lucene / index / index . cfs " and " index . noc
[ hotfix ] [ runtime ] add createandstart method to akkarpcserviceutils
added a retry condition to set the maximum number of map attempts in TestExportSnapshot . java to improve stability by controlling attempt failures during
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a new test class SslConnectionTest to verify SSL connection behavior to ensure proper handling of closed SSL connections before filling
added validation for address and family types in InetAddress and NetworkInterface classes to ensure valid address and family types are used to prevent runtime errors
added a new test method for serializing a date list in DefaultTypeAdaptersTest . java to ensure that JSON serialization works correctly for date lists
refactor message handling logic in Message . java to improve code readability and maintainability
nifi - 1741 : fixed bug in putdatabaserecord that cause the sql to be generate multiple time . this close #
adjusted the loop condition in TableOutput . java to correct the calculation of the running width to ensure proper rendering of the table elements based on
pdfbox - 4071 : avoid npe , avoid npe if decodeparams be null
updated priority logic in FormatStringChecker to set a specific priority based on the " { 0 " character in the format string to improve clarity
[ java ] add property to ignore non - final loop variable in a for - each statement .
added PDF version and full compression settings in PDFExporter and updated sample file path in PDFExporterTest to ensure compatibility with the latest PDF format and
added unit tests for ` LdapUserDetailsMapper ` to validate role attribute mapping to ensure correct handling of multiple and non - string role attributes in
add read timeout configuration to ldap context factory .
8274894 : [ testbug ] move java / lang / invoke / testdescription . java to a separate package
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
updated variable names from ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to clarify that the variable should avoid
added a condition to check if the state handler is invalidated in the gesture state check to ensure that the gesture handling logic only proceeds when the
updated ` mMaxDistanceForFolderCreation ` and ` mOverScrollPageIndex ` variables , and modified rotation calculations in ` Workspace . java
updated import statements and property handling in OciConfigConfigSource . java to utilize ConfigProviderResolver instead of ConfigProvider to ensure compatibility with
refactor Testjsig class to improve code structure to enhance maintainability and readability of the test code
mana tablet , greater mana ring , terra pick , and terra pick mana limit mana to count count . close #
regenerate client with updated copyright year ( # 4382 )
added a @ SuppressWarnings ( " serial " ) annotation to the serialVersionUID field in P11TlsPrfGenerator . java to suppress the warning about
refactor variable names and validate TsFile logic in DataRegion . java to improve readability and maintainability of the code
added new files ` Switch21 . java ` and ` Switch19 . java ` with switch pattern matching and null handling to demonstrate
updated error messages in ComparableSubjectTest to include " MyTest . ComparableType " and " RawComparableType " to improve clarity and
set xmlstandalones to true in openxml4j . util . documenthelper . savexml ( ) for openxml4j .
updated integer cache size validation and improved exception message formatting in Int2ObjectCache . java to enhance error handling and provide clearer context for
removed sorting of security and web security filters based on bean definitions in WebSecurityConfiguration and WebSecurityConfigurationTests to ensure that filter chains are ordered
changed the parameter from TimeInForce . GTC to null in BinanceTradeService . java to simplify the order processing by removing unnecessary time
updated FloatRangeRandomizer to extend AbstractRangeRandomizer and added validation for min and max values to ensure that min and max values are greater
updated the KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure
camel - 14850 : camel - jms - add documentation and json schema for the jms component .
added error handling when retrieving the upper bound in SourceUtils and created a new test class TestGetBound to ensure robustness of bound retrieval and
refactor LeafFilterFactory to use a dedicated method for creating FilterPredicateLeafBuilder based on primitive types to improve code readability and maintainability
modified the logic for extracting the original artifact name and added setup and teardown methods in multiple test classes to ensure proper resource management and resource closure during
read the serial number of the http server certificate , if any , into the truststore .
modified the default value retrieval logic in ` Config . java ` and added a new ` DnsFallback . java ` file with multiple checks in `
ww - 4662 - add stack trace to exception when write tag .
changed the field type from boolean to String for the ' success ' status and added a new ' url ' field with a ' coin ' parameter
modified the privilege handling in WindowsSecurity . java to use a lambda expression to ensure proper resource cleanup to improve code readability and maintainability
removed " address " and " phone " scope from the CommonOAuth2Provider builder to simplify the OAuth2 scope configuration
refactor the submission process in ManagedSelector to use a new Start class to improve clarity and maintainability of the code by encapsulating the
added constants for hue , saturation , and brightness in WLedHandler . java and modified the sendGetRequest method in WLedHandler
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set to improve code readability and maintainability by using a
added a new method caseJSRInst to the InstSwitch class to handle JSR inst switching correctly
add transaction support to the subscription activating subscriber ( # 3649 )
updated SQL query construction and prepared statement handling in DBMSProcessor . java to improve SQL error handling and ensure proper execution of prepared statements
added elevation setting to ContactItemInflater based on Android SDK version to ensure compatibility with devices running Lollipop or higher
rename ` typeInformation ` to ` identifier ` in multiple locations to improve clarity and consistency in variable naming
replace direct file reading and writing with a privileged action using AccessController to enhance security by enforcing access control during file operations
refactor Groovy parsing and printing logic for binary operations to improve clarity and functionality of Groovy binary processing
updated the warning log message to include the exception class name instead of the message to improve clarity in error reporting for better debugging
fix for bug # 44327 - correctly read umlat from excel file
added a new test method to download files with Norway characters in the file name to ensure the file download functionality correctly handles file names containing
replaced RuntimeException with a CancellationException in AsyncResource . java and added cancellation checks in FingerprintScannerSample . java to improve error handling by
fix npe in timedmemberstatefactory when statistics be null
added a test for removing an object from an explicit collection in MongoTemplateTests . java to ensure proper functionality of the template ' s remove method
update copyright year to 2022 ( # 2843 )
[ beam - 8470 ] correct newline character in coder error message .
added functionality to manage and restore scroll behavior in RecentsView and PagedView to improve user experience by ensuring clear - all buttons are
refactor HiveIcebergMetaHook to use a constant map for COMMON _ HMS _ PROPERTIES and update related method calls to improve
added a method to check if an address is in use and updated related error handling to improve code readability and maintainability by centralizing address
added a command - line argument to specify the class path in TestNestmateAttr . java to ensure the test class path is correctly
replaced the import of java . util . logging . Logger with a direct reference to verbose _ schema in Grep . java to simplify logging
fix checkstyle issue in util / distributed / distributedcontext . java and util / sessionidmessage . java
# 1181 - enh : add transactionmanager . isnestedusesavepoint ( ) ... for check nested use savepoint
replaced ` fetchSize ` with ` ThreadLocal < Integer > ` in ` QueryProcessExecutor ` and updated related methods to improve thread safety
[ java ] replace back off idle strategy with noop idle strategy in embeddedpingpong .
refactor HttpClientIntroductionAdvice to use a lambda for handling blocking calls and introduce a new handleBlockingCall method to improve
added handling for HDP _ VERSION system property in SliderAppsViewControllerImpl . java to ensure proper configuration of HDP _ VERSION when
refactor JavacProcessingEnvironment to replace loaderClass and jusl with a loader object and add close methods for better resource management to
added a DeepCloner class and modified the parameters array in ParameterizedRobolectricTestRunner and RobolectricTestRunner classes to
added a binding for JETTY _ SHOW _ STACKTRACE to Boolean . FALSE in ResourceBase . java to provide a default value for stack
added type checking for the object in NativeObject . java to ensure proper handling of object types to avoid runtime errors
replaced the use of ` OopField ` with a new ` BasicOopField ` import and added a new ` wellKnownK
updated JwkKeyListView to use PublicKey instead of RSAPublicKey and improved serialization logic to enhance type handling and ensure proper serialization of
do n ' t spawng isolates when use only writable boot image heap
updated test cases in MBeanServerMXBeanUnsupportedTest . java to improve test coverage for unsupported methods
removed unused import of OrderClassLoaders in MavenPluginCollector . java to clean up the code and improve readability
renamed the ` Validator ` method to ` validator ( ) ` and added ` getOwnerAddress ( ) ` method in multiple actuator classes to
added test case for http : / / issues . apache . org / jira / browse / amq - 4568
replaced calls to ` toByteArray ( min ) ` and ` toByteArray ( max ) ` with separate byte arrays for min and max values to improve
refactor node and edge handling in ProtobufAnnotationSerializer to use a builder pattern to improve readability and maintainability of the code
[ java ] remove a correlationid from the async command set when it be remove from the driver .
added ` saveConflict ` method calls in ` FileDataStorageManager ` , ` FileDownloader ` , and ` FileUploader ` classes to
updated various classes to use generics for type safety to enhance code clarity and prevent unchecked warnings
updated import statements to use Lucene ' s splitFileNames method instead of Solr ' s splitFileNames to improve compatibility with Lucene '
added driver properties for Oracle and MySQL drivers to enable remarksReporting and useInformationSchema to improve database connection handling for different database drivers
updated MockMethodInterceptor instantiation to include a handler parameter and added serialVersionUID to SignedSupportingClassProxyFactory to ensure proper serialization of the interceptor and
updated time calculation in FileChangedExclusiveReadLockStrategy to use System . currentTimeMillis ( ) instead of Date to improve accuracy and clarity of time
[ hotfix ] [ table - planner - blink ] wrap class loader in localexecutor in executioncontext
added a Runnable to execute onBufferChanged in TerminalView and refactored buffer handling in TerminalTextViewOverlay to improve UI responsiveness
reformatted code for improved readability in processConfigFile method and added a conditional check for the pid namespace to enhance code maintainability and ensure
modify freeze operation logic to support tvm freeze v2 instead of v3
added insecure property and corresponding getter / setter methods to TlsConfig , and updated TlsUtils to handle insecure configurations to enhance security by allowing
refactor JavadocTool to use a conditional path variable for searching subpackages and add a new test class T7091528 to improve
updated the ` ExporterGDF ` class to use ` edgeColumns ` instead of ` nodeColumns ` and added a new ` EdgeColumns
added cascade option to DefaultAddress entity in DefaultUserInfo . java to ensure all entities are persisted , enhancing data integrity
change message . equals ( ) to use arrays . equals instead of getmessageid ( ) .
updated response body format in AsyncProvidersBasicTest . java to include Unicode escape for ISO - 8859 - 1 to ensure proper handling of Unicode
[ hotfix ] [ test ] remove unused method in rocksdbserializablecompositekeybuilder
added a method to retrieve static permissions in ProtectionDomain and updated SubjectDomainCombiner to conditionally use it to improve access control for static
added null check for recipe in RecipeHandlerBrewery and RecipeHandlerElvenTrade , and improved formatting in CachedFloating
refactor parsing logic in Parser . java to improve clarity and structure to enhance readability and maintainability of the parsing process
added a method to show a connection error popup in UploadMediaDetailFragment and updated UploadMediaContract to use this method to improve user feedback on
added a new test class ` Issue596 ` and modified ` HttpHandlerImpl ` to check for unsupported media types to ensure proper handling of
updated bitwise operation to use ' L ' instead of ' 1 < < bitIndex ' to ensure correct handling of long values during bitwise operations
updated import statements in ImportLayoutStyle . java to improve code organization and maintainability
refactor ConsoleWrapper to replace gitBashConfigValue with useStdIn and update related constants to improve clarity and maintainability of input
refactor tests in ShadowAccountManagerTest to use TestAccountManagerCallback for better clarity and consistency to improve test readability and maintainability
remove the enclosingType field and its assignment in AnalysisType . java to simplify the type lookup process by directly using the wrapped AnalysisType
renamed methods in Pairs and InPairsExpression for consistency and clarity to improve code readability and maintainability by standardizing method names
removed the timeout parameter from the set method in PutAllCallable to simplify the method call by eliminating unnecessary timeout settings
[ rip - 10 ] fix npe in mqclientinstance . getconsumerrunninginfo ( ) when all consumer be empty or not (
[ java ] generate source identity when create a channel in the driver conductor .
added a new file ` TopTabAction . java ` that implements the ` Presenter . Toolbar ` interface with an action listener to provide
camel - 16400 : fixed dynamic router not work in multiple recipient mode . thanks to stu hood for the patch .
refactor ` AggregateItemReaderTests ` to use JUnit ' s ` @ Before ` and ` @ Test ` annotations instead of extending `
updated the Procedure method signature to use generics to enhance type safety and improve code clarity
added functionality to retrieve and display user - specific wikidata edits in AchievementsActivity and updated related URLs in NetworkingModule
added a validation check for the length parameter in OfflineSorter . java to ensure that the length does not exceed the Short . MAX _ VALUE to
fix min _ value bug in absolute value accumulator
updated multiple dataset classes for consistency in naming conventions to improve code readability and maintainability across dataset implementations
updated the exception message in ` ProvisionClusterRequest ` to include acceptable values for ` CredentialStoreType ` to improve error reporting for invalid credential types
updated the initialization of the vector element in TestVectorUtil . java to ensure randomness in the range of 0.01 and 0.1
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the comparison logic to improve performance by
added SSL property handling in TestUtil . java and updated related test assertions in PGPropertyTest . java to ensure proper SSL configuration is utilized
danielwagnerhall : enable safebrowsing for chrome , and add unit test for download potentially harmful
added null check before cloning flight configuration in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding behavior based on renderer
updated DataTable methods to handle empty rows and added a test for empty lists in TableDiffer to improve robustness of table comparison and ensure correct
added a custom ignore tag to the RobustJavaMethodParser to exclude specific native code sections from processing
camel - 16400 : do not swallow optimisticlockingexception in jdbcaggregationrepository . update ( )
do n ' t require reflection for @ configurationproperty ( parent = ' ' other ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity and modified toolbar and fragmentContainer padding to enhance activity responsiveness and improve layout responsiveness
deleted the ClusterNodeInfo . java file to remove unused code that is no longer needed in the project
simplified the return statement in ShieldedTransferActuator . java to improve code clarity and maintainability
added debug output for cipher suite selection in ServerHandshaker to improve traceability of cipher suite selection in the handshake process
updated the ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to handle single template selection and visibility based on the size
added a new ` nodeLabelMap ` and modified the ` importContainerImpl ` to handle duplicate node labels to improve the handling of duplicate nodes
added a new file R2303044ListSelection . java that implements a GUI with a list selection option to demonstrate and
[ java ] remove registration id from publication registration map and throw an error if it be already in use .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the ` compound ` property
replaced the use of ` rowCountParents . values ( ) ` with ` rowCounts ` in ` computeNewRowCount ` to include the number
added path handling and query parameter management in SpringBootDocBuildTemplate and DocUtil classes to improve parameter handling and ensure correct configuration for mock values
[ netbeans - 4560 ] fix npe in notification service implementation .
updated ` DistBuildSlaveExecutor ` to use ` CachingBuildEngineDelegate ` instead of ` DistBuildCachingEngineDelegate ` based on remote
improve error message when parse failure
added a debug flag to the log statement in WidgetsModel . java to allow logging of filtered messages only when DEBUG is enabled
updated Console and Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a test for discount overlaps in TestSimilarityBase . java to
added reflection - based method calls to ` send ` in ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests ` to
added new exit and quit methods with corresponding properties in Global . java and removed the old quit method from ScriptingFunctions . java to streamline
updated variable names in LoanBrokerSharkDetectorDemo for clarity to improve code readability and maintainability by using consistent naming conventions
rename method from ` getFirstUnverified ` to ` findFirstUndesired ` across multiple classes to improve clarity by using a more descriptive method
cloudstack - 4892 : apply relevant cookie if not find in the web service request context
updated assertions in ResinAcegiAuthenticatorTests to ensure correct authority checks to improve test reliability and correctness of authority validation
updated ` bigIntegerToBytes ` method calls in ` ECKey . java ` to include a fixed length parameter to ensure proper handling of input data
fix ` ` fml . disabledmods ' ' - > ` ` fml . modstates ' '
refactor account selection handling in ` ReceiveExternalFilesActivity ` to a separate method ` showAccountChooserDialog ` to improve code readability and
improve error message when client can not connect to the stream
added a check for an empty result in ValidatorContractController and created a test for it to ensure that a validator contract calls return an empty list
added a null check for the root variable in TexturePackerFileProcessor . java to avoid potential NullPointerExceptions when reading the settings file
removed null checks for data source and JNDI in PooledConnection . java to simplify the code by eliminating unnecessary null checks
updated TARGET _ MB and WINDOW values , and added a sink variable in TestRefprocSanity . java to optimize memory allocation and improve
added null checks before writing to the console in EditorConsole . java to prevent potential NullPointerExceptions when writing to the console
camel - 14850 - camel - aws2 - * : improve the flexibility of the credential refresh mechanism
refactor alert handling in SingleUploadFragment to use a dedicated method for displaying information to improve code readability and maintainability by reducing duplication
modified the parameter name from ' priv ' to ' pack ' in the test method and added a package argument to the test method to enhance cl
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 and modified import statements in ModulesTest .
replaced specific imports with a wildcard import and added a conditional check for dependencies to simplify import statements and prevent unnecessary dependencies from being resolved
added a set of ZipFileInputStream streams and modified the releaseInflater method to ensure proper resource management and prevent memory leaks
rename datamatrix to data _ matrix to avoid confusion .
added methods to run active and idle based on key ranges in SequenceGeneratorSource . java to improve handling of idle states and ensure proper synchronization during
corrected a typo in the method name from ` getCurrentyActiveConnections ( ) ` to ` getCurrentActiveConnections ( ) ` in `
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java
added support for " ppc64 " and " ppc64le " architectures in Bits . java and ByteArrayAccess . java to
updated the RuntimeException message in RoboMonitoringInstrumentation . java to include details about the issue to provide clearer context for the activity resolution failure
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of MINUTES for timeout settings to improve responsiveness by limiting the
[ flink - 33238 ] [ test ] use instant instead of offsetdatetime in dateutiltest
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a Toast message indicating that YouTube Player does not work on Lollipop yet to inform users that the update is waiting on
added parsing checks for unterminated characters in SQL statements and corresponding tests in StatementTest to improve SQL syntax error handling and ensure correctness of trigger
added a check to ensure the vibrator is not null before proceeding with vibration to prevent potential null pointer exceptions when accessing the
updated table border and background color settings in DotRenderer . java , modified column background color , and added arrowhead and arrowtail variables for better
added a method to check if a string is encoded in HiveConf and updated SetProcessor to handle it to improve handling of encoded configurations and enhance
pdfbox - 4892 : catch all exception , a suggest by valerybokov
refactor X509Certificate class to improve certificate validation logic to enhance security and reliability of certificate processing
handle invalid uri in wavefront config ( fixes # 3903 )
removed the dependency on BitmapLruCache in TimeLineCursorAdapter and added new constants for BLUR and CIRCLE in NetworkedCache
removed unnecessary ` View target ` parameter from ` LauncherAnimUtils . ofFloat ` calls across multiple classes to simplify the method signature and improve
updated controller version references in DependencyBank . java and modified BuildScriptHelper . java to write the gdxControllersVersion to ensure compatibility with the
refactor LaunchedURLClassLoader class structure to improve code readability and maintainability
updated DataSourceHealthIndicator to use DataAccessUtils for query results and added column count validation to improve data access reliability and ensure correct column count
( scott phillips ) add no - cache header to layout tag response .
updated warning message formatting in ZkController . java to use Locale . ENGLISH to ensure consistent formatting of warning messages across different locales
refactor SolrQueryParser constructor to use ' this ' keyword for clarity and consistency to improve code readability and maintainability by standardizing
updated copyright year in multiple Java files to 2017 to ensure compliance with the GNU General Public License and improve code organization
removed redundant lines in MainTest . java to improve code clarity and maintainability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added a check for VoidColumnVector in VectorizedBatchUtil to return a new VoidColumnVector instance to ensure proper handling of VoidColumnVector
updated the method call to use ` req . getName ( ) ` instead of ` templateName ` to ensure the correct template name is used for processing
removed the private static method ` isTypeMatch ` to simplify type matching logic to improve code readability and maintainability by eliminating unnecessary complexity
[ java ] add sessiondecorator . offer ( ) method to allow reuse of message buffer .
rename method and variable from trustAllXForwardedRemoteAddressResolver to trustAll to improve clarity and consistency in naming conventions
added a new annotation ` NoBootstrap ` in the ` manifold . api . host ` package and modified ` BootstrapInserter ` to
hbase - 25836 fix npe in tabledescriptorchecker when check max _ filesize and memstore _ flushsize ( # 2586
updated the handling of the maximum number of commits and adjusted the calculation of the numCommits variable to ensure accurate tracking of the number of commits and
updated method signatures in bug6794831 . java to include InvocationTargetException and modified SwingUtilities . invokeLater to invokeAndWait to improve error
added a new constant for BUILD _ ID and refactored the fillInOriginFromCache method in CachingBuildEngine to improve code clarity
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed redundant line of code for marking a future as done to streamline the code for better readability and maintainability
added import for TezConfiguration and integrated it into the TezConfigurationFactory to facilitate configuration management within the Tez dag
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
removed redundant check for visibility in CustomPlaybackOverlayFragment to streamline code logic for better readability and maintainability
added a null check for recentSounds and implemented a forget method in OpenALAudio to prevent potential NullPointerExceptions when stopping recent sounds
report discontinuity only once on positiondiscontinuity event
added new number tick units for " 0.000000000 " and " 0.0000000000 " and " 0.000000000 " to
refactor TargetGraphAndBuildTargets to use the factory method for building TargetGraphAndBuildTargets to improve code readability and reduce boiler
removed the IndexFileNameFilter class and updated its logic in IndexFileDeleter . java to streamline file deletion checks by eliminating unnecessary
add an option to check the entire entity ' s collision bounding box for ladders in the forgecommon container . ( # 4
added a default compression level parameter to several methods in ApkBuilderStep and SignedJarBuilder to allow customization of compression levels for Apk
added a test for including static fields in the MirrorTest class to ensure that static fields are correctly included in the stub jar
added support for BYTES data type in FieldSpec and MetricFieldSpec , and updated related logic in SingleValueSet and PercentileTDigestQueries
updated string formatting in multiple failure error tests to include an EOL character to improve readability and maintain consistent formatting of error messages
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the
added cache management functionality to SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPaginationConfiguration , and ForumService classes
add locale to pronunciationmodel filename , treepath , managerclass , features , and maryproperties . needproperty ( ) to
added null post body handling and updated HTTP request configuration in SimpleHttp . java , and created a new test case in TestHttpPlugin . java
added a dispatcher to the ClientSideSlb and its test to shutdown the executor service to improve resource management and ensure proper shutdown of the executor
added conditional logic to adjust the V2 position based on flip Y state to ensure correct positioning of texture elements based on flip orientation
throw invalidconfigurationexception instead of hazelcastexception when property be miss in discovery strategy configuration
added a null check for the contextPath variable in MetricsPublisher . java to ensure a default context path is used when no context path is provided
[ drools - 1342 ] avoid npe when load a resource from the projectclassloader when reinittypes be call ( #
added serialization header for the BTreeMap root header in SerializationHeader . java and defined a constant in SerializationHeader . java to ensure proper handling
added precompiled header handling and validation in various classes to ensure compatibility with both ` prefix _ header ` and ` precompiled _ header ` in
replaced WeakReference with a custom AccWeakReference for security context management to enhance security by ensuring access control when updating images
modified the visibility of ` findNextIndex ` method in ` ObjectMap ` , ` ObjectSet ` , and modified import statements in ` OrderedMap
changed the ` isDirect ` variable from ` true ` to ` false ` in ` VertexBufferObject . java ` to correct the logic for
remove redundant code for retrieving audio effect help text in MaryClient . java to streamline code for better readability and maintainability
change return type of localToAscendantCoordinates and localToDescendantCoordinates from void to Vector2 in Actor . java and Group . java
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added null check before removing the close hook in the context to prevent potential NullPointerException when context is null
updated border spacing logic in CellLayout and DeviceProfile to accommodate folder - specific border spacing to enhance layout flexibility based on container type
refactor valueNumeric handling to use a new ValueNumeric class for better encapsulation to improve code readability and maintainability by encapsulating number
updated the condition to check for deferred authentication in FormAuthenticator . java to ensure that the authentication process only proceeds if the response is not deferred
updated argument checks in StartArgs . java to use " -- add - to - start " instead of " -- module - start - ini "
added a null check for the default partition value in DynamicPartitionFileRecordWriterContainer . java to ensure that a default partition value is used when
[ hotfix ] [ runtime ] fix npe in streamgraph . getoperatorfactory ( )
updated return statements in DefaultArtifact . java to include classifier information to ensure accurate representation of artifact references with classifier information
camel - kafka : fixed the issue that consumer . subscribe do n ' t call getoffsetstate twice
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve user feedback when dependencies are missing for loading
enable gmail notifications by default for jabber account registration wizard .
doc : [ dialogflow - cx ] fix typo in javadoc . ( # 9395 )
updated LumberjackMultiThreadTest to use a concurrency level variable and adjusted expected message count based on available processors to improve test reliability
fix nullpointerexception when check if the player be dead .
refactor Exchange class to improve code readability to enhance maintainability and reduce complexity in the codebase
api : updateuser - allow api and secret key to be specify with apikey
refactor switch statements to if statements in MfaProvider , IdleTimer , JdbcMfaProviderProvisioning , and SamlServiceProviderConfiguratorTest to
refactor AbstractMetaDataExportMojo class to improve code organization to enhance maintainability and readability of the codebase
added error handling for SQL integrity constraint violations in Hive . java to ensure proper dropping of materialized views to prevent runtime errors
updated property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to improve clarity and consistency in
added a new class ` RoboExecutorService ` that extends ` org . robolectric . android . util . concurrent . RoboExecutorService
added checks for root groups and menu items in GroupTreeView . java to ensure proper handling of group addition and removal in the menu
updated method names and conditions for building service and span names in BraveClientExecutionInterceptor . java to improve clarity and correctness in handling
refactor ProcessBuilder initialization and add verification for dynamic number of gcthreads in TestDynamicNumberOfGCThreads . java to improve
changed the return type of getHostFlavorMap and related methods from ImmutableFlavor to ImmutableSet < Flavor > in CxxPlatforms .
updated SQL creation syntax and added parameter handling in CreateTable and CreateTableDeParser classes to improve clarity of SQL creation statements and ensure proper
modify the background drawable initialization to set an alpha value of 64 to improve the visual appearance of the chat background
test : migrate ctiteratortest to junit 5 ( # 4536 )
added token and result clearing methods in CharTokenizer , KeywordTokenizer , TokenStream , StandardTokenizer , and DocumentsWriter classes to ensure proper handling
add a new test class ` ASTInitializerTest ` to verify that the ` ASTInitializer ` functionality does not crash on block statements to ensure robust
updated StateMachineConfiguration and StateMachineFactoryConfiguration classes to remove generic type parameters and add validation for missing configurers to ensure proper configuration and
danielwagnerhall : remove unnecessary check for " link = " in the selenium test .
ww - 4490 add support for float / double to string conversion
simplify code by directly return the current scope instead of the unitofwork instance
updated touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to
removed a condition that checks for the ' ~ ' character in the FencedCodeBlockParser to simplify parsing logic by eliminating unnecessary
added socketTimeout property and its handling in ConnectionFactoryImpl and BaseDataSource classes to allow configurable socket timeout values for socket read operations
added a sleep delay of 500 milliseconds in ElementAttributeTest . java to simulate a delay for better test reliability
updated InputStreamReader to use UTF - 8 encoding when reading from the URL to ensure proper handling of character encoding when reading from the URL
refactor List class to improve code readability to enhance maintainability and facilitate future updates
added constructors to AsyncFileImpl and updated error handling in AsyncFileImplTest to improve asynchronous file operations and ensure proper context management
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to mark these classes as stable for future removal or re
nuage vsp : return null if there be no vsp device configure on the physical network
renamed method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` UploadListActivity `
updated Java version checks from ` getJavaVersion ( ) ` to ` classFileVersionJava9 ` in ` ConstantPoolTagTests . java ` to
refactor error and warning handling in compiler . java for improved clarity and organization to enhance code readability and maintainability by standardizing
added a method to clear all client headers in the AsyncHttpClient class to improve the efficiency of header management in the asynchronous HTTP client
replace Vector with ArrayList for storing input and output files to improve type safety and performance in handling file names
updated the DEFAULT _ GRID _ COLUMN value from 4.0 f to 3.0 f to improve visual appearance by using a more
added a condition to check if the query is not defined for view creation in CalcitePlanner . java to ensure that the query is not
updated regex pattern in TestHS2HttpServer to simplify date formatting to improve readability and maintainability of the test code
added error handling when retrieving the object in GraphPrinter . java to ensure robust object retrieval and avoid potential runtime exceptions
simonstewart : add a test for access pages with an insecure ssl certificate .
updated ByteBlockPool to use Math . addExact for byteOffset calculation and added a test for too many allocs in TestByteBlockPool
mahout - 295 - change interactionvalueencoder to use locale . english for string . format
added error handling to the TcpTransport class to ensure proper resource management and error reporting when exceptions occur
add @ suppresswarnings ( ` ` serial ' ' ) to avoid warning on non - serializable object
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` to simplify the class structure
change ` ` save change ' ' to ` ` discard change ' ' and return to the main window
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator . java and improved error logging in OAuth20AccessTokenEndpoint
added a chk ( index , 1 ) method call in DrillBuf . java to enhance validation logic for the index parameter
updated the ` initTableMapperJob ` method signatures to include an additional ` inputFormatClass ` parameter to enhance flexibility by allowing different input
removed redundant ` append ` call in ` AbstractJRubyMojo . java ` to streamline code by eliminating unnecessary complexity
llvmpolygloteval should throw llvmpolyglotexception if the language be not available .
added deprecation warning and validation for the reserve parameter in ReplicationHandler . java to ensure that the master ' s reserve parameter is mutually exclusive and
rename ` cacheVariableName ` to ` cacheForeignKey ` and update related references to improve clarity and consistency in naming conventions
changed variable and method references from ` handles ` to ` keyBytes ` in ` ECKeyPairGenerator . java ` to improve clarity by using a
[ flink - 30613 ] [ state ] allow restarting to specify the status of a job in cancellation state
replaced the singleton instance of RotationTouchHelper with a direct constructor to simplify the object creation process and improve code readability
refactor code to use ` flatMap ` instead of ` filter ` for processing ` UniFiPortTable ` and ` UniF
add support for unique thread id in bsddebuggerlocal . getthreadforidentifieraddress .
updated offer handling logic to check for existing offers before adding new ones to the offer book list to improve stability checks and ensure state and error
update test to use constant for default tl protocol
updated MockitoMethodInvocationControl to handle different mock types and refactored SystemClassUserTest and SystemClassUserCases to use doReturn
updated NotLoadedException to include the current object as a parameter in multiple classes to improve error handling by providing more context in exception messages
replaced import of DisplayUtils with getIntent ( ) . putExtra ( EXTRA _ FILE , ( OCFile ) null ) to simplify
added error handling and error logging in StoreDirect . java and StoreWAL . java to improve resource management and provide clearer diagnostics for file
added UI _ HELPER _ EXECUTOR execution for screenshotting tasks in AbsSwipeUpHandler . java to ensure that screenshots are
added ` hidden ` functionality to ` CommandArgumentDefinition ` and updated ` LiquibaseCommandLine ` to utilize it to enhance command argument
[ hotfix ] [ test ] change the remote port in loggingkafkaplugintest from 8090 to 9092
[ geos - 8470 ] refactored stylegrouphelper to use styledlayerdescriptor from the styleinfo object instead of the catalog
added permission checks for launcher activities and refactored shortcut creation in the Launcher and PackageManager classes to enhance security by preventing malicious
added an ` getId ( ) ` and ` setId ( void ) ` methods to multiple tiled map tile classes to provide a consistent way to
refactor Manager class implementation to improve code readability and maintainability
updated JDBC connection string to include version specification and modified session builder to include version to ensure compatibility with the API version 0.13 for better session
added schema and schema properties to LiquibaseGenerateChangeLogMojo to enhance change log generation flexibility based on specified schemas
replaced ` putIfAbsent ` with ` put ` in the ` registryCache ` to simplify the method usage and improve performance
benchmark : log singlebenchmarkrunner exception instead of error
removed the ' final ' modifier from the ' doPutRecord ' method in AbstractCacheRecordStore . java to allow the method to be overridden
update game home directory path format and remove physical width / height assignments to ensure correct directory structure is used for game home management
added new test methods for handling large and slow response content in FastCGIProxyServletTest . java to improve testing coverage for large and slow
added a call to start the ReadInteractionsService in MarkReadService . java to ensure that the ReadInteractionsService is properly started to
added a conditional check for ` lintClassfile ` before logging warnings for missing annotation methods to ensure warnings are only logged when the class file is
added logic to set the SMTP port from a configuration property or default to a hardcoded value to ensure a valid SMTP port is used and prevent
added retry mechanism for SSLFactory reloading in TlsUtils . java to improve reliability of SSLFactory renewal process and handle potential issues
updated the date format in ObjectMapperProvider from " HH : mm ' Z ' " to " HH : mm : ss ' Z ' " to
corrected a typo in the error message assertion in SpyingOnRealObjectsTest . java to improve clarity and accuracy of the error
added functionality to check if line ends on NL in InlineBoxing and updated LineBox to utilize this new method to improve line ending handling
updated the filePathString construction to handle null parent case to ensure a valid parent is used when the filePath is null
removed unused import of DocCollection in TopicStream . java to clean up the code and improve readability
refactor NinjaServletContextTest to use a new method for creating a ServletInputStream and add a new test for handling Windows - 1250
updated properties in AbstractCasEndpointTests to include exposure information to enhance test coverage by ensuring exposure properties are correctly included
added a validation check for the dynamic graph in StatisticsControllerImpl . java to ensure that the current graph is a dynamic graph before proceeding
disable the bean that be @ scopeone on a method and throw a disabledbeanexception if it be disable . fix # 3740 (
camel - 16400 : camel - jsonpath - add support for suppress exception in jsonpath api . thanks to stephan sian
updated the creation of ControllerLeaderLocator in HelixServerStarter . java to ensure the correct leader configuration is used
updated usage messages in CLHSDB and HSDB to specify command - line arguments instead of Java to improve clarity and consistency in command
refactored the ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` to remove redundant code to streamline the
remove deprecate write class in favor of org . apache . beam . sdk . io . write
replaced direct calls to ` getAccessibilityManager ( ) ` with ` getAccessibilityManagerInstance ( ) ` in ` ShadowAccessibilityManagerTest
add a group display id for flutter usage statistic ( # 6373 )
removed ` AbstractBuildRuleWithResolver ` from multiple classes and replaced ` SourcePathResolver ` with ` AbstractBuildRule ` to simplify the class
refactor enum data type handling in PostgreSQLDatabaseConnector to use a new PostgreSQLEnumDataTypeHelper class to improve code organization and encapsulate enum data
updated the log path assertion to use the file separator character to ensure consistent path formatting across different operating systems
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency with the updated
added unsupported operation exception handling for index tables in HiveMetaStoreClient to ensure proper handling of unsupported operations and prevent runtime errors
added visibility check and updated disabled flags in RecentsView to ensure proper handling of actions view when the visibility is not visible
added a conditional check for non - Windows OS and configured a specific highlighter for the repl syntax to ensure compatibility with non - Windows environments and
added a method ` addOptionalLocalVariable ` to handle optional local variables in ` BugInstance ` and updated ` CrossSiteScripting ` to
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
removed unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency in formatting
changed the value of _ metaDataComplete from true to false to reset the metadata state after processing
changed the return type of ` removeTaskTarget ` from boolean to void and modified bitmap creation logic in ` ThumbnailSearchResultView ` to improve
added environment variable support for release and android flavors in JsBundleGenrule to enhance build configuration flexibility by allowing different flavors to be
modified type casting logic in Lower . java and added a new class T6500701 . java with a test method to improve type safety
added tests for handling new lines in comments and Javadoc in AddImportTest . java and updated imports in AutodetectGeneralFormatStyle .
added a hubMode property to AbstractLiquibaseChangeLogMojo and updated its usage in AbstractLiquibaseMojo to
simplified condition checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to improve code readability and maintainability by
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure that the
updated method lookup for the ` setIndexerThreadPool ` method in ` LuceneTestCase . java ` to simplify the code and improve readability
removed " 5000 " from the SMS address in GameCanvasImplementation . java to simplify the address format for better clarity
added a copy method for JobExecution and updated execution management in MapJobExecutionDao to ensure job executions are correctly deserialized and retrieved from the database
added a new file ` DownloadTest . java ` to implement a test for downloading images to ensure the application correctly handles image uploads and handles file
normalize language in the format object and update related test case to ensure consistency in language representation across formats
updated exception handling in GenericUDFRound to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and specificity of exception handling for
add null check for ` selectedVersion ` before accessing ` version ` and ` versionTag ` in ` ManageDependencies . java ` to prevent potential
removed multiple AntPathRequestMatcher entries from SecurityConfig . java to streamline the security configuration by eliminating unnecessary request matchers
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
do n ' t inject java . lang . object class into bean definition if they be the same class
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test during development
changed ` SUPPORTED _ THING _ TYPES ` from ` final static ` to ` static final ` in ` OpenWebNetEnergyHandler
simplified code by removing unnecessary variable declarations in AprEndpoint . java to improve code readability and maintainability
deleted the SunToolkitSubclass . java file which contained a method to flush pending events in the AWT toolkit to the functionality was
updated DefaultRenderableSorter to utilize Matrix4 for translation calculations and added a method to check for rotation or scaling to improve code clarity
added unit test to verify wrapper handler registration before primitive type to ensure proper handling of primitive types in TypeHandlerRegistry
added a check for PDLab in PDSeparation . java and implemented a new method to convert a raster to RGB images to enhance
updated API URLs to use BuildConfig instead of CommonsApplication to align with the new configuration structure for better maintainability
camel - 18131 - camel - health - add health check for camel - http - main component
fix a nullpointerexception in entitythornchakram when the block position be null .
added a test for altering a table with indexes extend primary keys in AlterTableWithViewsIT . java to ensure that the table correctly
updated offset initialization in FileFloatSource . java and modified assertions in TestFunctionQuery . java to improve clarity of offset handling and enhance test
removed the ID field from MongoRecordReader to clean up unused fields to improve code efficiency and maintainability
added disconnection handling in YeelightHandlerBase and disconnect method in DeviceBase and WifiConnection classes to ensure proper resource management and
added support for " AUTO _ INCREMENT " in the SQL parser and created a new table in TestCompatibility to ensure compatibility with the Inno
refactor SharedIndexInformerFactory to encapsulate existing shared index informers in a map to improve code readability and maintainability by reducing
server : fix npe in listtemplates api when uservm be not null
updated image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage instead of InputStream to improve image management and enhance code clarity
removed deprecated constants and constants related to shortcut , uri , and display mode from LauncherProvider and LauncherSettings to clean up the code and
jbrules - 2623 : move broker . drl to org . drools . examples . broker : move data file to org .
added legendTop and legendBottom variables to the PieChart class and adjusted offset calculations accordingly to improve legend positioning and ensure proper height calculations
added a condition to check if the worldTransform det ( ) is zero in BaseShader . java to prevent unnecessary processing when the worldTransform is
added a new file ` MaryScriptCreator . java ` that creates a text file based on input and output directories to facilitate
added a new attribute to store the remote host in the flow file to ensure the flow file reflects the remote host associated with the request
refactor compactionLogger initialization and close its resource in LevelCompactionTsFileManagement . java to ensure proper resource management and avoid potential memory leak
updated link attribute keys in ComponentDescription . java to use " href " instead of " xlink : href " to simplify attribute retrieval for better
camel - 14850 - camel - aws2 - s3 : use a different executor for timeout checker in the stream upload producer
hbase - 26923 addendum add log for regionserver state transition to closed
added null check for span before logging to improve stability by preventing potential NullPointerExceptions
trim whitespace from the active option before adding it to the configuration to ensure valid options are added without leading or trailing spaces
added support for enabling wallpaper depth effect in DepthController to enhance user control over wallpaper zoom settings based on user preferences
added an assertion to verify the success count of the overseer in OverseerTest . java to ensure that the overseer stats
removed the method ` getKernelVersion ( ) ` and simplified the return statement in ` LinuxFileStore . java ` to streamline the code
[ hotfix ] fix checkstyle violation in execconstants
added ScreenRecordRule import and annotation in ThemeIconsTest . java to enable screen recording functionality for test b / 260722220
added a method to set scan attributes for paging in TableSnapshotResultIterator and updated ScanUtil to utilize this new method to improve code organization
added a validation check for the lowRange in Request and RequestV2 classes to ensure that the lowRange is within a valid range to prevent
hbase - 26975 add debug cache size estimation to hbase - server ( addendum )
server : use zone uuid instead of uuid for listhosts api call
[ zeppelin - 4566 ] fix utf - 8 encode issue in livy interpreter
simplified the removal of a filesystem entry by removing it directly from the filesystems list to enhance code readability and maintainability by redu
changed the data type of the ` obj ` variable from ` Object ` to ` String ` and updated related methods accordingly to improve clarity and
increased the timeout duration for polling hard commit from 2 seconds to 5 seconds in SoftAutoCommitTest . java to allow more time for
do n ' t fail if some listener do n ' t fail before or after event
renamed multiple classes related to the Dial package to improve clarity and consistency in naming conventions
corrected formatting of error logging statements in SyncQueue . java to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest R
updated return value from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and
move the patchy jar into the client launch provider so it can be use by any client .
[ hotfix ] [ yarn , test ] remove yarnclient dependency from yarnitcase
add empty localmap stats if no data be include in a map
deleted the AllTests . java file to remove unused test class to streamline the codebase
added Unicode character constants and appended them to the string builder in AbstractWordConverter . java to improve handling of non - breaking hyphens and
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory behavior of large stack trace invocations to
updated the method call to use ` getResultMappingsForRowKey ( nestedResultMap ) ` instead of ` getResultMappings ( ) ` to improve
added an eventHandled variable to the UIText class to ensure the event is properly handled during text input operations
deleted the ` Controller . java ` annotation and renamed the ` Weldby . java ` class to ` WeldModule . java ` to
added a new boolean field ` monitorCaptureGroupsInEmptyCheck ` and modified conditional checks in ` NFABacktrackingNFAExecutorNode `
removed the initialization of the liquibaseProLicenseKey variable and replaced it with a protected variable to streamline the code by elimin
mondrian : fix a bug where we do n ' t set the schemareader for the measure hierarchy .
[ gr - 21212 ] add - g option to generate debug information .
mondrian : fix typo in mondrianproperties . java
added functionality to handle friend paths in Kotlin configuration and related classes to improve the management and handling of friend paths in the build process
added aliases for " BATK " , " BRAH " , " MAND " , and modified the CheckScript class to handle
refactor equality checks in ExecutionCommand and add a new method in StageUtils to convert JSON strings to ExecutionCommand to improve code readability and
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to SystemScope class to provide a readable string representation of the SystemScope object
updated handling of CSS number and percentage types in CSSParser . java to improve accuracy in processing CSS parameters and enhance error handling
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to verify the result of a local index reverse scan to ensure
updated import statements and context retrieval in BaseAndroidTestCase . java , BackupHelperTest . java , and LanguageHelperTest . java to align
updated toast messages to use string resources instead of hardcoded strings to improve internationalization support and maintainability of the application
removed unnecessary condition checks in RendererUtilities . java and updated test assertions in RendererUtilitiesTests . java to improve code clarity and correctness in
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid lists instead of Iterator to improve type safety and avoid potential NullPointerExceptions
added a try - catch block around the SQL execution of the ALTER _ TABLE statement in FileContentProvider . java to handle potential SQLite exceptions
removed System . err . println ( line ) statement from AsyncServletIOTest . java to clean up code and improve readability
added hash table load factor and refactored data size calculations in ConvertJoinMapJoin . java to improve data size estimation based on hash table
updated the ` buildView ` method to accept a ` Context ` parameter and utilized ` TypedArray ` for background resources to improve flexibility
added assertions for authentication in SecurityMockMvcResultMatchers and corresponding tests to enhance test coverage and ensure correct behavior of authentication matchers
vpc : fix npe when setvpcid ( ) return null
[ beam - 10955 ] disable flink savepoint test until 1.11 be resolve
fix intellij warning : ` @ cue . textsizetype ` and ` @ cue . textsizetype int ` be
modified the loop condition to include an additional check for the index before processing actions to ensure that the action is only processed when the index is within
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange and modified the exchange specification to ensure compatibility with the new Bit
[ task 70425 ] add test for virtual metadata in relationship endpoint
fix npe in lodcontrol when spatial be null
updated ` ConditionalTokenFilter ` and ` FixedShingleFilter ` to set ` lastTokenFiltered ` to true and added multiple filter classes to improve
add setstateafter to unsafestorenode so it do n ' t depend on graph
updated method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure
added an assertion to verify that the event repository is not empty to ensure that the event repository functionality behaves correctly without errors
removed unused parameters ` attributeTemplateName ` , ` attributeLine ` , and ` attributeCol ` from the ` AuthenticationAttrProcessor ` class to stream
added null checks for the key in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that the specified key is not
added a method to set the typeface in CodenameOneTextPaint to throw an exception when the typeface cannot be set in runtime
added an ` open ` method to multiple ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS
simonstewart : remove the deprecated fail ( string ) method from webdriverrunner
simplified the condition in SolrRequestParsers by removing unnecessary check for item size to improve code readability and maintainability
replaced the private ` ResultObject ` class with a private field ` useConstructorMappings ` and updated related method calls to improve encapsulation and
updated SQL table creation syntax to include a quote around the foreign key reference to ensure correct SQL syntax for foreign key references in the schema
modified the filtering logic in VectorizationContext to handle filter modes correctly to improve accuracy in determining vector expressions based on filter conditions
updated the type declaration of moveSelectorConfig in ExhaustiveSearchPhaseConfig . java to ensure proper type handling for the moveSelectorConfig
replaced the instantiation of ReorganizeTableStatement with a direct call to modifyDataTypeStatement to streamline the code by eliminating unnecessary
refactor cluster name handling to use a constant from IoTDBStartCheck to improve code maintainability and clarity by centralizing default cluster name
refactor connection handling in PeerGroup and change exception handling in ClientConnectionManager to improve error logging and handle peer death gracefully
add style assignment logic for multiple style strings in Nano . java to ensure the correct style is used when multiple style strings are provided
fix datafixer to correctly convert compound tag to binary tag .
updated the return message in NoToStringOnStringType . java from " Use ` String ` to " No # toString ( ) on String "
8274560 : [ testbug ] testthreadfailure . java fail on window due to too much memory
fix : fix dataprovider retry issue
updated the method to return the token ' s bandwidth instead of the first to ensure the correct bandwidth is used for token retrieval
danielwagnerhall : implement backedselenium . selectpopup and backedselenium . capturenetwork traffic (
updated the ` doPrintEntry ` method to remove the ` printWarning ` parameter and simplified its logic to streamline the entry printing process and
removed unnecessary whitespace in TaskAsyncCallTest . java to improve code readability and maintainability
added checks for non - undecorated components in Dialog and Frame classes to ensure proper handling of opacity and shape parameters to prevent illegal component state
changed the ` state ` field from private to private final in ` DefaultProjectFilesystem . java ` to ensure the ` state ` field cannot be
updated Redis connection configuration in RedisObjectFactory . java to handle sentinel and standalone configurations more effectively to improve redis connection flexibility and ensure proper database
add lastseendelayedmessage to jabber chat room so it do n ' t interfere with other jabber chat room
replaced instances of ` Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method call to simplify
refactor share operation handling in FileOperationsHelper and OperationsService to utilize a new operations service to improve code organization and facilitate
no effective change - code cleanup - remove unnecessary check
replaced calls to ` getMinBuildHeight ( ) ` with a variable ` yStart ` in ` ClassicPlotManager . java ` to improve
do n ' t swallow npe in smack integration test
tmi - exif : add support for interop subdirs
added support for the ENABLED _ LS mode in VersionTargetGraphMode and updated executor initialization in VersionedTargetGraphCache to enhance dependency management based on
updated conditional checks to include video format validation in DLNAResource . java to ensure compatibility with video formats during media parsing
doc : generate sample code in the java microgenerator ( # 419 )
added native loading logic to LwjglNativesLoader and modified load method in LwjglApplet to ensure proper loading of J
updated CSVRequestHandler to support a new escape strategy and improved error handling for invalid encapsulators to enhance flexibility in CSV processing by allowing
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure support for only the Authorization Code grant type
updated exception messages in Throwable . java and added initCausePlumbing ( ) method in SuppressedExceptions . java to improve error handling and ensure
added a query to verify the result of aTable with count ( * ) and modified the iterator ' s null parameter to ensure accurate retrieval of
added " RSquare " handling in RegressionEvaluator and its corresponding test in StreamExpressionTest to ensure that the " RSquare " value
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4662 - add
refactor SparkPlanGenerator to use a local variable for MapWork for improved clarity and configuration to enhance code readability and maintainability
refactor image retrieval methods in PdfJndiReport and PdfSessionInformationsReport to use dedicated methods for folder and country images to improve code
updated cache handling in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer authentication to improve cache management and ensure proper exception
update resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and add a new test for
sulong : do n ' t cache the function if it be a method .
removed redundant sleep call in AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating unnecessary sleep execution
added a new file KernCrash . java that implements a GUI that demonstrates font kerning to demonstrate
added a fail ( ) statement to the LinkedHashTreeMapTest . java file to ensure proper error handling during test execution
added a method to retrieve network interface IP addresses based on loopback status to enhance functionality for managing network interfaces in the application
cancel the housekeeper task if it can be remove from the pool .
updated the condition to check for the slave address instead of the client address in the sync state check to ensure that the correct slave address is used
updated assertions in Assert . java to improve readability and maintainability of the code
added a new test class ` Issue247Test ` to verify the functionality of the ` createTreeMap ` method in a map database to
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
added checks for leap years between today and birth years in ValidatorTest . java to ensure that only valid years are validated for max age validation
added GrblLookups for alarm and error codes and updated response handling in GrblController . java to improve error reporting and ensure
added a condition to return the home button label when there are no screens to improve user experience by providing a clear navigation option
removed the ' count ' parameter from the ' getTrades ' method and related calls in multiple classes to simplify the method signature and eliminate unnecessary
updated ConsoleReader to handle null prompt and improved index handling in MemoryHistory to enhance user experience by preventing null pointer exceptions and ensuring correct
updated the path for the jdkPath variable in JavaBuild . java to ensure the correct file path is used for the jdk folder
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple classes to standardize method
updated JFCModel to accept a logger parameter for logging warnings instead of using System . out . println to enhance error handling and provide clearer
added a validation check for the tolerance in MaximumInscribedCircle . java to ensure that the tolerance is positive to prevent runtime errors
added methods to create and drop views in TestUtil . java and implemented a test for view privileges in DatabaseMetaDataTest . java to enhance the
added platform - specific checks for expected stable float and double tests in NaNTest . java to improve test reliability by skipping tests for unsupported
added a new ` DesktopTaskbarUIController ` class and modified ` TaskbarManager ` to check for system feature ` FEATURE _ PC
added progress tracking for task count listeners in ModItemAdapter and SearchModFragment to improve user experience by ensuring proper button state updates when tasks are
updated file handling logic in Files . java to improve performance and maintainability of the file system operations
replaced ` Set ` with ` Collection ` and modified method signatures in ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAuto
updated ` DomainAwareServicesManager ` and ` ChainingServicesManager ` to extend ` ServicesManager ` instead of implementing ` @ FunctionalInterface
[ 1.19 . x ] fix resourcepackloader . getpackinfo ( ) return null for modfiles that do n ' t have
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
added grow methods for X and Y in the Cell class to allow dynamic resizing of cells based on their dimensions
refactor DefaultInputHandler to use generics for the bindings map instead of StringTokenizer to improve type safety and simplify the code structure
http : / / issues . apache . org / jira / browse / amq - 4568 - add try - catch block to
replaced long array with byte array and updated iteration logic in MetricsMemoryTester . java to optimize memory usage and add memory fail count detection
deleted the JobParametersPrototype . java file to remove unused code to streamline the project
added a securityEnabled parameter to the MappingsTable and updated related methods to enable or disable security checks based on configuration settings
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable the dump functionality for
do n ' t propagate video decoder workaround for aws api < = 17
[ java ] : do n ' t send spy position to network publication if we do n ' t have connection to it .
added a condition to check for no information output when dbInfo is null to ensure proper handling of output when there are no information available
fix ssl default for presto uri with port 443
added DOMOutputOptions to build the DOM subtree in DOMConverter . java to enable XHTML output for better error reporting
updated assertions in Assert . java to improve readability and maintainability of the code
add retain option to publish to allow publish to a specific topic or not .
added ` testCaseName ` to the JSON object in ` EventSerializationTest . java ` and removed the ` @ JsonIgnore ` annotation in
fix ( sql ) : fix tumble function name in sqlstdoperatortable
updated import statement from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java
refactor abstractsessioncontext to use read - write lock instead of final variable
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and
[ hotfix ] [ sql - client ] replace calcite - sql - client with ansi - sql - client
updated logging level from debug to trace in FirmwareUpdateService . java to improve logging granularity for better troubleshooting
added tests to verify handling of null values in Date and java . util . Date classes to ensure that null values are correctly retrieved from the ResultSet
updated string concatenation in ` StringSubject ` , ` Subject ` , and added new test cases in ` RelabeledSubjectsTest ` ,
added a test for retrieving repository permissions for multiple teams in UserModelTest . java to ensure correct access control for repository permissions across different teams
added a new file ` Test7088020 . java ` that implements a method handle test to verify the behavior of ` invokeExact `
refactor audience validation logic to use a set for audience URIs instead of a boolean check to improve clarity and efficiency in checking audience restrictions
refactor cache refresh logic into a separate method in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code readability and maintain
changed the handling of the ` _ stderr ` variable to ensure it is set to ` null ` when it is already set to ` System .
added a SEPARATION _ ORDER warning in the Warning class and implemented checks for active stages in BasicEventSimulationEngine to ensure that warnings are
change the parameter from offlineTableConfig to realtimeTableConfig in the queryOptimizer optimize method to align with the new realtime table configuration requirements
updated SQL creation and handling for host minute aggregation in PhoenixHBaseAccessor . java and added normalization in UpgradeCatalog240 . java
[ hotfix ] fix checkstyle violation in savepointv2 and filestatehandle
added BluetoothClass functionality to ShadowBluetoothDevice and ShadowBluetoothDeviceTest classes to enable testing of BluetoothClass functionality in the Shadow
corrected a typo in the method name from ` contains ` to ` containsProfile ` in the GlowOfflinePlayer and GlowPlayer
[ flink - 33230 ] [ table - common ] fix sum function to throw an error if the list be null or empty .
replaced graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) in DataBridge . java to
updated the construction of coreNodeName to use nodeProps . getCoreName ( ) instead of nodeProps . getNodeName ( ) to ensure the correct core
chatactivity : use updatebackpressure to prevent crash .
updated test cases in TaggerParserPosTagCompatibilityITest . java to improve test coverage for tagger parsing functionality
added a suppression annotation for the SimpleText codec in BaseVectorSimilarityQueryTestCase to prevent test failures related to codec compatibility
updated the condition in ` Types . java ` to include both ` elemtype ( t ) . tag ` and ` elemtype ( s )
updated superTriangle coordinates in DelaunayTriangulator and changed test class name from EarClippingTriangulatorTest to Del
added ` @ Override ` annotation to multiple classes in the ` ArrayDeque ` , ` ArrayList ` , ` HashSet ` , ` LinkedList ` ,
refactor JWTClaimsSet initialization to use builder pattern to improve readability and maintainability of the code
refactor state management in StackOverflowCheckImpl to use local variables for oldState and newState to improve code readability and maintainability by reducing
added shadow implementations for SQLiteDatabase and ContentValues in Robolectric . java and removed deprecated methods in ShadowContentValues . java to enhance
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced the ` bytesPerDim ` field with a ` ByteArrayComparator ` in ` BKDWriter . java ` to utilize a custom
added script and category locale properties to the Locale class and refactored default instance retrieval to enhance locale configuration flexibility and ensure default values are
updated the method to return the last set text alpha instead of the current text alpha to ensure the icon reflects the last set text alpha instead
updated warning message from " Confimap PropertySources does not match " to " ConfigMap PropertySources does not match " to improve clarity and accuracy
updated imports in DefaultConfigurationTestSuite and modified test results in TokenRevocationEndpointTest to streamline test execution by using UaaJunitSuite
trim whitespace from token handling in GzipFilter and update test parameters in GzipFilterDefaultTest to ensure consistent token processing and improve test clarity
updated the assignment of the _ outputType variable in Response . java to ensure consistent output type configuration for better readability
updated regexp implementation property from JDK to JONI to ensure compatibility with the latest JONI platform
replaced ` Handler ` with ` Executor ` and refactored task handling in ` ViewCapture . java ` to improve concurrency handling and simplify
added voice style retrieval and improved style handling in MaryGenericFeatureProcessors , Voice , MaryRuntimeUtils , and InfoRequestHandler to enhance
added folder creation logic for the destination folder in GitBlit . java to ensure that the destination folder exists and is a valid directory before proceed
updated the nodeDiscoveryBindIp from 0.0 . 0.0 to 127.0 . 0.1 in Args . java to ensure
camel - jbpm : fix typo in inonlycamelworkitemhandler and inoutcamelworkitemhandler
pdfbox - 4892 : avoid unnecessary static import , a suggest by valerybokov
added functionality to display " Managed by your company " in the AllApps grid adapter and refactored related classes to improve user interface clarity
refactor multiple Java classes related to Dalvik functionality to improve code organization and maintainability
refactor : remove redundant code in defaultjavaprettyprinter . java ( # 2362 )
added a call to freeMemory in OperatorContext to optimize memory management during operator execution
updated error message formatting in QueryByExamplePredicateBuilder . java and modified query string replacement in StringQuery . java to improve clarity of error
updated ConcurrentLRUCache and FastLRUCache to use AtomicLong for eviction counter and refactored stats management to improve thread safety and
change defaulttaskexecutor . runinjavafxthread to runandwaitinjavafxthread so it do n ' t block on
networkaddressmanager : do n ' t try to get local host if intended destination be an inet4address
added RuntimeEnvironment import and settings for database and source root in MainFrame . java to enable dynamic configuration of the database and source root for better
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` methods to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration
[ hotfix ] [ table ] fix typo in tableenvironment . java
updated the statement timeout handling in MapperBuilderAssistant and removed the timeout setting in MappedStatement to streamline the code by eliminating unnecessary
removed the ` hangingTscTimeout ` parameter from multiple methods in ` JSweetTranspiler ` and ` TypeScript2JavaScriptTrans
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of GeoLocationRequest and Geo
updated error messages in ArtifactFilesystem . java and ArtifactFilesystemTest . java for clarity and consistency to improve code readability and maintainability by
tika - 2343 -- fix for tika - 2344 , add unit test for jxl file .
[ web ] fix concurrent modification in geoboolean . setconditionals ( )
http : / / issues . apache . org / jira / browse / amq - 4568 - fix for issue with non -
added checks for ` actual ` and ` expected ` values in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest
updated the logic in ` BackgroundAppState ` to include ` VERTICAL _ SWIPE _ INDICATOR ` in ` ShelfSc
added null check for nav in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
mow - 257 fix corner of image on screen location change ( # 258 )
( chore ) camel - core : fix typo in method name
astro : use schedulewithfixeddelay instead of scheduleatFixedRate
simplified the incrementing of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code read
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to mark tests as ignored due to hangs
updated import statements in GuiceFactoryTest . java to include specific dependencies to streamline dependencies and improve code clarity
added methods to manage system features in RobolectricPackageManager and corresponding tests in RobolectricPackageManagerTest to enhance functionality and
refactor RCAFrameworkLoader to handle multiple paths and add a new test class for path augmentation to improve code readability and ensure correct
[ hotfix ] [ runtime ] remove unnecessary log statement in task .
added a null check for enumerationValues and initialized it to null if it is empty to prevent potential NullPointerExceptions when enumerationValues is empty
improve performance of inline box creation ( fixes geos - 5758 )
refactor telemetry data collection to use asynchronous processing to improve performance by allowing asynchronous processing of telemetry data
removed unnecessary database type check before altering the column type in UpgradeCatalog260 . java to streamline the code for better readability and
updated error messages in BaseTableDataManager to include available space and write - permissions for index and temp resources directories to improve clarity and user
refactor DatasetUtilities to improve code structure to enhance maintainability and readability of the code
append selector ID to the key in the Matcher class to enhance the output of selector information for better debugging
corrected string concatenation syntax in GouraudShadingContext . java to ensure proper formatting of color values and improve readability
updated taskbar visibility handling and added alpha animation in multiple controllers to enhance user experience by improving the animation behavior and visibility of the taskbar
reordered the declaration of constants in KeyExchange . java to improve readability and maintainability of the code
fix database version check for cockroachdb
updated the handling of the crash file index to use a variable for clarity to improve readability and maintainability of the test code
added methods to retrieve the media recordering MIME type and image IO type in CodenameOneImplementation , MediaManager , and Display classes to
make useShaders public and replace ConfigHandler . useShaders with ShaderHelper . useShaders in multiple files to
updated the bindable filter condition to include an OR operator and changed the return value from " C = 6588 " to " C = 1
updated the instantiation of ZkStateReader in CloudSolrServer . java to correct the syntax of ZkStateReader initialization
pdfbox - 4892 : disable entity reference and doctype declaration , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
modified the condition for checking the presence of a " < script > > " tag in UrlHelper . java to improve code readability and maintain
refactor ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and introduce a new test class ` VarargsAnd
refactor border property checks into a separate method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by reducing duplication
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance by redu
updated import statements and modified method signatures in InternalDropAllCommandStep . java and HubUpdater . java to include HubRegisterResponse to improve handling
replaced manual byte masking with Byte . toUnsignedInt for better readability across multiple classes to improve code clarity and maintainability by
( chore ) camel - opentracing : fix typo in method call
updated the default value from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure caching behavior is consistently applied to the
changed the rangePannable property from true to false in CategoryPlot . java to disable range pannability for better visual clarity
updated the logic for managing the work mode switch in AllAppsContainerView . java to improve the handling of the work mode switch ' s parent
changed access modifiers of several fields and variables in Visualizer2TopComponent . java to private to enhance encapsulation and improve code readability
[ hotfix ] [ test ] do n ' t swallow cancellationexception in functiontest
changed access modifiers of constructors in JarFileResource and JarResource from package - private to protected to allow subclasses to access these constructors for better encaps
refactor DefaultTrackSelector to improve code structure to enhance maintainability and readability of the code
added a loop to wait for unseq merging in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseq merging process
updated the expected currency from AUD to BTC in BTCMarketsAdaptersTest to reflect the correct currency representation for user trades
updated SQL query to use the @ Table annotation and refactored assertions for post ID and title in tests to improve clarity and ensure correct
refactor Unicode handling in Unicode . java to improve code readability and maintainability
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added a check for the ` hive . interactive . mode `
remove unnecessary whitespace in SendHeadersFirstPublisher . java to improve code readability and maintain consistency in formatting
[ beam - 8470 ] fix npe in ssecustomerkey when encryption key be miss in ssecustomerkey .
added support for BIG _ DECIMAL in RangePredicateEvaluatorFactory to enhance value type handling and improve error messaging for unsupported value types
updated method calls from ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper . java ` to improve clarity
removed unnecessary annotation printing in ParameterInfo . java to streamline code and improve readability by eliminating unnecessary output
add support for ac - 3 stream in playback .
[ grid ] return null instead of an empty json response
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java , DiskFileItem . java , and DelegatingStatement . java
[ iotdb - 4441 ] fix datanodetemplateschemacache . getdataschema ( ) return null when datanodetemplateschemacache
updated RTimerTree class to improve timer functionality to enhance performance and user experience during timer updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
* fixed issue # 358 - incorrect alignment of text in gui
updated the executor and scheduler initialization to include a name parameter to improve clarity and debugging by providing context for the thread pool and scheduler
modified layout management and added error logging checkboxes in ViewResultsFullVisualizer . java to improve user interface responsiveness and enhance error logging
added descriptions and fields for user ' s phone numbers in ScimUserEndpointDocs . java to enhance clarity and usability of user phone
added private constructors to class declarations and modified method visibility in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles to ensure singletons are
added null checks for responseMap and HTTP response status codes in JsonHttpPropertyRequest . java and URLStreamProvider . java to improve error handling
refactor SolrRequestHandler to improve request handling logic to enhance performance and maintainability of the request processing process
added a condition to check if the default parallel value is not equal to the parallel variable to ensure that parallel settings are consistently validated against the
vmware : fix checkstyle issue in util / testvmware . java ( # 722 )
added support for SCARD _ E _ NO _ SMARTCARD in error handling to improve error reporting for smart card presence
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress system output issues related to lots of o stuff on purpose
camel - bindy : fix unmarshalling of complex message with one - to - many keyvalue pair .
set useowner and usetimestamp to false by default in jabrefpreferences . java
updated method signatures to use ` ThrowingRunnable ` instead of ` Runnable ` to improve error handling by associating exceptions with their thrown exceptions
refactor hash calculation in CrawlURI to handle null values for ' via ' , ' viaContext ' , and ' pathFromSeed '
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version from 4.1 . 1 to 4.2 and refactored object retrieval methods in LiquibaseXMLTransformer to improve
change default cert validity from 7 to 90
replaced the ` frame ` variable with a ` smoothDelta ` variable and updated related calculations in ` ThreadHandler . java ` to improve the
added null check for paginator in HttpBatchReader and HttpScanBatchCreator , and updated rawUrl assignment logic in HttpScanBatchCreator to ensure
added null check for CompactionInfo client in Worker . java and created a test for throwing a MetaException in TestWorker . java to ensure
added onSaveInstanceState method to ShadowFragmentActivity and corresponding test in FragmentActivityTest to ensure that fragments can call onSaveInstanceState for proper state
formatted code for consistency and readability in BatchResourceFactoryBean . java to improve code maintainability and adhere to coding standards
added a test for parsing simple Android color references in ColorResourceLoaderTest . java to ensure that the color resource loader correctly retrieves the correct red
added error handling for NoResultException in AbstractJPAQuery and implemented uniqueResult test in AbstractStandardTest to improve robustness of query results
add collection . getallparents ( ) to avoid npe . patch by stu hood ; review by jbellis for cassandra -
updated the reference to ` l ` to ` LawnchairApp ` in the ` getWallpaperDepthEffect ( ) ` method of
removed unnecessary import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method across multiple classes to simplify the method signature and ensure consistent
updated the ` ExtensionStack ` class to handle null extensions gracefully and improved the ` toString ` method in ` ExtensionStackTest ` to ensure
2 . x : fix flatmap do n ' t dispose inner subscriber on cancel ( # 5340 )
added connection timeout settings to MultiGetRequest and updated HttpConnectionManager initialization in ControllerStarter to improve connection management flexibility based on configuration settings
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency in formatting
replace NewModelTest with ModelTest in LwjglDebugStarter . java to update the test to use the new model instead of
replaced SystemResourcesEdgeEventFetcher with TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and updated inlineImage method call in BaseImage
updated caching logic in CachingBuildEngine and added a new test for output hash calculation to ensure output hash is not calculated when the cache is
camel - 7999 : added usebytebuf option to camel - netty to reduce memory usage . thanks to stephan siano
updated the partition alteration method to use the table ' s qualified name instead of the old name to ensure correct partition management based on the table
improve the error message when a vertx instance can not be create with the prefernativetransport option set to true to provide clearer
add unit test for color type handler ( # 4342 )
pdfbox - 4071 : fix typo find by codespell on fossies . org
removed query hint settings for timeout and lock timeouts in SessionImpl . java to streamline timeout management by eliminating unnecessary hints
added a new file StaticLoggerBinder . java to implement a singleton logger factory binder to provide a centralized instance of the logger factory in the
hbase - 25836 remove duplicate entry in familymap for put call ( addendum )
added orientation checks for new and old window configurations in TaskbarManager . java to ensure proper handling of orientation changes for better user experience
fix xml escape for jabber chat room nickname .
updated the ` longStackPut ` method call in ` StoreDirect . java ` and added a new test class ` Issue265Test . java
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable operations
jbrules - 2862 : fix broken test ( executionflowcontroltest )
updated conditional checks for audio and subtitle tracks in DLNAMediaInfo and improved array copying in FFMpegVideo to enhance code
added a ` unlimited ` boolean parameter to the ` NBWriteServlet ` and modified the ` TestWriteListener ` to accept it to control
update total difficulty in blockchainimpl . importlight ( ) instead of call updatetotaldifficulty ( ) .
updated action handling logic in DefaultPlaybackController . java to simplify conditions for seeking actions to improve code readability and maintainability by simplifying
replaced synchronized ArrayList with CopyOnWriteArrayList in NativeLibrarySupport . java and updated method signatures in SecurityServicesFeature . java to improve thread
added uniform allocation logic and adjusted position calculation in AllAppsView . java to improve rendering efficiency and ensure correct positioning based on dimensions
added a check for the presence of a colon in the key before processing to ensure proper handling of headers in HttpURLConnection
added a PrincipalResolver parameter to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration class to enable the configuration of principal resolution in the authentication
updated import statements in DelegationTokenResponse . java to use Noggit ' s JSONParser instead of ObjectMapper to improve compatibility with the latest N
added a method ` removeTrailingSlashes ` to ` IoUtil ` for removing trailing slashes from a string builder to enhance string manipulation capabilities by
added a ` EMPTY ` static final and a ` matchesAny ` method to the ` PatternsMatcher ` class , along with corresponding unit tests
hbase - 25836 improve error message when loadincrementalhfiles fail ( # 2589 )
fire do n ' t fire on water potion . close # 183
updated formatting of the ` beginOrAdjustReorderPreviewAnimations ` method call in ` CellLayout . java ` to improve code readability
updated the calculation for decreasePercent in ContractStateCapsule . java and adjusted formatting in ReceiptCapsule . java to improve code clarity and
added checks for unready input and improved debug logging in AsyncContentProducer and BlockingContentProducer to enhance code reliability and provide clearer
added validation for the weightField in DocumentDictionaryFactory to ensure that the weightField is mandatory to prevent runtime errors
added variable expansion functionality for the Info . plist in AppleBundle . java and created a corresponding test in AppleTestIntegrationTest . java
increased the length of lancerLaser and added team - specific conditions in Damage and LaserTurret classes
changed the return type of ` adaptOrder ` from ` OrderCreateApiRequest . OrderCreateApiRequestBuilder ` to an instance of ` Object ` to
added a new file ` PreParseGrammarTest . java ` that implements XML grammar parsing to facilitate testing of XML schema grammars
added ` @ SuppressWarnings ( " doclint : missing " ) ` annotations to multiple Java files to suppress specific warnings related to missing components
added font overriding functionality in ExtendedEditText to ensure consistent text rendering across different platforms
added null check for currentUser in AuthorizeTag and a new test method to always return an empty list when no user is found to enhance security by
camel - 7999 : camel - cxf - add check to ensure that the provided uri do not contain unsafe character .
mondrian : make jdbcgeometrytestsetup a protected method to allow subclass to override it .
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] stop restore attempt when backend closeable registry be already close
make remotejmeterengineimpl work with rmi server .
use string . join instead of string . join for good readability
added display metrics retrieval and modified qualifiers handling in multiple test classes to ensure default qualifiers are set and improve test coverage for resource qualifiers without region
[ java ] : store cluster member id in service heartbeat record for cluster service .
added support for " TotalThreadAllocatedBytes " attribute in TestThreadMXBean based on version check to ensure compatibility with version 21 and above
modified the evaluation of the double value and added handling for NaN values in CustomExpression . java to ensure accurate evaluation of double values and prevent potential
updated logging statements in AjaxListener . java for improved clarity and consistency to enhance readability and maintainability of log messages during debugging and
added authentication routes and associated controllers in AuthenticityController . java and created corresponding tests in AuthenticityFormTest . java to enhance user
added assertion to ensure node is alive in LoweringPhase . java and refactored type checking in SnippetTemplate . java to improve code
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
updated the comparison method in DefaultTrackSelector to use natural ordering for localeLanguageMatchIndex and localeLanguageScore to ensure consistent ordering of comparisons for
refactor RuntimeSerialization class to improve serialization handling to enhance performance and maintainability of the serialization process
added cropping logic for geo points in DrawImage . java based on whether the image was cropped to ensure proper handling of cropped images
refactor UnitOfWorkFactory methods for improved readability to enhance maintainability and ease of understanding for future developers
added a new variable ` allAppsCellWidthPx ` and updated related references in ` DeviceProfile ` and ` WidgetPreviewLoader ` to improve
tika - 3771 -- fix a bug where content - disposition : filename be not set in mailcontenthandler if content - type parameter
updated the URI construction in ThumbnailsCacheManager . java to use the file ID instead of the remote path to improve the accuracy of thumbnail generation
added mark support checks and reset functionality for the input stream in Source . java to ensure proper handling of input mark and prevent potential errors when unsupported
marked AsyncProcessor , BehaviorProcessor , AsyncSubject , and BehaviorSubject classes as deprecated to indicate that these classes are outdated and should no longer
added configuration option to show or hide error stacks in the error page to enhance user control over error stack visibility in the application
bug 8287 : add log for account cleanup / deletion failure
refactor foreign call handling in SPARCArithmeticLIRGenerator to streamline foreign call emission logic to improve code clarity and
[ drools - 7 ] support decision template configuration in legacy drl 5.x api
added a new variable ` waitingForResult ` and refactored the ` onRequestPurchaseResponse ` method to call ` Display . getInstance (
[ hotfix ] [ test ] increase default test timeout from 100ms to 1000ms .
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and ensure proper handling of resource names
deleted two files MrefStat . java and MrefStat1 . java that contained classes MrefStat and MrefStat1 to remove
added StringUtils import and modified scope handling in DependencyInsight . java to check for blank scope values to ensure that a valid scope is returned when
added constants for error messages and improved error handling in BTCETradeServiceRaw . java to enhance code readability and maintainability by
( chore ) camel - core : use hamcrest assertion instead of junit in camel - core
added methods to retrieve payment request URLs in BitcoinURI and corresponding unit tests in BitcoinURITest to enhance the functionality of the BitcoinURI class
planner - 383 remove this if statement and add validation for parameterized collection property type
removed redundant line setting folder info in FolderPagedView . java to streamline code by eliminating unnecessary duplication
updated lock owner checks and modified event notification logic in JfrBufferNodeLinkedList , JfrChunkWriter , and Target _ jfr _
refactor null value handling in BasicAbstractTuple to use a for - each loop instead of Stream . of ( ) . anyMatch to improve
refactor LintUtility to use InputResource for loading linter configurations to improve error handling and resource management for linter configurations
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post to a Runnable to ensure background updates are
updated inventory tick handling in Inventory . java and adjusted the index variable in onInventoryTick method to correctly increment the inventory index for better event processing
added a new case OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY event
[ hotfix ] [ runtime ] add miss @ publicevolving annotation to statetlconfig .
added null checks for parameter ' x ' in PreparedStatement . java and adjusted array indexing in Array . java to ensure proper handling of null values and
[ java ] add ` describe - all ` to archive tool description .
changed string concatenation from double quotes to single quotes in append0 method to ensure consistency in string formatting across the application
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest ` to validate JSON serialization of snapshots to ensure that the serialization
added JUnit imports and refactored the test method in BroadTest . java to improve test structure and ensure proper cleanup of transaction and
added support for the ` LeLensMask ` channel in the ` AmcrestHandler ` and ` DahuaHandler ` classes to
removed ` NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to simplify
refactor ChangeLogIterator constructors to accept both a list of ChangeSetFilters and a RanChangeSet to improve flexibility in managing change set
do n ' t swallow guest exception in launcher
( chore ) camel - aws2 - ec2 : use system property instead of environment variable
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization of objects
updated the condition in SpacesVisitor to use a dropParentUntil method to improve readability and maintainability of the code
# 1391 - enh : add ` ` nearcache ' ' option to servercacheconfiguration ( # 1392 )
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to verify that the border is not visible on
updated ActionGraph to TargetGraph in WorkspaceAndProjectGenerator and ProjectCommand classes to utilize the new TargetGraph structure for improved event handling
updated the KucoinExchange class to replace LIVE _ URI with PROD _ URI and added logging for exception handling to improve clarity
updated resource path handling and improved searchPath formatting in SpringResourceAccessor . java to enhance clarity and correctness in resource path resolution and
updated unit strings in SmartHomeUnits to use " µ g / m ³ " instead of " μ g /
updated the method ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to
deleted the Tls12SocketFactory . java file to remove unused socket factory to streamline the codebase
refactor texbibentriesresolver to streamline citation handling ( # 7640 )
added a check for legacy mode in ResourcesTest . java to prevent execution in legacy mode when using Robolectric
added a condition to return " DOUBLE PRECISION " for FirebirdDatabase to ensure compatibility with Firebird ' s double precision data type
added null checks for dataSource and transactionManager before initializing them to prevent potential NullPointerExceptions when accessing properties
add a new package - info . java file for the API documentation to provide package - level documentation for testing purposes
updated the ping command to use 127.0 . 0.1 and modified test timeouts in OutputStreamTest . java to ensure proper IP addressing
no effective change - code cleanup - use try - with - resources
updated the TermScorer constructor to conditionally use PostingsEnum . NONE for score mode to ensure that the correct postings are returned based
added null safety for metricUpdates in DataflowMetrics . java and changed the way setMetrics is set in DataflowMetricsTest . java to
server : fix nullpointerexception in uservmdaoimpl when listvirtualmachines return null
refactor DynamicPartitionPruner to improve handling of object inspectors and add a method to find target object inspector to enhance code clarity and
added a method to remove build artifacts and corresponding tests in the ArtifactFilesystem and ActionExecutionStep classes to ensure that build artifacts are properly deleted and
added row selection logic to the table in ThrustCurveMotorSelectionPanel . java to ensure proper selection of rows in the table when
replace assertthrows arraystoreexception . class with assertarraystoreexception in test .
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added support for environment - specific user agent handling in HttpClientBuilder and HttpClientConfiguration to enhance user agent management and improve configuration flexibility
refactor session management in MemorySessionStore to use a computeIfAbsent for session restoration to improve code readability and reduce redundancy in session
updated assertions in IssueTest . java and Reporter . java to provide clearer error messages and changed the type of results from Set < String >
updated the content type retrieval logic in ConsumeEWS . java to ensure a default value is used when the file ' s content type is not
fix ( interaction ) : send an event when an activation request be deny
added @ Override annotations and improved code formatting in GraphApplet . java to enhance readability and maintainability of the code
added a method to update the snapshot radius in RecentsView and updated the visibility of the updateSnapshotRadius method in TaskView to ensure
added logging functionality and updated schema handling in StaticMicroserviceVersions . java to improve debugging and ensure correct schema generation for 3rd party services
changed the return type of the ` put ` method in ` ArrayMap ` from ` void ` to ` int ` to provide access to the
updated KafkaContainerCluster to include a startup timeout setting and modified the broker processing method to improve configuration flexibility and streamline the startup process
[ issue # 3990 ] fix the issue of send message back in defaultmqpushconsumerimpl ( # 3991 )
update header check logic in StaticServerHttpHeadersWriter to handle multiple headers to ensure that headers are not added if they already exist , improving
added package access check and improved event listener class loading to enhance security and ensure proper access control for the event listener class
added a custom adapter for the applications list and an image list in the ApplicationsFragment to enhance user interface by providing a customizable list of
updated applyIcon method to accept nullable Task parameter and adjusted null checks to enhance null safety and prevent potential NullPointerExceptions
refactor DownloadTracker , DownloadManager , and DownloadStateCursor to use try - with - resources for better resource management to ensure proper closure of
fix ( sql ) : sql ast converter should push insert clause to the stack
added JUnit test annotations and modified transaction handling in HibernateCursor integration tests to improve test coverage and ensure proper execution of the HibernateCursor
added a Poller class to handle asynchronous reading in DataInputStreamWithTimeout . java to improve responsiveness and responsiveness of the input stream
added ENABLED _ TS constant and an import statement for ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache . java to enable thread management
updated UpgradeCatalog150 . java file to enhance database upgrade functionality
networkparameters : rename ` testnet3 ` to ` testnet ` and introduce ` oldtestnet ` .
ggb - 1391 remove updateifinselection ( ) , it be not need anymore .
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code clarity
updated HdfsDirectory to extend BufferedIndexOutput and modified HdfsIndexOutput to extend IndexOutput to improve resource management and enhance error handling during
pdfbox - 4892 : avoid npe , a suggest by valerybokov
removed unnecessary synchronized block when accessing localAddress in SocketChannelImpl . java to simplify the code and improve readability by eliminating unnecessary synchronization
refactor TemplateTransformer to use a dedicated addToRow method for handling multi - value values to improve code readability and maintainability by reducing
added a method to check if the operating system is Windows and refactored file renaming logic in Wallet . java to improve code readability and
replaced the use of ` ALPHABET ` with a ` CHECK _ DIGIT _ STRING ` in ` Code39Reader ` and ` Code
nodegenfactory : allow cast to the return type when expect an unexpected value
removed redundant check for ` fieldType . stored ( ) ` in ` IndexingChain . java ` to streamline the code for better readability
fix ( sql ) : fix ` ` truncate nan ' ' in where clause
removed unnecessary conditional checks for postedRunnableStacktraces in LwjglCanvas . java to simplify the code for better readability and maintain
( chore ) camel - aws2 - gcs : fix typo in description
replaced ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve test reliability by waiting
updated directory retrieval to use " single " instead of null in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistency in directory context
refactor ` UserData ` to remove the ` size ` parameter and introduce a ` filterCount ` variable in ` FaultTolerantChunk
updated method signatures and improved file handling in FileWithTabs . java and T4994049 . java to enhance code clarity and
replaced multiple conditional checks with a static assumeTrue method in ConsoleReaderTest . java to improve code readability and maintainability by using a
remove check for non - admin user in getfeedbacksessionsaction . show all session for student only if they be the admin user
adjusted the calculation of newSelection and modified condition checks in AllAppsView . java to improve the accuracy of column selection and enhance the message
do not initialize threadinfo object if not track result availability
added null checks and improved encryption handling in DbConnectionDialog and ExportPanel to enhance code robustness and prevent potential null pointer exceptions during connection
replaced ` writeBufferSize ` with a static final ` WRITE _ BUFFER _ SIZE ` and updated constructor calls to use ` String . valueOf (
updated the segment size calculation in DocumentsWriter . java and added a test for no documents index in TestIndexWriter . java to improve the
added validation for the mesh ' s dvert field in ArmatureModifier . java to ensure that the dvert field is not null before
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
added a custom UnsupportedOperationException with a fillInStackTrace method to ensure stack trace is filled in for unsupported operations
update label height calculation in LabelPainter to use a stream - based approach to improve readability and performance of height calculation logic
updated ` RotationTouchHelper ` to accept a ` DisplayHolder ` parameter instead of using a static instance to improve flexibility in managing display
refactor string handling logic in AVA . java to improve clarity and maintainability to enhance code readability and ensure proper handling of quoted
updated return statement in ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ` and modified parentSpanId handling in ` ServletHandler
added a new test method ` testSmall ( ) ` and ` testBig ( ) ` to ` ServerDatagramConnectorTest . java `
updated assertions in TestSqlEntityProcessorDelta to use substring method for country code extraction to improve readability and maintainability of the test code
refactor Cache class to improve cache management to enhance performance and maintainability of the cache implementation
renamed variable ` e ` to ` ev ` and updated scope settings in ` ResourceSetRegistrationEndpoint ` to improve code clarity and ensure
updated the ` doBefore ` method and modified the ` IndexSearcher ` initialization in ` TestUnifiedHighlighterTermVec . java `
added a JTable test to verify the functionality of adding rows to a GcodeTable to ensure that the GcodeTable allows users to add
updated WEBAPP _ CONNECT _ TIMEOUT constant to use cfg instead of a hardcoded value to enhance flexibility by allowing dynamic configuration of connect timeout
updated multiple Java classes to improve type safety and error logging to enhance code clarity and facilitate proper encoding of query strings
refactor TestMediaService to improve code structure to enhance maintainability and readability of the code
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in Messages . java to provide a user guid
add financial and cryptocurrency print tool to display market currency information .
validate the x - amz - account - id component to only contain alphabetic and dash ( # 2325 )
added methods to register security key start and complete in AccountProxy and HttpAccount classes to enhance functionality for managing security key registration in the application
modified ServerSpanThreadBinder . java file to enhance thread safety and improve performance
updated references from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics ` , ` BlockItemSystem ` ,
updated the field names in Csv2Shape from " Location " to " the _ geom " and " number " to improve clarity and consistency
updated variable name from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve code clarity and
refactor parameters handling in Parameters . java to improve code readability and maintainability
added a call to setIgnoreNullValues on the piePlot to prevent null values from being ignored in the plot
refactor loading logic in ResourceBundle . java for improved clarity and efficiency to streamline the bundle loading process and enhance maintainability
pdfbox - 4892 : fix typo , a suggest by valerybokov
fix executescriptaction and acelerateableaction not use the @ allowedduringediting annotation .
added a userModified flag to the LoginSamlAuthenticationProvider class to track the user - modified status of the authentication process
added a new file TestSealedObjectNull . java that tests the behavior of SealedObject with a null cipher to ensure that the null
replaced the ` onOpen ` method with ` setResponse ` and ` succeeded ` methods in the ` ConnectPromise ` class to improve clarity
refactor SNOW handling to use a static Set of materials based on server version to improve compatibility with server versions prior to 1.17
added an ID field and modified trade handling in CryptsyAdapters and CryptsyPublicTrade classes to track and utilize the trade '
added error handling for closing HMS connection in HiveStreamingConnection . java to ensure proper resource management and logging when closing the HMS connection
use random seed to avoid numberformatexception ( # 700 )
added a new device profile for " Nexus 5 " in DynamicGrid . java to support additional Nexus 5 devices
2 . x : fix flowable . refcount ( ) and observable . refcount ( ) crash when connection object be null ( # 5
replace type ' s newInstance method with ReflectUtil ' s newInstance method in SynthContext . java to improve flexibility in creating SynthContext
added a new WHITESPACE _ AROUND _ TEXTUAL _ OP token and updated formatting logic in FormatVisitor and TokenFormatter classes to enhance formatting
[ gephi ] do n ' t delete temp file on cancel task
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during concurrent access to these methods
log4j2 - 1343 support mutablelogevent in smtpmanager . add ( )
updated PADDING constant to use NonNegativeLengthLike instead of LengthLike to improve length handling for negative padding
removed the ` getUser ( headers ) ` parameter from the ` createContext ( ) ` method across multiple resource classes to simplify the context creation process
refactor trap handling in MethodIRBuilder and improve exception entry building in SootWorldBuilder to enhance code clarity and maintainability by consolid
updated JUnitRunner and AndroidPlatformTarget to improve file path handling and logging to enhance clarity of error messages when the build tools directory is
increased cacheSize from 16 to 8 in OmniNotes . java to optimize memory allocation for improved performance
added a condition for ` start ` in ` InvocationStageTrace . java ` and modified the JSON structure in ` TestInvocationPublishModelFactory .
added a try - catch block around the KeyStore loading in ProvKeyManagerFactorySpi . java to handle potential NullPointerExceptions when loading the keystore
updated server socket initialization and modified port handling in UpstreamCheckUtilsTest . java to ensure proper port assignment and improve URL verification logic
ticket # 4071 : fix the bug that the max panel size do n ' t match the max size of the split pane .
added conditional checks for OpenGL extensions for compute , geometry , and tessellation shaders in GLRenderer . java to ensure proper
refactor PopulatorContext to improve code structure to enhance maintainability and readability of the code
do n ' t show save all notification for project that do n ' t have permission to save .
added UTF - 8 encoding handling and improved JSON string conversion in ZQLJobManager . java to ensure proper handling of character encoding and avoid
added a check to ensure that the last argument is not empty before checking if it ' s an instance of Table to prevent potential ArrayIndexOutOfBoundsException when
replaced string literals in OSSOHeaderDecoder with a constant prefix in FakeOSSOHeaderDecoder . java to improve code readability and
added @ Deprecated annotations to multiple classes and updated the description for the suffix strategy option to indicate that the suffix strategy should no longer be used and
removed unnecessary debug log statements in DerbyDatabase . java to streamline code and improve readability by eliminating unnecessary logging
wait for all rule to be fire before test to avoid flakiness .
replace parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to simplify stream handling and improve code readability
updated operation type check and improved logging message formatting in HubUpdater . java to enhance code readability and provide clearer feedback when the hub
added constants for Java and Eclipse OpenJ9 VM version information in Constants . java and a corresponding test in TestDDRExtensionGeneral .
modified font logging in FontFamily . java and added a new DebugFonts . java file for debugging to improve clarity of font addition requests
updated import statements in ALPNNegotiationTest . java and NegotiatingServerConnectionFactory . java to include HTTP _ 1 _ 1 to
added RateControl import and configuration in MaxConcurrentStreamsTest . java to disable rate - control for improved performance
added a new file Test6741426 . java that implements a UI with Nimbus look and feel to demonstrate
updated the error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve error reporting by providing more
added null checks for dbMgdPath and dbExtPath in managed and external directories to ensure data integrity by preventing potential null pointer exceptions
move s3copyobjectrequest out of the core package to avoid conflict with other package in the project
refactor category setup methods to remove accent color parameter and streamline theme management to improve code clarity and maintainability by using viewThemeUtils
updated error message in TemporaryFolderUsageTest to include the file path from the root folder to improve clarity of the error message for better debugging
updated type information retrieval for map and collection in MappingMongoConverter . java to improve code clarity and maintainability by using ClassTypeInformation directly
add address validation to clientnetworkconfig . addaddress ( )
added " keynectisrootca [ jdk ] " to the VerifyCACerts class to support certificate verification for the Keynectis
logstash - 2243 : return the number of compute call instead of void
added a conditional check before setting the mode in the ModeToggleMenu to ensure the mode is only set when the popup is not showing or clicked
pdfbox - 4892 : fix eof exception , a suggest by valerybokov
added two new test files , FinalizerInfoTest . java and HeapInfoTest . java , to verify the finalization and heap information of
replaced ` map ` method with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to
refactor the handling of the ` BurningManReceiverAddress ` to use an ` Optional < String > ` for custom addresses and improve
refactor methods in StringSubject class to improve code readability and maintainability
updated byte array initialization and added JUnit Ignore annotation in BatchValidateSignContractTest . java to temporarily disable tests that are not ready for execution
corrected the spelling of " setmaxInboundMetadataSize " to " setMaxInboundMetadataSize " to ensure consistency and accuracy in method naming
updated query replacement logic in Search . java to replace " from : " with " @ " in saveRecentQuery to ensure consistency in query formatting
removed conditional check for forRebalance in SimulatorDiscoverer . java to simplify code logic by eliminating unnecessary complexity
added an import operation for YubiKey accounts and corresponding tests in YubiKeyAccountRegistryEndpoint and YubiKeyAccountRegistryEndpointTests to
updated shader program names and improved material retrieval methods across multiple classes to enhance code clarity and maintainability by standardizing texture parameter naming and
updated loop conditions to include null check for ` cnt ` in ` Container . java ` , modified safe area handling in ` SideMenuBar .
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future updates
added a null check for subName before setting the caption in HierarchyBase . java to ensure the caption is set correctly when subName is
update data flag in EntityItem to use DATA _ FLAG _ GRAVITY instead of DATA _ FLAG _ IMMOBILE to align with
added a null check for the simulated data before accessing its branches to prevent potential NullPointerExceptions when accessing the simulated data
replaced the method ` requestBlindVoteListFromNetwork ` with ` sendRepublishRequest ` in ` VoteResultService . java `
add a new test method ` testCase4 ` to ` PostgresTest . java ` for verifying PostgreSQL connection and result retrieval to ensure
updated string literals from double quotes to single quotes in SubtitleUtils . java and RemoteUtil . java to ensure consistency in string formatting across the
replaced the hardcoded line separator with a constant for better maintainability to improve code readability and ensure consistent line separation across different operating
simplify singleimplementor . currentsnapshot by use fieldupdater instead of atomicreference
added null check for filters before adding queries in SimpleFacets . java and updated test cases in SimpleFacetsTest . java to ensure that
fix thinghelper . build ( ) to handle bridge and other thing ( # 4669 )
replace printHelp ( ) with error ( " A command must be provided " ) and update error handling in Ktab . java to improve error
[ fix ] if file do n ' t exist , do n ' t try to load it .
pdfbox - 4892 : improve date parsing , a suggest by valerybokov
added query functionality to retrieve a post by its slug in SpringDataJPALockTest . java and implemented it in PostRepository . java to
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a check for its access
added request factory settings for HTTP requests in ClientRegistrations . java to increase connection and read timeout for improved stability
added assertions to verify the behavior of Source . fromFileName with a non - canonicalized file path to ensure that the Source class correctly handles file
graalvm : remove system . setproperty ( ` ` graalvm . version ' ' )
added access token validity and refresh token validity settings in ClientAdminBootstrap . java to ensure that access token and refresh token are properly validated and set
updated the return statement to check if the Android API version is greater than zero before returning the default SDK version to ensure compatibility with different SDK versions
removed unnecessary ' this ' keyword from property placeholder methods in PropertyPlaceholderHelper . java to streamline code for better readability and maintainability
removed the ` number ` parameter from the ` Owner ` string format in the ` Resources . java ` file to simplify the string representation for better
refactor ZkSolrClientTest to improve handling of collections in parallel to enhance test reliability and ensure proper synchronization during collection processing
added BigInteger type to simpleTypes in MongoMappingContext . java to ensure proper handling of BigInteger values in the mapping context
added a condition to check if the button text matches the view before displaying the toast to ensure the toast is displayed only when the appropriate text is
added a conditional check for MEncoder synchronization in MEncoderVideo . java to ensure proper handling of video encoding based on configuration settings
reduced the default event loop thread count from 10 to 15 in ConfigurationProperties and ConfigurationPropertiesTest to accommodate larger event loops and improve
changed access modifiers of methods in CountMin4 from abstract to protected and refactored feedback handling in AdaptiveWindowTinyLfuPolicy
refactor ExternalFileField to improve sorting functionality and add a new ExternalFileFieldSortTest class to enhance the functionality of the ExternalFileField
updated the error message in FetcherException from " Invalid URL " to " Connection error " to improve clarity and specificity of error handling
added source information to the event in OpenRocketSaver and updated FlightDataBranchHandler to include the source ID in the Flight
changed the access modifier of the check method from private to protected to allow subclasses to access and modify the method for better encapsulation
added synchronization handling in FileActivity to resolve conflicts based on file status to improve user experience by providing clearer feedback on file synchronization errors
updated the URI generation in ThumbnailsCacheManager . java to use a encoded file path and modified the request headers to include additional parameters to enhance
added a check to return early if the container is not initialized and has a client property for it to improve performance by avoiding unnecessary processing when
updated the initialization of the ' total ' variable and modified the calculation in ' IntHashSet . java ' to correctly increment the total variable and correctly
added a lock timeout check before updating an entry in FeedRefreshUpdater to ensure proper handling of entry updates based on the locked state
refactor conditional checks in SolarisAclFileAttributeView . java for clarity and consistency to improve readability and maintainability of
replaced the use of ArrayList with an Array for edge storage in LatLonTree . java to improve performance and simplify the creation of a tree
added IOUtils import and resource cleanup in ZkCLI . java to ensure proper resource management and prevent memory leaks
fix parse error with x0d and x0a character in bibtex key . close # 163
added strict parameter handling and corresponding tests in Main . java and MainTest . java to enhance command line argument validation and ensure proper handling of strict
fix invalid constraint on pojo with @ constraint ( alwaysinvalid = true ) . fix # 3560 ( # 3561 )
camel - 14850 - camel - http4 : improve the verifier to check if a particular component be in http4 format
added a call to ` waitForThingsToLevelOut ( 30000 ) ` in ` TestCloudPivotFacet . java ` to provide a
refactor conditional checks in UBJsonWriter to use ' else ' structure to improve readability and maintainability of the code
refactor ApplicationTest to improve test structure to enhance readability and maintainability of the test code
replaced String details with StringBuffer in ConnectionFactoryImpl . java to improve performance and readability of string concatenation
renamed ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in naming conventions
[ java ] abort recording descriptor poller if dispatch complete .
added caching logic for ' cacheKey ' and ' cacheLookup ' attributes in EntityProcessorBase . java and updated related tests in TestCachedSqlEntity
added a new file PutfieldError . java that demonstrates the throwing of IncompatibleClassChangeError to verify that the expected error
camel - 15836 - camel - aws2 - * : improve address translation for good readability
add log for memtable flush after min and operation count
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple files
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactor TestMethodResultMapBuilder to improve code structure to enhance maintainability and readability of the test code
fix for ` ` java . lang . numberformatexception ' ' and ` ` java . lang . runtimeexception ' ' in findnullder
[ hotfix ] [ runtime ] remove unnecessary constructor from tasklocalstatestoreimpl
updated return statements in Utils . java to remove unnecessary string concatenation to streamline code for better readability and maintainability
updated conditional checks in Utilities and FloatingIconView for better handling of DeepShortcutView and ImageView to improve code clarity and ensure correct
changed the type of the validator in JwtIssuerValidator from String to Object and updated the condition for issuer URL matching to improve flexibility in claim
renamed methods for buying and selling quick rates in Coinmate . java and added new methods in CoinmateMarketData
added a new file ` CoverageConfig . java ` and modified ` CoverageController . java ` to use this new configuration class to streamline the
added a check to ensure EventBus is registered before registering sticky events to avoid unnecessary registration of sticky events when not already registered
added ASCII - only check for normalization in NormalizerBase . java to optimize normalization process by skipping unnecessary operations for ASCII strings
[ hotfix ] [ runtime ] fix check for migration task in jobcoordinationservice
added error handling for SQL update statistics in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL is correctly
( chore ) camel - cometd : replace contexttestsupport with junit4 in test
added attrs ( AttrKind . OK , WIDTH ) to HtmlTag . java and updated corresponding tests in ListTagsTest . java and OtherTagsTest .
added a line break to the output in HtmlCoreReport . java to improve formatting for better readability
updated the calculation of ramBytesUsed in DocSlice . java to handle null scores to ensure accurate memory usage when scores are null
added StringHolder and StringHolderTypeAdapter classes for serialization and deserialization to enhance the JSON serialization and deserialization process for collection elements
set extra data from mining parameters in MergeCoordinator and add a test for extra data from MiningParameters to ensure proper handling of extra data
added a static final map for number of arguments and updated properties conversion to use this map to improve flexibility in specifying command - line arguments for
refactor PathParamServerEndpointConfig to improve code readability to enhance maintainability and facilitate future updates
fix ( migration ) : fix deadlock in migrationrulelistener
updated method signatures in RestClientRequest and RestClientRequestImpl to use ' partOrList ' instead of ' part ' to improve clarity
jbrules - 2642 : move twitter bootstrap CSS and JavaScript into the benchmarker directory
remove spanish language pack that do n ' t support postag
hhh - 15486 - fix abstractentityloader to use uniqueentityloader instead of entityloader .
hbase - 25836 remove cancelled element from taskpool in regionserverflushtableproceduremanager and regionserversnapshotmanager ( # 25
setsize ( ) do n ' t call super . setsize ( ) if width or height be zero
fix checkstyle issue in util / hikaripool . java ( # 722 )
replaced the assureMatchVersion method with a default value of Version . LATEST in multiple filter factory classes to ensure compatibility with the
fix issue with executable method be not generate if the method be an interface . fix # 3740 ( # 3741 )
jbrules - 2852 : fix parsing of comma in drl editor when the editor type be not symbol
refactor multiple subject classes for improved consistency to enhance maintainability and readability of the codebase
added a validation check for the length of the payload in the WsFrameBase class to ensure that a protocol error is thrown when the payload length
moved the ` PublishSubscribeChannel ` and ` PublishSubscribeChannelParser ` classes to the ` dispatcher ` package and updated their imports accordingly to
updated execution ID handling from String to Long across multiple classes to improve type safety and maintainability by using a configurable execution ID
added multiple byte updates to the digest in ImageProcessor . java to ensure proper digest generation for image dimensions
removed logging statement for overlay version in SolrConfig . java and added imports in SolrConfigHandler . java to streamline the configuration process and enhance
updated delayUntil calculation in FileSyncAdapter . java to ensure accurate synchronization delay based on current time
fix checkstyle issue in util / files / segmentv1v2tov3formatconvertertest . java ( # 768 )
refactor ` addPathToMTree ` method to accept a ` Path ` instead of a ` String ` to improve code clarity and simplify
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4662 -
[ flink - 26011 ] [ table ] introduce timestampextractorutils to make it easy to read timestamp field from tsextract
added a new class SpringSecurityAuthenticationSource to handle LDAP authentication to provide functionality for retrieving principal and credentials based on authentication type
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest API
replaced the auto - suggest dialog implementation with a simple form dialog to display a custom file name to improve user experience by providing a clearer
added a new test method ` testNewput ` in ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
updated the variable name from ` collection . getName ( ) ` to ` collectionName ` in the ` stream ` method to improve code clarity by
adjusted zoom calculation and type casting in MapOverviewImageMouseHandler . java to improve accuracy of zoom values and ensure proper handling of mouse events
added similarity functionality to KNearestNeighborClassifier and updated related test cases to enhance classification testing capabilities by allowing custom similarity settings
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query performance by utilizing a constant score range
updated the method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to retrieve the reason
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added mtu request handling and tests in ShadowBluetoothGattTest . java and implemented it in ShadowBluetoothGatt . java to
refactor the servlet input stream creation into a separate method ` createServletOutputStream ( ) ` to improve code readability and maintainability by encaps
added logging for LibVosk ' s warning level and handle UnsatisfiedLinkError to improve error handling and provide clearer logging for
channelprocessingmanager : use concurrenthashmap instead of hashmap to avoid concurrentmodificationexception
updated Japanese resource files to include "all " , " grouped " , " summary " , and " summary " alongside "
updated conditional checks in JDBCTypeMapping and modified test assertions in JDBCTypeMappingTest to ensure correct handling of size parameters and improve test coverage for
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal processes
refactor accessibility handling by introducing regex patterns for control codes and code matchers to improve code readability and maintainability by utilizing regex
updated command behavior and icon handling in MenuBar . java and removed the closeButton in SideMenuBar . java to enhance user interface functionality and
removed the ` Disposable ` from the ` subscribe ` statement in ` PoloniexManualExample . java ` and added state handling in
added validation for energy limit contract type in UpdateSettingForEnergyLimitContractActuator . java and updated error message in UpdateSettingForEn
refactor URL handling in PostmanJsonBuilder to use a local variable for the Java URL object to improve code readability and maintainability by
camel - 6892 fixed the unit test error of soapjaxbdataformat
added assertions to check if a date is equal to another date in TestRange . java to improve clarity and accuracy of date comparison logic
added security checks in BasicAuthIntegrationTest and updated security data retrieval in ZkStateReader to enhance security capabilities and ensure correct server restarts
added PriceFeed parameter to TradesChartsViewModel constructor to set currency code based on sticky market price preference
updated replication configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to ensure default values are
updated variable names and logic in NativeString . java for clarity and consistency to enhance readability and maintainability of the code
added functionality to download a file in the FileDownloader class to enable users to download files directly from the database
[ java ] set the length of the file channel to the new length of the log .
added methods to check if a registry is running and delete a file if it exists using a retry mechanism to improve file deletion reliability and prevent
added componentPresetDao . startLoading ( ) calls in EditTest , Quick3dMain , and TextureTest classes to ensure loading state is
added ` @ SuppressWarnings ( " rawtypes " , " unchecked " ) ` and ` @ SuppressWarnings ( " javadoc " ) ` annotations across multiple
added null check for instances in TraceFeignContext to prevent potential NullPointerException when accessing instances
phoenix - 44a15 do not allow isolation level to be set when transaction be disabled ( addendum )
added transaction attribute handling to AbstractStepFactoryBean and refactored error handling in ItemOrientedStep to improve transaction management and ensure proper
updated CasManagementWebAppConfiguration to replace CasClient with DirectCasClient and modified security interceptor implementation to enhance client functionality and improve security logic
removed visibility and menu item handling for the add category menu in ListFragment and NavigationDrawerFragment to streamline user experience by ensuring the add category
renamed method from ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated method names in ` File
pdfbox - 4892 : fix classcastexception , avoid npe
updated font size handling in TerminalView and TerminalBridge classes to use dynamic text size instead of a fixed size to improve flexibility in text size
bugfix : do n ' t modify the frame if the fact be invalid
updated multiple Java files related to DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser to improve code organization and maintain
change return statement in ArrayListSpanAccumulator from a direct return to a new ArrayList instance to ensure that the returned span list is immutable after use
removed unnecessary lock service usage and simplified validation logic in Liquibase . java to improve code clarity and maintainability by reducing unnecessary
added a method to set the revision in MicroserviceVersions and updated references in InstanceCacheChecker and TestInstanceCacheChecker to ensure the revision is
updated foreign key and index creation logic to use a formatted string to enhance readability and maintainability of the code
camel - aws2 - s3 : add uri - endpoint - override option to all the component - aws2 - s3 component
removed unnecessary currency pair handling in BitstampAccountService . java and added a new method in BitstampAccountServiceRaw . java to streamline
added error handling for retrieving a component instance in BlueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException
add a disable push feature to the stream so it can be control through the remote setting .
legacyaddresstest : use dataset for test legacyaddress comparison
changed the access modifier of the ` findDropTargetAt ` method from package - private to public to allow access to the method from other classes
refactor Snackbar handling in NotificationsActivity to improve user feedback during push notifications to enhance user experience by providing clearer feedback on not
refactor channel closure logic in NettyAsyncHttpProvider . java to improve error handling and logging to enhance code clarity and ensure proper resource
updated null checks and improved logging messages in LdapPasswordPolicyEnforcer . java to enhance code readability and provide clearer context for debugging purposes
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840 issue
nifi - 6703 added timezone property to aboutdto so that it can be serialize to xml
updated assertions and modified range splitting logic in Splitter . java and StorageService . java to improve code clarity and ensure proper handling of split
simplified the deserialization process by removing unnecessary try - catch blocks to improve code readability and maintainability
fix potential race condition in circuitmanagerimpl # addcircuit .
replace GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
flume - 1343 . sink and source runner should use get / set method instead of getter / setter .
changed log level from error to info in FastBindLdapAuthenticationHandler to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance performance and maintainability of the focus traversal process
make sure freehand function do n ' t throw exception if the function do n ' t provide any point
removed unnecessary whitespace in CasRiskBasedAuthenticationEvaluationStartedEvent constructor to improve code readability and maintain consistency
refactor database connection handling in SchemaCrawlerMain and Executable classes to improve error handling and resource management to ensure proper closure of database connections and enhance
update default tl version to v1.2 on jdk16 +
[ java ] fix typo in exception message .
modified audio queue position handling in MediaManager . java to ensure correct processing of audio elements based on the current queue position
updated debug log statements in HttpConnection . java to include the cancelled flag to improve logging clarity by providing additional context about the upgrade process
added the ` isTransient ` method to ` JpaPersistentPropertyImpl ` and created a test for it in ` JpaPersistentPropertyImpl
updated test assertions in UpgradeResourceProviderTest to compare " HDP - 2.2 . 0 " instead of " HDP - 2.
truffle : make eval return object instead of symbol .
do n ' t guess encoding of url if it ' s binary
updated the configuration key for dynamic partition pruning max data size in HiveConf . java to ensure consistency in data size configuration across different tez
removed priority parameter from JavaProblem and related classes to streamline parsing error handling by eliminating unnecessary priority settings
bloom : remove dictionaryindexconfig . default _ offheap from dictionaryindextype . read ( databuffer , columnmetadata , dictionaryindexconfig
added a constant for the line separator in TableWriterTest . java to ensure consistent line endings across different operating systems
refactor DebugHelper methods for improved readability to enhance code maintainability and clarity
added a boolean field to track the ownership of the texture in ParticleEffect . java to ensure that the particle effect only owns the texture if
added LDAP authentication settings to HiveConf . java to enhance security by enabling LDAP features in the application
fix : update gapic - generator - java with mock service generation fix ( # 269 )
added input method toggle functionality in DetailActivity . java to enhance user experience by allowing soft input visibility during notes
added a test for converting a map of primitive to object in DataTableTypeRegistryTableConverterTest to ensure correct conversion of primitive data types to object
updated the size calculation in TestFileSystem . java from 100 , 500 to 10 , 50 , and deleted the " memFS : fsMem .
updated error messages in ContentTypeManager . java to provide clearer guidance on resource closing to improve user understanding of issues related to file triggering
changed the visibility of the ` dropSequences ` method in multiple database classes from protected to abstract to allow subclasses to implement the ` dropSequences `
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
updated the assignment of the variable ' f ' in the createField method call to ensure the variable is properly initialized before use
fix issue with hierarchical icon do n ' t work with map style .
added a test to verify the behavior of findOne after upsert with non - existing objects to ensure that the correct object is returned when upserting an
hbase - 25836 fix the calculation of the ' mid ' variable in rowindexseekerv1 , bytebuff , blockindex
added a method to record app launches and updated broadcasting logic to handle null shortcuts to improve robustness and prevent potential null pointer exceptions during
added graphics creation and disposal in JavaSEPort . java to improve rendering performance and resource management
update instructorfeedbackresultspagedata : : getteammembersfromroster ( ) to return teammemberswithoutresponses instead of teammembers
modified the inventory ID retrieval logic to include a check for zero and added a test for inventory IDs to ensure that an empty inventory ID is generated
added a condition to skip processing if the configuration is not found to improve efficiency by avoiding unnecessary processing
updated parser visitor logic to handle return values correctly in ReloadableJava parser visitors to ensure proper handling of return type annotations when applicable
modified the initialization of the blended tiles property in TileMapRenderer to handle null values to improve flexibility in handling blended tiles
8274560 : remove unnecessary @ classes declaration from jdk . jdi . probe
added null checks and improved calculations for area calculations in IfcTools2D . java to enhance robustness and prevent potential NullPointerExceptions during segment
updated lockOnSync assignment to use ' this ' instead of ' this ' for clarity to improve readability and maintainability of the code
pipe : fix pipe event bus inheritance issue
updated the timeout parameter in the ZkController instantiation from 1000 to TIMEOUT to improve test reliability by allowing more time for the ZkController
added a test for passcode functionality with client parameters in TokenMvcMockTests . java to ensure that the passcode endpoint correctly handles client -
added ` KeepWordFilter ` and ` LengthFilter ` constructors to ` brokenOffsetsConstructors ` in ` TestRandomChains . java ` to ensure
removed the import of ` org . junit . Ignore ` in ` RandomPlaneTest . java ` to enable the test execution and ensure it
sulong : do n ' t use unsigned long conversion in x86 _ 64bitvastart .
refactor btCollisionObject and btRigidBody methods to use getInstance method instead of getCPtr to improve code readability and maintainability
added a copyright year property and a method to retrieve its value in BuildProperties . java , updated the AboutDialog . java to include copyright
add jetclientinstanceimpl . getdistributedobjects ( ) method to jetclientinstanceimpl ( # 21251 )
added print statements to FinSet and MassCalculatorTest classes for component information to improve debugging and traceability of the code
updated the memory management constants to use the maximum memory instead of the total memory to ensure proper resource allocation based on the system ' s available memory
changed catch block from MetadataException to Exception in StandaloneSchemaFetcher . java and updated setCompressors method signature in CreateAlignedTimeSeriesPlan
update burningman and dispute validation to use bisq instead of co - founder
updated JSON string construction in JsonLoaderTest . java to use json method and added ignoreException and unIgnoreException methods to improve readability and
updated the capacity validation condition in ObjectSet . java from a minimum of 1 to a maximum of 0x40000000 to ensure that the capacity
updated import statements in ColumnSnapshotGenerator . java and added null check for dataScale in ColumnMetadataResultSet . java to improve code clarity and
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the code and improve readability by elimin
added exception handling for URI query and improved content limiting in FileHelper and TextHelper to enhance robustness against security exceptions and ensure proper
added a new constant ` StyleWithMultipleAttributes ` and a corresponding test method in ` ShadowThemeTest ` to support support for multiple attributes in
updated sheet name comparison logic in HSSFWorkbook . java and modified sheet creation in TestHSSFWorkbook . java to ensure correct sheet
updated the primary color method used in ManageAccountsActivity from ` primaryColor ` to ` elementColor ` to ensure the correct color is used for
updated the initialization of the wrapped handler in DefaultEventBus and modified the path resolver in DefaultPlatformManager to ensure proper handling of messages when reply
added binaryCollationName property and implemented getCollateFragment method in MariaDbDbmsType , MySqlDbmsType , and Abstract
added a new method ` whenType ` to the ` Tree ` class that returns an ` Optional < T > ` to enhance type safety by
refactor navigation handling by introducing a method to retrieve the user view destination to improve code readability and maintainability by encapsulating navigation logic
replaced Response . ok ( Status . OK ) with Response . temporaryRedirect ( URI . create ( applicationSettingsService . get ( ) .
[ flink - 14836 ] [ kinesis ] improve the error message when the deserializer be not serializable
( chore ) camel - johnzon : fix checkstyle issue
replaced a sleep delay with a try - finally block for ZkClient closure in LeaderElectionTest . java to ensure proper resource management and
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
added a new method ` read ` to handle buffer reading in ` ProxyHandler ` to improve code modularity and reusability by centralizing
replaced ` BufferUtil . allocate ( length + 11 ) ` with ` ByteBuffer . allocate ( length + 32 ) ` in ` ABCase
modified the ` prepareStreamsToUpload ( ) ` method to return a boolean indicating success or failure to improve the logic for determining if streams are
updated comparison logic in AbstractConfigLoader to use Integer . compare for order comparisons to ensure consistent ordering and prevent potential null pointer exceptions
added a new class PicOfDayAppWidget to handle PicOfDay app widgets to facilitate loading and updating app widgets for the
fix internallb vm offering when service offering uuid be pass in . default the default offering will be use instead of be pass to
updated import statements and modified join condition handling in HiveParserCalcitePlanner . java to utilize HiveRelOptUtil for improved join
[ hotfix ] [ runtime ] deprecate all transformation class in favor of their own implementation
added user and password options for JMX connector in NodeToolCmd . java to enable secure access to the remote JMX service using specified credentials
removed redundant initialization of BytesRef in Stemmer . java to streamline code by eliminating unnecessary variables
updated conditions for applying app widgets in AppsCustomizePagedView . java to ensure proper handling of page navigation based on the number of
ggb - 3d ggbapplet . getactiveeuclidianview ( ) do n ' t work for 3d
updated rotation calculations in GcodeRenderer . java to ensure correct positioning to improve responsiveness and prevent invalid rotation values
added a new WORKSPACE option to the OptionEnum and updated TerminalClient to set the workspace directory to enhance configuration options for better management of workspace
updated the test file path from " options . apt " to " options . html " in CLIManagerTest . java to ensure the correct
updated JUnit tests in ScimUtilsTest to use JUnit 5 annotations and enhanced PollutionPreventionExtension to improve test structure and ensure
updated the OAuthConfirmationController to use a Map for session attributes instead of a ModelAndView to simplify the model attribute handling and improve code read
refactor assertions in HibernateIT to use assertTrueEventually for better readability to improve test clarity and ensure accurate cache hit count
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event processing
refactor MultiPaintEventTest class to improve test coverage to enhance reliability of paint event handling functionality
removed the final modifier from mNewScale assignment in WorkspaceStateTransitionAnimation . java to allow for flexibility in scaling logic
refactor SyncFactory to improve synchronization handling to enhance performance and maintainability of the synchronization process
added unique key handling to the LukeRequestHandler to ensure the correct schema field is added for unique keys
added document filtering for stroke and background colors in BorderEditor and updated color retrieval in EditableResources to improve color management and ensure correct border color
skip binary parser exception when it be not part of compilation .
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchschedulingtest
added logging statements for pending requests in GatewayRSocket and GatewaySocketAcceptor , and updated backpressure handling in PingPongApp to improve
added Toolbar item click listener to RecentChatFragment to inform users of actions under construction to enhance user experience by providing feedback on menu items
updated InfoDropTarget and UninstallDropTarget classes to extend UninstallDropTarget and implement uninstall affordance methods to enhance functionality by allowing
replaced calls to ` getTail ( ) ` with ` peek ( ) ` across multiple classes to improve clarity and consistency in scope management
updated API URLs and event log URLs in CommonsApplication . java to reflect the correct project structure to ensure users access the correct wiki for the
refactor index handling into separate methods for clarity to improve code readability and maintainability by reducing duplication
replaced ` Collections . sort ( ) ` with direct calls to ` sort ( ) ` across multiple classes to simplify code and improve readability
added date and time patterns to FormatData _ hr _ HR . java to enhance date formatting capabilities for better user experience
added a call to clear focus on the clickedView in DetailFragment . java to improve user experience by resetting focus when the clicked view is clicked
updated selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to handle empty values to improve user experience by ensuring the default language value is set
updated time zone identifiers from " WSST " to " WSDT " across multiple language files to ensure consistency and accuracy in time zone representation across
added native methods to register global and weak references , and refactored FastGetField to utilize these new methods to improve code maintainability
added default value handling for UNION and NULL types in ReflectData . java and updated related tests in TestReflect . java to ensure proper handling of
increased offerTimeout from 300 to 1000 in SedaBlockWhenFullTest . java to allow more time for the queue to be
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerExceptions when the resource class is not initialized
( chore ) camel - hapi - fhir - dialect : ensure compatibility with current database version
http : / / issues . apache . org / jira / browse / camel - 1745 - add connection close header to http producer
increased the socket timeout from 60000ms to 120000ms in BasicDistributedZkTest . java to allow more time for
added an assertion to verify that the ticket status is not free in the database to ensure that the database correctly identifies the ticket ' s status and
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter to improve code structure to enhance maintainability and readability of the code
use document . getfirstelementchild ( ) instead of document . getfirstelementchild ( ) for nestablenode retrieval
improve look - up strategy for enum in testdata
increased metaPortStart and dataPortStart from 20001 to 11001 and added waitingToShutDown method in ClusterNode to
changed log level from warn to info for cached beans in ELContextCleaner . java to provide clearer messages when no such fields are available
set mContentType to " application / octet - stream " in WebdavEntry . java to ensure proper content type is used for HTTP requests
added getQueueSize method to LazyTraceThreadPoolTaskExecutor and created corresponding tests to ensure the executor correctly delegates to the delegate task ' s queue size
fix distanceop ( line1 , line0 ) to avoid infinite loop
renamed the variable ` required ` to ` requiredLabel ` and updated related setter methods accordingly to improve clarity by indicating the purpose of the
removed the overridden ` next ( ) ` method and added ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` to stream
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated ` VectorUtil ` to use this new method to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide a
added validation for the length of the vertices in the Polygon class to ensure that only 3 points are processed to prevent runtime errors
replaced ` ObjectMapper ` instantiation with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to improve code consistency and leverage
improve null check for the variable ' coeff ' in GeoImplicitCurve . java to avoid potential NullPointerException when ' coeff ' is null
updated ExternalNameRecord to handle Unicode names and added a test for the bug 47384 to improve handling of Unicode names and ensure correct functionality
camel - 16400 : camel - jms - destination type should be ` ` queue ' ' ( default to ` ` topic ' ' )
added logic to exclude " username " and " password " prompts based on a boolean flag in LoginInfoEndpoint . java to enhance login prom
replaced ` remove ` method with ` removeIf ` for listener removal to improve readability and maintainability of listener removal logic
added a new action toggle spin method in PieChartActivity to enable user interaction with the spin animation in the chart
citrix : make copy _ vhd _ to _ secondarystorage return error when copy fail
hbase - 26942 namespace auditor should check for quota before normalizing table ( # 466 )
updated import statements and added a resize method in AndroidInput . java to improve code organization and ensure proper resizing of pressure data
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the ` @ VisibleForTesting ` annotation to enhance test
ignore test since it be always fail and block pr
fix theHopperhock ' s bounding box calculation to account for the new range position to correctly position entity items within the bounding box
added authentication dialog with username and password fields in SsoWebViewClient . java to enhance security by providing user credentials during SAML authentication
modified TestStressIndexing2 . java to introduce deleteDoc and deleteByQuery methods for improved document management to enhance test stability and
[ flink - 22559 ] [ test ] ignore upsertkafkatableitcase due to flink - 22559
replaced the method ` get ` with ` computeIfAbsent ` for obtaining the list of types and adjusted the calculation of ` endPos ` to
added a configuration to accept single values as an array in DefaultEntityMapper to ensure proper handling of single values during JSON deserialization
updated localization updates in VersionChangeLogs . java to include additional languages to enhance user experience by providing clearer localization options
[ netbeans - 4892 ] split app category into separate category ( # 4893 )
modified the ` visitExpressionInstanceOf ` method to accept ` RelExpressionInstanceOfContext ` instead of ` ExpressionInstanceOfContext ` and added
nifi - 3740 added mime . type attribute to flowfile in gethttp
add a method to convert the provenance entry into a resource history entity ( # 4370 )
renamed exit button to done button and updated relevant listener references in HelpActivity and SearchBookContentsActivity to improve clarity on the button '
[ hotfix ] fix checkstyle violation in natsconfiguration
improve cachinghivemetastore to invalidate stale partition
improve performance of view result visualizer by use circular and unbounded buffer
updated drawable resources from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple files to better represent the user ' s chat
replaced ` getLong ` method with ` getLongVolatile ` in ` BroadcastReceiver ` and updated related tests in ` BroadcastReceiverTest ` to
updated test method names for consistency in MocksCreationTest . java to improve readability and maintainability of the test code
added a static final string for the CSVThirdEyeDataSource class and changed the visibility of the generateDetectionConfig method in YamlDetectionConfigTranslator
updated awaiter timeout from 10 seconds to 30 seconds in multiple locations to allow more time for the phaser to become available before proceeding
removed the BuildSlaveFinishedStatusEvent class and updated its usage in the DistBuildRunCommand and DistBuildSlaveEventBusListener classes to simplify
fix vmware template uuid string encode in vmwaremanagerimpl . java ( # 5357 )
added a test for depositing a workspace item without a workflow in the WorkflowItemRestRepositoryIT class to ensure that the submitter group
[ hotfix ] [ core ] use distinct stream in classloadersupportimpl . classpath ( )
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unnecessary complexity
refactor argument processing logic in SpecificCompilerTool and add a new test for ordering of flags in TestSpecificCompilerTool to improve code clarity
modified HiveMetaStore to conditionally delete the partition directory if the table is an external table to ensure that the partition directory is deleted only when
hive - 23737 : increase default value for async execution thread size and keep alive time ( ashutosh chauhan via
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to store service and component names in variables instead of hardcoded strings to improve code readability and maintainability by redu
added a variable for the current configuration info in OperationSetTelephonyConferencingSipImpl . java to track the difference between the current
clear log entry from log view ( # 6373 )
update return statements in ChannelEndPoint . java to include channel state checks for shutdown conditions to ensure proper handling of input / output shutdown scenarios
refactor SetNullableGenerator to improve nullable handling to enhance code clarity and maintainability
fix camel - example - reportincident to use new file component instead of file : /
replaced specific imports with a wildcard import in NettyRoutingFilter . java and updated content type handling in FormIntegrationTests . java to simplify
added API operations for the " hello " and " helloWithValue " nickname in multiple service classes and updated method signatures accordingly to enhance API documentation
refactored lifecycle listener management in Lwjgl3Application and Lwjgl3Window to simplify the update method and ensure consistent
updated the color value of FG _ FK from ( 0 , 90 , 0 ) to ( 0 , 0 , 200 ) to improve the
make sure mp3 audio be not require in the web browser . http : / / github . com / codenameone / codenameone
fix secondaryindexmanagertest to check for built index
pmd - eclipse : add ` ` version ' ' and ` ` eclipse . version ' ' property to plugin . properties
[ hotfix ] [ test ] use optional to findthrowable in customserializationitcase
refactor MediaFormatUtil to improve code structure to enhance maintainability and readability of the code
added a method to check if a cell is editable in the GeneralTab class to provide a default implementation for cell editable behavior
added a method to determine if unused dependencies should print commands based on configuration to enhance flexibility in handling unused dependencies based on configuration settings
added a static integer variable ` tmpCount ` and updated the values of ` vscales ` in ` VocalTractScalingProcessor ` to
updated import statements for BaseScalarUdfTest in multiple test files to ensure consistent usage of the BaseScalarUdfTest class across test files
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper object comparison and hashing for null values
* testskeletoncontrolrefresh now use animcompositer instead of animchannel for animation
renamed ` NodeFilter ` to ` NodeCountFilter ` and updated related methods to improve clarity and consistency in naming conventions
updated the condition in NodeImpl . java to include an equality check for SYNC _ FETCH _ BATCH _ NUM to ensure that the sync
updated the state from 365 to 366 and removed redundant characters in DebugExpressionParser . java to correct the parsing behavior and improve code readability
updated the condition for finding dependencies in ExcludeDependency . java to use a stream - based approach to improve readability and maintainability of dependency resolution
replaced the ` tmp ( ) ` method with ` dst2 ( T v ) ` and updated the ` lerp ( ) `
initialize the ' args ' variable to an empty array instead of null to avoid null pointer exceptions when ' args ' is null
refactor linker argument handling in RustBinaryDescription and add a new test for linker flags override in RustLinkerIntegrationTest to improve
[ # 1187 ] fix test failure on travis ( # 1188 )
added configuration for external DAG name in HiveConf and updated logging in GenericUDTFGetSplits to include the external DAG name in
removed unused import of java . io . File in TileAtlas . java to clean up the code and improve readability
added atomic boolean to manage the closed state in EscapeProcessingOutputStream and refactored output / error handling in GradleDaemonExecutor to improve
updated the ` validateQuery ` method to accept multiple arguments instead of a single string to enhance flexibility in error message formatting for query validation failures
updated the INDEX _ VERSION from 1 to 2 and refactored the getTree method in LuceneExecutor . java to improve code clarity and
[ hotfix ] [ runtime ] write default kryo registration to file .
added null check before removing the property in BlueprintConfigurationProcessor and updated test assertions in BlueprintConfigurationProcessorTest to ensure that the property is removed only
replaced manual boolean handling with Apache Commons BooleanUtils for better readability to improve code maintainability and leverage existing utility methods for boolean
added hideCustomizationDrawer ( ) method to Launcher . java to improve user interface by hiding the customization drawer
replaced the handling of warnings in TermVectorComponent with a constant for better clarity and management to improve code readability and maintainability by
added logging for optimistic types and improved string concatenation in compile job logs to enhance debuggability and maintainability of the code
refactor Expect class to improve code readability to enhance maintainability and facilitate future updates
added UnixSocketConfigurationStrategy to DockerClientFactory and created it in DockerClientFactory . java to support Unix socket access in the Docker client
added a flaky test method ` testEvenLowRateIP ` in ` CloseableDoSFilterTest ` to mark the test as flaky
( chore ) camel - reactive : better exception handle when the stream have no active subscription
refactor Vectorizer and TezCompiler to utilize TezWork for map processing instead of MapRedTask to improve code clarity and
log4j2 - 1343 fix bug in stringappender and logdivertappender that cause log4j2 to fail
add null check for guipackage before call updatecurrentnode ( )
sulong : add linkage . isweak to handle weak function and encode value .
updated multiple Java files related to class sharing and loading functionality to enhance functionality and improve code maintainability
test only change - add test for defaulttransactionthreadlocal
added validation for invalid OperationHandle in HiveStatement . java to improve error handling for server - side operations
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - 14850 - camel - aws - secrets - manager : enable autowire on the secrets - manager endpoint
updated the implementation of the SimpleTree class to improve performance and maintainability of the code
removed exception message from the error response in UserREST . java to simplify error handling by eliminating unnecessary exception information
added a ` subTree ` parameter to the ` Result ` constructor and updated its usage in ` Result . java ` to allow the ` Result
update column width calculation in Sheet . java and add unit test in TestHSSFSheet . java to ensure correct column width behavior and validate
added configPath parameter to Commands . less method to enable configuration file handling during command execution
replaced ` Set ` with ` Collection ` in ` DotWriter . java ` and replaced ` HashSet ` with ` ArrayList ` in ` Graph
updated SSHD container image version from " @ sha256 " to " 1.0 . 0 " to ensure compatibility with the latest version of
agent : do n ' t check hostid when it ' s null
refactor group key generation logic for multi - valued columns in DefaultGroupKeyGenerator to improve clarity and functionality of group key generation
updated testSeekNegative method to testSeekingExceptions and improved error handling in TestMultiMMap . java to enhance test reliability and
fix the ingredientstack creation in bcsiliconrecipes .
rename method put ( ) to putobject ( ) to be consistent with other method in configmixin
modified visibility setting logic in CellLayout and refactored the onDragExit method in Workspace to improve code readability and encapsulate drag -
updated the rewrite function in ModifyRequestBodyGatewayFilterFactory to use the original body instead of the original object to ensure that the original request body is
added checks for package accessibility in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure proper handling of non - package - accessible types
changed logger warnings from warn to trace in LoggingHandler . java to provide more granular logging for debugging purposes
refactor prefix extraction logic in WhiteBlackList . java and add a new test class Issue348 . java for wildcard handling to improve code
added options menu functionality to the GalleryActivity and modified the onPostCreate method to handle image selection to enhance user experience by allowing users to open
refactor MongoDBServiceFactory to use a singleton instance for service initialization to improve performance by avoiding multiple instances of MongoDBService
added tests for replacing boolean values with their true and false in InlineConstantMutatorTest . java to ensure proper handling of boolean values in code formatting
updated the ` decode ` method in ` RecordTest ` to include a ` Blackhole ` parameter and adjusted related calculations to enhance functionality by allowing
fix : update gapic - generator - java with mock service generation fix ( # 636 )
[ knx ] skip group address / dpt channel when there be no inbound spec ( # 11347 )
removed the clear ( ) method call from the dbManager to streamline the database management by eliminating unnecessary operations
do n ' t throw prestoexception in case of jdbc error
updated stack handling in NativeError . java by introducing new methods for retrieving and setting the stack to improve code clarity and maintainability by
removed a condition that checks if a path name starts with " . " in DrillPathFilter . java to simplify the path filtering logic to
corrected the spelling of " onboard " to " autoLoad " in the ThirdEyeAnomalyApplication and ThirdE
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before further operations
updated the BOLDWEIGHT _ NORMAL constant to use 0x190 instead of 190 to ensure consistent bold weight representation across the application
changed fThreadGroup to be volatile in FailOnTimeout . java and modified fLookForStuckThread in Timeout . java to ensure thread
reformatted the constructor of ValueResultData for clarity to improve readability and maintainability of the code
updated the hashCode ( ) and equals ( ) methods in FuzzyQuery . java to use the superclass ' s equals ( ) method instead of
removed unnecessary system . err . println statements in PushedResourcesTest . java to clean up the test output and improve readability
changed method signatures of ` removeFile ` and ` removeDirectory ` from ` Nullable ` to ` void ` and removed the ` result ` variable
updated the product version from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest and Schema
updated the method for retrieving person attributes and modified the principal creation logic to ensure that the principal is correctly resolved without attributes and improve logging clarity
updated logging level from info to warn in OpenWebNetBridgeHandler . java to improve logging clarity for better debugging and monitoring
replaced calls to ` intHash ` and ` longHash ` with ` hash ` in multiple hash - related classes to standardize hash function
added a constructor to ThumbnailGenerationTask to initialize it to ensure that storageManager is not null and image view reference are not null to prevent
updated the loop condition in GroupSelectionQuery to check for attempts before stopping to ensure that the loop does not exceed the maximum number of attempts and
added a new file ` Bug1933922 . java ` implementing a map and method ` foo ` to retrieve compiler warnings related to file
standardized spacing in multiple Java files for consistency to improve code readability and maintainability
update character validation from 33 to 32 in FileResolver . java to ensure that only valid control characters are processed to prevent runtime errors
added a call to request focus in the component to improve user experience by ensuring the component receives focus when needed
updated test data paths in InstructorHomePageUiTest . java and InstructorHomePageUiTest1 . java , and InstructorHome
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated the message handling in DetailFragment and modified the onPause method in MainActivity to improve user feedback and ensure proper cleanup of croutons
added a test for schema query and fetching with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correct handling of schema templates and
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
refactor process execution to use ProcessBuilder instead of Runtime to improve flexibility and maintainability of the code
replace InetAddress . getLocalHost ( ) with InetAddress . getByName ( " 127.0 . 0.1 " ) in HintedHandOff
refactor the handling of controller and subsystem paths into a separate loop to improve code readability and maintainability by reducing duplication
added assumptions in DaemonLifecycleManagerTest , InstallCommandIntegrationTest , and FakeAppleDeveloperEnvironment tests to ensure tests are only executed on
make jvmciversioncheck support java . specification . version and java . vm . vendor optional
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
[ hotfix ] [ test ] fix typo in testlargepageuseforauxmemory
updated method calls in BinaryParser , PlainTextParser , and ParsingExecutionContextView to use context for charset management to enhance charset handling and improve
added support for multipart form data compliance in HttpConfiguration and created a new enum MultiPartFormDataCompliance to enhance flexibility in handling multipart form data
added support for JDK - 17 in GradleDistributionManager to ensure compatibility with JDK 17 features
refactor type handling in SnapshotControl to use a dedicated addType method to improve code readability and maintainability by centralizing type addition logic
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
add null and empty check for runWith in ChangeSet . java to ensure that the method returns null or empty when runWith is null or
http : / / issues . apache . org / jira / browse / amq - 4568 - add test to verify that rm
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
improve blackbox test coverage . also fix a bug in localblockbinarizer .
refactor tinting logic by replacing ` amount ` with ` mTintAmount ` in ` TaskView . java ` to improve code cl
added a new file ` SumZeroAggr . java ` that implements the ` SumZero ` aggregation function to facilitate the sum
added " ( id INTEGER NOT NULL ) " to multiple tests in FirstValueFunctionIT . java and NthValueFunctionIT . java to
refactor getAllocationFailWarningMessage method to use a StringBuilder for string concatenation to improve readability and maintainability of the code
added a null check for propName before putting it into roleObject properties to avoid potential NullPointerExceptions when propName is null
modified access modifiers of fields and methods in StatusBarTouchController and RecentsView for improved test visibility to enhance test accessibility and
added a new method ` logContainerStream ` to handle container logging with a stream parameter to improve container logging functionality by allowing the stream parameter to
mvstore performance test : add test case for cache performance
updated the long value from " L " to " J " in PrimitiveType . java to correct the conversion from long to primitive types
changed the access modifier of the delegatingApplicationListener method from public to static to allow the method to be called without creating an instance of the
set the body of the exchange to null in RestBindingAdvice . java to prevent potential null pointer exceptions during message processing
added new files ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` to implement a tasklet for
euclidianviewforplanecompanion now call updatesizekeepdrawables ( ) when necessary .
updated variable assignments in BitUtil , Int2IntCounterMap , Int2IntHashMap , and related classes to address index out - of -
updated method names and parameters to use ` sendStateEventToTest ` instead of ` sendEventToTest ` for better state management to improve
added support for video thumbnail requests in multiple classes to enhance request handling for video thumbnails based on user - agent and format
improve error checker when there be no problem on the line
added conditional logic to adjust the layout of the title area based on the UI manager ' s theme constant to improve user interface responsiveness by
added preloads for " libskia " in the Skia . java file to ensure compatibility with the latest Skia library requirements
add ` ` com . google . bitcoin . unittest ' ' for unit test
added validation for format arguments in QueryCommand and corresponding tests in QueryCommandIntegrationTest to ensure proper handling of format arguments and improve test coverage for
refactor capacity and position validation logic in IntIterator . java to improve clarity and maintainability of the code
updated ` walkRuleAndAdd ` method to include a ` srcTarget ` parameter and modified dependencies handling to include the source rule to ensure correct
[ netbeans - 4560 ] allow patching of class output to override module name .
[ java ] remove protocol version check for candidate term id validation in election .
added conditional policy setting based on SAML authentication status in MainApp . java to ensure proper client creation behavior for SAML - specific authentication scenarios
add a null check for the mappedtableresource in ReadBatch and WriteBatch to ensure that a mappedtableresource ( table ) is provided when
refactor connection close logic to use a new utility method to improve code readability and maintainability by centralizing resource closure logic
refactor AnonymousAuthenticationFilter to use a deferred context for authentication to improve flexibility in managing authentication contexts
modified the removeActor method to include an optional unfocus parameter to enhance actor removal functionality by allowing more control over actor unfocusing
replaced string concatenation with a variable for valid configurations to improve code readability and maintainability
added logging functionality to the NettyHttpServer and related classes to enhance logging capabilities and manage channel writes more effectively
updated multiple Java files related to DatumAliases , AbstractParser , Formattable , and Parser to improve code organization and maintainability
replaced a direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ) to ensure that the update method is
( chore ) camel - groovy : optimize the execution of groovy script
oops , do n ' t use artifactutils . versionlesskey to keep track of plugin artifact .
changed access modifiers of methods in multiple classes from static to public to allow access to these methods from other classes
renamed ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
removed unused key entry retrieval for storage keys in HttpsMessenger . java to streamline code by eliminating unnecessary complexity
alexeibarantsev : fix classcastexception in httpcommandexecutor . convertresponse ( )
change updateImage method visibility from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the updateImage method
[ 1.19 . x ] fix block . dropresources not be call on serverlevel ( # 8994 )
added native methods ` hasSpatialLocationCalculatorConfig ` , ` tryGetSpatialLocationCalculatorConfig ` , and ` getSpatialLocationCalculatorConfig `
refactor multiple Java classes related to community detection and data processing to improve code organization and enhance maintainability
replaced keySet ( ) . isEmpty ( ) with a new isEmpty ( ) method for better readability to improve code clarity and maintainability
updated foreground and background method calls in AttributedStringBuilder to use specified colors instead of a fixed col value to improve flexibility in rendering by using
added a condition to disable fingerprint when the " solr . disableFingerprint " property is set to true in PeerSync . java to ensure that fingerprint
changed the access modifier of the moveFunds method from private to public to allow access to the method from other classes
added support for ` PersonWithIdPropertyOfTypeUUID ` and improved event handling in ` MongoTemplate ` to enhance functionality and ensure proper event
fix settransactiontest to work with jdk 1.6 and jdk 1.7 .
added null check and closing logic for the input stream in TikaCLI . java to ensure proper resource management and prevent potential memory leaks
updated exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling clarity
removed unnecessary whitespace in the loadConfig method call to improve code readability and maintain consistency in formatting
updated log message formatting in InstructorFeedbackAddActionTest . java and InstructorFeedbackCopyActionTest . java to improve clarity of log
[ beam - 8470 ] remove exception from constructor of externalworkerservice and make pipelineoptions final .
updated step handling in HmDatapoint and DisplayTextVirtualDatapoint classes to improve clarity and consistency in data point representation
added logging for shared and exclusive lock acquisition and releasing in PostgreSQLReadWriteAdvisoryLocksTest . java to improve visibility into lock
removed redundant call to scheduleJobs in BaseSchedulerServiceImpl . java to streamline code by eliminating unnecessary complexity
danielwagnerhall : do n ' t run testgettextcontent if the driver be n ' t available . fix
replace static logger instance with a ThreadLocal logger instance to improve thread safety and access to the logger instance
replaced the private modifier of ` convertToCompilationUnit ` with ` @ VisibleForTesting ` and modified mocking in ` FunctionInitializerTest ` to
updated type handling and boxing logic in Types . java and Infer . java , and added a new class T6995200 .
updated the handling of the focused task view in RecentsView . java and removed the initialization of the digital well - being toast in Task
replaced the method to retrieve regions from the HBase cluster with a direct call to the getRegions method to simplify code and improve readability by
added logic to clone and save contract details in the cache when a new contract address is found to ensure that contract details are correctly stored in the
updated token issue fee calculation in TokenIssueProcessor and modified allowance calculation in Program to ensure accurate balance adjustments based on asset issue fees
refactor texture cache management in RealisticRenderStrategy . java to use URI - based caching to improve texture management efficiency and avoid potential memory leak
refactor raster creation to use temporary raster variables in Blit . java and add a new test class Bug7049339 . java
added ` isUnselectedStyle ` boolean and refactored string width retrieval methods in ` Component ` , ` Label ` , and ` DefaultLook
updated ArrayList initialization to initialize mappings , actions , scores , and statsList with initial capacity to optimize memory usage and improve performance by reducing the
removed the ` flags ` parameter from multiple methods in ` ShadowApplicationPackageManager ` and ` ShadowUserManager ` to simplify method signatures and improve
refactor PingRequestHandler for improved clarity to enhance code maintainability and readability
add support for mp4 asset with increasing timestamps in AndroidTestUtil . java and update related test classes accordingly to ensure compatibility with newer API versions
[ tradfri ] do n ' t try to upgrade gateway with old firmware
refactor AjaxElementLocator to improve code structure to enhance maintainability and readability of the code
updated layout conditions in BoxLayout . java and DefaultLayout . java to include " table - cell " display to ensure proper handling of table cell
refactor JsonDecoder to improve level handling and add a new test for reordering fields to enhance code clarity and ensure correct functionality of JSON
updated the removal listener to include removal cause parameter in BlockCache . java to improve clarity and context of removal events during location release
disable savepointtestbase test until fix
added @ Test annotations to DroolsMvelParserTest . java to ensure proper testing of the parser functionality
changed fields in ContextRegisterListener to be final to ensure immutability of these fields to prevent unintended modifications
modified ObjectHashSet to support caching and improved iterator initialization to enhance performance and maintainability of the code
added batch byte calculation and validation in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to improve batch processing accuracy and
changed ` MODE _ WORLD _ READABLE ` and ` MODE _ WORLD _ WRITEABLE ` to ` MODE _ PRIVATE ` in `
updated logging messages for close ( ) method and added abort ( ) handling in JdbcProxyGenerator . java to improve clarity of logging and handle
updated the animation state in Workspace . java to use mState instead of getState ( ) and added accessibility imports to improve animation behavior based on
change log level to debug for malformed edit in ProtobufLogReader . java to reduce log verbosity and improve performance during debugging
modified scope substring handling in UaaTokenServices and added unit tests for scope provisioning to ensure that the scope length does not exceed 1000 characters and
updated import statements in SchemaRetrievalOptionsBuilderTest . java and AvailableJDBCDrivers . java , and modified logger initialization in AvailableJDBCDrivers . java
[ drools - 7 ] add executablecommand interface to allow command to be execute in a runtime context
( chore ) camel - itest - jdbc : remove unused code
added padding getter methods to CellLayout and modified bitmap creation in Launcher to improve padding handling based on orientation of the layout
added a conditional check for empty string before processing candidates in LineReaderImpl . java to ensure that candidates are processed only when a valid string is
added null check for the flow before executing actions in multiple classes to prevent potential NullPointerExceptions during execution
added a method to check for open ports in LdapMockMvcTests . java to ensure that LDAP processes are running on the correct port for testing
log4j2 - 1343 log4j2 - 1344 executorservices . shutdown ( executorservicedeamons , time
updated URL handling in Fetcher and HTMLMetaProcessor to skip content and protocol redirects , and improved refresh logic in HTMLMetaProcessor to enhance
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse
refactor Console initialization to use reflection for compatibility to ensure compatibility with old Karaf Console API and improve code maintainability
modified the visibility of the ` getVerticesColors ` method and adjusted the handling of ` mCol ` to improve encapsulation and ensure compatibility with
added a filter to exclude timestamped report directories and updated the copy method in HTMLReportGenerator to improve report generation flexibility by allowing users to
rename test methods from ` testDeviceName _ thenOK ` and ` validateEmail ` to ` validateName _ thenDataValidationException ` , and
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a check to throw a TemplateProcessingException for binding form errors in FieldUtils . java to ensure that form errors are properly bound within the a
removed debug print statement from JoglInput . java to clean up the code and improve performance by eliminating unnecessary output
added support for allowing extraction of private fields in FieldSupport to enhance field value retrieval flexibility based on configuration settings
added a line to replace the device name in WebDataHandler to ensure the device ' s name is correctly displayed for better user experience
use methodhandles . lookup ( ) instead of reflection . lookup ( ) for java 8
deprecated the ` weights ` method and updated its usage in ` ZParams ` to use ` weightsByDouble ` instead to improve clarity and
added Database parameter to writeCustomHTML method across multiple writer classes to support database - specific functionality in the HTML writing process
removed unnecessary type casting for keys in BTreeMap . java to simplify code and improve readability by eliminating unnecessary type casting
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator , and added validation in TransactionTrace to improve error handling
do n ' t write the heap zero file if it be n ' t need
refactor code to use the ` sendMessage ` method from the ` Scope ` class instead of ` println ` statements to improve code readability and
updated the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed generic record in Hortonworks
added imports for ChunkListener , JobListener , and ReadListener , and ExitStatus in multiple batch - related classes to enhance batch processing capabilities and
refactor code formatting and improve readability in AbstractProviderModule . java to enhance maintainability and clarity of the code structure
replaced the method call to retrieve the title from the document object with a direct reference to the message object to simplify code and improve readability
updated Test7005594 . java file to improve test coverage and fix existing issues
update error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class for improved clarity to enhance maintainability and readability of the code
server : fix npe in listvirtualmachines api ( # 4669 )
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and introduced ` MCOptionUtils . MCOptionListener `
updated ` iteratesOverSequence ` and ` iteratesOver ` methods to accept ` Iterable < T > ` instead of ` Object . . expectedItems
camel - 7999 fixed the issue of header filter strategy can not apply to external header . thanks to stephan siano for the
added unit tests for the ` ActivityHistorySQLServerStoredProcedureTest ` class to ensure the correct number of results is retrieved from various SQL queries
updated BarChartActivityMultiDataset and BarLineChartBase to use a new LargeValueFormatter for value formatting to improve code clarity and
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR in CommentsParser . java to improve code readability and
remove @ suppresswarnings ( ` ` argument . type . incompatible ' ' ) from platform . java
[ fix ] tracelinearscanLifetimeanalysisphase do not print ir before register allocation .
removed the Auto - generated method stub in NullAssertionValidator . java to clean up the code and improve readability
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enhance rule key generation for build rules
ensure system _ profile _ directory exist before create it in pmsconfiguration .
refactored the thread factory creation in TestcontainersDockerCmdExecFactory to use a dedicated method to improve code readability and maintainability by
refactor inMessages retrieval in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code clarity and maintainability
added a " accept " attribute to the element in ImageFileInputDialog . java to specify that only images are accepted in the dialog
updated ElasticIndexWriter and TestElasticIndexWriter to use a pre - built transport client and improved import statements to enhance flexibility and maintain
updated the string concatenation for witnesses and witnesses class names in ForkController . java to enhance readability and provide more informative output for
added a new file ` NullPointerAndEmptyArrayTest . java ` that tests handling of null pointer and empty arrays to verify that the class
removed unused imports and modified methods related to generated source paths in BaseIjModuleRule , IjProjectBuckConfig , and AbstractI
updated UaaStringUtils to accept a function for constructing wildcard patterns with an optional character delimiter to enhance flexibility in handling wildcard patterns for external
added validation for TableScanOperator aliases in the MapWork class to ensure that only valid TableScanOperator aliases are processed to avoid errors
updated MockitoJUnitRunner import from org . mockito . runners . MockitoJUnitRunner to org . mockito . j
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging errors when setting firmware settings
replaced specific Java imports with a wildcard import and refactored the getLangs method to return a Set instead of a String array to simplify
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency and clarity to improve code readability and maintainability by aligning
hbase - 26942 snapshotting ( take / disable ) fail if tableinfo be not present on snapshot ( addendum )
[ j2kt ] refactor isnull call to use platform - specific method .
added a test to verify that the EXPLORER endpoint has a modified HTTP _ RPC fallback URL to ensure that the HTTP _ RPC endpoint
added a ` isSuspended ` field and modified thread state handling logic in ` Thread . java ` and ` Test _ Thread . java ` to
updated Javadoc visitor implementations to use ` Hidden ` , ` Serial ` , and ` SerialData ` instead of ` Since ` to improve clarity
camel - 3490 fixed the npe issue of camelproxyfactorybean and camelserviceexporter .
removed multiple redundant @ Override annotations from multiple classes to streamline code for better readability and maintainability
added module import handling for enums in Java2TypeScriptAdapter and updated test assertions in EnumTests to improve module management and ensure accurate test coverage
use http : / / www . w3 . org / 2001 / xmlschema instead of http : / / www . w3 .
added content description handling for badges in BubbleTextView to improve user feedback by providing clearer and more informative labels based on badge
added MouseWheelListener to handle mouse wheel events in TestMouseWheelScroll . java to enable dynamic scrolling of the scroll pane when the
pdfbox - 4892 : fix resource leak , a suggest by valerybokov
updated currency pairs in KucoinAdapters and KucoinIntegrationTests to replace " BTC _ ETH " with " XRB _
changed location types from Object to String in multiple classes to improve type safety and avoid potential null pointer exceptions
removed unnecessary currency conversion for DSH , QTM , and QTUM in BitfinexAdapters . java to simplify the code by directly returning
replaced Sets with ImmutableSet and modified field handling logic in JsonFormat . java to improve code clarity and maintainability while ensuring default values are
( chore ) camel - jackson : remove unnecessary check for array and enum type
updated constants and thread handling in VirtualThread . java to improve clarity and maintainability to enhance code readability and streamline thread state management
added a ` shouldRefreshReaderManager ` flag and refactored ` catTerm ` initialization in ` DirectoryTaxonomyWriter ` to improve code cl
refactor VetoableChangeSupport class to improve error handling to enhance reliability and maintainability of the code
adjusted the calculation of the height by subtracting 1 from the owner ' s height to correct the positioning of the BrowserContentPane by
pdfbox - 4892 : remove invalidpasswordexception from method signature , a suggest by valerybokov
added unit tests for setting short and long support messages in ShadowDevicePolicyManagerTest . java to ensure proper handling of security exceptions when setting support
ggb - 1181 make sure close button be visible ( not exam mode )
updated LambdaBeanPropertyMemberAccessor and MemberAccessorFactory files to improve code clarity and maintainability
replaced manual sleep calls with a waitUntil method in BackendInitializerHelper and TerminalClient classes to improve responsiveness and readability of the
updated the version check logic in SwingStartup . java to utilize UpdateInfoRetriever for release status checks to improve code clarity and ensure accurate
added functionality to include a generated file comment in migration XML to enhance migration by allowing users to specify a comment on which generated files should not be
updated command usage syntax from " / plot " to " / plot | * > " across multiple Java files to enhance command flexibility by allowing
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filters to streamline the codebase
fix : optionprocessor should use ` ` optionname ' ' instead of ` ` namevariablename ' '
added a condition to check for parallel class declarations in TestNGContentHandler to enhance functionality to support parallel class loading scenarios
http : / / issues . apache . org / jira / browse / amq - 4568 - fix routeinfomanager . set
refactor : remove static import of enums in ctmethodimpl . java ( # 2560 )
added serialVersionUID to multiple exception classes to ensure proper serialization compatibility across different versions
updated DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated the ` shaBase64 ` method in ` ShibbolethCompatiblePersistentIdGenerator ` to accept a separator parameter to enhance flexibility
added null check for SYSTEM _ ACTIONS _ ENABLED before returning its value to prevent potential NullPointerException when the parameter is null
added a new file ` Person . java ` containing a class ` Person ` with a private String name to facilitate the creation and
remove fbutilities . getlocaladdress from gossiper . start method . patch by jbellis ; review by stu hood
convert timeStr to uppercase before checking its index in AbstractClient . java to ensure consistency in time string handling across the application
added assertions to verify the functionality of timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest to ensure that the metadata values are correctly
replaced the import of ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` and updated
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper handling of disconnect
resolve issue with spring 3.0 . 0 - scope hierarchy be not a string - > class ( e . g . @ scope ( ...
danielwagnerhall : click on an element hidden by double overflow , instead of just click on it . fix issue #
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
[ drools - 7 ] add support for custom jndi location in jta transaction manager
changed the access modifier of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the ` hasFunction ` method from the ` Library ` class to streamline code by eliminating unused functionality
rename variable ` enabledCiphers ` to ` result ` and update related methods for clarity to improve code readability and maintainability by using
[ beam - 8470 ] use java . time . instant . ChronoUnit instead of java . time . instant . toepochmilli
replaced IllegalArgumentException checks with requireNonNull method calls in Identifiers . java and DatabaseConnector . java to improve code readability and reduce boilerplate
refactor input to use a map instead of a single input object to improve flexibility and maintainability of the code
added bounds checking for row and column in FlightConfigurablePanel . java to ensure valid row and column values to prevent runtime errors
added a call to ` scrollSelectionVisible ( ) ` in the ` ThrustCurveMotorSelectionPanel ` class to ensure the scroll
[ java ] unnecessarylocalbeforereturn - fix false positive
replaced the singleton instance of ScriptEngineManager with a direct reference to the scriptEngine variable to simplify code and improve readability by elimin
updated EuclideanDistanceSimilarity and related tests to correct correlation values to ensure accurate calculation of distance similarity values and improve test coverage
do n ' t increment sstables if they ' re already in backup
refactor relativize method in MorePaths to include null checks and normalize paths to improve robustness of path relativization by preventing
updated null checks for column size and decimal digits in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values for column size and decimal
( chore ) camel - deadletter : skip temporary file in test
updated method call from ` toHexString ` to ` toJsonHex ` in ` TronJsonRpcImpl . java ` to improve clarity and consistency
refactor ErrorHandlerController to Error403Controller and create Error404Controller in the error package to improve organization and clarity of error handling controllers
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal . java
enable the ` Tiny ` collection ' s ` toArray ` method and modify the ` Tiny ` collection ' s ` toArrayByMethodRef
fix concurrentmodificationexception in connectionpool . tryacquireconnection ( ) .
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` in ` LPPEAuthenticationHandler ` , ` PasswordPolicyConfiguration
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to improve clarity of error messages for better debugging
added exception handling for reader and writer exceptions in LargeStreamletTest . java to ensure proper thread join behavior when exceptions are received
added logic to increment extra pages based on user preferences for the current account and page type to improve user experience by allowing dynamic pagination of pages based
added error handling for image processing in AndroidImplementation . java to track potential exceptions when processing images
removed unnecessary suppressNode ( ) method calls in BaseParser . java and added SuppressSubnodes annotation in ImplicitActionsConverter . java to streamline
pdfbox - 4892 : avoid memory leak , a suggest by valerybokov
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
added a shell command to execute the " input keyevent 82 " in AbstractLauncherUiTest and removed an assertion check in LauncherInstrumentation
added JSON serialization for filename to URL in FileDumper . java to enable proper handling and serialization of filename to URL in the output
bugfix # 257270 - ensure that profilerserver . setresultsnotifiedflag ( ) be call on the correct thread
changed texture handling from Texture to Image in TextureHelper . java and updated related methods accordingly to enhance image loading functionality and improve code clarity by
updated assertion from " application : " to " application " in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContext
updated isbn randomizer version from " 9781797745008 " to " 9781797845005 " in Randomizers
updated the sound setting to use a dynamic ringtone URI instead of a default ringtone to improve flexibility by allowing the notification sound
added a method ` reportLoopCount ` to the ` RootNode ` class to enable tracking of loop counts for call targets
added logic to finalize the cluster version in FinalizeUpgradeAction for specific repository types to ensure that the cluster ' s current stack version is accurately
server : fix bug in listregionidandstatesearch - use regionid instead of rangeid
removed redundant line of code in ItemOrientedStep . java to streamline code for better readability and maintainability
added a new file CountedLoopProblem . java that implements a counted loop with a random integer to demonstrate the use of a
refactor executecompiledmethod and executecompiledmethodVarargs to accept object [ ] instead of long metaspacemethod parameters to allow for more flexible
refactor pendingFailedSpeculationOffset initialization to handle JVMCIError gracefully to improve error handling and prevent potential runtime errors during field access
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities by integrating additional key - based
added ' received points ' to feedbackconstantsumquestiondetails and updated test
removed the call to DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java to streamline the code by eliminating
added thread management and stack dumping functionality in CloseRace . java to improve error handling for child threads that fail gracefully
modified the return statement in IntPointField to use intValue ( ) instead of a direct return to ensure the return value is correctly interpreted as an
updated the arc size calculation to use a fraction of width instead of a fixed integer to allow for dynamic adjustment of the arc size based on the
pdfbox - 4892 : reduce the very high width , a suggest by valerybokov
fix ( sql ) : rename minifiedqlenabled to shrinkwhitespacesinsql
refactor tests in ` AbstractLauncherUiTest ` and ` WorkProfileTest ` to improve launcher state transition handling to enhance test clarity and
added import statements for CasCoreConfiguration and related configurations in multiple test classes to enhance configuration management and ensure compatibility with the new CAS framework
replaced ` raf . readLong ( ) ` with ` DataIO . getLong ( ) ` for reading long values in ` Volume . java `
( chore ) camel - http : avoid npe if debug level be not set
refactor ClasspathInfo creation in DeclarativeHintsParser to improve clarity and structure to enhance maintainability and readability of the code
automation : make media script scope provider interface ( # 4883 )
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to utilize it to improve control over layer management
added a check to return early if the queue is empty in DeferredHandler . java and removed unnecessary method calls in Workspace . java to improve performance
added null checks for mapOp and mapWork in MapRecordProcessor . java and modified exception handling in TezProcessor . java to improve error
refactor CylinderRegion to use Vector2D for the center vector instead of a Vector to improve type safety and simplify the center calculation
replaced custom exception handling with JUnit ' s ExpectedException rule in TestBadUseCases . java to simplify test code and improve readability
modified the query execution logic to handle null parameters for subqueries and added a new test for multi - execution to improve robustness of query execution
do n ' t override custom security environment if it do n ' t exist
added a new parameter " rctag = android% 20app% 20edit " to the GET endpoint in ReviewInterface . java to specify
updated test cases in Test . java to improve test coverage and ensure reliability of functionality
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in key generation
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure section definitions are properly written in the document
added location accuracy checks and warning logging in GpsLoggingService . java to ensure very large jump detection and improve logging clarity
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve performance by elimin
doc : generate sample code in the java microgenerator ( # 193 )
replace boolean rootNameFn and boolean sourceFilterFn with Reference objects and add hash codes for rootNameFn and sourceFilterFn to improve memory
simplified the addition of elements to the ` data ` and ` added ` lists by removing binary search to improve code efficiency and readability
refactored SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and removed the ThemedPreferenceActivity class to simplify the
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose
added an assertion to the assertRootArcs method in FST . java to ensure that the root arcs are correctly validated
added an assertion to check if a security policy exists or is a file in JstatdTest . java to ensure that the security policy is
camel - 14263 : camel - olingo2 should use source code generate configurer to avoid reflection configuration .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for the recovery process to complete
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging output by eliminating unnecessary context
add action to publish xmpp image by http use xmppclienthandler .
camel - 14850 : camel - netty producer - avoid npe when try to get channel from the pool .
updated URL template regex and added tests for valid and invalid host names in BalancedClickhouseDataSource to improve URL parsing accuracy and ensure proper exception
add a system property to disable JSR 199 compiler in FragmentActivator to improve performance by reducing unnecessary compilation processes
added support for null string values in CSVRecordReader and CSVRecordReaderConfig to enable handling of null values in CSV output
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to skip the LiquibaseService implementation
updated the cursor type from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java ` to align with the
update item command and state trigger handler ( # 4358 )
replace ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve clarity
added support for deprecated " zkCredientialsProvider " and " zkCredentialsProvider " cases in SolrXmlConfig and TestSolrXml to
fix mana tablet not be able to display mana properly .
added a method to set the identifier collection in the P25P2DecoderState to ensure that the current call event has the correct identifier collection
removed unused import statements for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter to streamline code by eliminating unnecessary dependencies
updated the string format in the thread pool executor for deriveKeyWithScrypt from an integer to a string to improve clarity and consistency in
updated the GeneratedCode class to improve code structure to enhance maintainability and readability of the generated code
added a null check for the definition variable in TypeDefinitionRegistry . java to ensure that the assertion verifies that the definition is not null to avoid
added visibility control for the share with me icon in LocalFileListAdapter to hide the share with me icon when necessary
updated link references from " http " to " https " in multiple classes to ensure compatibility with the latest API changes
added @ NotNull annotation to RouterFilter parameters and updated method calls in RouterServerListFilter and RouterDistributorTest to ensure headers are not null
enhanced assertion in TestIndexWriterMergePolicy to include additional context about the document count and segment count to improve debugging and provide more context for
mark multiple classes as deprecated to indicate that these classes should no longer be used and may be removed in future versions
added a null check for the context parameter in the CrawlerSessionManagerValve class and updated request expectations in TestCrawlerSessionManagerValve to
added a security check before retrieving JspApplicationContext in JspFactoryImpl . java to ensure that the application context is retrieved only when a security feature is
replace variable ` l ` with ` minL ` and ` maxL ` for clarity and adjust length calculation to improve code readability and
replaced Singleton annotation with SINGLETON scope binding in NonceService and OpenIDAuthenticationProviderModule to simplify dependency management and improve code readability
added a ` thenCompose ` method to update child links in ` FileWrapper . java ` to enhance functionality by allowing child links to be updated
refactor ` doExecute ` method and ` buildRealURL ` method parameters for clarity and consistency to improve code readability and maintainability
increased the delay for the publishWithDelay method from 100 to 500 in RetrievalBlockingMessageStoreTests to improve test reliability by
added a new boolean variable ` mShiftCodesAlwaysOverride ` and modified the logic for setting ` mShiftCodesAlways ` based on its value
[ hotfix ] [ runtime ] do n ' t cache zk leader information in curatorleaderelectionmanager . isleader
removed unnecessary whitespace in the NearbyActivity . java file to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer to check if the identity is a reference identity instead of a named service to improve clarity
updated method signatures in AbstractCommandRunner , ArtifactCacheFactory , LoggingArtifactCacheFactory , and InstanceArtifactCacheFactory to use a boolean instead of
nifi - 2323 : fix test to wait for thread to finish before try to resolve issue with test listen tcp record .
updated the assignment of methodCall ' s arguments in PatchExtensionMethod . java to ensure the original arguments are preserved during method calls
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` in ` RawNativeLibraries
int - 1613 add support for ' apply - sequence ' and ' ignore - send - failures ' attributes to the ' integration - namespace '
removed x509PublishUrl and x509ViewName fields from ClientKeyPublisherMapping and JwkViewResolver classes to streamline code by elimin
updated the handling of readers in QueryComponent to ensure the first reader is used instead of the default one to improve robustness by ensuring the first
replaced the custom ValueSourceParser with a new Double2Parser for maximum and minimum values to enhance functionality by providing a more flexible function
simplified the return statement in the Container class to improve code readability and maintainability
removed unused variables ' n ' and ' minScore ' and ' import statements in Highlighter , SpanGradientFormatter , and TokenSources classes to
server : fix database insert to use uuid instead of string concatenation
added conditional annotation and a qualifier for flowBuilderServices in CasMultifactorAuthenticationWebflowConfiguration . java and CasWebflowContextConfiguration .
added connection limit and refactored table creation and execution logic in WriteJdbcPTest . java to improve database connection management and enhance code read
removed conditional check for the " editor . laf " preference in DefaultPlatform . java to simplify the look and feel setup for better user
updated method calls to use ` stateEntity ` instead of ` getDesiredStateEntity ( ) ` for consistency to improve code clarity and
simplified margin calculations in FloatingTaskView . java to improve readability and maintainability of margin handling logic
added a conditional check for running status in RootFolder . java and updated the status line in NavigationShareTab . java to improve error handling and
do n ' t increment thread id if it do n ' t exist .
ggb - 2203 use default toolbar instead of 0 a the default perspective .
added network address change listener and updated logging messages in HomekitImpl . java to improve logging clarity and ensure proper network address management
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of lease to improve
added ` linkStyle ` to the ` arg ` variable in ` CxxLibraryDescription . java ` to ensure that the ` linkStyle `
added a null check for the exception message before handling " No space left on device " in ExceptionHandlerRegistryFactory . java to avoid potential NullPointerException
changed ` nextID ` variable to be ` volatile ` and modified related methods in ` DirectoryTaxonomyWriter ` to ensure thread safety and improve error
fix intermittent test failure on ci
added HasSourcePath interface and modified AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to implement
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify code and improve readability
added a custom index field name to the facet fields in OrdinalMappingAtomicReader and updated related tests to ensure that the correct number of
updated the ` toEpochMilli ` method in ` Instant ` to handle negative seconds and positive nanoseconds correctly to ensure accurate conversion of time values
updated OGLESShaderRenderer and LwjglRenderer to use ` getAttribute ( ) . name ( ) ` instead of ` getAttribute
added block update functionality for script handling in CopyPaste . java to ensure proper execution of block update scripts when necessary
added a new file TestCMoveLimitType . java with methods for testing ByteBuffer and CharBuffer behavior to facilitate testing of buffer
reset temporal attributes in ChannelState and modify audio packet processing in AudioPacketWaveRecorder and OverflowableTransferQueue to improve code clarity and
camel - 7999 : fix parseexception so it do n ' t swallow array out of bound exception .
updated the vendor name from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor the console creation logic into a separate method and introduce a new method for version printing to improve code readability and maintainability by
refactor token validation logic into a separate method in InputStreamBinder . java and remove it from NextcloudRequest . java to improve code organization and
added an EOFException handling in Http11InputBuffer . java to ensure proper error management by throwing an exception when an eof is encountered
add unit test for groupprovider . deletemember ( ) .
( chore ) camel - core : remove unnecessary array creation
deleted the V2ReplicationProtocol . java file to remove unused protocol implementation to streamline the codebase
replaced ` ImmutableSortedSet < BuildRule > ` with ` ImmutableSortedSet < SourcePath > ` for compile - time classpath dependencies to
added new files ConstructorArgsDemo . java and StrictDemo . java , and renamed StupidFinal . java to FinalDemo . java to
make directtemplatefeaturecollectionfactory thread - safe by use a thread - local list of templatefeatureiterator
update response count assertion in WriteResponseHandler . java to include two * DatabaseDescriptor . getReplicationFactor ( ) to ensure that the response count
added a null check for the getIndexNumber ( ) method in ItemRowAdapter . java to prevent potential NullPointerException when the index number is null
corrected the spelling of " showAnchestors " to " showAncestors " across multiple files to improve code readability and maintain
added a conditional check to return early if the app ' s width is less than 12 to optimize performance by avoiding unnecessary processing when the application
updated change log comparison from ' = = ' to ' . equals ( changeLog ) ' in ChangeLogParameters . java and added a new
changed the access modifier of the loggers map from static to final to ensure the loggers map is immutable after initialization
update return statement in Plot . java to use getBasePlot ( false ) instead of returning the current plot to ensure the method returns the correct base
updated the ` createUploadDir ` method in ` RestServerEndpoint ` to include an additional boolean parameter to control directory creation based on whether the
added a ` sendStatus200 ` boolean parameter to multiple classes for handling HTTP status responses to enable conditional processing of status responses based on the `
added a condition to check if the comment length is greater than zero in the multi - line comment handling to ensure that comments without leading spaces are
added imports and modified file type management logic in BuckModule . java to ensure proper handling of file types and remove associations when they are removed
replaced specific function imports with a wildcard import in ComposedUtil . java to simplify import statements and improve code readability
added an error message to indicate RTM is not supported on the unsupported CPU and refactored related test cases to improve clarity in error
reformatted code for consistency and clarity in AccountsActivityTest . java to improve readability and maintainability of the test code
refactor Player . java to improve code structure to enhance maintainability and readability of the code
added a mockito package import for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate testing of the
do n ' t use ` ` nextElementindex ' ' to ` ` index ' ' in polyglotexceptionimpl . gethoststack (
initialized ` RuntimeEnvironment . systemContext ` to ` null ` in ` AndroidTestEnvironment ` and added reset functionality in ` ShadowFontsContract
added a method to convert a number to milliseconds and modified date calculations in the TimeGranularity and PinotDataSourceMaxTime classes to improve date
refactor control flow handling in ControlFlow . java for better null - checking and analysis to improve robustness and maintainability of the code by
updated assertEquals methods to handle different array sizes and improve error messaging to enhance clarity in assertion failures and provide clearer error messages when arrays
[ 1.19 . x ] fix windowclicklogic . isclickable ( itemstack slotitem ) return false .
corrected the bitwise operation in index calculation in MeshBuilder . java to ensure proper handling of bitwise operations for index values
nifi - 3740 : remove dependency on controllerserviceprovider from standardprocessscheduler
added imports for ResolvedJavacPluginProperties and modified processing logic in KotlincToJarStepFactory . java to enhance processing capabilities
updated RESCROLL _ DELAY constant and modified page snap animation duration in DragController and PagedView to improve scroll responsiveness and
added shortcut permission checks and refresh logic in Launcher and DeepShortcutManager classes to ensure shortcuts are loaded only when the correct host permission is present
added case HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle history search backward functionality
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure robust handling of null core names
added marker selection functionality to the NearbyMapFragment to enhance user interaction by ensuring the map is closed when a marker is selected
added exception handling for Throwable in FileSyncAdapter . java to improve error handling by providing stack trace information
refactor tests in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve test reliability by catching runtime exceptions
refactor FeedQueues to filter feeds based on heavy load settings to improve feed processing efficiency based on application settings
add warn log if defaultdrmsessionmanager be use on wrong thread
updated ` AndroidBinaryDescription ` , ` AndroidBinaryBuilder ` , and ` AndroidBinaryDescriptionTest ` to use ` Locale . US ` for
update XML _ MIME from " text / xml " to " application / xml " in multiple test files to ensure correct content type is used for
updated configuration file references to use INSTANCE . confFile instead of configFile to ensure consistent access to configuration settings across the application
removed " sleep 5 " from the test execution statement in HostPortWaitStrategyTest . java to simplify the test by eliminating unnecessary sleep
updated mathematical functions and variable types from int to long in HiveExpandDistinctAggregatesRule . java to accommodate larger data values
added multiple calls to ` GraphicsEnvironment . isHeadless ( ) ` in ` Toolkit . java ` to ensure proper handling of headless
added a condition to check if the furnace matches the world before executing smelt actions to ensure that smelt actions are only executed on
planner - 220 add ` ` move thread count ' ' to solver log ( # 221 )
add test to ensure search with revinclude do n ' t select wrong resource with same sp name
added a new test file ` Issue582Test . java ` to validate the functionality of the mapdb implementation to ensure that the mapdb
[ native ] add test for decimal overflow and division by zero
refactor LoadingCache class for improved performance to enhance efficiency of loading operations
added a new rule " AvoidNonConstructorMethodsWithClassName " to the naming rules to prevent non - constructor methods from being processed in the naming
danielwagnerhall : catch and return null if the element be stale . fix issue 4490 .
added a method to check if a view exists before creating a snapshot in ViewExistsPrecondition . java to improve error handling for view existence checks
refactor DOMUtil methods for improved readability to enhance maintainability and facilitate future development
added translation calculations using full - screen scale in TaskViewUtils and a new method to log matrix transformations in Utilities to improve UI responsiveness
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and
added a method ` walk ` to the ` TempFSTTermsReader ` class and modified the handling of ` docFreq ` and ` total
added ` SolrQueryRequest ` as a parameter to the ` create ` method across multiple factory classes to support request - specific functionality in the augment
added new trigger statements and modified existing test cases for handling null values in SingleTableMySQLTriggerTest . java to ensure proper handling of null values
refactor comparator handling in FieldValueHitQueue to use a dedicated setComparator method to improve code clarity and maintainability by centralizing comparator
updated string concatenation in ` PhoenixQueryBuilderTest . java ` to use double quotes for SQL queries to ensure compatibility with SQL syntax and
added Spark initialization call to the init method in RequesterTest . java to ensure Spark is properly initialized before use
added methods to manage total storage pool , fee , limit , and used in DynamicPropertiesStore . java to enhance the system ' s ability to
added support for NinjaProperties in AssetsController and AssetsControllerTest to enable file streaming functionality based on the development mode
updated the key retrieval method in MapMarksManager to use a dedicated method to improve code readability and maintainability
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance token handling for default value generation
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to
refactor JxBrowserManager to use a local variable for the file path instead of a local variable to improve code readability and maintainability
updated the ` createImageFile ` method to use ` equals ` for comparison instead of ` = = ` to improve code readability and prevent potential
updated debug log message to use the thing ' s UID instead of the bridge ID to improve clarity and accuracy of log messages for better debugging
( chore ) camel - alberto : disable flaky test on github
replaced deprecated SSL context initialization with system property settings for keystore and server trust manager to enhance flexibility and maintainability of the test configuration
[ multistage ] fix nan gauge in dynatraceexporterv2 ( # 10650 )
added a call to remove a session ID from the session IDToSessionInfo map to ensure the session ID is removed correctly when it is no
added hostname setting in HeartBeatHandler and improved logging format in AlertReceivedListener to ensure alert hostname is set when it is null
refactor the flushing logic in ChannelEndPoint . java to simplify the return statements to improve code readability and maintainability by reducing complexity in
resolve split - packages : move kmodule . xsd to kie - api
added unit tests for seekTo method in ShadowMediaPlayerTest and implemented seekTo method in ShadowMediaPlayer to ensure correct behavior of seekTo
rename ` createTask ` method to ` createThrowingTask ` across multiple classes to improve clarity and consistency in method naming
added a condition to set the border for the tab close button if IS _ AQUA _ LAF to improve the visual appearance of
tsp : add timeout and request method to tsptimestampservice for post request .
[ drools - 7 ] allow wildcard type in xstreamutils . createxstream ( )
updated diamond handling logic in Attr . java and added a new DiamondRaw . java file in Neg12 . java to
[ calcite - 1181 ] add test for reloptutil . gettargettype ( ) ( jesus camacho ro
updated argument requirements for id and value in Http2Settings . java to ensure both id and value are valid unsigned values to prevent runtime errors
deleted the file Issue664Test . java to the test file is no longer needed for the project
added exception handling for session insertion in SessionsPoolTest to ensure proper session management and avoid potential IllegalStateExceptions when creating sessions from a pool
[ geos - 8470 ] fix geowmsbuilder to use root object instead of root object for featurecollection
updated the method for setting the selected index in PopupMenuButton to ensure consistent handling of the selected index using integer conversion
added a check for manual unstashing in TaskbarStashController to ensure that unstashing is only performed when the user can manage
camel - 17850 : camel - core - optimize route coverage check . thanks to stephan siano for the patch .
modified the ` getEventMismatchMessage ` method to accept a boolean parameter and modified its logic to conditionally wait for expected events to enhance event mismatch
added a new file ` HeaderFixer . java ` to fix Java headers in the application to ensure that the " Licence " header
added functionality to send a broadcast when the first loading completes in the Launcher class to ensure proper permission handling when the first loading completes
deleted the ` SuperJumperAndroid . java ` file to the class was deemed unnecessary for the current project
modify return statement in SystemTableScan . java to check if the table is distributed instead of always true to ensure correct behavior of the system table
added interfaces ` KeyValuesProviderAware ` and ` ObservationConventionAware ` to the ` Observation ` class to allow configuration of key -
remove remapped item from missingblock and missitem in persistentregistrymanager . processidrematches ( ) . close # 2373
updated return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast the variable ` i ` to a long to ensure correct
added caching functionality for the last formatted date format in HSSFCellStyle . java to improve performance by reducing redundant retrieval of formatted date
updated the query in RemoteAuthenticationEndpointTests to include a filter for user names to ensure that only matching usernames are processed in the response
updated the condition in DeflateCompressor from checking if the def is finished to checking if it needs input to ensure proper handling of the
updated logging of launcher all apps exit to include container information and workspace to improve clarity of log messages for better debugging and tracking
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to the test class is no longer needed for the current project
added null check for newInput and improved debug logging in BugContentProvider , BugGroup , and DeltaInfo classes to enhance error handling and
added a menu item to reopen URLs in the browser to improve user experience by allowing users to open URLs dynamically
added a new error message for SPECIFIED _ MULTIPLE _ TIMES in ErrorMsg . java and updated SemanticAnalyzer . java to check for
updated the ` addEntryListener ` method calls in ` BasicTest . java ` to use a ` EqualPredicate ` instead of a ` String
fix coordinatearray . reverse ( coordinate [ ] pts ) for empty or single element coordinate .
updated setOpen method call formatting in ToolbarPanel . java to improve code readability and maintain consistent formatting
added a new variable ` first ` to ` TestPayloads ` and initialized it to ` false ` to facilitate the handling of
replaced the conditional check for overview mode with a method call to showOverviewMode to simplify the overview mode handling logic
added a line to set the destination of the message dispatch to the correct message destination to ensure the message dispatch reflects the correct destination
int - 1900 fix messagehandlerinterceptordefinition . min _ value ( ) to max _ value ( )
amd64floatconvertnode : fix checkstyle issue in test code
refactor HttpClientRequestImpl and HttpTest to simplify buffer addition logic and improve readability to enhance code clarity and maintainability by reducing
updated the artifact replacement logic in GetMavenDependenciesTask . java to conditionally replace " analysis - " with " ( ? < ! solr
pdfbox - 2576 : avoid classcastexception find via oss - fuzz
removed unnecessary print statement in ReferenceUtil . java to simplify code and improve readability
refactor visiblefieldpredicate to use visiblefieldpredicateenvironment instead of predicate to make it easy to determine if a field be visible based on the
added new parameters and constants for JSON RPC port configuration in CommonParameter and Args classes to enable dynamic port configuration for the JSON RPC server based on
added a type check for ` folder ` before removing it as a drop target to avoid potential ` ClassCastException ` during the drop target removal process
refactor the stub jar generation logic into a separate method and add a new method for creating the stub jar to improve code readability and maintain
added new features " Setup wizard " , " Probe Module " , and " Workflow helper " to the GettingStartedTab and StartPageTopComponent
schedule meter flusher at fixed delay to avoid race condition . patch by jbellis
simplified the null check for available boolean in OnlineTestCase . java to improve code readability and maintainability
changed the return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all user attributes are returned for
refactor onIdleTimeout handling in HttpChannelState . java and add failure listener in HttpChannelTest . java to improve code clarity and
changed the CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to allow for non - blocking functionality in the endpoint
added support for handling one - column table headers and body in the TableBlockParser to enhance the flexibility of table rendering by allowing more flex
change the return value from 32.0 f to 31.5 f in Camera . java to improve the accuracy of camera rotation values
added a preference for the " startonbootup " setting in GpsSettingsActivity and updated relevant references in Utilities and GeneralLocationListener to
increased the client secret size from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to accommodate larger client secrets
updated error message in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include ' true ' for null parameters to ensure that the test correctly verifies
added JUnit Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race conditions
refactor InputAndOutputPinotFS and OutputPinotFS methods to throw exceptions and initialize PinotFS properly to improve error handling and
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is used based on the user ' s
added MetalLookAndFeel to UIManager in bug8032878 . java to enhance the user interface with a metal look
added synchronization and exception handling to the ping task management in the Bot class to ensure thread safety and prevent potential memory leaks during message sending and
updated error handling in GlobalErrorHandler to directly use the throwable object instead of its message to simplify error reporting by removing unnecessary message retrieval
renamed parameters from " module " to " from " in ModuleTable , PackageTable , and ModulesHelperVM classes to improve clarity and
updated exception handling in PinotAdministrator to catch CmdLineException to improve error logging and handle specific command - line exceptions more effectively
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added a deprecated ` hashCode ( ) ` method
refactor boolean declarations and method signatures in CustomPlaybackOverlayFragment . java for clarity and consistency to improve readability and maintainability of the
updated zoom level settings for mapView and mvp in BasicMapViewer . java to ensure proper minimum and maximum zoom levels for improved user
refactor DrillRoot to use process user and group names from ImpersonationUtil instead of separate admin users and groups to improve clarity
8274560 : ( f ) filesystemprovider . checkPermission ( permission ) should not call accesscontroller . checkpermission ( permission )
added ArgumentExtractor support to DelegatedClientAuthenticationAction and related classes to enhance service resolution flexibility by allowing custom argument extraction
made the ` defaultGroup ` variable final in ` NacosServerRegisterRepository . java ` to ensure immutability of the `
tilesizechanger : use android util method to clear the tile cache
removed redundant calls to ` InfoLayoutHelper . addInfoRow ` and ` InfoLayoutHelper . removeAllViews ` in ` CustomPlaybackOverlayFragment
refactor ` cleanEntriesForFeedsWithoutSubscriptions ` to ` cleanFeedsWithoutSubscriptions ` and introduce a new method ` cleanEntries
replaced instances of ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` variable in ` ImmutableAssertionTests . java ` to
nifi - 3740 this close # 3745 . use temporaryfolder instead of fileutils for test .
improve conic five point computation by use the result of lincomb ( )
reformatted conditional statements in RandomAccessReader . java for consistency to improve code readability and maintainability
added @ SuppressWarnings ( " unchecked " , " vararg " ) annotations to Fields and MockitoBeforeTestNGMethod classes to suppress unchecked warnings
added image array handling and refactored image creation logic in CImage . java and CPlatformWindow . java to improve image processing efficiency and
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to simplify the import
rename ` runtimevisiblemethodoffieldannotations ` to ` runtimevisiblefieldormethodannotations ` in ` ClassParser ` and ` JavaClass ` to
replaced manual null checks with ` Objects . equals ` for null comparison across multiple classes to improve code readability and reduce potential null pointer exceptions
refactor class resolution methods to use ` resolveClassFromBinaryName ` instead of ` resolveClassFromCanonicalName ` to improve clarity and
added assertions to verify the retrieval of default HTML properties in NinjaDefaultTest to ensure that the default HTML properties are correctly retrieved for different view
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related cell size calculations to improve clarity
updated padding calculation in DetailFragment and modified listViewPositionOffset in ListFragment to improve layout consistency and align with new design specifications
updated catch blocks for KeeperException and InterruptedException in ZkStateReader . java to improve error handling and ensure thread interruption is properly
added null checks for field values in HttpFields . java and a new test for empty headers in RequestTest . java to ensure proper handling of
server : check if the staticnat service be support in the specified network ( # 4357 )
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added a method to remove extra empty screen in the workspace to improve user experience by preventing unnecessary space in the workspace
added handling for fixed width glyphs in BitmapFont . java to improve font positioning based on whether the font is fixed or not
removed the showTitle parameter from the ChangeLogFragment ' s createFragment method and refactored related code to simplify the fragment creation process and
added preEvent , preTransition , and postTransition methods to AbstractStateMachineFactory to enhance state machine interceptor functionality
refactor ConfigDescriptionProvider to improve code structure to enhance maintainability and readability of the configuration handling logic
updated role creation to include an owner role and improved Hive configuration handling to enhance role management and ensure compatibility with Windows - specific configurations
added a boolean flag for sorting by count in FacetComponent . java and updated query in TestDistributedSearch . java to improve code readability
updated the checkstyle cache file path to use the build directory instead of a hardcoded target path to improve flexibility and maintainability of the
added logic to check if a jetty is stopped and updated the failure message in DeleteInactiveReplicaTest . java to improve handling of jetty
added a file name parameter to the FileActionsDialogFragment constructor and updated its usage in OCFileListFragment to allow users to specify a filename
updated reorder direction handling in CellLayout to support external mode to enhance flexibility in reordering behavior for better user experience
updated account API path annotations and added new fields for currency , from , and to in InnerTransferRequest . java and AccountAPI . java to
fix sink stress test by wait for job execution id to be available before proceed .
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package
replaced specific imports with a wildcard import and added new visitIdentifier methods for handling identifiers to simplify import statements and ensure proper handling of identifiers in
added a method to set the action text color in AuthenticatorActivity to ensure the action text is consistent with the primary dark theme
added a new method ` find ( ComparableField < , ? extends Comparable < ? > , FK > , ... ) ` to ` Manager
renamed methods and variables in the Runner class for clarity to improve code readability and maintainability by using more descriptive names
corrected a typo in the test method names from " invalid " to " valid " in multiple test files to improve code clarity and
added a method to cancel clients and updated the startDriver method signature in SparkClientImpl . java to enhance client management and improve error handling during
added ` getImplicitPreCoercionValue ( ) ` method to ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller
initialized ` lastDisplayedUser ` to ` Optional . empty ( ) ` in ` FileDisplayActivity . java ` to avoid potential ` NullPointerException
added a new method ` findAll ( OrderSpecifier < ? > ) ` to ` QueryDslMongoRepository ` and a corresponding test in `
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions when stopping the consensus implementation
planner - 323 exit the warm - up loop in case of a failure .
feature - add xread ( ) and xreadgroup ( ) method to pipeline for redis stream support
updated ` LinkedBufferInput ` and ` StreamInput ` classes to remove unnecessary calls to ` incrReadByteCount ` to streamline the read
added WebSecurity configuration to CasWebSecurityConfiguration and updated related methods in CasWebSecurityConfigurerAdapter to enhance security configuration flexibility and improve
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStoreNoDoAs
added methods to register and create content providers in ShadowContentResolver and ContentProviderController to enhance testing capabilities for content provider registration in the application
updated the type of the ` Version ` parameter in the ` AttributeReader ` constructor from ` Version ` to ` ClassFile . Version ` to ensure
added a method to set keep - alive configuration in SingleConnectionManager to improve connection management by allowing keep - alive settings based on configuration
[ java ] use supplier for flow control in medium driver to avoid npe .
ticket # 269 : do n ' t allow locus with no point in 2D
added error handling and improved WebSocket connection management to enhance robustness and prevent potential IO exceptions during reading and closing WebSocket connections
updated WebDriver initialization to support different driver types and added screenshot handling in HttpWebClient to enhance flexibility in selecting the Selenium driver and improve
replace assertEquals with assertThat in multiple test classes to improve readability and maintainability of assertions
remove deprecate ` ` contextreference . getcontextreference ( ) ' ' in favor of ` ` contextreference . create ( ) ' '
modified exception handling in StubberImpl and added new test classes for bad throwables and uninstantiable exceptions to improve error management and ensure correct
updated error messages for non - ascendant and non - descendant actors in Actor . java and Group . java to improve clarity and ensure
added location permission handling in LocationPickerActivity and modified ContributionController to call onLocationPermissionGranted instead of onLocationPermissionDenied to improve user
http : / / issues . apache . org / jira / browse / amq - 4568 - add example of how to use
added import for CookieSpecs and set the request configuration to standardize cookie settings for HTTP requests
simplified the overlap check in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and removed logging in AirspyT
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel classes to enable users to browse the monitoring web XML file instead
added a new configuration option for service creation timeout in KubernetesConfigOptions . java to provide a standardized timeout value for service creation
updated icon resource assignment in NearbyListFragment to use a switch statement for place descriptions to improve readability and maintainability of the code
added a null check for the package object before processing classes in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions when accessing the package
added a new file PrintInlining . java containing a main method that prints " Passed " to provide a main method that prints "
fix : fix issue with nested brace in javadoc tag ( # 1899 )
[ java ] remove unused field in archivetest . testarchive with no message .
updated the EdgeDataTableModel to use ` getEdgesAndMetaEdges ( ) ` instead of ` getEdges ( ) ` for better edge retrieval
removed unnecessary imports from SpringResourceProperties and PasswordManagementConfiguration classes to streamline code and improve readability by eliminating unused dependencies
updated logging statements in VideoManager to use float instead of integer for playback speed to improve logging accuracy and clarity for better debugging
added cluster task when a room be remove from the cache . jm - 495
updated the minimum number of replicas from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to accommodate new resource allocation requirements
added key settings for texture rendering in TextureHelper . java to improve texture rendering accuracy and performance
updated PythonDslProjectBuildFileParser and related classes to use EventReportingProjectBuildFileParser instead of PythonProjectBuildFileParser to improve
[ j2kt ] add normalization pass to j2kt library .
updated method calls from ` nextResponseBodyConverter ` to ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverter
[ hotfix ] [ runtime ] fix checkstyle violation in memorymanager
added @ Temporal annotation to ConsoleSessionVO to specify the timestamp type for better data handling
added two new files Hbs . java and HbsTest . java to implement a Handlebars template engine to facilitate the compilation
update visibility logic for HintMessage and IncomingMessage in ChatMessageAdapter . java to improve user interface responsiveness by handling empty messages gracefully
changed iteration from keySet ( ) to values ( ) in ImportCsv . java to ensure all measurement values are processed in the correct order
add test that wait for the confirmation dialog to be open . fix # 183
added a conditional check for distinct column indices in ReduceSinkDeDuplication . java to prevent processing when the number of distinct column indices is
updated MiscUtils . java to improve handling of file paths and added a new addToList method to enhance clarity and functionality of file processing
regenerate client with updated copyright year ( # 4382 )
updated Jetty WebSocket dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - server " and "
fix SAMLAuthenticatedUser to return an unmodifiable map instead of a modifiable map to enhance immutability and prevent unintended modifications to the
update sketch code modification logic to ensure it only updates when the saved program changes to improve code efficiency by avoiding unnecessary updates to the header
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return values in multiple classes to simplify
replaced the method call from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to retrieve
updated context class check in HtmlJndiTreeReport . java to include " javax . naming . Context " as a valid class name to ensure
added a switch statement to create a default database options and updated the logger format to improve database configuration handling and enhance logging clarity for block generation
changed the edge type check from " double " to " mutual " in ImporterGEXF . java to correctly handle the " mut
updated the FLAG _ SLIPPERY constant in StatusBarTouchController . java to use FLAG _ SLIPPERY instead of
fix truffleconstantfieldprovider . getarraydimension to handle array type correctly .
added functionality to retrieve and set the Google Drive folder path in PreferenceHelper and related classes to enhance user experience by allowing users to specify a
ggb - 2118 shuffle suggestion on keydown , up - arrow , down - arrow in algebra view
added @ Nullable annotations to multiple assertThat ( ) methods in Truth . java to improve null safety and clarify that certain assertions are
update bitwise operations in ArrayUtil to correctly handle the case of a new size case to ensure correct handling of different array sizes for accurate data processing
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check if a constructor can be instrumented to ensure that
add streaminmanager . waitingforanticompaction . put ( ) and streaminmanager . waitingforanticompaction . remove
added support for keyguard secure functionality in ShadowKeyguardManager and its corresponding test in ShadowKeyguardManagerTest to enable testing of keyguard
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization
updated the status processing to replace ' > ' with ' > ' and added a condition to check for overrideParts length to ensure proper handling of
corrected a typo in the method name from " assertEmptyThrowsMutipleFailureExceptionForManyThrowables " to " assertEmptyThrowsMultiple
modified the logic for checking draining in AsyncFileImpl and added a test for draining not called after closing to ensure that draining is
updated light intensity values and modified shader resource paths in HybridLightTest . java to enhance lighting functionality and improve resource management
updated filesystem initialization in integration test classes to use the workspace ' s project filesystem to streamline filesystem management and improve code maintainability
changed the type of ` loadRerunFile ` from ` String ` to ` PathWithLines ` across multiple files to improve type safety and
updated Gson , JsonArray , and JsonObject classes to improve code consistency and maintainability
removed the @ NotNull annotation from TEST _ DIRS in PubRoot . java to simplify the array declaration for better readability and maintainability
added a call to close ( ) on the real object in ShadowParcelFileDescriptor to ensure proper resource management and prevent memory leaks
added thread - local support for managing prefix indices in ` BasisLibrary ` to improve thread safety and ensure consistent prefix index management
added logging for HttpConnection in TestDistributedStatsComponentCardinality . java to facilitate debugging by providing more detailed HTTP connection information
added two calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that the list is immutable to prevent potential
added nullability annotation to the onApplicationEvent method and modified the ManagedChannelBuilder to use a URI to improve code robustness and ensure a
updated package structure and refactored code to use a Supplier for the work directory and command registry to improve code readability and maintainability by
make function array invalidate when insight return a script .
added handling for Windows - specific file endings in GenerateManifestStep . java to ensure proper XML encoding for Windows environments
change priority from LOW _ PRIORITY to HIGH _ PRIORITY and add a new RFE3531161 class with a test for redundant nullcheck
add nullability annotation to method parameters and check for null configuration descriptions to improve code robustness and prevent potential NullPointerExceptions
fix masterjobcontext . createcancellationexception ( ) to return runtimeexception instead of throwable
pdfbox - 4892 : initialize stream if the page do n ' t have a crop box
rename ManagerBase class to improve clarity to enhance code readability and maintainability
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR in FeatureFlags . java to enable access to All Ap
replaced the initialization of FragmentActivity with a Robolectric activity controller to simplify the activity management and improve test reliability
renamed the method from ` getFileCoordinates ` to ` processFileCoordinates ` and added a method to retrieve decimal coordinates to improve clarity and
rename class ABCase * to TestABCase * in multiple files to improve clarity and consistency in naming conventions
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added null check in Manager to improve code
added a new ` RocketChangedEventHandler ` to handle simulations when the current rocket changes to ensure that changes to the current rocket
added a new file ChangeDependencyGroupIdAndArtifactId . java to change Maven dependency groupId and artifactId to provide a functionality for changing groupId and artifactId
refactor file system and path initialization in IndexingJob . java and add validation in SegmentChecker . java to improve code clarity and ensure
updated condition from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` and added
refactor PreprocessorDelegate to use Supplier for ImmutableMap < Path , Path > and ImmutableMultimap < String , SourcePath > for better error handling
rename JsonExamples class to Examples and update package - info to improve clarity and organization of code related to JSON handling
added debug logging statements in ViewExtractor . java for better traceability to improve debugging capabilities and facilitate easier troubleshooting
refactor FindsByLinkText class to improve code readability to enhance maintainability and facilitate future updates
added a new Main class with a main method that prints the oop entry point to facilitate the execution of the Java oop
fix potential deadlock in sip account registration wizard .
removed redundant lines in NativeScanner . java to improve code readability and maintainability
changed package name from ` net . pms . test ` to ` net . pms . configuration ` in RendererConfigurationTest . java to
replaced the use of ` ImmutableSet ` with ` Supplier < ImmutableList < BuildRule > > ` for queried and exported dependencies to improve performance and
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added content encoding handling in ExtractingDocumentLoader to ensure proper content encoding is added for document extraction
updated SQL statements to use ` stmt . setLong ( 1 , ... ) ` and ` stmt . setString ( 1 , ... ) ` for
added a check to return early if the slot is - 1 in WindowListener . java to improve performance by avoiding unnecessary processing when a valid
added a new option to ignore transitive repositories in DefaultMavenExecutionRequest and related classes to allow Maven to ignore remote repositories introduced by transitive dependencies
updated the injection annotation for BackgroundJobManager in ContactsPreferenceActivity . java to ensure proper dependency injection for better code maintainability
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android versions and improve user experience
added null check before closing the selection in NIOTransport . java to prevent potential NullPointerException when closing the selection
added a condition to skip processing if the length of the string matches the matcher before proceeding to optimize performance by avoiding unnecessary processing when the
set the server port to 0 in the integration test
added a new " reverse " UDF to retrieve the reverse value from a string to facilitate the retrieval of the reverse value in a
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` in ` Dispatcher . java ` and ` Request . java
updated Tracer class implementation to improve performance and maintainability of the Tracer class
[ hotfix ] ignore flaky rocksdbstatebackendreaderskeyedstateitcase
replaced multiple specific imports with a wildcard import in XMLChangeLogParserTest . java to simplify import statements and improve code readability
added synchronization and a clear method to the StarTreeRecordStoreCircularBufferImpl class to ensure thread safety during buffer operations
updated the forecast settings for minutes , hours , and days in OpenWeatherMapOneCallHandler . java to improve the accuracy of forecast data
add timeout to abstractpageoperationtemplatetest and add previousfetchtime to abstractpageoperationtemplatetest
added logging and improved handling of remote target handles in RemoteTargetGluer . java , and enhanced content animation in FloatingHeaderView .
updated ` parseRerunFile ` method to return a ` Stream < Collection < FeatureWithLines > > ` instead of a ` Collection <
add multiple botania creative tab items for the livingwood , livingrock , and quartz chiseled (
updated assertions in TestRadioButtons to use ` assertEquals ( ) ` instead of ` assertEquals ( ) ` for clarity to improve read
added file size functionality and updated column size handling in RCFileCat . java and RCFile . java to enhance user experience by providing detailed file
refactor multiple Java classes for improved clarity and structure to enhance maintainability and readability of the codebase
added multiple checkNDArray calls in JnaUtils . java to validate MXNet NDArrays to ensure that only valid MXNet NDArrays are
[ hotfix ] fix checkstyle violation in blobserver
[ java ] unusedprivatemethod false positive with static private call from initializer .
refactor variable declarations and assertions for clarity in LexicalContext . java and Global . java to improve code readability and ensure that lex
camel - 14850 : camel - sftp - add auto - startup test to verify that the sftp adapter can be start
added getter methods for level and root in Node , Quadtree , and AbstractNode classes , and updated constructors in STRtree and STRtreeTest
updated version parsing logic to handle minor version number correctly to ensure accurate extraction of version components and improve code reliability
do n ' t persist tag if there be no managedmetadataprovider available
added methods to parse date strings to epoch milliseconds in DateTimePatternHandler and implemented a new fromDateTime method in DateTimeFunctions to enhance date handling capabilities
hhh - 17100 fix nullpointerexception in distributedusertype # setparameter
refactor Log4j2ConfiguratorServlet for improved logging functionality to enhance performance and maintainability of the log configuration process
replace instantiation of HiveException and AuthorizationException with return statements to simplify exception handling by eliminating unnecessary initialization
updated CC assignment in CGoCompileStep . java and added a new test in GoBinaryIntegrationTest . java to ensure CC is correctly formatted
fix : add builder annotation to customresource to make it editable
removed the @ Override annotation in mmm Only . java and ppp Only . java to ensure proper method overriding and improve code readability
added a timeout for three hours in HttpClientFactory to ensure proper handling of connection timeouts
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
simonstewart : add the ability to enable / disable trace in the selenium server .
added @ Singleton annotation to ApplicationController to ensure the singleton instance is used for multiple instances of ApplicationController
updated username retrieval logic in ShareActivity to handle OwnCloudAccount to ensure the correct username is retrieved based on the user ' s display name
added BatchStatus import and a test for job resume functionality in SimpleJobLauncherTests to ensure proper job execution status management in the job launcher
added null check for cacheConfig before generating the value in HttpSyncDataService . java and modified data refresh handling in DataRefreshFactory . java
kristianrosenvold : fix ` ` no docker session find ' ' error
replace usage of ` isQualifiedName ` with a constant ` DEFAULT _ PACKAGE ` in ` CompilationUnitContext . java ` to improve code readability
pdfbox - 4892 : use nonsequentialpdfparser instead of pdfparser , a suggest by valerybokov
mahout - 1343 fix testdistributedlanczossolvercli . testdistributedlanczossolverjdk
refactor HttpServerTestBase to improve test structure to enhance maintainability and readability of the test code
updated test cases in PortletApplicationMapTest to use keySet instead of entries to improve readability and maintainability of the test code
add test to verify that @ dynamodbignorenulls be ignore for a list < abstractbean > in bean table schema . ( #
added RedissonAutoConfigurationCustomizer interface and implemented it in RedissonAutoConfiguration . java to enable customization of Redisson configuration in the
fix indicator . todouble ( ) bug ( # 183 )
added methods to execute commands with user and output charset in ` ContainerState ` and ` ExecInContainerPattern ` classes to enhance command execution capabilities
improve nettywebsocket support for byte and text listener
added test cases for attribute conjunction and negated attributes in SemgrexTest . java to ensure correct handling of semantic graph attributes in semantic graph
added a broadcast intent to CLEAR _ PULL _ UNREAD in HomeFragment . java to facilitate the clearing of pull
removed conditional logic for pre - gingerbread and over - gingerbread in TouchImageView . java to simplify code for better
flush defaultprofilevalidationsupport after each test so that it do n ' t leak resource
camel - 17850 : camel - core - optimize to avoid call stop ( ) if the veto start exception be throw .
added FloatingActionButton components and their functionality to manage and open the FAB menu to enhance user experience by providing access to the main FA
added inline formatting support in ToDateTokenizer and updated related tests in TestFunctions to enhance date parsing functionality and improve test coverage for inline date formats
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading
updated error messages and resource files to use " toppniv " instead of " tecken " to improve clarity and consistency in the
added server check functionality in AuthenticatorActivity to ensure the server is checked before binding the operations service to improve user experience by preventing unauthorized access
updated Position constructor calls to use node . getBeginLine ( ) and node . getEndLine ( ) instead of node . getBeginColumn ( ) and
added ` waitFor ( ) ` method to ` ManagedThread ` and implemented error handling in ` CxxPreprocessAndCompileStep ` to ensure
added a boolean flag ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented a new method in ` CoreAuthenticationUtils ` to
improve max - size check when load map ( # 1741 )
added support for enabling SSL protocols in the SSL context configuration to enhance security by allowing customizable SSL protocols in the server configuration
replaced ` AtomicBoolean ` with ` AtomicReference ` in ` SetOnce . java ` to utilize a more efficient ` AtomicReference `
updated the method to return the field name from the superclass if the property is null to ensure accurate retrieval of the field name when no path expression
updated round rectangle border assertions in RoundRectBorderTest . java to improve clarity and correctness of border equality checks
added a check for empty genesis configuration and improved test parameters for BFT acceptance tests to ensure proper handling of empty cluster states and enhance test
remove unnecessary test for selenide ' s parallel driver
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' array
change conditional check from " if ( windows ) " to " if ( ! windows ) " in ProcessInformationsPanel . java to ensure the
added a private static method ` empty ( ) ` and refactored methods for greatest and least in ` MoreCollectors . java `
added null checks and imports in BitmexStreamingExchange , BitmexStreamingMarketDataService , and BitmexStreamingService classes
added validation for lat and lon in GeoPointField to ensure that only valid coordinates are processed to prevent runtime errors
renamed methods and variables related to workflow file creation and saving in OozieProxyImpersonator and WorkflowFilesService to improve clarity
refactor ResponderId class to improve code organization to enhance maintainability and readability of the code
updated ` getTableDocument ` method to include a ` withDependents ` parameter to control the behavior of dependent tables based on whether or not to
added a check for consecutive uploads without coordinates in UploadActivity and defined a constant in UploadPresenter to track the number of consecutive uploads that are without
added caching functionality to manage profile data in ProfileResources . java to improve performance by reducing redundant serialization of profile data
refactor JpaMetamodelEntityInformation to improve property value handling and identifier derivation logic to enhance code clarity and maintainability while ensuring
added tests for index and table timestamps in UpgradeIT . java and updated method names in ConnectionQueryServicesImpl . java to improve test coverage and
add support for default exception mapper in jersey configuration ( # 3550 )
added a false parameter to the constructor of EntryEditor to specify that the storeFieldAction should not be used in the constructor
updated the parameters of ` nativeCreateNSWindow ` and ` nativeWindowPtr ` to include an ` ownerPtr ` variable to enhance window creation
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME in FileContentProvider . java to ensure the correct table name
added a new ` STOCK ` skin and modified the ` set ` method in the ` Tile ` class to handle the ` Stock
fixed - readasync and writeasync method do n ' t pass codec parameter to rbuckets . get ( ) method .
add detector to detect unrelated type in generic container
refactor back animation handling in LauncherBackAnimationController to utilize BackProgressAnimator to improve code clarity and maintainability by encapsulating
changed the access modifier of ` _ initialPageNo ` from final to non - final and added logic to calculate content limits based on page number
fix crc16 calculation , increase benchmark time ( # 1193 )
added comment handling in FormattedSqlChangeLogParser and corresponding test cases to enhance change log parsing functionality to include comments
removed initialization of the JarArchiver variable in MavenArchiver and added a jarArchiver import in AbstractJarMojo to streamline the
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing clearer context
removed unnecessary condition checks in TSServiceImpl . java and added multiAggregationTest ( ) method in DaemonTest . java to simplify the code logic
added validation for pixel format and type in GwtGL20 . java to ensure only UNSIGNED _ BYTE and RGBA are supported to prevent runtime
added a new test method ` testDebugInfo ` and modified methods in ` OutputMemoryTest ` , ` PrintR ` , and ` Var
added error handling for UnmodifiableClassException and improved exception management in InlineBytecodeGenerator . java to enhance robustness by providing clearer
[ gr - 21212 ] add option to trace class initialization trace .
updated parameter name from ` queryLevelTimeoutMs ` to ` queryTimeoutMs ` in ` BaseBrokerRequestHandler . java ` to improve clarity
replaced Google Commons cache imports with Caffeine cache imports in TopicRouteService . java to utilize Caffeine for
mbtiles : make data source read - only by default
updated the INVALID _ SOURCE _ TARGET _ RELEASE regex and added a new fatal error message in FailureLogAnalyzerTest to improve error handling for
updated the URI construction in DetailFragment . java to include a location intent check and improved string concatenation to enhance location functionality and ensure proper URI
added a null check for the ` getInheritedParameterContexts ( ) ` method in ` StandardParameterContextDAO . java ` to avoid potential
refactor ClassLoader methods for improved readability to enhance maintainability and facilitate future updates
added origin response header handling in ProxyRequestHelper and corresponding test in ProxyRequestHelperTests to ensure that the context correctly sets the origin response headers
removed the instantiation of ProfileSettingDrawerItem in GpsMainActivity . java to streamline the activity ' s profile setting drawer functionality
added support for the ` ` org . apache . jasper . xml _ validation ' ' configuration attribute in multiple classes to enhance XML validation
simonstewart : fix the firefox driver to work with the expected string .
added maxRows support and updated fetch size handling in IoTDBStatement . java to ensure fetch size does not exceed the maximum number of rows and
use stream . allmatch ( check _ retain _ size ) in sqlstreamterminator for optimization
added mouse event handling for node and mouse click events in StandardVizEventManager . java to enhance user interaction responsiveness based on selection
[ java ] do n ' t use integer . valueof ( ) in manytooneringbuffer . setmemory ( ) because it
[ drools - 7 ] expose xorgroup in terminalnodememory instead of use this
removed height and width getter methods from LCDUIImageMonochromeBitmapSource to streamline image handling by eliminating unnecessary methods
refactor path retrieval logic in SourcePathResolver to use a dedicated method for absolute paths to improve code readability and maintainability by reducing
fix xmlparser to correctly encode and parse identifier in dstu2 ( # 5352 )
changed the access modifier of the ` changeSchemeIfIsWebSocketUpgrade ` method and added a test for encoded URLs in ` WebsocketRoutingFilter
renamed test suites to their execution configurations in LLVMPaths . java and updated test class names in TestGCCSuiteCompile . java to
added a private method ` getCxxPlatform ` to retrieve CxxPlatform based on ` HaskellBinaryDescriptionArg ` to improve code read
added imports for ` org . apache . lucene . document . Field ` , ` org . apache . lucene . search . Hits
modified ConcurrentLinkedStack to handle null values and added new test cases for peek , pop , and iterator functionality to improve robustness of the stack
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added null check for mDirectories before initializing mDirs array to avoid potential NullPointerException when mDirectories is null
updated condition in RecentsView to check for non - overview state before proceeding to improve user experience by preventing unintended gesture
added package - info . java files for various Apache Lucene packages to provide package - level documentation and organization for better project organization
added a text to the visibleAutoLeveler component to provide user feedback on the visibility of the autoleveler panel
added functionality to call post optimize callbacks in DirectUpdateHandler and DirectUpdateHandler2 classes to enhance event handling for optimize operations in Solr
updated the Inflater and Deflater instantiation to include a boolean parameter and set a dummy byte to 0 to ensure proper handling of compressed
removed the check for user data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to check if the base is a local meta store in the retry logic to ensure that retries are only attempted for local meta stores
updated import statements and added checks for TimeoutException and ConnectionClosedException in HeliosSoloLogService . java to improve error handling and prevent
refactor methods in Subject class to improve code readability and maintainability
fix memory leak in abstractserializationservice [ hz - 2362 ] ( # 24975 )
update colorDistance calculation to use absolute values and add a new test for the findSimilarColor method in TestHSSFPalette to ensure color
doc ( regen ) : regenerate with update license year ( # 4382 )
alexeibarantsev : adding test for find element by numeric id . fix issue in android ' s xpath library .
added flags parameter to ShadowApplication and ShadowContextImpl classes and updated registerReceiver methods to include flags in ShadowInstrumentation to enhance receiver registration capabilities
updated the mocking behavior of the FFmpeg version method in FFmpegTest . java to improve test reliability by ensuring the correct resource is
modified Ogg and OpenALMusic classes to handle input streams and manage previous input streams to improve resource management and prevent potential memory leaks
replaced hardcoded failure message with a constant to improve maintainability and readability of failure messages
[ te ] fix migration of anomaly failure and warning ( # 4325 )
refactor Toast handling in BaseActivity and DetailActivity to use a dedicated showToast method to improve code readability and maintainability by
updated the method call to use the correct HTTP method and request template to ensure the request is created with the correct HTTP method and request template for
added name validation and improved referral handling in LDAPCertStore . java to enhance error handling and ensure valid names are processed correctly
refactor the retain logic for RSockets in GatewayRSocket . java to use a separate retain method to improve code readability and maintain
rename ` AdapterViewTest ` to ` ListViewTest ` and add a test for item click behavior to improve test clarity and ensure that
[ hotfix ] [ test ] use miniclusterwithclientresource in checkpointfailuremanageritcase
remove genericitemuiprovider since it be n ' t use
added a private variable ` selectedObject ` and modified the ` setSelected ` method in ` SIPCommSelectorBox . java ` to improve handling
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to enable parallel testing of the FileSystemPool method
added a line to set the server connector ' s host address to HTTP _ INFO . bindAddress to ensure the server connects to the correct address
updated token validity and refresh token validity settings based on heart mode and grant types in DynamicClientRegistrationEndpoint . java to improve token management flex
added a new ` CloverInstrumentationFilter ` class and modified conditional checks in ` SplitLogCounters . java ` to exclude synthetic fields from
added a new Smartmi Evaporative Humidifier configuration in MiIoDevices . java and updated ReadmeHelper . java
minecraftforge / fml : fix plausible break not work properly .
changed the access modifier of the ` setScrollRangeDelta ` method from package - private to public to allow access to the method from other classes
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that Ambari may not manage
modified the return statement in IntHashSet to include an additional check for missing values to improve the correctness of the containsMissingValue logic
added Serializable interface to RuleAdministrator implementation to enable serialization for RuleAdministrator instances
added support for wildcard allowed origins and their patterns in the CrossOriginFilter class to enhance flexibility in handling different allowed origins and their patterns
added " g3d / knight . g3db " to the imports in BaseG3dHudTest . java and New
added error handling for invalid solidified position in Manager . java and added logging in WitnessService . java to improve robustness of block updates
updated null handling in ExecResult and added a test for null return in TestServerCustomProtocol to improve robustness of value retrieval and ensure proper
added a method to check if a user has admin access and improved error handling in HttpServer to enhance security by ensuring only authenticated users can access
replaced the ` writeTo ` method with a ` getStubClassBytes ` method in ` ClassMirror ` and introduced a new ` CreateStub
added internalLinkText view to display internal link information when a file is a folder or a regular file to enhance user experience by providing clearer
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting of accuracy values across different locales
changed the condition from checking if SATURDAY is equal to checking if it is not equal to the current day of the week to ensure
removed the hideIme method and updated its implementation in AllAppsContainerView and LauncherAllAppsContainerView to streamline IME visibility
added in - memory event storage engine to test event handling
refactor BsdFileStore to utilize the new method ` getmntonname ` in ` BsdNativeDispatcher ` for retrieving file
add unit test for issue # 1599 resolution of method call expression
added support for optional x , y , and z parameters to the spawn command to enhance flexibility in spawning entities by allowing users to specify
added MIN _ CONTENT _ DIMEN constant and updated height and width calculations to use this constant to improve code readability and maintainability by
add debug . scope ( ` ` codeinstall ' ' ) to graalcompilertest and graalcompilertest . add
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to relies on
added multiple ` pluginCheckClassNames ` to the ` m _ failedChecks ` list in ` UpgradeCheckRegistry . java ` and modified the `
refactor Environment class to improve readability to enhance maintainability and facilitate future updates
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with a BadApple bug to address issue SOLR -
updated file system separator handling in CodenameOneImplementation . java and removed unnecessary warning message in HashtableContent . java to ensure consistent file path
renamed FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AU
updated import statements and modified ResourceAccessor initialization in LiquibaseEntityResolver and XMLChangeLogSAXParser to streamline resource handling and
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing unnecessary hostname verification processes
updated the ` CxxDeps ` class to use ` CxxDeps . of ( ) ` instead of ` CxxDeps . EMPTY `
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualStubDirectory ` , and added ` actual
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name handling logic to set hint and text based on the presence of mInfo ' s title to improve user experience by providing clearer
updated test cases in UaaResetPasswordServiceTests to include a " uaa " parameter to ensure client details are loaded correctly for specific user
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to methods for better encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to return - 1 when the value is closed to improve clarity
refactor MimetypeIconUtil to improve code structure to enhance maintainability and readability of the codebase
corrected a typo in the method name ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to ensure consistency
added a test for negating an instance of J in UnnecessaryParenthesesTest . java and updated the UnwrapParentheses . java
added a teleportation method to the Location class and modified the instantiation logic to improve teleportation functionality and ensure proper handling of entity teleportation
replaced Spring Security ' s Base64 implementation with Spring ' s Base64Utils for encoding and decoding URLs to improve code consistency and adhere
updated imports and method calls in TranslatorManagerHelper . java to use ProjectComponent and Statistics . event to enhance project - related statistics tracking functionality
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and consistency in naming conventions
added a null check for the result variable in ObjectIdentityImpl . java to ensure that the getId ( ) method is required to return a non
modified the ` setUpRevampedTweet ` method to include a ` isMuffled ` method for handling retweeter data to improve
updated the verification text display logic based on the addon theme setting to ensure the verified text is displayed correctly based on the application ' s theme settings
abucoinsdigest : remove instance variable , make field final
camel - 14850 - camel - mongo : enable autowire on the mongo client , regen doc
added a ` sourceIndex ` parameter to the ` AttributeMapping ` class and updated related methods accordingly to allow customization of the source index for
improve error handle when hive partition be corrupt
added a check for security enablement in AuthParams . java to ensure that authentication parameters are only used when security is enabled
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 8470 ] escape the contact email in the geoserver home page
fix ( reflections ) : enrich reflections with subsystems on engine module
mondrian : use the number of feature instead of the number of mean for each join feature . also add an assertion to ensure that
bugfix : do n ' t parse ` ` < math ' ' if there be no argument
added conditional checks before logging messages in SingleNodeKafkaResumeStrategy . java to optimize logging performance by avoiding unnecessary messages when debug level is
replaced ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _ PLAY
updated ' IgnitionConfigurationHandler ' , ' MotorMount ' , ' AxialStage ' , and ' FlightConfigurationID
tika - 2267 -- improve error message when parse nls file with different ascii and unicode length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest to mark the test as non - deterministic on JDK 1.7
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability by centralizing lock file creation
updated sync interval settings for version 5.3 and 5.3 _ 1 in UpdateUtils . java to ensure consistent synchronization behavior across different versions
added a check to return null if the username equals the FEDERATION _ USER to ensure proper handling of federation users by preventing
make executemethodnode handle non - truffleobject instance correctly .
replaced ` Collectors . toList ( ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest
do n ' t try to access a file that do n ' t exist in the logback valve
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize the Apache Lucene version
added logic to handle missing primary key changes in OracleDatabase and AbstractDb2Database to improve handling of missing primary key changes for different database types
added ` MetastoreException ` to the ` execute ` method and improved error handling in ` MsckOperation ` , ` TestM
[ hotfix ] [ kafka ] make kafkaproducer committable retryable
[ rip - 10 ] remove the receipthandle when the message be send to a group
added a service list to DockerComposeContainer and modified the runWithCompose method to handle empty services to ensure the DockerComposeContainer correctly handles services
recaf : use collectionutil . copyset in export and structcontextdecorator to avoid concurrentmodificationexception
removed unused imports and simplified XML handling in FeedParser . java to improve code clarity and reduce unnecessary dependencies
removed conditional checks for ` mAppsCustomizePagedView . DISABLE _ ALL _ APPS ` in ` Launcher . java `
change data types from int to double for energy sums consumed and produced in MeterRealtimeBodyDataDTO . java to ensure accurate representation of energy
added a new Java file ` bug4150029 . java ` that implements a temporary directory and file chooser functionality to demonstr
added Spark configuration update tracking and closing functionality in Hive and Spark classes to ensure proper resource management and prevent memory leaks when Spark configuration changes
added long press indicators to AppIcon and AppIconMenuItem classes and updated Workspace to use these indicators to enhance user experience by providing a clearer
[ geot - 6898 ] wkbwriter write polygon empty wkt instead of polygon non - empty wkt
refactor UnflavoredBuildTarget to use a builder pattern for building UnflavoredBuildTarget to improve code readability and reduce
added a new file MultiplyByMaxInt . java that implements a multiply operation on an integer to demonstrate the use of
removed conditional logic for enabling the drawer indicator in OCFileListFragment . java to streamline the user interface by ensuring the drawer indicator is
removed unused import statements in TestRAMDirectory . java to clean up the code and improve readability
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton ` and ` Operations ` classes to simplify code and improve performance
drools - 5338 dmnevaluatorcompiler error message when compilation expression have no definition for a node ( # 2171 )
8274560 : replace @ containerfor ( a . class ) with @ repeatable ( a . class )
updated the file sending message to include the duration in milliseconds to provide clearer context for the sending process
updated class name handling in OpenMBeanAttributeInfoSupport . java to use a safe class name to enhance security by ensuring package access is enforced
validate response count before repair replicas . patch by jbellis ; review by brandonwilliams for cassandra - 1487
update freeSize calculation in StoreDirect . java to account for rounded size values to ensure proper handling of size calculations for better performance
modified the ` areTouchesDisabled ` method to accept a ` MotionEvent ` parameter and updated related logic in ` AnyKeyboardView ` and `
updated SslContextFactory instantiation in HttpServer , RESTServer , and ThriftServer classes to use SslContextFactory . Server instead of SslContextFactory to enhance SSL context
removed the PrivilegedSocket class and simplified socket creation in PG _ Stream . java to simplify code and improve performance by eliminating unnecessary privileged
refactor InputTest class to improve code readability to enhance maintainability and facilitate future updates
added functionality to pause blurs in the DepthController and updated related methods in AbsSwipeUpHandler to improve user experience by enabling blur
added a null check for ` curLatLng ` before removing the current location marker to prevent potential ` NullPointerException ` when ` curLatLng `
updated client secret removal logic to use client ID instead of client to ensure correct retrieval of client details from the service
updated SqlSourceBuilderTest to use @ BeforeEach instead of @ BeforeAll for SQL query parsing to improve test clarity and ensure proper configuration
resolve : http : / / issues . apache . org / activemq / browse / amq - 2698 - add timeout to
added unit tests for ` SlidingGanttCategoryDataset ` to validate key handling to ensure proper exception handling for unknown keys in ` Sl
updated filterConditions initialization to use Optional for null handling and added return statements in ZookeeperSyncDataService and ShenyuTrieRuleListener
- add cloner to lightcontrol so it can be reuse
updated the handling of ` _ hideStacks ` and improved stack trace formatting in ` StdErrLog . java ` to enhance code clarity
added context validation and logging in HttpSessionEventPublisher and updated context retrieval in HttpSessionEventPublisherTests to ensure that the context is not null and improve
added a semantic check for the CREATE CQ statement in the ASTVisitor class to ensure the syntax of the CREATE CQ statement has changed from
[ hotfix ] [ doc ] fix typo in flinkiotdbsink
add a counter to track the number of custom simplification considerered node .
updated the context parameter for setting the fileIcon drawable in ActivityListAdapter . java to ensure the fileIcon is set correctly with the correct context
updated the method to read identifier with the schema name and modified the test script to include the drop index to ensure proper handling of schema names and
[ beam - 8470 ] add support for timestamp in bigqueryio . read ( ) .
added ` findViewWithTag ` method to ` ShadowView ` and ` ShadowViewGroup ` classes and corresponding tests in ` ViewGroupTest ` and
updated generic type usage for parameter names across multiple classes to ensure type safety and improve code clarity
updated import statements in IndexTool . java and removed unused import in MetaDataClient . java to improve code clarity and reduce unnecessary dependencies
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and updated method calls in JavaClassUtil to enhance annotation handling and improve method
svm : do n ' t generate resource for jar file
added CUDA _ PATCHLEVEL constant to CUDA . java and updated CUDNN _ PATCHLEVEL in cudnn . java to standardize CU
rearranged the order of resource directories in ResourceLoader . java to filter out " layout " directories before loading resources to improve resource loading efficiency
fix redstone torch ' s getattachedface method not work with materialdata
[ calcite - 1181 ] add support for varbinary data type in reltostagconverter
removed unused import of DateHelper from NoteAdapter . java to clean up the code and improve readability
updated backup handling and error messaging in Backup . java and Captions . java to improve clarity and user feedback during backup loading process
mow - 107 fix position of simple panel ( relative )
replaced the use of a temporary file path with a direct creation of a file in ShadowParcelFileDescriptor . java to simplify file creation
replaced ` poll ( ) ` and ` offer ( ) ` methods with ` removeFirst ( ) ` and ` addFirst ( ) `
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the
fix integerequalsnode canonicalization when the forx and fory node be neither add nor xor .
added a static final Type STRING _ ARRAY to TypeFactory . java to facilitate handling of String arrays in the application
refactor hideIme method in AllAppsContainerView and introduce a new hideIme method in LauncherAllAppsContainerView to
force bit density to fix network issue , resize below if needed .
updated assertion messages in TimelineMetricCacheSizingTest and TimelineMetricCacheTest for improved clarity and consistency to enhance readability
add optimization to the gl _ max _ texture _ size patch , only calculate it once .
[ java ] : do n ' t try to stop record if we do n ' t want to stop it .
added a condition to set startPosn when in transform mode to ensure startPosn is correctly initialized when in transform mode
refactor star tree handling in AggregationGroupByOrderByPlanNode and add a skipStarTree flag in QueryContext to improve clarity and control over star
added a lockNearbyView flag and modified refreshView and setupPlaceList methods to improve refresh handling based on the state of the nearby
add maptransformer . of ( ) and bimap ( ) to facilitate the transformation of a map
rename EmeddedObjects and EmbeddedObjects files to improve clarity and consistency in naming conventions
added support for nullable launcher widget span information in LauncherPreviewRenderer and implemented a method to retrieve loaded launcher widget info in PreviewSurfaceRenderer to
updated ` StageSelector ` and ` StageAction ` classes to implement ` StateChangeListener ` instead of ` ChangeListener ` to improve event handling consistency
added methods to manage calling uid and pid in ShadowBinder and corresponding tests in ShadowBinderTest to enhance testing capabilities for calling uid and pid management
refactor ExpectationFailure to use nullable message and cause directly instead of a AutoValue instance to improve null safety and simplify the class structure
remove warn log for no support for deserializing message .
simplify calculation of newW and newH in ImageReplacedElement . java to ensure newW and newH are based on the
added escaping for tab and newline characters in CoreMarkdownNodeRenderer and updated MarkdownWriter to handle newline characters correctly to ensure proper formatting and handling of
refactor SharePasswordDialogFragment to use a separate setPassword method for setting password to improve code readability and maintainability by reducing duplication
refactor IoUtil to use a static class for file channel methods to improve code readability and maintainability by centralizing method invocation logic
updated method visibility from public to package - private for several tests in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java
added new options for slider AM keytab and keytab directory in LlapOptionsProcessor . java to enable users to configure slider AM keytab
modified ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation functionality to enhance graph view cleanup by
added loader completion handling and assertions in LauncherModel . java and updated method signatures in LauncherAppState . java to improve code reliability
refactor ` NodeManageMemoryMergeOperator ` , ` NodePathsConvertOperator ` , and ` NodePathsCountOperator ` to use ` final
updated method signatures in ` IssueInterface ` and ` ValidationReport ` to include ` messageType ` parameter and added ` setCheckValid ` method to
added a safe provider name method and improved error handling in RSAClientKeyExchange . java to enhance code robustness by providing clearer error
[ hotfix ] [ mesos ] use flink configuration instead of dynamic configuration in container specification
change log level from warning to off in CCJSqlParserUtil . java to reduce log verbosity and improve performance
removed unnecessary indentation check in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public static in DefaultMapScaleBar . java to allow access
added an @ Ignore annotation to the CovariantOverrideTest class to temporarily disable the test due to a known issue
refactor curly method to use a dedicated qtype method to improve code readability and maintainability by reducing duplication
camel - 7999 : camel - jaxb - add loadroutesdefinition method to allow to load route from xml a a resource .
added space minimum and maximum settings to the X - axis of the ScatterChart to improve visual spacing for better data visualization
updated the string concatenation syntax in ExpressionStringBuilder . java to ensure proper formatting of the INTERVAL string
added a method ` shouldPreserveDataStateOnReapply ` to ` SplitScreenSelectState ` and implemented it in ` BaseState `
added a check for the presence of the UTF8 property in CheckEncodingPropertiesFile . java to ensure that the UTF8 key is present and
removed system error and output statements in TestReproduceMessage . java and updated test annotations in LuceneTestCase . java to streamline
added a UI event for long - pressing an AllApps item in StatsLogManager and integrated it into ItemLongClickListener to enhance user interaction
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure log is not null
added a condition to show sector land info only if the sector preset is not null to ensure that sector land info is displayed when the campaign is
[ hotfix ] [ table - common ] fix raw type warning in type information
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
improve error message if nearbyselectorconfig have no nearbyrandom
improve performance of temporarycache by use guava instead of minecraft
set visibility of new layer container to false in the new layer page to improve user interface clarity by disabling container visibility based on store type
initialize the _ availability variable to UNAVAILABLE to ensure the _ availability variable defaults to UNAVAILABLE when it is already unavailable
updated the ` processPBFTCommitMessage ` method to accept a ` BlockCapsule ` object instead of a ` long ` block number to
fix : update gapic - generator - java version to 2.1 . 0 ( # 602 )
replace boolean _ freeSpaceReclaimDisabled with int _ freeSpaceReclaimQ and update related methods to allow for a configurable free space claim
changed access modifiers of KDC _ OPT _ PROXIABLE , KDC _ OPT _ RENEWABLE _ OK , and KDC
refactor JsonWriter initialization and reset writer to null to ensure proper resource management and avoid potential memory leaks
renamed variables and methods in ProfilePager . java for consistency and clarity to improve code readability and maintainability by standardizing variable naming
updated method name from ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in
added a method to retrieve the object value constant from a class ' s fully qualified name to improve flexibility and error handling for configuration properties
added error handling for the initialization of KafkaService to improve robustness by logging errors during service initialization
changed RESOURCES _ TO _ ALWAYS _ ACQUIRE from Sets . newHashSet to ImmutableSet . of ( " build . prop " , " usr
use the ' auto - createchannels ' option for default output instead of the ' channel ' option for the messagebus .
added support for the " keywords " property in the HTMLDocument class and implemented a test for indexing keywords in TestDemo to enhance the functionality of
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the initialization of the ` _ addresses ` array in ` MemcachedSessionDataMapFactory . java ` to ensure that the address list is properly initialized
updated the instantiation of CorrespondenceSubclassToFactoryCall in CorrespondenceSubclassToFactoryCallTest . java to use the correct
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
update isbntobibtexfetcher to use isbn2bibtex instead of isbn - to - bibtex
reduce keep - alive time for the executor to 10 second .
added null check for text before firing data change events to prevent potential NullPointerException when text is null
add a category to the sentimentmodel so that it do n ' t interfere with the original model
added a line trimming operation to the SuffixURLFilter class to clean up whitespace from the output
added a conditional check to return early if the player is in godmode to optimize performance by avoiding unnecessary processing when the player is in
ggb - 1181 unregistration of popup in checkbox creation dialog should not be need anymore .
updated constructors in LinkedHashMapCache and BoundedLinkedHashMap to remove unnecessary maximumSize parameter to simplify constructor parameters and improve code clarity
refactor close method and variable assignment for clarity in ChannelEndPoint . java to improve code readability and maintainability by reducing unnecessary method
added null check and improved key index handling in FixAcidKeyIndex . java , modified KeyIndexBuilder instantiation in OrcOutputFormat
updated exception handling in DirectUpdateHandler2 . java to include SolrException as the root cause to improve error reporting and provide clearer context for
add store check guard to write node and fix canonicalizerphase to use it .
fix bciblockmapping . shouldfollowedge logic for exception dispatch block .
added ` getClassificationDisagreement ` method to ` AbstractCloud ` and ` DBCloud ` classes , and updated ` ViewFilter ` to use
removed unnecessary BuildTarget . copyOf ( ) calls in multiple classes to simplify code and improve readability by eliminating unnecessary object creation
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and updated related
renamed ` knownApis ` to ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` and ` Robolect
use confidenceprogressindicator instead of progressindicator for create offer
updated user agent check from " Cling / " to " UMS / " across multiple files to ensure accurate identification of the UMS device
fix blockindex . to , blockindex . to , blockindex . to , blockindex . from , and blockindex . to not be
added constants for message view types and modified the onCreateViewHolder method to handle different view types to improve flexibility in managing message views based
replaced memEncodeUTF16 with memEncodeASCII in LinuxLibrary . java and MacOSXLibraryDL . java to ensure proper encoding of
use -- instead of ++ to fix a bug
removed the ` canvas ` parameter from the ` insert ` method and related calls in ` TexturePacker . java ` to simplify method signatures and
refactor ` getVisitors ( ) ` method to a default ` apply ( Refactor < S , T > refactor ) ` method and stream
added methods ` getChildByName ` , ` getChildByNameRecursive ` , and ` getChildrenByName ` to the ` Xml ` class to provide functionality for
set the " Content - Charset " header to " UTF - 8 " in HttpSolrServer and its corresponding test to ensure proper character encoding is
added ` SystemUiControllerFlags ` to manage UI state management in ` TaskThumbnailView ` , ` AllAppsTransitionController ` , and `
removed the private ClientConfigurationService field from IntrospectingTokenService to streamline the service configuration by eliminating unnecessary fields
improve error message when hive split can not be create
removed the ownerId field and its assignment from NodeEntry . java to simplify the code by eliminating unnecessary fields
corrected a typo in the configuration key from " BackupSnapshotAferTakingSnapshot " to " BackupSnapshotAfterTakingSnapshot "
updated the merge method in TextFragment to include score calculation to ensure that score does not exceed the existing fragment ' s score during merging
removed the private Digester field from Md4PasswordEncoder . java to eliminate unused variables and improve code clarity
added a validation for the maximum unimproved step count in UnimprovedStepCountFinish . java to ensure that the maximum un
added a condition to check if there are currently opened editors before proceeding to avoid unnecessary operations when no editor are open
added verify methods to BDDMockito and corresponding test cases in BDDMockitoTest to enhance mock verification capabilities and improve test coverage for
replaced the method of obtaining the ClassLoader in PathScanner . java to improve clarity by using the class loader directly from the current thread
updated the ` sayHi2 ` method in ` CodeFirstPojoClient ` , ` CodeFirstPojoClientIntf ` , and
added log to abstractsplitbraingroftest ( # 21251 )
updated logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null before adding the logout filter to enhance stability by prevent
simplified the string concatenation for ideal variable assignment in CASgiac . java to improve code readability and maintainability
added log consumer functionality to DockerComposeContainer and updated related tests to enhance logging capabilities and improve test coverage for DockerComposeContainer functionality
updated the generic type parameter for the testMapping method in StandardJavaTypeMappingTest . java to enhance type safety and improve readability of the test
removed unnecessary import statements in AmbariMetaInfoTest . java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to ` ThrowingSupplier ` to facilitate the retrieval of exceptions from a supplier
replace the ` break ` statement with a ` return ( true ) ` in the ` ConsoleActivity . java ` file to ensure that the method
camel - 8251 fixed the issue that vertxplatformhttpengine do n ' t handle buffer in post request
added methods to handle platform separators in path handling to ensure consistent path formatting across different operating systems
added null check before processing authorization parameters to avoid potential NullPointerException when the authorization context ' s parameters are null
replace ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ` and introduce a new method ` throwExceptionIfFail ` to improve error
updated SDK version from " 4611349 " to " 4514284 " and added tests for speak and stop methods in ShadowText
add transactionlogkey to queuetransactionlog so it can be compare by itemid and name
added ` enableSqlWithoutProfile ` property and corresponding getter / setter in ` JdbcEnvironmentProperties ` , ` JdbcEnvironmentRepository ` , and `
added a try - finally block around the write operation in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
fix eclipse compiler generics issue in modloadingstage . java .
pdfbox - 4892 : use calendar instead of date , a suggest by valerybokov
updated ` getThreadInfo ` method in ` CachedThreadStatesGaugeSet ` and ` ThreadStatesGaugeSetTest ` to include a stack trace depth
added a protected field ` prevTlogOnPrecommit ` and modified sleep durations in ` LeaderTragicEventTest ` to enhance transaction
updated FastAsyncWorldEdit version from P2 - V6 to 1.17 in BukkitPlatform . java to ensure compatibility with the
updated file existence checks and added null check for input path in SegmentGeneratorConfig . java to ensure that the output directory exists before creating it ,
added a new method ` calculateNormalVector ` to ` ObjUtils ` and modified the ` TriangulationHelper ` to use this method to
updated method signatures in JdbcAuditService to use principalId and identityZoneId instead of principal and after parameters to improve clarity and consistency in
updated the implementation of the SpanCollector class to improve performance and maintainability of the code
added a null check for the getCurrSession ( ) method in AuthorizationFilter . java to ensure that the session info is not null before proceed
refactor TransactionIsolationLevel class for improved clarity to enhance code maintainability and readability
renamed the method from ` printLVgroups ` to ` printLogicalVolumegroups ` and updated references accordingly to improve cl
added thread naming to the TestSession class to improve clarity of the current thread ' s name for better debugging
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management functionality
simplified the return statement in LauncherExtension . java to directly return an empty ArrayList to simplify code and improve readability by elimin
added a new OverviewToAllAppsTouchController to the list to enhance user interaction with the overview to all apps functionality
replaced the ` scaleHotseatWithWorkspace ` method with ` getHotseatScaleAndTranslation ` in ` LauncherState `
added a check for the JUnitRule class in the DefaultStackTraceCleaner and a corresponding test in StackTraceFilterTest to ensure that stack trace
[ java ] use bufferutil . array ( ) instead of bufferutil . null _ bytes ( ) in mappedresizeablebuffer .
refactor balance listener management in DepositListItem . java to improve clarity and maintainability of balance listener management
added conditional color conversion based on edge mode in RealisticRenderer . java to ensure correct color representation for different edge modes
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and updated log assignment in multiple test classes to ensure robust handling of null responses
remove patternutil . checkpattern ( ) from gl200protocoldecoder ( fix # 374 )
modified the condition for posting a delayed handler in FullDetailsActivity to include a log statement for last playback time to improve tracking of playback time
added a method to determine if a node is an elliptic node and updated related logic for handling lemma matching to improve the handling of el
added a condition to clear the " language " and " iso " context if it is empty in the InstallItem class to ensure proper handling of
update ReactiveLoadBalancerClientFilter to override the scheme based on whether the server is secure or not to ensure correct HTTP or HTTPS scheme is used for
http : / / issues . apache . org / jira / browse / amq - 4682 - fix duplicate of bytebuffer in
make fullfilepathfromclassname static in nativeimagedebuginfoprovider non - final to allow for immutability of the variable .
refactor the ` Correspondence ` implementation to use a lambda expression using ` Correspondence . from ` to improve code readability and
updated locale support checks from non - US locales to non - EN locales in JRELocaleProviderAdapter . java and LocaleDataMetaInfo -
localtransactionsigner : remove unnecessary null check for redeemdata
add minecraftforgeclient to make it easy to use the terrain texture on forge
added a return statement to TxCacheDB . java to ensure proper execution flow in the method
updated import statements from ` com . sun . xml . internal . ws . org ` to ` jdk . internal . org ` in `
pdfbox - 4071 : fix typo find by codespell on fossies . org
update nioconnection to properly close the niosession .
updated FlightEvent parameters for GROUND _ HIT and SIMULATION _ END in FlightEventsTest . java and modified the epsilon calculation
[ beam - 8470 ] update protobuf to vendored grpc 1.26 . 0 for bytekey and textsource
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
update instructorfeedbackresultspagedata to store student profile picture in course id instead of profile picture link
added shortRules to the default password validation rules and updated the validation logic accordingly to ensure that alphabetic and numeric sequences are allowed in long
danielwagnerhall : change the default remote control port from 50 to 20 , and update the documentation .
removed the import and annotation for JUnit ' s Test in ProxyClassSerializationTest . java to simplify the test setup by eliminating unnecessary
updated scaling expression in DLNAMediaInfo . java to use " format = bgr24 " instead of " thumbnailWidth " and
remove speculativeguardmovementphase from truffle compilation support .
added checks to prevent overriding of multiple authentication manager beans in AuthenticationManagerBeanDefinitionParser to ensure that the application context does not throw an exception when
updated the handling of forwarded host and server in ForwardedRequestCustomizer . java and added tests in ForwardedRequestCustomizerTest . java
set the length of the StringBuilder to zero in ConsoleReader . java to avoid potential memory leaks and improve code readability
changed access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access and modify the role list behavior
updated OpenIDE - Module - Specification - Version numbers in multiple project properties to ensure compatibility with the latest OpenIDE specifications
hbase - 26975 add support for netty tls wrap size configuration in hbase - server ( addendum )
refactor multiple Java classes including CookieStore , HttpURLPermission , Inet4Address , Inet6Address , ProtocolFamily , SocketOption , and
refactor FixedLengthTokenizerTests to use JUnit 4 annotations and add tests for handling small strings to improve test coverage and ensure proper exception handling
refactor OpenSamlAuthenticationRequestFactory to use a protocol binding variable and add validation for protocol bindings to improve flexibility and prevent invalid protocol bindings
refactor DepthController to utilize AttachedSurfaceControl for transaction handling to improve code clarity and ensure proper transaction processing based on the root
updated version return logic in AsciidoctorConventions . java to use " 2.5 . x " instead of " main "
hbase - 26975 fix prepreparebulkload and precleanupbulkload permission issue in accesscontroller
updated the subList method parameters in TsFileManagement . java and modified measurementSchemas in MergeTaskTest . java to correct the index usage and ensure
camel - 7490 fixed the issue that genericfileconverter do n ' t convert to inputstream when the file be a file
added a login method to DefaultShardManager and its builder in DefaultShardManagerBuilder to enable conditional login based on the provided parameter
removed duplicate lines in DeleteGlobalRef method call to improve code readability and maintainability
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve clarity and consistency in
modified response completion logic to check if the completion is marked before returning the result to improve response handling by avoiding unnecessary processing when the completion is
updated condition to include user student check in FeedbackResponseCommentsLogic . java to ensure correct handling of student responses when the giver is the
tmi - bmp : do n ' t create link profile for non - windows platform .
updated the location parameters in the setSimpleCuboid method calls in ClassicPlotManager . java to correct the positioning of cuboids
added a wait message for the PMD status and refactored the actionPerformed method in PMDOpenTool . java to improve user feedback during
refactored grid presenter initialization and added size setting logic in StdGridFragment . java to improve code readability and maintainability by centralizing
updated return values in ContributionsListFragment from false to true and added true to ensure the method correctly reflects the successful operation
added a test skip range query in DistinctPrefixFilterIT . java and modified the ScanUtil usage in BaseResultIterators . java to
added a test method for verifying checkbox properties in the AcrobatAcroForm class to ensure correct behavior and behavior of checkboxes in
added a method to retrieve the last modified timestamp of a file to enhance file modification handling and ensure proper resource cleanup
added validation for the " metaTable " property in HiveIcebergStorageHandler to ensure that only valid metadata tables are processed in the storage
replace textfield with combobox for currency selection
changed exception handling from IOException to Throwable in WriteFlusher . java to improve error handling by catching all possible exceptions
added an ` mStartedEnterAnimation ` flag to control content fill animation behavior in ` IconRecentsView . java ` to improve respons
added a new public String field ` activeKeyId ` in ` UaaConfiguration . java ` to enable tracking of the active key ID for better
updated action labels and descriptions in SendMailActions for clarity and consistency to improve code readability and maintainability by using a more descriptive
changed the ` isActive ` variable from private to volatile to ensure visibility of the ` isActive ` variable across multiple threads
updated order by logic from ` isDesc ( ) ` to ` isAsc ( ) ` in multiple files to ensure correct ordering behavior in query
cast the result of ` buildImplicitVarPart ` and ` buildLHS ` to ` CharSequence ` before appending to ` sbToValueString `
added a condition to check if the application name matches the OWNCLOUD application name in DisplayUtils . java to ensure that the application context
hbase - 26942 automatically set rootdir permission when hbase . security . authentication be set to kerberos ( addendum )
change return value from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in ` JakartaServlet
refactor Instant class for improved clarity to enhance maintainability and readability of the code
added a check to set the default state format if it is null and changed the return type of getStateFormat method to String to ensure the state
updated logging statement formatting in CentralAuthenticationServiceImpl . java and modified type check in AbstractTicket . java to improve code clarity and ensure
pdfbox - 4892 : ignore illegalargumentexception a propose by valerybokov
removed unnecessary whitespace in the conditional statement to improve code readability and maintain consistency
updated PluginParameterExpressionEvaluator to accept a PathTranslator parameter and added a method to align file paths to the base directory to enhance functionality by allowing
[ beam - 8470 ] move bytestringcoder to extension package for protobuf compatibility
updated JpaQueryParsingToken to include a false parameter in HqlQueryRenderer . java and added a new test for signed numeric literals in
updated LaunchLugHandler and RailGuideHandler to include a parent length parameter in generateLaunchLugFromRASAeroRailGuide
removed the ` getNonceFactory ` method from ` BitmexStreamingExchange ` to streamline the code by eliminating unnecessary functionality
( chore ) camel - mail : replace string concatenation with parameterized logging
[ java ] set default timeout for driver conductortest to avoid flakiness .
changed the initialization of loaded classes from true to false in ScanSpec . java to disable loading of classes by default
added grabFocus ( ) method call in FullTextSearchPanel . java to ensure the search field receives focus to improve user experience
refactor NioParams initialization for SSL engine configuration in TlsConnectionLogging . java to improve code readability and maintainability by using a
updated assertion in StatementTest to use a method for retrieving a double to improve clarity and maintainability of the test code
updated the assertion message in TestSolrConfigHandler to include the server URL to improve clarity of error messages for better debugging
replaced HttpMethod with ServerHttpRequest and ServerWebExchange mocks in CsrfWebFilterTests to improve test reliability by using reactive requests
added density handling to the string concatenation in FilterResourcesStep . java to ensure consistent formatting of density strings for better readability and maintainability
added a private variable ` buttonUIID ` and refactored component updates in ` ComponentGroup . java ` to improve code readability and
removed the conditional check for display density and rotation in RecentsAnimationDeviceState . java to simplify the logic for better readability and maintain
added two new test classes , TestCloneArrayWithDifferentLengthConstness , and TestArrayCopyWithLargeObjectAlignment , to verify array copying
added import for LuceneTestCase and annotated the ReplicationFactorTest with @ AwaitsFix to indicate that the test is waiting for a
fixed - npe be throw if scheduleasyncserviceatfixed ( ) method do n ' t specify a next start date
simplified the credential check logic in FileDownloader . java and FileUploader . java to improve code readability and maintainability by redu
added null check and closing logic for scanner in Compactor . java to ensure proper resource management and prevent potential memory leaks
replaced direct calls to ` get ( ) ` with ` getOrDefault ( ) ` for retrieving values to avoid null pointer exceptions and provide a
added nonce parameter and claims assertion in TokenMvcMockTests to ensure the correct nonce is used for token claims
updated ChartEditor , ChartEditorFactory , ChartEditorManager , DefaultChartEditor , DefaultAxisEditor , DefaultColorBarEditor , DefaultNumberAxis
added width and height settings to formLayeredPane and set shouldLayout to false to improve layout control and control of the form layered pane
updated import statements in BrowserContentPane . java and added a method to calculate the maximum height based on the owner ' s height to improve code
changed the return type of ` openDatabase ( ) ` from ` void ` to ` boolean ` in ` SharedDatabaseLoginDialogView ` to
changed the declaration of DOCKER _ COMMAND to Platform . DOCKER _ COMMAND in DockerTestUtils . java and Platform . java to
add a null check for the input stream before reading parameters in TestIsartorValidationFromClasspath . java to prevent potential NullPointerExceptions when the
updated the ` drawLeaveBehind ` method to accept a color parameter instead of using a hardcoded value to enhance flexibility by allowing different
show an error dialog if the flutter plugin do not work with canary version of android studio .
fix npe , log warn if invalid identityproxy table name be find
added modulePersistEnable , modulePersistDisable , and modulePersistChange methods to StartArgs . java to handle module persistence changes to enhance functionality and
updated argument length check and improved error message format in GeminiMarketDataService . java to ensure correct argument handling and provide clear
replace HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to maintain insertion order for questions
add unit test for single role functionality in the catalina connector
updated the exclusion list in AuthCheckFilter to include specific JSP files to ensure that only relevant JSP files are excluded from authentication checks
refactor Scheduler to improve runnable execution handling and add tests for postDelayed and postDelayed methods to enhance code clarity and ensure correct behavior when
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of an array to improve flexibility by allowing
added a check for the end of the input stream before reading characters in XMLParser . java to prevent potential errors when the input is closed or
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to address issue with overflow
added pivot settings for the arrow in DeepShortcutsContainer to ensure the arrow positioned correctly based on icon state
remove stacktraces from interruptedexecutorservice and change log level from info to debug
refactor the updateThumbnail method to include a refreshView parameter in the AbsSwipeUpHandler class to enhance gesture handling by allowing refreshing
pdfbox - 4892 : improve usage message , a suggest by valerybokov
updated InternetAddress instantiation to include a true parameter and improved error handling in HostnameFormatSpecifier to enhance address validation and provide clearer feedback for
replaced instances of ` this ` with ` this ` in multiple activity classes to improve code readability and reduce potential null reference issues
updated the handling of the maximum document ID in ` MatchEntireSegmentDocIdSetBlock ` and refactored ` SizeBasedDocId
modified the ` promptToOpenFile ` method to accept an existing file name parameter and updated the directory setting logic to enhance file selection flexibility
updated widget span and page sleep delay in AppsCustomizePagedView and refactored method calls in AppsCustomizeTabHost
added transformation logic for component coordinates in FlightConfiguration . java and updated expected length in FlightConfigurationTest . java to improve the accuracy of
camel - 16400 : camel - micrometer - move message history test from seda to direct .
updated DateTimeFormatter instantiation to use Locale . ROOT for date formatting to ensure consistent date formatting across different locales
( scott phillips ) add a permission filter to remove hidden metadata .
added a test for handling missing dimension and metric names in StarTreeConfig to ensure that the builder correctly handles cases where dimension and metric names
camel - 16400 : camel - spring - add option to configure recipient list . thanks to stephan siano for the patch
ggb - 1181 repaint the inlinelayoutbox only if it need to be repainted .
refactor ` DetectAuthenticationMethodOperation ` to use a service connection and binding in ` AuthenticatorActivity ` to improve service management and facilit
