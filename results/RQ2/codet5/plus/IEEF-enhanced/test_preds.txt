replaced the constructor of SocketAppender to directly set remote host and port to simplify the initialization process for better readability and maintainability
refactor authentication header handling in BasicAuthPlugin to use a dedicated method to improve code readability and maintainability
updated the method call from ` RecordDescriptor . msgLengthOffset ` to ` msgLengthOffset ` in ` ManyToOneRingBuffer . java `
server : fix npe in listvirtualmachines api when vm detail cpu or ram be null
added a flags field and modified the constructor and getter methods in ShadowPaint . java , and updated PaintTest . java to reflect this change to
updated the title of the MassSetFieldsDialog to use localized strings to improve internationalization support for the user interface
added error handling for cases where Eclipse was not used to compile the project to improve clarity in error reporting and provide informative feedback when
added a null check for nonce in Realm . java and updated authentication scheme handling in NettyAsyncHttpProvider . java to ensure nonce is
added a RemoteInputListener interface and modified the RemoteInput class to handle connection events to provide a mechanism to notify listeners when the input is connected
refactor conditional structure and update stripeIxTo assignment in OrcEncodedDataReader . java to improve code readability and maintainability
added a check to ensure the handler is enabled before filtering out the AbstractHomeConnectThingHandler to prevent potential errors when the handler is not enabled
added null check before calling removeAllPolicies and addPolicies in AuthorizeAdminServlet to prevent potential NullPointerException when bs is null
updated assertions in ` DefaultTypeAdaptersTest ` , ` ObjectTest ` , and ` DefaultDateTypeAdapterTest ` to use ` matches `
added JSON parsing for context and description in TezTask . java to enhance debugging capabilities by including context and description information
bugfix # 253640 , provide a way to get heap dump time
replaced RxJava2Tasks with CommonsApplication for retrieving upload count in ContributionsActivity to streamline the upload count retrieval process and improve code
removed redundant conditional checks for MVStore in MVTable . java to simplify code logic for better readability and maintainability
[ rip - 10 ] fix the offset value of commitlog . getoffset ( ) and commitlog . getmessagesize ( ) .
added a null check for the openFolder in the Launcher class to ensure that the app does not attempt to access a non - open folder
added a test method to verify sorting of PGProperty names to ensure that PGProperty names are correctly sorted in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a
updated method signatures and variable types from Object to ItemInfo in UninstallDropTarget . java to improve type safety and clarity in handling item
update assertion in RequestBuilderTest to use isIn instead of hasMessage to improve clarity of error message validation
replaced instances of ` TAG _ RETAINED _ FRAGMENT ` with ` TAG _ RETAINED _ LIST _ FRAGMENT ` and
refactor constructor parameter name from ' status ' to ' sessionStatus ' in FlatProfileContainerFree . java to improve code clarity by using
added a boolean field ` sendZeroAnomalyEmail ` and its getter / setter in ` EmailConfiguration ` , and modified ` EmailReportJob
[ hotfix ] [ kafka ] fix flinkkafkaproducertest . testopenwithrestorestate not be call
removed deprecated methods for retrieving users and geofences in DataManager to streamline code and improve performance by eliminating unnecessary queries
added a constructor to BlockingResponseListener that accepts a maximum length parameter to allow customization of the maximum response length during instantiation
refactor memberbroadcastsreceived to accept a byte [ ] instead of a channeldata [ ]
replaced System . out . println with a logger for logging snapshots and added a try - finally block to ensure proper resource management and prevent potential
updated test assertions in LoginSAMLAuthenticationFailureHandlerTest . java to ensure consistency in URL formatting
refactor ConfigMetadataProviderTest to improve test coverage to enhance reliability of configuration metadata handling
updated import statements in ListFragment . java and SnoozeActivity . java , and modified the parameter name in updateNoteReminder method
added a new ` AcceptAllFilter ` class and modified directory stream handling in ` Files ` , ` WindowsDirectoryStream ` , and ` Windows
[ hotfix ] fix checkstyle violation in jdbctestdataset
refactor lookupType method to accept ClassNotFoundException as a parameter to improve error handling by throwing NoClassDefFoundError when the type is not found
added DockerImageName utility class and updated GenericContainer to validate Docker image names to improve image name validation and provide clearer error handling for invalid tags
updated the dialog message for failed login credentials from " username " to " wrong _ credentials . " to clarify the user ' s experience
added ` setAutofocus ( " autofocus " ) ` to multiple form classes to ensure consistent focus behavior across the user interface components
added unit tests for ` SamlIDPRefreshMockMvcTests ` for ` IdentityZone ` and ` SamlConfig ` to ensure correct
added checks for non - empty and non - digit lists in ComparableVersion . java and introduced a new test method in ComparableVersionTest . java
updated top - left and bottom - right modes in Sheet . java and added padding and margin properties in UIManager . java to improve layout management
updated package structure and import statements in RobolectricTestRunner , ParallelUniverse , and ParallelUniverseTest classes to improve organization and
refactor method invocation logic in LocalCacheFactory and NodeFactory to use a constant FACTORY _ CALL to improve code readability and maintainability
updated fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve the visual
added methods to draw self loops based on graph visibility and color to enhance visual representation of self loops in the graph
rename ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` to ` ALLOW _ TVM _ SOLIDITY _
testing : change name of dropwizardapprule . addmanged ( ) to manage ( ) , to mirror the method on environment . lifecycle ( ) . manage . ( )
set the translation of the drag handle indicator to zero in AllAppsTransitionController . java to reset the position of the drag handle indicator for better
added logging statements for collection , community , and item viewing in CollectionViewer , CommunityViewer , and ItemViewer to improve traceability of
updated configuration messages for query optimization in HiveConf . java to clarify the behavior of filter pushing down filters during query optimization
added an assumption to the ScanningAppProviderRuntimeUpdatesTest to check if the build server is not running on an operating system to address issues
added Maven bundles for Jetty alpn client and debug logging in TestJettyOSGiAnnotationParser to enable support for Jetty al
act - 1353 : fix concurrentmodificationexception in executionentitymanager . updateprocessinstancelocktime ( )
refactor transaction handling logic in Transaction . java to improve code readability and maintainability
updated the annotation from ` @ CustomFieldBehavior ` to ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to
added a method ` whichExec ` to ` AsyncExecute ` and refactored ` FirefoxCustomProfileLauncher ` to utilize it to improve
phoenix - 1640 addendum fix race condition in ptableimpl ( addendum )
[ hotfix ] remove unnecessary @ suppresswarnings in hadoopoutputcollector and hadooptuplesunwrappingiterator
added a check to ensure the client version is less than MIN _ SPLITTABLE _ SYSTEM _ CATALOG and the view type is not MAP
[ # 7012 ] update student id after instructor creation ( # 7013 )
replaced the import of TestCellReference from org . apache . poi . xssf . util to org . apache . poi . ss
fix lens piston crash when block hardness be set to 0
added a new file LongPointerPressTest3049 . java to implement long pointer press functionality to demonstrate network error handling and
fix inlining logic in partialevaluator . calldirectmethod .
refactor return statements in BaseBuilder , XMLConfigBuilder , and ProxyBuilder classes to use conditional expressions to improve code readability and reduce unnecessary
simplified the indent condition in ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to improve code
added a new abstract class ` AbstractOptionalAssert ` and refactored the ` OptionalAssert ` class to extend it to improve code organization and
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to mark the test as ignored due to GitHub issue 1070
[ wasm ] make testcaselogger . savemessage non - native .
removed unnecessary whitespace in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the video format is a video before proceeding to ensure proper handling of video formats during playback
added security property ` jdk . tls . disabledAlgorithms ` to ` ComHostnameVerifier ` and ` JavaxHostnameVerifier ` classes to
server : do n ' t allow storage pool to be manage if it ' s local or zone
updated logging statements to include cache entry details and improved string formatting in QueryResultsCache to enhance traceability of cache entries and provide clearer
added a ` maybeUpdateModel ( ) ` method to ` AddManagedDependency ` , ` AddManagedDependencyVisitor ` , and ` ManageDependencies
added a test for the intent sender request in ShadowActivityTest . java and implemented the send method in ShadowActivity . java to enhance testing capabilities
updated graphics creation methods in RocketFigure3d . java to enable FBO functionality and improve rendering hints to enhance rendering capabilities and ensure
added synchronization to the controllerListeners list in HydrawiseAccountHandler to ensure thread safety when modifying the controllerListeners list
added a static method ` beforeClass ` to the ` TestCoreAdminApis ` class to skip tests that are not compatible with Java 9
updated year retrieval from localDate to use ChronoField . YEAR _ OF _ ERA in TimestampUtils . java and refactored expected date
do n ' t try to disconnect a jabber connection if there be no jabber provider available .
added a new variable ` cur _ ws _ commit _ id ` to the SQL query in ` TxnHandler . java ` to provide a more
replaced ByteChunk with ByteBuffer for better memory management in BufferedInputFilter . java to improve performance and handle buffer overflow exceptions more effectively
added a new method ` toSync ` to ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to enable asynchronous conversion
added ActionGraphBuilder to multiple compiler factory classes to improve dependency management and maintainability of the code
danielwagnerhall : fix infinite loop on hidden file upload
removed redundant try - catch block for creating tables in SQLManager . java to streamline error handling and improve code readability
added a check to return the local Maven directory if the file does not exist to ensure that the application does not attempt to create a non -
bugfix : hide algebra label when new label start with hidden _ prefix
fix : fix npe in ctelementimpl . getmetadata ( ) ( # 3649 )
use addflag ( ) instead of setflags ( ) in defaulttrackoutput .
added a condition to check if the cached is not sorted by ID before proceeding with reordering to ensure that reordering is only performed when
updated error message to clarify the presence of a method call for verify ( mock ) to improve error reporting for better debugging and understanding
added null check for backupFolder before logging expiration to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that demonstrates the use of ` Array . newInstance ` with a
added @ AddToRuleKey annotation to the toolType field in ClangCompiler . java and GccCompiler . java to enable rule key
replaced hardcoded timeout value with a constant in PinCheck . java to improve maintainability and readability of the code
add isSampled ( ) method to PrometheusMeterRegistryTest and PrometheusExemplarsSample classes to enable sampling of prometheus metrics for
removed @ Ignore annotations from multiple test classes to ensure compatibility with the MongoDB server requirements
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix compilation error
updated the condition to check if the table is not artifical instead of name to ensure accurate validation of the table ' s artifical
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
refactor attribute handling in MongoSessionManager to improve null and empty checks to enhance robustness and prevent potential NullPointerExceptions
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
replaced direct usage of ` _ stopping ` with a variable ` stopping ` in ` AbstractConnector . java ` to improve code readability and
removed unnecessary whitespace from method parameters in HuobiStreamingService . java to improve code readability and maintain consistency
( chore ) camel - base - engine : use system . currenttimemillis ( ) if available
[ java ] delayedmonopublishertest : fix flaky test on window .
updated the assertion to check if the error is not a WebSocketHandshakeException before proceeding to improve error handling by ensuring that the expected exception is
modified the AllAppsTransitionController class to implement View . OnLayoutChangeListener instead of an anonymous OnLayoutChangeListener implementation to enhance code readability and
updated variable names from ` theHandler ` to ` handler ` in ` PolicyBasedAuthenticationManager . java ` to enhance code readability and maintain
int - 1193 add support for default - output - channel attribute in xpath - router
updated ` cacheSeconds ` from ` int ` to ` String ` and added ` @ DurationCapable ` annotation in ` MessageBundleProperties `
updated OpenAPI version from 3.0 . 0 - rc1 to 3.0 . 0 across multiple Java files to ensure compatibility with the
removed the append method call from ByteBufferPool . java to streamline the code by eliminating unnecessary method calls
added a method ` haveAltRt ( ) ` to check for the presence of " alt - rt . jar " in the boot class
updated user email references in JdbcScimUserProvisioningTests . java for consistency and clarity to ensure accurate identification of users and improve test coverage
use - xx : + debugnonsafepoints and - xx : + unlockdiagnosticvmoptions when run on java 1.
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebCamInputDialog ` to
added a condition to check if the content view has content in the HttpParser and implemented a new test for chunked PUT requests in ProxyServletTest
updated AtmosEndpoint . java for improved functionality to enhance performance and maintainability of the Atmos endpoint
added support for " printf " and " print " target methods in Java2TypeScriptAdapter to ensure proper handling of method calls in TypeScript
added a new file TestCapacityUntilGCWrapAround . java and modified WhiteBox . java to include native methods for incrementing metaspace capacity
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
simplified the calculation of ` endTime ` in ` SamplingStatCalculator . java ` to improve code readability and reduce unnecessary complexity
added unit test base on user forum issue
tmi - 18 : jpegreader : do n ' t throw iioexception for invalid icc _ single _ chunk
fix terra rod not be able to be reequipable . close # 163
updated JoobyModule , SpringModule , and JoobyExtension to conditionally bind configuration and environment to enhance flexibility in
remove createloaderrule from contextruleset , use getparentclassloader ( ) instead
bug 61794 - nameupdater should not reject namemap entry that already define
set start flag of ellipsoidregionselector to true to avoid infinite loop
updated URLs from " http " to " https " in Desktop . java and added a default codename one - com protocol to enhance security
[ geos - 9441 ] validate sortby in getfeature request , and throw an exception if the sortby be invalid .
simplified the null check for the grantor variable in AbstractJdbc2DatabaseMetaData . java to improve code readability and maintainability
replaced instances of ` expectedImage ` with ` compatibleImage ` in ` DiagramGenerationTest . java ` to ensure compatibility with the correct
fix npe in minecraft when try to install fml properly .
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
fix flaky locktest . testlocked ( ) by use asserttrueeventually ( asserttask )
added methods to tokenize whole words and join tokens in StringUtil . java to enhance string manipulation capabilities for better readability and usability
use response . sendError ( 404 , ` ` not find ' ' ) instead of response . setStatus ( 404 , ` ` not find ' '
refactor command handling in SystemHighlighter to use commandIndex for improved clarity to enhance readability and maintainability of command parsing logic
updated version and version date constants in Constants . java to reflect a new snapshot version and a pending version date
update buffer position to use dimensionSize instead of idx to ensure correct positioning of buffer based on dimension size
added support for shell drag - and - drop requests in QuickstepTestInformationHandler , SystemUiProxy , TouchInteractionService , and TestProtocol
[ log4j2 - 1349 ] run socketappendersocketoptionstest only on java 7
added " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to TestCipher . java to support additional
update description text to use getLongDescription ( ) instead of getDescription ( ) . getText ( ) to improve clarity by accurately reflecting the
added JsonProperty annotation to ScimGroupMember . java to enable serialization of the value property for better data management
refactor HqlQueryRenderer to return a list of JpaQueryParsingToken for reserved words and add a new test for schema scoping
fix typo : ` ` d ' ' - > ` ` s ' '
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
updated the ` offsetStreamIndex ` method to include a ` indexStartsAtOne ` parameter and modified track selection logic to enhance functionality by allowing
tika - 697 -- add support for cpio and ar file .
[ hotfix ] [ table ] remove unused method in flinksqloperatortable
added ` equals ` , ` hashCode ` , and ` toString ` methods to ` OneTimeTokenAccount ` , and ` OneTimeToken `
added a condition to check if the assistant is not launched when fling is enabled to ensure that fling is only performed when the assistant is
added a new file SolarisShortDSA . java for DSA key pair generation and verification to demonstrate the use of
added a call to toggleSearchLabel with a value of false in ListFragment . java to improve user experience by disabling search functionality
server : lock volume before snapshot creation , to avoid race condition
refactor ` DetailsServiceConnection ` to implement ` ServiceConnection ` and add a null check for ` mConnection ` to improve service management and
refactor error handling in HttpClientTLSTest to use AtomicReference for better thread - safety to improve clarity and maintainability of exception management
removed the equals method from ConjunctionScorer class to streamline the code by eliminating unnecessary complexity
added null check for variable ' v ' in bindItems method to handle potential null pointer exceptions during item binding
added random commit range and timeout for getraftgroupids operation ( # 11341 )
refactor cache size adjustment logic and add logging for cache shrinking to 90% in DefaultCache . java to improve cache management efficiency and provide
updated API path from " / api / v2 " to " / api / v3 " and refactored limit order creation logic to
added a new method ` empty ( ) ` to the ` freenect2 ` class to provide a way to check if the collection is
drill - 8023 : fix nullpointerexception when read parquet file with empty dictionary page .
updated argument length and added validation for market data type in SerumStreamingService . java to enhance input validation and ensure correct market data type is
add a config option to disable the char animation when an item be charging on top of a mana pool .
[ java ] do n ' t wait for connection to aeron cluster when aeron subscription be not connect .
updated exception handling in WaitForHelper . java to include logging of exceptions to improve error reporting for better debugging and troubleshooting
updated DefaultServletTest to use assumptions for directory creation and response verification to improve test reliability and clarity regarding file system support
removed duplicate injectations of dialog styles in ResourcesInjectorFull . java to improve code readability and maintainability
changed data types of ` changeLogFile ` and ` outputFile ` from ` String ` to ` FileResource ` in ` BaseLiquibase
fix : use getx ( ) , gety ( ) , getz ( ) in blockworldvector . equals ( )
changed access modifiers of CacheEntry to final in LongConcurrentLRUMap . java to enhance immutability and enforce immutability of CacheEntry
replace singleElement ( args ) with regex . quote ( literal ) in resourceConfiguration to ensure proper formatting of literal strings in resource configuration
modified the KRB5CCNAME retrieval logic in FileCredentialsCache . java and updated command - line argument handling in EmptyCC . java to
updated the database path in ValidateMultiSignContractTest from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract
fix ( ethereum - system ) : disable peer requirement check for fast - sync
danielwagnerhall : fix nullpointerexception in attachtocurrentthread ( )
bugfix : do n ' t expand ` ` areequal [ segment [ x , y , z , w ] ' ' format expression
added a condition to clear pending rendering operations if the implementation is minimized to optimize performance by preventing unnecessary rendering operations
fix deadlock in hazelcasttestsupport . sleep ( )
do n ' t store key in coalescedwritebehindqueue if writedelayseconds be set
added a call to set the icon of JLabel to null in GroupTreeCellRenderer . java to reset the icon for better visual representation
updated test methods in TestBlacklistAwareRedirectResolver to differentiate between default and non - strict redirects to improve test clarity and ensure consistent behavior
updated ShutdownMonitor and ShutdownMonitorTest classes to improve socket management and testing capabilities to enhance test reliability and ensure proper socket closure during shutdown operations
simplified the calculation of moveSize and refactored the fill rate logic in RandomAccessStore . java to improve code readability and
refactor field handling in Json . java to improve clarity and introduce a new readFields method to enhance code readability and maintainability
[ hotfix ] move componentclosingutils into org . apache . flink . runtime . operators . coordination
server : delete volume in vm when vm be destroy ( # 5649 )
server : fix npe in listvirtualmachineclustervirtualmachinecluster while listvirtualmachinec
rename ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` in ` InitializeAuthenticationProviderBeanManagerConfigurer `
increased the timeout duration for retrieving the leader from " halfdeletedcollection2 " from 15 seconds to 30 seconds to allow more time for
refactor ` errorMessage ` methods to remove the ` String ` parameter and improve error message formatting to simplify error reporting and enhance clarity in error
updated drawing parameters in URLImage . java to use - x and - y instead of x and y to ensure correct positioning of the graphics
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
do n ' t throw indexoutofboundsexception if there be no highcard dimension
[ hotfix ] [ runtime ] add cause to streamtaskexception in streamconfig
refactor tag processing logic in Preprocess . java to improve clarity and efficiency to enhance readability and maintainability of the code
reformatted the ` read ` method in ` MessagePack . java ` for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standardized way
do n ' t encode empty extension list in jsonparser # encoderesourcetostring ( # 2638 )
refactor artifact parsing to handle external meta entries with no internal name to improve robustness by ensuring only valid external meta entries are processed
added an alias for the " node _ popup _ scripting " menu entry in ScriptingMenuEntryVisitor . java to improve clarity and
updated constants in OverviewActionsView , HIDDEN _ FOCUSED _ SCROLL , HIDDEN _ SPLIT _ SCREEN ,
( chore ) camel - jms : use getout ( ) instead of cast to jmsmessage
removed unnecessary ` throws IOException ` declarations from multiple Java files to improve code readability and maintainability
deleted ` AbstractDelegatedVerb . java ` and ` FailureContext . java ` files to remove deprecated classes to improve code cleanliness and
changed ` __ content ` and ` __ contentETag ` to ` __ content final ` and added a new ` MicroServlet ` class to handle
fix ( redo ) : fix race condition in repeat ( ) and distinct ( )
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance debugging capabilities and provide clearer insights into component
[ ds - 3752 ] add a servlet to load dspace - config in oai . xml
hbase - 2598 storescanner should not reset matcher . row if it do n ' t match ( ted yu )
camel - 16400 : enable jmx by default in camel - test
replaced hardcoded ' / ' with a constant for the canonical package separator in SourceLineAnnotation . java and SourceCodeDisplay . java to
added methods to find YARN binary and application ID in HiveConf , RemoteSparkJobMonitor , SparkJobStatus , and LocalSparkJobStatus
added support for both " mysql " and " maria " databases in DbConnectionManager to ensure compatibility with additional database types
[ hotfix ] fix checkstyle violation in masterwalmanager and splitlogmanager
added a new file ` ExecuteAndReturnStringTest . java ` to implement a basic UI with network error handling to demonstrate and
added a new file invokespecialInterface . java with an interface and its implementation to demonstrate the use of invokepecial interfaces
refactor EvictingBoundedList class for improved performance to enhance efficiency of list eviction operations
do n ' t use turncosts = true if graphhopper do n ' t require it
added a check for backgroundDisabled and a validation for selection in SelectBox . java to ensure that selection values are valid and prevent illegal argument exceptions
added a null check for the variable ' md ' in RpcServer . java to throw an exception if the variable ' md ' is null to
updated hotseatCellSize and hotseatIconCenter calculations to include border spacing to improve layout responsiveness for hotseat icons
updated the method of obtaining the value string in ExpressionTree . java to streamline the code and improve readability by eliminating unnecessary
fix serialization of task name and autodisposable field ( # 11341 )
updated the directory reference from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
changed the default value of the ` equal ` variable from ` false ` to ` true ` in ` DisplayModeTest . java ` to ensure
updated UnicodeToLatexFormatter to handle non - BMP codepoints and modified HTMLUnicodeConversionMaps to include new mathematical italic
pdfbox - 4892 : fix handling of non - ascii control character , a suggest by valerybokov
simonstewart : make the selenium - backed selenium test more robust
added a clear button to the DataBrowser class and modified the return condition in BookmarksPanel to enhance user interface functionality by allowing users to clear
updated the URL construction logic in OAuth2AuthorizationRequestRedirectFilter . java to utilize UrlUtils for building the base URL to improve URL generation
replaced ` java . sql . Date ` with ` parseDatetime ` for date assertions in ` SoftAssertionsTest . java ` to improve
modified the ` adaptOrders ` method to include a ` reverse ` parameter for order adaptation to enhance flexibility in order adaptation by allowing
delombok now print ` ` var ' ' instead of ` ` var ' ' and add a new ` ` java11var ' '
simonstewart : fix a compilation error in the java build
updated Configuration initialization to set defaultVal to false and removed unnecessary conditional logging to streamline configuration handling and improve code clarity
replaced ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha ) ` to simplify
added unit test base on user forum issue
replaced usage of ` System . getProperty ( Globals . CATALINA _ BASE _ PROP ) ` with ` context . getCatal
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the return logic in ` ShadowICU
update color mapping from 4 to 16 in PlotSquared . java to enhance the visual representation of color codes in the application
added ZuulProperties support to the TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enhance configuration flexibility
tika - 3643 -- fix unit test to account for timezone change
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to include a ` getBuildTime ( )
updated the calculation of xDist to use the absolute value of mScroller . getFinalX ( ) and mScroller . getCurr
remove gui test for now
removed the @ NullableDecl annotation from several constructors and methods in LazyMessage , StandardSubjectBuilder , and Subject classes to simplify the code by elim
updated error message formatting in TestStream . java to improve clarity of error messages for better debugging
rename ` ` org . thymeleaf . templateparser ' ' to ` ` org . thymeleaf . templateparser . markup
added a new test method ` testXPathString ` to ` XPathTest . java ` and modified the ` XPathTest . java ` to include
added @ Nullable annotation to FutureUtils . java to indicate that certain fields or methods can be nullable in future processing
add warn if invokedynamic be not resolve during call - graph construction
updated email addresses for createdEmail and newEmail from " @ gmail . com " to " @ example . com " to ensure users are
updated HTTP response format and modified URI comparison logic in HttpConnectionTest . java , and modified URIUtil . java to return false in URIUtil
implemented the ` getColumnDataType ` method in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a standard
add default implementation of serviceclientconfiguration ( ) for backwards compatibility
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
changed the data type of ` startTime ` from ` long ` to ` Instant ` and updated related time logging to utilize ` Duration ` for
added version handling for media info parsing in LibMediaInfoParser . java to ensure compatibility with different media versions and improve logging clarity
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enhance proxy management for IdeaDependency instances
added a new file ` SerialHeap . java ` and updated references from ` GenCollectedHeap ` to ` SerialHeap . java ` to
added multiple @ SuppressWarnings ( " serial " ) annotations in $ GsonTypes . java to suppress serialization warnings for improved code clarity
add mouse . getmouseposition ( ) to mousewheelevent so that it can be use for mouse wheel event
updated the return statement in MongoQueryCreator to handle null values and added a new test case in AbstractPersonRepositoryIntegrationTests to improve robustness
[ hotfix ] [ java ] add multisettypeinfo to maptypeinfo
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for retrieving identity providers based on an issuer to improve error handling for
pdfbox - 4892 : do n ' t allow a poor whitespace in cmap parser , a suggest by valerybokov
refactor service connection handling in ContactsBackupJob . java to use a new OperationsServiceConnection class to improve service management and facilit
refactor ` ForAll ` and ` Infer ` classes to improve constraint handling and introduce new classes ` T6938454a `
add is _ account _ config _ hidden flag to accountid and add it to accountlist
added a check to ensure the number of displays matches the number of supported bounds in DisplayController . java to improve error handling and provide clearer
replaced ` SchemaUtil . getSchemaName ( ) ` with ` schema . getSchemaKey ( ) ` in ` PMetaDataImpl . java `
ggb - 2695 fire passive login when the ' loginpassive ' action be change
added a new Box2DTest class and modified GDXTester and Box2DTest to include it to implement functionality for Box2D
fix npe in localbypartionertype . patch by jbellis ; review by brandonwilliams for cassandra -
[ hotfix ] [ runtime ] increase default buffer request timeout to 5 minute .
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
add a help button to the OpenOfficePanel to enhance user experience by providing access to the help page
updated NettyAcceptor , ProtocolDecodingServer , and ProtocolPublishDecodingServer to use childOption for TCP _ NODELAY
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService to use
added a transient class reference and refactored class loading logic in ScanResultObject . java to improve memory management and enhance type safety during class
refactor connection handling in DecodeServlet . java to streamline error handling to improve code readability and maintainability
added a method to convert ` NullHandling ` to ` QueryDslNullHandling ` and created a new integration test class to enhance null handling
added null check for actor in ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions during action execution
test ( refactor ) : fix checkstyle violation in cttypetest
added synchronization to synchronize access to sfWriters in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its subclasses ` JJ ` and ` JK ` to implement and test
added a method to revoke existing agent certificates and updated script arguments in CertificateManager . java to enhance certificate revocation functionality and improve error handling
added a check for non - existing HTTP response codes in AbstractHttpTest . java and implemented a new test case in HttpServerTestBase . java
added null checks for script text and language in ScriptTransformer . java to ensure compatibility with Java 6 and above
updated ` METASTORE _ CONNECTION _ POOLING _ TYPE ` to include additional connection pool types and modified exception handling in ` TxnHandler
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added functionality to manage file lock and unlock states in FileMenuFilter and OCFileListFragment to enhance user experience by allowing users to manage file
updated versioning logic in Version . java to improve application performance and maintainability
clear endpoint cache when update keyspace . patch by jbellis
replaced direct calls to ` waitForSignal ( ) ` with a new method ` waitForState ( Thread . State state ) ` to improve code
updated methods in SkylarkDescription , SkylarkDescriptionArg , SkylarkRuleContext , and Skylark
refactor LocalStorage and SessionStorage interfaces to extend from Storage and introduce a new Storage interface to enhance code organization and maintainability by separ
do n ' t check view row type when create or replace view [ hz - 2278 ] ( # 2279 )
changed exception handling from catching ` Exception ` to catching ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error handling
updated query string retrieval logic in SpellCheckComponent . java to ensure correct query string is used for improved functionality
added validation for header values in Headers . java to ensure only valid headers are processed to prevent runtime errors
[ gr - 21212 ] fix universebuilder . getafterfieldsoffset ( ) to correctly calculate after field offset .
[ apex ] fix classcastexception in apextreebuilder
hhh - 5103 : log warn about association with @ fetch ( fetchmode . join ) and @ fetch ( fetchmode . lazy )
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend from AbstractSpecFilter instead of implementing Swagger
added database and table assertions in TestCompactionTxnHandler . java and set database and table names in TxnHandler . java to ensure correct database
camel - 16400 : added suspension to timer consumer so it can be shutdown .
added a condition to check if the block is not processed before adding the trace to ensure only valid traces are added to the work list
updated null check logic in ProviderManager and added tests in ProviderManagerTests to ensure proper handling of null elements and improve test coverage
simplified the condition for determining if the database is an instance of PostgresDatabase to improve code readability and maintainability by elimin
added test cases for local index queries and modified limit handling in multiple classes to improve test coverage and ensure correct handling of local index limits
added validation to prevent adding collections with the same name and type in AlterTableStatement . java to ensure data integrity by preventing invalid operations
updated cursor positioning logic in VDUBuffer . java and vt320 . java to ensure accurate cursor positioning based on screen boundaries
removed the USE _ RETRIES constant from HttpShardHandlerFactory . java to streamline the code by eliminating unused constants
updated the VERSION _ NUMBER regex in JavaVersion . java and added a test for JavaVersion . parse in TestJavaVersion . java to ensure
[ hotfix ] [ stream ] skip processing when there be no input gate
added a JUnit test annotation to the TestReceivingMessageSourceParserTests class to facilitate testing of message source functionality
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when properties is null
replaced the throwing of an IOException with a variable initialization to improve error handling by providing the original cause of the IOException
updated error messages in ClusterStackVersionService , CheckDescription , AmbariManagementControllerImpl , ClusterStackVersionResourceProvider , RepositoryVersionResource
added a ` TxConfidenceListener ` to manage transaction confidence updates in ` TxIdTextField . java ` to ensure proper handling of transaction confidence
bugfix # 252 , add support for g1 perm gen to jmxsupport
removed redundant import statements and refactored return statement in NearbyController . java to streamline code and improve readability by elimin
pdfbox - 4892 : make class public , a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2 . java to include a check for non - home activities to ensure proper handling of
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and consistency
renamed methods in ShadowTelephonyManagerTest and modified return statements in ShadowTelephonyManager to handle null values to improve clarity
updated the method to set the unfreeze balance in UnfreezeBalanceV2Actuator . java to ensure that the unfreeze balance is correctly
pdfbox - 4892 : fix typo , a suggest by valerybokov
simonstewart : use apache ' s fileutils instead of guava ' s files . copy
refactor assertion classes for improved consistency to enhance maintainability and readability of the codebase
2 . x : fix typo in javadoc of observable . delay ( ) . delay ( )
refactor the ` pushAll ` method in the ` Update ` class and add tests in ` MongoTemplateTests ` and ` UpdateTests `
added a null check for ` randomUUID ` before setting the ID in ` MockHubService . java ` to ensure that a valid UUID is
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve responsiveness to hover interactions in the application
added a conditional check for the " bootstrap _ conf " property in CoreContainer . java to ensure that the configuration is set before proceeding to
camel - 16400 : camel - netty - http - make maxheaderssize configurable .
increased the HBASE _ CLIENT _ RETRIES _ NUMBER from 5 to 35 in HBaseTestingClusterAutoStarter . java to
replaced the method of obtaining the template file from ` toPath ( ) ` to ` new File ( baseDirectory . getAbsolutePath ( ) )
truffle : make encodedgraphcachetest more resilient to failure .
updated the query command from " customer _ count " to " all _ tables " and modified the configuration to use " all _ tables " to
added functionality to adapt Kraken assets and store their currency metadata to ensure accurate representation of Kraken assets and maintain data integrity
added a ` toString ` method to the ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test ` to
updated variable names and email handling in AlertTaskRunnerV2 . java for consistency and clarity to enhance code readability and maintainability by
[ influxdb ] fix npe in influxdbpublisher . publish ( )
renamed the ` doTransform ` method to ` downcast ` in multiple converter classes to improve clarity and consistency in method naming
added checks for unique local addresses in NetUtils . java to ensure only valid local addresses are processed
added a method to quote column names in the DataTextFormatter class to ensure proper formatting of column names for better data readability
added methods for property setting , property retrieval , and setting properties in WrapSystem , StrUtils , CompileMethodEntity , and ClassWrapper classes to
added a constructor to the UpdateRequest class that accepts a URL string to provide a default constructor for the UpdateRequest class
changed the visibility of the EnumSerialization enum from static to package - private to allow access to the EnumSerialization enum from other classes
added the ` addExperimentalFormatWarning ` method to ` RequestHandlerUtils ` and invoked it in ` DataImportHandler ` and ` ReplicationHandler
updated debug logging to use a formatted list of module names to improve readability of module names for better debugging
add a method to get the default label font and adjust row height accordingly
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix npe in broker
added meanPartitionSize , partitionCount , and splitCount variables to CqlInputFormat . java to improve handling of partition size and count data
simplified the condition for checking JUnit test names in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintain
[ drools - 7 ] fix equal ( ) and hashcode ( ) in ruleterminalnodelefttuples
added import for StageIDsRearranger and modified stage ID rearrion logic in TezCompiler . java to enable dynamic resolution of stage
fix jmx registration for messagingservice . patch by jbellis ; review by brandonwilliams for cassandra - 113
refactor memory consumption logic in LotsOfOutput . java to improve clarity and debugging to enhance code readability and provide insights into
added imports for ` Document ` and ` DimConfig ` in multiple Java files to enhance documentation clarity and maintain consistency across the codebase
updated ` LdapAutoConfiguration ` , ` LdapProperties ` , ` LdapContextSource ` , ` LdapProperties ` , and ` LdapAutoConfiguration
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future development
( chore ) camel - example : fix visibility issue in exampleEchoPipelineTest
added finishMocking method to MockitoSession and its implementation in DefaultMockitoSession , and modified validation logic in StubbingWarningsTest
removed extraDeps from declared dependencies in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to streamline dependency
refactor buffer and handler variables in SPDYAsyncConnection and HTTPSPDYAsyncConnection classes to improve clarity and functionality to enhance
change blockliquidwrapper . getstaticblock ( ) to blockliquidwrapper . getlowingblock ( ) . close # 227
replaced ` putExtra ` with ` setData ` in ` AndroidLocationPlayServiceManager ` and modified the method of obtaining ` LocationListener
fix typo in aprendpoint javadoc
[ hotfix ] [ client ] fix clifrontend to support streamingplan
fix craftingmanager . getshaperecipes ( ) . getshaperecipes ( ) . getid ( )
flume - 1343 : fix flaky kafkapartitiontestutil test
simplified conditional checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a pattern to match patterns " . pg _ temp _ . " in NeuteredLinesFilter . java to enhance filtering capabilities for temporary
doc ( regen ) : update sample code to set total timeout , add api client header test
modified the handling of ` liquibaseDataType ` to differentiate between ` INTERVAL ` and ` NCLOB ` data types to
add ispublishinghistogram ( ) method to wavefrontmeterregistry to avoid npe
updated the handling of ` handleAdd ` and ` DivideUpstream ` in ` ShenyuClientRegisterSpringCloudServiceImpl
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable custom listener registration for sensor events
added exception handling for SSL connection methods in SelectChannelServerSslTest . java to log warnings when closing overtook 400 responses
camel - 16400 : fixed npe in camel - ignite when use karaf
added a check for zero count in AbstractClient . java and updated isReachEnd variable in ResultSet . next ( ) to improve error handling and
pdfbox - 4892 : do n ' t swallow unsupported flavor exception , a suggest by valerybokov
added tests for HDR capabilities in ShadowDisplayTest . java and implemented unsupported operations in ShadowDisplay . java to ensure proper functionality and error handling
added a finally block to reset classLoader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory leak
updated error messages in SemanticAnalyzer to include source , column name , and target alias details to improve clarity of error messages for better debugging and
added a default constructor to the Message class to provide a default implementation for the Message class
updated priority handling in SerializableIdiom . java to differentiate between GUI and non - GUI classes to improve clarity and maintainability of bug
updated the constructor of ` PhoenixDecimalObjectInspector ` to accept ` PrimitiveTypeInfo ` and improved the handling of ` BigDecimal `
changed the type of ` gzipstream ` from ` GZIPOutputStream ` to ` OutputStream ` and modified the handling of ` gzipstream ` based on
rename ` WWWAuthenticate ` to ` authenticateHeader ` and introduce ` parameterMap ` for better clarity to enhance code readability and
removed unnecessary conditional checks for specific names in DCD . java to streamline code logic for better readability and maintainability
added a method to retrieve the thread group name in ThreadLeakTest . java to improve code clarity by encapsulating thread name retrieval logic
added logging functionality and improved error handling in MethodInvocationPrivilegeEvaluator to enhance debugging capabilities and provide clearer error messages
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nut
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to utilize Lombok
kvm : add iso path to vm disk for user vms
refactor signal handling logic in SigInt . java and rename the test method in SigIntTest . java to improve error handling clarity and
replaced static import of ` ArrayUtils . isEmpty ` with direct usage of ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve
make axonautoconfigurationwithspringcloudtest use @ enableautoconfiguration instead of @ contextconfiguration
added multiple @ Override annotations in ColorRGBA . java to enhance code clarity and ensure proper method overriding
planningentityselector . setresetinitializedplanningentities should be disable by default
added build time information to ArtifactInfo and ManifestRuleKeyManager classes to enhance tracking and management of artifact build times
updated field handling in GroupByOperator to use getDeclaredFields ( ) instead of getFields ( ) and added a new variable aggrPositions to improve
added null check before adding block appearance to prevent potential NullPointerException when the block is null
added support for the CNC currency pair in BTCEUtils , Currencies , and CurrencyPair classes to enable trading functionality for Ch
updated the skewAllowance value from 5 to 15 and refactored related classes to utilize CasConfigurationProperties for skew allowance management to
added sorting functionality for songs in SongListActivity and updated query logic in Utils to improve user experience by allowing sorting of song items based
removed unused imports and refactored the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to streamline the code and improve
add legacybaseblockwrapper for backwards compatibility
refactor IcebergBranchExec to use SnapshotRef for tag retrieval instead of Optional to improve code clarity and enhance error handling for missing
replaced ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to simplify the code and improve performance
added boxesSsboBinding and frameNumber variables to HybridDemoSsboInstancing and PhotonMappingDemo classes ,
added validation for password change requirement in IdentityProviderEndpoints . java and updated tests in IdentityProviderEndpointsMockMvcTests . java to ensure proper handling
added a method to remove non - initialized fields from constructors in UnreadFields . java to ensure that uninitialized fields are not considered reflective
added handling for closed connections in JdbcExecutor . java to improve error messaging for SQL execution failures
added a new test method ` testRequiredBody ` to validate the presence of user data and user name in the SpringmvcClient to ensure
updated regex patterns for user and password in CredentialInjector . java and modified the JDBC URL in CredentialInjectorTest . java to ensure accurate matching of
added a new menu item " Item4 " and a key binding for the enter key in ActionListenerCalledTwiceTest . java to enhance functionality
updated print statements in TestCoreParser . java to include class name and modified assertion logic to improve clarity of output messages and ensure accurate assertion
simplenode . equals ( ) should compare id instead of child
changed the visibility modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the PopulatorContextStackItem
replaced ` numDocs ( ) ` with ` getDocCount ( fieldName ) ` in ` MoreLikeThis . java ` and added a new
refactor event triggering logic in QuestManager . java to improve code readability and maintainability
[ hotfix ] [ network ] make networkbufferpooltest extend from testlogger
updated the query to include an additional ' $ lt ' and ' $ gt ' condition in MongoSessionDataStore . java to ensure that the expiration
add miss unsafegetlong ( ) in compilerdirectivessubstitutions . java .
updated time zone entry for " Asia / Amman " from ARAST to EET across multiple language files to reflect the correct time
updated the ID value from 90000010 to 90000011 to reflect the new version of the deprecation logger
hhh - 11341 : handle jdbcexception in rollback only mode .
fix download external file with no extension ( # 3640 )
set apple . laf . usescreenmenubar to false on macos
[ ca ] add piecewise integration test for geogebracas
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a method to modify the ` modWhiteListPattern ` in ` HiveConf ` and a test case in ` TestJdbcWithSQLAuthorization
remove duplicate entry in invalidClasses map to improve data integrity by preventing duplicate entries
updated the target calculation to use the player ' s team instead of the sharded team to ensure accurate target detection based on the player ' s
updated Cookie . Builder to use domain from domainHelper instead of hardcoded " comp1 " to enhance flexibility by allowing the cookie domain to
added checks for nullable constraints in MissingColumnChangeGenerator and MissingTableChangeGenerator , and refactored nullable validation logic in ColumnSnapshotGenerator to
refactor multiple Java classes related to security token management to improve code organization and enhance maintainability
added delete query and document handling in CustomCollectionTest . java and made separator and bitsSeparator variables static in CompositeIdRouter . java to improve
added snapshot handling for bytea types in ExecutablePreparedStatementBase and introduced a new test for blob types in PostgreSQLIntegrationTest to improve compatibility with PostgreSQL
updated conditional checks for ` _ cache ` and ` _ gzipEquivalentFileExtensions ` in ` DefaultServlet . java ` to ensure proper handling of
fix ` ` open database ' ' and ` ` open library ' ' tab not work ( # 6373 )
updated ` ExecutionUnitRunner ` , ` CucumberTest ` , and ` ExecutionUnitRunnerTest ` to use ` Description . createTest
replaced ` isEmpty ( ) ` with ` isNotEmpty ( ) ` for ` myVersion ` and ` buildTimeString ` checks to improve code
changed method visibility from public to package - private in TimeUtils and TimeUtilsTest classes to restrict access to methods and improve encapsulation
updated initialization properties for ` jdk . reflect . useDirectMethodHandle ` and refactored security frame checks in ` RefectionMH
updated file extension checks in PreviewImageFragment . java from lowercase " jpg " to uppercase " . jpeg " to ensure consistency in file extension
[ gr - 11313 ] fix nativeimagedebuginfoprovider to return correct java name for hosted method .
added getIcon ( ) method to multiple Data classes and updated ClassDisplayed from NONE to NODE in DataTableTopComponent to enhance icon loading functionality and
modified the way the last name is extracted in CounterRequestAggregation . java to handle potential null values to improve robustness by avoiding unnecessary substring
updated the replacement logic in FindAndReplace . java to handle dollar signs and added a test case in FindAndReplaceTest . java to
do n ' t cast xmppconnection to smackpacketdebugger to avoid nullpointerexception .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method to copy source and destination directories and refactored the copyContents method in SpecWebAppTest to improve file copying functionality and
avro - 2249 . java : fix jacksonutils to throw an exception for unknown datum class .
replaced direct calls to ` buildAbiFromClasses ( ) ` and ` buildAbiFromSource ( ) ` with ` requireRule
simplified height adjustment logic for itemHeight and backgroundPadding in SelectBox . java to improve code readability and maintainability by elimin
added normalization of dbName and tableName in ObjectStore . java to ensure consistent handling of database and table identifiers
added support for oracle database and schema handling in DbSqlSession . java to ensure correct schema is used when using PostgreSQL
removed the unnecessary logout mechanism from HomeFragment . java to streamline the code by eliminating unnecessary logging
[ hotfix ] [ test ] fix the order of parameter in mockstreamingruntimecontext
added a null check for the candidates list in FastImportAction . java to handle potential null values to improve robustness by preventing potential NullPointerException
refactor managed bean check in ContainerLifeCycle . java and update assertions in ContainerLifeCycleTest . java to improve code clarity and ensure
rename iexecutionattributesdialect to iexecutionattributedialect for clarity
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is cleared before
cmdgettime : fix npe in case location be null
added null measurement check and improved exception handling in the DisruptorQueue and CachedSchemaPatternMatcher classes to enhance robustness by preventing
deleted the Session2Token . java file from the media package to remove unused class to streamline the project
server : destroy volume when fail to create or expunge a volume
added a new ` Install ` class and modified ` SystemShortcut ` and ` InstantAppResolver ` classes to support instant app installation functionality to enhance
added a NullAuthoritiesPopulator implementation to LdapAuthenticationProvider and updated tests accordingly to ensure proper handling of null authorities and improve test coverage
updated the method of obtaining the retrolambda jar path and added a check for the existence of the retrolambda jar to ensure that
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the code by removing unnecessary
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` and modified its implementation to handle ` IOException
added a call to handleNullResult in JMESPathExtractor . java to ensure proper handling of null results
added null and length checks for user authorities in AuthorizeTag . java to ensure proper handling of empty authorities list
refactor assertions in tests to remove dependency on DateTimeUtils and simplify date handling to enhance code readability and maintain consistency in date representation
server : fix typo in vmsnapshotmanagerimpl exception message
refactor configuration handling in RobolectricTestRunner to separate class and method configurations to improve clarity and maintainability of configuration management
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to utilize the new socket connector
refactor partition key comparison logic in HiveAlterHandler . java and add error handling in TestHiveMetaStore . java to improve robustness
added a new BooleanFlag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to enable the feature to show icons
removed unnecessary whitespace in SimulationStatus . java to improve code readability and maintain consistency
replaced ` SharedBlockingCallback ` with ` Callback . Completable ` in ` StandardDeployer ` and ` StandardUndeployer ` to
added workspace listener functionality to the PreviewControllerImpl class to enable dynamic graph building based on workspace changes
added checks for anonymous classes in ReflectionFactory and modified class name detection in ReflectUtil to ensure proper inflation behavior for non - anonymous classes and
refactor TransportHelper to improve code structure to enhance maintainability and readability of the code
updated file path construction in CatalinaAcegiUserRealm . java to ensure correct resource loading for XML files
updated log messages for server and action manager initialization in AmbariServer . java to improve clarity of log messages for better debugging and monitoring
added null checks for init and modify in JSONWriter . java and improved null handling logic to enhance robustness and prevent potential NullPointerExceptions
updated the ` SliderAppsViewControllerImpl ` to accept a ` FileSystem ` parameter and modified the ` run ` method to accept it to
added a check to ensure backgroundManager is not attached before attaching the window to prevent potential NullPointerExceptions when the backgroundManager is not attached
added tab switching functionality and improved child width handling in PagedView and Workspace classes to enhance user experience by ensuring proper tab navigation and adjust
added null check for the URL parameter in BaseDataSource and created a corresponding test case in SimpleDataSourceTest to ensure that a valid URL is provided
( chore ) camel - pebble : enable test on jdk 12
added EditNameDialog and modified directory creation logic in FileDisplayActivity . java to enhance user experience by allowing directory creation through a dialog
added support for toggling bar border width in multiple activities to enable dynamic adjustment of the bar border width based on user preferences
update OkCoinExchange to use " okex . com " instead of " okcoin . com " to ensure compatibility with the latest OkCoin
kristianrosenvold : add deciderscorecomparator to the test , so that it do n ' t depend on the
replace FileChannel with SeekableByteChannel for improved data handling to enhance performance and compatibility with seekable byte channels
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter and update its implementation to improve code clarity
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
simplified conditional checks for serialization types in SerializationConfigurationParser . java to enhance code readability and maintainability
added ActivityManager watch heap limit for debug devices in QuickstepProcessInitializer to improve performance monitoring for debugging purposes
refactor the sumWithCompensation method to store the value in a variable before applying it to improve code readability and maintainability by redu
http : / / issues . apache . org / activemq / browse / amq - 2635 - re - enable the test
do n ' t serialize top level deletion in precompactedrow if it be live
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
add meterregistrylifecyclecyclecyclecyclecyclecyclecyclecycl
[ 3.0 ] change log level from warn to info for config center error message
added exception handling for certificate generation in CertificateFactoryTest . java to ensure that exceptions are properly handled during certificate generation
camel - 16400 : camel - core - optimize simple predicate parser to handle ambiguous binary operator
simplified the ` onTabUnselected ` method in ` EditorActivity ` and added ` onFocusChanged ` in ` IDEEditor
add system . getproperty ( ` ` user . name ' ' ) to accesslogvalve log message .
updated file names and scaling factors in SkeletonModelGpuSkinningTest , OgreXmlLoader , and SkeletonModelViewer classes to
removed ` throws InterruptedException ` from the ` createOrThrow ` method signature to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotation to UpgradeResponse . java to indicate that the UpgradeResponse class is outdated and should no longer be used
added functionality to generate and store d . ts files along with the js files in the JavaScript output directory to enhance the transpilation process by
add a test for Kinesis fetch timeout in StreamConfigTest . java and modify fetch timeout logic in StreamConfig . java to improve test coverage and
add ` ` . html ' ' to the output of the streaming dataflow worker
increased the maximum number of metastore server threads from 100 , 000 to 1 , 000 to allow more thread for the metast
changed the return type of the ` onTaskSnapshotChanged ` method from ` void ` to ` boolean ` to allow the method to indicate whether
update shadow radius from mMaxShadowRadius to shadowRadius in SwipeUpAnimationLogic . java to allow dynamic adjustment of shadow radius during animations
http : / / issues . apache . org / activemq / browse / amq - 2635 - add test case for chain
updated loop condition from ' limit ' to ' end ' in MarketSellAssetActuatorTest . java to ensure that the loop does
do n ' t use isinternal ( ) to determine if the source be interactive or not .
updated the condition to check if previousCachedFilePath is null before comparing with cachedKeytabFilePath to ensure proper handling of null values and avoid potential
added DisplayController import and modified WindowManagerProxy instantiation to utilize DisplayController for improved display management functionality
updated toolTipText assignment logic for root directories in MetalFileChooserUI and SynthFileChooserUIImpl to ensure accurate tooltip text is
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize (
change the return type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > in Tensorflow
querydsl - core : add test case for fetch result with factory expression
removed unnecessary drag index check and print statement in FreeformFinSetConfig . java to streamline drag handling and improve code clarity
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to reflect the latest version of the mo
updated error message for constant canot set call value and added a call to spend all gas to improve clarity of error reporting and ensure all
update error message formatting in ` ElementsShouldSatisfy ` , ` ZippedElementsShouldSatisfy ` , and ` ElementsShouldSat
marked the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
register platform - specific unsafe plugin for amd64 and standard .
added @ Hint ( isDep = false ) annotation to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and AndroidBinary
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable the centering of pages in
move migrationinfo . doneprocessing ( ) before call it in migrationrequestoperation . rollback ( )
updated constants and variable names in KonnectedBindingConstants , KonnectedUPnPServer , and KonnectedHandler
updated attribute value types from Object to List in WSFederationClaimsReleasePolicy . java and added assertions in WSFederationClaimsReleasePolicyTests
refactor test table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to improve
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure proper parsing and deparsing of SQL
refactor copy mode handling in ConsoleActivity to use a dedicated method to improve code readability and maintainability
refactor ` writeXmlOutput ` method to accept a ` Writer ` instead of a ` String ` path to improve XML output handling and enhance
camel - 16400 : fixed npe in abstractlistaggregationstrategy when use custom aggregation strategy .
camel - 16400 : camel - core - optimize to reduce dependency on exchangehelper
move basicconfigurator from ` ch . qos . logback ` to ` ch . qos . logback . classic `
do n ' t assert phi _ node when compare type qualifier dataflow analysis .
added import statement for SharedStringSource in TestXSSFRichTextString . java to utilize SharedStringSource for improved string handling
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate the invocation of methods with trace information
renamed multiple classes related to box and whisker calculations and histogram datasets to improve clarity and consistency in naming conventions
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit5
changed the ` NormUpdate ` class to be static and updated equality checks in ` InstantiatedIndexReader ` , ` MemoryIndex ` , `
changed the visibility of the singleton instance and the constructor of IndexFileNameFilter from public to private to enhance encapsulation and restrict instantiation of the singleton
refactor IfStatementTest to utilize PluginDefinition and BooleanExpression for improved clarity and functionality to enhance test reliability and maintainability
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
refactor the ` nullSafe ` method in ` TypeAdapter ` to simplify null handling to improve code readability and maintainability by reducing
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new file EXIFReader . java and modified ImageProcessingService . java to incorporate metadata processing for Exif images to
change the return value of the toStandardUnit method from UNKNOWN _ TO _ SDK _ VERSION to NONE in CloudWatchMeterRegistry . java and add
[ drools - 7 ] apply pmml model only when the request parameter be not the class of the pmml data type ( # 3
improve the error message in fluentprotocol to be more descriptive .
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 21212 ] do not emit label range when aarch64 branch target index out of bound .
added a try - finally block around the initialization of the JDK log manager in JDKXRLogger . java to ensure that the initPending variable
added a find method to TicketCatalog and updated ticket retrieval logic in DefaultTicketCatalog and HazelcastTicketRegistry to improve ticket retrieval efficiency and enhance
refactor SSL connection parameters and assumptions in TestSSL . java for improved readability and structure to enhance code clarity and maintainability
[ hotfix ] [ runtime ] fix thread safety issue in sortmergesultpartition
( chore ) camel - jms : use long . max _ value in read / write constructor
updated PluginHandleController , PluginHandleDTO , PluginHandleService , PluginHandleQuery , and PluginHandleService to include a type parameter to enhance
added ` start ( ) ` to span creation methods in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` classes to ensure span
added configuration options for drawable color format , depth format , stencil format , and multisample in IOSApplicationConfiguration and IOSGraphics classes to
refactor login attempts in LoginIT . java to use a new attemptLogin method to improve code readability and maintainability by consolidating login
[ pytorch ] add support for complex ( ) and real ( ) in pytorch api ( # 1193 )
removed the ` isInterrupted ( ) ` condition from the while loop and replaced it with a ` while ( lockName = = null ) `
refactor Implements and ShadowPicker classes to improve code readability and maintainability
updated HttpClientOptions to use a new method for creating HTTP2 client options to improve code readability and maintainability by centralizing HTTP2 client
added support for DynamicArray type in DynamicStruct and improved error handling in SolidityFunctionWrapper to enhance type safety and provide clearer
updated ` getStringProperty ` and ` getFloatProperty ` to include a ` true ` parameter in ` InlineLayout ` and ` FontUtil ` classes
added new constructors to the CopyStep class and a test method in CopyStepTest to enhance functionality and ensure correct path handling in the CopyStep
fixed - rsemaphore . acquire ( ) and rsemaphore . addpermits ( ) method throw classcastexception
camel - 16400 : camel - dsl - optimize to reduce stack frame in use during test .
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
changed ` List < String > ` and ` List < String > ` types from ` List < String > ` to ` List < ByteString >
added a null check before printing results in TestElementsAnnotatedWith . java to avoid potential NullPointerException when resultsMeta is empty
refactor the removal logic in ConcurrentLinkedQueue and add a new RemoveLeak class for testing to improve clarity and functionality of the removal
added a boolean parameter ` addSpecialTokens ` to multiple ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] [ runtime ] replace arraylist with collections . nCopies in taskManagerServicesconfiguration
update chunk data handling in LoadSingleTsFileNode . java to align chunk data structure to ensure correct data size is used for processing chunks
added session storage context to BrowserSessionStorage and updated DuoSecurityMultifactorWebflowConfigurer to utilize it to enhance session
add a test case to verify the schema validation of the JSP document parser
added a default constructor to the TypeAdapter class and modified the @ Ignore annotation in Java17RecordTest to disable the test until record support is
do n ' t send a kill event if the kill be prepare for execution .
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
add method to createresourcepolicy to allow custom rptype
added null check for _ deflaterEntry before releasing it in GzipHttpOutputInterceptor . java and modified assertions in BlockingTest . java to
added @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper cleanup of test resources after each test execution
updated the MD5 computation to normalize the value before computing it to ensure consistent formatting of the checksum by removing unknown Unicode characters
refactor command handling logic in Example . java to improve clarity and maintainability to enhance code readability and ensure proper command execution based on
bugfix # 203640 , add miss @ override annotation to basicprofilerstate and baseappstate
updated variable type from ` T ` to ` DBObject ` in ` MongoTemplate ` and added a new test in ` MongoTemplateTests `
added a method to check if an IP address contains multiple remote addresses and created a test for it to ensure proper handling of multiple remote addresses in
changed return type of getJobArgs from String to ObjectBuilder and updated related method calls to enhance type safety and improve job argument handling
refactor IP address retrieval logic in CookieManagerTest . java and UnmodifiableMaps . java to use a static method to improve code readability
refactor glyph handling logic in GlyphLayout . java and add a new test case in BitmapFontTest . java to improve code clarity and
added pauseOrResumeSplits method to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase classes to enable handling of
added a new configuration variable HIVESCRIPTIDENVVAR in HiveConf . java and updated ScriptOperator . java to utilize it to improve
refactored the ` getListedTermCounts ` method to use ` Stream ` for term counting and improved sorting logic to enhance performance and
added a new file ` UseSeparateStepSizeAction . java ` to implement a menu option for using separate step size in the JO
added user - specific unlock functionality to the FileMenuFilter class to enhance user experience by allowing file selection based on user ' s unlock status
hbase - 11341 fix split ( ) method in roundrobintableinputformat ( # 399 )
updated header values for Sampled in HttpClientRequestAdapter and HttpClientRequestAdapterTest to ensure consistent sampling behavior for HTTP requests
pdfbox - 4892 : use ioutils , a suggest by valerybokov
added fullscreen functionality and viewport management in GwtGraphics . java and GwtApplication . java to enhance user experience by enabling fullscreen
updated parameter name from " login " to " identifier " and modified the ` normalizeResource ` method to return ` URI ` to improve clarity
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of Apache Dubbo to ensure
updated file path references from ` Gdx . files . internal ` to ` resolve ` in ` SkinLoader . java ` to improve consistency
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK . lock
updated package declaration in Compiler . java to improve organization and clarity of the code structure
[ wasm ] fix nullderfandredundantcomparisonfinder to handle exception
use defaulthttpdatasource in dashrendererbuilder instead of manifestfetcher
added a configuration property for the maximum number of prepared statements per connection in the execution scheduler to allow users to configure the maximum number of prepared statements
changed return type of set methods from WritableConfig to Configuration in multiple configuration classes to improve type consistency and align with updated API standards
removed the checkErr method from AutoScalingHandler . java to streamline error handling by eliminating unnecessary error checks
refactor CombinedDataset class to improve code structure to enhance maintainability and readability of the code
updated variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve code clarity
add methods to remove cryptography restrictions and update permissions accordingly to enhance security by restricting access to cryptography permissions based on the Java runtime environment
fix nether portal not be spawn after teleportation .
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure proper handling of
added a null check and initialization for the vectorization context in Vectorizer . java to avoid potential NullPointerExceptions when accessing vectorization contexts
fix wialon speed issue ( fix # 3995 )
hbase - 20536 disable metric user by default in hbase - client - clustermetrics ( addendum )
added a ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
updated boolean variables from ` mUserPresent ` , ` mVisible ` , and ` mAttached ` to ` mAttached ` and modified the
refactor AsyncFile , HttpClientRequest , HttpClientResponse , HttpServerRequest , HttpClientResponse , NetSocket , and ReadStream classes to improve code organization
added params to the zadd method call in PipelineBase . java to provide additional parameters for client operations
[ ds - 3752 ] fix some code smell and add miss @ override annotation
rename testasyncmessages to testasyncmessagesperformance to avoid false failure .
added a method to retrieve Optional < TargetNode > and refactored target handling logic in VersionedTargetGraphBuilder , VersionPropagatorBuilder ,
updated epoch seconds constants and conditional checks in TimeZoneProvider . java to improve accuracy and clarity of time zone representation
updated the return value in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java to improve
removed redundant initialization of row and column variables in JSONParser . java to streamline code by eliminating redundancy
replaced ` JavaType . FullyQualified ` with ` Pattern ` in ` FindTypes . java ` and ` JavaType . java `
updated DETAIL _ THUMB _ HEIGHT and added ACTION _ PLAY _ TRAILER in BaseItemDetailsFragment . java to
added a method ` removeGlyphInfoFromCache ` to ` CStrikeDisposer ` and modified the way long pointers are freeed to improve
act - 163 : fix process instance deletion in terminateendeventactivitybehavior and terminateallbehaviour
camel - 16400 : fixed typenamestrategy to work with jaxb 2.0 . 0
updated the endpoint in the test from " http : / / www . apereo . org " to " https : / / www .
reset all preference to default value for ` ` prdef ' ' option
hbase - 20536 make thriftserver . createthriftmetrics ( ) protect instead of private ( addendum )
[ danfossairunit ] remove deprecate channel ` ` manual _ fan _ speed ' ' ( # 10399 )
( chore ) camel - test : use hamcrest assertion instead of junit in examples / camel - jetty ( # 1
removed duplicate code for stopping expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null checks and equals and hashCode methods in PartitionPanel and PartitionFactory classes to ensure proper handling of index values and avoid potential NullPointerExceptions
server : fix npe in listvirtualmachines api when root disk size be not specify
updated PredictionRowView to conditionally show suggested apps in the drawer based on user preferences to enhance user experience by allowing selection of suggested apps
[ geos - 9441 ] bbox parameter can not be null or empty , add a new apibboxparser . tofilter ( )
added methods to validate value and position parameters in LibrustzcashParam . java and updated the IVK value in Librust
deprecate ithrowableentity in favor of fml . mods . fml . common . registry
added random value generation for ' x ' and ' y ' in NodeDataImpl . java to ensure uniformity in the positioning of the node
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should
refactor variable declarations in JavacStep . java to use try - with - resources for better resource management to improve code readability and
updated the version number from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release version
added a condition to check if the item type is DEEP _ SHORTCUT in LoaderCursor . java to ensure proper handling of deep shortcuts
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent hashing behavior for instances of TimeGranularitySpec
changed visibility of BooleanWeight and DisjunctionMaxWeight classes from private to protected and added similarity and weights fields to enhance accessibility for subclasses and
added a boolean flag ` useProxyResponseCode ` to control proxy response code behavior in ` HttpURLConnection ` to ensure proper handling of NTLM
aarch64 : move scratch register in aarch64move and aarch64macassembler .
server : fix npe in listvirtualmachines api when host be not in reserve / used capacity
added a null check for the maximum score in JSONResponseWriter . java and updated the query in TestDistributedSearch . java to ensure that
updated audio recoding parameters from 22050 to 44100 to improve audio quality for better performance
updated the calculation of newOriginX in RocketFigure . java to improve accuracy of origin adjustment based on subject dimensions
updated null and empty check for dataSource in DruidQueryBasedInputFormat . java to ensure data source is valid and provide a default interval
added a new constant ORIGINAL _ TYPE and updated the regex pattern in CustomProperty . java to include the original type to enhance functionality by
added a static factory method ` create ` to the ` Index ` class to provide a convenient way to create an instance of the ` Index `
refactor return statement to directly use checkLowerBoundaryPeriod and checkUpperBoundaryPeriod to improve code readability and maintainability
updated compatibility handling in SchemaCompatibility . java and added new tests in TestSchemaCompatibility . java to improve schema compatibility checks and enhance test coverage for
added persistent attribute type management and updated join logic in QueryUtils . java to improve handling of entity paths and enhance query functionality
added synchronization to the ` spans ` list and methods in ` TestSpanHandler ` to ensure thread safety when accessing shared resources
changed generic type parameters in several ` getText ` methods from ` List < Object > ` to ` List < ? > ` across multiple classes to
updated exception handling in ViewContextImpl to differentiate between InvocationTargetException and other exceptions to improve logging clarity and provide more detailed error messages during authentication
refactor OAuth2AccessTokenEntity to improve code readability to enhance maintainability and facilitate future feature additions
updated error messages in SCBEngine and TestInvocationFactory to clarify request rejection due to STATUS = DOWN to improve clarity of
added new project files for iOS data and moe resources in GdxSetup . java to enable support for iOS - specific image formats in the
updated imports in TestSearcherManager . java to replace ArrayList and ArrayList with ConcurrentMergeScheduler to improve performance by utilizing a concurrent merge scheduler
added null checks and improved list handling in GenericUDTFInline . java to enhance robustness and prevent potential NullPointerExceptions
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ggb - 1353 prevent the spreadsheet key event to be fire .
hhh - 11341 - hibernatebundleactivator . stop ( ) should remove the osgi bundle from the context
fix bug where connectiontimeout be not account for elapsed time .
create non - packaged resource file for voice component .
updated file name handling in Compat . java and modified file opener logic in FileOpener . java to improve clarity and correctness
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to allow the method to
check port clash in -- p2p - port and -- p2p - port option
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 instantiation to enhance WebSocket connection management by allowing null masking
modified the return type of ` genUDTFPlan ` from ` RelNode ` to ` Pair < RelNode , RowResolver > `
[ java ] add nodeselectionstats to track the number of bucketed node select .
add a new file ` Person . java ` with a class ` Person ` with methods for setting and getting a name to provide a structure for
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to improve code clarity and
added clock functionality and animation handling in PlaybackOverlayFragment to enhance user experience by providing a visual representation of clock state
remove call to world . updatecomparatoroutputlevel , it ' s not need anymore .
changed the ` IMPL ` variable from ` final ` to ` static ` and modified exception handling in ` SegmentReader . java ` to improve
added SwingUtilities . invokeLater to fireCellUpdatedEvent in Sudoku . java to ensure UI updates are performed on the Event Dispatch Thread
replaced ` DefaultInetAddressAdapter ` with ` CollectionTypeAdapter ` in ` DefaultTypeAdapters . java ` and updated type adapter factory
added new methods ` doubleValue ( ) ` , ` longValue ( ) ` , ` booleanValue ( ) ` , and ` stringValue ( ) ` to
replaced the option " -- no - audio - time - stretch " with " -- audio - time - stretch " in VideoManager . java
updated boundary conditions in GeoRelationUtils and GeoUtils , and modified GeoRect construction in GeoPointQuery to improve accuracy of georelation
server : fix npe in listvirtualmachines api when service offer be not find .
shutdown all hazelcast instance before each test to prevent memory leak
added tests for AES / 2 / NoPadding and AES / 9 / NoPadding algorithms in BlockCipherTest . java to ensure proper handling of
added filters for printing operations logs in QFileClient to improve clarity and control over logging output
fix aop proxy generation when type parameter be declare in abstractbeandefinition . fix # 3990 ( # 3991 )
fix initial reconnection issue with ipv4 sip provider have ipv6 dns record .
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to improve code read
refactor ImageOutputStream creation to use try - with - resources for better resource management to ensure proper resource management and avoid potential NullPointerExceptions
replaced direct calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct calls to ` startActivity ( intent
removed the ` this ` keyword from ` schemaCrawlerOptions ` in ` SchemaCrawlerCommandLine ` , ` GrepOptions ` , and ` Mutable
http : / / issues . apache . org / activemq / browse / amq - 2635 - add support for osgi
added ` @ Autowired ` annotation to ` PersonRepository ` in ` RepositoryIndexCreationIntegrationTests . java ` to ensure proper dependency injection
changed the exception type from ` Exception ` to ` InterruptedException ` in the ` stop ` method in ` UIServer ` and updated the log message
fix cactus switch / cases indentation see http : / / github . com / codenameone / codenameone / issues / 2
refactor mouse handling in ThemeSelector to use MouseMotionListener to improve responsiveness to mouse events during theme selection
[ java ] extend abstractminmulticastflowcontrolrhspadding from abstractminmulticastflowcontrolfields to abstractminmulticastflowcontrol
added alignment and verticalAlignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enable flexibility in text editing
modified the constructor of StatTokSentAnnotator to throw an IllegalArgumentException if the tokenization model is not specified to improve error handling by providing clear
added a check for distinct queries in ` ClusterIntegrationTestUtils ` and modified ` HavingQueryFragment ` and ` LimitQueryFragment ` to
[ gr - 11313 ] provide a way to find the closest native linkage by name and descriptor .
move jsyntaxtextarea . properties to a separate package to improve code organization and maintainability
added null check for children in PartitionPruner . java to prevent potential NullPointerException when children is null
added new fields ` tokenPosition ` and ` currentPosition ` to ` MessagePackParser ` and implemented ` overrideCurrentName ` in ` MessagePack
added locale management to AbstractSolrMorphlineTestBase to ensure consistent locale settings during tests
simplified size calculation in LauncherFragment . java to improve code readability and maintainability
added unit tests for MetricsReporter class to ensure proper functionality and coverage of metric registration methods
( chore ) camel - osgi : remove unused cache
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for Rectangle objects
[ hotfix ] [ test ] use random sink list name in streamkafkaptest
updated DSAParameterGenerator to validate prime strength conditions and replaced BigInteger . ONE with BigInteger . ONE to improve code clarity and ensure consistency in
added configuration for using FQDN of the AM machine when submitting work to LLAP and refactored related methods to improve clarity and
fix clientoutofmemoryhandlertest by wait for shutdown to complete
added a new method ` getCmoObjectId ` in multiple shape classes and updated the ` setObjectId ` method to use this new method to improve
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of a distinct query
refactor driver , searchTravRetLoadFieldSelectorTask , and SearchTravRetTask classes to improve code organization and maintainability
added bind and unbind methods for ExtensionAdapter in ManagedKubernetesClient . java to enable dynamic binding and unbinding of extensions in Kubernetes client
updated subtitle display logic in DetailsDescriptionPresenter to use a new utility method to improve code organization and enhance readability of subtitle information
updated JUnit annotations from ` @ Before ` and ` @ After ` to ` @ BeforeEach ` and ` @ AfterEach ` in `
do n ' t swallow exception when generate summary html
replaced calls to ` intPool . reset ( false , false ) ` and ` bytePool . reset ( ) ` with direct calls to
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
added a new ` WindowSessionDelegateU ` class and modified the ` apiLevel ` check in ` ShadowWindowManagerGlobal . java ` to
refactor scheme handling in UrlHelper to include a check for the request scheme to ensure correct port assignment based on the request ' s scheme
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQL database behavior
hbase - 20536 fix checkstyle violation in hbase - replication
added a new ` FilterEventHandler ` class and modified ` ContainerEmzuliPipe _ BC8 ` , ` PipeBehaviourEmzuli
simonstewart : make the htmlidentifier logging configurable
updated schema references from ` getProducedTableSchema ( ) ` to ` getTableSchema ( ) ` in ` HiveLookupTableSource . java
add listenerset . setthrowswhenusingwrongthread ( ) and improve doc
updated schema name handling in SequenceSnapshotGenerator to use CatalogAndSchema to improve flexibility in schema name retrieval
updated color calculations in SpriteBatch and SpriteCache , replaced ProgressiveJPEGTest with AlphaTest , and modified pixel handling in AlphaTest
fixed - rconnection . getfuture ( ) . join ( ) method return wrong value . # 3998
added base URL handling in SolrLoggerServiceImpl . java and updated statisticYearCores to include base core to ensure consistent handling of HTTP and HTTPS
renamed the method ` launchTask ` to ` launchTaskFromView ` and introduced a new method ` launchTask ` to improve clarity
refactor MorfologikFilter and MorfologikFilterFactory to use DictionaryHolder and improve dictionary resource loading to enhance flex
updated sort options for CommunityRating and CriticRating in GridFragment . java to improve sorting functionality for better user experience
added imports for ViewKt and ListRow , and modified visibility logic for header item in CustomListRowPresenter to ensure proper visibility handling for
refactor client type switch to use a try - finally block for better resource management to ensure thread safety and prevent potential race conditions during client initialization
refactor HttpClient class for improved performance to enhance efficiency of HTTP request handling
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in ` CatalogAndSchema ` and ` CatalogComparator
added support for jsr310 java time module ( jsr310 - > jsr310 - > jsr310 )
replaced Apache Log4J ' s MDC import from ` org . apache . log4j ` to ` org . slf4
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve code clarity
removed unnecessary whitespace in CoinbaseTransactionStatusDeserializer . java to improve code readability and maintain consistency
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified ` ProjectCommand ` to conditionally force building with ` B
added a call to System . gc ( ) and changed the initialization of the idleStrategy to BusySpinIdleStrategy to improve resource management
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and updated related logging statements to improve consistency and align with
removed unnecessary conditional checks for state changes in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix nullpointerexception in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` to remove calls to ` System . gc ( ) ` and ` Runtime
removed duplicate super ( ) calls from multiple exception classes to improve code cleanliness and maintainability
added a method to set the UIID in ScaleImageLabel to enable customization of the icon for the label
replaced ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to streamline the code and improve clarity by
updated argument handling to support both " - classpath " and " - cp " options to enhance flexibility in command - line argument processing
updated the compiler option from ` options = { ' ' default ' ' } ' ' to ` compiler = { ' ' default ' ' }
do n ' t set ` ` initialized ' ' to ` ` true ' ' by default
updated Test7196045 . java for improved functionality to enhance performance and maintainability of the code
updated density and decay values in ShaderParametersLightShaft . java from 1.5 f to 1.0 f and 0.95
added properties ` withState ` and ` stateData ` to ` OidcConfiguration ` and updated related methods in ` OidcRedirectActionBuilder
updated unique constraint handling in BaseTableDdl . java to include null and nullable checks to improve clarity and functionality of unique constraint management in
added federated share capability checks in UsersAndGroupsSearchProvider . java and EditShareFragment . java to ensure proper handling of federated sharing
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy . java ` to provide a default implementation for
updated error handling and formatting in BufferAlignmentAgent , BufferAlignmentInterceptor , and StringWriterOutputManager classes to improve clarity of error messages and enhance
added a method ` intForEach ` to ` Int2ObjectHashMap ` and updated imports in ` IntObjConsumer ` and ` Int2
fix scoreboard share issue in worldserver ( # 3649 )
changed return type of count methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository classes
updated MTree snapshot creation logic to check for time difference and interval before creating MTree snapshot to improve accuracy of snapshot creation and provide clearer
refactor dot product score calculation in VectorUtil . java and add new assertions in TestVectorUtil . java to improve accuracy of dot product score
added methods to set and get the latest confirmed block number in DynamicPropertiesStore and Manager classes to improve block confirmation management and ensure accurate tracking of
refactor locale handling in GpsMainActivity , MainPreferenceActivity , and Systems classes to improve locale management and enhance logging capabilities
added a new method ` wasNewDbCreated ( ) ` to the ` LauncherProvider ` class and modified the ` LauncherClings
sec - 1392 : remove object from collection in basicaclentryafterinvocationcollectionfilteringprovider . remove ( )
refactor conditional logic in Constants . java for clarity to improve readability and maintainability of the code
added a check to ensure the current thread is not the same in TestIndexWriterDelete . java to prevent potential issues with concurrent access to the
changed the visibility of the closeDatabase method from private to protected to allow subclasses to access the method for better extensibility
updated imports and references from apiclient to sdk in FullDetailsActivity . java and BaseRowItem . java to ensure compatibility with the latest
added attribute handling for SVG elements in BatikSVGDrawer . java to ensure proper processing and assignment of SVG attributes
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error handling and logging clarity for user configuration parsing
added handling for " WaitForResult " in AndroidImplementation and CodenameOneActivity to ensure proper behavior based on the " WaitForResult " flag
refactor HitQueue , SpanPositionQueue , PriorityQueue , TopOrdAndFloatQueue , TopOrdAndIntQueue , and TermAutom
added functionality to display widget description in WidgetCell . java to improve user interface by displaying widget - related information
added a validation check for the maximum registered attribute count in the Attribute class to ensure that the attribute count does not exceed the defined maximum and prevent
move predicatestest to impl . predicates package ( # 13063 )
camel - 16400 : added option caseinsensitivity to defaultheaderfilterstrategy . thanks to daniel for the patch .
refactor inline handling logic in InlineLayout and Breaker classes to improve clarity and functionality to enhance the handling of unbreakable strings and
added null checks and improved resource loading in ShareUserListAdapter . java to enhance robustness by preventing potential NullPointerExceptions
refactor ` shouldInstrument ` method to streamline package and exclude checks for Android SDK to improve code readability and maintainability by consolidating
added a condition to check if the association is an insert destination before the source in BrowserContentPane . java to ensure that the correct column size
test : fix cmdmodifiertest . testcgroupmemorylimitinbytes ( ) for cgroup 2
replaced instances of ` CxxDeps . of ( ) ` with a new constant ` EMPTY _ INSTANCE ` in ` AbstractCxxDeps
added a null check for the rule object in JavaTestRule . java to improve error handling and provide clearer feedback when the rule is not
add 1.10 . 2 and 1.10 . 3 proxy for minecraft 1.10 .
remove unnecessary check for negative atIndex in StringUtils . java to simplify code logic for better readability and maintainability
increased timeout duration from 100 milliseconds to 500 milliseconds and adjusted sleep duration from 1000 milliseconds to 5000 milliseconds to allow more time for tests to
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to enhance flexibility in managing assist content requests
updated readableWitnessAddress to use encode58Check instead of createReadableString and added null check for the account to ensure proper encoding of the witness
refactor DefaultMethodRegressionTests to improve test coverage to enhance reliability of method regression tests
refactor WorkloadManagerMxBean to improve code structure to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to align exception handling with the
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear ( ) method to ExceptionThrowingTaskletStub and multiple test cases in FaultTolerantExceptionClassesTests to enhance exception
[ beam - 11341 ] improve error message for configbuilder . deploy ( )
added ` extraProperties ` parameter to several ` applyTunerConfigs ` and ` applyTunerConfig ` methods across multiple classes to support additional
added logic to track in - progress instances of realtime segments in PinotRealtimeSegmentsManager to ensure only one instance is added to the
added a condition to return null if the table is not touchable and the touchable is disabled to prevent processing when the table is not touch
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw a retryable exception if cache config can not be create
added a method to check if a node package is installed before installing modules in JSweetTranspiler . java to improve clarity and
added Managed annotations to MBeanContainer and Destroyable classes to enhance management capabilities for MBeans and destroy components
modified the conditional check from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in ` LongClickableSpan
updated string equality checks to use ` equals ` method for better readability to enhance code clarity and prevent potential ` NullPointerException `
updated isReifiable check and added new classes T6558559a and T6558559b to improve type safety and
add some more information to the worldeditlistener to help debug .
camel - 16400 : camel - kafka : do not use thread pool when submit kafka fetch record .
removed the default implementation of the examples ( ) method in Schema . java to streamline the code by eliminating unused functionality
refactor thread termination logic in AgentRunner . java to improve clarity and structure to enhance readability and maintainability of the code
remove the time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of time columns in aggregation and
simplified conditional statements in FacetComponent . java to improve code readability and maintainability
replaced ` linker . getParseTimeDeps ( ) ` with ` CxxPlatforms . getParseTimeDeps ( cxxPlatform )
added ' name ' property with getter and setter methods in JaasAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes to provide
do n ' t throw runtimeexception when a graph printer can not connect to the igv
refactor scan range handling in BaseQueryPlan and add small scan threshold configuration in QueryServices and QueryServicesOptions to improve code clarity and
added " routeId " to the returned retry string in RetryGatewayFilterFactory . java to provide more detailed information about the retry process
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
replaced direct calls to ` onOverviewShown ` with direct calls to ` DiscoveryBounce . showForOverviewIfNeeded ` and introduced delay functionality
refactor conditional checks in CheckIndex . java and add a new test method in TestPointValues . java to improve code clarity and ensure
updated the ` publish ` method to use ` updateLastState ` instead of ` true ` to ensure that the state updates correctly reflects the
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper formatting of SQL strings
replaced the method ` exp . add ( 0 , null ) ` with ` exp . add ( 0 , null ) ` in ` Split
danielwagnerhall : adding condition . text ( ) , condition . exacttextcasesensitivity ( ) , and
replaced ` do ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code readability and
# 1186 - enh : add query . forwardonlyfetchsize ( ) ... for use in mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler . java to avoid sending a 404 error when the channel is already closed to the
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
updated window radius initialization in QuickstepAppTransitionManagerImpl . java to support rounded corners on the launcher resources
replaced ` ShapeDrawable ` with ` View ` and updated layout parameters in ` DesktopTaskView . java ` to improve layout handling and
added a new UpstreamCheckService instantiation in UpstreamCheckServiceTest . java to facilitate the creation of the upstream check service
refactor logging statements in AbstractSession and AbstractSessionManager to improve readability and structure to enhance code clarity and maintainability by consolidating
replaced error handling with a return statement in ZooKeeperHiveLockManager . java to simplify the code by directly returning locks instead of throwing an
[ hotfix ] fix checkstyle violation in java . base
added a boolean flag ` containsCustomData ` to control the generation of mipmaps based on its value to ensure mipmaps are only
replaced double quotes with single quotes in assertions in DefaultMaskingFormatterTest . java to ensure consistency in character representation across test cases
added selectable property and methods to manage selection state in List . java to enhance functionality for managing selection state in the list
removed a condition that checks if the first value count is zero in LlapArrowBatchRecordReader . java to simplify the code by elimin
updated PolicyContext and JettyPolicy classes to improve file separator handling to enhance clarity and functionality of file path expansion in policy evaluation
replaced instances of HashSet with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance by using a more efficient data structure
refactor TLSRestrictions class for improved clarity to enhance maintainability and readability of the code
log4j2 - 1343 use daemon thread for kafka producer . close ( timeout , timeUnit )
updated the assertNodeStateProvider method to include an ignorableNodeValues parameter to enhance node state management by ignoring specific node values
added a check to delete the " LOCK " file if it exists in the workspace to ensure proper resource management and prevent potential memory leaks
replaced direct instantiation of NIOServerCnxn with InetSocketAddress in MiniZooKeeperCluster . java and updated port assertion in TestHQuorum
added a new method ` getResponse ` to handle HTTP connections in ` RestClient . java ` to improve connection handling and logging for better debugging and
updated the method to use ` segmentTarURIStrs . toArray ( new String [ 0 ] ) ` instead of ` segmentTarURIs .
updated student login password from TEST _ STUDENT2 _ ACCOUNT to TEST _ STUDENT1 _ PASSWORD to enhance security by using a
added a null check for mCurrentItem ' s getItemId ( ) in EnhancedBrowseFragment . java and StdBrowseFragment . java to ensure
reduced the number of strings from 500 to 100 in TestSpecialOperations . java to optimize memory usage and improve performance
updated ByteArrayInStream initialization and removed hexToBytes method to streamline code by eliminating unnecessary hex conversion logic
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a method to check if a transition is a direct substate and updated the listener ' s statesEntered count to ensure proper handling of
added equality checks for ListMultimap and SetMultimap in MultimapSubject . java and created corresponding tests in MultimapTest . java to ensure correct
added JoinOperation interface to PostJoinOperation class to enable support for joining operations in the application
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to verify PostgreSQL test execution to ensure
resolve http : / / issues . apache . org / activemq / browse / amq - 5035 - fix intermittent
updated AvaticaDatabaseMetaData . java for improved functionality to enhance performance and accuracy of database metadata handling
updated MongoDbConnectionPoolProperties to use DurationCapable instead of int for lifeTime , idleTime , and maxWaitTime to enhance flexibility
fix npe in siputils . createaudioproducemediaformat ( ) due to miss call to mediaservice . get
refactor filter handling methods to return a boolean indicating whether filters were applied to improve clarity and control over filter application logic
added functionality to enable or disable timeout handling in ShuffleHandler to improve user control over timeout behavior during idle states
updated the initialization of ` mQuickStepStartingRotation ` to use a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED `
camel - 16400 : camel - xpath - add more log to xquerybuilder and deprecate the old one .
use class . getresource ( ) instead of getclass ( ) . getresource ( ) in nndataset
[ net . sourceforge . pmd . cpd ] added edge case tokenizer test
added a validation check for the " atlas " property in AtlasTmxMapLoader . java to ensure that the map contains the " atlas "
( chore ) camel - core : remove the deprecated property placeholder helper
added database closing and refactored Kafka message handling in BlockchainTest . java and KafkaTest . java to improve resource management and streamline
refactor CoreMarkdownNodeRenderer to use a new method for extracting lines from a literal to improve code readability and maintainability by encapsulating
int - 1640 fixed checkstyle violation in webserviceinboundgatewayparsertests . java
replaced ` ImmutableList . Builder < Object > ` with ` List < Object > ` for argument handling in SQLBindings and related classes to improve
added a check for OpenJDK vendor in the VirtualMachine class to ensure compatibility with additional Java vms
added a keep - alive option to the ReactorClient configuration to improve client connection stability by enabling keepalive
replaced hardcoded strings with constants from ShaderProgram . POSITION _ ATTRIBUTE and ShaderProgram . TEXCOORDS _ ATTRIBUTE in MD
camel - 16400 : camel - core - optimize to reduce stack frame in use during startup .
updated null check logic for AccountCapsule in UnfreezeBalanceActuator . java to ensure robustness by preventing potential NullPointerException
update version number for 3.8 . 0 to 3.8 . 1 . alpha .
refactor return statements to return unannotatedType ( ) instead of t to improve type handling by explicitly returning the unannotated type
updated assertions and added sequence timestamp configuration in StorageGroupProcessorTest . java to ensure correct processing of work sequence TsFile processors and reset sequence timestamp
added a new ` DumpableCollection ` parameter to the ` dumpObjects ` method and updated the ` Environment ` class to utilize it to
added a parameter to wait before start in FFMpegVideo . java to improve responsiveness during video playback
removed the ` _ skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related methods to simplify the constructor and eliminate unnecessary
updated import statements and added a new test method for list index bounds in AccessorsTest . java to improve code clarity and ensure proper functionality
add framemap ( ) to lirgenerator to allow access to framemap from lirgenerator
updated JUnit annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and RunningContinuousIntegrationCondition
fix boat not be able to place on water . close # 163
modified the ` toString ( ) ` method in ` Directory ` and added a new ` getLockID ( ) ` method in ` RAMDirectory `
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to streamline the code by eliminating unnecessary
added new methods ` then ` and ` then ` for ` AbstractPathAssert ` , ` AssertDelegateTarget ` , and ` AssertProvider `
rename variable ` hp ` to ` hostField ` in ` ForwardedRequestCustomizer . java ` and update port handling in ` Forwarded
updated logging level from debug to warn for multiple Kubernetes config files and modified the KUBECONFIG path format to improve logging clarity and ensure
added functionality to manage OCFile upload status in FileUploadService and UploadListActivity to improve handling of file uploads and enhance user experience by
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to implement ` ProviderLoaderListener ` instead of ` ProviderInstaller
updated imports and references from ` Span ` to ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests
updated the SelectFromDatabaseChangeLogStatement instantiation to use a ColumnConfig for ordering to enhance flexibility by allowing the ordering of columns based on
hhh - 11341 fix compilation error in postgresql dialect
do n ' t ceil partition per member when there be no data member
added a check to ensure the scheduler is not already started before starting it and introduced a new method to determine if it has already been started to
removed unnecessary toString ( ) method call from InlineBox constructor to simplify code and improve readability
reformatted argument checks in StatisticMap . java for improved readability to enhance code clarity and maintainability
updated the return value of the getStagedRectSlideEnd method from 383 to 500 to increase the slide duration for better UI responsiveness
updated button labels and command table entries in WaveInfoDialog and PlacementFragment to use localized strings instead of hardcoded strings to improve localization support and
updated condition in BukkitMain . java to include plot area ' s getOwnedPlotAbs method to ensure proper handling of plot area
added a test for setting touch exploration enabled and refactored listener handling in ShadowAccessibilityManager to improve test coverage and enhance listener management
pdfbox - 5328 : fix arrayindexoutofboundsexception in cmapsubtabletest
use getname ( ) instead of getpropertyasstring ( ) for setname ( )
refactor to use POIFSFileSystem . create ( big ) instead of new NPOIFSFileSystem ( )
updated the method to retrieve the plot area by its ID and added null checks to improve robustness by preventing potential null pointer exceptions
updated regex pattern for version matching in TestWebHCatE2e . java to ensure compatibility with the latest version of the webhcat
updated the condition to check if ` count ` is less than or equal to ` count < 1 ` to ensure that the count does not exceed
fix ( kafka ) : add client id to kafka consumer processor
added error handling for javac execution in JavacCompiler . java to improve robustness by throwing exceptions when the execution fails
ggb - 1396 do n ' t repaint view when close option .
( chore ) camel - spring : fix checkstyle violation
added a method ` isAnimationFinished ` to the ` Animation ` class to check if an animation has finished to provide a way to determine if
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` in ` LoginMockMvcTests . java ` to ensure
added null check for ` otherUrl ` in ` TimeLineCursorAdapter ` and modified the refreshing text in ` HomeFragment ` to enhance
ggb - 2266 fix problem with space in input box .
refactor ObjectHashSet class for improved performance to enhance efficiency of hash set operations
updated null checks in DataUtilities . java for consistency and clarity to improve code readability and maintainability
fix mc - 12770 , allow for deletion of enchanted books in creative gui .
test ( microprofile ) : add test for async resource
rename header map suffixes from " - target - flat " to " - target - user " in ProjectGenerator . java and ProjectGeneratorTest .
added error handling for SendFailedException and improved subject formatting in MailService . java to enhance debugging capabilities and provide clearer feedback on email sending
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` TaskItem
added unit tests for ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct behavior of
added a new line to the FileListListAdapter class to improve code readability and maintainability
replaced ` ArrayList ` with ` List ` for ` fileId ` and ` sharees ` in ` OCFile . java ` and `
update the index used in the removeViewInLayout call from getChildAt ( child count - 1 ) to getChildAt ( child count - 2
removed " org . eclipse . jetty . websocket . util . server . internal " from the hide list in JavaxWebSocketConfiguration
changed the second parameter of the S3Request constructor from true to false to align the constructor with the intended behavior of the S3Request
update animation when the timeline be null in jfxradiobuttonskin .
updated DeweyNumber . java to handle zero splits correctly and added an exception for invalid inputs to improve error handling and provide clearer error
updated categorySetString handling in MwVolleyApi . java to replace " Category : " with an empty string to improve clarity and
replaced " Invalid close control status code 1111 " with " Invalid close code 1111 " in WebSocketClientTest . java to clar
added null check for classLoader in WebappLoader . java and updated repository count in TestVirtualWebappLoader . java to ensure robustness by
hhh - 11341 - fix bug in persistentattributetransformer when use @ mappedsuperclass
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new file ` TestPorterStemFilter . java ` to implement unit tests for the ` PorterStemFilter ` class to ensure
phoenix - 5449 : indexer . postbatchmutate ( ) should only write index update if minibatchop be
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
fix concurrentmodificationexception in chatwindowmanager . leavechatroom ( )
removed duplicate calls to Sys . touch ( ) across multiple Java files to improve code efficiency and maintainability by eliminating redundancy
updated HgCmdLineInterface to include " - mardu " and modified the untrackedFiles method implementation across multiple interfaces to enhance command
( chore ) camel - netty : optimize component to reduce memory usage
made several fields final in DirectionalLight , PointLight , and SpotLight classes to enforce immutability and provide a linear fall -
updated width and height calculations in X11GraphicsConfig . java and WGLGraphicsConfig . java to ensure target dimensions are non - negative to
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a consistent way to
added a new ` AnnoFilterTreeSet ` class and modified ` findAnnotatedClasses ` and ` findClassesThatExtend ` methods to enhance
updated integer overflow handling in BytesColumnVector . java to improve clarity and prevent runtime exceptions when newLength exceeds newLength
fix intermittent failure in writebehindmapstorewithevictionstest
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI `
ggb - 1353 add method to check if a polygon be equal to another .
added a null check before setting the column class in SynthTableUI to prevent potential NullPointerException when table is null
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException to improve robustness by preventing application crashes due to
added methods to retrieve ` BuckConfig ` and ` Optional < ImmutableList < Path > > > ` in ` DistBuildConfig ` and updated
do n ' t show export warning for double entry
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to track down and fix issues
updated the doJoin method to return a boolean value instead of void and adjusted the handling of conditions to improve error handling and ensure that the join operation success can be detected
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the interface by eliminating
updated intent flags to include FLAG _ ACTIVITY _ NEW _ TASK in LauncherTimelineCursorAdapter . java to ensure proper handling of activity
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable pagination order checks for improved query
updated repository assertions in RepositoryConventionPluginTests to reflect the correct repository index to ensure tests reflect the correct repository configurations
add a new file ` ` affiliationtask . java ' ' to implement task for create or update a ` ` affiliate ' '
improve error message if uri do n ' t start with . /
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow broader access to the method for
added array handling and update logic in CacheKey . java and updated tests in CacheKeyTest . java to improve performance and correctness of Cache
refactor ` getextmntent ` method to use ` FileSystemProvider ` and implement ` FileTypeDetector ` across multiple files to enhance file type
added a call to close the WebSocket session in TestWsWebSocketContainer to ensure proper resource management and prevent potential memory leaks
updated ShadowVirtualDeviceManagerTest and ShadowVirtualDeviceManager to use reflector for VirtualSensorCallback and VirtualSensorDirectChannelCallback to enhance flexibility
added a condition to check if the context object is not equal to the default context before execution in HttpSessionSecurityContextRepository to ensure that the security context
rename variable ' lch ' to ' loopback ' for clarity to improve code readability and maintainability by using more descriptive variable names
renamed ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` for clarity and consistency to improve code readability and
updated KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to enhance key information reference resolution and improve error handling
added a boolean flag ` iconChangeListenerInstalled ` to manage the addition and removal of the icon change listener to ensure the icon change listener is only
added support for Russian language in the Language . java file to enhance internationalization support for Russian users
hhh - 16400 fix duration conversion for sqm to sql
disable frame state verification in SubstrateGraphKit . java to improve performance by avoiding unnecessary state verification
added system property management for ` robolectric . enabledSdks ` and ` robolectric . alwaysIncludeVariantMarkersInTest
added a system class for SLF4J in ViewClassLoader and updated tests in ViewClassLoaderTest to ensure SLF4J logger classes are
added a check for " jar " packaging in ChangePackaging . java and implemented a new test case in ChangePackagingTest . java
danielwagnerhall : use ` withextension ( ` ` txt ' ' ) ` instead of ` ` get ' '
clear the buffer in GLFWDemo . java to ensure the demo state is reset before rendering changes
replaced the ` setDefaultUnits ` method with ` setPreferredUnits ` in ` JogService ` , ` Settings ` , and ` Jog
[ log4j2 - 1349 ] fix datepatternconvertertest due to timezone difference
reformatted return statement in Terminator . java to improve code readability and maintain consistency
updated error messages in FileSystem , LocalFileSystem , and DistributedFileSystem classes to provide clearer guidance for invalid file URIs and authority specifications
use java . util . timertask instead of java . util . concurrent . scheduledexecutor for showtrackingnotification ( # 5649 )
updated the FtpReconnectAttemptServerStoppedIT test to use Awaitility for session disconnection and added a method to count active sessions to
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to improve performance by utilizing a
added an ` ignore ` method to multiple log classes and a static ` isIgnored ` method to determine if logs are ignored to enhance logging functionality
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when accessing runningTaskView
changed the type of ` getDamage ( ) ` from ` byte ` to ` byte ` in ` BukkitWorld . java `
removed the call to cleanImage in PanelManager . java to streamline image handling by eliminating unnecessary processing
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to enhance directory management capabilities in Solr
added null check for ` ic ` before creating ` cleanUpColor ` in ` PdfCleanUpProcessor . java ` to prevent potential ` NullPointerException `
updated the field reference in the assertion from ` maxDocFreq ` to ` field1 _ s ` in ` QueryEqualityTest . java `
updated the implementation of ExtendedOperatingSystemMXBeanImpl . java to improve performance and maintainability of the code
added functionality to install left and right commands in the SideMenuBar to enhance the user interface by providing access to left and right commands
added a new boolean field ` advanceWindowed ` in ` AppSettings ` and modified ` setUpWindow ( ) ` in ` TweetActivity
added support for SybaseDatabase in the DropPrimaryKeyGenerator to ensure compatibility with Sybase databases
refactor Client class to improve code readability to enhance maintainability and facilitate future development
[ java ] update lastrecordingposition to 0 when the leader be ready .
replace invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) and implement shouldDelayChildPressedState ( ) in CellLayout and Cell
added a return statement to the NearCachedClientMapProxy class to ensure proper termination of the method execution
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to shutdown the HTTP server in ListenHTTP . java to handle potential exceptions when starting the server
camel - 15836 - camel - aws2 - s3 : stream upload operation should use producertemplate instead of genericproducertemplate to
[ hotfix ] [ runtime ] rename taskmanagerid parameter to taskmanageridkey
bug 10552 : db upgrade - drop unique _ name key in 2.2 . 7 version of the network _ offerings table
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to include a password check to ensure that
added a maxEnergyLimit variable and updated energy limit assignment logic in VMActuator . java to improve energy limit management for constant calls and
added maxInMemorySize property and its getter / setter in HttpClientProperties . java , and modified webClientPlugin to accept HttpClientProperties to allow
updated caching logic in Cache . java to improve performance and efficiency of cache operations
added new Cucumber test classes and step definitions in the Cucumber package to facilitate testing with Cucumber features in
added error handling for double value parsing in TypeJsonUtils . java and updated tests in TestArrayOperators . java to improve robustness of double
removed hex strings from buffer append operations in Utf8StringBuilderTest . java to optimize memory usage and improve performance
added a check for parameter settings before appending and encoding parameters in Params . java to ensure parameters are only set when valid parameters are provided
camel - 16400 : fix issue with circuit breaker when loadbalance be configure too many output . thanks to daniel for
updated document frequency assertion in TestIndexWriterExceptions . java to ensure consistent behavior based on the maximum buffered documents configuration
replaced instances of ` hasher . putUnencodedChars ` with ` hasher . update ` across multiple classes to streamline hash management and improve
removed unused enumValue , intValue , and longValue methods from AsmRuntime . java to streamline code and improve readability by eliminating
add new biome tag for mangrove - swamp , deep - dark , and deep - dark to the biome provider .
remove async _ image _ loader thread from papplet , use requestimage instead
changed access modifiers of fields and methods in BaseTableUpsertMetadataManager to protected and refactored segment preloading logic to enhance encapsulation and
replaced occurrences of " \ u0646 " with " \ u064a " in multiple format data files to correct terminology
replaced ` getImage ( ) . equals ( ) ` with ` hasImageEqualTo ( ) ` in ` AbstractSunSecureRule . java
camel - 16400 : camel - jbang - add -- repos option to run command .
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding invalid score processing
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure temporary files are deleted after tests are executed
refactor focus handling in FilterConditionEditor and FindAction classes to improve window focus management to enhance user experience by ensuring input fields are correctly focused
[ hotfix ] [ runtime ] implement autocloseableasync in checkpointscleaner
added a new file ` XPathWhiteSpaceTest . java ` to test XML schema validation to ensure proper handling of whitespace in XML files
fix ( bonsai ) : do n ' t override trie log layer if it ' s already override
refactor FilledNewArrayInstruction class to improve code readability and maintainability
add a timeout of 60 seconds to the @ Test annotation in SimpleNetworkTest . java to provide more time for tests to complete successfully
updated the method to check if the parent path ends with a slash instead of the last slash to ensure that the method correctly identifies the parent path
added a print statement to indicate failure loading the skin file to improve error handling for skin file loading failures
added markDirty ( ) and isValid ( ) methods to LgoGroupedLevel2Update and LgoLevel2BatchSubscription classes to manage the
added a new constant UNDEFINED in Result . java and updated the return statement in TestStep . java to use it instead of creating a new Result
updated assertions from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure proper handling of null values in transaction callbacks
make uploadjobmultitermultiplepartoperation serializable and remove completablefuture from uploadjobmultitermultiplepartoperation
improve error message when recover data from a scheduled job that do n ' t exist
bugfix : add ` ` ignorechildnodes ' ' feature to summary levels
removed the ' volatile ' modifier from the ' pos ' variable and introduced a ' sizeMask ' variable in DataOutput2 . java to improve
added @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to mark tests as ignored due
replaced the variable ` targets ` with ` endpoints . size ( ) ` for clarity and correctness to improve code readability and ensure
removed unnecessary whitespace in FileManager . java to improve code readability and maintain consistency
updated TransformFunctionType to include " plus " , " minus " , " times " , " divide " , " ceiling " , "
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement . java and package - info . java files to enhance functionality by providing
updated multiple Java files to replace " RFC3280 " with " RFC5280 " across multiple Java files to ensure consistency in naming conventions
updated version number from 2.17 . 3 to 2.17 . 4 and changed type from int to Character in SearchAnnotationVisitor to ensure
refactor ListActivity and NoteAdapter to use SparseBooleanArray instead of HashMap for better performance and memory management to improve performance and reduce memory overhead
simplified conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated file path handling in ConfigFileApplicationListener to use ResourceUtils for better URL validation to improve robustness of file path construction and ensure correct file
updated ` PreviewPositionHelper ` to accept a ` Context ` parameter and modified clip insets based on multi - window mode to enhance flexibility in
[ java ] only publish a new leadershipterm when the leadershiptermid change .
PMDCoverageTest . java to improve error logging and assertion checks to enhance clarity and accuracy of error messages during testing
refactor ByteArrayInputStream logic and add a new Skip class for skipping bytes to improve clarity and functionality of the skip method in InputStream
refactor conditional logic in UpdaterTask . java for clarity to improve readability and maintainability of the code
made the ` MAX _ HEADERS ` constant public in ` HeadersMessage ` and added a condition to check its size in ` Peer `
add ` ` rt . jar ' ' to the list of standard jar in modclassloader .
reordered return statements in AbstractHandshakeHandler . java for clarity to improve code readability and maintainability
[ geot - 5892 ] fix bug in gruulecatalog , use getheterogeneous ( ) instead of getparent
added a check for committed responses before sending an error to avoid sending error responses after the response has already been committed
updated condition checks for ` hold ` and ` lastPoll ` in ` HttpSession . java ` to ensure proper validation of ` hold ` and `
updated fade out behavior in HomeGestureTutorialController and added new gesture navigation tutorial feature in SwipeUpGestureTutorialController
feat ( prefab ) : improve logging of unknown prefab
added " internal . superuser " to the external group set in LdapMockMvcTests . java to ensure proper handling of superuser memberships
added validation for non - existent account transfers in FreezeBalanceActuator and TransferActuator to ensure that a minimum amount of 1 TRX
updated path separator from ' / ' to File . separator in FileResolverTestBase . java to ensure consistent file path handling across different operating systems
ggb - 2275 show error message if no error be available
updated GpsMainActivity to use session description instead of an empty string and refactored AnnotationViewFragment to use EventBus for better event
updated the assertion in JsoupNonVisualRegressionTest to check for a non - zero number of pages before verifying it to ensure
* add androidnativebufferallocator and deprecate androidbufferallocator in favor of androidbufferallocator
added checks for flag names starting with " ! " in Main . java , PrimaryItem . java , and Util . java to ensure proper handling
no functional change - add nopmd ( we do )
updated the check for ITEM _ USE _ GRANT _ SELECT _ REWARD in BattlePassManager . java to improve code readability
refactor QueuePriorityTest to use a list for expected items and implement a custom toString method to enhance test reliability and provide a clearer
added dependency injection for ` AffinityGroupDao ` and refactored tests in ` AffinityApiUnitTest ` to improve test reliability
added null check for main . command and modified argument validation logic to include HELP option to ensure proper handling of command - line arguments and improve
updated LightOutputStream parameters from 0.7 to 0.5 in multiple classes to optimize memory usage for better performance
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a new class ` T8032819 ` and modified the ` ClassWriter ` logic to include a ` showBlank ` flag to enhance
added an assertion to check the length of a variable in the Person class to ensure that the variable ' s length is correctly initialized before use
added null check for file extension in VirtualFile . java to ensure robustness by preventing potential NullPointerExceptions
fix ` ` return ' ' to ` ` continue ' ' in contact right button menu .
[ hotfix ] [ runtime ] fix possible race condition in slotsharinggroupassignment and simpleslot
simplified the loop structure in InstallShortcutReceiver . java to improve readability and maintainability of the code
refactor the binding and closing logic in PlainSocketImpl to improve clarity and ensure proper resource management to enhance code readability and ensure proper
added functionality to manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve the management of removed items in the fragment
updated log message to clarify that offsets are from the element ' s center point to improve log clarity for better debugging and understanding
added a new file ` bug4865918 . java ` to implement a GUI with a scroll bar test to address bug 48659
replaced VelocityEngine with Velocity in ADKerberosOperationHandler . java to simplify velocity management and improve code clarity
updated import statements in QuestCommand . java and added a new case for " grouptriggers " in QuestCommand . java to enhance
updated GncXmlHandler , AccountsActivity , and BaseDrawerActivity to enhance file selection functionality and improve code readability to enhance user experience by
add @ tostring ( callsuper = true ) to avoid npe
replaced hardcoded description URI with a constant in the CloudService class to improve maintainability and readability of the code
removed setViewportComponent and setJScrollPane from BrowserPanel . java to streamline the code by eliminating unnecessary component settings
replaced KEYCODE _ DEL with KEYCODE _ FORWARD _ DEL and added a new KEYCODE _ FORWARD _ DEL
added a conditional check for the " moreIndexingFilter . indexMimeTypeParts " property before retrieving parts to allow flexibility in indexing based on user
added author pattern matching and modified constructor visibility checks in JSDoc . java to enhance code clarity and ensure proper handling of constructor visibility
rename constants in MetricsConstant from DELTA _ TOTAL _ DATABASES , DELTA _ TOTAL _ TABLES , and DELETE
updated HiveDatabaseSchema and HiveSchemaFactory to include DrillHiveMetaStoreClient and SchemaConfig parameters to enhance database schema accessibility and
updated the ` oauth2LoginLinks ` method to accept ` queryParams ` as a parameter and added error handling to enhance the method ' s functionality
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al
added a condition to check if the browser is not Firefox in addition to IE in WebAudioWrapper . java to ensure compatibility with different browser types
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` and removed the private constructor from ` InterceptorConstants ` to enhance server interceptor
added default charset support to the CREATE TABLE statements in TestCompatibility . java to ensure compatibility with default charset in the database schema
updated kill ( false ) in WriterRecordBatch . java and modified conditional logic in StreamingAggTemplate . java to improve code clarity and correct
[ hotfix ] [ runtime ] fix typo in executiongraph
added a boolean field ` hasFrom ` and modified related methods in ` Delete ` , ` DeleteDeParser ` , and ` DeleteTest `
renamed the method ` isSuccess ` to ` isMultiStatus ` and updated related logic in ` SynchronizeFolderOperation . java ` to improve cl
refactor code to use a new method ` applicableListTests ` for determining applicable tests to improve code readability and maintainability by centralizing
updated regex pattern for matching log lines in LogAnalyser . java to improve accuracy of log line validation
( chore ) camel - google - cloud : add support for google cloud integration test
fixed - rsearch . value ( ) and rsearch . value ( ) method do n ' t work correctly with exclusive = = true .
added generic type to iterator and modified license selection logic in CCLicenseStep . java to improve type safety and simplify license selection logic
added a null check before putting the global ID in the guidIndex to prevent potential NullPointerException when the global ID is not set
updated comparison logic from ` equals ` to ` areEqual ` in ` OptionalAssert ` to improve comparison accuracy based on comparison strategy
updated margin handling logic in NoNewLineParagraphCssApplier and ParagraphCssApplier , and modified content sanitization in ParaGraph to improve
added a new file TestArrayCopyToFromObject . java with a test method for array copying to ensure proper handling of non - object arrays during
replaced instances of ` \ " " with ` + ` in the Python path insertion statements to improve consistency and clarity in handling Python paths
fix checkstyle issue in net / protocol / ajp / apr / ajpprotocol . java and net / ajpnio /
add a new method to crafthelper . findfiles that take a boolean parameter to control whether to visit all file , and deprecate the
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test as unstable to indicate that the test case is
modified the request handling in TestInternalInputBuffer to check for null exceptions before verifying the response status to ensure that a valid response is returned
added a lock mechanism to manage class loading and updated the ` autoloadCall ` method to include a ` lowerName ` parameter to improve thread safety
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` and ` PlaybackController ` to check server version compatibility
refactor KDC and OneKDC classes to use local host names instead of hardcoded values to improve reliability and maintainability of the
updated Jsr250Voter to conditionally return ACCESS _ DENIED or ACCESS _ ABSTAIN based on jsr250AttributeFound
updated import statements in MP4Parser . java for better organization and clarity to improve code readability and maintainability
added a constant for the HS2 proxy user and modified session parameter handling to include it to enhance session management by allowing the proxy user to
camel - 16400 : camel - hdfs - add support for snappy compression . thanks to benjamin for the patch
added a delay of 1000 milliseconds in HttpClientTest . java to ensure proper synchronization during HTTP request handling
fix bug # 49966 - allow cell to be remove from a multi - cell array formula
updated glyph positioning logic in GlyphLayout . java and modified text in BitmapFontTest . java to address AGWlWi issue to
[ istio ] fix istio integration test ( # 9443 )
replaced direct calls to ` ReportPlaybackStartAsync ` and ` ReportPlaybackProgressAsync ` with ` TvApp . getPlaybackManager
do n ' t hit disk on every invocation of simpleauthority . openaccess
do n ' t hit eviction when initial load be hit ( # 11301 )
update bitwise operation from ' & ' to ' | ' in ResponseFlag . java to ensure correct bitwise operation for error handling
add read policy fix to fix default policy .
refactor FontUtilities to use a ConcurrentHashMap for managing CompositeFont instances to improve memory management and prevent potential memory leaks
updated prefHeight initialization and adjusted its calculation in Tree . java to ensure consistent behavior of tree node height management
[ drools - 7 ] fix dmnfeelhelper . formatmessages ( ) to provide more informative error message
removed unused imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
changed the visibility of the ` finishRunningRecentsAnimation ` method from private to public and modified the execution of ` longPressRunnable ` to
added null checks and improved edge type validation in ElementFactoryImpl , ImportContainerImpl , and ImporterGDF classes to enhance robustness
do n ' t throw exception on unknown response future in fnapicontrolclient and beamfnstategrpcclientcache
nifi - 10619 : fix bug in binfiles that could cause mergecontent to fail to create a new bin file .
replaced the method of obtaining the closest CoreBuild to use a loop to improve performance by reducing the number of calls to Geometry .
added a check to skip copying content length in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateCopyHeaderFilter to ensure that
updated Java2TypeScriptTranslator to handle CLASS and CHAR cases and modified transpile method to eval in SyntaxTests to improve TypeScript translation
simplified channel bandwidth calculations and adjusted sample sizes in several classes to improve code readability and optimize performance by reducing the number of channels
hbase - 11345 canary should allow - allregions to be specify in regionserver mode ( liang xie )
removed NodeModule from CassandraConnectorFactory and modified ImmutableMap initialization in TestCassandraConnector to simplify dependencies and improve code clarity
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure proper cursor state management during database operations
added minimum size constraints to CallDialog and adjusted new frame dimensions in OneToOneCallPanel to improve UI responsiveness and ensure proper resizing
fix blockfalling loss of state information during world gen . close # 2273
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit ' s TestSetup for improved test setup and management to enhance
added dependency injection and modified entity removal logic in KerberosPrincipalDAO to improve entity management and ensure proper removal of entities
removed the boolean parameter from the getTableSnapshot method call to simplify the method signature for better usability
try to fix intermittent ci failure in aprendpoint
update the error message for android . licenseKey to clarify its purpose and include Base64 - encoded RSA public key to improve user under
updated the display name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` FileTranscodeVirtualFolder ` and removed the `
[ drools - 7 ] add support for ` ` boot - inf . classes ' ' and ` ` spring - boot . classes '
added an assumption to check if the runtime version is 19 in CheckIndexTest . java to ensure compatibility with different runtime versions
removed context parameter from assignTargetsForSplitScreen method and updated target assignment logic to simplify method signature and improve target selection logic
[ hotfix ] fix checkstyle violation in leaderlatch
added methods to retrieve and initialize zk - SNARK parameters in SolidityNodeHttpApiService to enhance the functionality of zk - SNARK
transaction . getdepthinblocks ( ) should not throw illegalstateexception if depth > 1 .
added a ` createMediaRecorder ` method to ` CodenameOneImplementation ` , ` Location ` , and ` MediaManager ` classes ,
initialize platformName to " ios " in JavaSEPort . java to provide a default value for iOS platform support
pdfbox - 4071 : fix typo find by codespell on fossies . org
added braces to conditional statements for mozDash and webkitLineDash in Graphics2D . java to improve code readability and maintainability
updated CreateVisibleSignature . java file to improve signature handling functionality
added error handling and logging for outgoing frames in AbstractExtension . java to improve robustness by handling potential exceptions during logging
replaced the try - catch block with a privileged action for retrieving the caller class to enhance security by restricting access to the caller class
added logic to reset the parent of child categories in FeedCategoryDAO to ensure proper cleanup of child categories when they are no longer needed
updated the contribution manager dialog to use a dynamic title based on the contribution type to enhance user experience by providing a more descriptive title for the
added a ` vwap ` field and its getter / setter methods to the ` Ticker ` class to enhance the ` Ticker `
added a ` noWidgetsView ` field and updated related methods in ` SearchAndRecommendationsScrollController ` and ` WidgetsFullSheet
added a new ` RenderGraphAPI ` class and updated ` WorldRendererImpl ` to utilize it to improve modularity and encapsulation of
added a method to set the primary color in NCFirebaseMessagingService to enhance the visibility and aesthetics of the messaging
updated ShadowUsbManagerTest . java for improved functionality to enhance usb management testing capabilities
feat ( recommendation ) : add log for evaluation for average absolute and rm
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure that the selected configuration is properly updated
updated width and height calculations in AndroidGraphics . java to use Math . max to ensure stability by preventing negative values
kristianrosenvold : use linkedhashmap instead of hashmap to preserve order
replaced ` ClosureManager ` with ` ClosurePool ` for managing closures to improve resource management by utilizing a dedicated closure pool
( chore ) camel - core : upgrade to junit5 for camel - main
added new files ` WebsocketIngressIntegratedBootstrap . java ` and ` WebsocketPluginTest . java ` to implement WebSocket integration tests for
[ ds - 3752 ] remove test that be break by previous commit .
refactor authentication comparison logic into a separate method to improve code readability and maintainability
added a condition to check if the X86 compiler is enabled in X86MethodGenerator . java to ensure that the method is only executed when
refactor code to use a local variable ` callNodeType ` instead of direct calls to ` callNode . getType ( ) ` to improve code
added a new annotation ` Insecure ` and modified the constructor of ` MessageBuffer ` to include ` hasArray ( ) ` and ` offset (
added new Hive configuration variables to HiveConf . java to enhance configuration options for Hive operations
initialize scopes and policies with new HashSet instances in ResourceSet . java and add a null check in DefaultResourceSetService . java to ensure proper
changed the ` decrefOnClose ` variable to be ` final ` and modified the constructor of ` MultiReader ` to include ` readerFinished
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 classes to
simonstewart : fix flaky test in selenide . clear ( )
refactored the ` getFirstTypeArgument ` method to remove dependency on ` $ Gson ` and made classes final to improve code clarity and
changed return types of keySet ( ) and values ( ) methods from Set to KeySet and Values in Int2IntHashMap . java to improve
added a duration parameter and updated related methods in FlipTransition . java to allow dynamic adjustment of transition duration based on its value
removed conditional logging for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
update version to 9.9 . 9 and minor version 10.10 . 10 in forgeversion . java
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages related to ` sun . reflect .
update javaparser to 1.16 . 0 , and add javaparser . version . java _ 15 and javapar
update padding logic for statusView based on the presence of replies to improve UI responsiveness by adjusting padding based on the number of replies
do n ' t invoke callback on empty versionmap in abstractpartitionprimaryreplicaantiEntropytask . onresponse ( true )
added metadata management functionality to SeedUrl and SeedResource classes to enable storage and retrieval of additional information related to seed URLs
[ drools - 7 ] fix npe in xpath constraint when oopath do not have the binding
[ hotfix ] [ test ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
ww - 4442 add package name to actionconfig name for actionvalidatormanager
updated assertions in IterableTest to cast null arrays to Object arrays and added a new test method to improve type safety and ensure correct handling of null
added default methods ` stream ( ) ` and ` parallelStream ( ) ` to ` MapIterable ` , ` PrimitiveObjectMap ` , and
replace return statement to clone notifInfo to ensure that the original notifInfo is not modified
make sure command key be the first key of commandkeysset , not the first key of commandconstants
refactor AEADBlockCipher class for improved performance to enhance efficiency of AEAD block encryption algorithm
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a null check for the ` id ` variable in ` PackageResourceTable ` and changed the default resources mode from best to legacy to ensure
added a condition to check if ` ulSize ` is zero and ` ulPos ` is zero in the TrueTypeFont class to ensure that
refactor SignPlugin to accept a List of HttpMessageReader instances instead of a static message readers list to enhance flexibility in handling message readers
refactor Int2ObjectCache class for improved performance to enhance efficiency in object caching operations
removed dependency on MavenDeployer in StandardMavenAuthenticationProvider . java to streamline the authentication process by eliminating unnecessary checks
refactor AudioNode class to improve code readability to enhance maintainability and ease of future updates
added SSL context initialization and improved cookie management in LinkyHandlerFactory and EnedisHttpApi to enhance SSL support and ensure proper cookie management
refactor HiveFunctionRegistry to use Stream for better readability and performance to improve performance and maintainability of the code
resolve http : / / issues . apache . org / activemq / browse / amq - 2635 - fix for amq
updated the ` getBuildTargetForAlias ` method to accept ` possiblyFlavoredAlias ` instead of ` alias ` to enhance the method '
camel - 16400 : fix olingo2 consumer to return 0 for empty odata feed
added an EQUIVALENT _ VERSIONS map and modified the return logic in MetaStoreSchemaInfo . java to ensure accurate version
server : do n ' t expunge vm in expungestate ( ) if it ' s in expungestate ( )
added @ Deprecated annotations to multiple methods in AbstractDateAssert . java to indicate that these methods are outdated and should not be used in future development
updated ONDashClockExtension to use a new method for retrieving note titles and refactored AlarmReceiver to use this new method to
rename GoogleAuthUserConfigTable to GoogleAuthUserConfigTableTest and update column types in tests to improve test clarity and align with updated
replaced instances of ` commit ( ) ` with ` apply ( ) ` in multiple Java files to ensure changes are applied to the SharedPreferences
added an ` TestIdleListener ` class to the ` StandardSession ` instantiation in ` AsyncTimeoutTest . java ` to enhance session management by
add test _ id to bigqueryioit . test _ bigquerytable so that it can be run in parallel
set the background resource of the icon and reset it in HotseatPredictionController and BubbleTextView to improve visual appearance and
mondrian : fix typo in flushafterquery property name .
add nativeworker test for native query
refactor feature retrieval logic in LIMEExplanation . java to handle both ALL _ OUTPUTS and ALL _ OUTPUTS scenarios to improve accuracy
added runArgs parameter to AppleSimulatorController and InstallCommand classes to allow execution of command - line arguments for Apple targets
replaced direct calls to ` getArea ( ) ` with a local variable ` area ` in ` LineSelection . java ` to improve
added a check to ensure the pipeline and manager states are available before proceeding to prevent potential errors when the pipeline or manager is not available
added clipping to the outline of the QSB background view to enhance the visual appearance of the QSB widget
added flag conversion progress tracking and improved flag handling in SQLManager , BlockTypeListFlag , and PlotArea classes to enhance flag management and
updated FloatingTextRenderer to conditionally enable depth testing based on whether the floating text is occluded to improve rendering performance by optimizing depth
rename libffi context to libffi context _ linux .
refactor propagation behavior in JdbcAggregationRepository by introducing a private variable and getter / setter methods to enhance code readability and maintainability by
add l1 regularization and l2 regularization support to layervalidation ( # 1193 )
refactor readWrite ( ) method to handle exceptions and log them to improve error handling and provide clearer logging for read / write failures
changed the visibility of the colorStack variable from static to instance to allow the colorStack instance to be accessed without needing an instance of Glyph
updated method calls from ` false ` to ` true ` for mapped and statement retrieval to enable mapping and statement management functionality
convert tradableIdentifier and currency to lowercase in BTCEPollingMarketDataService to ensure consistency and prevent potential issues with case sensitivity
updated MQTT publish values in ChannelStateTests . java to reflect new channel state values to ensure accurate tracking of channel state changes
remove versionedhashes parameter from enginepayloadparameter ( # 1193 )
set trigger price to empty and onTriggerPriceTextFieldChanged method in MutableOfferView . java to reset the trigger price and update the UI accordingly
modify studentfeedbacksubmissioneditsaveaction to redirect to student ' s home page if there be an error
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 11341 addendum fix debug log for hstore . get ( )
# 1186 - enh : add beanstate . getchangedprops ( ) ... when bean be set to new or dirty
added a boolean property ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control the behavior of
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide a standard
replaced specific AWT imports with wildcard imports and added a method to handle the popup menu visibility and accessibility to improve code readability and
added null check and initialization for the ' insert ' variable in StressProfile . java to ensure proper handling of null values and avoid potential NullPointerException
replaced direct usage of ` JavaConversions . asScalaIterable ` with a static import of ` collectionAsScalaIterable `
added null check for requests in MockServerEventLog and improved logging in HttpForwardObjectCallbackActionHandler and CallbackWebSocketServerHandler to enhance
[ hotfix ] [ runtime ] log warning if property file can not be load
refactor SessionDataSet initialization to use try - with - resources syntax to ensure proper resource management and avoid potential memory leaks
added a condition to check if the network interface supports multicast and is up to ensure proper handling of network interfaces during outgoing operations
updated the constructor of sqlCommand to accept an additional length parameter to enhance flexibility in handling SQL commands
updated methods in ` UnDelegateResourceActuator ` , ` BandwidthProcessor ` , and ` EnergyProcessor ` to set latest consume
added a method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and modified the handling of ` invalidSessionUrl ` to
improve error message when we ca n ' t find a token for an empty index
added a new file ` MapAssert _ containsKeys _ Test . java ` to implement unit tests for the ` containsKeys ` method to ensure
replaced instances of ` stgen ` with ` psgen ` in ` JdbcProxyGenerator . java ` and added a new interface `
added a static method ` ensure ` to ` ServerWebSocketContainer ` and modified the ` start ` method in ` DirectUpgradeTest ` to improve
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to enhance immutability and performance of the
pdfbox - 4892 : use point2d instead of point2d . float a suggest by valerybokov
added a static final empty MethodHook array and refactored hooks initialization in Method and Method classes to improve code clarity and maintainability by
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the authentication return logic accordingly to allow flexibility in
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enhance functionality by allowing job execution context to be passed
added a check for file . canExecute ( ) before returning true in SharedLibraryLoader . java to ensure that only writable files are written ,
doc ( regen ) : update protoc to v3.15 . 1 ( # 182 )
bug 61795 - csv save service now work with sampleevent object instead of sampleresult
added new constants in BundleConstants . java and updated CustomUrlManager . java to use these constants to improve code readability and maintainability by
change the parameter type of the applyRule method from Hashtable to Map
ggb - 2203 move object to absolutescreenlocateable instead of geowindow
updated JoglGraphics and ProjectiveTextureTest to use RGB565 and MipMap formats and texture filtering to improve rendering quality and
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to simplify the method signature for better usability and
camel - 16400 : fixed property component to work with intercept from uri . thanks to daniel for the patch .
updated the condition from ` currentTime > ` to ` currentTime > = ` in ` ActionScheduler . java ` and modified the expected attempt count in
updated dbg _ zip path initialization and added null check for debug _ log before replacing debug . log to ensure robustness by avoiding potential NullPointerException
add a config option to hide the notification overlay ( # 1193 )
add pipe . resetgate ( ) to allow pipe to reset the gate .
replaced direct instantiation of TestSupplementary with a try - finally block to ensure locale is restored after execution to improve resource management and prevent potential
updated the team color range from 0.8 to 0.4 in the Team constructor to improve the visual appearance of the team ' s
replaced HashSet with ArrayList for activeMatchedStates and modified logging statements to include conditional logging to improve performance and reduce log verbosity when removing active states
updated the condition to check for null annotations in SoftAsserts . java to ensure proper handling of null annotations and avoid potential NullPointerExceptions
updated error handling in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve error reporting and provide clearer context
refactor CallTreePrinter to use a new method ` toCsvFile ` for reporting CSV files to improve code readability and maintainability by
added null checks for ` note ` and ` noteTmp ` in ` DetailFragment . java ` and updated references in ` WidgetProvider . java
added peakTasks tracking and fractionalLoaded calculation in AssetManager . java to improve task management by accurately tracking the number of loaded tasks
danielwagnerhall : do n ' t enable native event on window for now .
added support for nutch score and fetch interval in Injector . java to enhance flexibility in score injection based on URL and metadata
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in multiple Java files
modified the condition for zkController and added a new method isShareSchema in CoreContainer . java , along with a corresponding test in TestCore
updated sizeInBytes method calls to include a boolean parameter for better control over size calculations to ensure accurate size representation and improve error reporting for better debugging
replaced multiple assertEquals statements with assertNull for version1 _ 2 in VersioningTest . java to ensure that version1 _ 2 is
updated SQL query in ` Field . java ` and ` AbstractJdbc2DatabaseMetaData . java ` to handle non - null domain columns correctly to
[ java ] only send new leadershiptermevent if leadershiptermevent can not be append .
removed the ` buildMediaType ` method from ` WebClientPlugin ` to streamline the code by eliminating unnecessary complexity
replaced ` fill ` and ` fillUsingLengthPrefix ` methods with ` fillSlice ` and ` fillAndGetIndex ` across multiple classes to
fix ( core ) : fix bug in acidutils . iscompactedbase ( ) and add test
initialize immutable storage scheme and qualifier encoding scheme in PTableImpl . java to ensure proper handling of null values and improve code clarity
added new files PojoProducersCustomized . java and RestProducersCutomized . java to implement customized PojoProducers
replaced hardcoded " cache " with a constant from CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability
replaced ` AesGcmSivProtoSerialization . register ( ) ` with ` AesGcmSivKeyManager . register
replace wooden slab with a wooden slab wooden in oredictionary .
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the session management framework
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` UndefinedSymbolsLinker . java ` to simplify the class
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 11341 fix test failure on oracle
update spriteBatch drawing parameters in HelloWorld . java to correct positioning of the sprite batch rendering
updated player permission checks and improved string concatenation in PlayerFunctions , PlotId , and WorldGuardListener classes to enhance clarity and correctness
added a deprecated version constant for Lucene 8.5 . 0 to indicate that the version is outdated and encourage the use of a
updated string concatenation in the closeSocket method to include the thread name to improve readability of the log output for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure proper parsing and deparsing of SQL
refactor dependency type in CoNLLUOutputter to use a new enum DependenciesType to improve code readability and maintainability by
refactored the ` makeTargetDescription ` method in ` NoSuchBuildTargetException ` and added it in ` ParseContext ` to improve code organization
replaced the method ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild ` initialization to simplify the test execution
reduced the size of ` configBlocks ` and ` configBlocks ` from ` Block . blocksList . length ` to ` 256 ` to
updated logging messages and version checks for Spigot and CraftBukkit in BukkitMain . java to provide clearer guidance
updated SQL statement escaping logic in ` AbstractSQLChange ` and added a test case in ` AbstractSQLChangeTest ` to ensure proper handling of
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
pdfbox - 4892 : fix bug in buildnavandpdfbody , a suggest by valerybokov
fix for http : / / issues . apache . org / activemq / browse / amq - 2272 - make mqtt
modified the way change sets are retrieved in ChangeSet . java to ensure a default change log is used when no change log is available
[ type : refactor ] remove unnecessary call to writer . output ( ) . output ( ) in plugin handler
added HiveMetaStoreClient and logging functionality in TestHiveMetaStorePartitionSpecs . java and TestObjectStore . java to enhance database management
added a new parameter " order _ currency " to the BithumbAuthenticated class and updated BithumbAccountServiceRaw to include it to
remove SSEFluxWebConfig . java file to remove unused configuration related to SSEFluxProperties
updated return type checks from ` getReturnType ( ) . getFullyQualifiedName ( ) ` to ` getReturns ( ) . isVoid ( ) `
replaced the static YAML _ READER with a static YAML and added a new REST endpoint for listing YAML objects to enhance code readability and
changed access modifiers of ` equals ` and ` hashCode ` methods from public to package - private to restrict access to these methods for better encapsulation
refactor thread factory to use lambda expression and introduce awaitTermination method for better readability to improve code clarity and reduce redundancy in
added unit tests for the ` addToList ` method in ` MongoTemplateTests ` and created a new class ` PersonWithAList ` to
g2p : make sure applet panel size do n ' t change
replaced direct visibility of the toolbar with a delayed execution using a Handler to improve user experience by providing a delay before hiding the toolbar
refactor page reading logic in SeriesReader . java to improve clarity and structure to enhance readability and maintainability of the code
do n ' t save vm password if vm be n ' t run
set ` usingOutputStream ` , ` usingWriter ` , and ` isCharacterEncodingSet ` properties to false in ` Response . java ` to
added a check to prevent assignment side effects in the GroupDialog class to improve user experience by preventing unnecessary processing
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated conditional check for icon width and height in FileUploadApiController . java to improve clarity and maintain consistency in icon size validation
refactor methods in RegisteredServiceProperty , JwtTokenCipherSigningPublicKeyEndpoint , and JwtTokenCipherSigningPublicKeyEndpointTests to use JcaPEM
added mime type checks and validation logic in Basic . java to ensure proper handling of file content types on non - Unix systems
fix ( netty ) : do n ' t call system . out . println in connection # iscompressed ( )
added a new method ` doesClassLoaderDescendFrom ` to the ` Util ` class and refactored the ` Class ` and ` MethodHandles
removed unused imports and refactored the ` doConnect ` method to ` connect ` in ` ChannelProvider ` and ` ProxyChannelProvider `
added a new test method ` testEmptyFinalColumn ` in ` TestCsvHeader . java ` and modified ` TextReader . java ` to
added compassGravity and compassMargins parameters to NearbyMapFragment . java to enhance the visual appearance of the map by
added unit tests for interpolation calculations in GeoPathTest . java to ensure correct behavior of computeNearestDistance and computeNearestDistance methods in GeoPath
added HiveException handling to the methods in LeafFilterFactory , ParquetFilterPredicateConverter , and TestParquetRecordReaderWrapper to improve error
added language setting logic for video tracks in LibMediaInfoParser . java to ensure correct language information is set for video tracks
added a warning log for compatibility issues when deploying schemas in a newer version to ensure users are aware of schema compatibility issues
replaced ` System . arraycopy ` with ` addAll ` in multiple array - related classes to simplify code and improve readability by eliminating
reformatted try - catch blocks for clarity in DataSourceProxy . java to improve code readability and maintainability
added constructors and null checks in InMemoryClientRegistrationRepository , InMemoryReactiveClientRegistrationRepository , and InMemoryReactiveClientRegistrationRepository
added a new method ` resetUIState ` to the ` SchemaUpgradeHelper ` class to reset the UI state to ensure that the UI state
added a ` failedStep ` field and modified the logic for handling pending exceptions in ` JUnitReporter ` to improve handling of pending exceptions and
add a new PlayerSelector class to handle player selection in entity selectors to allow for more flexible command handling in entity selectors
implemented Closeable interface in Selector class to enable proper resource management for Selector instances
updated connection pooling logic in MaxConcurrentStreamsTest . java to utilize MultiplexConnectionPool for improved connection management to enhance performance and
added multiple calls to ` stringType ( ) ` in ` CoreOptions . java ` to ensure consistency in string type handling across the application
updated token handling in HqlQueryRenderer and modified context configurations in EclipseLinkUserRepositoryFinderTests and UserRepositoryFinderTests to improve query
replaced hardcoded status codes with constants in HttpGenerator , HttpChannel , HttpChannelState , and Response classes to improve code readability and
pdfbox - 4892 : simplify code , a suggest by valerybokov
fix flaky test : use stubdatasource instead of jdbc url
refactor ParquetFormatPlugin and ParquetGroupScan to improve file selection handling and metadata management to enhance code clarity and maintainability by
updated the success flag and modified the javac task handling in Jsr199Javac . java to improve error reporting during compilation and ensure
added a base model listener to the DefaultSortedTableModel class to fire table changes when the table changes
updated the range for number validation in ServerConfig . java from 49152 to 65535 to ensure that the number does not exceed the maximum allowed value
added support for document provider authority in API level KitKat and above in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider
removed the startLogging method call from MainApp . java to streamline logging process by eliminating unnecessary logging
updated exception handling in FilterChainProxy to include throwable analysis and improved test coverage to enhance error handling robustness and ensure correct handling of wrapped
updated the newSize calculation and modified the arraycopy method to use ' this . length ' to improve code clarity and ensure proper reference to ' this
pdfbox - 4892 : throw illegalargumentexception for empty filterlist , a suggest by valerybokov
add TbStopWatch class to encapsulate StopWatch functionality to improve code organization and facilitate better management of stop operations
set the initialized flag to true in PListStore . java to ensure proper initialization of the PListStore instance
added @ Deprecated annotation to multiple Java classes to indicate that these classes are outdated and should no longer be used in future development
[ zeppelin - 1342 ] add context class loader to remote interpreter
fix checkstyle issue in block / forgehooks . java ( # 6379 )
updated minSdk from VERSION _ CODES . P to VERSION _ CODES . O _ MR1 in ShadowRttCallTest and
updated variable names from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve
# 113 - enh : add getelementdescriptor ( ) and getsimplename ( ) to beandescriptor and beandescriptorelement ( )
changed JavaScript and CSS header URLs from " wro / all . js " and " wro / all . css " to " static /
added a new test method ` showLatestTimeseriesTest ` to the ` IoTDBMetadataFetchIT ` class to verify the functionality of retrieving
rename ` appContextLocation ` to ` contextConfigLocation ` in ` AuthenticationProcessingFilter ` , ` SecurityEnforcementFilterTests ` ,
modified exception handling in OCSPChecker to differentiate between CertPathValidatorException and other exceptions to improve clarity and specificity of error reporting
make writeoutputsolutionenabled configurable in problembenchmarksconfig and problembenchmark
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new file ` Issue _ 815 . java ` with a test class ` Issue _ 815 ` to verify the functionality of sl
add a shapeless recipe for pipe waterproof , slime ball , and pipe waterproof to the game registry to enhance the game '
mahout - 494 - vector . iteratenonzero do n ' t throw indexoutofboundsexception if the vector be empty
added metadata handling for Shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents classes to improve entity management and
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
updated import statements in IOHelper . java and added methods to retrieve maximum directory and file name lengths to improve code clarity and provide access to
added a check for the existence of a tag before creating a new UpToTagChangeSetFilter instance to improve error handling and provide feedback when a
[ beam - 1342 ] use arraylist instead of linkedlist for good performance
refactor BrokerRoutingManager to improve routing logic to enhance performance and maintainability of routing process
updated color values for volumePaint and upPaint in CandlestickRenderer . java to improve visual clarity and consistency in rendering
refactor layout parameter handling in InsettableFrameLayout . java to improve clarity and maintainability to enhance layout parameter management and allow for
added a duration field to the BuildTargetDurationListener and updated related tests to include it to provide additional information about the duration of a rule in
updated database migration integration tests to use ` assumeTrue ` instead of ` @ Profile ` to improve clarity and maintainability of database profile checks
added null check for user before processing claims in OAuthConfirmationController . java to prevent potential NullPointerException when user is null
camel - 16400 : added method replacefromwith to cameltestsupport to replace route from endpoint .
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` in ` CassandraConnection . java ` to improve performance by utilizing a
api : listpublicipaddresses - add source network id to the listpublicipaddresses api response
added methods to manage battery optimization in ShadowPowerManager and ShadowPowerManagerTest to enable testing and management of battery optimization settings in the
updated the method to retrieve the Jetty version from build properties instead of a hardcoded version string to ensure the application uses the correct build version
added tests for verifying invocation order and verification behavior in NumberOfInvocationsInOrderVerifierTest . java to ensure correctness of invocation handling
refactor conditional logic in TRegexExecNode . java to improve clarity and structure to enhance readability and maintainability of the code logic
added " - foreground " parameter to the startProfile method in NewProfileExtensionConnection . java to enable the profile to be launched in a foreground
refactor executor variable names and improve resource management in MiniSolrCloudCluster . java to enhance code readability and ensure proper resource cleanup
changed the type of ` parseFieldnames ` from a ` Map < String , String > ` to a ` String [ ] ` and updated
updated logging to use file name instead of file object and added null checks for actionsList in EditorTextActionWindow to improve logging clarity and
updated skippedEntries to include exception details in ClassFileReader . java and JdepsTask . java to improve error handling and provide clearer context for
updated Fetcher and FetcherMain classes to use LinkStorage and LuceneStorage for improved document storage management to enhance performance and maintainability
updated the ` populateBubble ` method to include an ` existingBubble ` parameter and modified related bubble population logic to enhance functionality by allowing
improve error message when schedule route policy have no suspend / resume time
refactor buildRpcExt and buildRpcExtJson methods to remove unnecessary Method array parameters to simplify method signature and improve code readability
[ java ] : introduce nak _ multicast _ delay _ generator for the loss handler in the medium conductor .
replaced GsonBuilder with Gson and added JSON serialization for client details to improve JSON handling and ensure proper serialization of client information
added a condition to check if the field amount is zero before setting the average price in HuobiAdapters . java to ensure that the average
removed the ` rawExecutionReports ` method from the ` BinanceStreamingMarketDataService ` class to streamline the code by elimin
added a ` fail ` method to ` LdapTimeoutTest ` and modified the failure logic to include an exception parameter to improve error handling and provide
add a check for existence of the user dictionary file before try to read it .
updated password handling logic in AmbariServerConfigurationHandler . java to check for blank password file or credential store alias before updating the password to
added a check to prevent parsing duplicate segments in ParseSegment . java and introduced a new method in SegmentChecker . java to improve efficiency by avoid
[ hotfix ] [ yarn ] add yarn . application - attempt - failures - validity - interval config option
do n ' t unload the h2 driver if it ' s not included
hbase - 11341 add default readtype for snapshot - based inputformat ( chaoyu tang )
added fixed height and width properties to the LoginInstanceRequest class with corresponding getter and setter methods to enhance the functionality of the login instance by allowing dynamic
added a ` cornerRadius ` parameter to the ` update ` method across multiple classes to enhance the method ' s functionality to include a corner radius
added new commands " SHOW " , " DESCRIBE " , " SHOW " , " FORMATTED " , " SHOW " , " INDEXES
added retry logic to handle connection failures from the connection pool in TxnHandler . java to work around BONECP bug to improve robustness by
added txnCheckReserve method and modified txnEnsureReserve method to include transactionId parameter to enhance functionality by allowing backup reserve management based on transaction
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to facilitate storage and retrieval of string - related
updated DELETE statements in ` CostBasedDecisionIT ` and ` DeleteCompiler ` to include " DELETE ROWS CLIENT SELECT " and " DELETE RO
added a retryable check for SocketException and modified exception handling logic in BaseServiceException and BaseServiceExceptionTest to improve robustness of service exception handling
added ` rapidInstallTypes ` parameter to several constructors and methods in ` AdbHelper ` , ` AndroidDevicesHelperFactory ` , and
updated the seed pattern in SortTest . java from " - srand " to " - ? - srand " to ensure that the seed
refactor ` MultimapSubject ` to use factory methods for creating instances of ` IterableValuesForKey ` and ` IterableEntries ` to improve code
simplified the return statement by removing the check for natural orientation to improve code readability and reduce unnecessary complexity
add transformer . settransmux ( boolean transmux ) to allow customization of transcoding .
added localization support for strings in the Picker class to ensure consistent formatting of localized strings for better user experience
camel - 2342 fixed the unit test error of cxfrsconsumertest
hhh - 11341 - postgresql dialect : add sqlstate conversion for deadlock and lock not available exception
added null check for queryId and changed annotation visibility from VisibleForTesting to LimitedPrivate in HiveStatement . java and TestJdbcDriver2 .
add usesunboundedpcollections and usestimersinpardo to pardotest category
simplified the HTML output for the filename text in GpsSimpleViewFragment . java to improve readability and maintainability of the code
[ java ] remove unused leadershiptermid parameter from joinlogasfollower .
refactor HttpSender to use a local variable for the HttpExchange instance to improve code readability and maintainability
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
updated method names from ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity and consistency in
added null check for ` tree ` in ` Recipe . java ` and modified marker handling logic in ` Markers . java ` to enhance
pdfbox - 4892 : add method to get font size as double , a suggest by valerybokov
addressbookdocomoresultparser : fix arrayindexoutofboundsexception when parse email :
added handling for exclusions in RawMavenResolver to ensure proper management of exclusions based on dependencies
added support for DSX exchange information in DSXAdapters , DSXPairInfo , and DSXBaseService classes to enhance the functionality of
refactor multiple test classes for consistency in naming conventions to improve code readability and maintainability
[ drools - 90 ] fix incremental compilation when kiemodule pom be invalid
updated the initialization of ` copy ` and added a check for ` sobj . has ( k ) ` before defining the property to ensure proper
camel - jackson : fix javadoc typo in jacksondataformat
truffle : fix hostfielddesc . getgetter / setter to not be part of compilation .
added a new method parameter annotation for CompletableFuture in DefaultNullnessAnnotations . java to enhance nullness checks for CompletableFuture in the database
adjust the freeze check point value from 9000 to 10000 to adjust the freeze check point for improved performance
removed redundant import statements and updated internal state handling in AbstractCommonPowerMockRunner and PowerMockRunner to streamline code by eliminating unnecessary
updated method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure compatibility with the correct
refactor indentation logic in TabsAndIndentsVisitor . java to improve clarity and structure to enhance readability and maintainability of indentation
replaced LuceneTestCase with JUnit ' s TestCase in TestSingleTokenTokenFilter . java to utilize JUnit ' s
replaced ` newColumn ` with ` write ( " < / td > < class = ' wrappedText ' > " ) ` in `
resolved - issue batch - 1212 : jobexecutioncontext should not be null
added a conditional check to hide the new media folder before adding it to the child to ensure that the child is only added when the new media
replace UnsupportedOperationException with IllegalArgumentException for null actor handling in SplitPane . java to enhance error handling and prevent potential NullPointerExceptions
added handling for JavaType . Parameterized in RemoveUnusedImports . java to improve type management for parameterized Java types
fix npe in uniquemodlistbuilder . getmodinfo ( ) . getmodinfo ( ) . getmodinfo ( ) ( #
changed the LOG variable from instance to static in TicketGrantingTicketImpl . java to allow logging of TicketGrantingTicketImpl instances instead of
updated SQL string in PhysicalPlanTest . java to use RLE . 81 + 12 instead of RLE . RLE to ensure compatibility with
added a method ` isValue ` to ` AttrData ` and modified ` Converter ` to check if a value is a value and updated ` R
added support for US - International PC locale and character modifier keys in CPlatformResponder . java and LWCToolkit . java to
[ java ] add a system property aeron _ publication _ connection _ timeout to ctestmediadriver . launch ( ) .
added a check to return false if the request URI starts with " / css " , " / images " , and " / favicon "
added assertion to verify the installation of a wellbeing test APK and ensure the device is rooted to improve error handling and provide clear
no effective change - remove oracleandsqlrowslimiter ( no effective change )
added a mock for MultiMap in TestSimpleBodyHandler . java and updated the expected length of server options in TestVertxTLSBuilder . java
updated paths for JavaLib1 in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest Java library changes
added a boolean flag ` mIsDismissHapticRunning ` and modified the condition in ` TaskViewTouchController . java ` to
fix miss projectile source in mixineventworldexplosion
removed unused imports and overridden the getItemId method in SymbolInputAdapter . java to improve code clarity and maintainability by eliminating unnecessary
updated Bitfinex API endpoint to use QueryParam for limit _ bids and limit _ asks instead of direct query parameters to improve query flexibility and
camel - stax : fix staxconvertertest failure on window
[ hotfix ] add tostring ( ) method to kubernetesleaderelectiondriver and zookeeperleaderelectiondriver
refactor SqlSessionFactoryBean for improved session management to enhance performance and maintainability of SQL session handling
[ 3.0 ] optimize tripleinvoker . getpureargument ( ) and getpureargument ( ) . getpure
replace ` Gdx . app . error ` with ` throw new GdxRuntimeException ` in ` PolygonRegionLoader . java ` to improve error
added a method ` isStarted ( ) ` to check if the deadline is already started and updated timer management in ` RawStoreProxy ` to improve
added handling for ClosedChannelException in NettyRequestExecutor to improve error messaging for closed channel scenarios
added null check for genres before setting text in ItemListActivity to prevent potential NullPointerException when genres is null
[ hotfix ] [ checkpointing ] add test for master reset hook in region recovery
added test for prefab with collection of mapped container
[ hotfix ] [ runtime ] fix npe in walnode . getlastunpinnedmemtableversion ( )
added a new test method ` testRetrySameHostOnCallbackFailure ` in ` HttpTest . java ` to ensure proper handling of callback failures
truffle - tutorial : fix typo in package - info . java
added a new file SQLServerEscapeQuestionCharacterTest . java to implement a test for SQL Server escape question characters to ensure correct handling of SQL
added @ NonNull annotations to constructors in CamelModule . java and modified route handling logic in JoobyBeanRepository . java to enhance null
replaced synchronized block with a utility method for waiting in JavaFXSEPort . java to improve code readability and maintainability by utilizing
changed the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaff
replaced the creation of ` RegionDecoderCropBehaviour ` and ` BitmapCropBehaviour ` with a new method ` createCropperBehavi
refactor InputRC and related classes to remove appName parameter from configure methods to simplify method signatures and improve code readability
[ gr - 21212 ] fix uninstall with ignored dependency .
replaced ` setHeadless ( true ) ` with ` addArguments ( " -- headless = chrome " ) ` in multiple files to
replace value assignment with value . intern ( ) in VersionedValue . java to ensure value is properly interned for better memory management
added a condition to check for " MOVE " status in the recv _ status check to ensure proper handling of the " MOVE " status
updated date format constants in FixedDateFormat . java for consistency to improve code readability and maintainability
updated import statements for Google Commons Lists from org . apache . curator . shaded to com . google . common . collect in multiple
[ hotfix ] [ runtime ] remove redundant check in hsbuffercontext # startspilling
updated permission checks in Visit . java to include an additional check for UntrustedVisitFlag to ensure proper handling of untrusted visit permissions for players
do n ' t try to register a jabber protocol if it ' s already register .
updated the boundary check in BasicURLNormalizer and added a new test case in TestBasicURLNormalizer to ensure proper handling of curly braces in URLs
changed method visibility from protected to private for ` addRemoteAnimations ` , ` unregisterRemoteAnimations ` , and ` unregisterRemoteTransitions `
added a condition to compare the clock rate if the result is zero to ensure that the clock rate is correctly represented when the result is zero
added a method ` getProjectPath ( ) ` to ` ProjectGenerator ` and modified ` generateProjects ( ) ` in ` SeparatedProjects
fix arrayindexoutofboundsexception in hostlocaleprovideradapterimpl . getcalendarid ( ) .
added a new file ` MSwingUtilities . java ` with utility methods for managing swing - related operations to provide a standardized way to
camel - mail : make the mail producer async so it can be use in a background thread .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure proper refresh behavior during authentication processes
added unit test base on user forum issue
added new Main and ScriptRenderer classes with main method and template rendering functionality to facilitate the execution of JavaScript scripts within the SchemaCrawler
added a condition to check if the input state is __ NONE in the form - encoded content type to ensure proper handling of requests when the input
updated BitmapFont , Group , FlickScrollPane , and SelectBox classes to check if glyph dimensions are non - negative and improved touch focus
replaced direct calls to ` reportFailure ` with context . runCloseHooks ` in ` DeploymentManager . java ` and added a new test
fix LexiconRecipeMappings . java by adding a forceignore option to the stack tostring method to allow for more flexible handling of recipe
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve test reliability by allowing more time for
replaced specific StringUtils imports with a wildcard import and added a null check for shortName to simplify import statements and enhance code readability
use getresource ( ) instead of new url ( ` ` classpath ' ' ) for holiday xml
added a new file ` FieldUtils . java ` with methods for retrieving accessor name , field , and protected field values to provide utility functions for
simplified the assertion in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to improve code cl
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for widgets to improve layout consistency and
added a method ` updateSettingsWithSaveLastAccount ` to ` XabberAccountManager ` and updated its usage in ` AccountAddFragment
added a new method ` setvar ` to handle command - line variable assignment to enhance usability by providing a convenient way to set a variable
fire animaltameevent . onanimaltame instead of animaltameevent . onanimaltame . close #
improve error message when sort by value for range frame
pdfbox - 4892 : add a test to verify that the signature be create with the correct font
added a line to set the app ' s mode in PageListController to ensure the application displays the correct mode based on the application ' s
added methods to handle build arguments and Docker file paths in ImageFromDockerfile . java and created a new test class DockerfileBuildTest .
added a null check before creating a new ThreadInfo instance in ThreadInfos . java to avoid potential NullPointerExceptions when accessing threadInfos
replaced a small float comparison with a constant for better precision in PieChartRenderer to enhance accuracy in mathematical comparisons to avoid potential floating - point errors
[ hotfix ] [ runtime ] add more log for singleinputgate and singlecheckpointbarrierhandler
added new schema constants to the Schema class to enhance the schema management capabilities within the application
updated FuzzyQuery and FuzzyTermEnum classes to include a minimumSimilarity parameter to enhance flexibility in fuzzy query scoring
renamed the method ` addActionsView ` to ` setActionsView ` in ` RecentsView . java ` to improve clarity
layoutwrappingencoder now allow immediateflush to be set within the enclosing appender .
added additional auto - configuration classes for RabbitAutoConfiguration and KafkaAutoConfiguration to ensure compatibility with additional Spring Boot configurations
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to
replaced import of ` avro . shaded ` with direct import of ` com . google . common . base ` in multiple Java files to
[ gr - 21212 ] fix incorrect handling of return / unwind block in bciblockmapping .
refactor conditional checks in Label . java for better readability and introduce a new method to get and set legacyRenderer to improve code cl
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and `
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is not initialized
removed generic type from the ` thenComparing ` method in ` Comparator ` and added a new ` Department ` class with associated methods to
refactor DocIdSet . java to improve code structure to enhance maintainability and readability of the code
updated anomalyResult . setEndTimeUtc to use the current bucket milliseconds instead of null to ensure the anomaly result reflects the current
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is not thrown when parsing integers
added a ClassLoader to the enhancer in MockFactory . java to ensure proper class loading for mocking classes
added a new ` OriginalFormat ` class to the formats list in ` ConverterWithEnumFormat . java ` to facilitate the handling
replaced hardcoded date format strings with a constant in FileStorageUtils . java to improve maintainability and readability of date formatting
refactor JAWTRenderer class for improved performance to enhance rendering efficiency and reduce memory usage
camel - 14263 : camel - aws2 - * : enable autowire on the aws2 - lambda component , regen component
server : generate a valid or invalid mac address for a nics in the network ( # 5649 )
added a condition to check if the string header name equals " Authorization " to ensure proper handling of authorization headers in the proxy servlet
replaced ` submit ` with ` execute ` in ` TraceableExecutorService ` to improve execution context handling for better context management
added ` getDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes to
updated the logic to set ` randUsePoints ` to ` 0 ` instead of ` random ( ) . nextBoolean ( ) ` to improve
refactor method names from ` appendDot ( ) ` to ` endSentence ( ) ` across multiple classes to improve clarity and consistency in
updated TimeFormat . formatForConsole to include Locale parameter across multiple files to ensure consistent formatting across different locales
updated imports in GroovyParserVisitor . java and GroovyPrinter . java for improved handling of unparsed arguments to enhance code clarity and maintainability
added bounds checking for top , bottom , and left insetPx in Border . java to ensure that insetPx values do not exceed defined
refactor gesture state creation into a separate method for better readability to improve code maintainability and reduce duplication
updated date formatting in LlapServiceDriver to use java . time . Instant instead of joda . time . DateTime to improve code readability
refactor openblas and openblas _ nolapack classes to improve code organization and maintainability
replaced ioutils . closewith a try - catch block to handle potential IOException to improve resource management and prevent potential memory leaks
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction manager initialization
increased the timeout duration in the waitForRecoveriesToFinish method and changed the SO _ TIMEOUT in the AbstractFullDistribZk
added a new file ` SearchResults . java ` with a class for managing search results to provide a structured way to store and retrieve search results
bugfix # 203640 , make sure threadcpufuffresher be only create once
[ wasm ] fix nullpointerexception in bytecodenode . getprimitives .
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwards
updated feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified AppIcon to
add a new endpoint to retrieve tenant pools for the current instance in InstanceResource . java to enable users to view tenant pools associated with the current
refactor methods in TopFieldCollector to improve early termination checks for document IDs and prefixes to enhance clarity and maintainability of early termination logic
updated InlineBytecodeGenerator to include a check for ` isToString ( ) ` and modified imports in ` InlineByteBuddyMockMakerTest
added logging statements in CxxCompileStep . java and CxxPreprocessStep . java to improve traceability of compilation and preprocessing processes
add stringutil . removecharacter ( string , char ) to make it easy to remove - ' - ' from a string
[ 3.0 ] fix npe when metadata service protocol be not set ( # 9441 )
[ drools - 7 ] add a datatransformer interface to provide a way to transform an expression into a process
changed the type of ` values ` and ` objval ` from ` Collection < ? > ` to ` Collection < Number [ ] > `
formatstringchecker : do n ' t need to check for interop code .
updated the initialization of SolrCore in ElectionContext . java to improve code clarity and maintainability
refactor ITestDbTxnManager for improved transaction handling to enhance performance and maintainability of transaction management
refactor connection handling to use try - with - resources for better resource management to improve code readability and ensure proper resource management
added a new method ` testMapModel ` to ` CodeFirstPojoClient ` , ` CodeFirstPojo ` , and ` Code
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated selection handling logic in ScaleDialog . java to improve clarity and ensure proper selection state management
fix nullpointerexception in itemtradeselBelt . tickBelt ( ) , close # 2373
pdfbox - 4892 : do n ' t throw ioexception a suggest by valerybokov
replaced TreeSet with LinkedHashSet in ExecuteSqlCommandStep . java to maintain insertion order for keys
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 milliseconds and added @ Override annotation in PagePreviewCard
updated the preload library from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure compatibility with the latest
added a conditional check for ` agentSupport ` before setting all constructors to public in ` MainMockTransformer ` and created new classes ` MockStatic
pdfbox - 4892 : avoid exception when decrypt object , a suggest by valerybokov
bug 61757 - make window title configurable and add a method to set it
updated depth assignment logic in XRSurfaceData . java to handle 32 - bit color models to ensure correct depth value is assigned based on the
added errorResponseBody to InvalidResponseCodeException for handling unsuccessful responses to improve error handling by providing more context about the response body
added a static method ` exit ` in ` TopLogging ` and refactored ` TopThreadGroup ` to use it to improve error handling
modified the initialization of the ` start ` variable in ` NativeRegExp . java ` to handle the case when the regexp is not global to ensure
planner - 468 ignore test until upgrade to optaplanner 6.3 . 1
updated the index used for retrieving highAllocation from availableAllocations from lowIndex to highIndex to correct the index used for allocation management
added a method to clean entries without feeds and updated the deletion logic in the DatabaseCleaner and FeedEntryDAO classes to improve entry management by
change return type of appendToLabel method from void to AtomicCounter to allow method chaining for better usability
[ java ] move idle strategy to a separate class to make it easy to use .
added handling for NOT _ MODIFIED status in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure headers are only written when the
refactor instrumentationpartialevaluationtest to use toolevalnode instead of splicednode .
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to include a new rectangle parameter to enhance the visual representation
updated KrakenMarketDataService and KrakenMarketDataServiceRaw to accept varargs for depth and trades to enhance flex
added ` getFileSeparator ( ) ` and ` isAbsolute ( ) ` methods to ` FileEndpoint ` , ` GenericFile ` , and ` Remote
added Jackson annotations and a new build method in JavaProvenance . java , and updated MavenProjectParser . java to include dependency management for
added trace logging for registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java and introduced a new test case in TestIn
increased iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for state updates
do n ' t send hint for deleted columnfamily when cfid do n ' t match
added a condition to check if the output file can be written before proceeding to ensure that the test does not attempt to write to a non
added package info retrieval in LauncherModel . java to check if the application is enabled and handle potential NameNotFoundException to improve robustness by avoid
server : fix db upgrade from 4.2 . 0 to 4.2 . 1 ( # 4209 )
updated exception handling in ` AbstractFaultTolerantChunkOrientedTasklet ` and ` FaultTolerantChunkOrientedTask
replaced ` startsWith ( completed ) ` with ` regionMatches ( option . CASE _ INSENSITIVE ) ` in ` LineReaderImpl .
added global data tables and modified return logic in Recipe . java to include global data tables to improve data management and ensure consistent handling of global
added import for Overview and modified task dismissal logic in TaplTestsTaskbar . java to ensure that all tasks are properly managed
databaseupgradechecker : add dbupgradesystemvmtemplate interface to allow database upgrade from 4.15 to 4.15
changed the connection variable from non - null to final in LdapClient . java to simplify connection management and improve code clarity
refactor index handling in SequenceAction . java to use a local variable to improve code readability and maintainability
add set _ keyspace ( ) method to cassandraserver . patch by jbellis ; review by brandonwilliams for cassandra -
added a check to skip processing for synthetic fields in ReflectUtils to optimize performance by avoiding unnecessary processing for synthetic fields
added LoggerProvider to manage SLF4J logger integration to enhance logging capabilities by integrating SLF4J ' s logging framework
changed the data type of ` ImmutableMap ` and ` values ` from ` String ` to ` Object ` in ` ServerStatusCommand . java `
added deprecation warning for deprecated classes that configure the spring context in SpringFactory . java and updated tests in SpringFactoryTest . java to ensure users
added a new method ` deepStart ` to the ` Startables ` class to facilitate the creation of deep startables from a
removed the deprecated ` reservePrimitiveExtensionArray ` method from ` Shape ` and its implementation in ` ShapeImpl ` to signal that the method is
fix laser target not be able to be use in laser .
simplified the condition for checking object names in AbstractJdbcDatabase . java to improve code readability and maintainability
removed unused imports from TestSolr4Spatial2 . java to improve code cleanliness and reduce unnecessary dependencies
updated the expiration period for policyEntry in MemoryLimitTest . java to ensure that the test does not consume 2 * pageSize mem which will throw
removed unnecessary null checks in RequestHandlers . java to simplify code logic for better readability and maintainability
modify the return statement to replace ' - ' with ' . ' in the getServletName ( ) method to ensure proper formatting of the servlet name
filter the PYTHONPATH environment variable before adding it to the pythonEnvironmentBuilder to improve the handling of Python module search paths by avoiding unnecessary
updated audio format handling in DirectAudioDevice . java and Toolkit . java to improve frame size validation and error handling to enhance robustness and
add null check for enums in ElasticSearchStringLookupService to prevent potential NullPointerException when enums is null
improve error message when commitlogreader encounter unexpected end of segment
added a assignment of the policy from containerScope to the WebSocketSession class to ensure the session ' s policy is correctly configured for WebSocket connections
simplified the condition for initializing static fields in Java2TypeScriptTranslator . java to improve code readability and maintainability by elimin
updated the context creation to use the webroot argument instead of a hardcoded UI _ DIR to allow dynamic configuration of the web root directory for
( chore ) camel - spring : migrate component - core to junit5 ( # 10386 )
bugfix # 2203 , use netbeans . api . editorregistry . focusedcomponent ( ) instead of netbeans . registry
updated the method name from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation
replaced individual trade - related imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and implement
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure buffer state is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when setting foreground and background
updated comparison in FloatingDecimal . java from ` < = - 3 ` to ` < - 3 ` and added a new ` ToString `
updated the property type check in PropertyDescriptor . java and added a new test class Test7189112 . java to improve type validation logic and
removed maxVersion parameter from recentUpdates ' s getVersions method to simplify version retrieval logic
updated the origin handling in NettyRequestFactory to differentiate between secure URIs and non - secure URIs to improve security by ensuring the origin is
updated task visibility and animation logic in RecentsView , TaskView , and LayoutUtils to improve UI responsiveness and visual feedback during
updated error messages in ORCRecordReader to include the field name to improve clarity and context of error messages for better debugging
added new HLS samples for Tears of Steel and Bipbop 4x3 in DemoUtil . java to enhance
hhh - 11341 - remove reference to read _ only _ method in persistenceprovider . readall ( )
updated log paths in ExecRPCInvoker and WritableRpcEngine to use " org . apache . hadoop . ipc . " instead of " org
avro - 113 . java : add documentation and test for specificcompiler . compile ( )
added a return statement to the session creation logic in WebSocketEndpoint . java and implemented a test for session closure in WebSocketIT . java to ensure
updated delay and listener names for better clarity and consistency in the DAO state monitoring services to improve readability and maintainability of the code
updated mapping entries in XmlConfigurationProvider and LocationAttributes to use " Apache Struts " instead of " OpenSymphony Group " to ensure compatibility
added conditional logic to stop the stream based on its status to ensure proper handling of video playback when the stream is stopped
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
[ geot - 6271 ] update geotools / geotools / geotools - examples to use geotools -
replace ` s . substream ( 200 ) ` with ` s . skip ( 200 ) ` in ` TargetType58 . java ` to
hhh - 10956 - fix npe in compositeidfkgeneratetuplizer when no identifier generator be available
rename ` ` find full text ' ' to ` ` download full text ' '
updated URI registration logic to include host and port information in the URI list to enhance the service ' s capability to register multiple URIs with specific host
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code readability and maintainability
added a null check for the OSDB hash before retrieving the info to avoid potential NullPointerException when the hash is blank
added token transfer functionality to the RuntimeImpl class and implemented token validation in RuntimeImpl to enable better handling and validation of smart contract transfers
camel - 16400 : ftpoperations should change the current directory when delete a file .
updated default return statement to use ` getSearchBindPassword ` instead of ` getSearchBindDN ` to improve clarity by using a more descriptive
added validation for joinResult and modified joinNeeded logic in MapJoinOperator . java ; introduced BloomFilter in HybridHashTableContainer .
refactor HTTPSPDYAsyncEndPoint to accept an AsyncEndPoint parameter and implement getter methods for local address , host , port , and remote
added " id " to intent and quote extras in multiple adapter classes to ensure proper handling of tweet IDs in the intent
refactor disconnection logic and introduce a new disconnectWeb method to improve clarity and functionality in handling proxy authorization
updated ` _ numChildren ` to use ` AtomicInteger ` and modified the return statement to use ` AtomicInteger ` to ensure thread - safe incrementing
updated variable declarations in multiple Java files for consistency and clarity to improve code readability and maintainability
disabled the test annotation in ValueTypeTests to temporarily disable the test due to performance issues
resolve split - packages : move everything from kie - api under org . kie - api : move class directly under org . kie
replaced ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` in multiple predicate classes to improve clarity and consistency in
updated exception handling to catch general exceptions instead of AccountUtils . AccountNotFoundException to improve error handling and provide a more informative display name for account
added null check for witnessService before validating witness permission to prevent potential NullPointerException when witnessService is not initialized
updated the construction of ` taggedCol ` to use ` getExprString ( ) ` instead of ` getExprString ( ) ` to improve
added a null check before setting the Java document in AbstractJavaClassTranslator to avoid potential NullPointerException when the javadoc is not present
renamed ` holderMethod ` and ` holderKlass ` to ` holderMetadata ` and ` holderMetadata ` in ` CompiledICHolder
replaced ` revalidate ( ) ` with ` revalidateWithAnimationSafety ( ) ` in ` Tabs . java ` to improve
[ hotfix ] [ connector / kafka ] return unregisteredmetricsgroup instead of throw exception in deserializationschemaadapter
updated the calculation of the y - coordinate in the Polygon class to use a new variable ` oldX ` to improve code readability and maintain
updated cache creation to accept a Configuration parameter to enhance flexibility in cache configuration handling
fix for [ 2974855 ] incorrect behavior of inheritedunsafegetresource when string constant be empty .
refactor ShadowCookieManager class to improve cookie management functionality to enhance performance and maintainability of cookie management
added a new configuration option for external table dropping permissions and implemented the disallowDropOnTable method in TestStorageBasedMetastoreAuthorizationProvider
added braces to conditional statements in Stage . java and adjusted the position of the background drawing in ProgressBar . java to improve code readability and correct
truffle : cache byte order for llvmlanguage . getbytesupport ( ) .
updated the property name from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the web view login URL loading logic to allow dynamic
corrected a typo in the error message from " parameterArray " to " parameter " in CallableStatementHandler . java to improve clarity
updated the ` @ RequestParam ` annotation to allow the ` after ` parameter to be set to a valid date format in ` AuditEventsMvcEndpoint
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` across multiple files to clarify the purpose of the timer ' s purpose
remove soft bodies from the dynamics world and reset softBody to null to ensure proper resource management and prevent potential memory leaks
changed interfaces from package - private to public to allow access to these interfaces from other packages
[ hotfix ] [ zeppelin ] fix logging in zeppelinhub client and websocket
add a new test case to verify that no redundant namespace is present in the Jingle IQ to ensure that the XML representation of the Jingle
fix checkstyle issue in util / buildcraftenergy . java and add null check for redplasma .
added HTTP / 2 headers support in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
refactor conditional checks in Remove . java to improve clarity to enhance readability and maintainability of the code
updated the delimiter from ' count ' to ' count2 ' in SimpleReport . java to ensure accurate formatting of output for better readability
removed the option ` - XDignore . symbol . file ` from ` JavapFileManager ` and updated ` JavapTask
rename ` TickerDemo ` to ` StreamingTickerDemo ` and update method visibility in ` TickerDemo . java ` to improve clarity
removed unnecessary try - catch block and added null checks for contract and trigger contract address in Runtime . java to improve error handling and provide clearer
do n ' t create input3d when inTEL _ REALSENSE feature be enable
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
scripttagpayloadreader : do n ' t throw parserexception
updated the method ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` in ` JpaRepositoryConfigExtension ` to ensure compatibility with the
changed the return type of ` getExecutableCommand ` from ` String ` to ` List < String > ` across multiple classes to improve type safety
replaced direct assignment of properties with direct reference to IOSGLES20 in IOSGLES20 . java to improve code readability and maintain
deleted the UploadPathActivity . java file and modified ComponentsModule . java to remove its dependency to streamline the codebase by eliminating unnecessary
modify return statements in SimpleTextFieldsReader to conditionally return totalTermFreq or sumTotalTermFreq based on indexOptions to optimize term frequency
fix ( jdttreebuilder ) : implicit constructor should not be add to ctconstructor ( # 3998 )
updated ` populateValidateIfNeeded ` methods to include a ` Database ` parameter to ensure compatibility with Oracle - specific database operations
refactor Database class methods for improved performance to enhance efficiency of database operations
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the application configuration
removed ` indexOptions ` from ` DefaultIndexingChain ` and updated iterator assignment in ` PointInSetQuery ` to streamline code and ensure
remove duplicate mapping of rawName in SchematicHandler . java to improve code readability and maintainability
added a switch statement to handle specific collection types in AbstractCollectionAssert . java and updated the return statement in CollectionAssert _ isUnmodifiable _ Test
changed the Option enum from static to instance in ProcessExecutor . java to allow the Option class to be instantiated without needing an instance of Option
refactor dialog handling in Compose . java and ComposeActivity . java to utilize AlertDialog and DialogInterface to improve user experience by
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` toggleKeepInSync ( ) ` in ` File
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` in ` ImageUtil
added new files ControllerCounter . java and DBCallback . java to implement tracking and database operations to facilitate tracking and database operations within
added ' final ' keyword to the parameter in the deleteTicket method to enforce immutability of the method parameter
added a new file ` FlywayMigrationRunner . java ` in the ` org . cloudfoundry . identity . uaa . db
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in HashMap . java and added a new class ` OverrideIs
updated the version number of TsFileDBConstant from " 0.6 . 0 " to " 0.7 . 0 " to reflect the
updated the ` modify ` method to accept nullable ` EnumSet < Modifier > modifiers ` and added a warning log for missing ORC compression modifiers to
added null check for mainValue in LauncherHelper . java and refactored jar creation logic in TestHelper . java to improve robustness
rename test classes from " Tests " to " Tests " to improve clarity and consistency in naming conventions
refactor hotspotprofilinginfo to use jvmci ir size instead of graal node count
make cellcopypolicy public so that it can be reuse by clone ( )
added a static method ` resetIconLoadResult ` to ` FloatingIconView ` and updated ` Launcher ` to use it to improve
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated layout dimensions and added landscape orientation handling in IconRecentsView . java to improve layout responsiveness for different device orientations and
deleted the AddAdapter . java file to remove unused code to streamline the project
do n ' t throw an exception if the constructor code list be empty .
modified the constructor of ` OpTraitsRulesProcFactory ` to include a ` processSortCols ` parameter to enable processing of sort columns based on
refactor TestLogWatcher to include a looper method for checking message presence to improve test reliability by ensuring messages are correctly registered before proceed
added a print statement to Java2TypeScriptTranslator . java to enhance TypeScript translation functionality
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the new release version
set the SPRING _ AOP _ PROXY _ TARGET _ CLASS property to " true " in TraceEnvironmentPostProcessor to enable proxying
removed the singletonLock boolean from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary checks
updated method names from ` responseClassCallback ` and ` forwardClassCallback ` to ` responseClassCallbackWithClass ` and ` forwardClassCallback
added an ` appendToFile ` method to ` Utils ` and modified the ` writeFile ` method to accept a boolean parameter to control whether to append
updated MavenExecutionContextView and MavenRepositoryMirror to return mirrors only if mavenSettings changes and modified MavenRepositoryMirror to return the first mirror
added a ` name ` parameter to constructors and methods in ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePath
updated the redirect URI comparison logic in OAuth20CallbackAuthorizeEndpointController and added a new test case in OAuth20CallbackAuthorizeEndpointControllerTests to
refactor annotation handling to use AnnotationParser for better encapsulation to improve code readability and maintainability by centralizing annotation conversion logic
updated method calls from ` getBadgedDrawableForUser ` to ` getBadgedIconForUser ` and ` getBadgedLabelForUser ` to
updated default value for the line separator in GlobalConfiguration . java to provide clearer output formatting options
fix a bug in configurationmanager . getbestpathaccuracytracker and add a unit test .
sanitize request data to prevent security vulnerabilities
chore : update java and python dependency ( # 139 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to include ` throws IOException ` and updated project workspace handling to improve error handling
refactor CountersReader class for improved performance to enhance efficiency of counter reading operations
updated container type assignments in AllAppsRecyclerView , UserEventDispatcher , and DeepShortcutsContainer classes to improve clarity and consistency in container
hbase - 16400 add deprecation warn for config key hbase . ipc . server . reservoir . initial . max and
[ native ] add test for native window and join
added the method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types while considering synthetic and implicit parameters to improve the handling of generic parameters and ensure consistency when accessing parameter types
refactor TestFSTs class to improve code readability to enhance maintainability and facilitate future development
[ web ] fix input box height calculation for latex text
hbase - 11341 increase default region flush size to 2 * initial size ( addendum )
removed redundant calls to resetLoadedState and startLoader in LauncherClings . java to streamline code and improve performance by eliminating
replaced instances of ` keys ` and ` updatesAt ` with ` keys ` and ` updates ` in ` ManagedSelector . java ` to
added support for exclusion of specific Spring datasource beans in SpringDataSourceBeanPostProcessor to enhance the flexibility of datasource management by allowing users to exclude
ggb - 2243 fix for undo info not be store in tableview .
( chore ) camel - aws : improve error handling in kinesis proxy
refactor channel handling logic in VelbusSensorHandler . java to use a for - each channel mask to improve code readability and maintain
disable tests due to unfavorable benchmarks in LocalCacheSelectorCode and modified delayable logic in BoundedLocalCache to improve performance control
added a test for illegal database creation and deletion in IoTDBSessionSimpleIT . java to ensure that illegal database paths throw an IllegalPathException
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure a fresh state for garbage collection
replaced ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx ` and
reformatted code for consistency and clarity in CharTokenizer . java to improve code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 6022 )
cloudstack - 7013 : fix typo in xenserver _ network _ label constant
updated libgdxVersion and libgdxNightlyVersion from " 1.5 . 5 " to " 1.5 . 6
removed the private Set < String > metricNames and its getter method from SolrCore . java to streamline the code by eliminating unnecessary
refactor URI handling in MavenManifestFactory to use Path instead of URI to improve code clarity and maintainability by using more descriptive variable
replaced direct reference to ` System . getProperty ( " os . name " ) ` with a constant ` IS _ MAC ` to improve code
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the code
added a clear and addAll method to the slotList in Frame . java to ensure that the slotList remains unchanged when copying elements from the Frame
initialize ` m _ predCount ` to - 1 in ` PredicatedNodeTest . java ` to initialize ` m _ predCount ` to
added import statements and overridden the mergeProperties method in ConfigurationSpringInitializer . java to enhance property merging functionality for better configuration management
updated the logger parameter type from ` Logger ` to ` org . slf4j . Logger ` in ` CommandLineOutputAppender ` and `
replaced instances of HashMap with LinkedHashMap for aliasToWork across multiple files to maintain insertion order and ensure consistent iteration order
added a check to determine if the jdbcHandlerMap is null based on the superclass of the type to ensure proper handling of subclasses of the type
added debug logging for item writers in HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JMSItemWriter to improve
updated language range parsing logic to handle wellformed values to ensure correct parsing of language ranges based on the presence of a semicolon
updated Http2ServerResponseImpl , VertxHttp2Handler , and Http2Test to use context management to improve thread safety and ensure proper
added caching functionality for XSSFTable instances in SXSSFEvaluationWorkbook and BaseXSSFEvaluationWorkbook to improve performance by redu
updated schema text detail type checks and modified symbol assignment logic in BaseSchemaTextFormatter . java to ensure proper handling of schema text detail types and
replaced instances of ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to align
replaced instances of HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order for the roots and leaves sets
added a check to ensure the operator tree is properly cloned before calling getTableScanOpsForJoin to prevent potential runtime errors during operator tree cloning
added a null check for the client ID in DynamicRegistrationClientConfigurationService and refactored client registration logic in JsonFileRegisteredClientService to
reset achievementlist . field _ 187981 _ e . clear ( ) in statlist . getachvement ( ) . close #
initialize userName , productName , productVersion , and connectionUrl to an empty string in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure
updated permission references from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog and Sh
added LongBuffer support and modified readLongs method in ByteBuffersDataInput and ByteBuffersIndexInput classes to enhance performance and memory management for long
updated timestamp fields in UnixFileAttributes to use seconds and nanoseconds instead of seconds to improve clarity and accuracy of timestamp representation in the code
added a new file TestNoEagerReclaimOfHumongousRegions . java to implement a test for eager reclaiming of
added conditional logic to handle the visibility of the search bar based on user preferences to improve user experience by controlling the visibility of the search bar
changed the method from ` env . router ( ) ` to ` env . routes ( ) ` in ` EnvRouterFeature . java ` to
added null checks for ` cur ` and ` next ` in ` LineChartRenderer . java ` to prevent potential NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` to manage the reloading of a page in the menu to enhance user experience by allowing navigation
changed log level from info to warn for missing entries in SQLManager . java to improve logging granularity for better debugging and monitoring
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided to prevent runtime errors
use serviceloader instead of factoryregistry to load serviceloader extension point
added a call to closeTable ( ) in HiveHBaseTableInputFormat . java to ensure proper resource management and prevent potential memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` , ` HiveViewImpl ` , and ` JdbcConnector ` classes
updated feature settings in DocumentFactory , XMLSAXHandler , ComplexElementHandler , and ElementHandlerFactory to enable external DTD loading and improve
replaced ` jdb . command ` with ` jdb . contToExit ` in ` JdbStopThreadidTest . java `
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to ensure that the ` getType `
updated variable names from ' future ' to ' future ' for clarity to enhance code readability and maintain consistency in naming conventions
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure the correct HTTP port is used for testing
replaced ` addCaptureListener ` with ` addListener ` in ` Dialog . java ` to ensure proper listener registration for the button table
updated the DEFAULT _ BATCH _ SIZE from a fixed value to a dynamic value based on available processors to improve performance by reducing the number
added a try - catch block around the establishResourceManagerConnection method to handle potential exceptions when establishing the Resource Manager connection
initialize classFile to null and modify exception handling logic in LambdaRewriter . java to improve null safety and provide a fallback mechanism for dynamic expressions
updated the error message in the ProgressBar class to include the min and max parameters to improve clarity in error reporting for better debugging
updated method signatures to include ' owner ' and ' telegram ' parameters across multiple classes to improve clarity and functionality of message handling in the
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` in the ` com . codename1 . db ` package to
refactor assertion classes for improved consistency to enhance maintainability and readability of the codebase
# 113 - enh : add setbeanid ( bean , object id ) ... to ebeanserver and defaultserver ( # 1
pdfbox - 4892 : use getaddtositedescriptorxsl ( ) instead of add - menu - to - site - descriptor .
added a list to store request matchers and updated the requestMatcher instantiation to enhance the flexibility of request matching by allowing multiple matchers
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing of ContactResource objects
move request and response from processor to abstractprocessor so they can be reuse .
updated log messages to clarify that the saved Persistable can be read again to improve clarity and accuracy of log messages for better debugging
added mock control reset and modified tearDown method in TestJdbcDataSource and TestIndexSearcher to ensure proper resource management and optimize query execution
added import for LambdasWithInterfaces and updated assertions in SyntaxTests . java to improve code clarity and ensure consistency in assertions
refactor ConnectionModel and ModeledConnection classes to improve code readability and maintainability
fix for tika - 377 : use fallbackparser instead of emptyparser .
fix fmlsecuritymanager . getcallerclass and fmlsecuritymanager . getcallerparent so they do n ' t crash .
removed unused variables from AccountUtils , IndexedForest , and CustomPopup classes to simplify code and improve readability
updated parameter name from " swap " to " rename " in CoreAdminApis . java and CoreApiMapping . java to improve clarity
added a new test method ` testJsxComment ` in ` JsLexerJsxTest . java ` and refactored ` Parser .
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for debugging purposes
updated assertions in BuildEndToEndTest , CxxEndToEndTest , and EndToEndWorkspace to use assertExitCode instead of assert
added physical memory management checks in TestStringBufferAndBuilderGrowth . java to ensure resources are sufficient for the test execution
refactor conversion service usage in MapToLocalDateConverter to use a direct instance of ConversionService to improve code maintainability and reduce dependency on
added a success flag to the HiveMetaStoreClient class to indicate success of the operation
updated the condition from ` = = ` to ` . equals ( ` * ' ' ) ` in ` ResourceReferenceInfo . java ` and
updated tweet detection logic to include " amp . twimg . com " in addition to " vine . co / vine " to ensure
marked the AreaReference class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor ElementType and Target classes to improve code readability and maintainability
updated assertions and reference kind handling in MemberName . java to improve clarity and correctness of reference kind management
changed the default value of ` __ submitKeyUpdates ` from " false " to ` true ` and added synchronization around the ` runChange `
simplified conditional statement in EditNodeTextField . java to improve code readability and maintainability
camel - 16400 : fix issue with bean expression can not be use static method . thanks to daniel for the patch .
[ java ] fix checkstyle issue in net / protocol / benchmarking / benchmarking - java . java
updated lambda expressions in AgentRunnerTest . java for better readability to enhance code clarity and maintainability
updated descriptions in multiple Java classes to provide clearer terminology to enhance clarity and usability of project property descriptions
refactor face management in ObjLoader to improve clarity and structure to enhance readability and maintainability of the code
refactor ProcessEngine class to improve process management to enhance performance and maintainability of process execution
replaced instances of ` reentrantLock ` with ` lock ` in multiple Java files to improve clarity and consistency in naming conventions
updated ` PrintMavenAsCycloneDxBom ` to include ` mavenPackaging ` parameter in the ` getBomReference ` method
updated back ( ) method to accept a component reference to enhance functionality by allowing back navigation to the correct component
simplify the certificate verification logic in SASLAuthentication . java to enhance readability and maintainability of the code
removed the @ Nullable annotation from the fields and methods in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to enhance type safety and
replaced ` NutchConf ` with ` getConf ` in multiple files to standardize configuration access across the project
bug fix : removeboardspain ( ) should call tab . deselected ( ) instead of removeboardpane ( )
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` for external use
added null checks before setting time interval for nodes and edges in ImportContainerImpl . java and updated tests in ImporterGEXF2Test
removed the log level argument from the command in MockServerContainer . java to simplify the command configuration for better readability and maintainability
updated error logging to include exception message to improve error reporting for better debugging
allow dispositionprocessor to use crawlmetadata instead of robotshonoringpolicy
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests during development
updated file path checks in DefaultPackageScanResourceResolverTest to use File . separator for cross - platform compatibility to ensure compatibility across different operating systems
added import statements and a method ` alternativePath ` in ` ExpectNewDemo . java ` to facilitate the retrieval of alternative file
replace input . init ( ) with input . getFirstFilter ( ) . init ( ) in LogEntryParseTester . java to ensure that the
added a protectionDomain parameter to the BufferAlignmentAgent constructor to enhance functionality by providing additional context for protection - related operations
added dispose ( ) method to WaterRipples class to ensure proper resource management and prevent memory leaks
added a configuration option to disable unsafe external table operations and refactored semiJoin optimization logic to improve control over optimization behavior based on external table
updated the description of the Authorization header from " Uses basic authorization with ` base64 ( resource _ server : shared _ secret ) ` to "
updated wallpaper offset from - 30 to 0 in Workspace . java and added FLAG _ SHOW _ WALLPAPER in Launcher .
changed return value from false to true in SybaseASADatabase and modified sequence query handling in SequenceSnapshotGenerator and CreateSequenceGenerator to ensure
nifi - 11341 : fix commit / rollback in putsql when autocommit = false
added error handling for file creation in SnapPuller . java and updated tests in TestReplicationHandler . java to ensure proper directory creation and
updated AppTargetId from " id : launcher " to " launcher : launcher " to align with the new naming conventions for better clarity
refactor framer . frame ( ) to accept a bytebuffer instead of a bytebuffer . writeto ( )
refactor constructor parameters in multiple classes to remove unnecessary parameters to simplify code and improve readability by eliminating unnecessary parameters
added an extended description for splitting text into key - value pairs in GenericUDFStringToMap . java to improve clarity and usability of
removed the ` formatInstance ` method and updated the ` INSTANT _ STAMPLE ` string in ` PlainFormatter . java ` to improve cl
increased the timeout duration for the close method from 1000ms to 3000ms to allow for a longer wait time for the agent to close
hhh - 11341 : remove reflection from classloadingstrategyhelper . bytecodeenhancement ( )
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated debug log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the log
temporarily ignore the samplingnamingtest until we can fix it
corrected a typo in the exception message from " rows and columns must be greater then zero " to " rows and columns must be greater
refactor decision node construction and improve error handling in WagonCART . java and DecisionNode . java to enhance code clarity and
added sorting functionality for BoundSheetRecords in XLS2CSVmra . java and implemented corresponding tests in TestBOFRecord . java to enhance
refactor thrust calculation logic in ThrustCurveMotor . java to use startThrust and endThrust variables to
nifty : do n ' t set inputmanager when create inputsystemjme ( )
refactor conditional checks and add assertion for hashCodeFieldOffset in UniverseBuilder . java to improve code readability and ensure offset is valid before
remove block . getmesh ( ) since it be deprecate
[ hotfix ] fix typo in yarnapplicationmasterrunner and yarntaskmanagerrunner
added EMPTY _ WORD _ OPTIONS option and modified matchers logic in LineReaderImpl to conditionally handle empty options to improve flexibility in matching based
do n ' t push view replica update when writecommitlog = = true
updated clipboard handling in CaptureActivity and added default button ID retrieval in ResultHandler and URIResultHandler to improve user experience by enabling automatic opening
added a new test method ` testBatching ` in ` JoinedTableTest . java ` to verify batching functionality of JPA entities
added handling for duplicate timestamps in JpaPersistenceService to improve logging clarity for duplicate timestamps during persistence
removed the deprecated ` format ` option from ` CucumberOptions ` and updated its usage in ` RuntimeOptions ` to replace the deprecated option
implement save ( ) method in PMS . java to enable persistent storage of data in the application
simplified the condition for handling the back key in ExtendedEditText . java to improve code readability and maintainability
updated the ` newCapacity ` variable and added a new ` Capacity ` class with tests for ` StringBuffer ` and ` StringBuilder ` capacity calculations to ensure
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to update the
added support for the endnote relation in the XWPFDocument and XWPFWordExtractor classes to enhance functionality to extract endnotes from
updated the ` CasAuthenticationTransactionSuccessfulEvent ` to include ` clientInfo ` to provide additional context about the authentication success event
added a test method ` testVersion ` in ` BridjOGRDataStoreTest . java ` to verify the functionality of GDAL version
added a new file ` Lifecycle . java ` to implement network error handling in the application to provide a mechanism for managing network operations and error reporting
deviantart ripper now download a url that do n ' t exist on a 404 error .
removed unused imports from BodyTubeShapes and RocketFigure classes to clean up the code and improve readability
support for retina in the opengl renderers
add a method to set the initial value for the project offline setting ( # 3995 )
replaced ` PackedInts . Writer ` with ` BlockPackedWriter ` in ` DiskDocValuesConsumer . java ` to improve performance
updated DefaultStatusRoute to use originatingType instead of HttpStatus and changed routesByStatus from Collection to SortedSet to improve type - specific handling and
removed unused imports and stream data handling in GoAwayTest . java to streamline code and improve performance by eliminating unnecessary data processing
added support for handling java . util . Map objects in ReflectionUtils and created FluentSetterBean to enhance bean property management and support fluent setter functionality
updated imports and method signatures in BlockingHttpEndpoint . java , HttpEndpoint . java , and HttpEndpoint . java to replace ByteStreams with Char
camel - 1212 : fix unit test that could fail on run full test
updated log message to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity of log output
added new boolean fields and methods for setting PDF conformance and write image scaling information in RtfDocumentSettings . java to enable configuration of image scaling
add aggregation functionality to handle path columns in TSServiceImpl to enable conditional inclusion of aggregation function in column processing
updated test classes to extend WithNestedTests . AbstractNestedTest instead of LuceneTestCase and added cleanup method to improve test structure and ensure
added functionality to select and display the XCap enable status in the PresencePanel to ensure the user interface reflects the current XCap enable status
ww - 4445 add support for handle exception in dispatcher
added stopEditing methods to CodenameOneImplementation , Display , TextArea , and AndroidImplementation classes to enhance text editing functionality to improve user
nifi - 7012 : fix controlrate . getgroupname ( ) to return null when group name be null .
[ fix # 399 ] always open the preset when add a new component .
added error handling and logging for chat message sending in ChatAnnotation . java to improve error reporting and ensure thread safety when sending messages
added a check for Windows OS type in HTMLDataFlavorTest . java to ensure compatibility with non - Windows environments
added SQL _ SERVER _ SNAPSHOT to the TransactionIsolationLevel enum to enable support for SQL server snapshots in transactions
fix deadlock from previous commits to better format
use java . util . zip . zipfile instead of org . apache . tomcat . util . compat . jrecompat
added a null check for the command class before creating a new instance of RegisteredServiceImpl to prevent potential NullPointerExceptions when the command class is not
change default disk _ failure _ policy from best _ effort to ignore and add ignore case to cassandra daemon
remove public modifier from ripperinterface . rip ( ) , ripstatushandler . update ( ) , ripperinterface .
added a condition to filter out specific IP addresses from the PeerDiscoveryAgent to ensure only valid IP addresses are considered in the filtering process
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner ` to streamline the interface by eliminating unused methods
updated import statements in PinotSegmentRebalancer . java to include ClusterDataCache and modified computePartitionAssignment method to include ClusterDataCache to
douniaberrada : remove the deletecontainer method , it be not use anymore .
refactor DefaultSeleneseCommand to improve input validation and parsing logic to enhance robustness of command parsing and provide clearer error handling
test : add retries to create glossary test
update references from ` $ ref ` to ` $ ref ` for ` allOfRef ` , ` anyOfRef ` , and ` one
updated EntityDeletedEvent and IdentityZoneEndpointsMockMvcTests to use JsonUtils for JSON serialization to improve code clarity and maintainability by util
added a new constant ` MI _ GOP ` and validation in ` FormatConfiguration ` , updated imports in ` DLNAMediaInfo
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate testing of return type printing
added configuration locking mechanism using ReentrantLock in ParseConfigUtils . java to ensure thread safety during configuration updates
add acquirereleasecolumnssegmentoperator to the minmaxvaluebasedselectionorderbycombineoperator ( # 5649 )
simonstewart : remove the @ ignore annotation from the firefoxprofiletest
added return statements and modified the return type in the ` getSystemBars ` method to include a mapping of bar types and values to improve method
do n ' t use @ checkfornull in projectstats . addbug ( buginstance )
setting migration : fix disabled text on gtk laf
removed multiple redundant @ Override annotations from CacheControlImpl . java to streamline code and improve readability
added a check to return the current date if the recurrence ' s by days is empty in ScheduledAction . java and a corresponding test in Scheduled
replaced ` uploadButton ` with ` actionMenu ` for enabling upload functionality in ` ShareActivity ` to streamline the upload process by
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
added ` loadMetaData ` method implementation in ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading exchange metadata from
added a custom serializer for Writable objects in CrawlDbReader . java to enable serialization of Hadoop Writable objects in JSON format
remove unused import and remove unused class in test
added service and configurationPid attributes to the MDNSDiscoveryService component to enable configuration management for the MDNS discovery service
added null check before calling scrollToPositionWithOffset in ChatViewerFragment . java to prevent potential NullPointerException when messageItem is null
fix issue with bp test and the security manager
removed assertion checks for DATANODE and NAMENODE dependencies in RoleCommandOrderTest . java to streamline test cases by eliminating unnecessary
added methods to restore and dedup local information from table information in PartInfo . java to ensure proper handling of table information during serialization
corrected spacing in conditional statements across multiple Java files to improve code readability and maintain consistency
added transformation matrix to sprite batch and modified the logoSprite ' s flipping behavior to ensure proper rendering of the logo in the sprite batch
[ hotfix ] [ python ] ignore built - in aggregate in streamphysicalpythongroupwindowaggregaterule
do n ' t send event . statuschange . nodeup and event . statuschange . nodedown to avoid deadlock
do n ' t try to connect to a node that be unreachable . patch by jbellis ; review by jbellis for cassandra -
geosymbolictest . testshouldnotchangetomultiplication should not change to multiplication
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to improve content type management and ensure proper content type is
modify static variable declarations and initialization in XToolkit . java to improve clarity and enforce immutability of graphics related components
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
replaced Object metaLock with ReentrantReadWriteLock metaReadLock and metaWriteLock in EnvironmentImpl . java to improve concurrency handling
added a test method to verify the functionality of reading an identity provider in a zone using Zones Token to ensure correct handling of identity providers in
updated job scheduling to use ExpireJob in ObjectTypeNode . java and added null check in PointInTimeTrigger . java to improve job management
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve maintainability
[ rip - 10 ] send heartbeat to all broker with lock when rebalance be enable ( # 5249 )
fix ( cairo ) : add property ` ` cairo . detached . mkdir . mode ' ' to cairo configuration
[ java ] send message to slow down follower when there be a failure to send message .
change default label pattern from ` [ authors3 ] [ year ] ` to ` [ auth ] [ year ] `
update extraDepsBuilder to use CxxPlatforms for dependency parsing across multiple classes to improve consistency and maintainability of dependency management in the codebase
refactor initialization logic in GoogleCloudAPI and add dispose method in GoogleTTSService to improve resource management and ensure proper cleanup of OAuth services
( chore ) camel - core : fixed file on completion to handle dynamic file name
added a new configuration option ` reopenReaders ` in ` SolrConfig ` and modified the condition in ` SolrCore ` to check its value to
bugfix : add dialect attribute to mapwriter for freeplane version
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor code to use lambda expressions for better readability and simplify interface implementation to enhance code clarity and maintainability
fix testfacetscollector . testsumscoreaggregator to not be sensitive to round issue
removed multiple unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
update the method for providing SharedPreferences and modified the UploadController instantiation to implement direct nearby upload preferences and improve dependency injection
added support for handling " SYSIBM " and " SYSDUMMY1 " in the database parser and mode classes to enable compatibility with
refactor logging statements in TraceGatewayEnvironmentPostProcessor and introduce a new sampler method in SamplerAutoConfiguration to improve code readability and
pdfbox - 4892 : fix bug in poixmlproperties , a suggest by valerybokov
[ geot - 5449 ] fix bug in geotiffreader when no data be present .
updated import statements and refactored driver execution logic in CliDriver . java and SessionState . java to improve code clarity and enhance error
replaced the ` httpExecutor ` with ` httpScheduler ` in the ` MockRestAdapter ` class to utilize a ` Scheduler ` for
[ hotfix ] [ table ] add default implementation for ruleconditionmapper . selectbyruleidset
resolved - issue batch : add convenience method to exitstatus for capture stack trace
fix the multiblock render handler to only fire right click block if the player be the player .
fix regression introduce by readcommand refactor to get _ slice can return column _ t from a standard cf , or from a supercolumn in a super cf
removed unnecessary import of Collections in PlotConfiguration . java to streamline code by eliminating unnecessary dependencies
replaced ` buildUIAlertView ` with ` buildUIAlertController ` and refactored related methods for better encapsulation to improve code
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure the correct
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in parameter naming
added a null assertion for the service message in AdvServiceTest . java to ensure that the service message is not null before proceeding
updated key handling in MappingMongoConverter to improve type safety and clarity to enhance code reliability and maintainability by simplifying key conversion logic
removed concatenation operator from Timber log statements in NearbyMapFragment . java to improve readability of log output for better debugging
camel - 16400 : camel - core - optimize to reduce stack trace in use during runtime .
added null check for terms in FuzzyLikeThisQuery and created a test for non - existing fields in FuzzyLikeThisQueryTest to
refactor writeApplicationsLinks to use a boolean tabularList instead of a string separator to improve code readability by enabling conditional rendering of application links in a table format
replaced dspace and slf4j with apache ' s logging in createmissingidentifiers .
updated the length of the assignBytes method calls from bytes . length to bw . getLength ( ) to ensure consistency in length assignment based on the
changed the return type of the getDisplayScript method from abstract to String to provide a default implementation for the method
danielwagnerhall : replace keytopress and keytorelease with keytopress and keytorelease in remote webdriver
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
added a check to ensure active interfaces are not empty before proceeding with network configuration changes to prevent potential null pointer exceptions during network management operations
added methods to retrieve embedded objects in HSSFWorkbook and updated tests in TestEmbeddedObjects to enhance functionality and ensure correct handling of nested objects
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve maintainability
replaced instances of ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl . java ` to ensure consistency in
pdfbox : avoid exception for symbol font without descriptor
replace glstatemanager . popattrib ( ) with gl11 . glpopattrib ( ) in modelhourglass .
refactor LiveTvGuideActivity to store current guide start and end dates in a separate variable to improve code readability and maintainability by
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new classes ` CommonParentTest
* add libfreetype . so and libfontmanager . so to load libfreetype and libfontmanager . so
refactor function parsing logic to improve clarity and structure to enhance readability and maintainability of the code
loop safepointsafepointelimination : allow guard to be protect non - overflowing
[ gr - 21212 ] fix type analysis for ` ` instanceof ' ' method
added a new ` LocalizedString ` class and refactored method calls in ` Attr . java ` and ` Resolve . java ` to
added a new boolean variable ` disableClasspathSearch ` and its getter / setter in ` ServerConfig ` , and modified the condition in ` Default
update DataLine . java to use Arrays . copyOf for array copying and changed variable declarations to final to enhance code safety and maintainability by preventing modification of the original array references
change default value of retries ( ) from 0 to 2 in Reference . java and ReferencePropertyValuesAdapterTest . java to increase the number of
added JSON handling for settings in TexturePacker . java to enable configuration of texture packing settings
updated AchievementsFragment to use AppCompatTextView instances for uploaded images and wiki text views to improve code readability and maintainability
added logging statements for annotation processing and processing in TranslatingJavacPhaseTracerTest . java to improve traceability of annotation processing and processing
added ` categoryinfo ` property to ` MwQueryPage ` and updated the ` CategoryInterface ` to include it in the URL to enhance
updated assertion messages for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error reporting
added accessibility timeout functionality and refactored alarm setting in TaskbarStashController to improve user experience by integrating accessibility features and
added a condition to check for the ' ^ ' character in the GenericSignatureParser class to ensure that NoSuchElementException is thrown when the signature does not
updated access flags to include ACC _ STATIC in ClassVisitorDriverFromElement . java and added new test cases in StubJarTest . java to
add null check using Objects . requireNonNull for input parameters in IntervalFilter and added a null return check in LowpassIntervalsSource to ensure that null inputs are properly handled for improved robustness
added test cases for iterating over entries in a map using ` makePopulatedMap ( ) ` to ensure correct behavior of the iterator in the
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility during serialization
changed the timestamp from milliseconds to seconds for the created time in ImageData to provide a more precise representation of the image ' s creation time
updated SingularWebService to include " grobcovF2m " and refactored locus command handling in CASTranslator
added encryption utilities for accounts in AccountRemovalJob . java to ensure proper security by deleting private and public keys for accounts
refactor keep - alive header to use a dedicated method in AsyncHttpProviderUtils to improve code maintainability and reduce duplication
fix npe in postjoinmapoperation when map have no interceptor and lite member join
hhh - 11341 : remove inlining comment and comment processor from standarddialect
[ hotfix ] [ table ] remove unused spill enable parameter in hybridhashtable
fix some fail test for window since there be some other test fail
fix a bug in the action mapper that could cause a nullpointerexception if the action name be null .
added SerializableMode import in Mockito . java and adjusted closing brace in PluginSwitch . java to enable serialization support for Mockito instances
add support for instrument @ nullable annotation in abstractbeandefinition # setfieldvalue ( )
refactor SQL parsing logic to support isolation level in select statements to enhance compatibility with different database modes
replaced references to ` HiveConf . ConfVars . HIVE _ SERVER2 _ TRANSPORT _ MODE ` and ` HiveConf . H
added an implementation of the ` isCacheable ` method in ` GlobalOrdinalsWithScoreQuery ` to provide a default implementation that does
added a new file TestStrangeControl . java to implement a threading test for StrangeControl to facilitate testing of strange
updated file names in JsFile . java and JsLibrary . java from " . json " to " . jsfile " and " . j
added selection start and end properties and methods to ShadowEditText to enhance text selection functionality in the ShadowEditText class
close grpc server and executor , allow example to fix the bug # 1487
updated the ` use ` method in ` Jooby ` , ` Router ` , and ` JoobyTest ` classes to
added a null check for the variable ' fst ' in FreeTextSuggester . java to throw an exception if the lookup is not supported
updated line separator handling in ` T4975569 . java ` and ` T6729471 . java ` to ensure consistent line end
added support for loading and instantiating the AbiWriter class in JavacInMemoryStep . java to enable the use of an Ab
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to boolean methods inversion
[ type : refactor ] check if the thread have be shut down in pullmessageservice ( # 3995 )
refactor EnergyEndpointer class for improved clarity to enhance code maintainability and readability
refactor the handling of displayed columns in ComponentPresetChooserDialog to improve clarity and maintainability to enhance readability and maintainability of the
remove unnecessary import of bufferedinputstream from bazaar , cvs , and indexdatabase
camel - google - sheets fix switch / cases indentation
added a method to get the exported header style in CxxLibraryDescription and updated references in CxxLibraryMetadataFactory to improve header style configuration flexibility across Cxx libraries
deleted the files Constants . java and DistanceUtils . java to remove unused classes to streamline the codebase
refactor key splitting logic in RandomPartitioner . java to improve readability and maintainability of the code
[ gr - 36464 ] fix jdk . internal . foreign . fallback . fallbacklinker initialization failure .
refactor rolebindingoperationsimpl . create ( ) to handle create inline resource
added debug logging statements to UaaSessionCookieConfig . java to improve traceability and debugging of session cookie configuration
updated the calculation of ` fName ` to use ` cal . get ( Calendar . DAY _ OF _ YEAR ) ` instead of ` LOG
fix typo : ` ` o = = blockingobserver . terminated ' ' to ` ` v = = blockingobserver . terminated ' '
added error handling for fileManager . handleOption and created a new test class T8033711 to validate output from javap to improve robustness of option handling and ensure correct error messages
convert jdeps and jdeprscan tool to use stream . tolist ( )
updated logging level from error to warn and modified task retrieval logic to conditionally return null to improve logging clarity and ensure proper handling of exceptions
[ hotfix ] [ network ] enable tier storage by default in inputgatespecutils
refactor success status checks into a separate method for clarity to improve code readability and maintainability
added GL20 configuration to Cuboc and updated LwjglApplication instantiation in CubocDesktop to enable OpenGL functionality in the
removed unnecessary check for VoidType in JimpleBody . java to simplify code logic for better readability and maintainability
replaced ` DefaultSourcePathResolver ` with ` SourcePathResolver ` and refactored the ` appendToCommandLine ` method to use ` Arg
fix flaky test : logexceptionsqltest . testlogexceptionsqltest . testlogexceptionsqltest . testlogexceptionsqltest (
added a condition to check if the file path does not contain " / build / " and added a check for " \ \ build \ "
[ # 7803 ] instructor : instructor : instructorfeedbackresponsecomment : : getresponsecomments ( ) return a map of
remove duplicate whitespace in conditional return statement to improve code consistency and readability
added a new file ` TestEscapeThroughInvoke . java ` with a class ` A ` and methods to handle object escaping and equality checks to
replaced manual stream skipping and reading with Apache Commons IOUtils for improved readability to enhance code readability and maintainability by utilizing
added interceptor registration and error handling in ConnectionPool and DataSourceProxy classes to improve connection pool management and enhance error reporting during SQL execution
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of exceptions
hbase - 16400 lrublockcache . getcurrentsize ( ) should return 0 when block be not find , addendum
removed the check for zero taskCount in RecentsView . java to simplify the code by eliminating unnecessary checks
added instance configuration change listener in HelixBrokerStarter and increased sleep duration in HelixServerStarter from 1000ms to 5000ms to
added CoinmateStatic and CoinmateMetadataServiceRaw classes and updated the remoteInit method to retrieve exchange metadata to facilitate
[ mng - 6792 ] fix systempath reference to project . basedir in defaultmodelvalidator
pdfbox : update key of indirect object if the key of the referenced object be replace
add ptransform . setdisplaydata ( ) to allow set displaydata .
replaced instances of ` DefaultSubject ` with ` assertThat ( ( Object ) null ) ` and ` fail ( ) ` in ` Subject
disable MD2 and RSA key size security settings in ClientJSSEServerJSSE . java to optimize security settings for improved performance
[ hotfix ] fix checkstyle violation in optiondata
updated module - info . java files for mmm and ppp modules to improve module dependencies and organization
added error handling for server connection issues in IOSImplementation . java to improve robustness by handling potential IOException during connection establishment
removed redundant assignment of sCheckingEvents in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to ensure proper
added exception handling and improved resource management in FileSinkOperator . java and SortedDynPartitionOptimizer . java to enhance error management and ensure proper
added diagnostic output to the task call in SchemaGenerator . java to provide more detailed diagnostics during task execution
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using a
rename DataSourceMonitorTests . java file to improve clarity and maintain consistency in naming conventions
added a check to prevent duplicate loaded resource paths in ClasspathMethodScanner to improve performance by avoiding unnecessary scanning of resources
[ hotfix ] [ test ] fix npe in testserviceutil
added null check and modified response handling in RoutingInBoundHandler . java to improve error handling and ensure proper response generation
added a nullable property ` natIp ` in ` EkeyConfiguration ` and modified ` EkeyUdpPacketReceiver ` to use it to
updated imports in AsyncTaskCopyLocalJars . java , WritableByteChannelAdapter . java , Deserializer . java , and Serializer . java
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
306782 do not skip content if 100 not send , but content available
refactor timeout subscription handling in MultiTimeout . java to use AtomicReference for upstream and requestedInitial to improve thread - safety and clarity in
add compaction limit to leveledmanifest . getoverlappingstarvedsstables ( )
added @ Test annotation to TestOrcTimezone1 . java to enable unit testing for the test case
refactor metric and timer handling in Debug . java to improve clarity and functionality to enhance the management of enabled metrics and timers based on substring
added error handling for JSON processing in PinotSegmentRestletResource and simplified return statements in TraceContext and TraceContextTest to improve robustness
updated JTable to handle null superclass and added a new test class Test6888156 to improve robustness of renderer retrieval and ensure compatibility
added conditional checks for the existence of the SHELL and BUSYBOX environment before adding it to the arguments to ensure proper argument handling for
updated deleteWithoutSubscriptions parameter from 10 to 1 in DatabaseCleaningService . java to increase deletion timeout for better resource management
replaced LinkedList with LinkedHashSet for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
replaced ` deleteFilesAfterClose ( ) ` and ` fileMmapEnableIfSupported ( ) ` with ` transactionDisable ( ) `
updated iterator initialization in SortedIntList and added a default constructor to improve iterator management and provide a default implementation
added a call to unregister the object in DefaultRemoteProxy and modified exception handling in JMXHelper to improve resource management and enhance error handling clarity
[ hotfix ] [ doc ] fix rocksdb default writebuffer size to 64mb
removed unused parameters from the constructor call in Style . java to streamline code by eliminating unnecessary parameters
replace ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to prevent encoding issues when adding messages
[ beam - 1181 ] remove json graph from samzarunner ( # 1186 )
updated HelloAudio . java to replace Vector3f with MouseInput and modified Box initialization to simplify audio node creation and improve input handling
refactor LoopRotateBadNodeBudget class for improved clarity to enhance code maintainability and readability
updated ` convertToMongoType ` method to accept ` TypeInformation < ? > ` parameter across multiple classes to enhance type conversion functionality to support nested pol
ggb - 2266 : remove unnecessary complexity of inputboxrenderer . iscomplex ( )
simonstewart : fix npe in sendkeytoactiveelement . tostring ( )
added methods to scale images with specified target dimensions and transparency in AddAndScaleMultiImage . java to enhance image scaling capabilities for better visual representation
removed the extendArgumentCheck and extendWrapStore methods from DBMaker . java to streamline the code by eliminating unused methods
add shiftstatenow ( ) to the anysoftkeyboard . java file
removed the DETECTED _ ACTIVITY constant and updated related classes to reflect backward compatibility to streamline activity detection handling and encourage compatibility
updated imports from ` org . eclipse . jetty . websocket . extensions . ExtensionConfig ` to ` org . eclipse . jetty
removed unused import of Buildable from AaptPackageResources . java to clean up the code and improve maintainability
added comments to clarify usage of unused variables in multiple Java files to improve code readability and understanding of the code ' s purpose
updated the exception message to include the status code of the upgrade protocol to provide clearer information about the status of the upgrade process
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintain consistency
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed redundant code for checking plot ownership in Merge . java to streamline permission checks and improve code readability
removed deprecated getConversationID method from HttpContentResponse , HttpRequest , HttpResponse , Request , and Response classes to streamline code by eliminating
fix for ticket : 203 -- use a different file path for dummy free tt voice .
refactored the ` stripQuotes ` method in ` BaseSemanticAnalyzer ` to use ` PlanUtils ` instead of ` HashMap ` to
removed the ` Rendering ` class and refactored the ` updateRendering ` method in ` DLNAResource ` to streamline the rendering
added resolution and remote artifact repositories to DefaultPluginManager to enhance plugin management by including resolution and artifact repositories
( chore ) camel - cxf : fix resource leak in unit test
updated PhysicsClient . java with new functionality to enhance physics functionality and improve user experience
added JUnit @ Ignore annotation to SessionTest . java to mark tests as ignored due to frequent failures
added a new File object instantiation in ZipFile . java to facilitate the creation of a file with specified name
added a deprecated method ` handleAll ` to the ` TryType ` class to indicate that the method should no longer be used in favor of
add a test case for default constructor in ChannelTest . java and modify the uid field in Channel . java to ensure that the uid is not
added a new ` StackTraceUtils ` class and updated imports in ` GenericDAOImpl ` , ` ForumServiceImpl ` , and ` For
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution by eliminating unnecessary test annotations
refactor argument handling in FunDefBase and ParenthesesFunDef classes to differentiate between parentheses and unparsing to improve code cl
updated the SQL query in CheckDatabaseHelper to use cluster names instead of type names and improved error logging to enhance clarity of configuration selection
add innocuousthread to jdk . internal . misc . innocuousthread for java 11 +
updated JsonTreeReader to throw an exception for unexpected JSON elements and added a new test for nextJsonElement to improve error handling and ensure correct
added a new option ` -- " ` to the ` TestCommand ` class and a corresponding test in ` ExternalTestRunnerIntegrationTest ` to
added ` dedup ` and ` indexSolr ` methods to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to standardize method signatures for
[ flink - 16400 ] [ table ] add -- planner option to streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure a clean state for testing purposes
updated progress handling in Progress . java and RSSReader . java to include displayProgressPercentage and manage auto - show behavior to improve progress management and
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added write and writeAndClose methods for writing POIDocuments and File in IOUtils . java to enhance functionality for writing documents and ensure
updated output statements to include newline characters for runOptions , sketch , and exportClassPath to improve readability of output for better debugging
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for its properties to enhance
modified the ` apply ` method in ` CustomQueryFilterFactory ` to handle generic user search queries and updated the port in ` TestLdapAt
added default ports support for server and HTTP ports in NettyHttpServer , DefaultRouteBuilder , DefaultRouter , and UriRoute classes to enhance
updated status verification methods in SnmpTargetHandler , AbstractSnmpTargetHandlerTest , SwitchChannelTest , and SnmpTargetHandlerTest to
add permission check to the instructorfeedbackeditpageaction so that only instructor with submit privilege can submit session
added @ Incubating annotation and @ Deprecated annotation to AvailableSettings . java to indicate that the class is outdated and should no longer be used
refactor path handling in FileResolverImpl . java and add WarFileResolverTest . java to improve path validation and introduce War
updated string representation of newFlushedSize in DocumentsWriterPerThread . java to include docstores to improve clarity on the size of
fix miss call to block . getunlocalizedname ( ) in examplemod .
change strip whitespace settings from ' X ' and ' Y ' to ' X ' and ' Y ' in ImageProcessor . java to ensure consistent
increased the thread count in the lazyWeakLock from a fixed value to a dynamic one to allow for more flexible locking behavior
updated the ` deserializeFrom ` method to use ` exactSearch ` instead of ` false ` in ` TsFileSequenceReader . java ` to
[ hotfix ] [ table ] remove unused date format parameter in csvsaveservice
added preferred size adjustment for the pane in NavigationShareTab . java to improve UI responsiveness based on the preferred size of the FList
replaced OffsetAttribute with State in BeiderMorseFilter and added a test for custom KeywordAttribute in TestBeiderMorseFilter to
refactor Upnp - related classes for improved clarity and organization to enhance maintainability and readability of the codebase
use blockpos for burst collidedat in lenswarp
added JUnit imports and implemented a custom JSON serialization method in JsonTest . java to enhance testing capabilities and improve error handling during JSON serialization
[ hotfix ] fix checkstyle violation in mutablecontextdatasupplier
changed exception handling from throwing a SolrException to logging a warning instead of throwing a SolrException to improve error handling and provide clearer logging for
updated KubernetesMockServer to use https instead of true to enable HTTPS connections for testing purposes
[ gr - 36464 ] fix miss stamp in defaultjavalloweringprovider .
updated HTTP response methods and headers in DefaultServlet and DefaultServletTest to support both GET and POST requests to enhance security by restricting access to
tika - 3992 -- fix for tika - 3993 -- use locale . us for decimalformat
updated exception handling to return NOT _ FOUND instead of BAD _ REQUEST in ShowFileRequestHandler . java and added a new test case in Show
added exception handling functionality in ` ReflectorClassWriter ` and a corresponding test in ` ReflectorTest ` to improve error management and ensure correct
added a ` clamp ` method to the ` Vector ` class and updated its implementation in ` Vector2 ` to provide a way to clamp vectors
added client - specific imports and modified the way OAuth2Authentication is created in ChainedTokenGranter . java to ensure proper handling of
refactor BC _ instanceof class to improve code readability to enhance maintainability and facilitate future development
added a logger instance and modified save flags in EditorBottomSheetBehavior . java to enhance logging capabilities and improve code readability
updated JUnit imports and annotations in UaaUrlUtilsTest . java to utilize Jupiter ' s @ PollutionPreventionExtension
hhh - 11341 : fix npe in nativequery . addScalar ( )
added a caching mechanism for font attributes in SunLayoutEngine . java to improve performance by reducing redundant calculations for font attributes
use intarraylist instead of intbigarray for blockpositionbyhash
simonstewart : make the selenium - backed webdriver work with the new selenium - backed webdriver
refactor BrokerRequestUtils to improve code structure to enhance maintainability and readability of the code
refactor ` InjectorBuilderImpl ` to use a ` instanceMap ` instead of a ` LinkedList ` for managing instances to improve clarity and
updated method calls to use ` buildTarget . getBasePath ( ) ` instead of ` ParserConfig . getAbsolutePathToBuildFile ( ) ` to
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix npe in echo
do n ' t re - register jabber connection listener if it be n ' t need .
changed the default load factor from 0.67F to 0.67 in IntHashSet . java to simplify the default load factor for improved
added methods to retrieve and store physical variations in VectorizationContext , VectorPTFOperator , Vectorizer , and VectorPTFDesc to
move everything from google . zxing to google . zxing . client . j2se
refactor conditional logic in OverviewState . java to improve clarity and structure to enhance readability and maintainability of the code
added @ Entity annotation to BaseActivityEventEntity . java to enable persistence of activity events in the database
added tracing partitions in NavBarSwipeInteractionHandler and TouchInteractionService , and modified the SYSTEM _ TRACE constant in TraceHelper to disable
added a new file ` InvalidOptions . java ` to demonstrate usage of javap with invalid options to demonstrate usage
added a check to ensure the number of displays matches the number of supported bounds in DisplayController . java to improve error handling and provide clearer
refactor OAuth20UsernamePasswordAuthenticator to utilize OAuth20Utils for retrieving client ID and client secret to improve code organization and reusability
change the default value of the _ unwrapServletException variable from false to true to enable unwrapping of servlet exceptions by default
added handling for shortcut status changes in PackageUpdatedTask . java to ensure proper status management during shortcut updates
camel - 16400 : fixed seda endpoint to not set a queue size if it be set to zero .
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App . java and implemented batch updates in Kernel . java to enable batch
added HttpClient and HttpClientConfiguration to ThirdEyeApplication . java to enhance HTTP request handling capabilities in the application
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enable retrieval and management of job instances based on their sorting criteria
replaced an exception throw with a return statement in CryptoFacilitiesTradeService . java to improve error handling by adapting the order cancellation to
make sure keyboard be hide when click in algebraviewweb . onclick ( )
sulong : sulongheap . memmove should use native function for memcpy .
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve code readability and maintainability
ggb - 2636 : make tooltip blockable in the toolbar menu
updated DefaultDateTypeAdapter to accept DateFormat and timeStyle as parameters to enhance flexibility in date type adapter configuration
updated player identification format in ListCommand . java to improve clarity of player identification output
added a check to return the current instance if the list is empty to improve performance by avoiding unnecessary operations on empty lists
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper handling of CommandException during execution
updated the ` getLikeExpression ` method to include a boolean parameter for regex filtering to enhance flexibility in expression evaluation based on user - defined
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide a standardized way
added listener management to the runChild method in LuceneTestCase . java to ensure proper locale handling during test execution
refactor multiple PG - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method to improve code readability and maintainability
added a test case for route builder reference in OSGiBlueprintTestSupport . java to ensure proper functionality of route builder in OSGi
nifi - 1643 : fix test to use contains instead of substring
refactor returnTypeSubstitutable method to simplify its implementation to enhance code readability and maintainability by reducing redundancy
added ThrottleType enum and modified throttling logic in TestExecutor . java to enable configurable throttle types and improve performance control
replaced pixel assignment with a direct assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to
refactor annotations in Annotation . java and AnnotatedElement . java to improve code readability and maintainability
added a new interface ` Model ` and modified ` Sheet ` and ` Workbook ` classes to implement it to provide a standardized interface for
( chore ) camel - http : use constant instead of hardcoded regex
added a ` clearEntityManager ` property and its getter / setter in ` JpaItemWriter ` , ` JpaItemWriterBuilder ` ,
added null checks for ShortcutInfo in multiple classes to improve robustness by preventing potential NullPointerExceptions
replaced instances of ` new TwoDimensionalCollectionValuedMap < > ( ) ` with ` new TwoDimensionalCollectionValuedMap ( true
updated exchange host and exchange name from " BTC - e " to " wex . nz " and from " BTC - e .
added null checks for column readers and readers in OrcEncodedDataConsumer and EncodedTreeReaderFactory to enhance robustness by preventing potential NullPointerException
added null check for files in SegmentInfos . java and implemented a test for IndexReader . open after deletion in TestIndexReader . java to
fix sort in hsearch - use full millis ( # 3787 )
modify the return statement to handle negative and positive percent values to ensure that the returned value does not exceed the defined limit of 100 %
updated limit check from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 16400 : camel - core - optimize route configurer to reduce log verbosity and reduce verbosity .
improve javadoc of getnextchunk ( ) for clarity
updated package and import statements for NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase to extend from LuceneTestCase instead of Test
added a new stateful mapper and updated the input handling in OutputHandler and StatefulOperatorTest classes to improve state management and ensure correct input handling
removed null check for fill and stroke before setting bitmap shader shift in Area . java and Line . java to simplify code by eliminating unnecessary
removed database existence check and modified constructor in Blockchain . java , BlockchainTest . java , and Blockchain . java to streamline database
added trimming to the variable ' val ' in SQLPlusSupport . java to ensure proper formatting of the variable ' val '
enable async by default for http / 1.1
ggb - 1353 fix divider location for split pane
added health check metrics and updated health check methods in ControllerMeter and PinotControllerHealthCheck to enhance monitoring and error handling for controller health checks
added visibility control for shared avatars in LocalFileListAdapter to hide the shared avatars when not needed
remove @ clientbundle . source annotation from mebisresources . java
[ java ] fix indexoutofboundsexception when send / receive udp ping .
added a check for log level before executing commands in LogInterceptor . java to ensure that commands are only executed if log level is not fine
replaced CountDownLatch with assertWaitUntil for span verification in EventBusTracingTestBase . java to improve test reliability by ensuring all
refactor QueryParser to improve locale management and encapsulation to enhance code readability and maintainability by centralizing locale - related methods
fix concurrentmodificationexception in entrycustomizationdialog ( # 3640 )
[ drools - 7 ] fix binding of beta node constraint in manners
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` , ` OCSPResponse ` , and ` OCSP
refactor server state management in SSL . java to improve clarity and control over server failure handling
added methods to get and set the open connection count in SourceCounter and SourceCounterMBean to enable tracking and management of the number of active connections
expose executionstrategy . fields ( list < fielddefinition > ) to be able to add field definition to interface
refactor the method ` createDefaultJavaPackageFinder ` to ` getSrcRoots ` and introduce a new method ` getSrcRoots ` to
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve output handling by utilizing a more concise
[ hotfix ] [ test ] fix flaky testfilesourcetextlinesitcase
added support for handling DataTable instances in JRubyStepDefinition to enable compatibility with Cucumber ' s DataTable features
updated author visibility and refactored image node retrieval in SearchImagesRenderer and ApacheHttpClientMediaWikiApi to improve user interface clarity and enhance
fix typo find by codespell on fossies . org
improve error message when parse formula with near char
added methods to get and set the bind address in WebSocketClient . java and modified visibility of WebSocketFuture in WebSocketClient . java to enhance WebSocket
[ java ] close clusteredmediasriver before call archive . delete ( ) . deletearchivedirectory ( ) . deletearchivedirectory ( )
replaced manual width and height setting with a dedicated setSize method in WidgetGroup . java to improve code readability and maintainability
changed the comparison of sessionFixationAttribute to use Boolean . valueOf for better type safety to enhance code readability and prevent potential null pointer exceptions
refactor channel starting logic in LALogicLinesFragment . java to use a switch statement for edgeOption to improve code readability and
danielwagnerhall : add a linear backoff mechanism to the chrome driver .
added URI template support in TraceExchangeFilterFunction and updated ClientResponseWrapper constructors to include HttpMethod and httpRoute to enhance tracing capabilities by allowing dynamic URI
use integer . min _ value when purge precompactedrow ; patch by jbellis
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
[ # 7803 ] add isnotsatureallowed flag to feedbackcontributionquestiondetails ( # 7806 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] suppress findbugs warning in kafkaexactlyoncesink
added PGConnection support to the connection proxy in PooledConnectionImpl and created a test for PGConnection in BaseDataSourceTest to enhance connection management
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
changed log level from warn to info in TokenAuthenticationHandler . java to provide clearer logging for missing token encryption secret configuration
marked the Hazelcast class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added topology update event handling and improved command report creation in various classes to enhance kerberos server action management and provide clearer feedback during topology
replaced ` writeStr ` with ` writeExternString ` and refactored iterator handling in ` NamedListCodec . java ` to improve
fix npe in migrationmanager . assigncompletelylostpartitionowner ( ) ( # 11301 )
added import for InclusionRule and set schema inclusion rule in ApiExample . java to enable schema inclusion options for better access control
[ hotfix ] [ test ] fix flaky test in streamexpressiontest
added coordinate sequence validation for polygon ring creation in SDO . java and corresponding tests in SDOCreateTest . java to ensure proper handling of
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to retrieve the base name and
added a new method ` setDebugEvaluationOutputForNextEval ` to ` FormulaEvaluator ` , ` SheetUtil ` , and ` XSS
test ( refactoring ) : disable junit 5 test ( # 4649 )
removed the ` isLiveTv ` parameter from the ` ExoPlayerProfile ` instantiation and updated the condition in ` PlaybackController `
added a return statement to the DynamicStyleBar class to ensure proper termination of the method execution
added logging statements for setting and resetting the REPL dump state in Utils . java to improve visibility into database property management and facilitate
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future development
added a check for both isObject ( ) and isBoolean ( ) in MethodEmitter . java to ensure proper handling of boolean types in the code
rename llvmobjectnuller to llvmaddressnuller and make nullify public .
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
add unit test for caffeine cache configuration with transactionawarecachemanagerproxy
added a method to calculate the bounding box of a mesh and updated its usage in the Mesh class to enhance collision detection functionality and improve error handling
added a TargetHashFunction enum and refactored hash function logic to use it to improve flexibility in hashing algorithms based on the specified target
refactor DefaultConfigurationProperties to improve configuration handling to enhance performance and maintainability of configuration management
added high light color and alpha settings for highlight arrow in ListViewMultiChartActivity and BarChart classes to improve visual appearance and customization
updated the mapping of ` pgSgPathPlanMap ` to use ` tmpPg ` instead of ` pgSgPathPlanMap `
( chore ) camel - infinispan : fix typo in test
added a check to ensure the artifact exists before fetching and refactored dependency fetching logic in MavenArtifactFetcher and MavenDependencyResolver to improve robust
updated the fragment shader to include a conditional check for GL _ ES to ensure compatibility with OpenGL ES environment
hbase - 20536 use set instead of sortedset in rsgroupinfo ( # 3649 )
added a try - catch block to load the JspPage class and changed log level from warn to debug to improve error handling and reduce log verbosity
updated the DefaultMatchVersion handling in CustomAnalyzer and added a test for version aware filtering in TestCustomAnalyzer to ensure compatibility with Lucene 8
added a test method to verify the functionality of setting package archive information in ShadowPackageManagerTest to ensure correct retrieval and storage of package archive information
replaced direct method invocation with MethodUtil ' s invoke method across multiple classes to enhance access control checks and improve code maintainability
added ProjectConfigurationStartEvent and TaskStartEvent imports in GradleBuildService and Main classes , and modified progress listener to include progressUpdate
removed unnecessary synchronized block from AndroidWebDriver . java to improve performance and reduce unnecessary synchronization overhead
do n ' t hardcode initializationfailtimeout in hikaripool . setinitializationfailfast ( )
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method in the ` Net ` class to simplify
changed the ` isNative ` field to be ` transient ` and modified its value from ` readBoolean ( ) ` to ` false ` to
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ruleenablehandler to ruleenablementactionhandler ( # 3649 )
refactor TagSupport class fields and methods for clarity and consistency to improve code readability and maintainability
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity and debugging information for authentication requests
replaced instances of ` getBasicSourceOptions ( ) ` and ` getBasicSinkOptions ( ) ` with ` getBasicSourceOptions ( ) ` and
added null check for the registrant repository before checking its ownership to improve error handling and provide clearer feedback when the repository is not found
added support for font file extensions " . otf " and " . OTF " in font name checks to ensure compatibility with additional font formats
refactor type handling in AnnotationMatcher to improve clarity and efficiency to enhance readability and maintainability of the code
updated log level from " OFF " to " SEVERE " in Grep . java to provide more detailed logging for debugging purposes
added a check for debug logging before logging messages in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when
replaced the includes list with excludes list and updated null checks for includes and excludes to ensure proper handling of empty lists and avoid potential NullPointerExceptions
added methods to check if the default screen should move to the default screen on home intent to enhance user experience by allowing navigation to the default screen
updated the maximum bitrate from " 110 " to " 30 " in the configuration to improve bitrate management for better performance
removed the ` getOptions ` method from the ` CommandLineParser ` class to streamline the code by eliminating unnecessary functionality
trim whitespace from the return statement in MutableDatabaseProperty . java to ensure proper formatting of the return value
updated the file path construction for the output filename in XOMParserTest . java to simplify the output filename for better readability and maintainability
do n ' t use process . pid ( ) in the error log message ( # 2638 )
added ` getLoadedMusic ` and ` getLoadedSound ` methods to ` MusicLoader ` and ` SoundLoader ` classes to
updated import statements and type casting in OnBeanCondition . java to improve code clarity and ensure type safety
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for debugging purposes
disable the pause button in CPUFeature and MemoryFeature to ensure that the pause button is only selected when it is not already selected
refactor account preference management by replacing ` PreferenceMultiline ` with a new ` createAddAccountPreference ` method to improve code readability and
do n ' t send a ' available ' presence to the packet writer if it ' s already available .
modified the initialization of StringBuilder based on utflen and adjusted its initial capacity based on its value to improve performance by optimizing StringBuilder creation based on
disable StatsD export in WebEndpointsAutoConfigurationIntegrationTests to improve performance by avoiding unnecessary metrics export
8287353 : use snippet tag instead of pre tag in javadoc of interruptedexception
refactor ServiceTicket class for improved clarity to enhance maintainability and readability of the code
refactor connection check logic to improve clarity and structure to enhance readability and maintainability of the code
added a conditional check for the target type in the canConvert method of ArgumentArrayMessageMapper to ensure proper handling of payload strings for Map types
[ ds - 3752 ] fix bug in solrservicecommunitycollectionitemfilterplugin and test
replaced ` sExemptOfPasscodeActivites . add ( AuthenticatorActivity . class ) ` with ` setFlags ( Intent . FLAG
refactor : remove @ deprecated annotation from patternparameterconfigurator . java ( # 2278 )
changed the return type of ` beginDraggingWidget ` from ` void ` to ` boolean ` and added null check for ` image . getD
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root and collect components in DynamicStyle . java to prevent NullPointerException when root is null
add a method to update the confusion matrix in the test class , so that it can be use in a test .
bug 61791 - thread . getlastsampleok ( ) should not be call in case of an exception
added unit tests for handling connected devices and connection states in ShadowBluetoothHeadsetTest . java to ensure correct functionality and state management of connected
fix typo : # autowire - > # autowired
added " clone " method to the set of object methods and introduced a new constant for finalize method to enhance functionality by allowing the use of a
added null checks for counters object in IntegrationTestBigLinkedList . java to prevent runtime errors due to insufficient YARN configuration
return not _ implemented when can _ get _ instance _ info be set to false in jdwp .
updated the parameter name from ' service ' to ' serviceId ' in the setRegisteredServiceFilter method to improve clarity by using a more d
added a null check before running the Runnable on the UI thread to prevent potential NullPointerException when getActivity ( ) is not initialized
[ hotfix ] [ runtime ] rename logger to logger in scheduler and heartbeatsource
added ` stringType ` property and methods to set and get its value in ` DatabaseAdaptor ` and ` JDBCSessionDataStore ` classes to allow
updated assertions in UIMAUpdateRequestProcessorTest from " language : english " to " suggested _ category : * " and modified exception handling
refactor thread name management by introducing ` updateThreadName ` and ` resetThreadName ` methods in ` SessionState ` and ` Hive
refactor TaskletAdapter to improve code structure to enhance maintainability and readability of the code
drools - 22200 fix decisiontableimpl . evaluateall ( ) ( # 2223 )
added glflush ( ) to texturemap . gettexturemap ( ) and modified defaultenabled to true in splashprogress . java to
added a tooltip text to the showCGCP checkbox in RocketPanel . java to improve user experience by providing context - sensitive tooltip functionality
replaced ` owner . getTypes ( ) . add ( e ) ` with ` owner . addType ( e ) ` in ` EnumFactory `
show the mnemonic for the reload action ( # 5379 )
ggb - 1353 use stringtemplate . defaulttemplate instead of getlabelsimple ( )
change the type of the BRIGHTNESS _ FACTOR from intValue ( ) to doubleValue ( ) to ensure consistent data type usage for B
refactor SSCMHistoryParser to improve action parsing logic and enhance error handling to improve clarity and robustness in handling revision parsing
added an ` isAdmin ` parameter to the ` createUser ` method and implemented ` listUsers ` and ` userIsAdmin ` methods to enhance user
added null checks for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes to ensure proper handling of method
updated logging statements in DynatraceExporterV2 . java and DynatraceExporterV2Test . java to use placeholder syntax
updated method parameter names from ' runnable ' to ' task ' in Context . java and Response . java to improve clarity and consistency in naming
fix mixinitemstack . setcapabilitiesspongebuilder not be call .
updated the assertion in LifecycleUtilsTest to use the correct execution ID from the binding object to ensure the test accurately verifies the correct execution ID
added conditional checks for CreateSmartContract and TriggerSmartContract in Wallet . java and updated contract handling in GetContractServlet . java and TriggerSmart
added new package - info . java files for various components in the dtfj . image , dtfj . java , and dtf
removed synchronized modifier from the add method in DocumentsWriterDeleteQueue . java to improve performance by avoiding unnecessary synchronization
added a check to prevent duplicate JavaFileObject instances in JavadocTool . java and refactored test execution in T7091528 . java
changed the default value of the STRIP _ IPV6 variable from " true " to " false " and updated the substring logic accordingly to
updated the LoginServerTokenEndpointFilter to accept a list of parameter names and modified the loginInfo constructor to accept this parameter to enhance flexibility
added a new C _ KEY constant and updated language checks in LanguageFactory and CPPParserTokenManager to support support for C - specific language
refactor ` MoreFutures ` to ` MoreExecutors ` and introduce a new ` MoreExecutors ` class to improve code organization and
added caching control and expiration headers to the LoginService and FormAuthenticator classes , and updated response assertions in ConstraintTest to enhance security by preventing
updated error logging to include exception message to improve error reporting by including exception details
updated HSSFTests . java to replace AllHSSFUtilTests with specific test classes and modified assertions in TestEmptyDocument . java
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
updated output handling in TestCommand . java to check for null output to improve robustness by avoiding potential NullPointerExceptions
added external resource control priorities for before and after resolution in Java2DRenderer to improve resource management during access control execution
added exception handling to the ` draw ` method in ` TestTriggerCoverage . java ` to ensure that the JVM fails at some fonts on Windows
changed the ` mbean ` variable to be ` final ` and refactored CPU time validation logic in ` GetInternalThreads . java ` to
updated whitespace checks in TabsAndIndentsVisitor to include comments to ensure comments are not empty before proceeding
updated assertions in TestTriggerIntegration to use a fixed value of 100.0 instead of a fixed value of 5.0 to increase the expected
change equality checks from ` equals ` to ` equalsIgnoreCase ` across multiple classes to ensure case - insensitive comparison for change sets
added a method ` getString ` to ` ShadowBundle ` to retrieve a string value based on a specified key and default value to enhance functionality by
updated date and time formatting logic in TweetActivity . java to accommodate locale - specific formats to enhance flexibility in displaying date and
nifi - 11341 : fix npe in case of empty connection list in standardprocesssession
refactor keyboard request logic by introducing a new method ` requestFocus ` to improve code readability and maintainability by encapsulating focus request
update extra classpath handling for file paths to ensure proper formatting of canonical paths to avoid potential issues with file paths that contain spaces
make sure solve ( ) do n ' t create a new one
added import statement for org . springframework . integration . core . Message in GenericMessage . java to utilize the Message class for improved
refactor SQL query construction in PostgresConnector , TaskAttempt , and MapReduceJobHistoryUpdater to use a new join method to improve code
updated file filter selection logic in AquaFileChooserUI . java to ensure only valid file filters are set to improve user experience by prevent
reformatted code for better readability and consistency in P2PTransportManager . java to improve maintainability and enhance code clarity
lucene - 45380 : fix arrayptg . toformulastring ( ) to return boolean value
updated import statements in PGtokenizerTest . java to utilize assertEquals and assertTrue for improved assertion handling
refactor variable handling in Java2TypeScriptTranslator and add a new test for nested anonymous classes in StaticsTests to improve type safety and
added sequence creation and default setting for PostgreSQL auto - increment columns in AddAutoIncrementChange . java to ensure compatibility with PostgreSQL ' s auto -
updated byte reading logic in DataInput . java to handle negative values correctly to ensure proper handling of negative byte values and prevent potential errors
pdfbox - 4892 : remove unnecessary unit test , a suggest by valerybokov
updated method call from ` getParent ( ) ` to ` getParent ( ) . getParent ( ) ` to ensure proper retrieval of the parent component
reformatted code for better readability across multiple Java files to enhance maintainability and clarity of the code structure
use engine _ free instead of engine _ finish in test .
added iteration methods to multiple controller classes and updated iteration event handling to improve iteration event management and ensure consistent event firing behavior
release HttpContent instances in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent potential memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of logs during recovery
modify URL handling in BrowserActivity to launch a specific activity based on the presence of " twitter : / / " to improve user experience by allowing
added a client for awaiting host status in DeploymentGroupTest . java to ensure proper handling of host status during deployment
changed the logResult parameter from false to true in VisibilityController . java to allow listing labels for improved functionality
increased the maximum number of auto - retries from 0 to 25 in RestTemplateRetryTests . java to allow more flexibility in logging
remove system . out . println from TranslatorSupportTest . java and add @ Override annotations in StandardTypeMapperComponent . java to improve code cl
added support for the " fraction " resource type and its corresponding converter in the resource management classes to enable proper handling and conversion of fraction values in
removed a conditional check for file write confirmation in BasicFrame . java to simplify the code by eliminating unnecessary checks
added logic to retrieve groupId and artifactId from the resolution result in the findNewerDependencyVersion method to ensure that groupId and artifactId are not null
hbase - 11341 addendum : fix npe in namespacestatemanager . createtable ( )
refactor multiple Java classes including TeeSinkTokenFilter , Token , TokenFilter , Tokenizer , FlagsAttribute , OffsetAttribute , PayloadAttribute ,
refactor TestFuzzPreLoop . java for improved clarity to enhance code maintainability and readability
added a check to ensure f0 is non - negative in HTSVocoder . java to prevent potential errors when f0 is negative
updated logging messages in SchemaRetriever . java and added null check for pkColumn in TableRetriever . java to improve logging clarity and prevent potential
add a method to get the charset from the b2cconverter and remove the clearEncoders ( ) method from the request .
added SharedPreferences checks and handling for empty screen settings in Workspace . java to enhance user experience by allowing users to choose whether to allow empty screen
added a warning log indicating the deprecation of cucumber - needle in favor of cucumber - cdi2 or cucumber -
refactor theme handling in ShadowThemeTest , ShadowArscAssetManager , and ShadowVMRuntime classes to improve theme management and address retrieval functionality
updated error message formatting in VerifyFast . java to use Arrays . toString ( byteArray ) for better readability to improve clarity of error messages
no effective change - remove @ dbmigration annotation from ehistory2
updated conditional checks and added new prototype functions in ScriptGenerator , Global , ScriptObject , and ScriptObject classes to improve type safety and enhance prototype
updated the shuffle method to include a random value for readers to enhance randomness in the reader selection process
updated the display name assignment logic in UsersAndGroupsSearchProvider . java to handle different user types to improve clarity and specificity of the
updated the path formatting in CookieRetrievingCookieGenerator to ensure a default value is provided to improve robustness by preventing null or empty path
remove unnecessary closing braces in multiple Java files to improve code readability and maintainability
changed the variable declaration from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated comparison logic in ValidationResult . java to check for non - zero page numbers to ensure that page numbers are not equal to zero before proceeding
added a null and equality check for the focused widget in UIDropdown . java to ensure that highlighting occurs only when the focused widget is
fix checkstyle issue in util / soundutil . java ( # 712 )
refactor methods to use ` getAppleCxxPlatformFlavorDomain ( ) ` instead of passing ` appleCxxPlatformFl
add test case for show statement with format tab - separated column name and type
rename ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and update references in ` AbstractHTTP2ServerConnectionFactory ` to
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a new file TestGetLogger . java to test the behavior of Logger . getLogger with null checks to ensure that the Logger functionality behaves
added a data field and a getter method in PathSharingContext , removed the sharedMap from ScriptedProcessor , and ScriptedDecideRule
[ gr - 11313 ] fix unsafe . getobject volatile to use compilerdirectives . castexact .
added support for " NEXT VALUE FOR " in NextValExpression and updated related classes to enhance functionality to support multi - row values in SQL queries
improve error message when resource bundle be not pre - cached
added a threshold for pending writes in the BoundedLocalCache and implemented a corresponding test in BoundedLocalCacheTest to enhance cache management by
added " Leverage _ Level " and " orderDirection " properties to QuoineExchange and QuoineNewMarginOrderRequest classes to
added a private method ` boundInitialization ` in ` PropertyDescriptor . java ` and created a new ` Test7192955 . java ` class
added a display mode callback interface and modified display mode logic in LwjglApplicationConfiguration and LwjglGraphics to enhance flexibility
added null check for buttonsAwatingRelease in Tabs . java to ensure proper cleanup of resources when the parent is not null
refactor wrapWidth calculation and update its usage in LineCell . java and StyledTextAreaSkin . java to improve code clarity
corrected a typo in the error message from " argomento del parser non deve essere nullo " to " arg
changed ` HashMap ` to ` LinkedHashMap ` for ` paramValues ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper ` to ensure
danielwagnerhall : use string . format instead of string concatenation .
simplified the namespace retrieval method in StaxXmlPullParser . java to improve code readability and reduce dependency on NamespaceContext
removed the ` nestedJoins ` configuration from multiple test classes to simplify the test setup by eliminating unnecessary configuration
server : fix the account type check to allow root admin only
added JavacFileManager caching to SourceFileManager and modified CompletionTaskProcesor constructor to include a cursor parameter to improve performance by
set default values for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
replaced JUnit Assert with Hamcrest assertThat in KuduIOIT . java and XmlIOTest . java to
use util . createhandler instead of new handler in renderer
use long . bytes instead of long . size in symbolmapreaderimpl . keytooffset ( )
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to streamline output for better readability and performance
removed the Reflection class and updated package declarations in Jooby . java and TypeConverters . java to streamline code by eliminating
refactor ` ThreadlessExecutor ` to remove dependency on ` ExecutorService ` and introduce new methods ` isFinished ( ) ` and ` set
refactor error handling in DateTimeFormatter and add new tests in TestDateTimeParsing to improve robustness of date formatting and ensure correct handling of null values
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and introduce a new method ` chunkLengthInKB ` to improve
added handling for WILDCARD case in mmm Types . java and created a new class T7034495 . java with generic interfaces to
replaced ` do { } ` with ` while ( key ! = null ) ` in ` LotsOfEvents . java ` to improve
updated conditional statements in TransclusionDecideRule . java to improve clarity and structure to enhance readability and maintainability of the code logic
remove versionutils . printmicronautversion ( ) from micronaut - core
added unit tests for Print _ Area and Area3DPtg in TestBugs . java to ensure correct formula construction and type retrieval in the
updated MindIconFactory to handle a description string before creating the MindIcon instance to improve clarity by avoiding unnecessary formatting of the
updated the ` onHomeIntent ` method to accept a boolean parameter indicating if the internal state has been handled to enhance flexibility in handling home
refactor preferDependencyTree assignment in CxxBuckConfig . java to improve readability and maintainability of the code
added ` showDetails ` method to multiple activities and updated related fragments to accept an ` activeTab ` parameter to enhance the functionality of the fragment
updated function names from " $ apply " to " apply " across multiple classes to standardize naming conventions and improve code readability
added a method to randomize the maximum symbol size and updated the size assertions in the MinimalEncoder and HighLevelEncodeTestCase classes to
updated header description and parameter formatting in SourceBuilder . java to include required and required fields to improve clarity and accuracy of header representation in the
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure that the adapter updates after data changes
removed the ` setDefaultWALSyncMode ` method from ` ShadowSQLiteConnection ` to streamline the connection configuration by eliminating unnecessary
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure proper handling of
remove unused method from defaults3crasyncclient
updated dud password test cases for corrupted streams in ParserTest . java to accurately reflect the expected behavior of the dud password test
add ` ` found - content ' ' to the assertion message in ` ` hazelcast - test ' '
do n ' t bailout if graalinternalexception be encounter .
mob - 712 : make euclidianpen . createCompatibleImage ( ) work with max width and height
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future development
added a ` limit ` parameter to the ` getOrderBook ` method and updated related methods accordingly to allow users to specify a limit on the order
move gotwrongoomeexception to vm . share . gc and change it to heapoomeexception
nifi - 11341 : allow dataflow to configure streamreadconstraints . maxstringlength ( integer . max _ value )
updated the method to retrieve the engine string to default to an empty string instead of null to improve robustness by avoiding potential null pointer exceptions
renamed ` FullIterator ` to ` WheelIterator ` and updated references in ` TimerWheelTest ` to improve clarity and consistency
do n ' t swallow runtimeexceptions in buginstance . getformat ( )
increased the timeout duration in the LocalChunkProviderTest from 3 seconds to 10 seconds to improve test reliability by allowing more time for
changed the visibility of the menu item from true to false to improve the user interface by disabling unnecessary visibility of the menu item
updated DefaultResultSetHandler to resolvecriminated result maps and added a new Contract class with properties to enhance result map handling and introduce new contract
added null checks and unregistering logic for defaultHome and mUpdateRegisteredPackage in OverviewComponentObserver . java to ensure proper handling of null
removed VertxGen annotation from PumpImpl . java to streamline code by eliminating unnecessary dependency
removed unnecessary casting to FileDisplayActivity in FileDetailFragment and OCFileListFragment to simplify code and improve readability by eliminating unnecessary
trim whitespace from tokens in ConfigAttributeEditor and add a new test for trailing and leading spaces in ConfigAttributeEditorTests to ensure proper formatting of
rename classes ClassUsingAnotherAuxiliary and ClassUsingAuxiliary to ClassUsingAuxiliary and SelfClassWithAux to improve clarity and
[ gr - 38686 ] make single module reference public .
updated case handling in DatabaseMetaData to differentiate between " TABLE " and " SYSTEM TABLE " based on the presence of " pg _ " prefix
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated RQST field description and modified exception handling in ThriftHiveMetastore . java and HiveMetaStore . java to improve cl
added a new module - info . java file for the core module to define module exports and dependencies for better modularity and encapsulation
added logic to manage the flush state and fill state in SslConnection . java to improve handling of encrypted output and enhance fill state management
updated Log4j2LogDelegateFactory and LoggerFactory to improve logging functionality and added NoExceptionInInitializerErrorTest to enhance logging capabilities and
8019048 : test7029048 : jdk / test7029048 / test702904
refactor ` ExecutableFindOperation ` , ` MongoOperations ` , and ` ReactiveFindOperation ` classes to improve code organization and enhance maintainability
added " org . postgresql . ssl . LibPQFactory " to PGProperty . java to utilize PostgreSQL SSL library for improved connection
disabled the test annotation in TestInterProcessSemaphoreEdges . java to indicate that the test is currently failing due to pending issues
sort resource names in case - insensitive order to improve readability and maintainability of the code
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` and ` TerminalFactory . java ` to support
added support for additional file types " . gr " , " . grs " , and " . grs " in ClassType . java
replaced HashMap with TreeMap for combined vectors in DrillTestWrapper . java to improve performance and maintain ordering of vectors
added a condition to check if the index is within the bounds of names and values in XPathEntityProcessor . java to ensure that the loop does
refactor WebSocketPolicy class to improve WebSocket connection handling to enhance performance and reliability of WebSocket connections
changed variable and method visibility from static to instance variables in ShadowTelephonyManager , ShadowWifiManager , and WifiManagerTest classes
added a new method ` resolveMessage ` to the ` StandardMessageResolver ` class to enhance flexibility in message resolution based on context and origin
replaced Class . forName calls with Class . asSubclass for MethodVisitor and ClassVisitor to improve type safety and clarity in class instantiation
added LoggingAuditService and UaaAuditService classes to log user authentication events to facilitate auditing and monitoring of user authentication processes
added nullability checks for temperature parameters in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance robustness by preventing
do n ' t allow @ around annotation on abstract class . fix # 2373
camel - 16400 : http component - allow to configure http proxy host and port when use http . proxyhost and http . proxyport
updated the maximum encoding version from " 1.1 " to " 1.2 " to ensure compatibility with the latest encoding requirements
added a call to jdkSerialFilter ( ) in System . java to enable serial filtering for improved performance
camel - 16400 : camel - core - optimize to reduce object allocation when use pool size .
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple files to simplify the method signature and improve
updated the parameter name in ` ensureRealtimeClusterIsSetUp ` from ` realtimeTableConfig ` to ` rawRealtimeTableConfig `
added methods ` isError ( ) ` and ` error ( String message ) ` to ` ValidationReport ` , ` DisallowValidator ` , and
refactor inline QSB handling in InvariantDeviceProfile . java to improve clarity and structure to enhance maintainability and readability of the
updated the ` createClassPath ` method to include ` throws Exception ` and modified the URL decoding logic to improve error handling and ensure proper decoding of
updated regex patterns in TransformSteps . java for parameter validation to allow for more flexible input validation in tests
add null check for retinaProp and fillRect in pGraphicsJava2D to avoid potential NullPointerException
replaced hardcoded timeout values with a protected variable in the waitUntil method calls to improve code readability and maintainability by avoiding hard
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to enhance configuration options for Docker images
[ java ] remove unnecessary call to system . gc ( ) in knowledgeagenttest . java
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replaced ` createHardLink ( ) ` with ` copyFile ( ) ` for copying files to improve file copying functionality and enhance error logging
rename method ` appendToDescription ` to ` getDescription ` in ` AsyncOperationDocProvider ` , ` OperationDocProvider ` , and ` SyncOperation
feat ( training ) : add device check for mxnet ( # 1193 )
added a condition to check if the XML is an instance of Xml . Document before visiting indentation and line format visitors to ensure proper handling of
updated ` NotesHelperTest ` and ` ReminderHelperTest ` to use ` AndroidJUnit4 ` instead of ` InstrumentationTestCase
added GasLimitRule and ParentGasLimitRule alongside existing rules in CommonConfig . java to enhance functionality by integrating gas limit and
changed the visibility of the setupData ( ) method from public to private in BaseAssumptionsRunnerTest . java to restrict access to setup
rename ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` and update related references in ` XMLChangeLogHandler
triple : do n ' t close deframer if listener be null
[ hotfix ] [ doc ] add ` { { . site . baseurl } } ` to documentation
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure correct handling
refactor Common class to improve code readability to enhance maintainability and facilitate future development
refactor the app launching process to use a context layer for better resource management to improve code readability and maintainability by centralizing app
[ hotfix ] fix checkstyle violation in streamexecdeduplicate
[ hotfix ] [ kafka ] log error when send kafka message to topic
added PersistentPropertyAccessorFactory and isImmutable methods to SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to provide a standardized way to manage
changed the return type of the setCoord method from void to boolean in GeoCoordSys1D . java and GeoSegment3D . java
added scroll detection and swipe handling logic in AskGestureEventsListener . java to improve gesture responsiveness and user experience during scrolling
added comparison logic for key comparisons in NGramEstimator . java to ensure accurate ordering of elements based on their keys
updated imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to align
updated methods to retrieve folder icon properties in StatsLogCompatManager to improve accessibility and usability of folder icon information for better user experience
changed the method from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file ` TestSkeletonPredicates . java ` with methods for testing loop predicates in ` compiler . c2 . irTests ` to
added a handler and modified the equals method in SelectionHighlighter . java to improve object comparison and ensure proper functionality of the equals method
added a new file ` StringResultConverter . java ` and modified ` AsmRuntime . java ` and ` AsmUtil . java `
camel - 19751 : use @ disabled instead of @ disabledifsystemproperty ( match = ' apache . org ' )
updated the condition from checking if the console waits for a single object to checking if it is equal to zero to ensure that the console is ready
added null checks and buffer limit adjustments in BufferUtils . java to ensure proper buffer management and prevent potential NullPointerExceptions
updated the data directory assertion from " data / " to " data " File . separator " to ensure consistent file path formatting across different operating systems
updated OS detection logic in AutoUpdaterServerProperties . java to support both Windows and macOS platforms to ensure compatibility with different operating systems and improve
updated Lock constructor to accept a string lock name instead of a File reference to improve flexibility in identifying lock files
updated the variable name from ` appIcon ` to ` allApps ` and adjusted the visibility bounds of the app icon to improve clarity and
updated references from ` Invocable . InvocationType ` to ` ClientDatagramEndPoint ` in ` ClientDatagramEndPoint . java ` to
updated GET _ STEP _ EXECUTIONS to use " order by STEP _ EXECUTION _ ID " instead of " oreder by STEP
modified button return values and added handling for unknown buttons in LwjglInput . java to improve button management by ignoring unknown buttons and ensure
added authorization checks for submit _ approve and submit _ reject methods in TaskRestRepositoriesIT . java to ensure proper handling of claimed tasks
replaced instances of ` logger ` with a static final ` LOGGER ` in multiple response builder classes to improve logging consistency and maintainability
updated method visibility from public to package - private in ` SsoAccessTokenProvider ` and ` SsoAccessTokenProviderTest ` to enhance access control
[ geos - 7892 ] skip some test that do n ' t pass on window
added new methods ` createAlarmSuppression ` , ` getAlarmSuppression ` , ` listAlarmSuppression ` , ` summarizeAlarm
reformatted conditional statements in JFrame . java for consistency to improve code readability and maintainability
refactor database connection handling in LibraryScanner . java to improve null safety to enhance code stability by preventing potential NullPointerException
replaced instances of ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to ensure consistent usage of the
refactor file and folder output logic in OCFileListFragment . java to improve clarity and structure to enhance readability and maintainability of
change default value of HashKnownHosts from " yes " to " no " and change return type of loadKeys to Iterable < KeyPair > to
refactor SourceVersion . java to improve code structure to enhance maintainability and readability of the code
added a new file ` ThreadFactoryTest . java ` to implement unit tests for the ` MyThreadFactory ` class to ensure that the thread
refactor lock period retrieval logic in DelegateResourceActuator to utilize dynamic properties to improve flexibility and maintainability of lock period management
added a new TicketModel instance in EditTicketPage . java to initialize the ticket model for better ticket management
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow dimissing apps from predicted
updated constructors to accept selfType as a parameter across multiple assertion classes to enhance type safety and clarity in assertion methods
added a new menu item for quote functionality in TweetActivity to enhance user experience by allowing users to easily quote tweets
move interruptlock . lock ( ) out of synchronized block to prevent another start yet
renames ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and introduces ` isDirectPlaybackSupported ` to improve cl
added a condition to check if the result is true before offering failure and closing the consumer to ensure that failure is only offered when the
updated German and French error messages in XSLTErrorResources _ de . java and XSLTErrorResources _ fr . java to clarify
added @ ThreadSafe annotation to CheckpointsCleaner . java to enforce thread safety for cleaner operations
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` MockRestAdapterTest ` , and ` RestAdapter `
reformatted code in ComponentPresetManager . java for consistency to improve code readability and maintainability
added a new configuration option ` HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES ` and updated assertions in ` TestJdbc
fix for ticket : 241 : do n ' t fill example text when a voice be select .
added validation for session validity in Session . java and updated assertions in SessionHandlerTest . java to ensure that invalid sessions throw an appropriate exception and
deleted the ExceptionHelper . java file which contained a method to retrieve the root cause of an error to remove unused code that is no longer needed
change default key pair size from 256 to 255 in jcex25519domain .
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with the latest postings
[ hotfix ] [ runtime ] add debug log for empty header list
added support for RSA / ECB / OAEPPadding algorithm in the OperatorHelper class to enhance security by enabling OAEP padding
replace instances of ` Platform . DARWIN _ AARCH64 ` with ` Platform . MACOS _ AARCH64 ` across multiple files
added handling for SecurityException during source resolution in DebugSourcesResolver . java to improve error logging and provide clearer diagnostics when resolution fails
updated conditional logic in AbstractTest . java to check if the operating system is UNIX before returning transport values to ensure correct handling of transport values based
updated error handling in FileUploadUtils and changed the default value of JERSEY _ ADMIN _ IS _ PRIMARY from false to true to
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory freeing functionality in multiple classes to improve memory management and
change the default value of USE _ PIPELINE _ DOWNLOADER from false to true to enable pipeline download functionality in the FastSyncChainDown
removed ZONE _ OFFSET and DST _ OFFSET from SimpleDateFormat and added a new test class Bug7130335 to streamline date formatting
refactor variables to use ` iconCount ` directly instead of ` mRollo . mState ` to improve code readability and maintainability
server : fix npe in getdefaulthypervisor ( ) when no default hypervisor be specify
refactor StringBuffer class for improved performance to enhance efficiency of string manipulation operations
added a line to set the UID of a rule in RuleResource . java to ensure that the rule ' s UID is correctly associated with the
added null check for listener before unsubscribing in RegistryProtocol . java to prevent potential NullPointerException when listener is null
nifi - 11341 : add property to jolttransformjson to apply pretty print to the output of the jolt transform
change access modifier of access _ table to public to allow access to it from outside the class .
update error message for missing resources in DataSourceInitializer and DataSourceInitializerInvokerTests to improve clarity of error messages for better debugging
make xmpptransport . run ( ) protect so that it can be override .
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
added new parameters ` effectiveClusterVersion ` and ` isUpgradeSuspended ` to several methods in ` AmbariManagementControllerImpl . java
updated copyright year in FindsByCssSelector . java to ensure compliance with licensing requirements
removed the declaration of ` wfields ` in ` Resolver . java ` to streamline code by eliminating unnecessary variable declaration
added initialization of encryption and signing keys in the OAuthProperties class to ensure proper configuration of encryption and signing keys for improved security
hbase - 2596 add method htabledescriptor . getcolumnfamilycount ( ) to get the number of column family
replaced the ` AllowedResourceAliasChecker ` instantiation with a lambda expression in ` SampleWebJspApplicationTests . java ` to simplify the code
updated ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info . java files to improve code organization and maintainability
added a ` reset ` method to the ` Cluster ` interface and implemented it in ` ClusteredServiceAgent ` to provide a mechanism for resetting
increment currentChunkID in ChunkedWriter . java before creating a new SequenceFile . Writer instance to ensure that the currentChunkID is consistent
added a new file ` AbstractJobExecutor . java ` implementing the ` JobExecutor ` interface to provide a concrete implementation of ` JobExecutor `
updated the replay method to store the result of the replay and changed the return statement to break to improve clarity and control flow of the replay
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a method to retrieve service IDs based on the Consul discovery configuration to ensure correct service IDs are returned based on the Consul configuration settings
replaced ` Math . random ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` for generating hashSalt to improve randomness
add option to verify runtime compilation framestates during bytecode parsing .
updated the calculation of currentStart and baselineStart in TimeOnTimeComparisonHandler . java to ensure accurate time measurement for aggregation
updated imports and modified the ` answer ` method in ` CallsRealMethods ` , added abstract method handling in ` CreatingMocksWithConstructorTest
refactor ` checkPackageAccess ` methods to accept ` Class ` instead of ` String ` for package access validation to improve type safety and enhance
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup methods to enhance integration testing capabilities and improve
fix a bug with the contribution list panel that do n ' t work correctly with bold font .
added a new request flag ` REQUEST _ HAS _ TIS ` in ` QuickstepTestInformationHandler ` and ` TestInformationHandler ` ,
move mutex . event . writeaccess to mutex . event . connect
changed the type of ` showRulesResult ` and related methods from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget
added new classes ArrayHelper , Comparables , Constructor , Enums , NativeRegExp , and Objects in the javaemul . internal package to
added handling for ' HOME ' and ' END ' keys and improved line display logic in the Less class to enhance keyboard navigation functionality and ensure
removed synchronization around retrieving connected plots in PlotHandler . java to improve performance by eliminating unnecessary synchronization
refactor intent creation and sharing logic in Utilities . java to improve code clarity and streamline activity launching process
remove ' public ' modifier from roster constructor so that it can be use outside the class .
added basic constraints extension to the certificate generation to enhance security by enforcing basic certificate constraints
added a new test method ` testFixedNestedTransform ` in ` TextVisualRegressionTest . java ` to fail due to the wrong transform
simplified assignment of precisionStep in TrieDateField and TrieField classes to improve code readability and maintainability
deleted the TaskbarStateHandler . java and modified BaseQuickstepLauncher . java to remove its implementation to streamline the codebase by elimin
added a new file ` ArrayLength . java ` to test reflection methods for array types to ensure proper handling of zero length arrays in reflection operations
wait for the hazelcast process to be complete before tear down ( # 11341 )
replaced the @ Singleton annotation with @ PostConstruct annotation and refactored the save method in ApplicationSettingsService to use @ ApplicationScoped to
updated assertions and modified newValue logic in Safepoint . java to improve clarity and correctness of value validation
changed the type of the thread name field from char array to string and updated the method to use stringOopToString to improve type safety and
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hns
add font and stroke object to pgraphicsjava2d to avoid npe
[ calcite - 3640 ] allow dynamic _ star in window and group by ( jesus camacho rod )
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class and integrated it into the ` Comment2000Parser `
added import for Messages and set a status code for the warning icon in HTTPServer . java to enhance error handling by providing a specific icon status
deprecate mouseevent . getclickcount ( ) and getamount ( ) , use getmodifiersex ( ) instead
countleadingZerosNode and counttrailerzeroesNode should use CYCLES _ 3 instead of CYCLES _ 6
( chore ) camel - as2 : fix npe when disposition notification to not set
refactor Locale class to improve locale handling to enhance code readability and maintainability
added a button to clear log messages and implemented a clear method in ErrorConsoleViewModel to enhance user interface by providing a way to clear log
initialized mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of animation controller
updated imports and method signatures in Debug . java , CaptionMap . java , and LocalizedCaptionMap . java to improve code clarity and
fix flaky test due to connection pooling
danielwagnerhall : add opera blink capability to the default driver session
updated exception handling in ManageJournalsPanel to handle a broader range of exceptions to improve user experience by providing a clear error message when
added new Lifx product entries and updated existing ones in the LifxProduct . java file to enhance the functionality of the Lifx application by
added asynchronous handling and request management in OverseerCollectionProcessor , CollectionsHandler , and CollectionsAPIAsyncDistributedZkTest to improve asynchronous
refactor assertions in PostgresDatabase and PostgresDatabaseTest to use a unified assertPrimaryKeyName method to improve code readability and maintainability
updated LogPage , SummaryPage , LogPanel , LinkPanel , and LinkPanel classes to use objectId instead of repositoryName to improve clarity and
* bone inter bone wire now use unit _ xyz instead of unit _ y
added a ` browserDestroy ` method to ` AndroidImplementation ` and refactored the ` deinitialize ` method in ` AndroidImplementation ` to
added a wait for active collection " readApiTestViolations " in the AutoScalingHandlerTest to ensure that the test runs in a valid state
refactor terminal attribute handling in ScreenTerminal . java and remove unused imports in Tmux . java to improve code clarity and maintainability
updated the logic in SoftResetAction to check controller states instead of idle and paused states to improve accuracy in determining controller state management
disable on - disc stream cache to speed up texture pack reloading
added conditional logic to retrieve the parent folder resource in Request . java and RequestV2 . java to ensure proper handling of media resources based on
[ ci ] fix typo in networkofferingvo
modified the FileOutputStream implementation to include a custom close method to ensure proper resource management and prevent potential resource leaks
added error handling for HTTP 403 responses in StandardGitHubRepository . java to improve robustness by gracefully handling forbidden requests
log4j2 - 1349 add getoriginal ( ) method to messagefactory2adapter to make it easy to access the original message
added @ SuppressWarnings ( " BanSerializableRead " ) annotations in DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated version regex to match version 1.3 instead of 1.2 to ensure compatibility with version 1.3
added initial and dismissal delay settings for the ToolTipManager in ExtractionModelFrame . java to improve user experience by providing a smoot
refactor ProjectCommand to use passedInTargetsSet instead of arguments formatted as build targets to improve clarity and maintainability of the code by
updated timezone settings in TimeTest . java to ensure accurate formatting of time values
refactor MediaSessionConnector for improved session management to enhance performance and maintainability of media session handling
use endpoint . getsslsupport ( ) instead of new jssefactory ( )
updated accuracy display in GpsLoggingService to use getAccuracy ( ) instead of getAltitude ( ) to improve accuracy representation for better user
added a conditional to check if futures are enabled before adapting future exchange metadata to enhance flexibility in handling future exchange configurations
[ # 7012 ] admin : add instructor course table to list of instructor ( # 7013 )
set accept queue size to max worker threads in ThriftHttpCLIService to optimize resource management by limiting the number of worker threads
replaced direct access to ` getClass ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` in ` PathWatcherService
added a check for SSL scheme in JmsFactory to ensure proper handling of SSL connections
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated tests in ` TestWindowFunctions
updated duration calculation in GCInspector . java to include a comment to clarify that duration may be zero for really fast collection
fix : nodewithjavadoc return empty optional for method with line comment
replaced the ` reserveMemory ` method implementation with a new ` readReservedMemory ` method in ` WhiteBox . java ` to simplify memory
added calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing or splitting
hbase - 2596 add procid to exception message ( chaoyu tang via xuefu )
camel - 16400 fixed the c error of cxfendpoint
refactor YamlChangeLogSerializer to use a list of maps and container maps for databaseChangeLog to improve code readability and maintainability by
replaced ` println ` with ` print ` in ` SchemaPrinter . java ` to improve output formatting for better readability
refactor DebugRoadRegen and SchematicHandler to simplify road regeneration and improve clipboard handling to enhance code readability
updated context references from ` getContext ( ) ` to ` getActivity ( ) ` in HomeFragment . java to ensure compatibility with the current activity context
added a ` @ GenericGenerator ` annotation with a ` strategy = " native " ` to multiple classes to provide a more descriptive strategy for
removed the country parameter from the getSystemTimeZoneID method and its usage to simplify the method signature and improve code readability
added position and remaining parameters to the write method in BZip2Codec . java and modified ByteBuffer allocation in TestBZip2Codec . java
move startlogger ( ) to geogebra - app and move it to geogebra - web
added a constant VALUE _ TYPE _ EMPTY in Type . java and modified the constructor logic in Value . java to improve code clarity and ensure
updated group equality checks in GroupManager . java to use . equals ( ) instead of = = to ensure proper comparison of group objects in the
refactor Liquibase and LiquibaseDropAll classes for improved code organization to enhance maintainability and readability of the
refactor SimplexNoise class for improved clarity to enhance maintainability and readability of the code
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated references in ` VersionedTargetGraphBuilderTest ` to use it
rename methods in ColumnFamilyStore and ColumnFamilyStoreMBean from ` getMinRowCompactedSize ` and ` getMeanRowCompactedSize `
add a type adapter for artifactversion in the metadata collection so that it can be serialize / deserialize .
refactor the handling of the object ' s state in NativeArray . java to improve clarity and ensure proper deletion of elements based on the
updated file upload logic to use the parent file ' s ID instead of the local path to improve file management by ensuring the correct parent file is
added a new file UTF8ReaderBug . java to test XML parsing with supplementary characters to ensure proper handling of supplementary characters in XML
added unit test base on user forum issue
updated subscription streams in BinanceIntegration and BinanceUsIntegration from " btcusd @ depth " to " btcusd @ depth20
added a ` resetAllocation ( ) ` method to the ` Wrapper ` class and invoked it in the ` SimpleParallelizer ` class to ensure
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct calls to ` configProps ` and ` props ` with synchronized blocks in ` Agent . java ` to ensure thread safety when modifying
refactor ModelUtils to improve code structure to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert to improve code structure to enhance maintainability and readability of the code
updated width and height adjustments based on the index of mLabels in Legend . java to ensure proper handling of labels and prevent index out
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` , `
replaced ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` and refactored term frequency addition logic to
replaced CxxLink with a new BuildTargetSourcePath instantiation in Omnibus . java to improve code clarity and maintainability
disable versioning in ` ` download latest ' ' and add a ` ` disable ' ' chat message
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` field in ` MediaFolder
removed the argument " - b " from the args in AidlStep . java and GenAidlTest . java to simplify the
delete obligation in case of edge ( # 79 )
added a TODO comment to the FakeHttpLayer class to indicate that the test is currently pending or pending
[ hotfix ] remove call to errorhandler . revokeleadership in embeddedleaderservice
replaced the use of ` Stream ` with ` Single ` for reducing the number of instances in ` CompositeDiscoveryClient ` to simplify the
rename ` applySystemConfiguration ` to ` applyQualifiers ` in ` ParallelUniverse . java ` and ` BootstrapTest . java ` to
[ hotfix ] [ doc ] add description to jobmanageroptions
renamed ` updateNoWidgetsView ` to ` updateRecyclerViewVisibility ` and updated visibility logic for widgets and search results to improve clarity
added class loading for WstxOutputFactory in XmlUtil . java and updated test assertions in MultiVersionXmlParserTest . java to enhance
refactor workspace initialization in AuditAliasCommandIntegrationTest . java to improve clarity and ensure proper setup before each test
removed logging statements related to header view height and recommendation table height in WidgetsFullSheet . java and WidgetsRecommendationTableLayout .
( chore ) camel - cxf : disable flaky test
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging exceptions when updating the update
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` RequiredArgsConstructor ` and refactored provider
added default background fill checks and modified color handling in HSSFCellStyle , HSSFFont , and HSSFPalette classes to
rename ZonedDateTimeFormatterBenchmark . java for consistency to improve clarity and maintainability of the codebase
refactor update buffer logic in DistributedUpdateProcessor and add unit tests in DistributedUpdateProcessorTest to improve code readability and facilitate
added a condition to check if the rocket ' s stage is null in addition to the motor ' s null check to ensure proper handling of
updated command descriptions for editreplace , editscript , and item retrieval in WorldEdit . java to improve clarity and functionality of command functionality
refactor ExtendedMasterSecretExtension class for improved clarity to enhance maintainability and readability of the code
changed the ` processor ` variable from non - final to final in ` AndroidInput . java ` to enforce immutability of the ` processor
added a call to ` processedTask . getListener ( ) . onWriteFailed ( ) ` in ` WritableKeyProcessor . java ` to handle
added support for the CUBE database type in MySQLDatabase . java to enable compatibility with CUBE - specific database types
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException when removing the snapDir
rename ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and update related methods and imports
refactor DefaultOkHttpClientFactoryTest to use getter methods for connection timeout , read timeout , follow redirects , connection pool , and hostname verification to
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and enhance maintainability
added a null check for the variable ' os ' in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerException when ' os ' is null
g3d - 310 : do n ' t show precise value in algebravieww . getparentsplitpane ( )
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified exception handling to conditionally throw a runtime exception
refactor HttpRequest class to improve request handling logic to enhance performance and maintainability of HTTP request processing
added a shared preference for pull unread status in TalonPullNotificationService to store the unread status for better user experience
isnullnode : do n ' t replace input for object when it ' s not null
updated parameters and parameters in Box2DTest , Pong , and OrthographicCamera classes for improved performance and memory management to enhance
refactor layout management and transition handling in ViewPostDetailFragment . java to improve code clarity and ensure proper handling of mCommentsRecyclerView
changed log level from trace to warn in CLIService . java to improve logging granularity for background operations
added debug print statement for method instance name and flags in JimpleBodyBuilder . java to facilitate debugging by providing visibility into method
ggb - 2696 : do n ' t invokeLater on touchup , if browser be n ' t ie10plus
updated the ` getNotificationUsers ` method to include a ` deviceId ` parameter and modified the implementation to filter users based on their device ID to
updated the base URL for CGIARProvider from " droppr . org / srtm / v4.1 / 6 _ 5
updated MotifFileChooserUI to remove property change listeners and added a new bug6520101 class for testing to improve resource management and
change return type of hollowuiserouter . handle ( ) to boolean . handle ( ) to make hollowuiserouter . do
refactor methods in BuildRuleResolver for improved clarity and consistency to enhance readability and maintainability of the code
added visibility control for transportSpinner based on the makingShortcut flag to improve user interface responsiveness by hiding the spinner when the shortcut is
added null check for attributes _ field in Attr . java and created new classes T7043371 . java and T7073477
modified backPressed ( ) methods to return a boolean indicating success or failure to improve responsiveness by preventing unnecessary calls to backPressed (
added support for long view index functionality in QueryServices and QueryServicesOptions to enhance flexibility in managing view index functionality based on user preferences
swapped the casing of the string " v " in SDRTrunk . java to ensure consistent formatting of the output
updated private key path handling in PrivateKeyParserTests . java to ensure clean path formatting to improve robustness of private key path validation
removed the columnPosition parameter from the diffDropColumn method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriter and IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of Version . LUCENE _ 40 to ensure compatibility with
hbase - 11341 add option to disable strict column family check in importtsv ( chaoyu tang )
[ java ] do n ' t reuse logrecordingchannel in consensusmoduleagent when stop archive .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " startApplicationDetailsActivity " ) ` and added
added a check to return early if the first element of the JSON node is of type " i " to optimize performance by avoiding unnecessary processing
refactor Procedure class to improve code readability to enhance maintainability and reduce complexity in the codebase
updated resource bundle retrieval to include default locale and system class loader to ensure consistent resource loading across different locales
add a new file NormalizeArrayCreationsKotlin . java to implement Kotlin normalization for array creations to enable Kotlin
added checks for zero counts and improved term enumeration logic in PerSegmentSingleValuedFaceting . java to ensure correct handling of zero counts and
fix nullability issue in modmetadata . getauthorlist ( ) ( # 3649 )
added a static requirement for ` jdk . unsupported ` in module - info . java and created a new test class OSGiTest .
nifi - 11313 : allow controller service property to be enable / disable based on service enable status
hbase - 2596 htable . setautocommit ( false ) should not clear the buffer on fail
fix : add test for annotation apply on any element in a class
add hasUserData method to SimpleFeatureImpl and its implementation in SimpleFeatureImplTest to provide a way to check if user data is present in
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify exception
refactor RelyingPartyRegistration class for improved clarity to enhance code maintainability and readability
removed the enableLogging method from JavaCompiler . java to streamline logging functionality by eliminating unnecessary logging
added a new file ` InJavaSourceSet . java ` and modified imports in ` UsesJavaVersion . java ` to improve code organization and
[ geot - 5780205 ] do n ' t rely on file system to load gdal file
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of getter instances with specified attributes
removed conditional check for external storage in DirectUpload . java to simplify code logic for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and updated references in ` IndexingJob
api : fix npe in createvolumecmd when diskofferingid be null
updated content assignment in ToHtml . java and modified assertion in BaseTestCellComment . java to check for non - empty notes instead of em
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new file ` Issue382 . java ` to handle specific error types and updated ` Routes . java ` to use it to improve
replaced the method ` signum ` with a static import of ` Integer . signum ` and simplified the return statement to improve code readability and
added visibility control for the text holder in AttachmentAdapter to improve user interface by hiding the text when the condition is not met
refactor : fix npe in ctimportimpl . getimportkindfor ( ref ) ( # 3649 )
danielwagnerhall : use getprofile ( ) instead of : getprofile ( ) : : getprofile ( )
add bucketpickup to liquidblock , fixes # 5468 ( # 54689 )
http : / / issues . apache . org / jira / browse / amq - 2902 - fix intermittent failure
updated the time zone from PST to America / Los _ Angeles in LocaleProviders . java to reflect the correct time zone for
refactor variable names from ` existingObservation ` to ` distinctObservation ` for clarity to enhance code readability and maintainability by
updated boolean system properties to enable or disable specific test groups in LuceneTestCase . java and added corresponding VM options in RunListenerPrintRe
replaced the ` createLogger ( ) ` method with ` getOrCreateLogger ( ) ` and modified logger initialization logic to improve logger management and ensure
deny access to class , method , field , and proxy in graalcontext . getcontext ( ) .
implement updatepixels ( ) in pgraphics2 , add debug message
replaced ` table . getSd ( ) ` with ` partition . getSd ( ) ` in ` HiveAbstractReader . java ` to
updated the logic for determining if the overlay should be scroll and added a zero overlay condition to improve the handling of the overlay ' s scroll state
hhh - 11341 - implement batchbuilder . buildbatch ( ) and batchbuilderinitiator . buildbatch ( ) in hibernate
improve error message for analysiserror . shouldnotreachhere ( )
added a test method to verify that a class retains the static state and created a new MockWithStaticStateDemo class to ensure that the
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure proper parsing and deparsing of
added null check and error handling for ugi in SecurityUtil . java to improve robustness by handling potential exceptions during action execution
updated error handling in OpenALMusic . java to include the error code in the exception message to improve debugging by providing more context about the
camel - 16400 : camel - quartz - add a new method to resolve parameter and deprecate the old one
updated precision and scale handling in RexNodeConverter to improve precision and scale accuracy
updated the way vendor and device properties are retrieved in WebAuthnMultifactorDeviceProviderAction . java to handle potential null values to improve
updated the parameter in the ` updateAccount ` method from ` " testName " ` to ` now . getBytes ( ) ` to ensure accurate
replaced ` AxialStage ` with ` RocketComponent ` and refactored selection logic in ` DesignPanel ` to improve type safety
added longRunningTime parameter with getter and setter methods in Args . java to allow dynamic adjustment of the long running time based on configuration
updated priority adjustment from MEDIUM to LOW in FindRefComparison . java and introduced new class Ideas _ 2012 _ 05 _ 21 . java
updated import statements and refactored ServiceLoader usage in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to improve code consistency
[ geot - 6892 ] fix xmlunit namespace context to work with bigdecimal
simplified assertion statements in TestRestClientRequestImpl . java for improved readability to enhance code clarity and maintainability
updated conditional check to include comparisonDatabase in MissingUniqueConstraintChangeGenerator . java to ensure proper handling of unique constraints based on the reference database
removed the ` addAndroidConstants ` method and refactored the proguard configuration retrieval logic to streamline the code and improve readability by
replace assertEquals with await in duplicateCookieTest and SessionRenewTest to improve test reliability by allowing more time for requests to be retrieved
added user _ args and is _ daemon attributes to the ImmutableMap in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance traceability of
svm : fix resource bundle lookup on jdk11 +
corrected a typo in the trace log message from " match limit " to " match order " to improve logging clarity and accuracy
added a new file ` TheRockMetaDataDemo . java ` to demonstrate the usage of ` TheRockExchange ` metadata
made ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes strictfp , and added a new ` testStrictness ` method
replaced ` unparseIdentifier ` with ` columnName ` in ` ColumnStatsSemanticAnalyzer . java ` to simplify the column name appending process
added a new test method ` replaceField ` in ` JavaTemplateContextFreeTest . java ` and modified the ` contextFreeTemplate ` method
added a check for non - synthetic methods in InstantiateStaticClass and introduced a new test method in Bug1282 to ensure proper handling of synthetic
replaced ` projectFilesystem . getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify
added pending rescues and conditions handling in IkStepDefinition . java to improve error handling and ensure pending rescues are properly managed
updated equals and hashCode methods in AbstractType , BigintType , BooleanType , DateType , TimestampType , and VarbinaryType classes to
added a new method ` getSyncLevel ` to retrieve the default sync level and updated the ` SyncLevel ` enum to improve flexibility in
fix flakyness of controlcommandstest ( # 1193 )
added a condition to check if the state of a slice is not RECOVERY before proceeding to ensure proper handling of recovery states in the
updated the image creation method in opencv _ core . java to ensure consistent handling of image dimensions and channels
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` classes and modified ` makeProcessExecutorParams ` to
[ hotfix ] [ runtime ] remove file . delete ( ) from transientblobcleanuptask
cloudstack - 3553 : fix typo in log message for static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type
refactor BetterBlockPos class for improved clarity to enhance maintainability and readability of the code
updated the proxy return statement to include the class loader to ensure the proxy uses the correct class loader for improved resource management
refactor version handling in MainWindow , ConnectionSettingsPanel , and Version classes to improve clarity and maintainability of the nightly build
added handling for trailing and duplicated lines in LoggingExecutor and JdbcExecutor to ensure proper formatting of SQL statements in Oracle databases
add findbugs . nullderef . assumensp to disable assumption
add a port to the jolokia test to make it easy to run the jolokia test
updated BLOB _ SIZE , PLAY _ MARGIN , SLIDER _ MARGIN , and SLIDER _ MAR
added a method to add a multifactor authentication provider bypass to the DuoSecurityMultifactorProviderBypassConfiguration class to enhance
reformatted method signatures in MaxRectsPacker . java for consistency to improve code readability and maintainability
[ drools - 5 ] fix checkstyle violation in drools - runtime
added methods to set and get the help page in PMS and refactored the updateContents method in HelpTab to improve help page management
added new files GeocodeProviderFactory . java and Constants . java to implement GeocodeProviderBaseFactory and ConstantsBase for Omni Notes
updated import statements for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer classes to align with the correct package structure for CharArraySet
test : remove junit ' s expectedexception rule from resourcemanagerimpltest and resourcemanageroptionstest
update GATEWAY _ SERVER _ ID to use Protocol . GATEWAY _ SERVER _ ID and modify memory management checks in MemoryCommand to
updated conditions in ` SegmentsInfoRequestHandler . java ` and modified collection creation in ` CollectionsAPISolrJTest . java ` to improve code
updated the calculation of numPredictiveAppCols to account for phone devices to optimize app selection based on device type
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated its usage in ` DrillJoinRelBase `
add a new class blockbuildcraft that make it easy to build craft block in inventory .
refactor layout parameters in DeviceProfile . java for better clarity and structure to improve layout management and maintainability of layout parameters
replaced ` run ( ) ` with ` start ( ) ` in ` YahooSession . java ` to ensure that the session starts
initialized ` ms ` to null in ` HiveMetaStore ` and modified error handling in ` HiveMetaStoreClient ` to improve resource management and
updated the display script retrieval to honor the display category in Locale . java and added a new test case in LocaleCategory . java to ensure
updated import statements for BASE _ URL _ PROP and CORE _ NAME _ PROP in Replica . java to ensure consistency in reference to Zk
replaced ` ThreadLocalRandom ` with ` Random ` in ` StoreDirectTest . java ` to improve performance and simplify random number generation
added a check for launcher is ready before backup operations in LauncherBackupHelper . java to ensure backup operations are only performed when the launcher is
updated exception messages in Cell . java to include " space " and " spaceLeft " and " spaceRight " to improve clarity of error
add a new file ` ResiliencePooledRouteOkTest . java ` to implement tests for resilience functionality to ensure proper handling
rename ` bodySpace ` to ` barSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
updated FileMessageHistoryTest to use TemporaryFolder for file creation and assertions to enhance test reliability by ensuring messages and history are created in a
added multiple debug logger configurations in Grasscutter . java to improve logging visibility for better debugging and troubleshooting
changed the visibility of ` highlightCnstScrRngQuery ` and related methods from instance to static in ` SpanScorer . java
updated condition to check if the workspace is not in the NORMAL state and added a method to retrieve the workspace state to ensure proper handling of workspace
refactor multiple assertion classes for improved consistency and clarity to enhance maintainability and readability of the codebase
added a conditional check for ` cacheable ` before calling ` notifyNewTemplate ( ) ` in ` SnippetTemplate . java ` to ensure that
added a new constant ` SCOPE _ SOLR _ CORE ` and refactored core scope management in multiple classes to improve scope management and
updated the CREATE TABLE statement to include a primary key for the " measurement " table and added assertions to verify the existence of the " measurement _
rename ` -- permissions - config - path ` to ` -- permissions - config - file ` in ` PantheonCommand ` and ` Pan
refactor session handling logic in HttpSessionContextIntegrationFilter to improve clarity and structure to enhance readability and maintainability of session creation logic
added a new file ` TestIfWithDeadRegion . java ` with a class ` Test1 ` and ` Test2 ` to demon
rename english ud to english usd so that it ' s easy to understand
refactor the iteration loop in SnowflakeIdGeneratorTest to enable and disable high - resolution timer to improve test reliability by ensuring concurrent access
added a staticUi setting to AppSettings and modified MainFragment to conditionally hide the toast bar based on its settings to enhance user experience by
refactor the drop method in WindowsSecurity to use a lambda expression to improve code readability and ensure proper resource management
refactor parameter handling in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` to use ` putIfAbsent ` for better null safety
updated message and option dialog calls to use localized messages instead of hardcoded strings to improve internationalization support for the application
tika - 3745 -- add mime type for ooxml and vnd . openxmlformats - officedocument . spreadsheetml
added logging statements and improved type safety in multiple classes to enhance debugging capabilities and ensure proper handling of feature paths
camel - 16400 : camel - documentation - enricher - fix xml output for camel - eip and camel - documentation - enricher
add - dcassandra . skip _ schema _ check = true to skip schema pull
added debug logging statements and refactored audio capture device handling in DeviceConfiguration and PortAudioAuto classes to improve traceability and maintainability of
added a ` WebsocketConfig ` class and modified the ` reactorNettyWebSocketClient ` to accept a ` ShenyuConfig `
cachevalidationlistener now implement isuitesuitelistener and implement onstart ( ) instead of beforeinvocation ( ) and beforeinvokedmethod
modified the content length handling in MoreIndexingFilter to check if it is not empty before adding it to the document to ensure that content length is
move solvingterminated ( ) to a private method so that it can be reuse .
refactor timeseries creation logic into a new method ` internalCreateTimeseries ` to improve code readability and handle potential ` PathAlreadyExistException
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a convenient way to check if a boolean
changed access modifiers of several methods from public to protected in Shadow classes to restrict access to these methods for better encapsulation
server : fix npe in listvirtualmachines api when vm be in reserve state
modified HttpParser , HttpParserTest , and ContextHandler classes to simplify value assignment and improve test clarity to enhance code readability and maintain
refactor thread initialization methods in J9VMInternals . java and Thread . java to improve code readability and maintainability by consolidating
added methods to get and set external storage public directory in ShadowEnvironment and created corresponding tests in EnvironmentTest to enhance testing capabilities for external storage functionality
[ drools - 7 ] add test case for mvel type coercion
updated generic type declarations in LoggingConfig . java and DbgPacker . java to improve type safety and code readability
added exception message to the log message in ActionNode . java to provide more context when exceptions occur during the construct operation
remove tel : from sip number if it ' s not a tel :
simplified the visibility logic for shared files in FileListListAdapter to improve code readability and maintainability
deprecated the deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated its usage in TestTxnCommands3 . java
refactor ` ExecuteStatementOperation ` , ` Operation ` , ` SQLOperation ` , and ` SQLOperation ` classes to
refactor BTCMarketsStreamingAdapters and BTCMarketsStreamingService to simplify code and improve readability to enhance maintainability and reduce
use gettypename ( ) instead of getname ( ) for test
removed the onErrorInStep method from StepListenerSupport . java to streamline the interface by eliminating unnecessary functionality
refactor Wallet class to improve code readability to enhance maintainability and facilitate future development
camel - 16400 : camel - netty - http should use host / port instead of http : / / localhost . thanks to
replaced usage of system . out . println with a custom logging mechanism in TestNonBlockingAPI . java to enhance logging flexibility and improve
added a check to ensure the row index does not exceed the size of the connection list to prevent potential index out of bounds errors
[ java ] methodwithsamenameasenclosingclass no longer report a false positive
added a new ` ExtendedPlatformComponent ` class and modified ` ManagementFactory ` to utilize it for managing managed beans to enhance the management capabilities
replaced double quotes with single quotes in SQL statements to ensure consistent SQL syntax across the application
updated package paths in BleutradeDtoTest , BleutradeDtoTestSupport , and BleutradeExtendedDtoTest to
[ hotfix ] [ table ] fix typo in javadoc of textescapeutils
added a FILTER _ PARAM constant and modified the return statement in AbstractSpatialFieldType . java to allow dynamic filtering of queries based on local parameters
removed progress display and visibility checks for main form visibility in GpsLoggingService . java , and updated email handling in AutoEmailHelper . java
replace ArrayList with HashSet for inlinks and update iterator methods to enhance performance and simplify iterator usage
added a synchronized stopScan method to remove Older results in TradfriDiscoveryService to ensure results are properly removed when the scan is
modified the ` testFilterForPartition ` method to accept a boolean parameter indicating whether filtering is at server side to enhance flexibility in filtering behavior
added " Abandoned " status to multiple workflow states in TicketModel and updated status handling in TicketsPage to include " Closed " status to
removed initialization of columnAliasPrefix in multiple platform classes to streamline the code by eliminating unnecessary null assignments
updated LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer to use BytesWritable instead of Text to improve performance and compatibility
add detection of 32 - bit jvm on a 64 - bit system
refactor conditional logic in PdfCopy . java to improve clarity and structure to enhance readability and maintainability of the code
added a new daemon option DAEMON in the TerminalClient class and integrated it into the daemon mode to provide a web pendant UI
added a new file ` FlushIndexTask . java ` to implement a performance benchmark task for flushing the index to enable efficient flushing of the index
fix memtable . getflushpath to take estimated size as a parameter
updated conditional checks in MediaLibraryFolder . java to include SEASONS as an expected output to ensure proper handling of SEASONS
added a new file ` LocalSocketAddress . java ` to test the availability of IPv6 addresses in a DatagramSocket to ensure that IPv6
updated grid size points in GridSizeMigrationTask . java to correct grid size coordinates for improved layout consistency
updated method calls from ` getName ( ) ` to ` name ` in ` SerializerPojo . java ` to improve clarity and consistency in
added read - only context support and improved error handling in the Context class to enhance flexibility in managing read - only contexts and ensure proper
refactor LookAndFeelCommand class for improved readability to enhance maintainability and clarity of the code
replace floor method with ceiling for lastRunEnd and adjust offset check to improve performance by using a more efficient ceiling method
added imports for EOFException and EofException in GracefulStopTest . java to ensure proper handling of specific exception types in the test
refactor locking mechanisms in NetJavaImpl . java for better resource management to improve code readability and maintainability by reducing repetitive
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future development
update allowAccountAssetOptimization logic in DynamicPropertiesStore . java to ensure proper handling of asset optimization settings
added a new constant ` J9 _ GC _ POLICY _ NOGC ` and initialized it to ` 0 ` in ` VM . java
added error handling for invalid protocol buffer exceptions in TransactionCapsule . java to improve robustness by throwing a P2pException for invalid protocol
[ java ] strictexception - remove unused class .
updated resource path for localization and added error logging for missing localization to improve localization support and provide clearer feedback when no localization is available
added a new file ` ProcessorInfo . java ` with methods to retrieve available processors and read CPU cpu masking to provide a mechanism to determine
- html option - generate html output ( default stylesheet be ` ` default . xsl ' ' )
refactor LogbackLoggingSystem to use a non - Optional for logbackXmlLocation and mark it as final to improve flexibility in config
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent classes to improve data handling and service component recovery events to enhance code clarity and ensure
added conditional property for tag propagation in ` SleuthTagPropagationAutoConfiguration ` and updated test cases in ` SleuthTagPropagationAuto
refactor dependency type assignment logic in RustCompileUtils . java to use a switch statement to improve readability and maintainability of the code
updated the ` oauth2LoginLinks ` method to accept ` queryParams ` as a parameter and added error handling to enhance the method ' s functionality
hbase - 16400 seekbefore ( ) should seek to the first kv in the file ( chunhui )
hhh - 11341 : deprecate generatevaluegeneration . timing ( ) and generatevaluegeneration . timing ( ) . isalways (
add test for layernorm ( nan ) with profiler config ( # 1193 )
refactor ` showShareFile ` method calls to use ` getFileOperationsHelper ( ) ` for consistency across activities to improve code maintainability and
added a new file ` LiquibaseUpdateMojoExecutionTest . java ` to implement unit tests for ` LiquibaseUpdate
convert proxyType to uppercase when setting it to improve consistency in proxy type handling
move minecraftforge . dungeonlootTries ( ) out of the mod _ minecraftforge . java file
refactor column fetching logic in JdbcDatabaseSnapshot . java for improved clarity and functionality to enhance the efficiency and maintainability of column retrieval
added a new container with a CSSBorder and label to the CSSBorderTest class to enhance the UI with a custom border and label for better
retryloadbalancerinterceptor now throw retryablestatuscodeexception if the service return a retryable status code
change layout parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to improve layout responsiveness by using a more appropriate
updated the calculation of parentTaskName to use current time instead of nanoseconds to improve accuracy of task name generation for better performance monitoring
added error handling for input parsing in ServiceResourceProvider . java to improve robustness by handling potential UncheckedIOException and logging errors
refactor conditional logic in IndexDatabase . java to improve clarity and structure to enhance readability and maintainability of the code logic
[ giac ] fix ` ` round ( x ) ' ' in ca
rename AnonCipherWithWantClientAuth . java file to improve clarity and maintain consistency in naming conventions
added @ Deprecated annotation to multiple methods in ProducerTemplate . java to indicate that these methods are outdated and should not be used in future development
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
use asserttrueallthetime instead of sleep at the end of the test .
replaced the internal method ` encodeInternal ` with a direct variable ` saltedPass ` in ` Md5PasswordEncoder . java `
replaced direct usage of ViewTreeObserver with direct calls to mTaskRecyclerView ' s getViewTreeObserver ( ) to improve code readability
refactor Response class to improve response handling to enhance performance and maintainability of response processing
fix sstablemetadata . getmaxtimestamp from long . min _ value to long . max _ value
increase preferred size of security panel to make it small
added null and empty checks for replies and replyUsers in multiple classes to ensure that replies and replyUsers are not null or empty before processing
updated ` toString ` and ` equals ` methods in ` HitbtcBalance ` class and modified exception handling in ` Hitbtc
fix ( sql ) : fix order by for where clause with in statement
changed the return statement from ' s ' to ' addrs . toString ( ) ' in RetriesExhaustedWithDetailsException . java to
replaced direct method calls to closeOpenFile ( ) with OpenCookie . open ( ) in EditGcodeFile . java to streamline
updated HTTP client imports from ` apache . http ` to ` apache . http5 ` in ` JsonToGrpcApplicationTests . java `
update energy management logic in PipePowerWood . java to adjust energy removal based on battery ' s energy stored and requested energy to improve
added a check to delete the temporary output file if it exists to ensure that temporary output files are properly cleaned up before use
updated the constructor parameter name from " tid " to " id " in BitstampWebSocketTransaction . java and added unit tests in BitstampStreaming
added time limit checks in ReplayProcessor and ReplaySubject classes and created corresponding tests in ReplayProcessorTest and ReplaySubjectTest to
updated the expectedCitation string in CitationStyleGeneratorTest . java to ensure consistency in citation formatting
set default value for video _ hdr _ format when video _ hdr _ format be not specify .
apps - 297 add show _ definition _ for _ equation _ in _ exam feature flag and only show definition of the equation in exam mode
fix nullpointerexception in sipcommtextfieldui when text field be empty .
hbase - 11341 cache scan when startrow be null ( addendum )
updated the init script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes for improved performance to enhance efficiency and maintainability of mathematical operations
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to provide a debug flag for enabling transient task
[ hotfix ] fix checkstyle violation in accessexecution , accessexecutionvertex , archivedexecution
added a condition to set density to 3f when scale is 3.0 to ensure proper scaling behavior for IOS graphics
rename the ` optional ` field and related methods from ` optional ` to ` vararg ` in the ` Parameter ` class to clarify
hbase - 11341 add exception to log when regionstatestore . get ( ) return null
refactor assertion in TestClusterUpgradeUtils to use lambda expression to improve code readability and reduce boilerplate
updated warning log message and refactored connector initialization methods in AsyncHttpConnection . java , AsyncContextTest . java , and SelectChannelAsync
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to control the visibility of the arrow in the search functionality
updated lock mode handling in Database . java and removed a test method in TestRowLocks . java to improve lock management and enhance test coverage for
skip biginteger test on linux / amd64 only .
added handling for Integer and IntValue types in Scalars . java to improve type safety and ensure correct value retrieval for different input types
update primary key validation logic in CreateTableStatement . java to improve error handling for missing or multiple primary keys
added conditional checks for ` Utilities . isLmp ( ) ` before setting drawable resources in ` CellLayout ` , ` Hotseat `
fix an npe in vmservicemanager . getflutterviews ( ) ( # 5379 )
added new methods ` contentTypeOptions ` , ` xssProtection ` , ` cacheControl ` , ` httpStrictTransportSecurity ` , and `
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and clarity of the code structure
simonstewart : move devtoolsprovider to a separate module and rename smoketest to Distributedcdp
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to provide a more descriptive name for the
added support for prebuilt libraries in Python binary descriptions and tests to enhance functionality to support prebuilt dependencies in the Python build process
updated client authentication handling in NetServerOptionsConverter , HttpServerOptions , and NetServerOptions classes to improve clarity and functionality of client authentication options
updated REPLDIR , REPLCMDIR , and REPL _ FUNCTIONS _ ROOT _ DIR paths to use the system ' s name
refactor task view retrieval logic in RecentsView . java to improve clarity and efficiency to enhance readability and maintainability of the
increase test timeout on slow ci server
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
rename variable ` controller ` to ` flowController ` in multiple classes to improve clarity and consistency in naming conventions
[ hotfix ] [ table - planner - blink ] fix exchange sum num assignment in pipeline builder
added a usage declaration for ClassLoaderHandler in module - info . java to enable the use of ClassLoaderHandler for better class loading management
planningproblem should be set in event thread , not in event thread
added JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive information during JSON processing
changed the condition from checking if throwable is null to checking if it is not null to ensure that the code only executes when throwable is not null
replaced direct access to queryInfoMap with a variable for clarity to improve code readability and maintainability
fix the auto - workbench auto - workbench not show the recipe when there be no recipe .
fix npe in gl200textprotocoldecoder when there be no hdop
rename ` timeColumnName ` and ` timeFieldSpec ` variables to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to improve cl
removed duplicate calls to HttpMethed . waitToProduceOneBlock in HttpShieldTrc20Token004 . java to streamline
ww - 4640 add support for inject initializable instance in container
add longtasktimer tag to timer observation handler ( fixes # 399 )
changed the data type of ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and adjusted related calculations
add warning log for deprecated fragment expression ( line , col )
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread - safe access to the attributes collection
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix for amq -
added new color constants and updated extractInto method to handle fallback color extraction to improve color extraction functionality and support for dark text hints
added data folder accessibility check and full path retrieval in SketchBuilder . java to ensure that only accessible data folders are included in the source
modified the ` appendContent ` method to include a ` includeTitle ` parameter and replaced ` TextUtils . isEmpty ` with ` StringUtils . isEmpty `
removed instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify session management by eliminating unnecessary object creation
added logging for reconnection completion and failure in NettyStreamingService to improve traceability of connection reconnection processes
replaced the deprecated ProxyFactory with a new JavassistProxyFactory in multiple files to ensure compatibility with the latest javassist features
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in the ` QueuedThreadPool ` class to improve thread management by using a more
refactor address handling in SocketExceptions and ExceptionText classes for improved clarity and functionality to enhance error reporting and ensure address information is correctly
added a method to check if the view directory is under the repository directory to ensure that the application does not attempt to access the view or repository
remove tab header indicator from drag - and - drop event ( # 6373 )
8274395 : [ testbug ] add - xx : + usecompressedclasspointers to testdumpandloadclass
peersync : do n ' t log error if update log be not in active or replay state
deleted the ConnectionHook . java file to remove unused connection hook functionality from the project
removed redundant initialization of ` waitForReplicasInSync ` in multiple test classes to streamline the code and improve clarity by eliminating unnecessary
( chore ) camel - rest - dsl : fix checkstyle issue
updated version handling in ApexLanguageModule and added hasNamespaceGuardedAccess method in TestAccessEvaluator to ensure compatibility with external versions and implement
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory and improve thread management to enhance performance and maintainability by centralizing thread pool management
added a ByteBufferPool parameter to the WebSocketAsyncConnection constructor and updated its usage in WebSocketServerFactory to improve memory management by allowing the buffer pool
added scrollToPositionWithOffset calls for thumbnail index adjustments in UploadActivity to improve user interface responsiveness during uploads
fix ( griffin ) : fix sampleby for timestamp override by other column alias ( # 4379 )
added @ Override annotation and refactored animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation classes to enhance code readability and
added a conditional to disable the default user agent in the HttpClient builder to ensure that the application does not attempt to use the default user agent when
added pubsubhubbub feature to ApplicationSettings and modified FeedRefreshUpdater to conditionally handle pubsub feed updates based on application settings
changed the visibility of the finalize method from public to protected to restrict access to the finalize method for better encapsulation
added isAnonymousOrLocalOrSyntheticClass method and updated related logic in StubJarClassEntry . java and CalculateAbiFromClassesStep
add dspacewebapp to make it easy to use it in the web application
added null check and alias retrieval for the left table in CalcitePlanner . java and RowResolver . java to ensure that a column is
updated the identity string in JobGenerator to include " Trigger " to improve clarity of the identity for better debugging
updated logging levels from info to warn for broadcast transactions in Wallet . java to improve transaction handling and provide clearer logging for broadcast failures
increased timeout value from 3 seconds to 6 seconds in BasicMapTest . java to improve test reliability by allowing more time for operations
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` to ensure
added a new enum ` TlsClientCertPolicy ` and refactored client certificate policy handling in ` GitBlitServer ` to improve
added a debug log statement and modified the subscription logic in KrakenFuturesStreamingService . java to enhance traceability of subscription process and improve
added headers and subProtocols to ProxyWebSocketHandler to enhance WebSocket protocol handling by incorporating additional HTTP headers
added a debug log statement to HiveQueryResultSet . java to improve traceability of query result fetching process
updated dimension and label formatting in HolidayEventFormatter . java to improve readability of dimension and label representation
refactor FinalizePrivateFieldsTest and FinalizePrivateFields to improve inner class handling and add a new method to check if the class is an inner
[ hotfix ] [ runtime ] fix typo in unexpectedjobexecutionexception
deleted the ` module - info . java ` file and modified button visibility logic in ` AquaLookAndFeel . java ` ,
updated maxFreq to maxCost and added null checks for docsEnum and maxCost in DrillSidewaysQuery . java and DrillSide
added a new key - value pair for GeoDegeneratePath in the classRegsitry map to ensure proper handling of GeoDegenerate
removed the ` preFill ` parameter from several constructors in ` ParticleEffectPool ` , ` FlushablePool ` , and ` ReflectionPool
added logic to update and apply taskbar state for non - launcher apps in TaskbarLauncherStateController to ensure proper state management when not in
added null check for the default style before comparing it to prevent potential NullPointerException when the style is null
refactor GuiUtil methods for setting maximum size , preferred size , and creating MarqueeLabel instances to improve code readability and
refactor icon retrieval logic in FileTreeViewHolder . java to streamline file type checks to improve code readability and maintainability by consolid
updated assertions from ` isEqualTo ` to ` contains ` for qualifier checks in ` ParallelUniverseTest . java ` to improve clarity and
added synchronization to the retrieval of suite results in XMLReporter . java to ensure thread safety when accessing shared suite results
add test for nativeworker with probability function
added a call to deregister the current thread in ClientContainer to ensure proper resource management and prevent potential memory leaks
hhh - 1369 - fix bug in sybase dialect when use a temporary table
danielwagnerhall : do n ' t use color . fromstring ( value ) in htmlunitwebelement . get
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter to improve link indexing logic to enhance performance and maintainability of link indexing process
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability of memory allocation logs for better
update ad playback state when there be no ad group
refactor equality check in MultimapSubject . java to use a boolean variable for clarity to improve code readability and maintainability by avoid
updated the frequency property string from ` deg _ text ` to ` unit _ hz ` in ` WaveGeneratorActivity . java ` to ensure
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced TreeMap initialization with a direct instantiation of includedLabelSets to simplify code and improve performance by eliminating unnecessary method calls
fix npe in vertexlighterflat . addnormal ( ) .
added tracing tags for message sent and received in TracingClientInterceptor , ITTracingClientInterceptor , and ITTracingServerInterceptor to
updated time zone handling in ScheduledTrigger . java and ScheduledTriggerTest . java to improve consistency and clarity in time zone representation
added AsyncBucket and InMemoryBucket classes , and modified Bucket and ConfigurationBuilder classes to implement asynchronous mode support and custom time measurement features to enhance
updated argument validation in resexhausted003 . java to check for the presence of the classes directory to ensure that the TEST BUG message
reformatted code for consistency and improved readability in AbstractConnector . java to enhance maintainability and enhance code clarity
renamed OngoingStubbing . java for clarity to improve code readability and maintainability
added support for reusing the WebServer in the Daemon class and updated the getValidWebServerPort method to accept an Optional < WebServer >
replaced ` productConstructor ` with ` constructor ` in ` HttpClientUtil . java ` and added a static import in ` SolrTestCaseJ
added a check to ensure the thread allowlist is not empty before clearing it to prevent potential errors when the allowlist is not set
updated the method name from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity
[ drools - 7 ] [ drools - 7 ] ignore hitpolicy . collect when analyze overlap
add a test for sliding windows combine functionality in CombineTest . java to ensure correct behavior of combine functions in the pipeline
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to ensure apps are only bound
removed the check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest . java to streamline the test by eliminating unnecessary
reformatted code in Solution . java for consistency to improve code readability and maintainability
refactor AquaMenuBarUI to utilize AccessController for screen menu bar retrieval to improve code maintainability and compatibility with embedded macOS
add setrawlocation ( location , boolean fall ) to allow set fallposition to 0
refactor query logic in SimpleJpaRepository to improve clarity and structure to enhance readability and maintainability of the query execution
added timestamp , parent hash , nonce , and number properties to the BlockUtil class to enhance the BlockUtil class to include additional block information for
rename loopsafepointinsertionphase to safepointinsertionphase for clarity
hbase - 20536 addendum fix npe in rsgroupinfomanagerimpl and zkprocedurememberrpcs ( #
changed the visibility of several methods in ArtifactResolver from package - private to public to allow access to these methods from other packages
added thread stop and disposal of resources in ClientConnectionHandler , BulletPhysics , and ChunkProcessingPipeline to ensure proper resource management
added a validation check for maxBufferedDocs in IndexWriter . java to ensure maxBufferedDocs is at least 1 to prevent illegal argument exceptions
added state management for the login process in LoginActivity to manage the state of the login process during configuration changes
added null checks and improved UUID handling in Pump . java and added a test case in PumpTest . java to ensure robustness
changed access modifiers of several methods in HttpShardHandlerFactory and LBHttpSolrServer from private to protected to allow subclasses to access these methods
updated the order in BaseAuthenticationServiceSelectionStrategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added new
added Jetty server and handler management functionality to TestJNDI . java to enable better handling of JNDI context in the application
reformatted code for consistency and clarity in SortedDynPartitionOptimizer . java to improve code readability and maintainability
simplified the return statement in the FileStreamChannel class to always return true instead of checking for NioEventLoop instances
updated the logic for setting ` newNumNulls ` in ` StatsUtils . java ` to ensure correct handling of null values based on new row
camel - 16400 : camel - jbang - add kamelet support to camel - jbang - run and camel - jbang -
replaced OkHttpOAuthConsumer with OpenID authorization handling in OSMJob . java to enhance security by ensuring users are authorized before uploads
remove print statement from test ( ) and add main ( ) in basicptxtest .
added clientAuth configuration to IoTDBRestServiceConfig and updated RestService to support client authentication to enhance security by allowing the use of client authentication
simplified the injection logic in ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSameParentFieldInjection
bloom : remove bloomfilter32bitsplit from bloomuriuniqfilter
changed the ` getCursorAdapter ( false ) ` to ` getCursorAdapter ( true ) ` in ` HomeFragment . java ` and added
updated the intermediate header height ratio from 1f to 75 f in ProfilePager . java to improve the responsiveness of the UI by
replaced ` RuntimeEvent ` with ` RecompilationEvent ` across multiple files and introduced a new ` RecompilationEvent ` class to
added HOST _ SYS _ PREPPED configuration and related methods in ExecutionCommand and Configuration classes to manage host preparation status based on configuration settings
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and introduced a new test class ` UnknownChangeLogFormat
added a loop to delete a slash from the location in DefaultServlet . java to ensure proper handling of directory paths in the servlet
added properties for entity and score in StaticPipeline to enable configuration of entity and score in the pipeline
refactor filename and source path handling in Frame . java and WhoopsModule . java to improve clarity and functionality to enable or disable
[ geos - 9441 ] catalogrepository . getdatastore ( ) should return null if datastore do not exist
refactor assertions in Assert . java for improved readability to enhance code clarity and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` to
added unit test base on user forum issue
replaced instances of ` List < IMeasurementSchema > ` with ` List < MeasurementSchema > ` across multiple files to simplify code and improve
updated loop structure and added expected memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve
replaced ` slf4j - log4j12 ` with ` slf4j - reload4j ` in LoggingOptionsTests
[ hue ] fix flakiness in huebridgehandlerossgitest ( # 11341 )
changed package structure of multiple activities from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities `
[ drools - 1276 ] ignore test due to drools - 1276 issue
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ service ` , ` _ topicName ` , and ` personalAccessToken ` to
refactor AbstractPart class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] fix checkstyle violation in taskslot
replaced instances of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` Netty
added error handling for lock release in MoveTask . java to improve robustness by handling potential LockException during lock management
replaced Properties with ResourceBundle for loading GEM _ PATH and RUBY _ VERSION in JRubyBackend . java to improve resource management and
transaction : remove transaction . zero _ address , use byteutil . empty _ byte _ array instead
refactor ClassGraphClassLoader to streamline class loading logic to improve code readability and maintainability
[ hotfix ] [ test ] make blob storage directory configurable in jobmanagerstartuptest
doc ( regen ) : update doc from proto to proto ( regen )
added a Bundle to the FileDisplayActivity to enhance functionality by allowing custom extras for the activity
replaced ` break ` with ` continue ` in ` ParticleEmitter . java ` to ensure that the loop continues when the particle is null
updated expected cluster counts in AmbariManagementControllerImplTest and AmbariManagementControllerTest from 4 to 3 to reflect the correct number
removed nullable annotation from the SERVICE column in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry . java
updated Bug4823811 . java file to improve test coverage for bug 4823811
refactor pattern deletion in RmStep . java to use a function for path relativization to improve code clarity and maintainability by
refactor requestFullState method to accept a boolean parameter indicating if an initial request is needed to improve flexibility in handling state requests based on
added attribute property and updated related methods in ShibbolethCompatiblePersistentIdGenerator . java to enhance ID generation capabilities by allowing attribute management
corrected formatting of the @ Inject annotation in RequestValidationService . java to improve code readability and maintain consistency
replaced direct message handling with a Bundle for managing keyboard logger messages to improve code readability and maintainability by encapsulating logger message data
updated code formatting in FileNodeProcessor . java , MManagerBasicTest . java , and MTreeTest . java to improve code readability
refactor NavigableMap and NavigableSet classes to improve code readability and maintainability
add unit test for ioutils . slurpfile ( ) and ioutils . slurpfilenoexceptions ( )
added @ FunctionalInterface annotation to multiple classes to indicate that these interfaces are intended to be functional interfaces
refactor span assertions in TraceWebFluxTests to use a new method ` spanWithName ` to improve code readability and reduce duplication
added support for date conversion in ETypeConverter and HiveSchemaConverter to enable handling of date values in Parquet format
replaced hardcoded whitespace with a constant from Patterns . COMMA _ SEPARATOR to improve code readability and maintainability
ggb - 1353 do n ' t show error message on invalid input
refactor column count checks in SemanticAnalyzer . java for clarity to improve code readability and maintainability
updated conditions for updating max scores in WANDScorer . java to improve clarity and correctness of scoring logic
refactor Correspondence class for improved clarity to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to enhance code clarity and maintainability by standardizing
initialized ` curPixVal ` in ` XRSolidSrcPict . java ` and added a new test class ` WhiteTextColorTest .
improve performance of biomedictionary . containstype ( ) by use a collection instead of a list
corrected the variable name from ' withinTolerance ' to ' exceedsTolerance ' in BoundedLocalCache . java to improve code readability and
updated ` @ Ignore ` annotation to ` @ Stability ` annotation in ` TaplTestsLauncher3 . java ` to enhance stability
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a null and empty check for logFileSuffix in SnippetUtils . java to ensure that logFileSuffix is not null and non - empty before
refactor PythonBuckConfig to improve code structure to enhance maintainability and readability of the code
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryName ` methods in ` ShadowPackageManagerTest ` to
fix ( meiligao ) : add alarm info for meiligao ( fix # 1193 )
added null check for tile before accessing its properties to prevent potential NullPointerException when tile is null
added a progress dialog to display the current cache size and modified the cache deletion process to use an asynchronous task to improve user experience by notifying
updated import statements to use the new Google Common library instead of the deprecated Google API to ensure compatibility with the latest library structure and improve code maintain
http : / / issues . apache . org / activemq / browse / amq - 2635 - throw notauthorized exception instead
added a new abstract method ` schedulePeriodically ` to the ` Scheduler ` class and updated the return type of the ` call ` method to
replaced ` refreshListOfFilesFragment ( false ) ` with ` getListOfFilesFragment ( ) . onItemClicked ( ) ` to
added a check for multiple file paths and improved exception handling in StreamUtil . java to enhance file selection logic and provide clearer debugging information
refactor create _ table methods to use CreateTableRequest instead of EnvironmentContext to simplify table creation process and improve code readability
added a volatile boolean flag ` aborted ` and modified ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to
added indentation checks in multiple block parser classes to ensure proper handling of indentation levels in block parsing
added networkwifistatusreceiver and changewifistatusevent classes to handle network status updates to enable dynamic updates of wifi status based on
simplify the frame validation logic in FrameGenerator . java to enhance readability and maintainability of the code
added visibility control for the collapse handle in WidgetsBottomSheet to ensure the collapse handle is visible for better user experience
added new files ` Issue475 . java ` and ` XSS . java ` to implement support for XSS rendering in the application to
added a condition to return early if the units to scroll are zero in StandardGraphIO . java to optimize performance by avoiding unnecessary processing when
changed the condition from checking if the contract list size is greater than one to checking if it is not equal to one to ensure that the contract
added ` add ` and ` put ` methods in ` JsonArray ` , ` JsonObject ` , and corresponding tests in ` JsonArrayTest ` and `
added hashCode ( ) method to IPPPrintService and created TestRaceCond class for validation to ensure consistent hash code comparison for print services
hhh - 11341 : db2i and db2z dialect should use getversion ( ) instead of iversion ( )
do n ' t connect to stripe if platform fee > 0
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and enhance maintainability
clear data first subsample by adaptive reconfiguration
changed access modifiers of several classes from public to package - private to restrict access to these classes and improve encapsulation
added Retrofit import in Part and PartMap classes to utilize Retrofit for improved request handling
refactor JsonBuildHelper and ParamsBuildHelper to streamline JSON handling and improve parameter processing to enhance code readability and maintainability while ensuring
added TYPE _ TASKBAR _ OVERLAY _ PROXY to AbstractFloatingView . java to enable taskbar overlay proxy functionality in the floating view
fix : update gapic - generator - java with mock service generation fix ( # 174 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on
removed the second parameter from the createRenderScript method in AllAppsView . java to simplify the rendering process by eliminating unnecessary parameters
pmd : fix typo in pmd . java
added a method to check if a bundle is a system bundle and refactored related code to use this method to improve code readability and
reformatted code for consistency and clarity in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
replaced hardcoded value of 0.01 with a constant LOW _ FALSE _ POSITIVE _ RATE in KeyChainGroupTest . java
replaced ` rocketConfiguration ` with ` defaultConfiguration ` and added selection logic in ` Overview . java ` to improve clarity and
server : fix npe in agentmanagerimpl . isalive ( ) when host be down
added null check before converting value to avoid potential NullPointerException when value is null
kvm : do n ' t return null when host discovery fails
updated string literals for NO _ NAME and NO _ VALUE in ParamAction . java to improve clarity of error messages for better debugging
updated constructor parameters in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept a Object instead of InvocationContainerImpl
added a method to strip method parameters and updated the getMethodLine method to use this new method to improve code clarity by eliminating unnecessary
updated version name and code for the GreatVoyage application to reflect the latest release version
mondrian : use set instead of list for allowedcommands in outputfilter .
[ geos - 7012 ] fix label renderer bug in symbolmblayer
ggb - 2272 fix for overlap feature not resize popups
updated error messages from " : " to " - " in ValidationSuite . java to improve clarity and consistency in terminology
added a new ` StartingWindowListener ` class and modified the implementation of ` onTaskLaunching ` in ` QuickstepTransitionManager ` to
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve documentation clarity and maintain consistency in documentation
updated exception messages in CheckPackageAccess . java to clarify package access and package definition security exceptions to improve error handling and provide clearer
increased the awaitTermination timeout from 30 seconds to 90 seconds and added an assertion to verify the executor service ' s termination status to ensure
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check before setting it in ` XR
added @ JsonIgnore annotation to Schema . java to prevent serialization of certain fields during JSON processing
increased the test timeout from 5000 milliseconds to 10000 milliseconds to allow more time for tests to complete successfully
updated method signatures and variable names in SimpleNaiveBayesClassifier . java to improve clarity and consistency to enhance code readability and
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` to improve clarity and organization
refactor Prototype class to improve code readability to enhance maintainability and facilitate future development
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure that the tableIsTransactional property is correctly retrieved from the
[ java ] : rename recordingwriter . writefragment to recordingwriter . onblock .
add check for non - negative index in cea subtitle index
added " alias " to the group by tags in KairosDatastoreTest . java and implemented the getAlias method in DatastoreMetricQueryImpl .
replaced multiple CurrencyPair instances from " BTC _ CAD " to " BTC _ USD " and " LTC " ,
hhh - 11341 fix resource leak in unit test
updated import statements for KafkaSender from " kafka11 " to " kafka " in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests
added new files ` GwtBinaryIntegrationTest . java ` and ` A . java ` to implement integration tests for GWT binary building to ensure
updated visibility logic for loading cause label and refactored ResultSetRenderer initialization in SQLConsole . java to improve user interaction handling and enhance error handling
reformatted code in EnhancedRandomImpl . java and EnhancedRandomImplTest . java for consistency to improve code readability and maintainability
added XML _ SECURITY _ PROPERTY _ MANAGER to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance security property management for
added a new file ` InlineDefaultMethod . java ` with interfaces with default methods and subclasses to demonstrate the use of default methods
updated SQL LIKE expressions in SqliteFieldPredicateView . java to use GLOB instead of ESCAPE to improve compatibility with PostgreSQL ' s GLOB
( chore ) camel - jbpm : align visibility of dmnassemblerservice . getdmnprofiles ( ) to protect
fixed - redissonscript . loadallasync ( ) method throw npe . # 3649
fix incorrect byte / boolean array offset + remove unused method .
updated debug log messages to use ` % d ` instead of ` % s ` for clarity to improve log readability and provide more detailed
do n ' t send fmlproxypacket in fmloutboundhandler . sendproxy ( ) , it do n ' t need to
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS in ExecConstants . java and updated thread pool configuration in WebServer
refactor shortcut management logic to manage removed shortcuts more effectively to improve the efficiency and clarity of shortcut management in the launcher
remove unnecessary check for String type in DefaultHttpClientBinderRegistry to simplify code logic for better readability and maintainability
removed the case for the home button in DetailFragment . java to streamline the navigation process by eliminating unnecessary navigation
added a condition to check if the Android market is present before including Play Services to ensure that play services are only included when the Android market is
refactor cell parsing logic in TableBlockParser . java and add new test cases in TablesTest . java to improve handling of whitespace and zero
added support for bridging headers in NewNativeTargetProjectMutator , AbstractAppleNativeTargetBuilder , and NewNativeTargetProjectGenerator to
refactor method handling and source path management in PotentiallyDeadCode . java to improve clarity and maintainability of the code structure
added support for diamond finder in ` Attr . java ` and created new classes ` Foo ` and ` DiamondRedundantArgs
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest (
removed unused import of Utils and added debug logging for cachemetrics registration to improve code clarity and reduce unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error handling for authentication issues
updated the calculation of the zero variable in the Test6796786 class to ensure accurate comparison of floating - point values
added " logback . dev . xml " to the list of file paths in JoobyMojo . java and Main . java
added a new file ` JaasEventCheck . java ` to handle JaasAuthenticationSuccessEvent and JaasAuthenticationFailedEvent to facil
refactor QuickstepTransitionManager to use a list of views to animate instead of direct references to currentPage and hotseat to improve code read
updated string distance comparison logic in ConjunctionSolrSpellChecker . java and added a new test class ConjunctionSolrSpellCheckerTest .
replaced HashMap with Map for fetchers in ShadowSystemServiceRegistry . java to improve performance and maintainability of the code
[ hotfix ] remove unused constant in defaultleaderelectionservice
changed the visibility modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : add config to wait for modify storage pool command to return
updated JDBC table and schema handling in AbstractJDBCConnectorProvider . java to improve clarity and consistency in database schema management
rename ` sqlUpdateAUP ` to ` sqlUpdate ` across multiple files to improve clarity and consistency in naming conventions
updated the ` schemaTypeCache ` to use a synchronized map and simplified schema creation logic to improve thread safety and simplify schema creation process
update header handling logic in StaticServerHttpHeadersWriter to ensure headers are only added if they do not already exist to improve header management efficiency and
added JUnit @ Ignore annotation to LatticeDemo . java to mark the test as ignored due to file availability issues
added a call to create a storage directory in TestCollector . java to ensure the storage directory exists before proceeding with operations
set chunked streaming mode to 1024MB in StarTreeJobUtils . java to improve performance by reducing data transfer overhead
jsonschema : add basictypesyntaxchecker , multipletypesyntaxcheckertest , singletypesyntaxchecker and basictypesyntaxchecker
hbase - 16400 upgrade hbase - protobuf from v2 to v3 ( addendum )
added a test method to verify that recursive structures do not cause stack overflow exceptions in BeanPopulatorTest . java and created a new Node class
added IOException to the getRemoteName method signature to handle potential IO exceptions when retrieving the remote name
updated exception handling to include IllegalArgumentException and refactored client creation in ClientFactory and ConnectivityServiceImpl to improve error handling and streamline client
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security by allowing users to use AspectJ mode with protect
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by enabling hostname verification
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enhance functionality
updated method calls from ` invoke ` to ` invokeUrgent ` in ` ClientSchemaService ` and modified assertions in ` CompactFormatIntegration
destroy joints before removing it from the body to ensure proper resource management and prevent potential memory leaks
fix null pointer exception in search filter .
[ hotfix ] [ test ] move sourcereadertestbase into connector / testutils
added a try - catch block to handle FileNotFoundException exceptions in DocumentsStorageProvider . java to improve error handling and prevent application crashes due to
added new interfaces ` HookDefinition ` and ` JavaHookDefinition ` , and created ` JavaHookDefinition ` and ` JavaHookTest ` to
refactor buffer flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by encapsulating
modified the ` setExoOptions ` method to include a ` allowTs ` parameter and updated the video direct play profile container initialization to allow
removed the USER identifier from the identifier collection in DMRDecoderState . java to clean up unused identifiers and improve code clarity
added an INVISIBLE color constant and updated the toString method in Color . java , modified import statements in RailButtonShapes . java , and
updated null handling logic in CountAggregationFunction and added a new test case in NullHandlingIntegrationTest to enhance null handling capabilities and ensure correct functionality
set the ' deep ' variable to - 1 in InternalTransaction . java to initialize the transaction ' s deep state
escape the name in the StreamInitiation class before appending it to the buffer to ensure proper handling of XML names in the output
updated file creation logic to use a configurable work directory instead of a hardcoded " work " to allow users to specify a custom work directory for
danielwagnerhall : mark a rule a deprecated if it ' s not present .
fix amd64directcallop to not use a dummy label .
replaced instances of ` minStamp ` and ` maxStamp ` with ` static final MIN _ TIME ` and ` MAX _ TIME ` in
refactor BitDocIdSet class for improved performance to enhance efficiency of document ID retrieval
refactor metric emission logic into a separate method ` emitMetricsJson ` to improve code readability and reusability
updated MIME type checks and intent creation in DetailFragment and GalleryActivity , and modified touch listener in GalleryActivity to improve code readability and enhance
improve ifluidcontaineritem logic , fix the bug
refactor CsharpLibrary to utilize RuleAnalysisLegacyBuildRuleView for better handling of DotnetLibraryProviderInfo to improve compatibility with
do n ' t send iq . type . get to pep service if it ' s an iq . type . get
add null check to prevent npe in intrinsificationphase
do n ' t refresh active work if we do n ' t have active
pdfbox - 4892 : optimize bf search , a suggest by valerybokov
added constructors to ` LwjglAppletApplication ` and modified ` LwjglApplet ` to initialize ` canvas ` to enhance application
updated the string representation method in EnvironmentAndSystemPropertyClientProviderStrategy . java to handle null DockerClientConfig to improve robustness by avoiding potential
refactor password policy application logic in LdapAuthenticationHandler and AccountStateHandler to streamline message handling to improve code clarity and maintainability by
refactor Int2ObjectCache to improve caching performance to enhance efficiency of object retrieval in the cache
add a private String field resolveFromAttribute in AbstractLdapAuthenticationProperties to support attribute resolution configuration in LDAP authentication
refactor methods in Readable class to improve code readability and maintainability
use testsupport . with _ font in jsoupnonvisualregressiontest ( # 551 )
updated the icon resource used for the share menu from ` share _ menu _ item ` to ` ic _ menu _ share ` to align the
updated JVM version checks to support Java 8 and Java 9 to ensure compatibility with Java versions below 8 and 9
updated JDBC 4.1 connection timeout handling to differentiate between AbstractMethodError and NoSuchMethodError to ensure compatibility with non - JDBC 4.
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced ` HashSet ` with ` ArrayList ` for managing filtered classes in ` Enclosed . java ` to improve performance by using a more efficient
added @ Override annotations in multiple classes to ensure proper method overriding and improve code clarity
removed unnecessary whitespace in ChartProvider . java to improve code readability and maintain consistency
fix working directory be set to full path include filename
removed a condition from the return statement in JavacParser . java and added a new class ExtraSemiTest . java with Java source
added createdAt field and corresponding methods to User and UserRepository classes to enable querying users based on their created time
updated Test15FloatJNIArgs . java for improved functionality to enhance performance and maintainability of the code
updated import statements and modified link formatting in the plugin . java file to improve code readability and maintainability by standardizing link formatting
nifi - 1643 : fix mockprocesscontext . encrypt ( ) to correctly decrypt the encrypted string .
[ java ] add ensurenotreentrant ( ) method to aeronarchive to prevent reentrant call .
added a null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerException when merging dependencies
added timeouts to the SslBytesServerTest class to improve test stability by allowing more time for tests to complete
peer : fix typo in peer . tostring ( ) javadoc .
add and modify methods in RealtimeIndexingCoordinator , RealtimeSegment , StreamProvider , and changed StreamProviderConfig from a class to an interface to enhance functionality and improve the interface design for better extensibility
added a null check for exportedData before calling writeTo to prevent potential NullPointerException when exportedData is null
refactor popup positioning logic in RecyclerViewFastScroller to use a dedicated method to improve code readability and maintainability by encapsulating
updated error messages and added a method to check if a tool window is instantiated in Buck classes to improve clarity of error reporting and ensure
added a conditional check for Windows platform before creating a JCheckBox in the GeneralTab class to ensure that the preventSleep checkbox is only displayed on
updated servlet imports from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java `
updated cropping logic and window dimensions handling in QuickstepAppTransitionManagerImpl . java and FloatingIconView . java to improve respons
added full - screen exclusive mode functionality to XWindow and its peer classes to enhance security warning visibility management based on the full - screen exclusive mode
fix stringindexoutofboundsexception when playedduration = = 0
added methods to manage credentials for MapWork and ReduceWork in DagUtils . java and updated TezTask . java to utilize this
optimize map iteration : entryset ( ) instead of keyset ( ) . in one case loop be change with parametrised constructor
trim whitespace from thread name when setting it to improve thread naming consistency and prevent potential issues with leading or trailing spaces
updated the message to clarify the reason for adding descriptions until the next point has been logged to a file to improve user understanding of
refactor Job class to improve code structure to enhance maintainability and readability of the code
added a new abstract class ` Unused ` and a method ` testUnusedType ( ) ` to the ` Main ` class to identify and
updated the key for HBASE _ MASTER from " hbase _ master _ host " to " hbase _ master _ hosts " and added
deleted the EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused interfaces to streamline the codebase
modified the ` performJoin ` method to return a list of ` GenericRecord ` instead of a single ` GenericRecord ` to improve handling of
updated the validation logic for the maximum delegate lock period in ProposalUtil . java and refactored related methods in DynamicPropertiesStore . java to
bug 7424 : 0 value for network . throttling . rate global config param indicate that network throttling be disabled
[ coinmarketcap ] fix initialization since api key be not initalized
updated configuration file names from " config . json " to " config . conf " and modified IP list handling in GossipLocalNode . java to
make tpcenable for client configurable through system property
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 across multiple application files to ensure compatibility with the
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality
modified the handling of the ` key ` variable in ` NamedObjectList . java ` to initialize it correctly when ` name ` is blank to improve
updated method names from ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` across multiple classes to clarify the purpose of the cleanup
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it with kryo to enable serialization of RCFileInputFormat in the serialization process
added methods ` typeOf ` and ` categoryOf ` to retrieve ` JavaType ` and ` JavaTypeCategory ` from ` Column ` to enhance
numberformatexception when parse host header now cause a 400 return code
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` for method calls to improve compatibility with Robole
remove standardop . addoutgoingvalues ( value [ ] ) and standardop . foreachoutgoingvalue ( instructionvalueprocedure proc ) , since
changed the visibility of ` cfsDir ` from package - private to private in ` SegmentCoreReaders . java ` and updated references in `
added ` hasMainThreadProfile ` method to ` AggregateDao ` , ` AggregateDao ` , ` TransactionDao ` , and ` TransactionCommon
added validation to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi absent or set to True to
updated filter names from " greekLowerCase " , " irishLowerCase " , " uaX29UrlEmail " , and " t
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
replace backward compatibility with discovery search request processor since dspace 4.0
added a list to manage date strings in BasicDateTime . java to remove specific America / Dawson , America / WhiteHorse
initialize SurfaceSyncGroup with a descriptive name TaskBarController to improve clarity for debugging and maintenance purposes
updated method calls and added UUID handling in GridFsTemplate and GridFsTemplateIntegrationTests to improve code clarity and ensure proper UUID - based
added methods to retrieve total size and bytesSoFar in ShadowDownloadManager and ShadowDownloadManagerTest to enhance functionality by allowing retrieval of total size and
refactor character handling logic in TextField . java to use a boolean variable for better readability to improve code clarity and maintainability by simplify
added equality check in GroupNodeViewModel to prevent potential NullPointerExceptions during object comparison
refactored the ` afterSetStatements ` method in ` Lower ` and ` BlockLexicalContext ` classes to improve statement handling to enhance
added hashCode ( ) and equals ( ) methods to IntervalXYDelegate and XYSeriesCollection classes , and updated equality checks in XYSeriesCollection to
added cleanup method to clientqueuedisruptiontest to ensure proper resource cleanup after each test
updated method name from ` testScript ` to ` verifyScriptedAttributeFilter ` in ` RegisteredServiceScriptedAttributeFilterTests . java `
replaced ` serializeSpecialDoubleValues ( ) ` with ` serializeSpecialFloatingPointValues ( ) ` in ` Gson . java ` to improve
increase zen token transaction wait time for stest case
added checks for non - empty subtags before canonicalizing language tags in Locale . java and LanguageTag . java to ensure that language tags are
kvm : add config option kvm . ssh . to . agent to allow ssh to agent
[ hotfix ] fix checkstyle violation in schedulerwhen
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to streamline dependencies and improve code clarity
added a condition to check if the string does not contain a hyphen in the filter to prevent processing invalid filter strings that may lead to errors
updated sortColumnsLabel text to reflect " Natural column order " instead of " natural order " to improve clarity and consistency in sorting
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java
updated the method to use ` htmlEncodeButNotSpace ` when writing the remote address to ensure that the remote address is properly encoded to prevent
change itemstatetriggerhandler to properly filter relevant topic to fix # 1541
remove unnecessary sync identify by findbugs
refactor file move operation to use a dedicated thread pool for improved performance to enhance concurrency management and error handling during file move operations
added methods to trigger a timer with a specified period in WrapTimer . java to enhance timer functionality by allowing customizable period handling
[ hotfix ] [ table ] support local _ date and local _ date type in typeutils
added a verbose option to the error logging mechanism in AbstractStatusReporter to enable more detailed error reporting for better debugging
ggb - 2269 toggle menu on click , undo , redo and redo button only when menu be open .
s2s vpn : do n ' t allow esitablished vpn connection between same account and vpn gateway
updated error handling logic in CursorReadingTask and added a new test case in CursorReadingTaskUnitTests to improve error reporting accuracy and ensure proper
pdfbox - 4892 : do n ' t crash on encrypted pdfs
[ 3.0 ] fix npe in curatorzookeeperclient . getchildren ( ) ( # 9441 )
add anomaly detection a a service - new table for store ad - hoc data to fix # 1545
replaced ` getSelectedItemId ( ) ` with ` id ` in ` HostsList . java ` and refactored the deleteItem ( )
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
modified the method signature of ` replaceOrderBulk ` to accept a list of order commands instead of a collection to enhance flexibility in order replacement
changed the method name from ` enterDefault ` to ` enterIdentNode ` and added a new method ` enterFunctionNode ` in ` Lower
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to utilize it for retrieving long values
added a new file ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest . java ` to implement multi - threaded verification tests for Mockito
[ xep - 523 ] add ability to remove a resource from a roster . jm - 523
updated method calls to use getOverlayedProperties ( ) instead of getProperties ( ) in MapOperator . java and PartitionDesc . java to enhance
reformatted the method call in FunctionObjectCreator . java for consistency to improve code readability and maintainability
fix npe at objectmapper # copy with messagepackfactory
added a system property to set the mock server ' s log level to WARN to improve logging granularity for better debugging and monitoring
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test execution by eliminating unnecessary test annotations
removed unused imports and modified the ` createJetty ` method in ` AbstractSolrMorphlineZkTestBase . java ` to streamline
updated scoreMap and termScoreMap to use termScoreMap instead of scoreMap to improve clarity and functionality by associating score maps with
updated condition checks in U64 . java to allow negative data values and added an eq method to improve robustness of data comparison and provide a
removed headline style settings from MainViewModel . java to streamline the code by eliminating unnecessary styles
updated the notification logic in WallpaperColorInfo . java to include a check for ` didSupportDarkText ` to ensure that dark
[ hotfix ] [ checkpointing ] make checkpointrequestdecider more robust
update thread pool configuration and import statements in Parallel . java to enhance thread management and optimize resource utilization
add test case for mfa resolvers by request
[ opencv ] opencvimagefactorytest fail on window server core container
http : / / issues . apache . org / activemq / browse / amq - 2635 - add prefetch property to the
[ py4j ] fix exception handling in getreturnvalue ( )
added @ Repeatable annotation to Issue . java and implemented a new interface Issues to enhance flexibility in annotation handling for different types and methods
updated user property from " hcat _ user " to " webhcat _ user " and modified imports in BlueprintConfigurationProcessor and BlueprintConfiguration
updated socket connection logic to use a dynamic socket address based on the " socksProxyHost " system property to enhance flexibility in socket connection
[ hotfix ] fix checkstyle violation in slotreport and slotstatus
added import statement for ClassUtils in ReflectionUtils . java to utilize the ClassUtils for improved class management
replaced instances of HashSet with LinkedHashSet in SslContextFactory . java to maintain the order of elements in the collections
add a static Resources variable and updated logic for returning system resources to improve resource management by referencing a cached system
[ java ] use a constant for the extra size of the plaintext segment .
added a test to verify that circuit breaker gateway fallback throws an exception to ensure proper exception handling for invalid fallback URLs in the circuit breaker
updated HTTP client configuration to use SSL connections to enhance security by enabling secure connections
set the size limit of the input stream and remove the resetBytesReadCounter method to ensure the input stream does not exceed the defined size limit
added ` preferAES ` property and its getter / setter in ` ProtectionPolicy ` , and removed it from ` StandardProtectionPolicy ` to
( chore ) camel - opentelemetry : replace system . out . println with logger
added a new test method ` testLoadBalancerInstanceOperations ` to the ` ElbIntegrationTest ` class to verify the functionality of LoadBalancer instances with
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to clarify the
added a try - catch block to handle InvalidPathException when creating a file to improve error handling and provide informative feedback when file creation fails
fix oracle 11 issue with alias and disable followonlockingtest on the version
added file existence checks and improved exception handling in TextureUnpacker . java to enhance robustness and provide clearer error messages for atlas file
refactor state management logic in AmbariManagementControllerImpl to use cluster write lock to improve thread safety and prevent potential race conditions during service
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that ResultSet does not close it and modified the closing logic in HiveStatement to ensure proper handling of closed statements and
do n ' t use bufferedinputstream . mark ( 0 ) in chunkingtest . testbufferlargerThanfile ( ) and chunk
updated the return statement to handle pre - deleted databases in ClusterSchemaManager to ensure that pre - deleted databases are properly removed from the schema
modified the handling of the chunkedWriter pipeline in Http1xUpgradeToH2CHandler . java to ensure proper handling of chunked responses
updated conditions in EnhancedBrowseFragment , EnhancedDetailsFragment , and FullDetailsFragment to check base item ID instead of item ID and added
refactor CSS handling by introducing a RuleBank interface and modifying RuleFinder to implement it to improve code organization and encapsulate rule management for better maintainability
tweak exception handle to minimise possible confusion
added new files TestMonomorphicObjectCall . java and Object . java for testing monomorphic object calls to facilitate testing
replaced the ` removeMetaDataSource ` method with ` toFront ( ) ` in ` DataBrowser ` and ` Desktop ` classes to
hbase - 16400 fix scanquerymatcher . shouldseek ( ) to use columnfamily . get ( cf ) instead of scan .
[ hotfix ] [ runtime ] remove unused local _ state _ sub _ directory _ root from taskManagerServicesconfiguration
updated the constructor of AlterTimeSeriesStatement to accept a boolean parameter and modified the isAlterView variable to be final to enhance flexibility in
fix : fix ` ` matchtext ( ) ' ' to match whole string and substring
added a try - catch block around the routingTableBuilder initialization to handle potential exceptions when retrieving the routingTableBuilder
refactor HttpClientIntroductionAdvice to use a for - each loop for adding entries to the paramMap to improve code readability
( chore ) camel - jms : use char [ ] instead of string for password
bug fix : make listdomainchildren work with isrecursive flag
replaced the ` toSortedListWithCounts ` and ` equals ` methods with direct equality checks in the ` Counters ` class to simplify
updated the parameter name in the initialize method from ' status ' to ' original ' and added warnings to the BasicTumbleStatus to improve
truffle : fix clockgettimemillis to not call system . currenttimemillis .
refactor variable handling in PrettyPrinter . java to improve clarity and structure to enhance readability and maintainability of the code
added a null check before creating a new Node instance in LRUDictionary . java to prevent potential NullPointerExceptions when accessing indexToNode
refactor DatagramSocket and DatagramChannel classes to improve filtering logic and streamline packet handling to enhance clarity and maintainability of filtering
updated JUnit imports from ` org . junit ` to ` org . junit . jupiter ` in ` TestQueryDNS .
added a new file ` NutchServerInfo . java ` with properties for start date , configuration , jobs , and running jobs to provide
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter . java to streamline attribute handling and improve code maintain
permit configurable timestamps with cassandra - stress
updated DSAParameterGenerator to validate prime strength conditions and replaced BigInteger . ONE with BigInteger . ONE to improve code clarity and ensure consistency in
updated methods in NumberUtils and Numbers to improve handling of floating - point values and added support for Float64Array to enhance precision and performance
updated the masking logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and
added checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of constraint violations in database operations
[ issue # 5590 ] fix consumer manage processor return wrong value ( # 5591 )
added a new method ` addTab ` and refactored the ` createTab ` and ` createTabImpl ` methods to improve tab management
updated array sizes from ` toArray ( new Object [ files . size ( ) ] ) ` to ` toArray ( new Object [ 0 ] )
[ hotfix ] [ runtime ] expose taskmanagerruntimeinfo in mockenvironment
added a conditional check for null groupId , scope , and artifactId in MavenVisitor . java to improve code readability and maintainability by avoiding
improve code coverage listener in soul - admin for zookeeperdatachangedlistener
added a new file FormatCheckingTest . java to test Java class format errors to ensure proper handling of class format errors in the application
updated line number handling in CodeGenerator . java to improve clarity and maintain consistency in line number assignment
added a try - catch block around the configuration retrieval to handle potential exceptions when retrieving configuration properties
added methods to create toggle buttons with specified text , icon , and command in RadioButton . java to enhance flexibility and usability of the
updated cache initialization to include cacheSize in LRUCache . java and modified CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierBy
channelparser always argument constructor now to avoid potential message in the log follow a nosuchbeandefinitionexception .
added null check for symbolicName before quoting it to prevent potential NullPointerException when symbolicName is null
add ` ` usemode ' ' system property to load mode
added error handling for adding and removing the shutdown hook in IOManager . java and improved logging in YARNSessionFIFOITCase .
change the name of test / androidmanifest . xml to test the testandroidmanifest . xml to prevent project build breakage in ides
added null check for notPropagatedHeaders in AbstractMessageProducingHandler and introduced a new test case in AbstractReplyProducingMessageHandlerTests
refactor CompareMode class to improve comparison logic to enhance performance and accuracy of comparison operations
added HasTests interface implementation to RustBinaryDescription and RustLibraryDescription classes to enable testing capabilities for Rust binary and library descriptions
updated placeholder and error drawable resources in FileMessageVH . java to improve clarity and consistency of the icon representation
rename OnExitTest . java file to improve clarity and maintain consistency in naming conventions
added a method ` onUserPreferenceChanged ` to the ` TaskbarManager ` class to recreate the taskbar when user preference changes
refactor heap dump methods to differentiate between IBM and J9 vms to improve compatibility with different JVM versions
( chore ) camel - mybatis : ensure session be close even if commit fails
danielwagnerhall : implement ability to iterate over all open window in ie
[ jackpot ] add miss rule to iteratortofor inspection which understand generic
added a call to set the application state to STATE _ UNAVAILABLE in JmxApplicationProvider . java to reset the application ' s state to
updated position and limit handling in buffer classes to improve clarity and correctness in position and limit calculations
replaced ` toUri ( ) . toString ( ) ` with ` get ( i ) . toString ( ) ` in ` ConditionalResolverMerge
updated array handling logic and added setEmpty methods across multiple classes to improve array management and ensure consistent behavior during array operations
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to Protocol and Transport from other packages
updated the document structure in TestMultiPhraseQuery . java to include a new document for " piccadilly circus " to ensure
do n ' t assign ticket reservation when the payment method be offline .
added an onTimeoutThread field and modified listener invocation logic in HttpChannelState . java to improve thread safety and ensure proper handling of timeout events
replaced printStackTrace ( ) with debug logging in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
do n ' t use local _ quorum if consistencyforpaxos = = local _ serial
added a condition to check if the model name contains " Home " in addition to " Denon " in HeosDiscoveryParticipant . java to
added a new ` Wait ` class and modified ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` classes to support
refactor Neo4j . java to utilize AttributeController for managing node and edge attributes to improve code readability and maintainability by
added null check for ' from ' and ' serverName ' in SessionManager . java to ensure robustness by preventing potential NullPointerExceptions
nifi - 7892 : move rocksdbmetronome to controller . repository and mark it a deprecated
updated the method to retrieve the " IS _ GRANTABLE " value from results instead of a hardcoded string to improve flexibility by allowing
added logging statements and modified URL validation logic in JavascriptContext . java to improve debugging visibility and enhance URL validation logic
camel - cxf : fix the unit test error of cxftomconsumertest
hbase - 11341 addendum fix loadtesttool test failure
implemented the Disposable interface in the Texture class to enable the Texture class to be disposed
updated conditional checks and imports in WebappRegistrationCustomizerImpl , FragmentActivator , OSGiAppProvider , and DefaultJettyAt
check goquorum compatibility config only if goquorum privacy be enable
replaced IOException with Throwable for better error handling in HttpInput . java to improve error management by capturing all exceptions
added a condition to check if the country is not " JP " in addition to " TH " to prevent issues related to JVM ' s
updated response interface names from ` Wrapper ` to ` HostResponseWrapper ` across multiple files to improve clarity and consistency in naming conventions
updated the equality and hash code logic in FilteredQuery . java to include the boost value to ensure accurate comparison and hashing of filtered queries
reformatted the constructor of FileMenuFilter to improve code readability and maintain consistency
ggb - 1353 : add debug flag to article element , use scrollpanel instead of listbox
added a new file TestCMSClassUnloadingDisabledHWM . java for testing CMS class unloading behavior to verify that the CMS class un
fix npe in spongeforgeeventfactory when no entity be available
updated ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and refactored related methods to use ` ItemPreparedStatement
fix compactionstest to use identityqueryfilter instead of bytestoken
added null check for the " type " attribute in MiniAapt . java and a corresponding test case in MiniAaptTest . java to
added support for the " SpEL " operator in the condition handling logic to enable support for Spel - based conditions in the application
[ hotfix ] use equal ( ) instead of = = in ` localexecutionplanner `
do n ' t use sun . misc . service . provider , use org . openide . util . lookup instead
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
updated variable declarations from ' 0l ' to ' 0L ' in AttributeResolution9 . java and ShadowArscAssetManager9 . java
updated source and target version options in SetupHid . java from " 1.5 " to " 6 " to ensure compatibility with the latest
changed the access modifier of ` extractMetadataColumns ` method from private to public and refactored project handling in ` PushProjectIntoTableSource
updated AboutActivity to use a sorted list of localized names instead of direct calls to getLocalizedNames ( ) to improve the accuracy of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before posting a delayed runnable in HomeFragment to ensure proper refresh behavior based on live streaming settings
added an exception parameter to the MappingException in AuditConfiguration . java to provide more context about the exception when creating the AuditStrategy
( chore ) camel - file : fix flaky test
updated generic types in SchemaLoader , CompositeType , DynamicCompositeTypeTest , and DynamicCompositeTypeTest to use wildcard types to improve type safety
added support for transport checks in GitClientApplication and refactored repository URL handling in RepositoryUrlPanel to enhance transport management and improve permission checks
added delegation names for various input consumer classes in TouchInteractionService to enhance clarity and tracking of gesture interactions in the application
add null check and upgrade logic for availableVersions and allowVersionDowngrades in ChangeParentPom . java to improve robustness by handling potential
8015369 : gc / g1 / testlargepageusefortorheap . java fails due to ` ` disabled ' '
bug 118to22 : check for existence of cloud _ usage db before migrate event
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix test failure on window
added a new test class ` TestObjectStreamClass ` and modified ` requireInitialized ( ) ` in ` ObjectStreamClass . java ` to
added a null check for the center information in ZoneAwareDiscoveryFilter . java to ensure that the method returns true when the center information is not
change log level from error to warn in OpenTracingTracer . java to improve logging granularity for better traceability and debugging
added a toString ( ) method to the Generator class to provide a readable string representation of the Generator instance for better debugging and logging
refactor URI handling to initialize ' dontquote ' variable and add new tests for various URI formats to improve code clarity and enhance test coverage
added a null and empty check for resources in ClusterControllerImpl . java and implemented a corresponding test in ClusterControllerImplTest . java to ensure
refactor response extraction logic in AccepttoApiUtils . java to handle null responses more gracefully to improve robustness by avoiding null pointer exceptions
removed conditional check for Android version before allocating a ByteBuffer in VertexBufferObject . java to simplify code logic for better readability and maintainability
refactor SybaseASADatabase class to improve code structure to enhance maintainability and readability of the code
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated related methods accordingly to enhance the functionality of the ` Hash
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide a way to access the ` StringDistance `
added FLAG _ MUTABLE and FLAG _ IMMUTABLE constants in AndroidImplementation . java and updated PendingIntent creation logic to enhance permission
refactor read column ID handling in HiveFileFormatUtils and HiveInputFormat to improve clarity and encapsulation to enhance code maintainability and
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in UPNPHelper .
added multiple calls to ` DisplayTemporaryToast ( ) ` in ` SavedExperiments . java ` to enhance user experience by providing
added version resolution logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure that the service version is correctly set when it is null
added a new file ` RawSerializationTest . java ` to implement unit tests for Gson ' s ` toJson ` method to ensure correct JSON serialization
danielwagnerhall : introduce sslcertificategenerator interface to facilitate ssl certificate generation
updated the loop to iterate over all replies instead of a single status in ExpansionViewHelper . java to improve performance and ensure proper padding for
increased the timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to allow more time for resource access to
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the functionality of the N
refactor AclImpl class to improve code readability to enhance maintainability and facilitate future updates
added a new test method ` differentArraysShouldBeRandomizedWithDifferentSizes ` to the ` EasyRandomTest ` class to ensure that different
server : catch exception when stop vm , log them and return a stop answer
added a ThreadLocal variable ` tryWriteAgain ` and modified its execution logic in ` SslConnection . java ` to ensure thread - safe execution
added a method ` ancestorsVisible ( ) ` to check if the actor ' s parent is visible and updated return statements accordingly to improve visibility checks
added logging for failed rolling - update step deployment in RollingUpdateOpFactory . java to improve error reporting for deployment failures
[ hotfix ] [ table ] fix checkstyle violation in table - api
added error handling for nonexistent usernames in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent to improve user authentication flow and provide
rename AtMostXVerificationTest . java file to improve clarity and maintain consistency in naming conventions
updated default QTYPE in QueryComponent and QParserPlugin to use LuceneQParserPlugin . NAME instead of " lucene " to ensure
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added an ` isInitialized ( ) ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new
updated variable names from ` idToken ` to ` shouldHaveIdToken ` for clarity to improve code readability and maintain consistency in naming
added beginTransaction , setTransactionSuccessful , and endTransaction methods to DatabaseAdapter and refactored transaction handling in GncXmlHandler to improve database
replaced byte array handling with ByteArrayOutputStream for improved efficiency to enhance performance and readability of the code
fix npe in messagingtemplate when client have receive but clientwontreceive be true .
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to check if the source file is an instance of ` J . Compilation
added methods to set maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy . java to improve performance by limiting the number of
added a new method ` updateWits ( ) ` to the ` Manager ` class and implemented a test for witness updates in ` ManagerTest
added error handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing application crashes due to NoSuchElementException
[ log4j2 - 1349 ] remove log4j level parameter from flumenode . logversion ( ) and flume
updated authentication and primary key authentication metrics in BasicAuthIntegrationTest . java and refactored DaemonStream . java to use ExecutorService for thread management
replaced HashMap with LinkedHashMap for the ' nodes ' variable in DependencyUtil . java to maintain insertion order for the nodes collection
add jerseysupport . internalerrormapper to jerseysupport . builder . resourceconfig ( ) ( # 3
refactor header validation logic in Http2TestBase . java to use a new validateHeader method to improve code readability and maintainability by
added a switch statement to handle specific system properties in System . java to improve code readability and maintainability by reducing redundancy
changed method parameters from ` String ` to ` CharSequence ` in ` StringSubject ` and added tests for character sequences in ` StringTest ` to
update checkgraalintrinsics for jfr : : countertime , jfr : : getclassid , and jfr : :
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory in PersistenceManagerProvider to use a dynamic DataSource based on the ' forCompactor ' condition to improve flexibility in datasource
updated DeploymentOptions . java file to improve deployment configuration handling
changed the parameter type of the ` updateTextButtonWithDrawable ` method from ` Drawable . ConstantState ` to ` Drawable ` to simplify the
replaced ` InputStreamReader ` with ` StringReader ` in ` YamlParser . java ` and ` XmlParser . java ` to improve resource management and
added a method to rewrite coalesce children in RexNodeConverter and registered it in SqlFunctionConverter to enable handling of coalesce expressions in
( chore ) camel - hl7 : fix typo in unit test
updated JavassistProxyFactoryFactory to set the context class loader to ensure proper context class loading for proxy factory generation
simplified the instantiation of DefaultDateTypeAdapter by removing the DateFormat parameter to improve code readability and maintainability by eliminating unnecessary
refactor method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI and query handling to improve code readability and maintainability
implement filterOldEntries method to retain only necessary feed entries to optimize feed entries by removing duplicates and entries not tied to the specified feed
changed log level from fatal to warn in FSHLog . java to reduce log verbosity and provide more informative error messages
added a new class ` NodeMapIterable ` and refactored the ` getValues ` and ` getValues ` methods in ` NodeMap ` to
replaced ` PredicateDefinition ` with ` SubPredicateDefinition ` in ` DiscoveryClientRouteDefinitionLocator . java ` to improve clarity and functionality
added a check for non - empty fields before adding aggregates in MongoRecordReader and modified return value in RexToMongoTranslator to ensure
add ` ` admin ' ' to the admin list if it ' s empty .
replaced usage of MultiFields with SolrIndexSearcher ' s getSlowAtomicReader ( ) for terms retrieval to simplify code and improve performance
modify the return statement in ConstantBeanHolder to include the identity hash code to enhance the readability of the bean ' s string representation for better
refactor null check for primitiveType and simplify return statement in GroovyParserVisitor . java to enhance code clarity and prevent potential NullPointerExceptions
svm : remove uninterruptible implementation of hashcode ( ) and hashcode0 ( ) .
increased the timeout duration for blocking operations in SedaBlockWhenFullTest . java from 100ms to 200ms to allow more
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level
updated the logic for determining the read length in MessageUnpacker . java to improve clarity and correctness of the read length calculation
updated the import statement for Nullable from ` common . lang ` to ` core . lang ` to ensure compatibility with the latest Micrometer
updated SQL query to include a user column in IconDB to enhance functionality by allowing retrieval of user - specific icons
( chore ) camel - http : / / issues . apache . org / activemq / browse / amq - 2635
do n ' t add whitelisted resource for non - classfiles .
added a method to fix baremetal foreign keys in Upgrade410to420 . java and refactored the foreign key handling logic
removed the IJava2DRenderer interface and its implementation from Java2DRenderer to simplify the codebase by eliminating unused interface
added onTearDown method to DefaultAudioSink to notify listeners when the audio track is teardown to ensure proper handling of audio playback state when
added scheduling functionality for upstream task management in UpstreamCacheManager to improve performance and responsiveness of upstream task execution
refactor StreamType class implementation to improve code readability and maintainability
updated assertion message in Recording . java to include an additional context to improve clarity of the assertion failure message for better debugging
updated FilestorePage . java and RootPage . java to utilize RequiresAdminRole for admin role checks and improved message formatting to
( chore ) camel - elasticsearch - rest : ignore flaky test
updated the ` accept ` method to check if the method is of type ` Lifecycle ` before proceeding to enhance type safety and prevent potential runtime
updated button text in OfferBookChartView from " leftButton " and " rightButton " to " sellAltcoin " and "
camel - 7015 : restlet router should match request path if invalid url be provide . thanks to joao for the patch
createnextblock : remove ` ` blockheight ' ' parameter from ` ` createnextblockwithcoinbase ' '
removed ` Serializable ` interface from ` BTreeMapJava ` and added ` serialCloneNoCatch ` method in ` JSR166Test `
[ drools - 7 ] fix npe in ruleengineimpl when execution of startup rule fails
refactor conditional logic in Main . java for clarity to improve readability and maintainability of the code
replaced ` mFilesAll . indexOf ( ) ` with ` mFiles . indexOf ( ) ` in ` LocalFileListAdapter . java `
deleted the PlainVerifier . java file and modified the DefaultJwtSigningAndValidationService . java and DefaultJwtSigningAndValidationService . java to
added a condition to close the system window when the alt tab is triggered to improve user experience by ensuring the system window closes correctly when the alt
updated dialog handling and bottom sheet behavior in DialogFragmentIT . java and OCFileListBottomSheetDialog . java to improve code clarity and
updated MimeUtil . parseCharset to include " UTF - 8 " as the default encoding to ensure proper handling of special characters in MIME types and
added a call to the superclass ' s deinitialize method to ensure proper resource management and prevent potential memory leaks
updated the testSerialization method to use TestUtilities for serializing LogFormat objects to improve code readability and maintainability by utilizing TestUtilities
updated the variable name from ` previousClause ` to ` previousUntilLastClause ` and modified the ` PreviousFill ` instantiation in ` GroupBy
updated array size validation logic in JAXWSExceptionBase . java to ensure proper handling of negative and non - negative lengths to improve error handling and
test : migrate ctunresolvedimporttest to junit 5 ( # 4649 )
increased the thread join duration from 10 seconds to 60 seconds to allow more time for the thread to complete before proceeding
[ hotfix ] [ runtime ] set default value to region in jobmanageroptions
added title property and methods to set and get its value in ShadowActivity , ShadowAlertDialog , ShadowTextView , and ShadowToast classes
replaced Apache Commons Logging with Apache POILogger in POIFSFileSystem . java to utilize POILogFactory and improve logging
refactor alarm handling in InstarHandler to improve clarity and structure to enhance readability and maintainability of alarm code processing
add latency to localmapstats for delete operation ( # 11341 )
reformatted enum declaration in Option . java and modified status check in Response . java to improve code readability and maintainability by using a switch
refactor javac location retrieval logic in CheckResourceKeys . java to improve clarity and maintainability of the code
add project name to fluttercreateadditionalsettings ( # 5373 )
added a new file ` DeprecatedStubbingTest . java ` with deprecated stubbing tests for ` IMethods ` to ensure that the stubbing
updated import statements in ITBraveServletFilter . java to use javax . servlet instead of org . eclipse . jetty . server
tregex : add nml to participialmodifiergrannotation . patch by jbellis
add system property to disable rsa key exchange for fips .
replaced the variable name ' output _ reader ' with ' reader ' in multiple files to improve code readability and ensure proper resource management
added OAuthFactory and oAuthServiceHandleId fields to PubSubAPI , SDMAPI , and SDMAccountHandler classes to enhance service management by
updated interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to improve
added handling for ` UpdateRegionLocationPlan ` in ` ConfigPhysicalPlan ` , ` ProcedureManager ` , and ` RegionMigrateProcedure ` to
added a new file ` FileDialogLeakTest . java ` to test the finalization behavior of ` FileDialog ` to ensure that the
hbase - 16400 move testopentableincoprocessor from org . apache . hadoop . hbase to org . apache .
make trufflefeature # isuninterruptible return false for uninterruptible method .
[ hotfix ] [ protobuf ] remove unused variable in pbcodegenrowdeserializer and pbcodegenrowserializer
changed the condition from checking if disi is null to checking if it is not null to ensure that the code only executes when disi is
fakesource : fix flakiness in fakerenderer . isready
added methods to determine if the Java version is less than or equal to 9.0 to ensure compatibility with Java versions below 9.0
updated FileReporter constructor to accept both String and File types as parameters to improve type safety and clarity in handling null values
changed the condition from checking if ` getEndToEndEncryptionKeysExist ( ) . isFalse ( ) ` to checking if ` getEndToEnd
added action bar navigation functionality in DirectMessageConversation . java to enhance user experience by allowing navigation to the home button in the message conversation
added support for GET _ USER request in RpcServlet and updated PROTOCOL _ VERSION to 6 in Constants . java and RpcUtils . java to enhance
added an @ EnabledIfSystemProperty annotation to conditionally enable the TestJdbcPluginWithMSSQL class to ensure compatibility with different operating systems
updated the handling of the strategy to use the original class instead of the start class to improve clarity and maintainability of the code by using
add some debug information to help diagnose jimple compilation error
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
kristianrosenvold : fix look and feel in drools - planner - examples and drools - planner - examples (
update version string replacement in AppPage . java to ensure compatibility with the latest versioning standard
refactor animation listeners in LauncherAppTransitionManagerImpl to use startAlpha and startY instead of mUiResetListener to improve animation respon
dumpedprivatekey : improve error message when no network be find
update extra data map when edit offer ( # 1181 )
updated milestone parameter handling in TicketPage . java to differentiate between open and closed milestone parameters to improve clarity and functionality of milestone parameter management
pipeitemswood : increase the default pipe battery value from 640 to 80
added a new method ` getClusterKey ` and modified the ` getStateMachineClusterInstance ` to include ` blueprintName ` and ` blueprintRevision `
initialized the ` downgradeAllowed ` variable in ` UpgradePack . java ` and added a new test in ` UpgradePackTest . java `
replaced references to ` NameType . ATTRIBUTE ` with ` NameType . ELEMENTSTART ` and ` NameType . ATTRIBUTENAME `
add a configuration option to emulate system load library and refactored library loading logic to enhance performance by allowing dynamic loading of libraries based on
refactor comparators in LauncherModel and related classes to use a unified comparator method to improve code readability and maintainability by reducing
updated entry handling in DefaultPlatformManager and added directory creation logic in FatJarStarter to ensure proper resource management and avoid potential errors when
reformatted the ` doTest ` method and updated assertion message in ` TestSecretKeyCredentialHandler . java ` to improve code readability and provide
( chore ) camel - core : remove dependency on applicationcontext from routebuilderfinder
[ hotfix ] [ doc ] fix metric option description for push - based reporters
hbase - 16400 dfs . support . append should be set to true to enable dfs . support . append
added reuseAddress property and related methods to DatagramSocketOptions class to enable configuration of reuse address for DatagramSocket instances
fix checkstyle issue in util / glowserver . java ( # 787 )
douniaberrada : remove deprecate interface for removal in 1.7 . 0
updated error messages in VersionInfo . java for clarity and consistency to improve error reporting for missing fields and ensure accurate retrieval of document values
replaced ` equalityPredicateColumns ` with ` predicateColumns ` and refactored predicate evaluation logic to improve clarity and maintainability of predicate
reformatted code in HelloMessage . java and HandshakeHandler . java for consistency to improve code readability and maintainability
added a semicolon to the end of a line in the Navigator . java file to improve code readability and maintain consistency
updated visibility of record reader classes from private to default in RecordReaderFactory . java and added a new test class RecordReaderFactoryTest . java
added support for greater than or less than and less than equal criteria in MongoQueryCreator to enhance query functionality to support greater than or less than
refactor group by expression handling in CalciteSqlParser . java to improve clarity and maintainability to enhance code readability and ensure correct
updated MappedByteBuffer and FileChannelLinesSpliterator to use Unsafe and AtomicInteger for buffer management to improve memory management and prevent potential memory leaks
replaced direct calls to ` l . getValidator ( ) ` with a variable ` validator ` in ` LdapUtils . java ` to improve code
added a ` schedule ` method to ` CircuitBreakerImpl ` and modified the ` testCircuitBreaker ` method to use ` WAIT _ TIMEOUT _
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent flags for
updated configuration property from " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in Submission
updated the display name from " Retrieve view column privileges " to " Retrieve column privileges " and added a @ Disabled annotation to clarify the
added synchronized keyword to addExportedCount and getExportedCount methods to ensure thread safety during method execution
replaced ` IntRangeUtil1 . requireNonNegative ` with ` IntRangeUtil . requireNonNegative ` in ` MetricsImpl . java
updated character validation logic in HttpParser and added a new test case in HttpParserTest to ensure proper handling of encoded headers and improve test coverage
updated the layout resource used in ConfigurePagerActivity from ' trends _ activity ' to ' configuration _ activity ' to ensure the correct activity
updated print statement to include position information in SLWTTextListing . java to improve debugging by providing more context about the SLWT
refactor ` ForceLeaderTest ` and ` HttpPartitionTest ` to conditionally use ` useTlogReplicas ` to improve test reliability
refactor methods in Thread class to improve thread management to enhance performance and reliability of thread execution
refactor RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES sets and add a forceTemplateMode flag in AbstractConfigurableTemplateResolver to
camel - 6323 fixed the unit test error of defaultcxfbinding
reformatted code in YamlRepresenter . java for consistency to improve code readability and maintainability
updated date and month formatting in ToChar . java and added SQL statements in TestFunctions . java to improve readability of date and ensure proper
added validation for transaction list and write ID in GenericUDTFGetSplits . java to ensure data integrity by validating transactions and writes
refactor JsonSerDe initialization to use isEmpty ( ) instead of length ( ) for better readability and performance to improve code clarity and
bug fix : do n ' t open file system for empty book
updated the SSTDeserializer class to include a condition for the nextSid in the manufactureStrings method to ensure proper handling of non -
updated default grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant to improve code readability and maintainability by centralizing
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java to clarify that line contents match but line - break characters
added a new boolean field ` waitingForKeys ` in ` DecoderInputBuffer ` and modified conditions in ` ClippingMediaPeriod ` to
updated API path annotations in OkexV3 . java to ensure compatibility with the latest API structure
refactor conditional statements in LineUtilitiesTests . java for clarity to improve readability and maintainability of the code
added error logging for varargs and old array syntax in JavacParser . java and created new classes VarargsAndOldArraySyntax . java
make defaultdrmsession and defaultdrmsessionmanager accessible on wrong thread
added support for METHOD variable in VariableContext . java and updated related tests in TestVariableContext . java to enhance functionality and ensure correct parsing of
added unit tests for invalid compilation unit and profile string JSON in ExperimentParserTest . java to ensure proper error handling for invalid compilation unit and profile
update buffer limit logic in Piece . java and remove bufferForMessage . capacity ( ) in SharingPeer . java to improve buffer management
added HttpClientProperties support for response timeout in GatewayAutoConfiguration , NettyRoutingFilter , and RetryGatewayFilterFactory to enhance response management by allowing
refactor CxxLibraryFactory to use NativeLinkTarget directly instead of NativeLinkTargetGroup to improve code clarity and maintainability by standard
( chore ) camel - main : add unit test for rest configuration
added support for RexFieldAccess in ASTConverter and RexNodeConverter to enhance the handling of field access expressions in Hive queries
replaced direct usage of ` QueryLogEntry . values ( ) ` with a constant ` QUERY _ LOG _ ENTRY _ VALUES ` to improve code
allow proxy predicate to be apply when no proxy be specify ( # 3991 )
updated PKCS12KeyStore and StoreSecretKeyTest to handle null chain cases and improved certificate loading logic to enhance robustness of certificate management and ensure
added reflection access checks and refactored related methods in Bootstrap and ReflectionCheckLinker classes to enhance security checks and improve clarity in class
removed the ' public ' modifier from the constructor of CollisionMap to enforce encapsulation within the class hierarchy
marked the method ` getRawInputFromTransactionInput ` as deprecated and added a null check to improve code clarity and ensure input is not
refactor log level handling in ConfigurationValueConverter and Main classes to use a switch statement to improve code readability and maintainability by consolidating
remove region _ id from insert into account , user , domain , domain _ id , account _ id , domain _ id , user _ id
bug 60284 : add support for encryption of old xls file
add -- add - exports = org . graalvm . nativeimage . builder / org . graalvm . svm . core .
modified the visibility of the image holder in TimeLineCursorAdapter . java to ensure the image is displayed correctly when the condition is not met
increased the timeout duration for the scheduler from 10 seconds to 50 seconds to allow more time for scheduler attempts to complete successfully
refactor file creation logic in ShadowContext and introduce a new deleteDir method in ContextTest to improve clarity and maintainability of file
refactor ExceptionFactory to use Class . forName for AssertionFailedError and ComparisonFailure instead of custom ExceptionFactoryImpl to improve flexibility and reduce
increased the WAIT _ TIME _ MS constant from 10000 to 60000 to improve the responsiveness of the application by allowing more time
updated ConnectOAuth2RequestFactory , ConnectRequest , ConnectTokenEnhancer , and ConnectTokenEnhancer to include support for AUD
remove default value for ` breakOnFirstError ` from ` KafkaConfiguration ` to simplify configuration by eliminating unnecessary default value
added a new constant selectableItemBackground with a value of 0x10a13 to define a background color for selection items in the application
replaced individual trade - related imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and implement
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type is assigned when the record is null
move resumablerandomaccessfilehandler to the ning - http - client - extra package
replaced ` AccessLogValve $ 3 ` with ` AbstractAccessLogValve $ 3 ` in ` SecurityClassLoad . java `
added a loop to manage format records in HSSFDataFormat . java and updated assertions in TestWorkbook . java to improve format management and
[ hotfix ] [ kafka ] add @ deprecated annotation to flinkkafkaproducer
updated the condition for checking compressed chunk length in CompressedInputStream . java to ensure that the checksum length does not exceed the maximum allowed length for
camel - 16400 : camel - redis - optimize to reduce object allocation in use
fix vanilla container repair not use metadata anymore .
[ mng - 6792 ] only allow local repository to be use in legacy local repository manager
added checks for task manager initialization and improved error handling in the LocalInstanceManager , LocalTaskManagerThread , and TaskManager classes to ensure
improve error message in abstractartifactresolutionexception when deploying a file
replaced ` getTemporalPath ` with ` getInternalTemporalPath ` in ` UploadFileOperation . java ` and added a new method in `
refactor FeedEntryStatusDAO to use a new method for finding FeedEntryStatus by entries and subscription to improve code readability and maintainability
added thread execution logic in ContextImpl . java and refactored deployment options in BlockedThreadCheckerTest . java to improve thread management and
updated the ` instantiate ` and ` convert ` methods to include a ` formatterString ` parameter and added null checks for ` ctorArg ` to
updated LoadContactsTask . java to conditionally load vCards based on the Android SDK version to ensure compatibility with devices running Android O or higher
replaced setRemoteAddress and setRemoteHostname methods with direct assignment of remoteAddress and remoteHostname to streamline code by eliminating unnecessary setter
added a null check for shadowClass in Robolectric . java to ensure that shadowClass is not annotated with @ Implements to prevent runtime
added a check for ` tlMutualAuthenticationRequired ( ) ` in both ` NettySslContextFactory ` and ` ExampleNettySslContextFactory
added a test to verify that requesting a plain HTTP endpoint over HTTPS throws SSLException to ensure proper handling of SSL - related exceptions in the server
added getter methods for Consumer and Producer in AbstractKafkaResumeStrategy to provide access to these methods for external use
fix : add widget id to frame class name ( # 3649 )
changed the warning message from " Could not send email " to " Could not send SMS " in CommunicationsManager . java to clarify
no effective change - code cleanup - add method draftqueryoptimise ( query < t > query )
added error handling for resource temporarily unavailable issues in MultipartBody . java to improve robustness by gracefully managing potential IO issues during file transfer
doc : fix checkstyle issue in executablefactory . java and zipfolder . java ( # 3649 )
refactor EndpointConfiguration , SpEL , MainSupport , package - info , and SSLContextSSLContext classes to improve code organization and maintainability
fix attach file action not work on window ( # 8373 )
added LoadOptionsBuilder to manage schema info level and load options in AccessTest . java to enhance schema crawling options for improved performance
updated package name from ` org . openj9 ` to ` j9vm . test . loadLibrary ` and added a new test method
replace exception throwing with returning null in TestReader . java to simplify error handling by eliminating unnecessary exceptions
add methods to set properties using values from a prototype object to ensure consistency in object initialization from prototype values
refactor ConnectionInfo instantiation to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
[ hotfix ] fix checkstyle violation in datastreamjob
updated resource management in TestContentProvider . java to use try - with - resources and added handling for ErrnoException to improve resource management and handle
camel - 6323 fixed the unit test error of cxfendpoint
added a check for " h2 - 14 " protocol in the HTTP2ServerConnectionFactory to ensure proper handling of " h2 - 14 "
refactor LambdaToMethod to improve parameter handling and introduce a new boolean field in ClassFileVisitor to enhance clarity and maintainability of lambda
tregex : add ' what ' a a synonym for whnp = what
increase the file copy timeout from 5000ms to 60000ms in DL4JInceptionV3Net . java to allow more
added phrase slop configuration to the QueryParser class to improve query parsing accuracy based on phrase slop
extend the long press interval in test so that it run on slow platform
updated the server port from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to
add a new method ` scheduleParallel ` to ` GameScheduler ` and replace ` Mono . fromRunnable ` with ` GameScheduler . schedule
updated the visibility condition for the compound view based on the availability of edit options to ensure that the fragment only displays when the edit options are available
updated the progress calculation in DepthController . java to ensure progress is non - negative to prevent potential issues with negative progress values
remove unused method from session . packetreceived ( )
added debug logging in ` DefaultCasDelegatingWebflowEventResolver ` and refactored authentication logic in ` DelegatedAuthenticationGenerateClients
added null checks for the service parameter in the SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction classes
added ` hidden = true ` to the ` arity ` and ` hidden ` properties of ` PantheonCommand ` to control the visibility of
added a check to prevent instrumentation of the CoroutinesRoom $ Companion class to improve performance by avoiding unnecessary instrumentation
fix for jdk : cause a deadlock
removed the setInitScript method from InitializingDataSourceFactoryBean . java to streamline the code by eliminating unnecessary methods
camel - 16400 : camel - core - optimize queue reply manager to reduce memory usage .
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added functionality to open and close MC blocks in PdfDocument . java to ensure proper handling of tagged elements in PDF documents
log4j2 - 1349 add a test case for patternselector .
simonstewart : use the selenium server for the iehta test
changed the return type of the thank method from MwPostResponse to MwThankPostResponse and added a new class Mw
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` and ` SslConnection ` to use it to implement socket - based functionality
removed redundant assignment of revokingStore and updated max size calculation in Manager . java to streamline code for better readability and maintainability
update documentation to explain implicit collection join
updated assertions in NonVisualRegressionTest to normalize expected and actual values to ensure consistent line endings across different operating systems
replaced instances of ` deleter . incRef ` with ` deleter . decRef ` and introduced a new ` filesToCommit `
replaced the ` final ` modifier with the ` @ Final ` annotation in several methods in ` BaseError . java ` to enforce immut
added validation for the consumption user resource percent in ConsumeUserResourcePercentActuator . java to ensure the percent value is within valid range to prevent
added a condition to check if the legacy login is shown alongside the existing login state to ensure that legacy login functionality is only displayed when
rename ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to clarify the purpose of the test class
updated response page assignment in EditTeamPage . java to ensure proper navigation to the correct team and users page
updated debug log message to include exception details to improve clarity of error reporting during plugin initialization
refactor socket channel closing logic in ConnectionManager . java to ensure proper shutdown of resources to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
added a private method ` createDynPartSpec ` to encapsulate dynamic partition specification logic to improve code readability and maintainability by reducing
fix round _ half _ up _ factor for scientific format
added visitDirectory method to JarDirectoryStep and modified DirectoryTraversal to handle relative paths to improve directory traversal functionality and ensure proper handling of directory entries
added a new file JWKSetEditor . java to implement property editor functionality for JWKSet in the application
refactor finish methods in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , VersionBlockTreeTermsWriter , and BlockTreeTermsWriter
truffle : fix a bug in the method signature resolution in espresso .
change default value of byIP from true to false in Fetcher . java to disable thread pooling for improved performance
simplified the condition for setting timeToLiveOfQuery in StatementUtil . java to improve code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to ensure proper handling
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
server : fix incorrect initial delay for network usage stats update task
updated interpolators in QuickstepAtomicAnimationFactory , AllAppsTransitionController , and Interpolators to use a constant for final frames to improve code
updated swipe length calculation in Background . java to improve swipe responsiveness based on display density
added a new module - info . java file for the Jetty HTTP server module to define module dependencies and exports for better modularity and encaps
fix npe in jsontype . settextvalue ( ) when value be null
remove unnecessary parentheses in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ runtime ] change default value of execution . checkpointing . failure . number to 0
changed the parameter type of ` reportInnerClassReferences ` from ` TypeElement ` to ` Element ` and updated related logic to improve type safety and
updated command construction in TimestampCheck . java to include an empty string to improve clarity and prevent potential errors in command execution
replaced FluentIterable with MoreCollectors for file listing to improve code readability and leverage modern Java features
[ 3.0 ] fix dubbo service registration bug ( # 9441 )
do n ' t close otr session if security otr mode be disable .
added outline size and transparency properties to NodeLabelRenderer and updated renderProcessing method to include these properties to enhance visual appearance and customization of
refactor ProxySelector , URL , and URLStreamHandler classes to improve code readability and maintainability
updated the boolean parameter from false to true in Win32FontManager . java to enable font rendering functionality
added null check and cursor setting in TreeVisitor . java to ensure proper handling of null references to prevent potential NullPointerExceptions
added errorHandlingPolicy to JDTBatchCompiler based on the environment to improve error handling behavior based on the presence of classpath
added contentAlignmentPoint and textAnchor properties with their respective getters and setters in LabelBlock . java and updated LabelBlockTests . java to use
refactor Class and Parameter classes to improve code readability and maintainability
refactor IndexReader . java to improve code structure to enhance maintainability and readability of the code
changed the type of the ` isLoopback ` variable from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface `
updated the ` fromRfc1123DateString ` method to include a ` Locale ` parameter to support locale - specific date formatting in different locales
filedownloadviaproxytest : allow pdf file to be download via proxy
nifi - 10619 : added output _ no _ hits property to elasticsearch to control whether to output a flowfile even if no hit
remove aggregationratio from quotamanagerimpl # updatequotadiskusage ( ) and updatequotamanagerimpl # updatequotediskusage
[ java ] add try - catch around switch statement in election .
do n ' t close event queue in readfilesp and streamfilesp ( # 2178 )
refactor widget skip logic in PageChangeListener . java to improve clarity and structure to enhance readability and maintainability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` HSSFWorkbook `
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session unregistration
refactor categorization handling in CategorizationFragment . java to improve code readability and maintainability
updated the status message for bridge reports from " reachable = false " to " not reachable " to clarify that the status is not reachable
add a loading flag to the fmlclienthandler so it can be check if the server be load .
add ` ` unit . millions ' ' , ` ` unit . thousands ' ' , ` ` mil ' ' , `
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code clarity and
added parameterized tests for reserved words as relationship names in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure compatibility with GH
added tests for serialization and deserialization of nested maps in MapTest . java to ensure correct serialization and deserialization of nested maps using Gson
added boundary checks for x2 and y2 in GeometryUtils . java to ensure coordinates are within valid bounds before proceeding
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and ensure consistent sorting order management
do n ' t fail if the test plan can not be find
refactor methods in GeneratedEntityTranslator and JdbcManagerSupportImpl to use Lazy references for DbmsType and DbmsOperationHandler to improve performance
modified the handling of ` argIdent ` in ` Parser . java ` to differentiate between strict and non - strict modes to improve robustness
updated the default protocol setting in JettyHttpComponent9 . java to use the protocol from the scf instead of a hardcoded string to
set default value of displayVolume to true in VolumeVO . java to ensure consistent initialization of the displayVolume variable
refactor version handling in JavahTask . java and add a new VersionTest . java file to improve clarity in version logging and enhance
updated condition checks and added global change log handling in ChangeLogParameter . java to improve clarity and functionality of change log retrieval logic
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity and improve performance during transaction execution
hhh - 11341 : skip test that cause exception during formatting of the sql string
removed redundant calls to startHandshake ( ) and setSoTimeout ( ) in Connection . java to streamline socket timeout management and improve code cl
updated action bar size calculations to include a check for ` MainActivity . isPopup ` to ensure proper handling of action bar size based on the
enable cha by default and make it final in class hierarchy oracle
http : / / issues . apache . org / activemq / browse / amq - 2635 - add more debug information to
refactor tests in JodaTimeRangeRandomizersTest to use assertThat for improved readability to enhance test clarity and maintainability
updated resource loading logic in WebDescriptor . java to handle different servlet versions to ensure compatibility with different Jakarta EE versions and improve
fix : add readiness status check for node
use handler . endpoints instead of liveendpoints to avoid npe . patch by jbellis
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new versioning of RPC
added a null check for the security manager before checking package access in ObjectStreamClass and ObjectStreamField to enhance security by ensuring proper package access
removed unused imports and refactored methods in Utils . java , and changed UGSCommandCount in XLCDCommunicator . java
refactor DefaultMetricsTagProvider to use a custom tags map instead of ImmutableMap to improve code readability and maintainability by reducing dependency on
simonstewart : move the mockbrowsertest out of the clientdriversuite so that it can be run without - h :
change default level from OFF to ERROR in opt2 to improve error handling by providing a more appropriate error level
changed instance variables to be final in IconNormalizer . java to ensure immutability and enhance code safety
added a boolean flag ` firstCallPrepareDo ` and modified prefix invocation logic in ` PrepareInterceptor ` to allow control over the first call preparation
refactor workspace display logic by introducing a ` mHasFocus ` flag and simplifying method calls to improve code readability and maintainability
replaced eager singleton binding with direct dependency injection for FormAuth and BasicAuth in AuthWithStoreFeature . java and Auth . java to improve
updated incomingAssociations method to include a boolean parameter to control whether to ignore invisible associations during processing
server : remove private ip from capacity table when delete pod
improve error message in profileservlet for async profiler on linux 4.6 +
added a new class ` RequiredRefFieldModel ` and modified ` ModelResolver ` to handle required properties more effectively to improve the handling of required
renamed ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` classes to ` CasCoreConfigurationWatchAutoConfiguration ` and
updated FeatureFlags . java for improved functionality to enhance performance and maintainability of feature management
updated UUID generation and unique identification in ConfigStore , CommonSetup , and ItemUIDtoHueIDMappingTests to improve clarity and correct
added picture handling in TimeLineCursorAdapter and TimelineArrayAdapter to manage drawable resources efficiently
updated the description of minor compaction warning in HiveConf . java to clarify that compaction on insert - only tables will always run via queries
added a null check for the storage path before verifying if the wait status is down to prevent potential NullPointerException when the storage path is not set
refactor resize threshold checks in multiple classes to use a new method ` checkResize ( ) ` to improve code readability and maintainability by
renamed LDAPConnectionService class to improve clarity to enhance code readability and maintainability
added @ Deprecated annotation to the @ XmlAttribute annotation in AggregateDefinition . java to indicate that the attribute is outdated and should no longer be used
added debug tracing logs in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to improve traceability and debugging capabilities during
added a condition to check if the class name starts with " com . intellij . rt . junit . " to ensure compatibility
updated references from ' hits ' to ' hits2 ' and ' hits3 ' in TestMultiSearcher . java to improve clarity and
added a new file ` LucenePackage . java ` with a private constructor and a static method to retrieve the ` LucenePackage ` class
update sizeInBytes calculation to account for the difference between existing and actual sizeInBytes to ensure accurate size tracking by subtracting the existing size from the
updated estimation logic in StatsRulesProcFactory , GenericUDAFBloomFilter , GenericUDAFEvaluator , and BloomKFilter classes to
added a null check for the drawer toggle before animating the target shape to prevent potential NullPointerException when the drawer toggle is not initialized
added ` @ SuppressWarnings ( " unused " ) ` annotation to the ` convertToAuthentication ` method to suppress warnings about the subject parameter
added logic to determine if ` overrideClasspath ` and ` overrideClassLoaders ` should be used based on class loader types to improve flexibility in
fix msbibexportformattestfiles . testcorporatemsbibexportformat fails due to miss field name
added a new method ` cancelCoreRecoveries ` to handle core recovery cancellation in ` CoreContainer . java ` to improve error handling and ensure
replaced direct calls to System . currentTimeMillis ( ) with a dedicated currentTimeMillis ( ) method to improve code readability and maintainability by reducing
removed debug print statements and simplified null and size checks in RepoEditView . java to improve code clarity and ensure correct behavior when interacting
updated connection parameter descriptions for startup messages in PGProperty . java to clarify the purpose of the connection parameter and improve user understanding of
added properties for trustResolver , roleHierarchy , and permissionEvaluator , and default role prefix in the SecurityEvaluationContextExtension class to enhance security evaluation
added a check to set exponentSize to primeSize - 1 if it is zero in DHParameterGenerator . java to ensure exponentSize is consistent
replaced direct usage of ` FileStorageUtils . getSavePath ( ) ` with a new method ` getUsableSpace ( ) ` in
updated the combine method in DistinctSqlAggregation to handle multiple values and added a new test case in DistinctSqlAggregationTest to enhance functionality
added a test method to verify post - login activities for a user during successful authentication to ensure that post - login activities are executed correctly for the
make extractorspanishstrippedverb non - static and allow to specify dictionarypath
refactor the ` contains ` method in ` CharArraySet ` and add a new test method in ` TestCharArraySet ` to improve code
update track count error message and simplify track type validation in MuxerWrapper . java to improve clarity of error messages and enhance code readability
updated type checks and method signatures in JsBundleGenrule and JsBundleGenruleDescriptionTest to use AndroidPackageable instead of JsBundleAndroid
added UTF - 8 character encoding support in ` PinotClientRequestServlet ` and refactored string lookup logic in ` StringDictionary ` to
updated case name from " Logical Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to improve clarity and consistency in
added instanceClassName and instanceClass variables in AbstractVector . java to optimize memory usage by reusing instances of Vector
[ iotdb - 1260 ] optimize time _ range query because syncmetaleader ( # 2929 )
[ # 7803 ] feedbackcontributionquestiondetails : return ` ` no response ' ' instead of ` ` answer ' '
added TestLoggingExtension to DiagramRendererTest to enhance logging capabilities for testing purposes
added a boolean parameter ` mapUnderscoreToCamelCase ` to the ` findProperty ` method across multiple classes to control the naming of properties based on
added support for the new VIOMI water heater 1A ( 60L ) in MiIoDevices . java to enhance compatibility with
replaced direct calls to ` getSslSessionData ( ) . getCerts ( ) ` with a variable ` sslSessionData ` to
added a new file ` CreateNewSpreadsheet . java ` to demonstrate the creation of a new spreadsheet with specific formula and comment
replaced ` Duration ` with ` long ` for ` timeToLive ` in ` CacheProperties ` and updated related methods in ` RedisCacheConfiguration
replaced ` CONTENT _ URI ` with ` CONTENT _ URI _ NO _ NOTIFICATION ` in ` LauncherBackupHelper ` and ` Launch
updated the wiremock version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager . java `
added a condition to check if the character is less than or equal to ' < ' in DocClassUtil . java to ensure proper handling of
removed String . format from the return statement in Workspace . java to simplify the return statement for better readability
added import for Scope and sent a message when no validation errors are found to provide user feedback when no validation errors are found
updated imports and refactored web resource configuration logic in IntegrationTestContextLoader . java to improve clarity and functionality in managing web application context
updated scroll handling logic in mmm Component . java and mmm Container . java to use getComponentAt instead of getResponderAt to improve respon
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated methods in ` StatsService ` and ` DefaultStatsService ` to use ` String ` instead
updated expression replacement logic in CellContentConverter . java to include newline characters to ensure proper formatting of expression values
simonstewart : fix test that fail on window
mondrian : fix typo in mondrianproperties . java
added stack trace printing functionality and modified file permission checks in CustomLauncherTest and LocalManagementTest to enhance debugging capabilities and ensure proper file permissions are
removed the ` testEmbeddedImage ` method from ` TumblrRipperTest ` to streamline the test by eliminating
added a check for the presence of a slot before converting storeType to ensure that conversion only occurs when a valid slot is present
init extractorwrapper only when there be no nextloadposition
updated import statements and modified IndexWriter initialization in BaseLockFactoryTestCase . java to improve code clarity and ensure proper handling of encoding and
tika - 3640 -- add a serviceloader . isdynamic ( ) method to the serviceloader interface and create a dummyparser
updated DocLint and DocLintTester to include package - info . java files and modified javacOpts , javacFiles , and files
added IMPORT _ CMD constant and updated condition checks in DataImportHandler and DataImporter classes to support additional import commands
add a test to verify that inner classes do not modify if the ignoreDefinition flag is true to ensure that inner classes are not modified when the
added import statement for android . util . Log in JettyService . java to utilize logging functionality for better debugging
modified the ` checkItemPlacement ` method to include a ` ArrayList < Long > workspaceScreens ` parameter and updated related logic to enhance
danielwagnerhall : adding / quitquitquitquitquitquit and / quitquitquitquit quit switch to jetty
[ hotfix ] fix npe in llvm realtime segment data manager .
added a method to check if the operating system is Windows and skip processing for Teredo display names to enhance compatibility by avoiding unnecessary processing
fix add contact dialog when protocol provider be not register .
replaced ` getReaderContext ( ) . getRegistry ( ) . registerBeanDefinition ( bean , bean ) ` with ` registerBeanComponent ( new
updated the drawBitmap method parameters to use null instead of the left and top coordinates to ensure compatibility with null values for bitmap drawing
fix meitrack and totem protocol ( fix # 399 )
changed method visibility of ` getFontPath ` and ` getPlatformFontPath ` in ` SunFontManager ` and ` X11FontManager ` classes
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods are outdated and should no longer be used in future
fix clientmapstoretest . testreachedmaxsizeexception cause by concurrentmodificationexception
added a configuration option to keep empty sentences in DocumentPreprocessor , MaxentTagger , and TaggerConfig classes to allow users to
added error handling for artifact subdirectory creation and modified return type of ` createArtifactSubdirectory ` to return a boolean indicating success or failure to improve
refactored ` JavaLanguageServer ` and ` JavaCompilerService ` to use ` NO _ MODULE _ COMPILER ` instead of `
fix npe in directagentattache when resource return null
simplified the ` sendEmail ` method by removing unnecessary try - catch block to improve code readability and reduce unnecessary error handling
fix npe in pipeitemsobsidian and add package - info . java
updated the ` getDateMathParser ` method to accept a ` Locale ` parameter across multiple classes to enhance flexibility in parsing date strings based on
added a boolean field ` includeDecals ` and its getter / setter in ` StorageOptions ` , and created a ` JCheckBox ` in
updated the ` generateDocumentation ` method to include a ` null ` parameter and added a ` @ SuppressWarnings ` annotation in the ` getImplementedDatabases
refactor perf logging methods to improve clarity and structure to enhance readability and maintainability of the code
updated log messages in SolrIndexConfig and DocExpirationUpdateProcessorFactory to improve clarity and consistency in logging output
updated the class file version check in ` ignoreRecordAttribute . java ` to use a dynamic MAJOR _ VERSION constant to ensure compatibility with
added a new test class LdapPasswordAuthenticationTest for LDAP authentication tests to ensure proper functionality and validation of LDAP authentication attributes
updated import statements in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to improve code clarity and ensure
fix an npe from saveallaction ( # 5379 )
refactor VisibleAdvance class for improved readability to enhance maintainability and ease of future updates
added a reconnecting parameter to the ` start ` method in ` Reflector ` and modified its visibility in ` ReflectorTest ` , `
added a check for dynamic number columns in EdgeDataTable and NodeDataTable to ensure compatibility with dynamic data types in the application
added null checks using Objects . requireNonNull for groupId , artifactId , and version in RawPom . java to enhance code robustness by preventing
updated API assignment logic to handle null apiInfo to ensure a default value is used when apiInfo is null
updated HeadersConfigurer and CacheControlHeadersWriter classes to improve header configuration and cache control handling
added lighting effects and shader disposal methods in PhotoPanel and FlameRenderer classes to improve texture management and shader management during rendering
updated scene size and added context menu functionality in FxWindow , InsnListEditor , and InsnProxyListEditor to improve UI respon
updated conditional logic in CSSParser . java to handle additional characters to improve parsing accuracy and prevent potential ArrayIndexOutOfBoundsException
added a check to enable or disable the default look and feel decoration for JFrame and JDialog to improve user interface appearance by allowing
updated SQL query and variable declarations in HostRoleCommandDAO . java to remove unnecessary ' this ' keyword and improve code readability
updated F2 _ TEST , F5 _ TRANSPONDER _ TEST _ REPLY , and F6 _ TRANSPONDER _ TEST _
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and structure to enhance readability and maintainability of swipe
replaced HostDatabase with ColorStorage in ColorsActivity . java to utilize color storage functionality for improved color management
refactor methods in String class to improve code readability and maintainability
removed unused logger imports from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide a way to access global entries from the
added two assertions for the ` PublicMethed . sendcoin ` method in ` MultiSign34 . java ` to ensure that the method
test : migrate cufiltertest to junit 5 ( # 4329 )
use system . getproperty ( ` ` path . separator ' ' ) instead of hardcoded ` ` ; ' '
changed the access modifier of the ` augmentSuccessViewModelObjects ` method from static to instance to allow the method to be accessed outside the class
updated method calls from ` getField ` to ` getDeclaredField ` and added presence checks for properties in ` AbstractEntity ` and ` Person ` to ensure
removed the ' conf ' parameter from the Outlink constructor across multiple files to simplify the code by eliminating unnecessary configuration
removed the ` LexicalContext ` parameter from several methods in ` Lower . java ` to simplify method signatures and improve code readability
added modifiers to the return statement in UseLambdaForFunctionalInterface . java and modified type in TypesInUse . java to enhance the functionality of
replace appendClassSelector with createFileSet in TestNGAntTask . java to simplify the file set addition process
removed unsupported root input check from HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary checks
fix npe in registryevent . getmapping ( ) when registry be not active .
removed redundant assignment of x3 and y3 in the Intersector class to improve code readability and maintainability
added default methods ` sbeDecodedLength ` , ` sbeLimit ` , and ` sbeLimit ` to ` MessageDecoderFly
updated ElasticsearchContainerTest to use a constant for the ELASTICSEARCH version and added a new test method for restClientClusterHealth to improve code
[ java ] copy message byte before parse it in workingreceiver .
added version ID handling and updated cluster name and version ID properties in ClusterDefinition and GSInstallerClusterProvider classes to improve cluster definition management and
( chore ) camel - ftp : remove unused method
[ zeppelin - 3555 ] : do not set interpreter setting status to READY when dependency can not be fetch
modified local creation logic in ` Gen . java ` and added a new test class ` NoLocalsMustBeReservedForDCEedVars
added basic constraints check in ForwardBuilder . java and created a new class BuildEEBasicConstraints . java to handle certificate constraints to ensure proper handling
added a new method ` initAfterFirstDbConnection ` to ` JdbcPostgresqlDAO ` for initializing database connection settings to ensure compatibility with PostgreSQL
updated WebSocket message size and added validation for input buffer size in AbstractWebSocketConnection to ensure that the input buffer size does not exceed a defined minimum
lucene - 1342 : do n ' t double write if indexreader . undeleteall ( ) return false
added null check for scopes in ClientRegistration . java and updated test cases in ClientRegistrationTests . java to improve robustness of scope validation and
added null checks for orderBy before adding parameters in CartesianProductStream . java to prevent potential NullPointerException when orderBy is not provided
[ hotfix ] [ test ] use hamcrest assertion in clusterentrypointtest
server : do n ' t allow snapshot to be create in kvm mode
added a debug log message to the initHiveLog4j ( ) method in HiveServer2 . java to improve traceability of log
added a null check for tasks and modified the condition for foundIndex in AssetManager . java to enhance robustness by preventing potential NullPointerExceptions
of - 2273 : change return value of deletenode ( ) from void to boolean .
fix bug in relationdao and tskvlatestentity , use id instead of id _ property
pdfbox - 4892 : do n ' t attempt to read empty barcode ; assume a false positive
replaced TreeSet with LinkedHashSet in SSLContextImpl . java to maintain insertion order for CipherSuite instances
updated control character validation logic in Escaper . java and modified expected string in InternationalizationTest . java to improve handling of control characters
modified the ` ProviderSqlSource ` class to check for ` CharSequence ` type before invoking ` providerMethod ` and changed the return type of `
updated aliasChildren initialization and null checks in InternalMNode . java to enhance robustness by preventing potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView . java and updated scrollDelta calculation in Workspace . java to
updated variable names and added auto - format functionality in JavaTemplate . java to improve clarity and functionality of template processing
added method . setAccessible ( true ) to WidgetInterceptor . java to ensure the method is accessible for accessibility
added a conditional check for the raw name before setting the literal initializer in ConnectorConfigGenerator . java to ensure that the literal initializer is only applied
updated Mozilla version from Macintosh to Windows NT 10.0 in AbstractRipper . java to ensure compatibility with different operating systems
added a menu item to browse the web interface in BasicSystemUtils . java to enhance user experience by providing access to the web interface
refactor value handling in HandleGetter and innerThen classes to improve clarity and maintainability to enhance code readability and facilitate
added a try - catch block around the record creation in EncryptedSlideShow . java to handle potential ArrayIndexOutOfBoundsException when building the record
[ hotfix ] [ log ] add more debug log to filecheckpointio
added a null check before loading the Battle Pass manager in Player . java to avoid potential NullPointerExceptions during avatar loading
updated SSH version from 1.0 . 0 to 1.1 . 0 and modified SSH command options in PortForwardingContainer . java to enhance
added a bigObject array and forced a full - gc in ThresholdTest . java to optimize memory usage and ensure proper garbage collection
updated logging conditions in StdErrLog . java and improved debug messages in StdErrLogTest . java to enhance logging clarity and ensure
fixed - rremoteservice and rremoteservice . getremoteservice ( ) method throw classcastexception . #
added methods ` isSelected ( ) ` and ` setSelected ( boolean b ) ` for ` RadioButton ` and ` CheckBox ` classes to enhance
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align the activity with the
refactor code for better readability in BrokerController . java to enhance maintainability by standardizing spacing
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection management to improve resource management and ensure proper connection closure
updated background color handling in ProgramGridCell and refactored theme color retrieval in Utils to improve code clarity and maintainability by centralizing
renames occurrence of callparticipanttransportaddresschanged to callpeertransportaddresschanged so that it would well reflect our new call architecture that also
removed multiple registerTypeAdapter registrations for various classes in ToolingApiLauncher . java to streamline type adapter registration and improve code maintainability
updated TestPayloadCheckQuery . java with new test cases to enhance test coverage for payload checks
refactor ConsoleReader to improve character printing logic and add a new test for reading lines with mask to enhance code clarity and ensure correct behavior
added user information to the output of the onExit method in BaseCommand . java to improve debugging by including the client ' s username during execution
move modulesupport from ` org . graalvm . compiler . test ` to ` org . graalvm . compiler . api . test
[ hotfix ] remove unused slotsharinggroup constructor in slotsharinggroup
added a condition to check if the Java version is not emulate Java 8 and updated the hasDropWhile boolean assignment to ensure compatibility with Java
updated texture references from " wheel . png " to " sys . png " in DecalTest , MusicTest , and SimpleDecal
updated the registration and unregistration of the mCloseSystemDialogsReceiver to ensure proper cleanup of the receiver registration process
updated import statement for Cluster in HostsRemovedEvent . java to ensure consistency in import order
updated ` reuseRefreshToken ` to true and added ` allowIntrospection ` property in ` ClientDetailsEntity ` , modified token introspection logic in
replace direct calls to ` write ` with ` htmlEncode ` in ` HtmlSessionInformationsReport . java ` to ensure proper HTML encoding for
added PhrasePrefixQuery and SpanQuery links to the Query class to enhance query functionality by integrating additional query prefixes
refactor : use ` isempty ( ) ` instead of ` size ( ) = = 0 `
refactor method calls in NoValueOfOnStringType . java for clarity and consistency to improve code readability and maintainability
updated method signatures to accept Object instead of A in AbstractAssert , Assert , DateAssert , and ExtensionPoints classes to enhance type flexibility and
updated import statements and generic type in JwtPlugin and ThrowingFunction classes to improve code organization and enhance type safety
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods in ` AppPreferences ` and ` PreferenceManager ` classes to
fix : do n ' t initialize final field in constructor ( # 3649 )
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to ensure compatibility with Robolectric testing framework
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and added a new variable ` c ` to clarify the
updated PageMarkerResources drawable resource from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current
added a new variable ` reinvocations ` and modified log messages in ` BasicInvocation . java ` to track the number of reinvocations
update topPadding calculation in DefaultLookAndFeel . java to use getInnerHeight ( ) instead of getHeight ( ) to ensure proper height calculation
added a break statement in Recognize . java to ensure proper flow control during execution
added preference management for home screen locking in multiple classes to enhance user experience by enabling haptic feedback when the home screen is locked
added support for formula cell types in ExcelBatchReader and introduced new tests in TestExcelFormat to enhance functionality and ensure correct handling of formula types
fixed bug 124883 - immutablefield no long report an assignment in anonymous inner class method .
added a ` userAgent ` field in ` CommaFeedConfiguration ` and updated ` HttpGetter ` to initialize it in ` HttpGetter ` to
[ hotfix ] fix checkstyle violation in avro and base64 dataformat
changed log level from info to debug for file not found message to reduce log verbosity and improve performance
rename the test class from QueueTest to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to utilize OfflinePlayer ' s getUniqueID method to improve compatibility checks and handle potential
camel - 16400 : camel - core - optimize route collector to reduce stack trace .
added a ` vertexColor ` property and modified OpenGL color handling in ` PShape3D . java ` to improve flexibility in color
updated ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest ` to include primary key filtered status and modified foreign key handling logic to enhance
replaced ShadowMatrix extraction with direct usage of matrix ' s values to simplify code and improve performance by eliminating unnecessary shadowing
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
refactor class definition handling in GroovyEngine . java to improve clarity and efficiency to enhance readability and maintainability of the code
move brandingservlet from io . hawt . web to io . hawt . branding . plugin and add plugincontextlistener
updated print statement in NativeCodeGenerator . java to remove redundant concatenation to improve code readability and maintainability
replaced ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in ` Flight
added a new test method ` should _ fail _ if _ actual _ and _ expected _ cause _ have _ different _ types ` to `
removed flatten and pack variables from AutomaticDependencies . java to streamline dependency management by eliminating unnecessary method calls
updated variable name from ' requestedScopes ' to ' allowedScopes ' in ClientDynamicRegistrationEndpoint . java to improve clarity and consistency in scope
marionette : add test for firefox profile option and capability
camel - 16400 : camel - jbang - allow to configure route description .
refactor JavacTreeMaker to improve code structure to enhance maintainability and readability of the code
added a line to set the weight of an edge in ImporterCSV . java to enhance the functionality of the edge ' s weight
cloudstack - 3643 : fix tariffs cost per hour calculation ( # 3644 )
updated SQL queries in DatabaseMetaData . java to include an additional field ' adsrc ' and modified the default value assignment in tuple [ 12 ]
added null check for binarized sentence in SentimentAnnotator . java to ensure that binarized sentences are not built by the parser
updated the ` toString ( ) ` method in the ` User ` class to include detailed information about the user ' s username , password , grant
added null check for message body in MessageHelper . java to handle potential null values gracefully
[ hotfix ] [ runtime ] rename method fromexecutionvertex to execution in taskdeploymentdescriptorfactory
of - 2272 : make the cansubscribe method public and use groupmanager . isgroupvisible ( ) .
added a reference to " maven . test . classpath " in AbstractJRubyMojo and removed unchecked suppression from CucumberM
refactor MethodHandleImpl to simplify type checking and introduce a new userMethod method in MethodHandlesTest to enhance code clarity and ensure
added import statements for StopFilterFactory , AnalysisSPILoader , and HTMLStripCharFilterFactory in multiple Java files to enhance functionality by integrating
updated width and height checks from ' > ' to ' ! = ' in URLImage . java to ensure that dimensions do not exceed expected values
added a condition to check if the name does not start with " META - INF / " before processing to ensure only valid package names are processed
added background task scheduling for image creation methods in ImageDownloadService to improve UI responsiveness and responsiveness during image operations
updated assertions and logging in StackWalkerTest . java to use a dynamic expected value based on the version check to ensure compatibility with different versions of
changed the visibility of the ` addViewportJob ` method from protected to public to allow access to the method from other classes or packages
removed the ` num - output - partitions ` parameter from the ` buildFlow ` method in ` SimpleWordCount . java ` to simplify method
removed server restart settings and no exit status settings from TestDatabase . java to streamline server configuration and improve code clarity
added null and empty checks in NodePathsConvertOperator and SchemaQueryMergeOperator to improve robustness by preventing potential NullPointerExceptions
display total harvesting time in call info and report it .
updated font size in ParticleEditor . java from 10 fps , count , and maximum percentage to 5 fps to improve visual appearance of the
added configuration handling for the " hadoop - env " property in UpgradeCatalog240 . java and updated expectations in UpgradeCatalog240Test . java to
added a transparent color to the SvgViewerFactory to enhance visual appearance by setting the background
removed ` @ Config ( minSdk = M ) ` annotation from ` ShadowKeyguardManagerTest ` and ` ShadowKeyguardManager ` classes
updated the method signature of ` containsExactly ` to use ` asList ( varargs ) ` instead of ` accumulate ` to improve clarity and
updated Bandwidth builder method and added key validation in Bucket4jFilterFunctions . java to improve code clarity and ensure key is valid before
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code clarity and maintainability
updated Generator and Optimizer classes to accept a hook set for materialized views and modified transformation logic to utilize this hook to enhance query performance
added exception handling for NoClassDefFoundError in REngine . java to ensure proper handling of NoClassDefFoundError by setting supported to
replaced ` Span ` with ` SpanAndScope ` in ` TraceWebFilter ` and ` TraceWebFluxTests ` to enhance span
updated exception handling in AbstractUpdateCommandStep to check for null cause to improve robustness by avoiding potential NullPointerException
updated SolrServerException instantiation to include the base URL to improve error handling by providing more context about the exception
update landscape setting logic in HSSFPrintSetup . java to ensure correct landscape behavior based on user preferences
modify return statement to handle null input gracefully to improve robustness by avoiding potential NullPointerExceptions
added validation to prevent invalid argument names in ArgDesc . java to ensure robustness by preventing invalid argument names
added support for background location listeners in AndroidLocationPlayServiceManager to enhance user experience by allowing location updates to be requested or removed based on the
changed the condition from checking if primitiveType is not GL10 . GL _ POINTS to checking if it equals GL10 . GL _
trufflestring : do n ' t compare non - zero length array .
added a method to set the command list in ComboBox . java to enhance command management functionality in the ComboBox component
nifi - 3640 : fix tlsclientmanager to escape filename with forward / back slash ( # 3641 )
updated ZkCLI . java to use localhost instead of hardcoded strings to improve flexibility and ensure the application runs on the localhost environment
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use . equals ( ) instead of .
added a conditional check for remoteGrpcStatus before posting a severe log message in LocalFallbackStrategy . java to ensure that log messages are
reformatted method signatures in XYItemRenderer . java for consistency to improve code readability and maintainability
added nbttagcompound to tick . entity . addentityid ( ) in forgechunkmanager .
added a new method ` getErrorString ` to handle different error codes in ` GLSurfaceViewAPI18 . java ` to improve error
[ feature ] add support for list of supported locale in the feature registry
updated HTTP request handling in RFC2616BaseTest . java to use a dynamic host name instead of a hardcoded one to improve test reli
added a method to add a helper list to the Construction class to enhance functionality by allowing dynamic addition of elements
added handling for - 2 length cases in GlyphLayout . java to improve layout processing by skipping unnecessary escape sequences
added security permissions for setting context class loader in Transport . java and refactored thread name handling in TCPTransport . java to enhance security by
refactor directory synchronization logic in ReceiveExternalFilesActivity . java to handle null folder cases to ensure that a valid folder path is provided and improve
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
removed debug logging in BarrowmanCalculator . java and modified deltap calculation in TubeCalc . java to streamline logging and reduce unnecessary
modified column assignment logic for Node and Edge types in TimelineControllerImpl . java to ensure proper handling of different types of nodes and edges
added a method to register extra components in the BaseBrokerStarter class to enhance the management of extra components within the broker application
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT ` to verify the behavior of SQL queries with
peergroup : do n ' t reuse candidate list , use linkedlist instead .
fix the builder not be able to be place at the same time . close # 193
updated ` RatisRetryPolicy ` to accept a ` Supplier < RatisConfig . RatisConsensus > ` for configuration
updated multiple Java files for consistency and clarity to improve code maintainability and readability
added a null check for the ManagedService annotation before unregistering and registering JMXHelper to avoid potential NullPointerExceptions when the ManagedService annotation is not
tika - 3996 -- fix for tika - 3997 - allow non - unicode entry name in zip file .
added a new file TestSplitThruPhiDivMod . java with methods to test division and modulation to ensure proper handling of division errors
added methods to lookup generic interface types and superclass in TemplateRegistry to enhance type - checking capabilities and improve template registration
reduced the initial size of the ByteArrayOutputStream from 512 to 1028 to optimize memory usage and improve performance
added todo comments to clarify the availability of Chinese , Indian , Arabic , Korean , and Farsi
refactor byte array initialization and transfer logic in TransferCompletionHandler . java to improve efficiency and clarity in handling transfer buffer sizes
remove duplicate windowfocuslistener , windowdeactivate , windowlostfocus , windowgainedfocus , windowdeactivated and windowgainedfocus
added null check for source before throwing a SemanticException in SemanticAnalyzer . java to improve error handling by ensuring the source is not null before throwing
added scaling and center extent calculations for the skeletal mesh in SkeletonRenderer . java to improve the rendering accuracy of skeletal mesh
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality for the Spring web application
removed the getAccount ( ) method from UserListItem . java to streamline the code by eliminating unnecessary functionality
added package installation tests and updated package management logic in ShadowPackageManager and ShadowPackageManager to ensure correct handling of package names and activities during package
updated AvailableSettings . java for improved functionality to enhance performance and maintainability of the code
added TransactionCapsule and ReceiptCapsule fields to TransactionTrace class to enhance transaction management capabilities within the TransactionTrace class
add ` ` hz . client . shuffle . member . list ' ' property to enable shuffle the list of member connection ( # 224
replaced ` Text ` with ` CrawlDatum ` in ` SegmentReader . java ` to enhance data handling capabilities
refactor JsonDeserializer to improve code structure to enhance maintainability and readability of the code
changed ` fetchSize ` from ` int ` to ` ThreadLocal ` in ` TsfileDBConfig . java ` and updated related methods to
updated error message from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument " to " trunc ( ) only takes STRING
removed the import of ExecutionContext from TaskletStep . java to streamline dependencies and improve code clarity
initialized the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure a valid title is set before use
added handling for an empty response body in AsyncHttpClientCall . java and created a corresponding test in AsyncHttpClientCallTest . java to ensure that
move embeddedserverinstance to io . micronaut . runtime . server and deprecate it
refactored macadapter . registermacevents ( ) to make it easy to register macevents
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity
added a return statement to the toEnum method in HandlerLibrary . java to improve code clarity by avoiding unnecessary method calls
changed the visibility of the ` hideUnprivilegedObjects ` variable from private to private final to ensure that the ` hideUnprivilegedObjects
add assertion to audiodatasourcetest so that it do n ' t fail on window
added a check for Android Q in IOUtils . java to save Giphy video URLs to ensure compatibility with devices running Android Q and above
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 559 : variable
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor logger creation logic in MavenLoggerFactory to use computeIfAbsent for improved readability to enhance code clarity and reduce redundancy in
hbase - 16400 remove unused dataoutputoutputstream ( addendum )
updated the configuration for Hive statistics column autogathering in TestAcidOnTez . java to ensure compatibility with the latest version of Hive
changed log level from info to debug in MavenEnhancePlugin . java to improve logging granularity for enhanced classes
added a static method to retrieve the default provider name and updated the JSSE _ PROVIDER _ NAME to accommodate " Conscrypt
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to enhance annotation processing capabilities for Captor instances
added error handling for missing class and method names in TestSuiteBuilder to provide clearer diagnostics when test cases are not found
updated imports and modified method signatures in GroovyAutoComplete . java , GroovyLanguage . java , and GroovyCompletionHelper . java to improve code cl
use osm instead of graphhopper for import
[ java ] add retry option to http client for session creation
changed the visibility of the ` mHideSysUiScrim ` variable from final to non - final and added preference management to allow dynamic
updated method signatures and added cancellation handling in OkHttpCall . java and CallTest . java to improve code clarity and ensure proper cancellation of
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and structure to enhance readability and maintainability of swipe
changed the ` RequestMatcher ` interface to extend from ` org . springframework . security . web . util . matcher . RequestMatcher ` to
added a new constant ` IF ` to the ` DeferredAttr ` class and created a new abstract class ` ImplicitLambdaConsideredForAp
[ j2kt ] remove boxed and devirtualizedtypes test from integration test .
added unit tests for default and density qualifiers in DeviceConfigTest . java and refactored display metrics handling in DeviceConfig . java to improve
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource from ` drawable . logo ` to ` mipmap . ic _ launcher ` in the ` RootCursor ` class to
added errorBuilder . setContentText ( content ) to FileUploader . java to set the content of the error builder for better error reporting
refactor methods in ConcurrentHashMap for improved performance to enhance efficiency of hash map operations
added methods to adapt user trades in AbucoinsAdapters , TradeService , and TradeDemo classes to enhance trading functionality by
remove check for callRemovePlot in ` Claim . java ` and update player claiming logic in ` Delete . java ` to streamline plot
danielwagnerhall : fix htmlunitdriver to support proxy
added handling for " varbinary " and " java . sql . Types . VARBINARY " in BlobType . java to ensure proper data type
refactor cookie version handling logic in SetCookieSupport . java to improve clarity and maintainability of cookie versioning logic
added synchronization to ensure thread safety when updating ` simpleTypeMap ` and ` arrayTypeMap ` in ` LibFFIContext . java ` to improve
replaced ` Vertx ` with ` ContextInternal ` and updated context checks in ` InboundBuffer . java ` to improve type safety and
updated timeout settings and added a new method for deadServerNoTimeout in LdapTimeoutTest . java to improve test reliability by allowing more time
corrected a typo in the usage message from " UniocdeData . txt " to " UnicodeData . txt " to cl
set the operation name to ` ` inoutheader ' ' in the cxf message header relay test .
updated multiple UI classes for consistency in naming and structure to improve code readability and maintainability
added handling for BoosterSet instances in ComponentAssemblySaver and changed return value from true to false in BoosterSet to ensure proper serialization
added support for proxy request in jabref to enable secure connection to the server .
changed the constant name from ` BLOCKCHAIN __ FORK _ COUNT ` to ` BLOCKCHAIN _ FORK _ COUNT ` and updated
replaced an InternalError throw with a return statement in the Class . java file to simplify error handling for JEP 359 support
replaced mortbay logging with Apache Commons Logging in TestIPCUtil . java to improve logging consistency and maintainability
removed chunked transfer handling in NettyRoutingFilter . java to simplify the request flow by directly using the HTTP client
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure proper handling of tokenization attributes
added pollingPeriod parameter to VerificationAfterDelayImpl and refactored error handling in VerificationAfterDelayImpl to improve flexibility in handling verification failures
added a check for compaction status in the SemanticAnalyzer and SessionState classes to ensure that table masking is only performed when a compaction is active
[ zeppelin - 5242 ] fix zeppelin - 5243 . fix zeppelin
hbase - 2596 hbaseadmin . gettableregions ( ) should return a list of region ( addendum )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to
refactor XML parsing to ensure proper resource management by clearing content and error handlers to improve resource management and prevent potential memory leaks
added a method to release and reset the header buffer in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new file ` UseDiamondOperatorWithVarTest . java ` and modified ` Java17TypeSignatureBuilderTest . java `
added a null check before closing the result set in JdbcExecutor . java to prevent potential NullPointerException when the result set is not closed
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 in DerbyDatabase . java to reflect the new versioning
fixed bug 124325 - usestringbufferlength no longer report false positive on empty stringbuffer
removed error logging from RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
modified the createDb method to return a Connection instance instead of void to improve resource management by ensuring the database connection is properly closed
renamed multiple classes related to custom metrics and resources to improve clarity and consistency in naming conventions
hbase - 11341 add option to disable off - peak compaction ( # 4379 )
modified BitstampDepositAddress to handle both " address " and " v1 / v2 " keys and added DepositAddressJSON
replace ` throw new IllegalStateException ` with ` response . abort ( new IllegalArgumentException ) ` in ` BufferingResponseListener . java ` to improve error
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` to ensure accurate path resolution for deleted directories
updated ` InvocationFinishedEvent ` and ` DefaultMetricsRegistry ` to implement ` MetricsEvent ` and ` InvocationType ` instead of ` Event `
refactor network interface enumeration logic to check for multicast support before returning the next element to enhance robustness by ensuring only valid network interfaces are processed
added a loop to check for validCheckSums of type " 1 : any " in the ChangeSet class to ensure that only valid checksum
added a clone ( ) method to BufferedChecksumIndexInput that throws an unsupported operation exception to ensure that the clone ( ) method is not used
updated return statements in Circle . java to use radius instead of Math . sqrt to improve accuracy of circle validation based on radius
added a conditional check before setting the frequency band in P25Channel . java and modified the return statement in P25ExplicitChannel . java to
rename variables and methods in GestureDetector from ` tapSquareSize ` to ` tapRectangleWidth ` and ` tapRectangleHeight ` to improve
set default _ replicate _ on _ write to false by default . patch by jbellis
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` class and implemented date formatting in ` Util ` and `
added getDelegate ( ) methods to TraceCallable and TraceRunnable classes and corresponding tests to provide a standardized way to access the delegate value for
updated error handling and synchronization logic in FileActivity and FileDisplayActivity to improve user feedback and streamline synchronization events
added stream writable functionality in ForeignIncubatorQuicheConnection , JnaQuicheConnection , and LibQuicheConnection classes
added a boolean parameter to the JavascriptContext constructor to enable conditional execution of JavaScript operations
removed the alignment parameter from the TableCell constructor in BaseTextFormattingHelper and TableCell classes to simplify the constructor usage and improve code readability
added a new file ` TracingAutoConfiguration . java ` to configure tracing beans in the ` org . cloudfoundry . identity . uaa
updated the content addition logic in Submissions . java to use a new Para variable to improve clarity and maintainability of the code by
refactor queryable segment management methods to accept a list of queryable segments to improve flexibility in managing queryable segments
rename VertxBufferTest . java file to improve clarity and maintain consistency in naming conventions
refactor date extraction logic in MessageSubmissionChunk and add a new TestMessageSubmissionChunk class to improve code clarity and enhance test coverage for
changed the visibility of the mContext variable from private to protected to allow subclasses to access the mContext variable
removed import of SortedSet and TreeSet from ShowTablesOperation and ShowViewsOperation to streamline code by eliminating unnecessary dependencies
added a new class ` MongoDataIntegrityViolationException ` and updated references in ` MongoTemplate ` and ` MongoTemplateTests ` to improve error handling
[ hotfix ] fix checkstyle violation in jobcoordinationservice
updated the ` bitsToHumanReadable ` method to include a new ` mimeType2HUmanReadable ` array and modified its implementation to improve
replaced the instantiation of ` newMergePolicy ` with ` newTieredMergePolicy ` and added a new test method ` testNoPath
added a conditional check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not enabled
updated error message in CpuNDArrayFactory . java for clarity to provide more detailed information about CPU support requirements
modified the ` loadSettingModels ` and ` contextInitialized ` methods to accept an ` InputStream ` parameter to enhance flexibility in loading setting models
added null checks for input parameters in FilterLeafReader . java to ensure input parameters are not null to prevent runtime exceptions
add key size provider to jcecrmfencryptorbuilder , add unit test
updated exception handling in NetSocketReader and SoftEndOfStreamException to use the exception ' s message instead of the original exception to improve clarity
removed unnecessary @ Inject annotations from multiple Java files to streamline code and improve readability
updated the expected size in the BundledDistributionTest and added database user assertions in PostgreSQLTest to reflect the correct number of database users and ensure
[ stream ] add pipeline . name option for print and logging .
refactor scale calculation in OverviewState . java to differentiate between two - panel layouts to improve layout responsiveness based on device profile
iceplains biome now extend snowy biome ( # 1193 )
refactor methods in DataUpdateManager and StorageUtils to remove timezone parameter to simplify date time retrieval and improve code readability
[ j2kt ] add isqualified property to thisreference .
updated regex pattern in XhamsterRipper . java to allow additional characters in URLs to enhance security by ensuring only valid URLs are processed
fix checkstyle issue in entity / glowworld . java ( # 761 )
[ mondrian - 1212 ] oracledialect . gettablename ( ) return schema - specific table name if schema = =
fix checkstyle issue in util / console / flutterconsolefilter . java ( # 3995 )
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing users to select all files instead of
[ java ] update networkpublication to use termlengthmask instead of termwindowlength .
fix checkstyle issue in util / guildupdateownerevent . java ( # 712 )
update inPortalTicks logic in Player and Entity classes to differentiate between creative and non - creative scenarios to ensure that inPortalTicks does not
added compression functionality and adjusted spacing based on chart data size in ClusterMonitorTileSkin . java to improve visual representation of chart items and enhance user
updated multiple codec templates for consistency in naming and structure to improve code readability and maintainability
updated data type casting from ` int ` to ` long ` for ` lengthDataBits ` and ` numberTriplets ` to ensure proper handling
removed null check for renderer and header in RendererConfiguration . java to simplify the logic by eliminating unnecessary checks
volume scale : do n ' t allow disk offering change on volume with custom service offering
updated import statements and replaced LimitOrder . Builder with LimitOrder . Builder in HitbtcAdapters . java and Order . java to improve
rename ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager . java ` to improve clarity by indicating
updated the description URI from " jruby " to " jrubyscripting " in JRubyScriptEngineFactory . java to clarify
refactor display name handling in ConfigCategory . java to improve code clarity and maintainability
updated the condition to check for preciseExchangeAmount in ParticipateAssetIssueActuator . java to ensure accurate validation of preciseExchangeAmount by
removed unused loop condition in FeedUtils . java to streamline code by eliminating unnecessary checks
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to validate HDF4 parsing functionality to ensure compatibility
[ calcite - 6092 ] add a constant to the bug class and use it in the test
removed unnecessary whitespace in a conditional statement to improve code readability and maintain consistency
added a method ` quietCloseAll ` to handle multiple ` AutoCloseable ` objects and updated the loop structure to improve flexibility in closing
updated the positive button value from ' confirmation _ remove _ remote ' to ' confirmation _ common _ yes ' in RemoveFileDialogFragment . java
added a null check for srcWidth , srcHeight , and dstWidth before calling drawImage to avoid potential NullPointerExceptions when srcWidth or dstWidth
replaced ReflectionHelpers with direct method invocation for class definition in UnsafeAccess . java to simplify code and improve readability by eliminating dependency
updated fqdnRegexPattern and added validation assertions for domain names in GUIUtilTest to enhance validation logic for domain names and ensure accurate validation
refactor conflict handling in CachedRowSetWriter to use a counter for conflicts instead of a boolean flag to improve clarity and maintainability of
check for flutter pubspec . yaml and flutter 0.0 . 3 version ( # 5379 )
added a condition to return the reference if the reference is the current instance to ensure proper handling of references in the memory assignment process
added handling for seed files and improved error logging in Injector . java to enhance robustness by skipping non - file inputs and provide clearer
added a condition to hide the original view when it is an instance of ItemInfo and removed it from the originalView to ensure that the original
defaultlooppolicies : fix indexoutofboundsexception when maxthreads = 0
added logging functionality and a method to check if texture coordinate type is supported in CombinedTexture and UVCoordinatesGenerator to improve error handling and provide
added error handling for invalid input parameters in multiple classes to improve robustness by throwing exceptions for invalid input values
added implementation of seek and close methods in TracingConsumer and TracingProducer classes to enhance functionality by allowing direct seeking and closing operations
updated the SQL query in HandleDAOImpl . java to use the new prefix length instead of the previous prefix to ensure accurate retrieval of the old
replaced ` ArrayList . addAll ( collection ) ` with ` ArrayList . constructor ( collection ) ` in ` JSONSerializer . java ` to simplify
add a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used in favor of a new implementation
added a nightly build warning message in MainWindow . java to inform users about the version of Universal Gcode Sender for nightly
add a check to return the user ' s body text if the team name is null or the email is the general question , and implement sorting
updated return statement to clarify the reason for removing unnecessary throws to improve code readability and understanding of the error message
deleted the CacheApplication . java file and replaced its references in CommonsApplication . java and ShareActivity . java to streamline the codebase by
replaced instances of ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future development
replaced direct usage of ` Resources . getSystem ( ) ` with ` ResourcesManager . getInstance ( ) . getConfiguration ( ) ` and updated configuration
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` and updated its usage in ` VersionDefinition
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during processing
added import statements for XML resolver helpers and readers in CheckPackageAccess . java to enhance functionality by integrating XML resolver utilities
renamed methods ` save ` and ` persistExecutionContext ` to ` add ` and ` updateExecutionContext ` across multiple classes to improve cl
loop exit : replace the loop begin with the loop end .
replace ` RecyclerView ` with ` WidgetsRecyclerView ` and introduce ` mCurrentRecyclerView ` for better layout management to improve layout respon
added a check to ensure the terminal is supported before proceeding to prevent potential errors when the terminal is not supported
changed data types of fiveSeconds and timeAllowed from long to Integer in CloudExitableDirectoryReaderTest . java and LBHttpSolrClient
added a session validity check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure that sessions are only valid and improve session management
refactor column name handling in ChangedIndexChangeGenerator to improve null safety to enhance robustness by preventing potential NullPointerExceptions
replaced Vector with ArrayList for managing RadioButton instances and added action listener methods to improve performance and flexibility of button management
updated UserManagerCompat to support newer Android versions and introduced new UserManagerCompatVM and UserManagerCompatVNMr1 classes to enhance
added methods to retrieve database major and minor versions in MockDatabase , AbstractDatabase , HibernateDatabase , Database , and ReorganizeTableStatement
refactor ActionGraphCache to improve mismatch handling and provide clearer error messages to enhance code clarity and provide clearer diagnostics for mismatched
added new files LockDatabaseDesc . java and UnlockDatabaseDesc . java to implement explain descriptions for locking and unlocking database operations
refactor RankingUIModel and RankingToolbar to use setter methods for model attributes to improve code readability and maintainability by
added handling for disconnect messages in HandshakeHandler . java and updated logging in NodeImpl . java to improve disconnect handling and provide clearer logging for
added a test for setting and deleting storage groups in IoTDBAuthorizationIT . java and implemented privilege checks in AuthorityChecker . java to ensure
chore ( regen ) : update documen namespace to match documen namespace
added support for variable declarations in type validation and assertion checks to enhance type safety and provide clearer error messages for missing or malformed variable types
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to facilitate
[ java ] use cachedepochclock in countermanager to avoid unnecessary allocation .
updated logging statements in MultiSteps . java and SendEmail . java to use placeholder syntax to improve performance and readability of logging
added null check and initialization for joinKeys in JoinDesc . java to ensure that joinKeys is not null before use to avoid potential NullPointerExceptions
updated the authentication handler registration to include a default PrincipalResolver to enhance flexibility in handling principal resolution during authentication
modified the ` addSettingsFromFile ` method to include a ` ImmutableList < Path > searchPaths ` parameter to enhance functionality by allowing additional search paths
changed list declarations to be final in Oracle . java and added initialization of rootStates to enhance immutability and ensure consistent initialization of rootStates
[ hotfix ] [ runtime ] disable unaligned checkpointing by default
fix ( sql ) : throw ` ` unsupportedoperationexception ' ' instead of ` ` nulls first / last not support ' ' ( #
add a new ` println ` method to ` compiletheworld ` and a configuration option ` log ` in ` compiletheworldtest ` to
removed a check for LocalVariable type in LambdaRewriter . java to simplify error handling for non - LocalVariable instances
added support for MySQLDatabase in CreateTableGenerator . java to ensure proper handling of timestamp columns for MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper context class loader management during runtime
added a condition to set ejection delay when stageNr is zero in SimulationListHandler . java to ensure proper handling of ejection delay
rename ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and modify the ` runCommandLineRunnersAndApplicationRunners `
refactor TransactionUtil2 to improve code structure to enhance maintainability and readability of the code
updated the ` validateIssuerClaim ` and ` getIssuer ` methods to accept an ` Optional < OAuthRegisteredService > ` parameter to enhance issuer
added null check for the DocCollection before returning it in ClusterState . java to prevent potential NullPointerException when the collection is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` to ensure
added foreign database and schema names to ForeignKeyColumn and related classes to enhance foreign key management capabilities in the database and schema context
[ java ] remove usage of electionstate . canvass member in election . canvassmembersinunsuccessfulleadershipbid .
added a private method ` shadowOf ` to ` ShadowActivity ` and updated the usage of ` Shadow . extract ` in ` ShadowBluetooth
refactor root selection logic in FileSelection . java and add a new test case in TestBugFixes . java to improve error handling and
add oninventorytick to iforgeitem and iforgeitemstack , deprecate since 1.20 . 1
refactor output handling in Export . java and IOUtil . java to utilize ByteArrayOutputStream instead of FileOutputStream to improve performance and ensure proper resource management
added a null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to prevent potential NullPointerException when getSherlockActivity ( )
updated widget binding logic to utilize bindOptions for improved functionality to enhance widget management by allowing dynamic binding options
[ ecobee ] add ` ` air pressure ' ' , ` ` air quality ' ' , ` ` co2ppm ' '
fix nullpointerexception when try to retrieve a contact that do n ' t exist .
added environment variables for " AAPT " and " AAPT2 " in Genrule . java and updated tests in GenruleTest . java
only dump access table when truffleinstrumentbranchs . value be true .
added null check before disposing the message to prevent potential NullPointerException when message is not initialized
added @ Getter annotation and modified access modifiers in TronStoreWithRevoking , TxCacheDB , Manager , and TransactionCache classes
updated log warning messages in CoreContainer . java to clarify that LogWatcher is not yet implemented for log4j and provide clearer
replaced calls to ` printStackTrace ( ) ` with ` fail ( ) ` for cloning failures in ` CategoryPlotTests . java ` to
replaced ` ByteArrayOutputStream ` with a new ` SmallByteArrayOutputStream ` class and modified the ` dial ` method to include a null check to
* refactoring of shader attribute storage to use intmap instead of hashmap
changed the connection string from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java
added null check for ` firstExchangeCompletedTimestamp ` and ` lastExchangeCompletedTimestamp ` in ` RouteInfo . java ` to avoid potential `
updated Javadoc parameters and added new test cases in TestHtmlTag , TestUseOption , and C1 classes to improve documentation formatting and enhance test
added a condition to check if the result is incomplete and the items size is greater than 10 to ensure completion occurs only when there are items to
updated command - line usage and argument handling in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and functionality of command - line
updated output format handling in SiteSnapshotVariationsTest and OutputOptions to differentiate between " htmlx " and " svg . html " extensions
changed the condition from checking if the QSB is enabled to checking if it is not enabled to ensure that QSB functionality does not affect the
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and updated equality checks in ` SceneKey ` and ` Gltf
added a date field and its setter method in AbstractGenerator and Generator classes , and updated HttpGenerator and HttpConnection to use this new method to
replace Adler32 with CRC32 in Store . java to improve data integrity by using a more efficient CRC calculation
do n ' t allow xen . heartbeat . interval to be set to null
added a new constant ` ZERO _ AREA _ FIN ` and refactored warning logic in ` FinSetCalc . java ` to improve
added a custom serializer class ` DocumentMetadataSerializer ` for serialization of ` DocumentMetadata ` to enhance JSON serialization capabilities for better data management
hhh - 11341 - add trunc ( ) and datetrunc ( ) function for h2 and oracle dialect
added a check for " memory . " prefix in MetricUtils and updated error handling in MetricUtilsTest to improve error reporting and provide clearer
added a boolean flag ` useJavaScript ` to the ` ensureSignedUp ` method and modified return statements to use ` CompletableFuture . completedFuture `
updated validation messages to use ` RUNTIME _ PROTOTYPE _ TYPE . classNameWithEnclosingNames ( ) ` instead of ` Configured
updated the BACKFILL endpoint from " / generateAnomaliesInRange " to " / replay " to align the endpoint with the intended API
replaced instances of ` new DataWord ( ) . getData ( ) ` with ` new DataWord ( 1 ) . getData ( ) `
updated badge handling logic in AllAppsContainerView . java to utilize BubbleTextView and ItemInfo to improve UI responsiveness and
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated context start calls in ResourceService and ResourceHandlerTest to ensure correct behavior after ContextHandlerCollection is started to start the handler
removed conditional check for WORKSPACE _ CUSTOM in Cling . java to streamline code by eliminating unnecessary logic
trufflejdkservices : remove assert that lookupmodule be not null .
updated method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to ` shadowInvocationWhenChildIsInstrumented
updated import statements for ItBitDemoUtils , ItBitOrderBookDemo , ItBitTickerDemo , and ItBitTradesDemo classes to
ww - 3443 fix nullpointerexception in profilingactivationinterceptor and scopeinterceptor
changed ` Utils ` , ` ApplicationUtils ` , ` AsyncSocketFactory ` , and ` Whois ` classes to be final and added private
fix : fix resource leak in regionsapiutil . createregionsapi
replaced instances of " getClass ( ) . getName ( ) " with " java . util . Vector " and " java . util . Hashtable
added tableNameWithType parameter to the warning log message in RetentionManager . java to provide more context about the table type being logged during retention
added trim ( ) . length ( ) to fragmentList . get ( 0 ) in QueryExecutorImpl . java to ensure proper handling of empty
fix resourcepackfilenotfoundexception cause by path . tofile ( ) . tofile ( ) . tofile ( ) .
replaced instances of ` TransformerBuilder . Node ` and ` TransformerBuilder . Edge ` with ` TransformerBuilder ` and ` TransformerBuilder ` to
added null and visibility checks for the task view in RecentsView . java to improve robustness by preventing potential null pointer exceptions
updated the ` calculate ` method across multiple classes to return ` BMIViewObject ` instead of ` Map < String , String > ` to
replaced Comparator . comparing with Entry < TargetNode < ? , Integer > > : : getKey to simplify comparison logic for improved readability
fix hay bale not be able to be damage . close # 263
updated environment variable handling in multiple classes to include " OPENJ9 _ JAVA _ COMMAND _ LINE " to ensure compatibility with the OpenJ9
added support for custom plugin properties in OptionsParser and corresponding tests to enhance flexibility in parsing plugin configuration options
updated the condition to check if the hashTable is not empty before proceeding to improve robustness by preventing potential NullPointerExceptions
added a condition to check if seconds are non - negative and refactored test methods in Timestamp and TimestampTest classes to enhance timestamp validation and
[ java ] use context . archivecontext ( ) instead of context . archivecontext ( ) in cluster service agent .
added a condition to check if the compilation threshold is zero and modified assertions in LambdaForm . java to ensure proper handling of compilation conditions and improve
added new test methods for image2 and image2Joined in AbstractTest . java to enhance testing capabilities for different image types in the application
refactor ` TogglableFlag ` and ` BaseFlags ` classes to improve default value handling and change listener functionality to enhance the functionality
updated logging statements in DockerClientFactory . java to use parameterized messages to improve logging performance and readability
added a conditional check to return early if the current platform is Android to optimize performance by avoiding unnecessary processing on Android devices
updated assertions in RoutesTest . java to use assertThat for better readability to improve test clarity and maintainability by using more descriptive
added new functional interfaces ` BytePredicate ` , ` ByteToLongFunction ` , ` FloatPredicate ` , ` FloatToLongFunction ` , ` Short
changed the return type of ` getSubsColor ` and ` setSubsColor ` methods from ` int ` to ` String ` and updated the
added a conditional check before deregistering the invocation in Invocation . java to ensure that the invocation is only deregistered if the future is complete
replaced the initialization of ControlFrameBytes with a new output method to streamline the WebSocket connection handling and improve code clarity
added a null check for the intent extras before starting the welcome activity in LoginActivity . java to prevent potential NullPointerException when the activity is not redirected
added ShadowCheckedTextView class to implement shadow functionality for CheckedTextView to enhance testing capabilities for CheckedTextView in Robolectric
added Serializable interface to ParserState and modified GETTER _ CACHE and changeCallback to be transient in AccessorProperty and Property classes to ensure proper
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to enhance certificate verification capabilities
removed redundant assignments of ` TEMPDIR _ CONFIGURED ` and ` TEMPDIR ` in ` WebInfConfiguration . java ` to streamline
add ' from ' attribute to ' occupant ' field and test .
updated QuicSession and QuicConnection classes to include a context parameter to enhance session management by allowing context - based access to connection information
updated writer configuration to use ` getConfig ( ) ` instead of direct calls to ` writer . setMergeScheduler ` , ` writer . setMerge
refactor code for better readability and structure in ICU4JImpl . java and TextPosition . java to improve maintainability and clarity
added default value handling for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange . java to improve compatibility with Liquibase
updated NbtScoreboardIoService . java file to improve scoreboard functionality and enhance performance
removed validation for ` WritableResource ` in ` SAML2Configuration ` and updated logging level in ` SAML2FileSystemMetadataGenerator ` , ` SAML
changed the visibility of the ` printer ` variable and added a ` createPrinter ` method in ` GraphPrinterDumpHandler ` to enhance encapsulation
added BigDecimal import and modified order average price calculation in HuobiAdapters . java to ensure accurate average price representation for orders
updated field handling in ProjectionOperation and TypeBasedAggregationOperationContext classes and added a new test case in AggregationUnitTests to ensure correct mapping and
added a check to ensure the player is not in the viewers list before adding it to the player connection to avoid adding players that are not
added ConstantState management to FolderAdaptiveIcon , FolderAdaptiveIcon , and ShiftedBitmapDrawable classes to enhance the handling of constant states
refactor connection creation logic in SPDYClient . java to improve clarity and structure to enhance readability and maintainability of the connection
[ 3.0 ] fix protostuffobjectoutput . writeobject ( null ) throw npe ( # 9441 )
pdfbox - 4892 : fix formatting , a suggest by valerybokov
refactor BarrowmanCalculator to improve code structure to enhance maintainability and readability of the code
ggb - 2203 do n ' t show axis if they be n ' t visible .
replaced ` setFilter ` and ` setWrap ` methods with ` unsafeSetFilter ` and ` unsafeSetWrap ` to improve performance by redu
removed unnecessary whitespace in XmlWorkflowServiceImpl . java to improve code readability and maintain consistency
added SSL context and hostname verification for HTTPS connections in CustomUrlJob . java and created CustomUrlTrustEverything . java to enhance security by
updated clock rate retrieval methods to use getRealUsedClockRateString ( ) instead of getClockRateString ( ) to improve clarity and accuracy
rename TextureAtlas . java file to improve clarity and consistency in naming conventions
updated the method to return the module name instead of the product name and added a method to set the module name in AppleLibraryBuilder to
[ hotfix ] [ test ] fix testslot race condition
# 113 - enh : add support for findids ( ) with inheritance ( # 113 )
updated WebSocketServletRFCTest . java to replace closeFrame with rbuf and modified buffer handling to improve clarity and functionality of WebSocket response
[ wasm ] fix nullpointerexception in wasmfunctioninstance # pushreference .
[ type : refactor ] add ttl config to clickhouselogcollect plugin ( # 3649 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified condition checks in CustomPreconditionWrapper and XMLChangeLogSerializer
replaced ` QueuedThreadPool ` with ` Server ` and ` HandlerCollection ` in ` DeploymentExceptionTest . java ` to improve thread management
added error handling for Fresco initialization in CommonsApplication . java and initialized vectorDrawable in NearbyController . java to improve robust
modify return statement to handle null or empty objectName case to improve robustness by avoiding potential NullPointerExceptions
updated error message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve
[ hotfix ] [ table ] introduce old planner and executor factory constant in environmentsettings
updated variable names and added null checks for subject and issuer in KeyTool . java to improve code clarity and prevent potential NullPointerExceptions
added a deprecation annotation to RuntimeOptions . java to indicate that the RuntimeOptions class is outdated and should no longer be used
replaced ByteBuffer encoding with a direct method call to getBytes to simplify code and improve performance by eliminating unnecessary byte encoding
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a mechanism for determining permission
added a new option ` ERASE _ LINE _ ON _ FINISH ` to the ` LineReader ` and ` LineReaderImpl ` classes
masterruntime . getmaster ( ) : fix npe in masterfilesystem . getmaster ( )
updated exception types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR and BLOCK
improve expandwar . deleteold ( ) and expandwar . createwar ( ) to use urlconnection . getjarfile
fix ( netty ) : handle httpclientresponse . getresponsebody ( ) and httpclientresponse . getresponse ( ) . getresponse
changed the container layout from center to centerAbsolute for the spinner to improve the spacing of the spinner in the UI layout
[ hotfix ] [ network ] fix requestmemorysegments not be call on interruptable thread
updated MBeanServer initialization and usage in TestJmxIntegration . java to ensure proper resource management and avoid potential memory leaks
replaced ` @ RunWith ` annotation with ` @ RetryTestRule ` in ` AbstractIT . java ` to enhance test reliability by
refactor QueryStateMachine and CallTask to remove the autoCommit parameter and streamline transaction management to enhance code clarity and maintainability by
add package - info . java file and move test to optiq - test
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ test ] fix checkstyle violation in streamtasktimertest
refactor URI handling in Request . java and add a new test case in RequestTest . java to improve clarity and correctness of URI
updated access modifier of KEY _ LAST _ SEEN _ VERSION _ CODE and refactored storage point retrieval in MainApp and DataStorageProvider
added methods ` sessionAvailable ` and ` sessionUnavailable ` to manage session availability and unavailability in ` SessionManager ` to improve session management by
added a method to add a package scan for " liquibase . pro " in ServiceLocator to enable package scanning for Liquibase
renamed the method from ` deleteSyncFolders ` to ` deleteOtherSyncedFolders ` in ` MainApp ` and ` SyncedFolderProvider
updated the ` loadWithNewGlobal ` method to accept an additional parameter for arguments to enhance functionality by allowing more flexible argument handling during global
refactor regionMatches calls to use startIdx instead of a fixed index to improve clarity and correctness of path matching logic
updated the weigher method calls to use getRetainedSize ( ) instead of length ( ) for footer and stream to ensure accurate size representation
updated method names from ` hasRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple classes to clarify the purpose of the method
added support for the LEAD and LAG functions in UnsupportedOperatorsVisitor . java and created a corresponding test in TestWindowFrame . java to
clear proxy request headers in AbstractProxyServlet to ensure proper handling of HTTP headers for proxy requests
added a check to skip the test if SA attach is not expected to work to ensure that the test does not fail if SA attach is not
added null check for bgColor in GraphicsDevice . java and created TranslucentWindow . java for translucency testing to enhance robustness
updated UserInfoActivity to check for null values for phone , email , email , twitter , and webpage before populating userInfo elements to improve
added custom field serialization for precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers are not used on different machine
[ hotfix ] [ table - planner - blink ] fix kafkatablesourcesinkfactorybase and kafkatables
added a new file ` MultipleOutputsIntegrationTest . java ` to implement integration tests for named output groups to ensure that named output groups can be
updated regex pattern and added content comparison logic in FileSettings . java to ensure proper handling of line breaks and maintain consistency in setting content
nifi - 11341 : fix bug in statelessflow when provide configuration via json .
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added @ TaskbarModeSwitch ( mode = PERSISTENT ) annotation to TaplTestsQuickstep . java to enable persistent taskbar functionality
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
improve error message when item model can not be load from normal or blockstate .
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
do n ' t call window . getcurrentsurfacescale ( ) on jogl 2.0
refactor RussianLowerCaseFilter class implementation to improve code readability and maintainability
removed server and client properties from test driver setup in CsvBulkLoadToolIT . java and updated zookeeper port retrieval in QueryUtil . java to stream
replace ` File . separatorChar ` and ` File . pathSeparatorChar ` with underscores in ` displayName ` to ensure consistent naming conventions across
* added resettableinputstream so that we can use seekablestream . skip ( )
added a new boolean parameter ` repeatFirstLineIndent ` and modified indentation logic in ` ColumnText . java ` to allow flexibility in indentation
changed the type cast from ` ( Oid ) ` to ` ( Object ) ` for the ` oid ` comparison to ensure proper type handling and
move metrictrackerfactory and healthcheckfactory from hikaripool to hikaripool .
loopex : fix type check for controlflowanchored instead of controlflowanchornode
added focus painting of buttons [ i ] in WindowsPlacesBar . java to improve user interface responsiveness by preventing focus from being
updated the condition to check for both PrimaryKey and ForeignKey instances in DatabaseSnapshot . java to ensure proper handling of primary key and foreign key scenarios
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and updated the API endpoint in ` AccountAPI
[ ds - 3752 ] add check for dc . title in community admin group creation
apinsertiondetector : do n ' t throw error if the utterance have no word
added unit test base on user forum issue
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and added `
increased the FASTSCROLL _ THRESHOLD _ MILLIS value from 40 milliseconds to 10 milliseconds to improve scrolling responsiveness and reduce
updated the system class name in HotSpotResolvedJavaField . java from MetaUtil to a direct reference to " Ljava / lang /
hhh - 13644 - fix npe in procedurecallimpl . getresultstream ( )
added null check for getApiProperties ( ) before initializing it to avoid potential NullPointerException when APIProperties is not set
added new files BinaryFrameGenerator . java and TextFrameGenerator . java to implement WebSocket frame handling for binary and text frames
danielwagnerhall : fix flakiness in pageloadingtest . java
updated random coordinate generation logic in RandomGeo3dShapeGenerator . java to use random ( ) for lat , lon , and radius to improve
added a keepAlive method to the ResourceBundle class to ensure proper resource management by keeping the ClassLoader instance
change return value from false to true in SQLiteDatabase . java to enable successful operation for database operations
do n ' t report jsr166 lock monitorenter if it ' s util concurrent signature
added MkdirStep to multiple Java files and updated the step count in FatBinaryTest from 1 to 2 to ensure proper directory structure for output
updated coordinate checks and error messages in MeshLeveler . java for better clarity to improve error handling and provide more informative error messages for
[ drools - 7 ] skip pmml parsing / compilation when there be no jpmml available
update variable name from locationMode to thermalStatus in ShadowPowerManager . java to improve clarity by using a more descriptive variable name
added a conditional check for the OS _ MAC environment before creating a temporary directory to ensure compatibility with macOS environments when creating temporary directories
added a condition to check if memory mapping is enabled in PrjFileReader and CatalogManager to ensure compatibility with non - Windows operating systems
added a null check for the organization in the pom . xml file to ensure that Plugis is required to have an organization in the pom
removed contributor license agreements from SepPostingsWriterImpl . java to streamline license management and improve code clarity
deleted the TerminateWebSessionListener . java file to remove unused listener implementation to streamline the codebase
updated the method to use the system ' s class path instead of an empty string to ensure the method uses the correct class path for execution
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv ,
added JUnit Pioneer annotations and a test method to the AddLicenseHeaderTest class to address issue # 3198 and ensure Javadoc is
changed the default value of LAUNCHER3 _ PHYSICS from false to true to enable PHYSICS functionality for better
added a new ` < div class = ' noPrint ' > ` tag to the ` HtmlThreadInformationsReport ` class to provide a
update LUCENE _ MAIN _ VERSION from 3.1 to 4.0 and update VERSION from LUCENE _ 31 to
added macosx symbolicator and task handles in BsdDebuggerLocal . java and modified platform detection in PlatformInfo . java to support additional
fix potential memory leak in fmlclienthandler , fmlindexedmessagetracker , and fmlindexedmessaget
do n ' t log ` ` connection reset by peer ' ' in networkdispatcher .
[ java ] use a default conductor byte buffer if conductorbytebuffers be not available .
added a break statement in TouchImageView . java to ensure proper flow control during image processing
doc ( regen ) : [ dialogflow - v3 ] update doc to match open source code ( # 1193 )
removed SSL handshake handling and streamlined the flush method in FeedableBodyGenerator . java to simplify the code and improve readability by elimin
added checks for specific Java types in TypeUtils . java to ensure proper type assignment for Object and CONTRAVARIANT types
use concurrentskiplistset instead of nonblockinghashset for pending flush . patch by jbellis
added null check for tree . errs in MemberEnter . java and updated error handling logic in JavaCompiler . java , Erroneous . java
changed the browser ' s background size from NO _ BACKGROUND to NONE to simplify the browser display by removing unnecessary background
replaced ` finish ( ) ` with ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure that the cancel
IntegerStamp . java to handle negative lowerBound and upperBound values and add corresponding tests in IntegerStampTest . java to improve robustness of integer division
added a method to read a stream from an InputStream and updated the Image instantiation to use this method to improve code readability and maintainability by
added variable declaration and undefinition for locals in CaseStmtToken and updated related classes to enhance the handling of variable declarations and improve code clarity
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions during the handshake process
updated the " AdditionalDependencies " attribute in WinGammaPlatformVC10 . java to include " psapi . lib " to ensure compatibility with the
updated comment and totalLine formatting in StringUtilsTest . java to use system ' s line separator to ensure consistent line endings across different operating systems
updated template handling in TemplateEngineFreemarker and modified malicious javascript in ApplicationController and ApplicationControllerTest to enhance compatibility with different
refactor byte array handling in CRDGeneratorTest . java for improved clarity to enhance readability and maintainability of the code
make static final in samplesenderfactory to be non - static .
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure that the emailableReporter
added a boolean flag ` quoted ` to manage quoting behavior in ` CommandLineBuilder ` and updated related tests in ` CommandLineBuilderTest ` to ensure
removed the ' public ' modifier from several interfaces and classes to enforce package - private visibility for better encapsulation
added a method to set the number of reduce tasks in FreeGenerator to configure the number of reduce tasks for job execution
fix nullpointerexception when generate schema for object value with default object field ( # 1193 )
updated the FILEVERSION from 505365 to 532077 to reflect the latest version of the save service
added support for " OES _ texture _ float " and " GL _ ARB _ texture _ float " extensions in FloatTextureData .
add fileserver . write ( ) , fileserver . closefile ( ) , and update jmeterversion to 2.1 . 2005
added a null check for outputDirectory and jarStream before setting the output directory to ensure that the output directory is only set when it is not already
added performance measurement for SQLite connection in ShadowSQLiteConnection . java to enhance performance tracking for SQL operations
replaced instances of ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java
add enum resourceerrorhandling to allow custom error reporting
added a check to ensure the position does not exceed the buffer size in RAMInputStream . java and implemented a test case in TestRAMDirectory
update error handling in DefaultServlet and JspServlet to include request and request URI information to improve error reporting for missing resources and provide clearer context
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous parameter and added AccessControlContext class to enhance thread management and access
updated CHECK _ EVERY _ N value and modified checkFreeMem ( ) logic in Caches . java to improve memory management checks and enhance
hbase - 16400 fix checkstyle violation in testsplittransaction
added null check for currentSelectionArea before executing selection logic to prevent potential NullPointerException when currentSelectionArea is not initialized
added a new test method ` testJaasDemo ` to ` DemoModulesTests ` to validate Jaas demo environment configuration to ensure correct
updated condition to include spanX and spanY parameters in CellLayout . java to improve layout calculations for folder creation and spacing
refactor CacheOffHeap class for improved performance to enhance efficiency of cache management operations
add feature to prevent re - opening a table that depend on another table or view
updated TiledLoader to handle extra XML gid values and improved null check for dataString to enhance error handling and prevent potential null pointer exceptions
synchronize setworkingset to prevent concurrentmodificationexception
added a new Java file named Solution . java that implements a solution for determining the number of stones in a given range to implement functionality for
add an addresschecker interface to allow the trackerrequestprocessor to check for bad ip
fix rendertype be rendertype . getTranslucentmovingblock not be rendertype . getTranslucentmovingblock ( #
add a method to remove default tag from the tool tip for config elements to improve user experience by providing clearer guidance on tag usage
[ netatmo ] make moduletype . thingtypeversion a string ( # 11341 )
added null check for recieptents before mailing to prevent potential NullPointerExceptions when recieptents is null
refactored the single check logic into a private method ` isSingle ` to improve code readability and maintainability by reducing duplication
do n ' t fail fast when try to pull image from docker
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated ` perfStatsCollector ` to include it to provide additional context
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 559 : fix
replaced ` gradleImporter . importProject ` with ` gradleImporter . importProjectCore ` in ` OpenAndroidModule . java `
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command failures
refactor TreeMap class implementation to improve performance and readability of the code
added methods to enable and disable async stack traces in the application to improve stack trace management and error handling capabilities in the application
added a method to set the Glow color in BubbleTextView and updated BubbleTextView to utilize it to improve color management
set class styles for link and description to " file - row - text " to ensure consistent styling of link and description elements
updated AbstractJdbc2ResultSetMetaData to return " java . lang . Short " and added a new test method in ResultSetMetaDataTest to ensure correct
removed unnecessary try - finally block around file deletion in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify
added null check for _ info before accessing its properties to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a provider string to facilitate the creation of ShadowLocation instances with a specified provider
updated the condition for setting maxRAM in LauncherPreferenceJavaFragment . java to include a check for deviceRam < 2048 to ensure
add miss stats to localmapstatsprovider when there be no data
added logging functionality to FileProfileActivator and implemented LogEnabled interface to enhance debugging capabilities and provide insights into file activation checks
updated the parameter name in the addToBody method from " noname1234 " to " invalid _ " to improve clarity by using a more
fix nullpointerexception in guild # getroles ( ) ( # 1193 )
updated the return value and modified the arrayTrim initialization in ExpandableUploadListAdapter . java to improve code clarity and maintainability by using
added multiple assertions for deleting records in DashboardUserMapperTest . java to ensure that the delete operation behaves as expected with expected results
update instructorfeedbackresultsspagedata to reflect the change from recipient to primaryparticipant
sulong : add a method to get a pointer to a native address and a specialization guard .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for external use
fix : add usage help for -- headless ( no graphics )
updated action bar title and added notification cursor functionality in DrawerActivity . java to enhance user experience by providing a clearer interaction state and improve
refactor CommandLineParserTest to improve test coverage to enhance reliability of command line parsing functionality
added interpolators for animation configurations for ALL _ APPS and NORMAL states in QuickstepAtomicAnimationFactory and PortraitStatesTouchController to
updated method call from ` toUnderscoreSeparated ` to ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to improve
removed unused native methods from CWrapper . java to clean up the code and improve maintainability
added validation for constant references in mmm Checker . java and created a new ValueTest . java file to ensure that constant references are valid and
8278013 : test _ bug : java / math / multiply / montgomerymultiply / testsquaretolen
removed null check for constructors in PojoUtils . java to simplify code logic by eliminating unnecessary null checks
refactor JiraConfiguration to improve code structure to enhance maintainability and readability of the configuration
updated error and coverage reporting messages in UploadBuild . java to improve clarity of error reporting for better debugging
updated bounds settings in DeviceProfile . java to include search bar offset to improve layout positioning by accounting for search bar offset
fix ( pulseaudio ) : do n ' t disconnect when idletimeout = 0
refactor activity launch logic to run on the UI thread in OverviewCommandHelper . java to ensure that UI updates occur on the correct thread
removed the ` getSourceGroupOptional ( ) ` method and its usage from the ` AppleSource ` class to streamline code by elimin
increased the timeout duration for triggerFiredLatch . await from 220000 milliseconds to 320000 milliseconds to allow for more time for trigger
[ hotfix ] [ table - common ] fix typo in floatselectivereader
fix ( griffin ) : fix npe in abstractnodecostsearch . getbestpath ( )
added a condition to skip processing for specific UI components in ResourceEditorView . java to improve efficiency by avoiding unnecessary processing for specific components
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java
added a null check for commitPoint in ReplicationHandler . java to ensure that the commitPoint is initialized before use to avoid potential null pointer exceptions
added unit tests for ` getImeiForSlot ` and ` getMeidForSlot ` methods in ` ShadowTelephonyManagerTest
removed unused debug methods in SimpleHostRoutingFilter . java to streamline code and improve readability by eliminating unnecessary debug functionality
added ` destory ( ) ` method to multiple classes and implemented resource cleanup in ` BitmapInvertedIndex ` to ensure proper resource management and
[ rip - 10 ] fix the test case of statictopicit ( # 880 )
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer .
hbase - 16400 bulkload should throw an exception if a file do n ' t exist ( chaoyu tang )
added a ` commission ` field to ` DefaultWithdrawFundsParams ` and modified its constructor to include it in the ` Ripple
removed unused import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve maintainability
updated catch blocks in LoadSolrBuilder . java and SolrLocator . java to include both SolrServerException and IOException to streamline exception handling for better
added validation for abstract overloaded methods in Java2TypeScriptTranslator . java to ensure proper handling of method arguments and prevent runtime errors
replaced direct call to sweepDisk ( ) with a try - with - resources statement for better resource management to improve code readability and ensure
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 559 : add
refactor SubExactLConstantTest and SubExactLNonConstantTest classes to improve code clarity and maintainability
added null check for claimRequestString before parsing to prevent potential NullPointerException when claimRequestString is null
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and maintainability of the rule implementation
updated the ` processTypeHintForNestedDocuments ` method to handle null values correctly and added unit tests for null values in ` UpdateMapperUnit
replaced ` CoreAdminResponse ` with ` CoreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and added a
initialize transformers and locators list in moddirtransformerdiscoverer . close # 2273
fix checkstyle issue in util / querydsl / abstractquerydslprocessor . java
pegraphdecoder : add getcallstack ( ) and implement tostring ( ) .
replaced instances of ` setOf ` with ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve method clarity and
( chore ) camel - mail : simplify code and improve readability
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix npe in prefetch
updated return statement to include setIsPropertyName ( ) method to enhance the functionality of identifier name retrieval
create wave generator activity , and use it in instrumentationfragment instead of toast
added null checks and logging for properties and sheets in KeyedProperties . java and SheetOverlaysManager . java to improve error handling and provide
added unit tests for log and exec functionality in PodIT . java to ensure proper logging and execution of Kubernetes pods
added a test method ` testNoWriter ` to the ` TestReplicationHandler ` class to ensure that MockDirectoryFactory causes SolrCore . init
do n ' t call super . dispatchmethodkernelokra ( range , args ) in case of error
updated DnsClient , MxRecord , DefaultMxRecord , and DefaultMxRecord classes to implement Comparable interface and improve sorting functionality to enhance
refactor thread creation logic in XToolkit . java to use a privileged action for better encapsulation to improve code readability and maintain
added validation and selection functionality in SelectBox and updated dropdown selection in UITest to improve user interface responsiveness and ensure proper selection of
updated exception handling in JobGlobalListener to print stack trace to improve error reporting by providing more detailed stack trace information
updated the ` createState ` method to include a ` parentSplit ` parameter and modified related logic in ` FlowBuilder ` and ` SplitState
changed the ` connectionState ` variable from ` int ` to ` volatile int ` and updated the method to use ` connectionState ` to ensure
increased the default polling period from 10 to 1000 and added a new endpoint ID annotation in EnableIntegrationTests to allow more time for polling
refactor encoding methods in MemoryStack and MemoryUtil to improve memory allocation handling to enhance performance and maintainability by eliminating unnecessary memory allocation
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error handling and
[ java ] unusedmodifier : fix false positive with enum
refactor method references from lambda expressions to method references across multiple classes to improve code readability and maintainability
updated the parameterized annotation in AbstractHttpClientServerTest to include a name for SSL to improve clarity on the test ' s purpose of the test
added error handling for format exceptions in TransformationHelper . java to improve robustness and provide clearer error messages during transformation failures
replaced ` userPermissions ` with ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity by accurately
replaced direct equality check with EqualsBuilder for better readability to improve code maintainability and leverage Apache Commons Lang ' s EqualsBuilder
modified the process method to handle null outputRoot gracefully to improve robustness by avoiding potential NullPointerExceptions
added AnnotationFilter interface and modified PDPage , PDRenderer , and PageDrawer classes to implement annotation filtering functionality to enhance flexibility in annotation processing
refactor StackTraceCleaner class to improve stack trace handling to enhance performance and maintainability of stack trace processing
updated content type assignment for CSS and JavaScript files in PluginServlet to ensure proper content type is set for CSS and JavaScript files
hhh - 11341 : skip test that fail on oracle , sql server , and sybase
updated method parameters and logic in ForkController . java to improve clarity and functionality to enhance code readability and ensure proper handling of version values
added a new ` getStats ( ) ` method to various classes and changed ` AtomicInteger ` to ` AtomicLong ` in ` DocBuilder ` to
added support for long polling in KieClient and KieConfig classes to improve responsiveness and control over configuration refresh behavior
replaced ` fling ` method with ` scroll ` method in ` PagedView ` , ` BaseOverview ` , and ` Launcher
replaced the instantiation of UnlocksDialog in UI . java and added a button in PausedDialog . java to improve unlocking functionality and
added a call to clear the drop list in PlayerEventListener to ensure the event ' s drop state is reset before further processing
added a constant DEFAULT _ PARAM in StreamResult . java to provide a default parameter for input name handling
updated the ` testNormalizeOrder ` method to throw ` IOException ` instead of ` MalformedURLException ` to improve error handling by explicitly indicating that the method
updated print statement to include the chunk type and adjusted the PlanIndex skip logic to improve clarity of output by including the chunk type in the
added headersToExclude field and modified header filtering logic in UmbrellaHeader . java and ProjectGeneratorTest . java to exclude specific Swift
renamed the method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java `
added encode ( ) method to RequestPlugin . java to enable proper encoding of request data
refactor expression handling in RolapNativeSql to differentiate between DB2 and MySQL environments to ensure accurate expression representation for better compatibility across different
added validation for null or blank password in LdapAuthenticationProviderImpl . java and created a new test class TestLdapAuthenticationProviderImpl . java to
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear the complexWriters list in ProjectRecordBatch . java to ensure that complexWriters is properly cleared when conditions are met
added @ SuppressWarnings ( " serial " ) annotations across multiple Java files to suppress serialization warnings and improve code clarity
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and updated the condition to check for null ` classInfo ` to improve
added schema error handling for " _ errors " in ErrorResponseException . java to improve error reporting and provide clearer diagnostics for schema errors
added a constructor to the EventSourcingRepository class to initialize EventSourcingRepository with required parameters
refactor symbol definition logic for binary nodes in Attr . java to improve clarity and maintainability of the code
updated text selection logic in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle empty search text to improve user experience by preventing
[ nuovoconnector ] do n ' t write to data if not in standby mode
tmi - 712 : change default tiff planar configuration from chunk to chunk
added a call to close the InputStream in ItemListTag . java to ensure proper resource management and prevent potential memory leaks
move average calculation into a separate utility class to reduce code duplication .
added two new files , SigInt . java and SigIntBarrier . java , implementing asynchronous signal handling to provide a standardized way to
refactor graph model handling in ExporterGEXF to support hierarchical graphs and improve edge counting logic to enhance compatibility with hierarchical graphs and enhance
refactor TCTLSeparatedProtocol to replace nullBuf with nullText and update related methods to improve handling of null strings and enhance
[ # 7803 ] fix index out of bound exception in rubric response
updated the condition in CatalogComparator to check for original case instead of DB2Database to improve accuracy of schema comparison based on the original case
simonstewart : clean up the browsermobproxytest so that it do n ' t hang .
change format of criticalErrors to use Integer . toString ( ) instead of MessageFormat . format ( ) to improve performance and readability by avoiding
removed redundant calls to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline the code by eliminating unnecessary
truffle : fix typo in javadoc of internalbytearray and trufflestring
[ hotfix ] [ graph ] change return type of foreachedge to tuple2
updated multiple Java assertion classes for consistency and clarity to improve code maintainability and readability across the assertion framework
deleted the ClassA . java file and added a new DiacriticTest . java file to implement and test the diacritic
replaced CountDownLatch with CyclicBarrier in ClusterMembershipTest . java and added a new assertExecutionsDone method to improve synchronization handling
added error handling and improved workspace reader management in DefaultMaven . java and DefaultGraphBuilder . java to enhance robustness by ensuring proper
updated SSL scheme check in ServiceRegistryConfig . java and modified IP port assertion in TestServiceRegistryConfig . java to improve clarity in SSL
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to improve thread safety and ensure proper initialization of the servlet
added logging functionality and modified deltaServerTime handling in BinanceExchange and BinanceBaseService classes to improve traceability and manage deltaServerTime
added a condition to check if the binding starts with " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.
added null check for the component form before deregistering it to prevent potential NullPointerException when the form is not initialized
modified the ` decodeResource ` and ` drawBitmap ` methods to accept ` BitmapFactory . Options ` as a parameter to enhance functionality by allowing
[ java ] : use configurable number of message for publisher and subscriber .
added click and long click functionality for the tweet background in TimelineArrayAdapter to enhance user interaction by allowing immediate click actions and improving text
added " text " to the unmodifiableDataTypes list and modified conditional checks in NumberType and ColumnSnapshotGenerator to enhance data type handling and ensure
fix entryprocessorbouncingnodetest . testentryprocessorwhile2nodesarebouncing ( ) ( # 3683 )
updated the method from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` AmbariManagement
added a null check for the bridgeUid before adding results in CreateBridgeServlet . java and updated test cases in CreateBridgeServletTest . java
refactor ` PreconditionEnforcer ` and ` CrawlServer ` classes to improve robots expiration checks and synchronization to enhance code clarity and ensure
updated display name handling in multiple classes to check for null values to improve robustness by preventing potential NullPointerExceptions
updated SpriteBatch constructor to accept a default ShaderProgram parameter and refactored shader creation logic to improve flexibility in shader management and
added synchronous commit option to properties in TestUtil . java to enable synchronous processing for improved performance
added elementTypeCoercer and modified fillSortedSet method in SortedSetTypeCoercer . java to handle duplicate elements and improve type coerc
updated confirmation messages in RemoveFileDialogFragment and RemoveFilesDialogFragment to use conditional logic based on file type to improve clarity and maintainability
added a condition to check if the character is less than 256 in URLPathEncoder . java to prevent potential ArrayIndexOutOfBoundsException during URL encoding
add a port to the fragment storage registration in the user context .
removed the expect statement from HostResourceProviderTest . java to streamline test by eliminating unnecessary assertion
[ hotfix ] remove unused parameter from yarnentrypointutils # loadconfiguration
introduce init ( ) , validate ( ) , repaint ( ) , initColors ( ) , and initStyles ( ) to improve code
deleted the ` ShadowHtml . java ` file and modified tests in ` HtmlTest . java ` to simplify the codebase by eliminating unnecessary
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface
updated logger names from " org . eclipse . jetty " to " org . eclipse . jetty . http3 " and "
changed the visibility of the ` addListeners ` method from private to package - private in ` MockSettingsImpl ` to allow access to the method
[ hotfix ] fix checkstyle violation in statehandlestore
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . j
[ # 7012 ] instructor : add section ' None ' to section name of student ( # 7013 )
use try - with - resources to prevent resource leak
( chore ) camel - test : avoid use a hardcoded port
refactor methods in AndroidBuildConfigJavaLibrary , AndroidPrebuiltAar , DefaultJavaLibraryRules , and JarBuildStepsFactory to improve
no effective change - remove # validating - cerficates reference
api : remove unused getpagesizeval ( ) method from listcapacity api
added handling for the CLOSED case in IteratingCallback . java to prevent further processing when the callback is closed
added an ` isAuthorized ` field and modified the constructor in ` AccessControlContext ` , ` AccessController ` , and ` ProtectionDomain ` classes
added a check to ensure the application is not an instance of AbstractOSGiApp before sending a DEPLOYING _ EVENT to improve robust
added handling for TIFF types in DLNAMediaInfo . java to ensure proper MIME type assignment for TIFF resources
[ gr - 21212 ] fix thread safety issue in optimizedcalltarget . profilearguments ( ) .
added a new file ` CubocDesktop . java ` and refactored ` Cubocy ` and ` Map . java `
updated PolicyMonitor initialization to use target directory instead of test resource directories to ensure compatibility with the target directory for monitoring tests
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure that all files are removed from the trashbin list
replaced org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) with org . sun . jdi . Bootstrap . virtual
truffle : add checkglobalnode to allow check if the descriptor exists .
updated the ` createLauncherEvent ` method to include an additional ` Intent ` parameter to enhance event handling by including additional properties related to launch source
add a constant for the maximum burn amount and update the return statement accordingly to improve code readability and maintainability by using a more descriptive
updated UniqueConstraintSnapshotGeneratorSnowflake to use wildcard imports and refactored the snapshotObject method to improve code readability and maintainability
refactor DMLTransformer to handle empty insertStatementBuilder and adjust item assignment logic to improve clarity and correctness of SQL query generation
updated the pgtUrl parameter from " http : / / www . github . com " to " https : / / www . github .
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added a ` hideDefaultName ` method to enhance functionality
refactor JarLauncher to improve code structure to enhance maintainability and readability of the code
added generic type parameters to several classes for better type safety to enhance type safety and prevent potential runtime errors
add a dimension to the configuration and fix a check for the peer type .
added a test method for updating PGobject in ResultSetTest . java to ensure correct functionality of PGobject updates in the ResultSet
updated password reset endpoint to handle non - UAA origins and added a test for non - UAA origin scenarios to improve error handling and ensure
replaced the method of obtaining the propertiesElement from getChildNodes ( ) to getDocumentElement ( ) to improve clarity by directly accessing the document
updated caching logic in Cache . java to improve performance and efficiency of cache operations
rename ` ` timeinsec ' ' and ` ` prevtimeinsec ' ' to ` ` timeMillis ' ' and ` ` prev
fix light relay not be able to bind if they be invalid .
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to return a new instance of ` Ch
refactor Model class to improve code readability to enhance maintainability and facilitate future development
update recordedTime calculation to include a value of 619315200000L to ensure accurate tracking of memory usage
added a condition to resize the status if the terminal type starts with ` AbstractWindowsTerminal . TYPE _ WINDOWS ` to ensure proper handling of
updated host version state management in UpdateDesiredStackAction . java and added a conditional check in RepositoryVersionState . java to ensure proper state management
move jre _ bundle _ deploy . jar to src / j2cl / transpiler / integration / javatests
use linkedhashset instead of hashmap to preserve order
removed unnecessary try - catch block in OperationServiceImpl . java to simplify code and improve readability by eliminating unnecessary exception handling
reformatted the method call for resolving property configuration in KnativeEnvironment . java to improve code readability and maintainability
updated the executor name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in naming con
added connection methods and a test for CloudSolrClient uploads in TestCloudSolrClientConnections . java to ensure proper handling of configuration uploads and validate
synchronize access to allbindings to prevent concurrentmodificationexception
added methods to clear temporary files and cache in ShadowContext . java and updated file handling methods in RobolectricTestRunner . java to
added TreeMap class to SecureXStream and modified styles in XStreamPersisterTest to ensure consistent ordering of styles and improve test coverage
[ drools - 7 ] allow to pass a kiemodulemodel to the kiemodulebuilder ( # 386 )
updated logic for handling Farmland instances in BlockEventListener . java to improve clarity and functionality to ensure proper handling of farmland
added a default implementation of the ` getLocalIp ` method in the ` FinishedSpan ` class to provide a default implementation for retrieving the local IP
updated execution context handling and added new test cases in JdbcStepExecutionDaoTests and StatefulRetryStepFactoryBeanTests to ensure correct serialization and
fix checkstyle issue in util / dictionary / hhmmsegmenter . java and worddictionary . java
* add ` ` - python - gpu ' ' and ` ` - python - gpu ' ' to presets for pytorch ( pull #
refactor JTable initialization and introduce a refresh button in PluginTab . java to improve code readability and maintainability by encapsulating plugin
changed log level from info to warn for various log messages related to history file reloading , saving , and trimming history files to improve logging
server : fix npe in vmwarestorageprocessor when vmware be down
http : / / issues . apache . org / activemq / browse / amq - 2635 - use stop ( true )
rename ExperimentalMockitoJUnitRunner . java file to improve clarity and maintain consistency in naming conventions
updated GpsSettingsActivity , Session , and HttpUrlLogger to use Utilities . GetBuildSerial ( ) instead of Build . SERIAL to
refactor SwapGBuffers class for improved performance to enhance efficiency and reduce memory usage
remove the skeleton control if it ' s null and it ' s not null to prevent potential NullPointerExceptions when the skeleton control is not set
added a new method ` setSmartReplies ` in ` ShadowRankingTest ` and refactored ` ShadowRanking ` to use `
[ java ] only add segment to archive directory if it do n ' t already exist .
updated the initialization of ` carrot2ResourcesDir ` to remove the ` resourceLoader . getConfigDir ( ) ` call to simplify the code
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new file ` bug8004298 .
updated the ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to reflect
added exception handling for null keys in RecommenderMapper , Retriever , and CacheTest classes to improve error handling and provide clearer feedback when
added clientInfo to the SurrogateAuthenticationEventListenerTests to manage client - specific information during tests
added a boolean variable ` isUserView ` and initialized it to false in ` CardPresenter . java ` to control the visibility of the user view
replaced instances of ` GraphvizJavaExecutorUtility . isGraphvizJavaAvailable ` with ` GraphvizUtility . isGraphvizJavaAvailable
logdispatcherthreadexceptionmetrics : create histogram for constructbatch , synclogtimeperrequest , and synclogtimeperrequest
added a new module - info . java file for the sqlite connector to define module exports and dependencies for SQLite
added a delay of 500 milliseconds in StreamResetTest . java to allow for a longer time for stream reset operations
removed conditional check for " new " type in PermissionsManager initialization to simplify code logic for better readability and maintainability
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a depth method to SpringLoadedState that returns a fixed value of 0.5 f to provide a default implementation for depth management in the
refactor BinaryDecoder to use a constant for the minimum size and replace System . arraycopy with Arrays . copyOfRange to improve code readability and
[ hotfix ] fix checkstyle violation in executiongraph
removed and refactored notification handling in NotificationActivity and NotificationRenderer to streamline notification management and improve UI responsiveness
updated exception handling in DefaultExceptionConverter to handle null invocation and improved test assertions in ExceptionsTest and EndpointTest to enhance robustness of exception
fix checkstyle issue in util / glowcontainer . java ( # 787 )
replaced MethodHandle with targetClass ' s getDeclaredMethod for setting methods to improve compatibility with Java ' s reflection framework
changed the type of value1 , value2 , and value3 from ` int ` to ` Integer ` in MathTest . java to ensure
[ te ] group - regression fix for email subject setting to fix the # 9445
added functionality to manage a layout provided panel in LayoutPanel . java to enhance the user interface by displaying appropriate components based on layout settings
added a null check for the location in the dead server check to prevent potential NullPointerException when location is null
fix javadoc warning in builderfactory , pipeline , and pipeliningtest
added null check for DSAPublicKey parameters and simplified public key generation to enhance error handling for missing keys and improve code clarity
updated the logic for ignoring media types in MediaTypeRequestMatcher to improve clarity and maintainability of media type matching logic
refactor task number handling in LlapBaseInputFormat . java to improve clarity and consistency to enhance code readability and maintainability by
added a properties property to the SpringBootTest annotation in EventServiceTests . java to allow bean definition overriding in the test configuration
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
refactor package structure and import statements for BTCMarketsStreamingService and BTCMarketsStreamingAdapters to improve organization and clarity of
add a new test method issue151 in FencedCodeBlockParserTest to ensure proper rendering of fenced code blocks without unnecessary HTML tags
added a new file ` CompatibilityTest . java ` with methods for testing internal DTDs and property loading to facilitate testing
added new files PushUtils . java and SecurityUtils . java to provide utility functions for push registration and key management in the application
updated the logic for determining the number of replicas and rebalance in TableRebalancer . java and added assertions in TableRebalancerTest . java
bump version to 2.7 . 0 and update release note
use system . getproperty ( ` ` line . separator ' ' ) instead of \ r
throw a sockettimeoutexception instead of sockettimeoutexception when ajp be use .
initialize friction , restitution , density , and isSensor fields to zero in FixtureDef . java to ensure default values for
updated method names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and consistency in naming
added error handling for the " am wait - for - broadcast - idle " shell command in LauncherInstrumentation . java to improve robustness
added tests for reading strings with font and link tags in ResourcesTest to ensure proper handling of attributes in font and link tags
move guistatscomponent to src / common / net / minecraft / src / common / net / minecraft / src _ work
added phone permission request handling in Launcher . java and a utility method in Utilities . java to improve user experience by ensuring proper permission management and
updated return values and refactored method signatures in multiple classes to include FlightData parameter to enhance functionality and improve user interaction with flight data
refactor GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and GeoEncodingUtils classes to improve code read
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to provide a way to check if the Docker
added a constant for VPX codec type in CodecTypes . java to support support for VPX format in the application
added a coordinator address option to DistBuildFactory and DistBuildRunCommand , and modified the getCoordinatorAddress method in AbstractDistBuildExecutor
added a new method ` match ` in ` FsUtils ` and refactored the timer instantiation in ` WrapTimer ` to improve path matching
added a conditional check before adding label values in TestTaxonomyFacetSumValueSource . java to ensure labelValues are only added when the value is
fix npe and good handling of undefined bug
removed the @ Test annotation from TestPerfBenchMarkDriver . java to eliminate unnecessary test execution during testing
added materialization time updates in ObjectStore and created a test for MaterializationTime in TestObjectStore to ensure correct materialization time is set
added ` UnsatisfiedLinkError ` handling to several methods in ` VoskSTTService . java ` to improve error handling by
remove the ' is _ one _ way ' property and update the response code for browse / clear messages in JMSSamplerGui and J
refactor break weight calculation in GlyphView . java to improve clarity and maintainability of break weight logic
refactor checksum handling in RCFile . java to improve efficiency and clarity to enhance readability and maintainability of the code
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 related to
added unwound data entries for step and processor counts in ToePool . java to improve clarity and organization of step and processor counts
removed the ` keysToDataFlavorArray ` parameter and simplified the comparison logic in ` DataTransferer ` to streamline the code and
hbase : added random infoport to testthriftservercmdline
added a check for EOF state in the RegExpScanner class to prevent processing when the scanner is at the end of the file
refactor metric and timer handling in Debug . java to use sets for enabled metrics and timers to improve performance and maintainability by reducing redundant
fix npe in chatroomjabberimpl when try to send a message with a null nickname .
add null and empty check for filename in papplet . getfile ( )
refactor refresh token creation logic into a separate method to improve code readability and maintainability
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] remove jobregistry . getrunningjobsregistry call from yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` to the ` ShadowNativeImageReaderSurfaceImage ` class to provide a way to retrieve
updated BTCChinaExchange to set a SSL URI for the market data service to ensure the service connects to the correct BTCChina
make relative file path work right in cpdtask to sameer nanda for the bug report
added OauthController and Oauth2PluginTest classes to implement OAuth2 authorization handling and plugin integration tests
refactor SemgrexPattern class for improved readability to enhance maintainability and clarity of the code
added ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and removed them from ` EntryStream ` and ` StreamEx
( chore ) camel - rest : fix exceptiontoproducerresponseconverter to return a failure response
updated the ` shouldComeFromThisClassLoader ` boolean condition to include a comment to clarify that Android projects with mixed scala tests
do n ' t allow transcoding of non - transcoding sdp
updated type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added a new test case in CreateTableGeneratorTest
[ geot - 6892 ] add test for station _ gml31 and station _ gml32 in normalizedmultivaluestest
added a volatile boolean field ` wasInvoked ` and modified related methods in ` NetworkTestUtils ` , ` UaaHttpRequestUtilsTest ` ,
capture the provenance for rowprocessor regex map field to fix # 7512
updated the ` CustomSeekProvider ` to use a constant for seek length and refactored the ` splitIntoThirtySecondsParts ` method
added XLCDCommunicator and XLCDController classes , and refactored firmware detection logic to use a switch statement to improve
[ drools - 7 ] avoid to load kmodule . xsd via jaxb
updated conditional checks in EventQuery001 , EventQuery002 , and EventQuery004 to ensure retry times are greater than zero to improve robustness
refactor thread state management by replacing awaitThreadStates with join methods in WorkerProcessPoolTest . java to improve clarity and maintainability of
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
reduce freeze and unfreeze values from 20000 to 10000 in EnergyCost . java to improve resource allocation for better performance
updated method signature and added ConfigurationException handling in DownloadPlugins . java to improve error handling and ensure proper configuration management during command execution
deleted the SpringTransactionHooks . java file and changed the target class to AbstractSpringTransactionHooks in SpringTransactionHooksTest . java to stream
refactor AbstractClassAssert by renaming and modifying its functionalities to improve clarity of the code
added a new file ` GetUninitializedStringValue . java ` with a test class ` GetUninitializedStringValueTarg ` to verify the behavior
added a providedDepsQuery field and modified dependency resolution logic in AndroidLibraryDescription . java and GraphEnhancementQueryEnvironment . java to support
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC in FeatureFlags . java to enable synchronization of keyboard animations
added a boolean flag ` sSavedBugreport ` and modified the handling of ` systemAnomalyMessage ` in ` FailureWatcher . java `
added a constant for " cinepack " format in FormatConfiguration . java and updated format handling in LibMediaInfoParser . java to support
added camera bobbing functionality and modified hand movement animation offset to enhance user experience by allowing control over camera behavior during hand movement
updated the method from ` describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java `
deleted the HSQLDBServerFilesFilter . java file and replaced it with a custom FilenameFilter in TestUtility . java to simplify file listing
walletappkit : fix wallet be n ' t move out of the way on restore , prevent the actual restore .
fix tv series never be find locally by imdb id to fix #
added a method to check if a type exists before proceeding with a method invocation to ensure that method invocations are only processed if the type matches
replaced hardcoded array size with a constant for the number of values in AmbientCubemap . java to improve maintainability and
bugfix # 253323 , display info when mode be not configure properly .
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , GenericUDFMaskLastN , GenericUDF
test : use temporaryfolder instead of file . createtempfile ( )
add isitemstackdamageable ( ) and gethassubtypes ( ) method to itemstack .
fix mc - 167447 : add line width to renderstate . renderline ( ) .
simonstewart : make the firefox startup page configurable
added a condition to check for CONNECT and GET requests in Http1xClientConnection . java to ensure proper handling of HTTP / 1.1
fix ebean : add query - beans maven integration to fix #
use closeidleconnections ( ) instead of shutdown ( ) for httpclient
added a conditional check for the presence of the aggregate function suffix before creating a new metric in AmbariMetaInfo . java to ensure that
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to utilize this new method to improve modularity and
added a new file ` Solution . java ` containing a class to calculate and print frequencies from an integer to provide a solution for counting occurrences of
do n ' t set socketchannel . ch1 to null in clusteredagentmanagerimpl . java .
rename MutisignOperationerGodicTest . java file to improve clarity and maintain consistency in naming conventions
added error handling for ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` in ` StaxEventItemReader `
replaced specific imports with a wildcard import and modified return statements in ShadowTextView . java , TestAttributeSet . java , and TestAttribute
updated JSON imports from com . nimbusds . jose . shaded to net . minidev . json in ClaimConversionService
updated architecture check from " Linux " to " AIX " and added a new mapping for " Linux - s390x - 64 "
server : fix router control ip for vr ( # 5649 )
added a new method invokeWithoutBlockingWithResultSync to handle synchronous invocation of runnables to enable blocking behavior without freezing the main thread
remove presencemessagecompositetests since it ' s not use anymore
change outRect calculations from type casting to using Math . round to improve precision in dimension calculations
[ hotfix ] [ test ] fix checkstyle violation in testclusterdumper
hbase - 16400 fix the class size calculation in kv . getrowcache ( )
camel - 16400 : added type converter to the defaultcamelcontext so it can be use a custom type converter .
added handling for ConditionalTask instances in SparkCrossProductCheck . java to enable processing of conditional tasks in Spark execution
refactor action handling in Launcher , LauncherAppState , and LauncherModel classes to improve code organization and ensure proper reloading of
update LoginInfoEndpoint to include a condition for jsonResponse in the account chooser logic to ensure proper handling when either discovery or account chooser is enabled without a valid JSON response
hbase - 16400 add todescriptivestring ( ) method in assignmentmanager # tostring ( ) ; addendum
added a new field ' msg ' and ' result ' to the HuobiAccountInfo class and updated related methods accordingly to improve clarity
added reserved words for " PERIOD " in MariaDBDatabase and created a test for it in AddColumnGeneratorTest to ensure correct SQL
[ beam - 8470 ] add documentation for portable worker . portable . worker . portable . worker . portable . worker .
update VersionChangeLogs . java to include additional instructions for Android 7.1 to improve clarity and usability of version change logs for better
changed the visibility of NUM _ MILLIS _ IN _ DAY from private to public in TestUtil . java to allow access to NUM _ MILLI
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] check that aeron client must use a conductor agent invoker before invoke it .
updated validation logic in ` Attr . java ` and added a new class ` NoWarnOnImplicitParams . java ` to handle implicit lambda parameters
refactor menu item visibility handling by introducing showMenuItem and hideMenuItems methods to improve code readability and reduce redundancy in hiding multiple menu
updated BTCETransHistoryResult to include BTC _ deposit instead of withdrawal and modified BTCETransHistoryJSONTest
replaced List with Set for HttpStatus series and exceptions in RetryFilterFunctions . java to improve performance and maintain consistency in handling HTTP status series and
added @ Deprecated annotation to PluginLoader . java to indicate that the PluginLoader class is outdated and should no longer be used
updated the condition in LastQueryExecutor to include a check for sequence timestamps and added a new test case in IoTDBLastIT to ensure correct
updated newline character handling in HttpResponse . java to ensure consistent formatting of request strings
added a static block to set the HTTP wire log level to " ERROR " in BuildImageMojo . java to ensure proper logging behavior for
added safe area setting for the title bar in Sheet . java to enhance user experience by ensuring title area is safe
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to improve performance by avoiding unnecessary iteration over the list
added SQL parsing and deparsing for the ALTER TABLE statement in AlterTest . java to ensure that the SQL syntax is correctly validated and
fix the bug : make the copystate ( ) method public to facilitate wrapper who want to copy / modify the configuration for use in multiple pool instance
fixed - rexecutorservice . getexecutor ( ) method return remotepromise . tocompletablefuture ( ) method return remotepromise . tocomplet
add constant suffix _ split _ file to make it easy to identify . part file
[ hotfix ] [ table ] fix checkstyle violation in orc module
refactor conditional statements in CompareFunctionsProcessor . java for improved readability to enhance code clarity and maintainability
avoid checkavailablediskspace ( ) in case of insufficient disk space
removed the ` toString ( IndexReader ir ) ` method from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTerm
added null check for mLastGestureState and unregistering the task stack listener in AbsSwipeUpHandler and TaskAnimationManager to ensure
added methods to get and set lock timestamp in AppPreferences and refactored preference management in PreferenceManager and PassCodeManager to improve code organization
refactor artist retrieval logic in MediaInfoParser . java to use a dedicated method to improve code readability and maintainability by centralizing artist
add a null check for remoteMessage before accessing its data to prevent potential NullPointerException when handling incoming messages
nifi - 1642 : fix splittext to handle empty input
added support for Windows - specific key store type in HttpsConnectorFactory to enhance compatibility with Windows environments
increased the default check timeout from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to
added a conditional check for FILE _ NOT _ FOUND in FileSyncAdapter . java to handle cases where the remote folder is not found to
added animation capabilities to the Slider class to enhance the control over the slider ' s animation behavior
replaced occurrences of ` eol ` with ` lineSeparator ` in ` LineSeparatorProcessorTest . java ` to ensure consistency in naming conventions across
reduced the maximum width and height from 512 to 1024 in TexturePacker . java to optimize memory usage and improve performance
added a new test method ` negatedTernaryNotUnwrapped ` to the ` UnnecessaryParenthesesTest ` class and modified the `
camel - hazelcast : fix potential npe in poll ( )
began write test for the testrunner in preparation for refactoring
replace Math . round with Float . compare for score comparison to improve precision in score comparison
updated DENSITY constants in AddAndScaleMultiImage . java and ResourceEditorApp . java for better resource management to improve code clarity
add array class element offset getter and modify array copy snippet to use it to improve configuration flexibility for array class element offset
log4j2 - 1343 : do n ' t log message when there be no metric to publish .
added support for remote SCM management in Configuration and RuntimeEnvironment classes to enable users to turn on / off support for remote SCM systems
added conditions to check for additional states in the MieleApplianceHandler to ensure proper handling of state transitions in the appliance process
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to standardize
rename the variable ` log ` to ` LOG ` for consistency to improve code readability and maintainability
added tests for ` ProjectGenerationEvent . Finished ` and ` ProjectGenerationEvent . Started ` in ` EventSerializationTest . java ` to ensure
ggb - 1353 selectionmanager need to update spec point on selection change
updated JavaCompiler class implementation to enhance compilation efficiency and fix existing bugs
hbase - 16400 add check for non - positive amount of time left for random read in integrationtesttimeboundedrequestswithregionre
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added " - gc - sections " and " - nocopyreloc " options to the ldflags list in NdkCxx
updated the ` SpringCloudCircuitBreakerFilterFactory ` to expand the fallback URI and added a new test in ` SpringCloudCircuitBreakerTestConfig
danielwagnerhall : fix javadoc warning in java . desktop
namespace aware process fix for readonlysharedstringstable to match the one recently add to xssfsheetxmlhandler
added a new method ` getAccountNet ` to the ` HttpMethed ` class and a corresponding test in ` HttpTestAccount001 `
added a null check for availTextWidth in SwingUtilities2 . java and improved error handling in Test6635110 . java to
add cobertura code coverage and start to clean up some cruftiness in the io package
replaced HTML tags with HTML tags for title and body in NotificationUtils . java to ensure proper HTML formatting for better user experience
doc : generate sample code in the java microgenerator ( # 174 )
add a test to verify that delete any existing question do n ' t cause the test to fail
updated return values in HSSFSheet . java and added new assertions in BaseTestSheet . java to ensure accurate row number comparisons and validate
added permission checks in ` InstallShortcutReceiver ` , ` Launcher ` , and ` PackageManagerHelper ` classes and refactored ` Pending
[ java ] rename pendingsessions to pendingclustersessions for clarity .
refactored hashCode and equals methods in AbstractParquetMapInspector to improve clarity and consistency to enhance code readability and maintainability by
added flush and release buffer operations in HTTP3StreamConnection when remotelyClosed to ensure proper resource management and prevent potential memory leaks
added AutoCloseable interface to SplitReader and removed the close method to enhance resource management and prevent potential memory leaks
remove the deepCopy method from the GsonBuilder class to simplify the code and improve maintainability by eliminating unnecessary duplication features
sulong : cache sulong . not _ found instead of null .
refactor file opening logic in RestClientRequestImpl to use CompletableFuture for improved asynchronous handling to enhance code readability and maintainability while ensuring
removed unnecessary whitespace in dispatchStatusString method call to improve code readability and maintain consistency
replaced the class loader usage in MockFactory with a new SearchingClassLoader class to enhance class loading efficiency by combining parent class loaders
add a new test file ` TestRefreshFlagBug . java ` that demonstrates the behavior of the ` ` refresh ' ' feature
added a condition to check for LEFT _ SEMI _ JOIN type in the ConstantPropagateProcFactory to support handling of left - semi joins
modified response completion logic in HttpReceiver . java and HttpSender . java to check for CONTINUE _ 100 status to ensure proper handling of response
replace arraylengthoffset with arrayopdesclengthoffset in lirbuilder and safepointop
http : / / issues . apache . org / jira / browse / amq - 4370 - add default policy to the broker
modify multiple Java files related to Kerberos functionality to improve code consistency and maintainability across the project
added a check to ensure the application context is not running before stopping it to prevent potential errors when the application is not running
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return a GlyphLayout instead of void for better
refactor metrics handling in SpringmvcClient and improve error handling in CodeFirstSpringmvc to streamline metrics retrieval and enhance error
updated the return type of ` accountAgeWitnessMap . contains ( hashAsByteArray ) ` to ` accountAgeWitnessMap . contains ( hash
reformatted code for consistency and clarity in StructureHeader . java and StructureReader . java to improve code readability and maintainability
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated related tests to enhance web flow interceptor management for resource URL providers
added dexreturninliner to dexbody . dexbody . dexbody . dexbody . dexreturnin
add additional property to enrichedruledto ( # 3649 )
removed NOFOLLOW _ LINKS option from directory listing in PathResource . java and added new symlink directory arguments in AliasCheckerSymlinkTest . java
[ flink - 8984 ] [ sql - client ] fix can not switch dialect in sql cli
replaced ` rDotJavaPackages ` with ` hasRDotJavaPackages ` and introduced a ` hasRDotJavaPackagesSupplier ` to
pmd : add test case for pmdpackagedeclaration
added a method to set the minimum cross compaction unseq file level in IoTDBDescriptor to allow configuration of the minimum cross compaction unseq file
[ hotfix ] move activeresourcemanager into resourcemanager . active package
rename the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify the
updated the URI creation logic in the ZipResource class and added a test for file handling with spaces in the path to improve URI handling and ensure correct path parsing for feature files
reformatted code for consistency and clarity in ExpandableUploadListAdapter . java to improve code readability and maintainability
refactor RobolectricTestRunner to merge parent class and method configurations based on class hierarchy to enhance configuration merging functionality for better test coverage
replaced direct usage of ` Lists . newArrayList ` with ` Iterables . filter ` in ` ModelLoader . java ` to improve code readability
changed method visibility from abstract to package - private in AbstractDataChangedListener and refactored WebsocketDataChangedListener to extend from AbstractData
updated JSONPojoConvertor to handle enum types and added color functionality to enhance JSON processing capabilities and improve color management
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the option will
changed the type of ` originalPayload ` from ` String ` to ` byte [ ] ` and refactored related code for better memory management
yrocontrol : add orientationcorrectionlistener to handle device orientation change
change biome _ list _ size to be the length of the biomedictionary . getbiomegenarray ( ) . length
replaced ` println ` with ` print ` for evaluation functions in ` GetInterfaceTest . java ` to simplify code and improve readability by
updated the declaration of the environment variable in FileCompilerConfig . java to ensure consistent access to the jdtCompiler ' s environment
added a new interface ` ByteToLongCollector ` in the package ` com . speedment . common . function . collector ` to provide a standard
added a preload option to MMapDirectoryFactory to control the loading behavior of the map directory
added custom metrics for enabled components in BukkitPlatform . java to enhance monitoring capabilities for component settings
refactor QuickConnectREST class to improve code readability to enhance maintainability and facilitate future development
added aspect ratio and default card image in CardPresenter . java to improve image display quality for better user experience
[ ds - 3770 ] fix login redirect to the correct url in authenticationcountselector
updated cloning logic for longValues , doubleValues , decimalValues , byteValues , and byteStarts in VectorHashKeyWrapper . java to handle
[ gr - 36464 ] add test for system . nanotime ( ) jit .
added null check for the line variable in MultiPartFilter . java and printed the request field in MultipartFilterTest . java to ensure robust handling
add livingexperiencedropevent . getdroppedexperience ( ) , close # 2273
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use localized messages to improve localization support and provide clearer feedback for configuration
[ sql ] remove unsupportedoperatorvisitor from planner . validate ( )
added support for RDepsFunction in GraphEnhancementQueryEnvironment and updated related tests to enhance dependency management and improve test coverage for RDeps
refactor Character class to improve code readability to enhance maintainability and facilitate future development
added logic to scale the entire rocket based on its type in ScaleDialog . java to ensure that the selection option is only selected when the
replaced ` Arrays . toString ( ) ` with direct usage of ` bytes ` in assertions in ` UpdateableResultTest . java ` to
added null checks and refactored time boundary attachment logic in BaseBrokerRequestHandler . java to improve error handling and streamline the process of attach
simplify the logic for add the socketref to the poller in the apr connector .
updated regex pattern and modified album title extraction logic in EightmusesRipper . java to improve URL handling and enhance title extraction accuracy
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple files to standardize the
added a condition to check if the device is a phone and not landscape in QuickstepLauncher . java to ensure proper handling of phone -
replaced calls to ` getValue ( query , PROPERTY ) ` with ` unwrap ( QueryImpl . class ) ` in ` PartTreeJpa
replaced direct calls to ` Files . readAllLines ` with a new method ` readMatchingLines ` to improve security by using privileged access
removed dynamic check for ` getResultStream ` method in ` JpaQueryExecution ` to simplify the code by eliminating unnecessary method invocation
added null check for entity in PhysicsProcess . java to ensure robustness by avoiding potential NullPointerExceptions
added test to verify that delete entry processor clears the map when the value attribute is indexed to ensure that the entry processor behaves correctly when the
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated color calculation and modified HTML message format in Utils . java and UtilsTest . java to enhance color handling and improve message formatting for better read
fix disabling of menu item and normalize name field ( # 9441 )
updated scratch path format in Aapt2Link . java and added RmStep . java for recursive build steps to improve file path management and
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest .
ggb - 1353 do n ' t update selection when clear euclidian
http : / / issues . apache . org / activemq / browse / amq - 2635 - improve error handling for cql
implemented the ` isCanceled ( ) ` method across multiple classes to provide a consistent way to determine if a call can be canceled
refactored the ` isAnnotationPresent ` method across multiple classes to include a default implementation to improve method usability by providing a default implementation
added a default implementation of the ` removeAllWidgets ` method in the ` UILayout ` class to indicate that the method is not yet implemented
[ hotfix ] [ yarn ] fix test failure in yarnsessionfifoitcase
opensslcipher : use the maximum of the output size if the input length do n ' t match .
added video transcoding logic for high - res content in PlaybackController . java to ensure proper handling of high - res content based on the
[ spark dataset ] add dataset . show ( ) to readsourcetranslatorbatch ( )
replaced specific imports with a wildcard import and modified listener management logic in GpsLoggingService . java to streamline import statements and improve listener
changed the parameter type of ` putString ` from ` boolean [ ] fullwidths ` to ` byte [ ] fullwidths ` and modified wide attribute
added import for BaseItemDragListener and modified item assignment logic in FolderIcon . java to enhance drag - and - drop functionality for better item
added a new method ` createEmptyArtifact ` to multiple connector classes and updated return logic in ` AbstractRepositoryConnector ` to improve artifact creation functionality
removed unnecessary comments from configuration variables in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed conditional check for afterAug1 in VideoViewerActivity . java to simplify the condition for loading video links
camel - 16400 : camel - sftp should compact the path when create the file .
try to fix flaky test on slow ci server
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more descriptive
do n ' t plant double plant if they be large fern ( # 3649 )
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java ` to enable
server : fix npe in virtualmachinemanagerimpl . getvirtualmachine ( ) when fail to start
added a method to accept the license and modified the condition in DockerDatabaseWrapper to check if the test system is not DB2TestSystem to
optimization plot : fix selection of the selection unit in the selection dialog
added a new constant BTC _ ZMW in the CurrencyPair class to support trading functionality for BTC and ZMW
added a check to set the number of samples in the PBR lighting process to ensure that the PBR lighting is only applied when
updated assertions in StepWithSimpleTaskJobParserTests to remove unnecessary " job . " prefix to streamline test assertions for improved readability
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to enforce immutability and enforce immutability
make sure ggbabs ( ( 1 , 1 ) ) return ` ` ggbabs ( ( 1 , 1 ) ) ' '
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to ensure proper handling of service outputs
[ drools - 7 ] fix bigdecimal coercion in constraint parser
added " org . eclipse . jdt . " to WebAppContext . java to hide jdt usage by jetty
changed the return value of the ` useAuthCache ( ) ` method from ` super . useAuthCache ( ) ` to ` false `
capitalizing the first segment in the namespace to enhance readability and maintain consistency in namespace handling
camel - 16400 : direct producer should throw directconsumernotavailableexception instead of camelexchangeexception
added null check for zooKeeper before accessing its state to prevent potential NullPointerException when zooKeeper is not initialized
fix a typo in the progress bar message when initialize the mod phase 2
replace direct calls to ` mVibrator . cancel ( ) ` with a new method ` runOnUiHelperThread ( ) `
added a method to update the last remote stream ID in HTTP2Session . java to ensure that the session ' s last remote stream ID is
text antialiasing be now enable by default , fixes # 437
[ java ] : move termwindowsize to currentwindowsize and use sentposition instead of nexttermoffset .
refactor : remove static import of enums in ctannotationimpl . java ( # 2379 )
refactor ExoPlayer class to improve code structure to enhance maintainability and readability of the code
update getRGBPixelImpl to return a new Rectangle object instead of a native method to improve performance by using a more efficient method for retrieving pixel
added a new method ` newPrintStream ` to handle different encoding options for output streams to improve flexibility in setting output stream encoding based on
increased the vibrate duration from 1 to 25 milliseconds in TouchableMovementMethod . java to improve user experience by allowing more
updated import statements in AppEngineSqlCloudSession . java , FlybushDataClearer . java , and TestEnvironment . java to
refactor constructor parameters in WebSocketClient for consistency to improve code readability and maintainability
simonstewart : make the i18n test more reliable
[ gr - 21212 ] fix error handle in bytecodeparser . parseconstant .
added context . restoreAuthSystemState ( ) to XmlWorkflowServiceIT . java to ensure proper management of authentication system state during tests
added a LowercaseComparator class and modified constructors in CoNLLUFeatures . java to use it to ensure case - insensitive comparison of strings
refactor source file parsing logic in JavadocTool . java and add new test package directory creation in T7091528 . java to improve
danielwagnerhall : add test for toggling an option in a multi select
added a validation check for the number of keys in HighestKvno . java to ensure the correct number of keys is used for processing
added error handling for attribute retrieval in HDF5BatchReader . java to ensure robustness by logging a warning for unsupported objects BTrees with 1
change bigqueryio . write return type to allow for future new functionality
fix npe in processgroupresource when upload binary content of the template file
added a new file TestMultiANewArray . java to implement a Java test for multi - dimensional class creation to ensure that multi - dimensional
do n ' t use usesecondarystoragevm config , it should be disable by default
refactor block ID retrieval logic in SyncBlockChainMsgHandler . java to improve clarity and maintainability of the code
added a method to set the theme for the PreviewTab content to ensure the correct theme is applied for the PreviewViewer component
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle timeout in ConnectorTimeoutTest . java and modified the connector idle timeout in ServerConnectorTimeoutTest . java to improve
make dictionary property configurable via propertiesutils . getstringarray ( )
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) `
updated parameter type and improved error message formatting in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to enhance code
changed log level from warn to debug in DistributedQueue . java to reduce log verbosity for better debugging
refactor color extraction logic to use a new method ` getHotseatPallete ` to improve code readability and maintainability by
added default table entry and cell transformer methods to TypeRegistry and implemented them in TypeRegistry to enhance flexibility in handling table entry and cell transformations
added an assertion to check if ` newAvailableShared ` is less than or equal to ` initShared ` to ensure proper validation of shared state
doc ( regen ) : update license year for generated file ( # 4382 )
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` , and updated its usage in ` WorkspaceAndProjectGenerator `
[ hotfix ] fix checkstyle violation in driverutils
added contact form routing and post contact form functionality in the application to enhance the application ' s capability to handle contact form interactions
guacamole - 1391 : implement getsystempermissions ( ) and getpermissions ( ) for connection and connectiongroup .
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
[ drools - 7 ] fix order of parameter in traitfactory . setmode ( )
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to enhance
replaced manual closing of PerDocConsumers with IOUtils . closeSafely to improve resource management and code readability
doc : fix typo in javadoc ( # 3649 )
added an OnClickListener to the overflowButton to ensure the menu is displayed on click to improve user interaction by allowing navigation to the overflow button
updated failure messages for null and non - null references in multiple classes to improve clarity in error reporting for better debugging
ggb - 1353 fix line height for help button in algebra view
move protobufferutilstest from network . p2p to core . util
fix wrong divider position and side pane width ( # 5373 )
fix bug in aux file generation due to crossref
[ geos - 9441 ] geoserverfeaturelocking should use metadatamap instead of map to avoid serialization issue
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity by indicating the purpose of the
fix metacontactavavarupdatenotfoundexception when metacontactavavarupdatetest fail
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command
added a test method to verify the cleanup of the audit log table in AuditLogTest . java to ensure that the audit log table is properly
changed the return type of the inject method from a generic type to an Object type to improve type safety and suppress unchecked warnings
added regex patterns and modified comment parsing logic in ACLFileParser . java to improve comment handling and enhance parsing accuracy
updated the ` isReadable ` method to include additional parameters for ` DrillTable ` and ` FileSystemPlugin ` to enhance functionality by providing additional context
refactor StarTreeImpl and StarTreeNodeImpl to use ancestorDimensionValues instead of ancestorDimensionNames to improve clarity and maintainability
added user unlock handling in TouchInteractionService and refactored closeOpenViews method in Launcher to improve user experience by ensuring views are only
change variable name from ' widthStr ' to ' positionStr ' to improve clarity by using a more descriptive variable name
refactor PKIXValidator logic to improve certificate validation logic to enhance clarity and maintainability of certificate validation process
[ hotfix ] [ hadoop ] [ test ] add archunit test for the test code
updated package names for AlibabaDubboIntegrationBootstrap , AlibabaDubboPluginTest , and ApacheDub
vpc : fix npe in listnetworks api call when listnetworks api call return non - existent domainid
updated method call from ` remove ` to ` get ` in ` RuntimeTypeAdapterFactoryFunctionalTest . java ` to ensure correct retrieval of
make storeundoinfo for property configurable
replaced direct access to ` System . getProperty ` with ` AccessController . doPrivileged ` for accessing ` gradProp ` to enhance security by restricting
[ java ] fix flaky test in streamclosetest . testclose ( )
modified the ` doAfterFlush ` method in ` DocConsumer ` , ` DocFieldProcessor ` , and ` TermVectorsConsumer ` classes to
updated ConfigurationMetadataGenerator to filter non - deprecated properties and added a new NestedConfigurationProperty annotation in AbstractJpaProperties to improve handling of deprecated
refactor capacity and mask variables to be final in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity and ensure
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and refactored file renaming logic in Hive to
do n ' t swallow exception in parallelniosender . send ( )
added null check for context in SchemeAndroidIDE . java to prevent potential NullPointerException when context is null
[ gr - 21212 ] fix classloading issue when use native - image .
changed the return type of the modifyGrantedAuthorities method from void to List and updated related logic in SwitchUserAuthorityChanger and SwitchUser
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and created new classes ` RawJaxrsIntegrationTest `
move setquerytimeout ( statement , int timeoutsec ) into poolutilities . setquerytimeout ( statement , int timeoutsec )
added DataProviders for general and supplementary character tests in XslSubstringTest . java to improve test coverage and facilitate easier
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for sequence functionality in MariaDBDatabase and updated CreateSequenceGenerator to include " NEXT VALUE FOR " to ensure compatibility with Maria
updated error messages for clarity in MappedResizeableBuffer , UnsafeBuffer , CompilerUtil , Int2ObjectCacheTest to improve code readability
replaced ` BrokerResponse ` with ` TableDataManagerProvider ` in multiple test files to enhance metrics tracking capabilities for better data management
updated the conditional check for " jsse . enableMFLExtension " to include " jsse . enableMFLNExtension " to ensure
replaced ObjectIterator with ObjectHashSetIterator for improved type safety to enhance code clarity and maintainability by using more descriptive class names
updated character remaining count from 22 to 23 in MainActivity , Compose . java , and TweetFragment . java to adjust the remaining character
add ttl to data point write buffer ( # 1181 )
modified the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter to control the prompt behavior for Xcode
added a method ` getTerrainAtCell ` to the ` TerrainGrid ` class to facilitate the retrieval of a ter
added default value handling in Pretty . java and created a new file T6665791 . java for Java compilation to ensure default values are
added error handling for FileNotFoundException in ResourceLoader . java to improve robustness by logging an error when the questEncryptionKeys . json file is
added a condition to check if the transport is not push before returning the push support to ensure proper handling of push requests in the transport
refactor PointValue class to improve code readability to enhance maintainability and ease of future updates
removed the sign calculation for local witnesses in BlockUtil . java to streamline the code by eliminating unnecessary complexity
modified return logic in FileSystemView . java to handle empty roots and added security checks in Win32ShellFolder2 . java to improve robustness
updated method names and logic in ColumnText and PdfPRow classes to improve clarity and functionality to enhance code readability and maintainability by
added a ` undoNotesList ` to manage undo state and refactored note removal logic in ` ListFragment . java ` to improve the
[ # 7803 ] uploadbackupdata : add logic to adjust feedback question id ( # 7803 )
added null check and exception handling for non - null data in bug8024061 . java to ensure proper error handling for non - null transfer
no effective change - remove unused pstmtdelegate
replaced ` Padding ` class with ` Rect ` for widget padding retrieval in ` AppWidgetResizeFrame ` and ` Launcher ` classes
refactor MethodHandle initialization in NashornBeansLinker . java to use a static block and add consStringFilter to improve code read
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
rename the latch variable from ' latch ' to ' goAwayLatch ' in IdleTimeoutTest . java to clarify the purpose of
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to improve cl
replaced ` ThreadLocal ` with ` null ` for the ` currentBook ` variable across multiple classes to simplify the handling of the ` current
modified the ` vote ` method in ` ContactSecurityVoter ` to support both ` MethodInvocation ` and ` Object ` types to enhance type
removed unused imports from DataLoader . java to improve code clarity and reduce unnecessary dependencies
added row affected tracking to the postUpdateLog method across multiple command steps to track and report the number of rows affected for updates
ggb - 1353 fix for top and left margin in scaler
set foregroundFPS and backgroundFPS to 60 seconds in JglfwApplicationConfiguration to improve responsiveness by defaulting to 60 fps
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent potential memory leaks
replaced DefaultWebSocketFrame with a ChannelFutureListener for closing the WebSocket frame to improve the handling of WebSocket frame closure events
updated listener classes and added new test cases in StateMachineErrorTests . java and DocsConfigurationSampleTests . java to enhance test coverage and
replaced the ` finish ( ) ` method with a new ` setListBackground ( ) ` method for setting the list background to improve code
updated StringUtils import from org . apache . commons . lang3 to org . openhab . core . util and added null check for line
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to facilitate the accumulation of user -
hbase - 16400 fix checkstyle violation in put / replicationsink
replace VALID _ CACHE _ SET with REGEXP _ CACHE and update regex compilation logic to improve performance by caching regex instances
added a static method ` reset ` to the ` GameThread ` class to provide a way to reset the game thread instance
added a null check for the realm in the login method to prevent potential null pointer exceptions during authentication
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and maintainability to enhance code readability and ensure proper merging of request
updated log messages in BasicConfigurator , LoggerContext , ConfigurationAction , and ContextInitializer classes to improve clarity of log messages and enhance debugging information
replaced the countDown ( ) call with a call to this . wakeup ( ) in CommitLog . java and HAService . java
added a condition to check if the Android version is not O in PhotoViewerActivity and implemented auto - complete functionality in UserAutoCompleteHelper to
updated schemaCrawlerOptions to set a basic schema info level instead of a minimum schema info level to ensure compatibility with the latest schema crawling
replaced ` zipOut ` with ` bufferedOutputStream ` in ` SaveTask . java ` and modified ` VizModel . java ` to
updated TestPayloads . java to utilize UTF - 8 encoding for random string generation and improved term creation to enhance test reliability and
fix mc - 103516 . fix npe in world . isvalid ( ) .
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter "
[ drools - 7 ] add a test case for multi - accumulate in marshalling to ensure that the marshalling of accumulate function behaves
fix switch / cases indentation see camel - 14540
pdfbox - 4892 : remove public modifier , a suggest by valerybokov
added HTTP method and headers support to RemoteEndpointServiceAccessStrategy to enhance access control by allowing dynamic HTTP method and URL resolution
added a new method ` newResponseBuilder ` to encapsulate the creation of ` ResponseBuilder ` to improve code readability and maintainability by
added a command start notification to the manager in AsyncBackgroundTaskManagerTest to notify when a command starts for better task management
refactored the ` computePreviewDrawingParams ` method to be public and added a null check for ` mReferenceDrawable ` to improve code
replaced instances of ` Tokenizer ` and ` TokenFilterFactory ` with ` CharFilterFactory ` in ` LukeRequestHandler . java `
replaced null checks with ParamChecks . nullNotPermitted for ' plot ' , ' generator ' , and ' hotspot ' parameters to enhance
added a verbosity parameter to the createSubContext method in JavacStep . java and ExecutionContext . java to control the verbosity of output
added null and case handling for schema in DbSqlSession . java to ensure proper conversion of schema to uppercase for Oracle databases
log4j2 - 1343 add context class name to contextdesc in asyncloggerallthreadcontextimplementationstest
added a new file TestShrinkToOneRegion . java that includes a main method to facilitate testing of the shrink - to - one
replaced ` split ( " , " ) ` with ` Splitter . on ( ' , ' ) . split ( customPackages ) `
updated context handling in AnalyzingInfixSuggester and added new test cases in AnalyzingInfixSuggesterTest to
updated the handling of local attachments in PushsaferMessageBuilder . java to improve clarity and correctness of the encoded string construction
removed the ` showLabelStats ` method from ` ModelExplorer ` and ` SequenceModelExplorer ` , and replaced ` provenanceHash ` with `
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed the ` FORMATTER ` variable from ` final static ` to ` static final static ` in multiple test classes to improve code readability and
updated the ` evaluate ` method to accept a ` Integer ` parameter and modified its implementation to use ` BigDecimal ` and ` RoundingMode ` to
replaced direct assignment of injectionEnabled and useIncludedLibrary with ConfigParser ' s valueAsOrElse method to improve code readability and leverage
changed class visibility of Test1 and Test2 from package - private to public to allow access to Test1 and Test2 from other packages
updated permission - related templates and variable names in PlayerEventListener . java to improve clarity and consistency in permission handling
updated the ` getAdditional ` method to include a session parameter in ` ConditionInConstantSet ` and modified its implementation in ` ConditionAndOr `
replaced ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` Base
added random box and circle creation and reset friction for contacts in Box2DCharacterControllerTest . java to improve test coverage and ensure
added tests for FLIGHT _ RECORDER _ OPTIONS in TestBadOptionValues . java and TestMemoryOptions . java to ensure correct behavior
removed redundant checks for power of 2 in ObjectAlignment . java and Options . java to streamline code by eliminating unnecessary checks
added methods to retrieve and set the target package in Android instrumentation classes to enhance package extraction functionality for better instrumentation testing
refactor DocHelper . java to improve code structure to enhance maintainability and readability of the code
updated the initialization of acceptableThrowawayItems to use a new ArrayList instance to enhance flexibility in handling acceptable throwaway items
replaced generic type declarations with explicit casts for boolean , byte , char , short , int , and int types to improve type safety and
added a new method ` isWorkingOnMessage ` to the ` MessageHandler ` class to prevent starving when a lot of fetcher threads are
refactor inflection methods for improved clarity to enhance maintainability and readability of the code
added methods ` getLocale ( ) ` and ` setLocale ( Locale ) ` to the ` EvaluationContext ` class to provide access to the locale used
added import statement for Plugin in SummaryPrinter . java to utilize Cucumber ' s plugin functionality
added a break statement in DrawerActivity . java to ensure proper flow control during execution
updated import statements and debug logging in MongoQueryCreator . java to enhance query handling and improve logging clarity
add a system property ` ` xwork . loggerfactory ' ' to allow customization of loggerfactory
renamed adminAddPeerFailsWhenP2PDisabled and adminAddPeerFailsWhenP2PDisabled2 methods to clarify the
rename ` livenessStateHealthIndicator ` and ` readinessStateHealthIndicator ` beans to ` livenessStateHealthIndicator ` and ` read
added a ConcurrentMap to manage PStore instances and updated the return logic to improve thread safety and ensure proper management of PStore instances
changed the visibility of the ` deleteFiles ` method from public to private to restrict access to the method for better encapsulation
rename serviceloaderspliterator . provider to serviceloader . serviceloader . serviceloader . serviceloader . serviceloader
truffle : do not throw unsupportedmessageexception in javainteropreflect . setfield and findfield .
added ` isToolchainCreated ` method to ` AbstractCell ` , ` ToolchainProvider ` , and ` DefaultToolchainProvider ` classes
do n ' t try to remove a context from the engine if it be already add to the engine .
replaced ` indexOf ` with ` contains ` for improved readability in ` AbstractCheckDescriptor . java ` to enhance code clarity and
updated linker flags in PrebuiltCxxLibraryDescription and CxxLibraryBuilder to use exported linker flags to improve clarity and consistency in linker
refactor ` onConfigurationChangedInternal ` to ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` Recents
updated type parameters in multiple listener classes to use generics to enhance type safety and reduce unchecked warnings
abstractblockchain : use header . gethashasstring ( ) instead of block . gethash ( ) . gethash ( ) . get
use getstorepathcommitlog ( ) instead of storepathcommitlog ( ) in defaultmessagestore . getphysic (
refactor MicrometerMetricManager to ensure proper binding of JvmGcMetrics and JvmHeapPressureMetrics to improve code readability and
add getmessagelog . getgetmessagetimestotalfound and getmessagetimestotalmiss to getm
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used in future development
added methods to check and execute a shell command for the " keyguard _ status _ view " in AbstractLauncherUiTest . java to enhance
changed ` logger ` and ` principals ` and ` sessionIds ` fields to be ` final ` in ` SessionRegistryImpl . java ` to
added checks for empty cookieJar and nullUriCookieStore in InMemoryCookieStore . java and NullUriCookieTest . java to ensure proper
fix ( bonsai ) : add more logging to bonsai world state updater
changed method parameters from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to allow for
[ java ] unignoring a test that pass in marionette
added exception handling when returning a connection in SocketConnector . java to improve robustness by handling potential IOException during connection return
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references to improve clarity
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety when accessing shared resources
updated ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and refactored ` wrapWithTracingAndCancellation
fix for drag - selecting text out of the text area ' s bound
added configuration overlay paths for mapred and staging directories in TestInformationSchemaWithPrivilege . java to ensure proper directory structure is used for mapreduce
refactor graphics configuration retrieval logic in mmm Component . java and ppp Component . java to improve readability and maintainability of the code
tika - 3868 -- move oom test from tika - server to tika - server - cli
( chore ) camel - core : optimize pipeline to reduce stack frame in use during processing
updated PrintTagList . java to handle command - line arguments for model file and tag retrieval to improve flexibility in managing model files and enhance
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix test that fail on
[ java ] fix flakiness in startfromtruncatedrecordinglogtest . java .
updated the calculation of the arc in LineBorder . java to use a fixed value instead of a fixed value to improve the accuracy of the outer
added null and empty checks for galleryImages in PostGalleryTypeImageRecyclerViewAdapter to ensure proper handling of null or empty galleryImages values
added deployment ID handling in StandardChangeLogHistoryService and modified the DEPLOYMENT _ ID column definition in CreateDatabaseChangeLogTableGenerator to
pdfbox - 4892 : rename fdf and fdf interactive form example to interactive form example
removed the ' moreColumnsOk ' parameter from several methods in AlterTableAddConstraint . java to simplify method signatures and improve code readability
added provisionalEngines map and updated engine management logic in QuickfixjComponent and QuickfixjComponentTest to improve engine management and ensure
added display zoom controls functionality to RoboWebSettings to enhance user experience by allowing customizable zoom control display
add corporea corporea brick and slab to the list of corporea block . close # 399
refactor ConnectionFactory to improve connection handling to enhance reliability and performance of connection management
added a method to enable and disable menu items in GpsMainActivity to improve user experience by providing a clear indication when menu items are
updated the message for empty list in ExtendedListFragment to use a more specific string resource to improve clarity and specificity of the message displayed
replaced ServiceRegistry . Setting annotations with JUnit ' s @ Setting annotations in EntityTests . java to simplify configuration management and improve code read
added auto - resizing mode and auto - created columns from the table in MotorMountConfigurationPanel . java to improve UI respons
replaced System . lineSeparator ( ) with System . getProperty ( " line . separator " ) for LINE _ SEPARATOR to improve flexibility by allowing
added getter and setter methods for creator and subject in POIXMLProperties . java and updated imports in TestPOIXMLProperties . java to
reformatted the ` doStop ( ) ` method call in ` HandlerWrapper . java ` to improve code readability and maintain consistency
[ java ] check for non - empty cnc file before try to read it .
replaced the ` UnsatisfiedTypeBounds ` class with a new ` Command ` interface and renamed the ` Marker ` interface to ` Command
added methods to check if a jar name ends with " . jmod " and adjust class path accordingly to ensure compatibility with JMod files and
updated TreeBackedElement , TreeBackedEnter , TreeBackedPackageElement , and TreeBackedPackageElement classes to use Preconditions for
replaced the instantiation of ` tokenRequest ` in ` Saml2TokenGranterTest ` and ` UserTokenGranterTest
updated the variable used in the array addition from ' arrayLength ' to ' valueRangeObject ' to improve clarity by using a more d
added a ` sync ` method to ` ZooKeeperWatcher ` and invoked it in ` ZKAssign ` to enable synchronization of ZK nodes for improved
fix ( gl ) : add check for gl _ no _ context when no context be available
[ drools - 7 ] avoid to remove activation of a ruleflowgroup when it be not active
added a return statement to the HystrixDashboardConfiguration class to ensure proper execution flow by preventing unnecessary execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added error assertion in IoTDBPipeIT . java to improve robustness
added cleanup method to clientqueuedisruptiontest to ensure proper resource cleanup after each test
refactor : replace signatureprinter with defaultjavaprettyprinter in ctreferenceimpl . tostring ( ) ( # 3649 )
changed the visibility of the ` validateInstance ` method from public to protected to restrict access to the method for better encapsulation
updated imports in GeoPointField , GeoPointTokenStream , GeoPointInBBoxQuery , GeoPointInPolygonQuery , GeoPointNumericTerms
added a new ` FakeBuildable ` class and modified ` OnDiskBuildInfoTest ` to use it to provide a mock implementation for build
fix : use itemstack . isempty ( ) instead of itemstack . getitem ( ) in guiingameforge
rename ` stream _ path ` to ` stream _ timeseries ` and add ` follow _ timeseries _ in _ index _ statement2308 ` to
added a check to return 0 if the velocity is less than EPSILON in TubeCalc . java to ensure that the method does not return
replaced calls to ` getBucket ( gcsUri ) ` with ` _ storage ` in ` GcsPinotFS . java ` to improve
modified the way transport closure is handled in TestHighwayTransport . java to ensure proper resource management and prevent potential memory leaks
added methods for creating and replacing history views in DbTriggerBasedHistoryDdl and PostgresHistoryDdl classes to enhance database migration functionality and
updated the expected value in the checkEngine method from 2 to 3 to reflect the correct expected behavior of the clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored due to it needs to be rewritten
replaced ` ObjectInputStream ` with a new ` ParserStateObjectInputStream ` class and added validation for ` RemoteDaemonicParserState ` to improve
added null checks and updated objectQuotingStrategy assignment in ChangeSet and DatabaseChangeLog classes to ensure proper handling of objectQuotingStrategy when changeLog
replace ` parse ` method with ` fromXmlStream ` for MetainfoParser instantiation to improve compatibility with XML stream parsing
deleted the CsrfControllerAdvice . java file to remove unused CSRF token handling functionality from the project
added a method to quote the path list in the AntCompiler class to ensure proper handling of file separators in the endorsed arguments
added scrim animation functionality to the Launcher and LauncherAnimUtils classes to improve UI responsiveness during action screen off transitions
updated the threshold in TypeInferenceUtils from 2 ^ 24 to 1 ^ 24 and added new constants in TypeInferenceUtilsTest to improve accuracy of
regenerate client with updated copyright year ( # 4382 )
added support for handling UNC path prefixes in WindowsPathParser and PathOps classes to ensure correct parsing and validation of long and UNC paths
replaced InetSocketAddress with a direct instantiation of MulticastSocket in Promiscuous . java to simplify socket creation and improve code readability
updated the closing order of writer and Query instances in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
change return statement to return a cloned version of nBits to ensure that the original nBits remains unchanged when returning it
changed the visibility of the ` deriveCollectorName ` method from private to protected in ` ProfilerCollector ` and added new assertions in ` TestProfiler
refactor type hint logic in MappingMongoConverter and add a new test case in MappingMongoConverterUnitTests to improve type hint handling and ensure
added performance measurement for proxy factory creation in ProxyMaker . java to improve performance tracking during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during execution
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 55962 - tcp connection
replaced the reinflateWidgetsIfNecessary ( ) method with a call to getWorkspace ( ) . reinflateWidgetsIfNecessary ( )
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion using the right click popup menu to ensure that the file
fix ( lwjgl ) : do n ' t call display . update ( ) when renderable . get ( ) = = true
add instructorstudentlistpageuitest . testshowphoto ( ) to show the picture of a student
added property checks for " onlyRun " , " method " , and " only " in TestIgnorance . java to enhance test
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature for better usability
updated the logic to handle null ` pageable ` in ` QueryDslJpaRepository ` and added a new test in ` QueryD
added a method ` computeMemorySize ` to ` MemoryManager ` and corresponding tests in ` MemoryManagerTest ` to provide a way to compute
( chore ) camel - jms : reduce test timeout to avoid flakiness
refactor SnowballAnalyzer to improve code readability to enhance maintainability and ease of future updates
modified the handling of previousIndex and previousBatch in StreamingAggTemplate . java to ensure proper initialization and management of previousIndex and previousBatch
throw a graalerror if a plugin need to null check the receiver of a plugin .
added a new method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to enhance functionality by
updated logging messages to clarify the reason for moving files that have been fully played to improve clarity and accuracy of logging for better
refactor ` InjectorProxy ` , ` StandardInjectorProxy ` , ` InjectorTest ` , ` TestConstructorInvocation ` , and ` InjectorTest
[ hotfix ] remove unnecessary call to close ( ) in flinkstreamingcreatefunction
added unit tests for ` ShowStatementTest ` , ` UnsupportedStatementTest ` , and ` CreateTableTest ` to ensure proper parsing and de
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an immutable list instead of
updated the query to include " Quality Distribution , Inc . " instead of " Deliberate error , to test CruiseControl ,
added connection state management and improved websocket reconnect handling in DeconzBridgeHandler . java and WebSocketConnection . java to enhance connection stability
replaced ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI
testregionreplicareplicationendpoint . testregionreplicareplicationendpoint . testregionreplicareplicationendpoint ( ) should retry on
added PMS initialization and configuration settings in FormatRecognitionTest . java to ensure proper initialization of PMS for testing purposes
server : fix template creation for ovum data disk template ( # 5649 )
updated test runner from SpringRunner to JUnit4 for PrincipalAttributeRegisteredServiceUsernameProviderTests to improve compatibility with JUnit4 testing framework
added @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding
updated table and column names from ` metricVal ` to ` metricVal1 ` in ` AppendOnlySchemaIT . java ` to ensure consistency
added a validation check for deleted document counts in SegmentReader . java to ensure the document count matches the segment ' s document count before proceeding
add getloggername ( ) and logtrace ( ) method to jain - sip .
fix filament length for staves w / no starting barline
removed the default value of handleFileUploads from VertxPlatformHttpServerConfiguration and set it to true in VertxPlatformHttpEngineTest to
added a test method to verify CSRF protection matcher allowed methods case - insensitive to ensure that the CsrfFilter behaves correctly with case -
replaced static inner class ` Fields ` with instance variable ` field ` in ` HotSpotObjectConstantImpl . java ` to improve code
renamed the ` add ` method to ` addFrequency ` across multiple classes to improve clarity and consistency in method naming
fileio : add watermark to the result of filesystems . match ( )
make ctedefinition non - final in sqmctestatement . copy ( context )
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData for improved data retrieval functionality
updated the library output command to include the current project ' s root path to ensure the output is correctly formatted for the library output
updated the slider value in the BasicSlider from 180 to Math . PI to ensure proper slider positioning for better user experience
update encloser position and improve exception handling in OverlayRenderer and Saves classes to enhance rendering accuracy and improve error handling during save operations
added expressionLanguageSupported ( true ) to KerberosProperties . java to enable support for expression language in Kerberos authentication
removed redundant null checks and added rotation functionality for remoteMountPointComponent in ThirdPersonRemoteClientSystem . java to streamline code and enhance
updated setupViews method to include ScrimView as a parameter across multiple classes to enhance the view setup process by integrating scrim view
[ flink - 16400 ] [ state - backend - changelog ] enable periodic materialization by default
added getter and setter for the ' value ' attribute in the ProtocolParameter class and updated related classes to handle the ' value ' attribute in the
add a test case to verify the behavior of the ChunkingServlet with head headers to ensure that the servlet correctly handles requests with headers that include
added a boolean field ` isBumped ` and modified the ` parseDetails ` method to return a boolean indicating success or failure to improve the
added Content - Type header for application / x - www - form - urlencoded in SwitchToPostInterceptor and SearchRequestUnitTest to ensure
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging functionality to ` PhoenixResultSet ` and replaced ` SQLFeatureNotSupportedException ` with a warning log message to improve error handling and
initialize AndroidNet with null values in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
[ hotfix ] [ runtime ] fix the order of numrowsconsumed in LLRealtimeSegmentDataManager . java
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 16400 remove unused import of prefixtreecodec from tablemapreduceutil
added a flag to handle inflation failures in DesignerActivity and made the root variable final in XMLLayoutInflater to improve error handling and
refactor PushbackInputStream class implementation to improve code readability and maintainability
loweringphase : make loweringtoolbase abstract so that it can be subclass of loweringtool
updated the error message format from ` download _ folder _ failed _ content ` to ` sync _ folder _ failed _ content ` to clar
updated newline character handling in Makefiles . java and added new test cases in MakefilesTest . java to improve line endings and ensure compatibility
replaced direct reference to ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and modified
updated refresh flags in SimpleBatchNode . java to include RF _ TRANSFORM and setBoundRefresh methods to ensure proper handling of refresh state
make stack overflow check uninterruptible instead of guarantee safepoints
added framebuffer size callback and modified window size handling in LwjglWindow . java to improve framebuffer management and ensure proper window size
updated translation calculations and transition animations in LauncherAppTransitionManagerImpl . java to improve animation behavior for offscreen transitions
refactor ` LiteralNode ` and related classes to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and update method signatures accordingly to
added methods to set file length in CompoundFileWriter , FSDirectory , and IndexOutput classes to improve file management and ensure accurate length updates
updated AndroidNdkScriptGenerator , AntScriptGenerator , and LwjglDebugStarter to replace SpriteBatchShaderTest with M
camel - 15836 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource . thanks to
added role handling for " * " in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to improve permission management and ensure
updated import statements and modified URI registration logic in ZookeeperClientServerRegisterRepository . java to improve clarity and functionality of URI registration process
renamed methods and classes related to deep stubs for clarity and consistency to improve code readability and maintainability by using more descriptive
modify call value retrieval to handle empty cases to ensure that a valid call value is returned when there are no values to avoid potential errors
fix debug log message in bibentry . getdate ( ) ( # 2638 )
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and changed the PBE algorithm from " PBEWithHmac
tmi - tiff : add validation for tiff value offset or size too large .
added validation for job form names in CommandLineJobRunner . java and a corresponding test in CommandLineJobRunnerTests . java to ensure proper error handling
updated assertions in SmtpTests . java and MailTests . java to directly compare the message content to simplify the test cases by removing unnecessary newline
updated case statements in ExtendedConnectionDataSourceProxy . java to use lambda expressions to enhance code readability and reduce boilerplate
refactor ` LongSequenceGenerator ` to use ` AtomicLongFieldUpdater ` for ` lastSequenceId ` and remove synchronization to improve thread safety
added a new file ` Test . java ` containing a class ` Test ` with a ` sum ` method and a ` main ` method to
updated minimum and maximum SDK versions in ` ShadowWifiManagerTest ` and refactored fields in ` WifiUsabilityStatsEntryBuilder
added a new Java file named Solution . java to implement a solution for counting queries based on specified criteria
fix concurrentmodificationexception when load sstables . patch by jbellis ; review by brandonwilliams for cassandra - 12
refactor taskbar recreation logic in TaskbarManager . java to improve clarity and structure to enhance readability and maintainability of the
refactor SyncFutureCache class for improved performance to enhance efficiency of cache synchronization operations
updated DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and low version for response attachment
[ java ] uselessstringvalueof - fix false positive with literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the functionality
add targetmaxtypeshardsize to hollowproducer and hollowfilesystemblobstager ( # 1193 )
added new test cases for version " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
updated CompilationTask . java to improve code structure to enhance maintainability and readability of the compilation process
updated assertions to check if the location is not shown in test mode and refactored parameter handling in DDLTask to improve code clarity and
added a call to ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase . java to execute the ClearDatabaseChangeLogTableStatement for improved
added version handling and improved path comparison logic in CallPath and RestClient classes to enhance the functionality of the CallPath and RestClient classes
phoenix - 1343 : fix race condition in driver . close ( ) . close ( ) . close ( )
fix typo , a suggest by valerybokov
added JUnit ' s @ After annotation and modified FolderPickerActivityIT to extend AbstractIT , added screenshot functionality to enhance test reliability and
[ gr - 21212 ] do n ' t replace input during deoptimization if devmode be enable .
added a check to return the original string if the length of the copy is less than 2 and implemented a test for removing leading and ending quotes
refactor JpaQueryCreator to use a local variable for type handling and add NOT _ CONTAINING case to improve code readability and
do n ' t attempt to push branch if we be n ' t encrypt the account .
added a dispatch method to P25MessageFramer to create a copy of P25Message to enhance message processing functionality
added a null check for the handler in the WebSocketImpl class and created a test for clearing client handlers on the end to ensure proper handling of
[ ds - 3752 ] fix test failure and add authorisation context
refactor padding handling in AppWidgetResizeFrame , Launcher , and LauncherAppWidgetHostView to use a default padding value to improve
added ` hideAllApps ` and ` hide ` methods to ` TaskbarUIController ` , ` TaskbarAllAppsController ` , and
removed synchronization from the launch method in CrawlJob . java to simplify the method signature and improve thread management
updated the calculation of the point in JavaSEPort . java to account for the canvas position to ensure accurate positioning of the component based on
replaced ` notificationManager . notify ` with ` startForeground ` and added a conditional check for ` toUpload ` to improve notification handling and
pmd : fix a bug in excessivepubliccounttest . java where static final member be not mark a valid .
added a retry number configuration to the HBase client in TestThriftHBaseServiceHandler . java to increase the number of retries for the HBase client
change log level of half offset committed / rolled back from info to debug
added exception handling for FileNotFoundException in ResourceUtils . java and changed log level from debug to trace in AbstractCipherExecutor . java to improve error handling
added a new method ` getTickers ( ) ` to the ` Bittrex ` class and created a new ` BittrexTick
hhh - 11341 - fix entityentry . getenumconstants ( ) to work with state
refactor method signatures to use Object instead of Class for better type safety to enhance code clarity and reduce potential runtime errors
added additional characters ' \ ' , ' \ \ ' , ' \ n ' , ' \ \ ' , and ' \ \ ' to
added methods to set and get a stylesheet in ResourceService and updated stylesheet handling in ResourceHandler and DefaultServlet to improve resource management and enhance stylesheet
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
changed method parameter type from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure correct handling of pointer addresses in method
added support for CockroachDatabase in the CreateSequenceGenerator class to ensure compatibility with Cockroach ' s sequence generation
removed the condition checking for " java . lang . String " in ObjectStreamClass . java to simplify the code logic for better readability and
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and created a new ` SymbolNotFoundError `
refactor BinaryResponseWriter to conditionally create a SolrDocument instance based on the presence of pseudo fields to improve handling of document retrieval based on
added PING and PONG case handling in WebSocketImplBase . java and a corresponding test in WebSocketTest . java to implement WebSocket pause functionality
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in regex patterns
updated DnsResolverProvider to use specific DNS cache configurations and modified test methods to include a cache option to enhance flexibility in DNS resolver configuration and
added @ ConditionalOnClass annotation for MessagingTracing in TraceMessagingAutoConfiguration to enable tracing functionality only when MessagingTracing class is available
mondrian : fix for mondrian - 1342 : correct quoting of ` ` customer ' ' in mysql
updated import statements in multiple Java files for consistency and clarity to streamline dependencies and improve code organization
added a condition to handle the ' / ' character in the XMLLightweightParser class to ensure proper status handling for XML file formats
removed the visibility setting for GONE in TouchCharInput . java to improve user interface by preventing unnecessary visibility control
added a null check before comparing user IDs in the Group class to prevent potential NullPointerException when the user ID is not set
updated JSObjectLinker to conditionally set a slot based on the index of the JSObject to improve handling of slot assignment based on the
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to improve suffix handling and encapsulation to enhance code clarity and
marked SecurityConfig as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added @ Deprecated annotation to multiple Java classes to indicate that these classes are outdated and should no longer be used in future development
deleted the JoglDebugAdaptor . java file and modified the RocketFigure3d . java and GuiceStartup . java to
added ` toString ` methods and tests for ` ExtraFieldPropagation ` , ` ExtraFieldPropagationTest ` , and ` AWSPropagation ` classes to
added PendingIntent import and updated contentIntent in FileDownloader . java and FileUploader . java to enhance notification functionality for better user experience
refactor the ` nextOrd ` method to introduce a private ` set ` method to improve code readability and maintainability by encapsulating
refactor DateTimeFormatter class for improved date formatting to enhance readability and maintainability of date formatting logic
removed unnecessary try - catch block and simplified desktopProperties initialization to improve code readability and maintainability
added null and empty checks for administratorCredentials in KerberosOperationHandler . java to ensure proper handling of null values and prevent runtime exceptions
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and modified widthUsed calculation based on device profile to improve
add pgl . beginrender ( ) and pgl . endrender ( sketch . sketchwindowcolor ( ) ) in psurfacejog
refactor Hashing class methods for improved performance to enhance efficiency and reduce memory usage
updated the ` accept ` method to include ` folderPath ` and ` fileName ` instead of ` file ` and ` s ` to improve clarity
updated the ` addToListIfNeeded ` method to include a ` contentDescription ` parameter and modified the ` UserInfoDetailsItem ` constructor to include it
removed null check for ` newType ` in ` J . java ` to streamline code by eliminating unnecessary null check
increased ACTIVITY _ START _ DELAY from 500 to 800 to improve responsiveness during activity startup
added a new constant WEBAPP _ HOME in SolrJettyTestBase and updated references in JettyWebappTest to use this constant to
reset selectedMotorSet to null and clear selection in ThrustCurveMotorSelectionPanel . java to ensure proper management of motor selection
added import for BufferUtil and called clearToFill method in ByteBufferPool . java to utilize BufferUtil for buffer filling operations
fix npe when trigger notification rule creation via rest api
changed configuration property names from " authorization . ldap " to " authentication . ldap " to align naming conventions with LDAP authentication standards
fix for http : / / issues . apache . org / activemq / browse / amq - 2638 - durableontransient
[ hotfix ] [ test ] fix flaky bulkslotproviderimpltest
added error handling for connection failures in PingService and ServerInfoService to improve reliability of server connection failures and provide clearer error messages
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
rename Quartz2Adapter . java file to improve clarity and maintain consistency in naming conventions
added a try - catch block to handle IllegalStateException in the SulongLibrary class to improve error handling by preventing application crashes due to
updated Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improv
updated the ` newNameResolver ` method to accept ` Args ` instead of ` Helper ` and refactored ` DiscoveryClientNameResolver ` to
added null check and position adjustment for annotations in JavacParser . java and created a new TestAnnotatedAnonClass . java file to
added " com . sun . naming . internal . " to CheckPackageAccess . java to include internal package access in package access checks
changed the ' strict ' variable from false to true in StaxEventItemReader . java to enable strict processing by default
modified the ` OfflineSorter ` to include a ` isExhausted ` flag and updated the ` readPartition ` method to accept a boolean
refactor ActionResetingPool class for improved resource management to enhance performance and maintainability of the code
added a null check for the XY mode before converting toHSBType in LightStateConverter . java to enhance robustness by preventing potential
updated methods in CellLayout to accept targetCell for folder creation and reordering to improve flexibility in folder creation and reordering behavior based on
added a call to showLoadingDialog ( ) in FileOperationsHelper and removed it from FileDetailFragment and OCFileListFragment to streamline
added a null check for the uigestureFile before initializing xmlLogs to prevent potential NullPointerException when uigestureFile is not present
updated method calls to use Locale . getDefault ( ) for case - insensitive comparisons to ensure consistent behavior across different locales
added listeners to the result object in XmlSuite . java to enhance listener management for XML results
added a new property ` loadWithNewGlobal ` and modified method handles in ` Global ` , ` Context ` , and ` Global ` classes
added methods ` fromJsonString ` and ` toJsonString ` to ` StarTreeIndexSpec ` and updated tests in ` TableConfigTest `
added ObjectPostProcessorConfiguration import in HttpSecurity and HeadersConfigurer classes to enhance security configuration capabilities in the application
replaced double quotes with single quotes in string replacement methods across multiple files to improve code readability and maintain consistency in character handling
[ drools - 7 ] fix in operator to correctly handle null value
added imports for FieldCache and commit ( ) and purgeFieldCache ( FieldCache . DEFAULT ) in TestDistributedSearch . java to improve
added test case for boundary message event on subprocess and inside subprocess multi - instance
add resolvestaticcall ( ) method to jimpleprogrammanager to resolve static call .
http : / / issues . apache . org / jira / browse / amq - 4640 - add a messagegrouphashbucket
added new slot ID constants and updated method signatures in Secmod . java to improve clarity and maintainability of slot identification logic
added alignment parameter to the add method in Layout . java and modified the startRenderering method in GdxRenderer . java to enhance flexibility
[ hotfix ] [ test ] ignore unalignedcheckpointitcase test
added MIDI class imports and validation checks in JDK13Services . java to ensure proper handling of non - MIDI types and prevent runtime errors
added a check to ensure the keyword does not already exist before adding it to the keywordToReference map to prevent duplicate keywords to the reference map
camel - 16400 : fixed multicast eip to work with thanks to andreas .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to improve code clarity and maintainability
escape special character in telegraf metric name ( fixes # 644 )
add udp port to member object so that it can be send to the same multicast address .
rename the ` OperatorMulticast ` class to ` OperationMulticast ` and update references accordingly to clarify the purpose of the class and
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for message delivery to complete
added a try - finally block around error handling in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
hhh - 11341 reset event listener registry to null when destroy
simonstewart : fix flaky test by remove unnecessary sleep
[ pytorch ] add test case for tuple and map of tensor in ivalueutilstest
added a TaskStackChangeListener to manage task stack visibility changes in RecentsView to ensure proper handling of task stack visibility during animations
pdfbox - 4892 : improve performance of defaultsplitcharacterprofilingtest , a suggest by valerybokov
camel - 14263 : camel - cxf should use source code generate configurer to avoid reflection configuration .
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added debug logging and improved play time calculation in LauncherAnimationRunner . java to enhance debugging capabilities and ensure accurate animation play time
added a conditional check for ` BailoutOnException ` in ` C1XCompilation ` and introduced a new option ` Bailout
initialize ` signup ` and ` passwd ` to ` null ` in ` Links . java ` and update corresponding assertions in ` IdentityZoneConfiguration
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
replaced the ` onlyFormat ` field with a ` format ` field and introduced a new method ` getOnlyFormat ` to improve clarity
added NoDataContainer property handling in GeoTiffReader and corresponding test in GeoTiffReaderTest to ensure proper handling of NoDataContainer
sulong : return ` ` unknow ' ' when source section be null .
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and `
replaced ` client . blockUntilConnected ( ) ` with ` client . getConnectionStateListenable ( ) ` in ` TestPathChildrenCache
added null check for the array before accessing its properties in ArrayTypeHandler . java to prevent potential NullPointerException when accessing array data
replaced the ` RegexpTunnel ` class with a reflection - based method for retrieving the prefix in ` JakartaRegexpCapabilities ` to
changed the application parameter from null to Application . class in the pick method to ensure proper type handling for the application configuration
[ drools - 7 ] avoid npe in phreakfrom when use a mutable global
updated AssetIssueActuator to validate asset names , URLs , and descriptions using TransactionUtil to enhance validation logic for asset names , URLs , and
copy paste : do n ' t copy textfield if it ' s textfield
updated action description from " @ text / actionShowToastWithIconLabel " to " @ text / actionShowToastWithIconDesc
replaced setSeedNodes , setActiveNodes , and setTrustNodes methods with addAll methods to streamline node configuration for improved readability
updated assertions in BaseTokenStreamTestCase to include additional information about token positions and added failure handling to improve debugging information and ensure proper thread management
log4j2 - 1343 refactored patternprocessor and timebasedtriggeringpolicy to use a new ` ` increment ' '
added methods for item clicking and finding within ` ShadowAdapterView ` and ` ShadowListView ` to enhance testing capabilities for item interactions within
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
do n ' t call graph . iscalltooriginal ( ) when loop scope be null .
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and improve attribute handling to enhance code clarity and maintainability by
updated imports in HttpZipkinSpanReporterTest . java and added a new test method to verify service name change in Zipkin to ensure correct
added logging for excluded classes pattern and updated spooling logic in ` JavaToJarStepFactory ` and ` JavaInMemoryFileManager `
rename ` SeparatedProjectGenerator ` and related references from ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` to
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow more time for the lock to be acquired and
added a DEFAULT _ CACHE _ CAPACITY constant and updated ConfluentSchemaRegistryDeserializerProvider to include schemaRegistryConfigs to improve cache management and
rename the JCheckBox ' remind ' to ' checkAtStartup ' and update its tooltip text to improve clarity of the checkbox ' s
added method definitions for strongKeys , weakKeys , weakValues , softValues , expireAfterAccess , expireAfterWrite , maximumSize , we
hhh - 11341 : do not throw transientpropertyvalueexception for non - hibernate proxy
added methods to handle " __ proto __ " and " __ proto __ " properties in ScriptObject . java to improve encapsulation and access to
updated the default read mode from " heap " to " mmap " in CommonConstants . java and refactored the ImmutableSegmentLoader . java
added support for handling byte type in ArrayTemplateBuilder to enable proper instantiation of ByteArrayTemplate for byte types
added Hipchat support to SamlServiceProviderProperties and created a new CasSamlSPHipchatConfiguration class to enhance SAML service provider configuration
changed the type of ` commandRegistryUrls ` from ` List ` to ` Set ` and updated resource retrieval logic to improve performance by avoiding
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve log clarity and provide more detailed
removed the checkLoggedIn ( ) call from the login ( ) method in SvnRepositoryConnector and SftpRepositoryConnector to streamline the login
fix for http : / / issues . apache . org / activemq / browse / camel - 212 - do not lazy - create
vmware : fix checkstyle issue in util / vmwareresource . java ( # 3649 )
refactor methods in Timers class for improved performance to enhance efficiency in timing calculations
updated import statements from OVERWRITE _ EXISTING to APPEND _ TO _ ZIP in DefaultDefectReporter . java to align with the new
removed deprecated tokenizer constructors from UAX29URLEmailTokenizer . java to clean up the code and improve maintainability by eliminating unnecessary
removed the ` Map ` interface from the ` ScriptObject ` class and replaced it with ` ScriptObject ` in ` ContextTest ` to simplify
updated EventBusMetrics . java file to improve event bus monitoring functionality
[ ds - 3752 ] add getepersonlocale ( eperson ) method to i18nutil .
use @ initializingbean instead of @ postconstruct in javerstransactionaldecorator
removed null check for pgTypeName before adding it to the _ pgNameToSQLType map to simplify code by eliminating unnecessary null checks
added server settings for multiple handlers in ScopedHandlerTest . java to ensure compatibility with the Jetty server configuration
fix ` ` call - time out during wait - notify phase ' '
changed the condition from checking if the username and password is blank to checking if the password is empty to ensure that the login process does not proceed
updated permission node check from ` Objects . equals ` to ` equals ` to allow wildcard permission checks for improved flexibility
rename ` encoding ` to ` sourceCharset ` and update related methods in ` AbstractCompiler ` and ` ICompiler ` classes to improve clarity
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and updated related methods
refactor simulation handling in GeneralOptimizationDialog to use final variables and improve naming consistency to enhance code clarity and maintainability by reducing redundancy and ensuring immutability
camel - 16400 : camel - core - allow to turn off context reload by default
updated log level and logger configurations in CommonTestUtils . java to improve clarity and consistency in logging configuration
refactor PrologSizeSanityCheck class for improved performance to enhance efficiency of Prolog size checks
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future feature additions
added a check for non - mark support before invoking the reset method in RequestBody . java and created a corresponding test in RequestBodyTest .
updated conditional checks in EmbeddedNeo4jServer , DefaultBeanContext , and TypeArgumentQualifier classes to enable embedded settings and improve bean management
update movementdebugcommands to restore default health component
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted related logic to enhance the method ' s functionality to
refactor GsonParser to simplify cache string handling and update timestamp validation in MetricsResourceTest to improve code clarity and ensure correct validation for start
added comments to clarify sorting parameters in ApacheHttpClientMediaWikiApi . java to improve code readability and understanding of sorting behavior
replaced multiple calls to checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) in AbstractSharedSessionContract and SessionImpl classes to
replaced ReentrantLock with PipeTaskCoordinatorLock in PipeTaskCoordinator . java and added a new PipeTaskCoordinatorLock class to improve
added conditional logic to determine whether to use pre - instrumented jars based on a system property to enhance flexibility in dependency management based on user
changed the condition from ` if ( ! isSilent ) ` to ` if ( isSilent ) ` in ` ExecDriver . java ` to
added validation for dynamic fields in IndexSchema . java and a corresponding test in BadIndexSchemaTest . java to ensure proper error handling for unsupported
do n ' t randomly try to repair a quorum if digest mismatch . patch by jbellis
replaced ` ImmutableSortedSet ` with ` Iterables . transform ` for adding system include roots in ` PrebuiltCxxLibrary ` to improve
updated ` AdaptableX509CertSelector ` to initialize ` startDate ` , ` endDate ` , ` isSKIDSensitive ` , and `
log4j2 - 1343 use abstractappender . parse instead of string . parse in nosqlappender
added a @ Deprecated annotation to GuiScreenEvent . java to indicate that the GuiScreenEvent is outdated and should no longer be used
added methods to manage category addition , removal , and new categories in CategoryEditSearchRecyclerViewAdapter to enhance category management functionality for better user experience
# 113 - enh : add getloaded ( ) and getdata ( ) to servercachefactory ( ) and cachefactory ( )
updated the assignment of massOverriddenBy , CGOverriddenBy , and CDOverriddenBy in RocketComponent . java to
replaced the ` doCompile ` method with a ` post ` method in ` JavaCompilerService ` , modified the ` SynchronizedTask `
refactor Task class to use a Supplier for better null safety and encapsulation to improve code readability and maintainability by leveraging a
refactor executor initialization and shutdown logic in WanReplicationServiceImpl . java to improve thread safety and ensure proper execution of executor
added null checks for partition and table attributes in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
refactor code to use lambda expressions for thread creation in RemoteServiceRegistry and LocalServiceRegistryClientImpl to improve code readability and reduce bo
added unit tests for file deletion functionality in ` FilesTest . java ` and implemented a ` delete ` method in ` Files . java ` to
removed exception handling for closing ServerSocketAdaptor and SocketAdaptor classes to simplify exception handling and improve code clarity
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replace currentWorkingDirectoryList management with a method to add a working directory to improve clarity and maintainability of working directory management
added null check for ' cn ' in ItemInfo . java and set insets in Workspace . java to improve robustness by preventing null pointer
changed the visibility modifier of the String constant from public to private to restrict access to the String constant for better encapsulation
updated Java configuration parameters for CSV and JSON file types in SimplePostTool . java to streamline configuration for better readability and maintainability
apps - 3643 add test for symbolic toggle in geosymbolictest
refactor client container initialization and error handling in JavaxWebSocketClientContainerProvider . java and JavaxWebSocketClientContainer . java to
changed the condition from checking if the type is null to checking if it is not null to ensure that the code correctly handles cases where the type
added teardown methods to cleanup web application context in multiple test classes to ensure proper resource management and prevent potential memory leaks during tests
added a method to retrieve the search string and modified the resource retrieval logic to include search functionality to enhance user experience by allowing search results to be
hide neutral button in SetupEncryptionDialogFragment to improve user interface clarity by removing unnecessary visibility
refactored countitems ( ) and countnotarchiveditemscount ( ) to countitems ( ) and countwithdrawn ( )
updated SQL statements to include quotes around table names in DDLTask . java to ensure proper syntax for creating views , tables , columns , and partitions
added exception handling and logging for OAuth2 exceptions in CheckTokenEndpoint . java to improve error management and provide better diagnostics for OAuth2 - related
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to replace serviceInstanceId with subdomain and improve HTTP response handling to enhance clarity and
updated tooltip delay from 20000 to 10000 in ExtractionModelFrame . java , DataBrowser . java , and SQLConsole . java to improve
added support for running single test methods with JUnit 5 in ActionProviderImpl . java to ensure compatibility with Surefire 2.22 .
changed exception handling from HumanReadableException to RuntimeException in WorkerShellStep . java to improve error handling by providing a more general runtime exception
[ hotfix ] [ table ] add @ experimental annotation to flink table api
pdfbox - 4892 : fix typo find by codespell on fossies . org
updated index validation logic in List . java to ensure index does not exceed items . size - 1 to prevent index out of bounds errors
replaced ` OrExpression . class ` with ` Parenthesis . class ` in ` CloneHelperTest . java ` to align with the
added confirmation = true and requiredType = none to DebugPaste class to enhance command functionality for debugging purposes
improve exception message if endpoint ca n ' t be find
ggb - 1395 fix focus problem for mathquill graphics
refactor ` GoBinaryDescription ` to extend ` AbstractGoBinaryDescriptionArg ` instead of ` Arg ` to improve code organization and encapsulation
added a check for the presence of the " application . env " configuration in the Jooby class to ensure that the application environment is
refactor ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduce ` SecondDummyRetryListener
use decimal instead of nan in elastic meter registry ( fixes # 498 )
made fields email , author , and commits final in Contribution . java to enhance immutability and prevent unintended modifications
replaced a loop with a do - while loop for appending a period in JUnitFormatter . java to improve performance and readability of the
replaced direct assignment of ' elements ' with a temporary variable and added type checking for LinkedList to improve type safety and ensure proper instantiation of LinkedList
enhanced error messages in StaxEventItemReader to include resource URL to improve clarity of error messages for better debugging
* fixed testmultiregistrytarget . testmultiregistrytarget ( ) so that it do n ' t take into account the
updated client retrieval logic to handle null currentProfile gracefully to improve robustness by avoiding potential null pointer exceptions during logout
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the namespace declaration is
added BigInteger and InvalidAlgorithmParameterException imports to KeyStoreManager . java to enhance security parameters for keystore operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
added engine version to process definition in BpmnDeployer and BpmnDeployerTest to ensure correct engine version is set for deployment
updated resource loader and parser property names in SpecificCompiler . java to improve clarity and consistency in naming conventions
updated thread verification methods in CEntryPointSnippets and VMThreads classes to improve clarity and functionality of thread verification checks
added null check for map values in GenericUDFMapValues . java and created a new test class TestGenericUDFMapValues . java
rename " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to improve clarity by accurately reflecting the
added configuration properties for oil well generation rate and enable oil spouts in BCEnergyConfig . java and OilGenerator . java
added a check for the existence of the " . clean - me " file in both ImportContext . java and JobQueue . java to ensure
improve error message when memoryrealm . readxml fails
removed duplicate import statements in CRLDistributionPointRevocationCheckerTests . java to improve code clarity and maintainability
added a wildcard import for ZipConstants in ZipConstants64 . java and updated ZipEntry . java to utilize it to improve code clarity and
refactor ` newFileSystem ` methods to improve file existence checks and error handling to enhance robustness by ensuring only valid file paths are processed
replaced ` createHorizontalStrut ( conditionLabel . getPreferredSize ( ) . width ` with ` createHorizontalGlue ( ) `
updated connection initialization in FailoverUpdateURIsTest . java to ensure proper connection setup for tests
added Gson @ SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enhance serialization
add databaseadapter . deleterecord ( ) to delete database entry only if deletion be successful .
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
fix off - by - one error in responsemessage . getbuffer ( )
do n ' t start / stop the admin console server if it ' s already stop .
replaced the unregisterHandlers method with direct initialization of binaryConsumer and textConsumer in WebSocketImplBase . java to streamline the code by elim
added configuration properties for device ID transformation method , ID table , and ID table log file in IoTDBDescriptor . java to enhance flexibility in
reduced the number of documents in the test from 2000 to 100 and introduced a new DelayingSearchComponent class to improve test coverage and enhance
changed the condition from checking if the mockTsp variable is true to checking if it is not null to ensure that the mockTsp variable
script : fix transaction . hashforWitnessSignature to use witnessscript instead of scriptcode
added " fieldType " to the expression in IndexSchema . java to support additional schema types in the indexing process
added a null check for valueCompleters in Completers . java and created a new OptionCompleterTest . java file to ensure
fixed checkstyle issue due to commit
changed the data type of ` sourcePeerId ` and related methods from ` String ` to ` int ` across multiple classes to accommodate
refactor file upload logic into a separate method ` UploadFile ` to improve code readability and reusability
updated the alpha of the replyButton in TweetFragment . java to improve the visual appearance of the reply button
added mocked AccessLogContext and updated expected timestamp formatting in AccessLogSupportTest . java to improve test reliability by ensuring correct timestamp representation
marycachetest : move testfiles - deleteme to tmp directory
refactor subscriber management logic in SettingImpl . java to simplify null checks and improve clarity to enhance code readability and maintainability by elim
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed unused imports in AbstractSaml10ResponseView . java to improve
replaced ` printStackTrace ( ) ` with ` LogUtil . warn ( t ) ` in ` DataBrowser . java ` to improve logging consistency
added a condition to check if the asset directory exists in the development mode and updated test cases accordingly to ensure that the asset directory is correctly handled
[ flink - 8859 ] rocksdb backend should pass writeoption to rocks . put ( ) when restore
changed the default format of the constant from " value - tag - index " to " value - index " to align format naming with the intended
use request hint for dijkstrabi algorithm and minimum precision in demo app
secp256k1 , nativeAltbn128 : enable native mode by default .
rename DuclsSandboxTest to SandboxTest and update related references to improve clarity and consistency in naming confined script tests
camel - 16400 : fix the issue of cxfdestination throw exception when process incoming message fails .
make sentimentcostandgradient . forwardpropagatetree public so that it can be use outside the package
updated the SQL query to include a timeout value of 20ms instead of a fixed value of 0 to improve query performance by allowing more time for
[ mng - 6792 ] do n ' t allow interpolation of project . basedir in profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future features
add zoom functionality in ShareActivity for handling back key events to enable smooth transition out of zoom mode
added a conditional check to skip deprecated fields in Json . java to optimize performance by avoiding unnecessary processing of deprecated fields
added animation listeners for showing and hiding the send layout in LauncherFragment . java to enhance user experience by providing visual feedback based on layout
[ hotfix ] fix checkstyle violation in utils . java
added Progressable parameter to multiple methods in Utilities , PTFRowContainer , HiveBinaryOutputFormat , and HiveIgnoreKeyTextOutputFormat to
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove the contribution from the panelByContribution and update its ordering and colors to ensure the panel reflects the current contribution state and updates the
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` to improve clarity and consistency in naming conventions
added a check to initialize ` dPath ` to the user ' s directory if it is empty to ensure the application uses the user ' s
defaultaudiosink : set default sample rate to 48000 when no value be provide .
log4j2 - 1677 : complete the work to make mapfilter garbage - free to call mapmessage getdatavalue to avoid call mapmessage
updated VerificationInOrderWithCallsTest . java to improve test coverage to enhance reliability of method calls during testing
updated the return statement to use axis . x instead of axis . z to ensure correct axis assignment for quaternion calculations
corrected the constant name from " colelction . delim " to " collection . delim " to ensure consistency in naming conventions
add a test case to verify the listener be connect at the start of the CuratorFramework instance to ensure that the listener be properly registered and
updated conditional logic in DocRenderer . java and added new test cases in PHPCCDocumentationTest . java to improve clarity of type handling and
refactor one - handed mode support logic in RecentsAnimationDeviceState . java to improve code readability and maintainability
added onDetachedFromWindow method to manage running tasks in AppsCustomizePagedView to ensure proper cleanup of running tasks when the
added a dictionary resource parameter to MorfologikAnalyzer and MorfologikFilter classes and updated related constructors to support support for
replaced the variable ` count ` with ` thrown ` in ` ResultSetTest . java ` to streamline exception handling logic for better clarity
update InitializeProjectMessage constructor to pass an empty string instead of debug to simplify project initialization when debug mode is not applicable
replaced ` AtomicReference ` with ` AtomicBoolean ` for ` preventedByLocking ` and added ` preventedByMVCC ` to
refactor tooltip text handling in ComponentTree and ComponentTreeRenderer classes to improve clarity and maintainability of tooltip text management
increased the timeout duration for the zipkin server from 5 seconds to 10 seconds to allow more time for the zipkin server to be
update deviantart ripper to use configurable username and password .
replaced KNOWN _ GOOGLE _ SIGNATURES array with GOOGLE _ PLATFORM _ KEY and GOOGLE
updated the method name from ` solutionBusiness ` to ` createSolutionBusiness ` in ` ImportDirSolveAllTurtleTest . java
added a method to notify window state changes in WWindowPeer . java to enhance event handling for window state changes in the application
added emailDescription to EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to provide a detailed description of the entity
update return statement to use data . remove instead of a local variable to improve clarity and maintainability of the code
refactor language retrieval in Locale class to reduce redundant code to improve code clarity and ensure accurate ISO3 language
refactor ChangeLogParser usage and introduce a factory method for creating UpdateVisitor to enhance code readability and maintainability by centralizing the
added a check to return early if screen pinning is active in OverviewCommandHelper . java to optimize performance by avoiding unnecessary processing when
added getter and setter methods for chart data text and description in Chart . java to enhance flexibility in displaying chart data availability messages
refactor Http1xServerResponse , Http2ServerResponseImpl , and HttpTest classes to introduce checkHeadWritten ( ) method to
refactor chunk handling logic in NettyResponse . java to use a separate method for clarity to improve code readability and maintainability by
added " : scheme " header to Http2TestBase and updated related test cases in TestHttp2Limits and TestHttp2Section _ 8
fixed - rlocalcachedmap should return cached value if storemode = localcachemode . redisson . storemode . localcache .
( chore ) camel - jpa : fixed npe in camel - jpaendpoint
change the variable name from fallSpeed to jumpSpeed in PhysicsCharacter . java to improve clarity and consistency in naming conventions
add a condition to check if reparsedFunction is null when _ no _ syntax _ extensions is true to ensure proper handling of syntax extensions
renamed ` log ` to ` logger ` and refactored order book handling in ` BitstampPusherService . java ` to improve
added deprecated methods ` getOldUploadSegmentHttpURI ` and ` getOldUploadSegmentHttpsURI ` to ` FileUploadDownloadClient ` to
updated the method call to include a filter parameter in MongoDbTailTrackingManager to enhance tracking functionality by allowing filtering based on specific criteria
( chore ) camel - juel : improve test coverage for predicate
added alpha value bound to RecentsView . java to ensure alpha is within the valid range of 0 to 1
updated the format of the import - package attribute in ManifestReversion . java to improve clarity and consistency in attribute representation
refactor DataSyncConfiguration class for improved synchronization logic to enhance performance and maintainability of data synchronization
added JavaSnippetRepository import and initialization in JavaLanguageServer . java to enhance snippet management functionality in the Java language server
added a loop to update sums based on the number of time buckets in StarTreeRecordStoreCircularBufferImpl . java to improve performance by
chromedriver be no longer available through google code downloads to update url
( chore ) camel - pg : use preparedstatement to avoid potential resource leak
use rome instead of sun for rome feed parser
added Content - Length header handling in TransferCompletionHandler and modified NettyTransferAdapter instantiation in NettyAsyncHttpProvider to ensure accurate tracking of
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
removed the protected constructor from EnhancedRuntimeException to streamline the code by eliminating unnecessary complexity
fix intermittent failure in socketappendertest due to intermittent ci failure
( chore ) camel - event : cleanup unused import
updated method signatures to include ` byte [ ] ` instead of ` NoSuchMethodException ` and ` IllegalAccessException ` in ` ByteArray . java ` to enhance error
added a method to disable input proxy and updated touch event handling in RecentsAnimationWrapper . java to improve touch event management and ensure proper
camel - 6770 : fix restletdomainservicetest failing after the upgrade to restlet 2.1 . 4
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method in ` HashTableTemplate . java ` to simplify method
move modulepathtest from ` ` com . hazelcast . tests ' ' to ` ` com . hazelcast . test . modulepath '
added a new method ` getSourceDirs ( ) ` in ` JavaServerConfiguration ` and improved logging messages in ` JavaLanguageServer ` to
updated menu item ID from ` menu _ open _ web ` to ` menu _ mute _ hashtags ` in ` TweetPager
renamed methods from ` nodeIsAncestorOfItself ` and ` nodeIsDescendantOfItself ` to ` nodeIsNotAncestorOfIt
fix y - coordinate calculation in worldeditplayer .
updated the ` selfCheckDataTypes ` method to include ` PathNotExistException ` and modified the exception handling logic to improve error handling and provide
updated closing brace formatting in JavaCompiler . java to improve code readability and consistency
[ hotfix ] [ runtime ] move mailboxexecutor from abstractstreamoperatorfactory to abstractstreamoperatorfactory
hbase - 5574 : add security check for settablestateinmeta and fixmeta
updated method references from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilterTests . java
updated the constructor of BlockJUnit4ClassRunner to use the Java class instead of the test class to ensure compatibility with the correct Java class
[ drools - 7 ] use lastdata instead of remoteitems when delete a rule
update calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to correct the calculation for cell width and padding
[ hotfix ] [ core ] introduce parent _ first _ logging _ patterns constant in coreoptions
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the merging process for
hhh - 11341 : session . close ( ) should not throw connectionexception
refactor methods in GetLocations . java for improved clarity to enhance code maintainability and readability
fail the build of the object if failonerror be true in schema validation
replaced ` UncheckedIOException ` with ` ignore ` in ` Contents . java ` to simplify exception handling by ignoring unnecessary exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android versions
ruby flavor : wrap last term in ` ? : ` instead of ` ` nothing to repeat ' '
updated error logging and added null checks for username and password in the DerbyDatabase and BaseLiquibaseTask classes to improve robustness by ensuring sensitive information is only logged when available
remove the ` ` usecaches ' ' property from the ` ` nio2endpoint ' ' interface
updated ` CasGeoLocationConfiguration ` to use ` Resource ` instead of ` MaxmindProperties ` and refactored database reading methods to
rename instructorfeedbackresultsspageuitest . html to be consistent with other ui test
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to enhance the method ' s functionality to accommod
changed method visibility from public to package - private in ApprovalStore , ApprovalsControllerService , and ApprovalStore classes to
added a flag to track whether a download has started and cancel a notification if it has already been started to improve user experience by preventing unnecessary
do n ' t set taskbar window to non - fullscreen while folder animates close
updated project version from 1.0 . 11 to 1.0 . 13 and corrected opyright year from 2008 to 2009 to
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure consistency in
refactor GsonBuilder for improved JSON handling to enhance performance and maintainability of JSON processing
add a null check for centerGeo before adding it to circleCenters and add it to fixedPoints to prevent potential NullPointerException when centerGeo is
remove espresso home option and use homefinder to get language home .
doc : fix typo in javadoc of ctqueryable ( # 3995 )
changed the access modifier of ` timeToDieInSeconds ` from protected to private and removed the ` deleteSession ` boolean variable to enhance encapsulation and
corrected the spelling of " InvalidDocumentStoreApiUage " to " InvalidDocumentStoreApiUsageException " to improve code readability
solr - 2221 : testjoin . testrandom fails to improve effective test coverage
added the file parameter to the triggerMediaScan method in FileDownloader . java to provide additional context for the media scan event
removed conditional printing of test results based on verbosity settings to simplify test result posting logic and improve code readability
added methods to retrieve custom G - code settings from text fields to enhance user configurability for custom G - code inputs
fix for http : / / issues . apache . org / activemq / browse / amq - 2638 - use bufferedwriter
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future development
added exception handling for unset . sys . property in TestBadConfig . java to ensure proper handling of exceptions during tests
added a method to remove fragments and action bar in GpsMainActivity to improve fragment management by hiding the action bar when necessary
updated spanishTokens and spanishTokens2 lists in TokenizerAnnotatorITest . java to remove unnecessary " = " prefix to streamline
replaced instances of Range . create with Range . Byte in RemoteMediaHandler , RemoteRawHandler , RemoteUtil , and RemoteRawHandler to
updated gcodeFile path and enhanced object bounds logging in VisualizerCanvas , while modifying translation depth , along with expanded G - code matching in GcodeViewParse to improve debugging output
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " while
updated formatting in assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java for consistency to improve code readability and maintainability
added a null check and state validation for the output stage in StatementResource . java to ensure that the exchange client is properly closed when the query
fix IntegrityCheck by make expandFilename private and simplify file extraction logic
removed unused SolrClient import from ChaosMonkey . java to clean up the code and improve maintainability
fix npe in configurationactivator if fas be null .
removed unnecessary whitespace in NestedRepositoryTreePanel . java to improve code readability and maintain consistency
change constructor visibility of ExtensionTypeHeader from package - private to public to allow instantiation of ExtensionTypeHeader from other packages
pdfbox - 4892 : do n ' t throw ioexception when generate field appearance
push to pushgateway on shutdown by default
added error handling and context management for state machine trigger errors in ReactiveStateMachineExecutor to improve error management and provide clearer feedback during state machine
added a test method to verify the behavior of multiple Python executables on the first path in BuckConfigTest . java to ensure that
added a default button to the root pane in InitialAccountRegistrationFrame . java to ensure the correct button is displayed for the signin functionality
added a new constant TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and updated
updated error logging messages to include exception details to improve clarity of error reporting for better debugging
rename org . axonframework . util . reflection . reflection to org . axonframework . util . util
added a static method ` listableCollector ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` OidcIdToken
removed the ' center ' field from multiple Circle , Ellipse , Polygon , Polyline , and Rectangle classes to streamline the code by elim
[ hotfix ] fix checkstyle violation in registerandprocessbundleoperation
fix # 5154 - add support for javax . net . ssl . hostnameverifier to httpclient
updated assertions in ConfigurationPropertiesTest to use defaultMaxExpectations and maxLogEntries instead of maxExpectations to improve clarity and consistency in
updated the return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more specific error message for access confirmation
[ 3.0 ] add consumer class loader filter ( # 9441 )
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method and modified its logic to
rename ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods to ` setRolloverPressedIcon ` and ` setRol
refactor grid translation handling in TaskViewUtils , TaskViewSimulator , and RecentsView classes to improve code clarity and maintain
refactor assertion methods in Assertions . java to improve code readability and maintainability
added null check for currentDateTimeFunction in multiple database classes to ensure safe access to the currentDateTimeFunction when it is not null
added an ` anonymousPath ` method to ` IOUtils ` and updated logging in ` Log4jUtils ` to utilize it to improve path
update the parameters and implementation of the DigitalWellBeingToast . java to include a content description to enhance the accessibility of the toast by providing detailed content information
increased the wait duration for metaAvailable from zero to a fixed value of 50 to improve responsiveness by allowing more time for meta
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
make genericitem . getstate ( ) return a default conversion ( # 3649 )
added integration provider and a new test for fetching posts and post details in BidirectionalOneToOneNPlusOneTest . java to enhance testing
added a method to remove extra empty screen and modified startSearchPageIndex assignment based on workspace screens to improve user experience by preventing
fix arrayindexoutofboundsexception in markbasepointersphase and add null check in indexedvaluemap
updated string formatting in GoogleLineChart . java and GooglePieChart . java to use double quotes instead of single quotes to ensure consistent formatting
updated the logic for obtaining the wait number of batches in SendingAccountor . java to improve clarity and handle potential interruptions
hbase - 16400 add position to walprettyprinter to seek to in the file ( chaoyu tang )
change the connection timeout parameter from 1 to 0 in NettyTransceiver instantiation to initiate an immediate connection attempt without waiting for a timeout
sort log event before generate a report ( fixes # 399 )
added a new test method ` getCsvLine _ DescriptionContainsDoubleQuote _ ReturnsCSVLineWithEscapedQuote ` to ` CSVFileLoggerTest
add - coref . doscore and - coref . useconstituencytree option to dcorefchinesebenchmarks
do n ' t send iq message for non - remote recipient
added @ JniImpl annotation to VM . java to enable the use of JNI for native - image processing
updated configuration settings in Fetcher2 . java to use Protocol constants instead of string literals to improve code readability and maintainability by standardizing
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java to ensure
updated package name from " other _ package " to " other _ package2 " in AstTests . java to ensure consistency in naming conventions
fix ( worldborder ) : set current diameter only if percentage > 0.99
override getwalgroupsreplicationstatus to avoid npe
remove the caller from the login operation view when the login be successful
updated the ` markDataResourceOnline ` method calls to use ` generateInstanceConfigs ` instead of ` new ArrayList < InstanceConfig > ` to
changed the access modifier of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
added unit test for read erroneous Maven project contains reference in ProjectBuilderTest . java to ensure robustness of project building and error handling
removed redundant null checks for protoGetSwitches and protoHistory in PropertyMap . java to simplify code logic for better readability and maintainability
modified the ` getControllerId ` method to accept a ` configId ` parameter and updated related logic to enhance functionality by allowing relay filtering based on
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper
removed the condition for generating refresh tokens in OidcConsentApprovalViewResolver to streamline the consent approval process by eliminating unnecessary checks
removed a debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
fix osgi resolution issue cause by jdk . internal . vm . annotation
rename ConditionalOnEnabledResourceChain . java file to improve clarity and maintain consistency in naming conventions
added a condition to check if the treeRoot is not an instance of Rocket and its child count is greater than zero to ensure that the
pdfbox - 4892 : use getunfilteredstream ( ) instead of getfilteredstream ( ) , a suggest by valeryb
updated log messages in FacebookImpl . java for consistency and clarity to enhance readability and maintainability of log messages
updated return statements in ShadowICU . java and added a new date picker test in ShadowICUTest . java to improve code clarity
simplified the condition for checking device lock status in TouchInteractionService . java to improve code readability and reduce unnecessary checks
cloudstack - 3443 : fix npe in volume creation when disk offering be null
updated UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel and added position tracking to improve performance and ensure proper handling of asynchronous file
[ java ] remove unnecessary try - catch from sigint . handle ( ) .
avoid extra boolean argument ; access public const directly
change return value from - 1 to 0 in Asset . java to correct the logic for returning a default value
refactor ComputeBenchmark to use static variables for ITEMS and improve code clarity to enhance code readability and maintainability by reducing
added a refresh listener to the UploadListFragment to notifyDataSetChanged to ensure that the UI reflects changes in the adapter ' s data set
use path instead of file in bibdatabasecontext ( # 3649 )
replaced ` emitters . items [ i ] ` with ` emitters . get ( i ) ` and added a ` dispose ( )
refactor service and engine management in Tomcat . java to use findServices ( ) for retrieving services and engines to improve code efficiency and
updated string literals in BuildRuleFactoryParams , Console , and BuildRuleFactoryParamsTest to ensure consistent formatting and improve readability of error messages
added a check to return early if the playback state is not PLAYING to optimize performance by avoiding unnecessary processing when the playback state is
removed dependency on ServiceComponentDesiredStateEntityPK in DeleteServiceTest . java to simplify code and improve readability by eliminating unnecessary dependency
refactor inner class handling logic in Java2TypeScriptTranslator and add a new InnerClassFieldClash test case to improve inner class cl
added logging and follow redirect filter functionality to DockerClientFactory and DockerClientProfile classes to enable configurable logging and follow redirection behavior in Docker connections
replaced direct calls to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure thread
hhh - 10183 fix test failure on sql server 2008
close input stream in ziphelper . verifyzipheader ( ) to prevent resource leak
changed the access modifier of the ` storeClassFile ` method from private to public to allow access to the method from other classes
updated the assertion in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues to ensure functionality works correctly for missing values
updated error messages in CGIHandler . java and added a new start method in JavaVM . java to improve clarity of error reporting and
added additional checks for line endings in LineReaderImpl . java to ensure proper handling of line breaks in string processing
refactor ` multiFetchSourceFiles ` to accept ` Set < String > ` instead of ` List < String > ` for hash codes to
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to optimize performance by avoiding unnecessary
updated the ` shouldUseArgumentTypeWhenOverloadingPuzzleDetectedByVerificationInOrder ` method to ` shouldPrintArgumentTypeWhenVerificationIn
replace ` FileUtil . createData ( ) ` with ` FileUtil . createFolder ( ) ` in ` MacroService . java ` to
truffle : remove unused import , fix checkstyle issue
refactor JsonObject class to improve data handling to enhance performance and maintainability of JSON processing
updated idle timestamp check from ` _ maxIdleTime ! = 0 ` to ` _ maxIdleTime > 0 ` in ` SelectChannelEndPoint
fix farmlandblock . cansustainplant not be call to getplantable ( ) .
added a new database table and updated primary key retrieval logic in QueryDatabaseMetaDataIT . java , modified database connection handling in ConnectionQueryServicesImpl
updated SimpleDateFormat to use Locale . US for date formatting in HttpCookie . java and added a new class B6791927 . java to
removed multiple redundant calls to db . close ( ) in DbHelper . java to streamline resource management and improve code readability
increased polling timeout from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to allow more time for processing messages in
[ gr - 11313 ] add option to tracebuilderphase and globallivenessanalysisphase when allocate allocation stage .
refactor key event handling in SourceTab and add a new method in CodeAreaKeyBindings to improve key binding management and enhance code readability
initialize the ObjectMapper instance in a static block to ensure consistent line separator for better compatibility across different operating systems
change windows path handling in NativeEnvironmentRepository . java to ensure consistent path formatting across the application
refactored application initialization and shutdown in multiple test classes to improve resource management and ensure proper application lifecycle
[ java ] remove unused validation method in record log .
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
do n ' t use thread . sleep in testfuzzoptimizations . testmemoryusage ( )
added a boolean field ` reverseImage ` and removed shared preferences initialization in ` CameraManager . java ` to simplify the code by eliminating
updated string equality checks for entry names in multiple Java files to improve readability and maintain consistency in string comparison
add a predicate to avoid overwrite golden resource attribute that be involve in linking
updated JUnit imports and annotations in AuthenticationSuccessListenerTests . java to use JUnit 5 API to improve compatibility with JUnit 5 features and
improve performance of settypes . indexof ( ) by avoid unnecessary arraylist creation
refactor TypeUtil to improve code readability to enhance maintainability and facilitate future feature additions
updated triggerTime variable to use LocalDateTime and TimeZone for better date formatting to improve accuracy of trigger time representation and ensure proper timezone handling
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for handling abstract method errors to improve error handling by
( chore ) camel - catalog : fix validation of ognl expression
removed an empty check for ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary
camel - jclouds : fixed the unit test error of camel - jclouds
( chore ) camel - cons : fix checkstyle violation
added a check for the ACC _ STRICT access flag in the default method and created a new test class to ensure that methods with the
[ java ] increase driver timeout in channelvalidationtest to avoid intermittent failure .
added a new file ` FileExtensions . java ` to define file types related to CLANG sources and headers to provide a centralized way to
refactor DateFormatUtil to use a static final ISO8601CanonicalDateFormat instance and simplify ThreadLocal initialization to improve code readability and maintainability by
added new deprecated VM options for " UseCGroupMemoryLimitForHeap " in VMDeprecatedOptions . java to indicate that the option is outdated
added a displayName property to Pac4jBaseClientProperties and updated related classes to support customizable display names for client identity providers
replaced RuntimeException with EarlyTerminationException in multiple operator classes to provide more specific exception handling for early termination operations
removed unnecessary whitespace in the return statement to improve code readability and maintain consistency
improve handling of httpconnection . getresponse ( ) and httpconnection . getconnection ( ) . getresponse ( ) . getresponse
fix potential npe in forgeeventfactory . getcapabilities ( ) when parent be null .
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling by eliminating unnecessary exception handling
added @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that the service is outdated and should no longer be used in
refactor length handling in HyphenationTree . java to improve clarity and maintainability of the code
added a delay of 200ms in the IQRegisterHandler to allow for a longer time for registration to complete before proceeding
add resource . getimage ( imageid ) to avoid npe .
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED constant in ParameterBinder . java to clarify that
added a boolean variable ` providersChanged ` and initialized it to false in ` ConfigurationManager . java ` to track the state of providers that have
added a method ` quoteIdentifierTokens ` to handle quoting tokens in ` SemanticAnalyzer . java ` to ensure proper escaping of identifiers based on configuration settings
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated type casting and suppress warnings in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings
modified the condition to check if the current actor is within its parent ' s height before proceeding to improve the logic for determining if an actor
added null check for appManifest before setting targetSdkVersion to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator to use a dedicated method for adjusting configuration metadata to improve code readability and maintainability by reducing duplication
added userName property and getter / setter methods to Driver , HiveSemanticAnalyzerHookContext , and HiveSemanticAnalyzerHookContextImpl classes to
camel - 16400 : added getter / setter for xsltbuilder so you can customize the xslt component .
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , TaskExecutorTestHelpers , and TestFirstInFirstOutComparator to enhance
updated expected file size and URI parsing in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to ensure compatibility with legacy
add null check for context before log access to avoid npe
camel - 16400 : camel - core - optimize the throughput logger to reduce log noise .
updated VM version checks to use Platform . isDebugBuild ( ) instead of System . getProperty ( " java . vm . version " ) to improve
refactor MeterStatisticsManager to use a single instance of MeterDetailStatisticsModel instead of a static map to improve code organization and maintainability by
refactor logback configuration handling in FrameworkLauncherExtended . java to improve clarity and ensure proper resolution of system properties
added @ NotNull annotations to several methods in CipherExecutor , CookieRetrievingCookieGenerator , CookieValueManager , and CookieValueManager classes to enforce
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in ` ExecutableMacroExpander `
refactor container creation in ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest ` to use try - with - resources to ensure proper
changed the class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class
updated closing brace formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate shield addresses in RpcApiService to enable retrieval of shield addresses from the wallet
changed the return type of ` readConsoleInput ( ) ` from ` byte [ ] ` to ` String ` and updated character encoding handling to
updated regex patterns and initialized sRunFlavor in TestStabilityRule . java to simplify regex matching and improve code clarity
added a condition to limit fragments based on multi - valued fields in DefaultSolrHighlighter to ensure that multi - valued fields do not exceed the
modified the ` tryToLogin ` method to accept a ` Uri ` and username and password as parameters to enhance the method ' s functionality to
updated entity handling logic in ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrownRsp . java ` to
( chore ) camel - jms : fix checkstyle violation
removed wrapping of collection parameter in the update method to simplify the method signature for better readability and maintainability
added handling for IllegalCurrencyException and logging for unknown currencies in BTCEAdapters . java to improve error handling and provide clearer logging for
refactor subscription creation logic in DurableConduitBridge . java to use a candidateSubName variable to improve clarity and maintainability
pdfbox - 4892 : set default value for averageCharTolerance and spacingTolerance , a suggest by valerybokov
updated the ` startController ` method to include a ` useTenantIsolation ` parameter and introduced new tenant creation methods in ` ClusterTest ` to
simplified the return statement by directly casting the response value to improve code readability and reduce unnecessary object creation
added a check to ensure ` attrs . size ( ) ` is non - negative before verifying its size to prevent potential NullPointerException when ` attrs
added methods for retrieving JDK name , type , and language level in IjProjectConfig and IjProject classes to enhance project configuration management
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to improve code readability
added tests for ` GrantedAuthorityEffectiveAclsResolver ` to handle ` String ` and ` User ` objects as principal objects to ensure correct
update javaparserjavaparsertypedeclarationadapter to use javaparser . getsolvedjavalangobject ( ) instead of
added button management logic in XToolkit . java to limit the number of buttons supported by the toolkit
updated import statement for assertEquals from jdk . testlibrary to com . oracle . java . testlibrary to ensure compatibility with the latest Java
added a new MessagePackFactory class and refactored MessagePacker and MessageUnpacker constructors to improve modularity and encapsulation of Message
add new biome tag ( is _ desert , is _ cave ) and make bokshelves item copyable ( #
rename method ` present ` to ` draw ` in multiple screen classes to improve clarity and consistency in naming conventions
added horizontal check and updated UIID assignments for group elements and buttons in ComponentGroup . java to ensure correct UIID is used for toggle buttons
replaced DOI _ URL _ PATTERN matcher with matcher in DOIServiceImpl . java to improve code readability and maintainability by using
replaced instances of ` AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLock
[ java ] do n ' t use volatile in cluster service agent when commitposition be not close .
# 1193 - add documentation for record id class ( # 1194 )
added error handling for malformed URLs in HttpConverterRegistrar to improve robustness by providing a clearer error message when the address is invalid
apiresponsehelper : fix npe in listcapacity api response when there be only storage allocation or storage storage pool
replaced ` dir . openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` dir . fileLength ( fileName
refactor JavascriptCompiler to improve class structure and exception handling to enhance code clarity and maintainability by standardizing method signatures and exception handling
removed the ` synchronized ` keyword from the ` store ` method in ` UISettings ` to improve performance by reducing unnecessary synchronization
fix the text field to not paint the string if currently the editing be do natively on the platform
spannerio : retry on reject concurrent transaction ( # 167 )
use diamond operator to improve code readability
modified the return type of the array from double to short in ObjectInputStream . java and added a new class CloneArray . java with serialization tests to
replaced ` getClaim ( ) ` with ` getStringClaim ( ) ` for nonce retrieval and improved logging behavior to enhance type safety and
added a condition to check if a field is a relationship field in DCInputSet . java to improve handling of relationship fields in the input set
added server slogan capability to the capabilities table and updated related methods to enhance capability management and improve code readability
updated menu item comparison logic in DrawerActivity . java to ensure correct handling of menu items based on their current state
replaced ` fail ` with ` assumeNoException ` in ` SolrRequestParserTest . java ` to improve test reliability by avoiding
added a check to return early if missing symbols are empty in MissingSymbolsHandler . java to optimize performance by avoiding unnecessary processing when no symbols
added a new table row " Data 5 - 4 " and " Data 3 - 4 " and " Data 5 - 4 " to the StringHelper
log a warning if the data provider return an empty array or iterator , so this test be not do anything
( chore ) camel - core : use collections . empty ( ) instead of collections . empty _ set ( )
bug fix : selection style should not be set to bubble if map version > = 14
updated the parameter name from ' mass ' to ' restitution ' in the setRestitution method to improve clarity and consistency in
added a new file ` AutoFtpActivity . java ` and modified ` FtpHelper . java ` and ` FtpHelper . java
refactor token handling in BaseSemanticAnalyzer to improve clarity and structure to enhance readability and maintainability of the code
added methods to retrieve and set component states in ImageViewer , OnOffSwitch , Component , and GenericSpinner classes to enhance component state management and
added a new file ` RemoteExecutionEnabled . java ` and modified ` BuildableSerializerTest . java ` to implement serialization and deserialization of `
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` in ` ImportCsv . java ` and added ` @ SuppressWarnings ` annotation in ` PublicBAOS
added assertWorkingScoreFromScratch method to AbstractScoreDirector . java to ensure shadow variables are not stale during execution
updated SEMIJOIN _ CONVERSION from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
camel - 16400 : camel - datagram : do not log message with non - netty buffer type .
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated related logic in ` FileDisplay
added assertions to verify the presence and presence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly validated
added a deprecation annotation and updated a test method name in SchemaRegionBasicTest . java to indicate that the test methods should no longer be used
added null check for sampleMimeType in MediaCodecRenderer to ensure that a valid sampleMimeType is provided to prevent runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23Pool
updated @ AllArgsConstructor annotation to use @ JsonCreator . Mode . PROPERTIES to enable JSON serialization configuration for better flexibility
added a check to prevent creating an index on a view type in MetaDataClient . java to ensure compatibility with unsupported features and prevent runtime errors
added a new ` Website ` class and updated imports in ` PopulatorImplTest ` to implement a test for Java Net - types population
added a setup method to initialize Locale in BSFormatterTest to ensure consistent locale settings for tests
add a warning to the coremodmanager when there be a problem download a jar . zip file .
updated the assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve comparison accuracy by ignoring case
added checks for single and variable parameters in SimpleExprGenerator to ensure proper handling of variable parameters during expression analysis
added a boolean flag ` createdVertx ` to track the creation status of the Vertx component to ensure that vertx components are only created
updated the ` writeAttributes ` method calls to include the ` NodeModel ` as a parameter to enhance the functionality by associating attributes with the
updated log messages from " Synchroned " to " Synchronized " in SynchronizeFolderOperation . java and added null checks in FileDisplayActivity
added a new boolean field ` ignoredReadStatus ` in ` Entries ` and updated its usage in ` CategoryREST ` and ` FeedREST `
replaced ` MavenTestingUtils . getTargetDir ( ) ` with ` MavenPaths . targetDir ( ) ` in multiple files to standardize resource
added validation logic for URIRegisterDTO and MetaDataRegisterDTO in RegisterServerConsumerExecutor . java and refactored URIRegisterExecutorSubscriber . java
update isPlaying condition to check if the sound is not paused to ensure accurate playback state tracking for the sound
added permission check for ADMIN _ SUDO _ AREA in MainCommand . java and introduced a new permission constant in Captions . java to
updated query options handling by introducing a new method ` updateQueryOptions ` to improve code readability and maintainability by encapsulating query option
updated file name comparison logic in ReloadableJavaParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to
refactor emoji attribute assertions in ResourcesTest . java for improved clarity to enhance readability and maintainability of test cases
replaced the NMTWaitForDataMerge method with a new native method NMTOverflowHashBucket and NMTMallocWithPseudo
[ hotfix ] [ serializer ] introduce javaeitherserializersnapshot for java 8 compatibility
updated AddressResolverOptions and AddressResolver classes to use constants for default resolv options instead of hardcoded values to improve maintainability and clarity
added a method call to ` __ associate ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplateTest `
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated file paths from " liquibase / parser / core " to " www . liquibase . org " in multiple Java
rename com . oracle . truffle . api . source . commonmimetypelocator to com . oracle . truffle . api . test . source
updated ` repoState ` from ` INIT ` to ` NOT _ REQUIRED ` and replaced it with ` NOT _ REQUIRED ` in multiple classes to
updated the comparison logic in GenerateChangeLogTask . java to include additional schema comparisons to enhance the comparison process with additional schema information
updated JUnit import from ` org . junit ` to ` org . testng ` in ` TestBackwardAnoamlyFunctionUtils
added a new file ` ProgressiveJPEGTest . java ` to implement progressive JPEG rendering with a sprite batch to facilitate testing
replaced alpha test settings with alpha discard threshold settings in MaterialLoader . java to improve performance and clarity of material loading
make native - image - building error message more informative for 32 - bit architecture
added a null and empty check before setting the size in the Label class to ensure that the size is only set when the text is not null
modify the readVarInt ( ) method to multiply by 1 _ 000 _ 000 to ensure that the readVarInt ( ) method returns a
changed classes PushUtils , ThumbnailsCacheManager , and PushUtils to be final and added a private constructor to enhance immutability and prevent
replaced the calculation of the ' length ' variable with a direct call to ` getLength ( ) ` from ` curConfig ` to simplify the
updated the method call from ` ( MockDirectoryWrapper ) dir . setEnableVirusScanner ( false ) ` to ` dir . set
updated the file extension from " . * csv " to " ( ? i ) . * csv " in the componentPresetDao . load method
added a conditional check for duration in TaskbarStashController and replaced hotseatQsbSpace with transientTaskbarIconSize in In
replaced ` Args . getInstance ( ) . getMyKey ( ) . getNodeId ( ) ` with ` RefreshTask . getNodeId (
pmd - task : add targetjdk1.5 and targetjdk13 to pmd - task
replaced ` PowerMockito ` with ` MockitoJUnitRunner ` in ` QuotaResponseBuilderImplTest . java ` to improve
added error and output streams to the system in TestSchemaToolCatalogOps . java to improve error handling and provide better visibility into error output
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper and updated related methods to include it to enhance
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter to enhance query method functionality by incorporating repository - specific metadata
added support for entityresolver2 in Digester . java by introducing EntityResolverWrapper and EntityResolver2Wrapper classes to enhance flexibility in
updated import statements in MetaDataEndpointImpl . java to remove redundant static imports to streamline code and improve maintainability by eliminating redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry logic to improve deadlock management and
corrected variable name from ' xl ' to ' xAxis ' in BarChartActivity . java to improve code readability and maintain consistency in naming
added methods to validate and handle printable characters in FsUtils . java to enhance string validation for better compatibility across different operating systems
rename method ` in ` to ` using ` in ` Selenide ` and ` WebDriverRunner ` classes to improve clarity and consistency in
add processpluginconfiguration to projectbuildingrequest to allow plugins to be process .
do n ' t use double . getandset ( ) in java . net . http . proxyconnectionmanager and java . net . server
updated the RESOURCES constant to check for existence of " src " ' s " src " ' s " resources " directory to ensure that the
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes to return the user ' s remote host instead of
[ ds - 3752 ] add admin permission check to community list servlet
[ flink - 2692 ] [ runtime ] add thread counter for long and short compaction in compactsplit
updated package name retrieval in WallpaperChooser . java from getApplication ( ) to resources . getResourcePackageName ( ) to improve resource management by using
refactor player visibility retrieval in Near . java to use a new method to improve code readability and maintainability by encapsulating player visibility
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
updated MlibOpsTest . java to improve test coverage to enhance reliability of MlibOps functionality
[ gr - 21212 ] fix access to ` ` com . sun . management . internal . operatingsystemimpl ' ' when
corrected a typo in the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a
removed redundant key and iv initialization checks in UploadFileOperation . java to streamline code and improve readability by eliminating unnecessary checks
[ flink - 243688989 ] [ test ] add stability annotation to workprofiletest
removed conditional check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary checks
changed the method call from ` setCursorPosition ` to ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to
refactor LockFreeBucket to abstract class LockFreeBucketContendedTimeMeter and introduce LockFreeBucket _ FinalFields _ CacheLinePadding
add ` ` tpstats ' ' command to nodeprobe . printthreadpoolexecutorstats
updated maxBitrate retrieval to include user preferences in ExternalPlayerActivity and PlaybackController to ensure correct maximum bitrate is set based on user
refactor trace and span ID checks in ZipkinHttpSpanExtractor and add new test cases in TraceFilterTests to improve code clarity and
move getuserpaymentaccounts ( ) to abstract so that it can be override
fix an npe in fluttercompletioncontributor # withtypeiconrightaligned ( # 5373 )
added a method to set the project ID in LauncherUtils to ensure the project configuration is correctly applied
updated JsBundle , JsBundleBuilder , JsLibraryBuilder , and JsTestScenario classes to include ProjectFilesystem as a parameter to enhance filesystem management
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] fix checkstyle violation in metricsdslcontext
removed the ` VersionConfig ` interface and updated the ` VersionBuckConfig ` class to use ` ImmutableSet ` instead of ` ImmutableMap ` to
added a try - catch block around the bindShadowClass call in Robolectric . java to handle potential TypeNotPresentException when binding
changed the visibility of the ` validateTypes ` method from static to public to allow access to the method from other classes
fix : update gapic - generator - java with mock service generation fix ( # 174 )
added SLF4J logging functionality to SimulationStatus . java to enhance logging capabilities for better debugging and monitoring
updated version position and font size in Splash . java from 138 to 150 and from 9 to 14 to reflect the latest version of the application
replace direct addition of NotificationImpl to runLater in UserInterfaceComponentImpl . java to ensure notifications are executed on the UI thread
updated return statement in AdditionalAnswers and ReturnsElementsOf classes to improve test coverage and clarity for mock behavior
corrected a typo in the error message for dropping partitions for non - string partition columns to improve clarity and accuracy of error reporting
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to ensure functionality of ` LineFileDocs
added a new method ` getVersionCode ( ) ` to ` MainApp ` and updated references in ` FeatureList ` and ` WhatsNew
camel - 16400 : fix issue with ambiguous method invocation in bean component . thanks to daniel for the patch .
replaced calls to ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java `
added bufferOwned flag and modified constructors in IndexBufferObject and VertexBufferObjectWithVAO classes to manage memory usage more efficiently to
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer class to ensure that the " forgotPassword
refactor JerseyClientConfiguration to improve client configuration handling to enhance readability and maintainability of the code
int - 1353 rename characterstreamreadingmessagesource and characterstreamwritingmessagehandler to ' org . springframework . integration . stream '
updated variable names in ` InstanceOfPatternMatchTest ` , ` RemoveRedundantTypeCastTest ` , ` TypeUtils ` , and `
added methods to handle empty arrays in StringDict and Table classes to improve data integrity by ensuring only valid entries are processed
deprecated the ` Container ` and ` WithCustomizer ` methods in ` GenericContainer ` and added ` withCustomizer ` functionality in ` Generic
updated logging level from info to error in MediaInfo . java and modified exception handling in RendererConfigurationTest . java to improve logging clarity and
added a schemapattern option to the BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector classes to allow configuration of the schemapattern for
add null check for id in provsslsessionimpl to avoid npe .
refactor width and height calculations in AndroidGraphics . java for better clarity and consistency to improve code readability and maintainability by using more
refactor Base64 class methods for improved performance to enhance efficiency and reduce memory usage
sulong : add miss getter / setter in llvmglobalcontainer .
danielwagnerhall : ignore a test that fail on iphone . fix issue 269 .
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
changed the type of ` resName ` from ` ResName ` to ` int resId ` in ` AttributeResource ` and updated related classes
resolve context tls file in defaultdockerclientconfig ( # 2329 )
replaced the ` tearDown ` method with the ` setUp ` method in ` SimpleReactiveElasticsearchRepositoryTests . java ` to ensure
modified type handling in ` Attr . java ` and added a new class ` T6450290 . java ` to improve type safety and
added logging level configuration to LoggingFlags and LoggingOptions classes to allow customizable logging behavior based on user - defined levels
added logging statements and modified the ` deleteItemsFromDatabase ` method to accept a ` Collection ` instead of an ` Iterable ` to improve trace
added ` allFilesOption ` method to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` classes to enhance
added deprecated methods ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` to indicate that these methods should no longer be used
updated the calculation of numPredictiveAppCols to account for phone devices to optimize app selection based on device type
updated the initialization of the ' value ' variable to use UTF - 8 encoding instead of UTF - 8 to ensure proper handling of character encoding in
added ` RequestMatchers ` and ` RequestMatchersTests ` classes with methods for anyOf , allOf , and not matching requests to provide a
do n ' t try to click button in applet mode ; fix typo
updated calculations for height and width in the ProgressBar class to account for background height and width adjustments
[ native ] fix external function path in presto - on - spark test
added ` final ` keyword to ` extra _ L0 ` , ` extra _ L1 ` , and ` extra _ L4 ` variables
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gesture states when the handler is invalidated
updated layout orientation checks and refactored cell width and height calculations in CellLayout and Workspace classes to improve layout responsiveness and maintain consistency
added a condition to check if the redir is a file type of " / robots . txt " in HttpRobotRulesParser . java to
replaced hardcoded warning icon with a constant in JBrowseModule . java and updated references in CallHierarchyTopComponent . java to improve maintain
updated button subscriptions in AdvancedGameSetupScreen . java from " continue " and " close " to " createWorld " and " return " to
updated null checks in UDFOPDivide . java and added a new test class TestUDFOPDivide . java to ensure
refactor method signatures and variable declarations for consistency and clarity to improve code readability and maintainability
replaced the ` filterProcessesUrl ` property with a ` requiresAuthenticationRequestMatcher ` property in ` FormLoginBeanDefinitionParser ` and `
added onDestroy method to ShareActivity and ContributionsActivity to unbind the upload service connection to ensure proper resource management and prevent potential memory leaks
replaced instances of ` thumbNail ` with ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure the correct thumbnail
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
added a method to set the request timeout for the Raft server configuration to ensure proper handling of request timeouts for Raft operations
replaced error handling with debug logging in TsFileResourceManager . java and modified test assertions in ResourceManagerTest . java to improve logging cl
added a method to set system properties in MavenModuleLoader to enhance configuration flexibility for module loading
added server metrics tracking for readiness checks in the HealthCheckResource and updated the getReadinessStatus method to improve monitoring of readiness checks and enhance
add custom itemblock registration for animatedtorch ( # 3745 )
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when writer is null
added a new method ` getHiveOnTezConfFromDir ` to ` UtilsForTest ` and updated references to ` HiveConf `
added a new link to " Muting Users " in FeaturesActivity . java to enhance user experience by providing a direct link to the Muting
added initialization property for " jdk . reflect . useDirectMethodHandle " to disable direct method handle usage to improve performance by avoiding unnecessary
hbase - 20536 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] only add lib / plugins directory if they do n ' t exist
buildtranscripthmm : use getword ( ) . pronunciations ( ) instead of getpronunciations (
updated JSON string formatting in JsonUtilsTest . java to improve readability and consistency of JSON output
added extra " id " to the compose in TimeLineCursorAdapter and TimelineArrayAdapter , and updated notiId retrieval in Compose
log a warning when stop a listener on a topic be lose .
do n ' t throw ioexception when there be no class to analyze
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to
added a boolean variable ` isIncompatible ` and updated its value in ` DLNAResource . java ` to ensure proper initialization of the `
updated the ` createAccount ` method to accept ` AccountCreateContract ` instead of ` Account ` to enhance functionality by allowing the creation of accounts
pdfbox - 4892 : avoid npe , a suggest by valerybokov
fix test that fail due to this change and remove extra call to setpoisoncause
updated the default star tree format version from " v1 " to " OFF _ HEAP " and refactored related constants to use CommonConstants
modified the title handling in FeedUpdateService to truncate the title to a maximum of 2048 characters to improve title readability and prevent potential issues with
updated the initialization of the ` previewPanel ` in ` JColorChooser ` and ` BasicColorChooserUI ` to utilize ` ColorChooser
changed log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity and improve performance during extension checking
added a null check for the reusable bitmap before setting properties in AndroidTileBitmap . java to avoid potential NullPointerException when reusableBitmap is not
added layoutParams and getLayoutParams methods to FakeView . java to provide access to layout parameters for testing purposes
added a check to ensure the cursor is not already closed in DefaultCursor . java and a corresponding test in CursorSimpleTest . java to prevent
pdfbox - 4892 : improve performance , a suggest by valerybokov
temporarily ignore jmsclienttest due to intermittent failure
add a private String field ts with corresponding getter and setter methods to enable storage and manipulation of a timestamp value
add opengrok . web . api . error . webexceptionmapper . toresponse ( response . status ( 400 ) , response . entity
changed the class declaration of AbstractExecutor from package - private to public to allow access to the class from other packages
[ isochrone ] add support for remove legacy query parameter ( # 10998 )
changed class visibility from public to package - private in multiple test classes to restrict access to these classes for better encapsulation
refactor CSRF handling into a separate method ` setCSRF ` to improve code readability and reusability
update eclipse loader patchers to allow shadowclassloader to be bootstrap
[ drools - 5640 ] allow to disable numeric value in sheet ( # 5643 )
changed log level from info to debug for logging default values to reduce log verbosity and improve performance during debugging
added null checks for axes and buttons in Lwjgl3Controller and refactored controller management in Lwjgl3ControllerManager
update the import statements for ObjectFactory in WeldFactory and WeldFactoryTest classes to align imports with the new package structure in io . cucumber
refactor port forward saving logic in PortForwardListActivity to improve code readability and maintainability
added a new configuration option ` SHOULD _ SNAPSHOT _ DATA ` in ` GlobalConfiguration ` and updated related methods in ` Main ` and
updated file handling and job scheduling in SyncedFolderObserver . java to improve error handling and streamline job execution logic
refactor LocationMarshaller class to improve code readability to enhance maintainability and facilitate future development
simplified touch event checks in ` StatusBarTouchController . java ` and ` TouchInteractionService . java ` to improve code readability
refactor ` VectorReader ` and related classes to remove the ` ColumnVectorBatch ` interface and its implementation to streamline the code structure and
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to align with the updated Mockito API conventions
refactor ` getRelativePath ` methods to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` and ` getRelativePathSupplier ( ) `
refactor ` SegmentMapper ` , ` CompositeTransformer ` , ` RecordTransformer ` , ` RecordReaderFileConfig ` , and ` RecordReader
fix argument extractor to only deal with specialized etractors and fallback to original argument extractor
cloudstack - 3640 : fix secondary storage limit for project and account ( # 3641 )
[ 1.19 ] add potionshiftevent to inventoryeffectrenderer , fixes # 3990
remove ` ` cold _ reads _ to _ omit ' ' option from ` ` sizetieredcompactionstrategy ' '
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to ensure proper resource management and prevent potential memory
calculate retry message throughput in pop consumption mode to fix the bug # 15451
rename KeyboardAddonSettingsFragment . java for consistency to improve clarity and maintainability of the codebase
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to mark the test as ignored due to the moment
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and change ` Event
added upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to improve websocket connection management and ensure proper handling of upgrade requests
add timeout functionality to AndroidImplementation with getter and setter to enable configurable connection timeouts for improved connectivity management
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods in ` GitblitClient ` and ` RepositoriesPanel ` to
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure proper parsing and deparsing of SQL queries
refactor file access assertions to differentiate between root and non - root directories to improve clarity and functionality of file access checks
added logging functionality and refactored executor selection logic in FixedThreadExecutor . java to improve thread management and configuration flexibility
added null check for the field before checking if it ' s " catalogname " to prevent potential NullPointerException when the field is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to align with the latest Spring framework conventions and improve event
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and reusability
added an override for the close method in DeflaterOutputStream to ensure proper resource management and prevent potential memory leaks
added a new file ` gsp001 . java ` with native methods for retrieving system properties and cleanup to facilitate testing and management
do n ' t generate bean if only @ postconstruct be present to fix the bug # 9454
added support for ` ` camera ' ' and ` ` light ' ' control in jme3 export
refactor PopupNotificationPanel to use the parent window ' s dispose method to improve code clarity and ensure proper disposal of the popup
replaced instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` inferenceException ` in the ` Infer . java `
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the feature value for external use
changed the parameter type of the ` after ` method from ` int ` to ` long ` to allow the method to accept a longer timeout value
added ` onBuild ` and ` executionDriver ` fields with their respective getter and setter methods in ` ContainerConfig ` and ` Info ` classes
updated icon setting logic in Toolbar . java and FlowLayout . java to differentiate between RTL and RTL layouts to improve user interface
add position increment functionality to StopFilter to improve handling of token positions in text processing
updated EmailsTest and SystemErrorEmailReportTest to use an InternetAddress instance instead of a hardcoded string to enhance code clarity and
added a new boolean variable ` mTryShareAgain ` and initialized it to false in ` FileActivity . java ` to ensure proper handling of
added URL and Properties imports , implemented dynamic tty name determination to enhance compatibility checks for tty usage based on Jansi versio
replaced the variable ` bytes ` with ` bytesSize ` for better clarity and consistency to improve code readability and maintainability by using
replaced direct assertions with Jayway ' s Awaitility ' s await in Issue410Tests . java to improve responsiveness
refactor API URL constants to use a private API _ BASE _ URL constant to improve code readability and maintainability by reducing duplication
[ flink - 16400 ] [ test ] increase kafkaioit read timeout to 3 second
replaced the ` anyOf ` method with ` is ( itemName ) ` method in ` SearchResultMatcher . java ` to improve clarity and
added SSL certificate trust management and hostname verification in OkHttp . java to enhance security by ensuring all certificates are validated during HTTP connections
refactor button long click handling in ` NavbarButtonsViewController ` and ` TaskbarNavButtonController ` to improve clarity and
added a new file HyperlinkFormula . java and modified the type of field _ 1 _ length from byte to int in StringPtg .
add nullability annotations and replaced an optional absence initializer with standardization of working directory path validation to improve code safety by ensuring the working directory is not null before usage
increase asyncappendertest timeout from 1000ms to 2000ms .
updated the ` escapeDatabaseObject ` method to include ` objectName ` as a parameter and modified the return statements accordingly to enhance the method ' s
added a boolean variable ` inputChanged ` and modified its logic in ` MaterialRenameDialog . java ` to improve input handling and ensure proper validation
added a test for state change functionality in ShadowDisplayTest . java and implemented a state change method in ShadowDisplay . java to ensure proper handling
added directinvocationservice interface and refactored dispatcher to use it
gwt : fix for x / y key ( x ^ x ^ y )
updated SQL query construction in PgDatabaseMetaData . java to include conditional logic based on server version to ensure compatibility with PostgreSQL server versions 9.0
added @ Nullable annotation to Message initialization in QueueChannel . java to improve code clarity by explicitly indicating that the message can be null
updated method signature and variable types in FileUtils . java to improve clarity and consistency to enhance code readability and maintainability by using more d
update RemoteCollector initialization to conditionally handle Jenkins nodes URLs to improve functionality for monitoring Jenkins applications
refactor attribute resolution logic in HeadersBeanDefinitionParser and add new tests in HttpHeadersConfigTests to improve code clarity and ensure correct handling of
hbase - 16462 protobuflogreader do n ' t seek to the end of the file at the end of the file at the
added shutdown method to NacosRegistry and updated references in DefaultApplicationDeployer and DefaultMetadataReports to ensure proper cleanup of resources and improve
camel - mybatis : fixed switch / cases indentation see camel - 14540
refactor status code handling in GoAwayGenerator , GoAwayBodyParser , and GoAwayFrame classes to introduce a new
refactor AuditEvent instantiation and improve JSON output formatting to enhance readability and provide clearer output during audit events
added bounds checking for variable ' a ' in Interpolation . java and changed return statement to use 0 instead of ' a ' to ensure that
change default folder path to / defaults / for forge ( # 3745 )
refactor DxStep to store the absolute path of the DX executable in a variable before adding it to the builder to improve code read
add test for accessors of range in pointrangequery
hbase - 16400 fix testhfilecleaner . testarchivedhfile ( ) to work on window
update file label text based on download file name and file size to improve clarity in file label display based on file transfer request
removed the throw statement from JedisClusterCommand . java to streamline error handling by eliminating unnecessary exceptions
[ hotfix ] [ runtime ] set chainingstrategy to always in rowtimeminibatchassgineroperator
replaced RegExpBasedFilterInvocationDefinitionMap with PathBasedFilterInvocationDefinitionMap and added new test cases for regular expressions and Ant paths to enhance
refactor QMap and QMapReadSequentialKeyBenchmark classes to include new methods and adjust parameters to enhance performance benchmarking capabilities and improve code
added a new HashMap instance G _ SCH _ B in HybridPlotWorld . java to initialize G _ SCH _ B for better
added checks for empty fields and refactored identifier handling logic in GroovyEngine . java to improve robustness and maintainability of the code by
make sure angle be not draw if it ' s not a drawable
add TCP keepalive and read socket timeout configurations in HiveConf and modified HiveServer to utilize these settings to improve server connection stability by allowing configurable socket parameters
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to clarify the purpose of the method ' s
no effective change - code cleanup - remove unused import
replaced custom period formatting with a lambda expression in RealtimeSegmentRelocator . java to improve code readability and reduce boilerplate
createvpc : do n ' t return success = = false when vpc be n ' t start
updated windowAlpha calculation and condition in WindowTransformSwipeHandler . java , and modified progress check in FloatingIconView . java to ensure
updated the fatal error message in SecurityNamespaceHandler . java from " 3.2 " to " 4.0 " to clarify that
refactor multiple assertion - related classes for consistency in naming conventions to improve code readability and maintainability
added ' final ' keyword to fields in DisruptorProviderManage , QueueConsumer , and QueueConsumer classes to ensure immutability and prevent
added a new file TestConfigureUDF . java and modified ExprNodeGenericFuncEvaluator . java to implement a custom UDF to test configuration to
update regex matching in LogMessageWaitStrategy and enhanced the LogMessageWaitStrategyTest with parameterized tests to improve regex functionality and test coverage for different message patterns
replaced instances of ` logger . debug ` , ` logger . info ` , and ` logger . warn ` with direct method calls to improve
rename methods from ` updatePurgedShardNodes ` and ` updatePurgedShardNodes ` to ` deletePurgedShardNodes ` and update
updated JavaLanguageModule to add default versions for " 16 " and " 17 - preview " , and added a new " 17 - preview "
fileappenderresiliencetest : increase lossiness factor and wait for compression job to finish
[ gr - 21212 ] fix nullpointerexception in volatilereadnode . getlastlocationaccess .
added a method ` getSteps ( ) ` to ` SimpleJob ` and modified formatting in ` getStep ( ) ` to enhance code readability
removed the ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpc ` and ` TronJsonRpcImpl
refactor currency pair creation in BitstampAdapters . java to improve code readability and maintainability
use basetimeunit ( ) for longtasktimer metric ( fixes # 399 )
reduce bykey use custom partitioner just in case it ' s different from hashpartitioner
changed the type of ` value ` and ` colorValues ` from ` String ` to ` CharSequence ` and updated related logic in ` HostEditor
rename incompatibledatabasehandler to databaseversionhandler so that it would well reflect our new database version
added a constant for the maximum number of tweets in the conversation and modified the loop condition to include it to limit the number of tweets
http : / / issues . apache . org / jira / browse / amq - 3845 - increase the refresh rate in the test for slow machine
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix persistence of tail page
fix checkstyle issue in util / glowserver . java ( # 767 )
refactor the grow method in DataIO . java to improve clarity and encapsulation to enhance code readability and maintainability by separating
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide a way to access the submitted file name
add the method markReadForLoad ( ) in LauncherFragment . java to enhance the functionality of the LauncherFragment for managing read states
modified the ` main ` and ` instrumentJar ` methods to handle ` ClassNotFoundException ` and handle ` NegativeArraySizeException ` to improve error handling
added a method ` checkForSpillPossibility ` to handle partition selection in ` HashAggTemplate . java ` to ensure proper error handling when
replaced direct calls to ` getDocStoreSegment ( ) ` with a variable ` dsName ` in ` IndexWriter . java ` to improve
added a default name ID format constant and a check for it in the SamlProfileSamlNameIdBuilder class to ensure proper handling of name
added redirect behavior and error handling in ChangePasswordPage . java to ensure proper handling of password change errors during password changes
removed unnecessary closing brace in Deadlock2 . java to improve code readability and maintain consistency
added a method to get the maximum idle time in the NioReceiverMBean class to provide a way to get the maximum idle time for the
deleted the FontScalingTest . java file which contained font size checks for MetalLookAndFeel and system ' s look and feel
fix oom when request data and boundary = true to fix the bug #
add early return statements for non - positive numVectors to enhance code stability by preventing further processing with invalid input
test : migrate executablereftest to junit 5 ( # 4511 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java
camel - 16400 : added wiretap to camel - core to make it easy to configure a route with a tap expression .
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
[ calcite - 5249 ] add a new option to enable topn planner ( enable by default )
[ java ] remove redundant assignment of aerondirectoryname in agent logging test .
fixed - rbatch . ping ( ) and rbatch . pingbatch ( ) method be n ' t call if connection be n ' t
replaced the deprecated ` getConfVarInputStream ` with a new ` getConfVarURL ` method and removed the ` LoopingByteArrayInputStream ` class
updated the model creation to use the criteria ' s device instead of the default device to enhance flexibility by allowing the model to be created based
added options menu and item selection handling in SimulationViewer to allow users to interact with motor details
pdfbox - 4071 : fix typo find by codespell on fossies . org
add ` ` hawtio . dirname ' ' system property to allow to specify a directory where the hawtio . dir be
added handling for empty comments in Space . java to ensure proper return behavior when comments are empty
changed ` mClosed ` , ` mActualDictionary ` , ` mNativeDict ` , and ` mNativeDict ` to be ` volatile
removed printStackTrace ( ) call from Throwable constructor to improve error handling by avoiding unnecessary stack trace printing
move customitemdroptest to integration and add test
added ' ifNotExists ' property and related methods in DDLTask , DDLSemanticAnalyzer , and AddPartitionDesc classes to manage partition existence
updated byte reading logic in NfsSecondaryStorageResource . java to improve efficiency and readability of the input stream
[ java ] remove redundant call to controlrequeststreamid in service node .
miss from getcapabilities wfs 1.1 and 2.0  and patch by gerson galang
added import for LuceneTestCase and annotated BasicDistributedZkTest with AwaitsFix to address issue SOLR - 2161
modify the condition for parsing request in Http11InputBuffer . java to include a preface match check to improve handling of request processing based on
[ java ] set isgress exclusive to false in aeroncluster so that it can not be reuse .
updated HBase storage handler to support multiple cache keys instead of single keys to enhance flexibility and maintainability of cache configuration management
added methods to retrieve the current record number and update the running record count in JSONRecordReader . java to improve clarity and maintainability of
filter out years from merged items in CategorizationFragment to improve data integrity by preventing unnecessary items from being processed
updated drawColor calls to use 0 instead of 0x00000000 in CacheableTextView , CellLayout , and HolographicOutlineHelper
added OpenGL 2.0 support checks in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering methods
ww - 4443 add actioncontext to backgroundprocess to set the context of the action
insert into statement overwrites if target table be prefix with database name
set connection timeout to 1 minute in TestConnections . java and change count variable from non - final to final in StubConnection . java to improve
added test cases for aggregation queries in TestHiveAggregationQueries . java to ensure correct functionality of approx _ percentile and clerk calculations
updated the DEFAULT _ IDLE _ TIMEOUT constant and refactored idleTimeout and idleWriteTimeout variables to use constants from WebSocketConstants to improve
updated the method to retrieve shares using the user ' s platform account instead of the current account to ensure compatibility with the current user ' s account
updated type declarations and added null checks for scope _ ifname and scope _ id in Inet6Address . java to enhance type safety and prevent
no - op cleanup for playback control ii
updated the parameter type of the ` isPresent ` method from ` Session ` to ` long sessionID ` to improve clarity by explicitly specifying the session
updated the method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary
change default value of useexceptionprobability to ___ _
update the method of determining newPlateColor based on theme to enhance color consistency for themed icon
guac - 1640 : remove mysqluser . touserwithblobs ( ) , use user . getid ( ) instead
added " centre " alias to the aliases list in Middle . java to support additional centering options in the application
added DirectUpload import and inject method in CommonsApplicationComponent . java , and changed DirectUpload class visibility from package - private to public to
added space top settings for left and right axes in BarChartActivity and updated range checks in BarLineChartBase to improve chart layout consistency and
added support for Java ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance functionality by integrating additional Java ABI flavors
added handling for operation event status type in OnlineHubService and initialized the services list in CompositeLogService to ensure proper event status management and
added debug logging and visibility annotation handling in DexAnnotation . java to improve debugging capabilities and ensure proper annotation visibility during method parameters
( chore ) camel - jms : move setup / teardown into setup / teardown
updated ProcessBuilder initialization to include the classpath variable to improve clarity and maintainability of the process execution
updated the separator logic for loading resources in PackageResourceLoader . java to ensure correct path formatting depending on the package name
[ hotfix ] [ table ] remove unnecessary ' this . ' reference from dataset # minby ( )
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
escape percent in error message to avoid assertj default string formatting
fixed - jcache . close ( ) method do n ' t call cachemanager . geturi ( ) . geturi ( ) . #
do n ' t log error on taskalreadyclaimedexception when close command context
reformatted the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
use entity ' s base value instead of the entity ' s value in entitypropertiespacket . serialize ( )
sonosaudiosink : do n ' t play notification sound if the thing be not initialize ( # 5249 )
increased the timeout duration for countDownLatch from 500 milliseconds to 5 seconds in multiple test files to allow more time for countDownLatch
change log level from info to debug in LightThingHandler . java to provide more detailed logging for troubleshooting without flooding the log
make async - job - manager thread pool size configurable and add db property to configure async - job - manager thread pool .
reformatted code for improved readability and consistency to enhance maintainability and adhere to coding standards
changed the type of the parameter from Frame to DataFrame in the generate method to improve type safety and simplify data generation logic
updated multiple package - info . java and module - info . java files for consistency to improve code clarity and maintainability
added a check for non - empty physicalColumnNames before matching with DEFAULT _ HIVE _ COLUMN _ NAME _ PATTERN in OrcPageSourceFactory
added a return statement to the mixPlay method in the Engine class to enhance the functionality of the game ' s play functionality
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
updated calculations in FinderPatternFinder and added new test cases in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to
simplified the condition for checking ` leadingIncludePaths ` in ` PreprocessorDelegate . java ` to improve code readability and maintainability
rename method name from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and introduce a
do n ' t show unused page object field in report to fix the issue # 5412
defaultaudiosink : set default sample rate to 48000 when no value be provide .
added getter and setter methods for formula and reference in XSSFName class , and modified the XSSFName class to be final to
increased the target value from 60000 million to 90000 million in HighDimensionsTest . java to allow more time
mondrian : fix arrayindexoutofboundsexception in simpletypegt and add a test for pattern schema .
added a new file ` ClassPathXmlJobRegistryContextTests . java ` to implement unit tests for the ` ClassPathXmlJobRegistry `
changed the data type of ` mHistoricTimes ` and ` addPositionAndTime ` methods from ` float ` to ` long ` to
camel - 12320 : camel - restlet - restletproducer should use advanced option to make it easy to configure camel - restlet
( chore ) camel - log : remove deprecated showout ( ) method
replaced direct instantiation of ChromeTraceEvent with a new method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by
added checks to ensure only non - CANCELED , non - FILLED , and non - REJECTED order statuses are added to limit
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to improve image layout accuracy and ensure proper handling of pixel types
updated timestamp handling in Event . java and refactored ruby _ timestamp method in JrubyEventExtLibrary . java to improve timestamp management and
added a condition to check if the resource alias ends with " / " in ContextHandler . java and implemented a test case in WebAppContextTest
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER
refactor variable name from ' amt ' to ' scrollAmount ' for clarity to improve code readability and maintainability
added null check for callerLoopScope before setting guardsStage and stageFlags in GraphDecoder . java to ensure proper handling of graph state when
test : migrate sniperprettyprinterjavaprettyprinterjavaxtest to junit 5 ( # 3649 )
refactor URLOutputStream instantiation to use try - with - resources for better resource management to ensure proper resource closure and improve code readability
added @ Entity annotations to Mail . java to facilitate database entity management in the application
change default value of includeTablespace from false to true and add a command - line option to include tablespace to enhance flexibility in table
added methods ` metaDataBuffer ( ) ` and ` valuesBuffer ( ) ` to the ` CountersReader ` class to provide access to the
added a flag to manage the presence of a non - empty file in the ScanBatch class and a corresponding test in TestJsonReader to ensure
updated failure comparison logic to include custom name in failure messages to improve clarity of failure messages for better debugging
added a constant for the LIB _ PATTERN and updated the conditional check to use it to improve code readability and maintainability by using a defined
updated exception handling in JrtJavaBasePackages . java and PackageHelper . java to catch both ClassNotFoundException and NoClassDefFoundError to improve
hbase - 2635 dfsutils . checkdfssafemode ( ) should wait for thread to be wake - up ( addendum
updated error message formatting in TranslatingJavacPhaseTracer . java to provide clearer context for exceptions related to JavaTask support
remove plugincache . descriptorscache since it ' s not use anymore
do n ' t send presence status change event for contact that do n ' t exist .
fix checkstyle issue in util / servletrequestdetails . java ( # 3649 )
added a new integration test class ` AccountInfoFetchIntegration ` to verify the fetching of account information from the BTCE exchange to ensure that
added mouse wheel functionality in VDUInput and vt320 classes to enable mouse wheel interactions for improved user interaction
updated library path handling in Natives . java to improve clarity and maintainability of library path management
no effective change - remove deprecate @ columnhstore ( migrate to @ deploybeanproperty )
add player _ skin _ flags to metadataindex , fix # 374
updated LoadBalancerWithServiceTests to use SLF4J logging instead of JUnit ' s RequestFieldMatcher and modified service creation logic to enhance
fix npe in mapservice . getmember ( eventdata ) and add test
replaced direct access to ` System . getProperty ` with ` AccessController . doPrivileged ` for retrieving the OS version to enhance security by restricting access
updated TemplateEngineFreemarker to use a configurable file suffix and made the fileSuffix variable final to enhance flexibility by allowing dynamic
updated hash code calculation in SelectMessageQueueByHash . java and added new order IDs in SelectMessageQueueByHashTest . java to improve
made the ` dockParent ` variable final and added an ` animCallback ` for animation completion in ` ToolbarPanel . java ` to
fix bug : when ( hascaret ) . bind ( ) should bind to the caret column
updated ` PrebuiltAppleFrameworkDescription ` , ` CxxBinaryDescription ` , and ` CxxGenruleDescription ` to include `
updated JpaCountQueryCreator , JpaQueryExecution , and PartTreeJpaQuery to use ParameterAccessor instead of SimpleParameterAccessor to
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added array handling in DataUtilities and a corresponding test in DataUtilitiesTest to ensure correct instantiation of arrays from different types in DataUtilities
updated SSL engine creation logic to handle null address gracefully to improve robustness by avoiding null pointer exceptions when address is null
updated assertions from assertEquals to assertTrue for cache hits in TestFSTableDescriptors . java to ensure that cache hits do not exceed expected
douniaberrada : refactoring to remove cookie deletion from ie .
added a new boolean field ` mHasEndedLauncherTransition ` and modified the return condition in ` AbsSwipeUpHandler . java ` to
added " < meta charset = ' utf - 8 ' > " to the HTML tag in HTMLListWriter . java and HTMLWriter . java
refactor IndexReader . java to improve code structure to enhance maintainability and readability of the code
updated the maximum length of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path separator
added a new class ` bug6337518 ` to the ` BasicComboBoxUI ` class and modified the ` arrowButton ` addition to
rename TestRandomAccessBuffer . java file to improve clarity and maintain consistency in naming conventions
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added HomeContentProvider import and updated broadcast notification in multiple services to ensure proper handling of content changes in the application
added functionality to manage pressed and focused states in ` BubbleTextView ` and updated related methods in ` Launcher ` to improve user experience
updated the ` getFallbackResponse ` method to include an ` Throwable ` parameter across multiple classes to enhance error handling capabilities in the fallback policy functionality
removed the condition checking for ` env . _ compile _ only ` when ` env . _ dest _ dir ` is not null to simplify the
added null check for tags before accessing elements in ChannelUri . java to prevent potential NullPointerException when tags are null
updated JAVA _ REGEX _ SPECIALS string and modified test method names in RegexpUtil and TestSqlPatterns to enhance regex matching functionality and improve cl
added a constant for the action bar title and updated its title when the file is not null to ensure the action bar title is correctly saved and
updated type retrieval in PythonDslProjectBuildFileParser and added a new test for concat list selection in ConfigSettingIntegrationTest to ensure correct
updated the schedule hour from " * " to " 0 " in CleaningService . java to simplify the scheduling configuration for better readability and
updated imports and modified table path handling in TransactionalValidationListener . java to improve partition management and enhance error handling during table validation
updated ReplicationHandler and SnapPuller classes to enhance polling functionality to improve responsiveness and performance during replication
changed the data type of generatedKey from int to long and modified the prepared statement to return generated keys to improve performance by avoiding unnecessary key
rename variable ' proxy ' to ' _ rc ' in SimpleReferenceCache . java to improve code clarity by using a more descriptive variable
updated test cases in TestInlineUnloaded , InliningBase , and ResolvedClassTest to include " failed to inline " to improve cl
( chore ) camel - web : adjust keepalivetimeout and keepalivetimeoutcustom to 10
deleted the HttpTestAccount001 . java file to remove unused test code to streamline the project
updated exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and refactored resource management in ` DispatcherTest .
camel - 16400 : camel - cxf - do n ' t set xop when dataformat = cxf _ message .
added support for the ' ~ ' character in ClientUtils to enhance functionality to support additional character types
camel - slack : camel - slack - allow to configure a delay of 10 minute before the next poll .
add harvesting to blockutil . dropdropdeletes ( ) , fixes # 2273
updated layout constraints and modified JCheckBox initialization in TranscodingTab . java to improve layout responsiveness and enhance user interface clarity
added a new file ` bug8057791 . java ` to implement a GUI with a JList with a custom look and feel
updated flag assignment logic in LambdaToMethod . java and added new interface LambdaInterfaceStaticField . java and TestLambdaBytecode . java to
fix ( engineapi ) : fix npe when engine api be not available
changed the condition from checking if ' to . length ( ) > 0 ' to checking if ' to ' is not null to enhance null safety
added a conditional check for dictionary usage in ParquetFixedWidthDictionaryReaders . java and implemented a new test case in TestColumnReaderFactory .
refactor orientation handling in PortraitPagedViewHandler to use isLandscape instead of appsStackedVertically to improve layout consistency
added a new annotation ` Log ` and ` LogInterceptor ` for logging functionality to enhance logging capabilities in the application
updated thread dump formatting in QueuedThreadPool . java to improve clarity of thread state information when trace is not empty
updated methods in CacheGenerator and CacheProvider to include an Optional < Implementation > parameter to enhance flexibility in handling cache implementations
added totalFrameSize parameter to the createReferenceMap method in FrameMap . java to specify the total frame size for the reference map creation
refactor TypesafeConfigurator class for improved type safety to enhance performance and maintainability of type safety configurations
camel - 14103 - camel - graphql : add karaf and spring boot integration test , karaf itest
added new methods ` bug1 ` , ` bug2 ` , and ` bug3 ` to the ` RFE2891944 `
removed URL encoding for key and value in HttpClientIntroductionAdvice . java to simplify code and improve readability by eliminating
replaced the deprecated ` unsupportedPlatformTool ` implementation with a new ` UnsupportedPlatformTool ` class to improve code clarity and maintainability by
changed the type of ` loopCount ` from ` double ` to ` int ` and updated logging to include ` startingRecoveryDelayMilliSeconds `
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a standard
[ drools - 7 ] randomize the index in the abstractaddressmanager and addressmanagertest ( # 3745 )
updated COL _ SPEC and ROW _ SPEC values and adjusted layout constraints in VLCVideo . java to improve layout flexibility and ensure proper layout
rename bisq to bitsquare , fix typo
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory to include " / . m2 " and refactored user XML file handling in MBoot . java to ensure correct
added a call to bind an array buffer in VertexBufferObjectWithVAO . java to ensure proper binding of array buffers for rendering
refactor ServerHttpSecurity class for improved security handling to enhance security measures and maintainability
added JUnit ' s @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers to HttpClientProperties and updated default headers in CasCoreHttpConfiguration to enhance HTTP client configuration by allowing customizable HTTP headers
add thingsboardcredentialsviolationresponse and userpasswordnotvalidexception to simplify error response
deleted the NoOpConfigPathGetter . java file to remove unused code to streamline the project
replaced Codec . base16Decode with Bytes . fromHexString for signingKey to improve code readability and leverage Apache ' s Bytes utility
replaced CascadedStyle with CSSName and added validation for float value in FloatUtil . java to ensure proper handling of float values and
planner - 399 : add doc for planningentity , planningscore , planningsolution , planningfactproperty and planning
refactor ` getDefaultHeaders ` method to return a ` MultiMap ` instead of a ` CaseInsensitiveHeaders ` in ` RestUtils ` to
replaced String encoding with Charset encoding in ProxyServer , Realm , and SimpleAsyncHttpClient classes to allow for more flexible handling of character
added a method ` getJobId ( ) ` to the ` StepContext ` class and a corresponding test in ` StepContextTests ` to provide
replaced ` compareTo ` with ` compare ` in ` ExpandableUploadListAdapter . java ` and ` FileStorageUtils . java ` to
camel - jdk : use debug log instead of error to reduce log noise .
updated import statements in LegacyAuthenticationHandlerAdapter . java to include NamedAuthenticationHandler and UsernamePasswordCredentials to ensure proper handling of authentication handlers and improve
changed the visibility modifier of the WingDings class from package - private to public to allow access to the WingDings class from
filtermanager : do n ' t remove invalid filter from the network
add a static method to wrap an input stream in BCPGInputStream and update references accordingly to improve code readability and maintainability by central
replaced direct usage of DataOutputStream with BufferedOutputStream and added a try - finally block to ensure proper resource management and prevent potential resource leaks
added a new test method ` testSelectAllFromView ` and modified assertions in ` TestJdbcDriver2 ` , ` HiveBaseResultSet `
refactor FocusTransitionTest class for improved focus transition handling to enhance test reliability and maintainability
[ web ] fix gwt import in sharecontrollerw . java
added null check for sourceTask before retrieving counters in CounterStatsAggregator . java to avoid potential NullPointerException when sourceTask is not MapRedTask
added null check for readListener in HttpInput . java to ensure that readListener is not null to prevent potential NullPointerExceptions
refactor color handling in AppearancePanel to utilize a new method for changing component color to improve code readability and maintainability by encaps
updated TaskHelper constructor to use ' hidden ' instead of ' false ' to improve flexibility in task handling
resolve http : / / issues . apache . org / activemq / browse / amq - 2638 - failovertimeouttest -
pdfbox - 4892 : avoid resource leak , a suggest by valerybokov
added DefaultParameterHandler import in LanguageDriver . java to enhance functionality by integrating default parameter handling
[ fix ] lra spill optimization : do not create spill interval if the spill loop depth be below the defined value .
add a new file ` MicronautAstBuilder . java ` to build and compile Groovy scripts to facilitate the testing of
refactor PgResultSet and PgStatement to use a separate closeInternally method for better code organization to improve code readability and maintainability by
initialize ` serviceAdvisorType ` to ` ServiceAdvisorType . PYTHON ` instead of ` null ` to ensure proper initialization of ` serviceAdvisor
avro - 263 . java : make genericdatumreader thread - safe .
replaced ` Collection ` with ` List ` in constructor and changed ` Stack ` to ` ArrayDeque ` in multiple classes to improve type safety
replaced hardcoded byte arrays with random byte arrays for memo values in SendCoinShieldTest . java to improve test reliability by avoid
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` for setting personalisation date , email , and distinguisher
removed redundant whitespace in CodeGenerator . java to improve code readability and maintain consistency
removed the percent parameter from the scroll method across multiple classes to simplify the method signature and reduce unnecessary parameters
changed the visibility of the pointer variable from private to public and added reset methods in FlatRecordReader to allow external access to the pointer and provide
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` and update related logger references to clarify the class ' s purpose
replaced specific imports with a wildcard import and modified type handling logic in CastExpression . java to streamline import statements and enhance type safety in
refactor accepts handling in AbstractResource . java to use a boolean flag to improve clarity and maintainability of the code
added a false parameter to the TaskView class to control the behavior of the TaskView functionality
added isAutoIncrement method to LiquibaseDataType and updated its implementation in CreateTableChange to ensure proper handling of auto - increment columns in
initialize errorText to a default value of " Command failed due to Internal Server Error " to provide clearer error reporting for command failures
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils for performance data management to enhance performance
replaced ` add ` method calls with ` push ` method calls for ` currentStatus ` and ` boosterStatus ` in ` BasicEvent
added support for AJP connector port configuration in GitBlitServer . java to enable dynamic port binding for AJP connections
added type erasure logic for compound types in TransTypes . java and created Intersection03 . java with a test case to improve type handling
rename EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
added a native method to start the toolkit thread if it does not already exist to optimize thread creation by avoiding unnecessary thread creation
[ gr - 21212 ] add option to compress the bundle in parallel .
hide the pgraphicsopengl surface on window ( fixes # 3745 )
updated the temporary directory name to use the class name instead of a hardcoded " RecordTransformationTest " to improve clarity and maintainability of
added configuration parameters for fullNodeHttpEnable and solidityNodeHttpEnable in CommonParameter . java and updated service addition logic in Args . java
added a service property and updated the return statement in GoogleCloudFirestoreTicketDocument . java to include it in the ticket document to enhance the
refactor Generate class to improve code readability to enhance maintainability and facilitate future development
changed the ` @ ScalarFunction ` annotation to ` @ ScalarFunction ` and added tests for ` jsonFormat ` with Java and JSON null arguments
updated BadgeRenderer , IconPalette , NotificationKeyData , and PopupContainerWithArrow classes to conditionally calculate width , isText ,
removed the ' final ' modifier from the ' getConfiguration ' method in FreemarkerManager . java to allow the method to be overridden
added a test for invalid excluded package name patterns in OgnlUtilTest . java to ensure that ConfigurationException is thrown when setting excluded package names
updated deviceUdid assignment logic based on platform name and modified IdbRunTestsStep to check for " iphone " to ensure compatibility with
updated logging level from error to warn in DefaultHttpClientFilter and modified response handling in TestDefaultHttpClientFilter to improve logging clarity and ensure proper
added null checks and execution logic for mScript and mInvokeResetWAR in AllAppsView . java to ensure proper initialization and execution of script
added a TEXT _ BURN flag and modified conditional checks for line count to improve text rendering behavior based on the TEXT _ BURN flag
added teardown methods for dropping tables and views in TestColumnAccess and TestReadEntityDirect to ensure proper resource management and prevent potential memory leak
added a line to retrieve a parser by its name in SecurityNamespaceHandler . java to improve code clarity by using a more descriptive variable
updated conditional logic in BoundedLocalCache . java and added a new test method in BoundedLocalCacheTest . java to improve code cl
refactor RawConnection to extend WebSocketConnection and implement complete and flush methods to enhance WebSocket connection functionality and improve frame management
added two new test methods ` all _ assertions _ should _ pass2 ` , ` all _ assertions _ should _ pass3 ` , and
added TEST _ FAILURES _ EXIT _ CODE constant and modified execute method in PythonRunTestsStep , PythonTestIntegrationTest , and ProjectWorkspace
refactor conditional logic in GlyphLayout . java to improve clarity and structure to enhance readability and maintainability of the code
refactor score comparison logic in TestBooleanRewrites . java to use streams for improved readability to enhance code clarity and maintainability
replace ` getEnclosingClass ( ) ` with ` getSuperclass ( ) ` in ` TypeHandlerRegistry . java ` to ensure the correct superclass is
add a flush ( ) method to the playerconnection and update updatemanager to use it .
added a check to prevent multiple calls to removeOnDrawListener in the Launcher and LauncherAnimUtils classes to improve performance by avoiding
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
consolidated import statements for MatchStatus and Phase in ReplicaAssigner . java to improve code readability and maintainability
change default value of MEDIAPARSERV2 from false to true to enable mediainfo parsing by default
make it possible to apply around advice to introduction concrete method . fix # 1933
added assertions and permission verification for table existence and partition deletion in FolderPermissionBase . java to ensure that the system correctly handles and verifies permissions for
do n ' t publish status for provider that do n ' t have registration state change .
updated the color generation logic in PastelColor . java to use a constant for the base color to improve clarity and maintainability of
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
updated state management in HolographicViewHelper to use original and outline bitmaps to improve the visual representation of the holographic
refactor request method handling in CloudClient . java to improve null safety and clarity to enhance robustness by avoiding potential NullPointerExceptions and
improve multiwordpreprocessor . gettag to take a phrase containing phrase , not just the first one .
[ hotfix ] fix checkstyle violation in iochannelutilstest
refactor output format class retrieval logic in HivePassThroughOutputFormat . java to improve clarity and functionality of output format handling
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated null and length validation logic in DOMBuilder . java to ensure proper boundary checks for input validation
updated conditional logic in ClusteringCoefficient , EigenvectorCentrality , DiameterUI , GraphDensityUI , and HitsUI
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static methods and default method to demonstrate the
camel - 16400 : camel - core - allow to configure key store password via property placeholder .
replaced ` catch ( Throwable t ) ` with ` catch ( ThreadDeath t ) ` in ` LogResolverBean . java ` and
updated several security - related Java classes with new implementations to enhance security features and maintain code consistency
updated JGit version from " 1.0 . 0 " to " 1.1 . 0 " and added sorting and reverse functionality for jars
updated the client key assignment logic in HttpClientIntroductionAdvice . java to ensure the correct client key is used when the path is
int - 1640 added transformer namespace support for methodinvokingtransformer
replaced BACK _ FACTOR with REWIND _ TIME and added a new BACK _ FACTOR constant to improve clarity and maintainability of
added a ` isScrollWheeling ` method to ` CodenameOneImplementation ` , ` Button ` , and ` JavaSEPort
updated usage string formatting in UtilityCommands . java and modified command usage handling in DocumentationPrinter . java to improve code clarity and ensure command usage
corrected a typo in the attribute name from " collection . map " to " collections . map " to improve code readability and maintain
removed setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource . java and updated mergeFiles in RewriteCrossSpaceCompaction
removed duplicate @ Override annotations from Observation . java to improve code clarity and maintainability
updated the logic for setting ` needRebuild ` and modified the synchronization logic in ` ProjectPropertiesModelImpl . java ` to improve clarity and
fix thread safety issue in abstractsootfieldref . getfieldunsafe ( )
add namingconvention to elastic meter registry ( fixes # 374 )
added methods for controller listener management and command creation in IController and TinyGController , and updated BackendAPI to use IController to enhance
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to ensure proper rendering of huge horizontal rules
replaced instances of ` System . out . println ` with ` TTY . print ` in ` TypeSystemTest . java ` and `
reformatted code for consistency and clarity across multiple Java files to improve code readability and maintainability
updated the condition from checking if frameLength is zero to checking if it is less than or equal to zero to ensure that frameLength is valid
updated return statements for zeroValue in IntFloatMap and IntIntMap classes to improve clarity and consistency in handling zero values
updated ImageDownloadService to use callSerially for setting icons and preferences to ensure UI updates occur on the main thread to improve responsiveness
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerException when demand is zero
removed the ` hasNextSibling ( ) ` method from ` AttributeNode ` , ` DocumentNode ` , ` ElementNode ` , and ` Html
fixed - npe be throw when redisdistributedmapcacheclientservice return null
updated log messages in MobFileCache to include cache size and evict periods , evict remain ratio , and eviction ratio to improve clarity
refactor ColConvCCMTest to improve code readability to enhance maintainability and facilitate future feature additions
replaced instance variables for ` target ` and ` source ` with local variables ` allowCovariantReturns ` and ` syntheticNameChar ` to
pdfbox - 4892 : improve type safety , a suggest by valerybokov
replaced ` Float . toString ( jsonData . asString ( ) ) ` with ` jsonData . asString ( ) ` and added a new `
added a return statement to the GenericFileConsumer class to ensure proper termination of the method execution
added EventQueue . invokeLater to the bug6638195 . java file to ensure UI updates occur on the Event Dispatch Thread
updated the maximum size calculation in CompressExtension . java from ` getMaxTextMessageBufferSize ( ) ` to ` getMaxBinaryMessageSize ( ) `
update steeringValue calculations in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to adjust steering
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
refactor date and timestamp handling in JdbcSerDe to use LocalDate and LocalDateTime to improve code clarity and maintainability by using local date and
updated version from 2 to 3 and modified metadata handling logic based on the new version to ensure compatibility with newer versions of ParseData and improve data
refactor FlywayAutoConfiguration to use @ Configuration and @ ConditionalOnBean annotations to improve configuration flexibility and ensure proper dependency injection for
added a sorted ( ) method to ClassesImpl . java to ensure classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer class to improve code readability to enhance maintainability and facilitate future updates
refactor memory scope handling in TestCloseScope0 . java to accommodate different Java versions to enhance compatibility and improve memory management based on
increased the test timeout from 500ms to 5000ms in AdaptServerSocket . java to allow more time for socket adaptation operations
refactor CaptchaChannelProcessorTests to improve test coverage to enhance reliability and maintainability of the code
[ mondrian - 1212 ] fix metadataimport to update the owner of an item in the collection .
added retry logic for saving registry cache properties in AbstractRegistry . java to improve reliability by allowing retries on cache save failures
updated TrackingDirectoryWrapper instantiation to use ' directory ' instead of ' mergeDirectory ' to improve clarity by using a more descriptive variable
[ java ] unusedimports - fix 1.5 for loop and generic
added validation for insert overwrite operations on bucket partitioned Iceberg tables to ensure proper error handling for insert operations on bucket partitioned Ice
updated SAML configuration assertions in BootstrapTests . java to reflect correct expected values and added a check for legacy SAML keys to ensure correct SAML keys are
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and added a check for non - static fields
modified the ` getAddressVector ` method to improve clarity and functionality to enhance code readability and ensure proper handling of unexpected e - mail addresses
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE _
modified the ` release ` method to include ` throws IOException ` and added a new ` LockReleaseFailedException ` class to improve error handling and provide
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to organize
added a conditional check for unary operators in ` SpelExpressionTransformer ` and modified return statements in ` LiteralNode ` , ` OperatorNode `
updated ByteBuddy initialization to disable TypeValidation to improve performance by avoiding unnecessary type validation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` and added a new file ` Err
updated lock handling in LockModePessimisticReadWriteIntegrationTest and increased lock wait timeout in MySQLTableLockTest to ensure proper exception
refactor ` setSystemProperties ` method to remove the ` logFile ` parameter and update its implementation to streamline the method signature and improve cl
added a method to check if a redirect is allowed and refactored the request method to handle redirects more effectively to improve handling of HTTP redirects
added new constants for service , version , and application mapping in ServiceCombConstants and updated MicroserviceFactory to use EnvironmentConfiguration to improve configur
updated the step parameter from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the
updated DB _ PATH _ REGEX to be static and modified database deletion logic to include a DB _ PREFIX constant to enhance flexibility in database path
updated return statement to retrieve unread count from HomeDataSource to improve accuracy of unread count retrieval for the current account
renamed the method ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool ` to
modified the ` getAllOrder ` method to include a ` limit ` parameter and introduced a limit check in the ` getAllOrder ` method to ensure
updated user retrieval logic in HomePage . java to handle null users gracefully to improve robustness by preventing potential NullPointerExceptions
updated the method to return the absolute file path instead of the file object in LocalFileSystem . java and added a new test case in LocalFileSystem
added maximum width and height limits to the Rectangle object in ComponentBuilders . java to ensure that the instance does not exceed its defined dimensions
added logging functionality and a deprecated method for setting connection manager timeout in CommonsHttpSolrServer to enhance debugging capabilities and provide a more informative
removed the import of ExceptionHandler and updated error handling logic in PrintController . java to streamline error handling and improve code clarity
refactor ` hashed _ filename ` to use lambda expressions and add assertions in ` RustBinaryIntegrationTest ` to improve code readability and
added validation for empty and non - numeric words in SpellChecker . java and a corresponding test in SpellCheckerTest . java to ensure
reformatted the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
added a method to retrieve the OCFileListFragment from a file and refactored the showFileActions method to improve code readability and
hbase - 16400 set daemon to false in replicationhandler and log replication time and conf file in snappuller ( chaoy
updated the parameters of the update method in StoreCachedTest . java to ensure consistency in method usage
renamed the constructor parameter from ' materials ' to ' theMaterials ' and added logic to remove instances of MaterialColumnParser from fileColumns
added descriptive strings for various components in DependencyBank . java to improve clarity and user understanding of the project ' s dependencies
added maximum recycled views for dynamic grid and icon size in AppsContainerRecyclerView to improve the responsiveness of the RecyclerView
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that the build process
fix examplebaritonecontrol not work with valid waypoint .
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance code readability and maintainability by
added null handling for range and equal filtering in FilterOperatorUtils and created corresponding tests in NullHandlingEnabledQueriesTest to enhance filtering capabilities and ensure
updated argument type checks for bootstrapMethodRef and bootstrapArgs in JDynamicInvokeExpr . java to ensure correct argument types are used for bootstrap method
try to fix the test error of jmshttpjmstest
clear formatter options in CucumberInstrumentation . java to improve performance by avoiding unnecessary formatting
changed the type of the contacts list from RegisteredServiceContact to DefaultRegisteredServiceContact and added type casting in return statements to improve type safety and
updated workspace label adjustment logic in DeviceProfile . java to ensure workspace labels are hidden based on cell padding
refactor assertions in ReplicationFactorTest to use a unified assertRf method to improve code readability and maintainability
sulong : do n ' t call context . getenv ( ) . ispreinitialization ( ) twice .
removed the @ Ignore annotation from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java
replace RuntimeException with JsonIOException in Gson . java to provide more specific exception handling for JSON - related issues
replace Integer . valueOf with Integer . parseInt in VisualScoreTagTest . java to improve performance and readability of integer parsing
updated error messages and modified file traversal parameters in Copy . java to improve clarity of error reporting and ensure proper handling of file operations
refactor segment name validation logic by introducing ` isHighLevelConsumerSegmentName ` and ` isLowLevelConsumerSegmentName ` methods to
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to enhance
update return statement to use clockReader ' s current time instead of the current time to improve accuracy of date conversion by using the clock ' s
updated return statement in TargetCpuType . java to include specific CPU types to ensure compatibility with different Android architecture configurations
added a method to delete all files for a given account in FileDataStorageManager and implemented file deletion in ManageAccountsActivity to improve file management
updated command - line argument formatting in SchemaCrawlerCommandLine . java to improve clarity of command - line option usage
added a static factory method ` createSuiteDescription ` and modified ` Description ` class to use ` fUniqueId ` instead of ` getDisplayName ( )
replaced the ` Reader ` implementation with a new ` decodeBarcode ` method in ` SnapshotThread . java ` to simplify the code by
removed the ` ImmutableList < String > ` parameter from the ` BuckTarget ` constructor and updated related code to simplify constructor parameters and improve code
added unit tests for range past end and start in GWCZoomContextFinderTest . java to ensure correct behavior of range calculations in the
added a new configuration key DEPENDENCY _ TRACKING _ CONFIG _ KEY and modified dependency tracking logic in JRubyScriptEngineConfiguration to
replaced ` getRequestURI ( ) ` with ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct handling of servlet
do n ' t attempt to create table / keyspace that already exist
refactor WelcomeWindow to improve image handling and caching capabilities to enhance performance and maintainability of image rendering
updated tuner configuration naming and buffer handling logic to improve clarity in tuner identification and enhance buffer transfer reliability
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enable testing capabilities for Sh
added a condition to set the includeString to " db : hsqldb " in TestFilter . java to ensure compatibility with the HSQL
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : do n ' t materialize host exception when there be no stack trace .
graalservices : export jvmci to provider when load service .
added test for duplicate command handler resolver in aggregateannotationcommandhandlertest .
[ flink - 20865 ] [ stream ] introduce fine - grained . shuffle - mode . all - blocking option to enable
fix entityfishhook not be able to place block in fish . close # 2373
camel - 14263 : camel - core - optimize to use source code generate configurer for component
rename ` commandRunner ` to ` stepRunner ` across multiple classes to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` and related classes to improve clarity and
added a check to return early if the items list is empty to optimize performance by avoiding unnecessary processing when no items are available
added @ ConditionalOnMissingBean annotation for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure proper bean
log4j2 - 1343 add support for mdc property to xmllayout .
added an ` OMIT _ HEADER ` constant and a ` remove ` method in ` NamedList ` , ` BinaryResponseWriter ` , `
updated the return statement in EscherProperty . java to use getPropertyNumber ( ) instead of getPropertyName ( ) and added a new test class Test
replaced direct return of ` getBuildRuleType ` with a call to ` Description . getBuildRuleType ` to improve code readability and maintain
fix issue with method numberer not be remove in scene . getmethodnumberer ( ) .
added null checks for ` disputesPerTradeId ` , ` disputesPerDelayedPayoutTxId ` , and ` disput
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified method signatures in ` DatabaseSchema
wallet . send ( ) : set confidence type to not _ see _ in _ chain when send transaction .
refactor argument handling logic in HttpClientIntroductionAdvice . java to improve clarity and maintainability to enhance code readability and
add condition processing to craftinghelper . processconditions ( ) . close # 163
hbase - 16400 region . close ( ) should catch exception and log it
simplified null checks for string and byte arrays in Credential . java to improve code readability and maintainability
[ java ] do n ' t check if a subscription have an image already exist .
updated the ` destroy ` method to include ` throws InterruptedException ` and modified process destruction logic to improve error handling and ensure proper process termination
added Oracle support to the conditional check in TestDefaults . java to support additional database types in the application
( chore ) camel - mail : avoid a potential npe when the mail store be not connect
fix ( antlr ) : throw parsecancellationexception if there be more token in the query that have be consume
camel - 16321 - aws - translate : list all the available language in the enum - start with ` ` k ' ' complete
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the model initialization logic in ` Voice . java ` to
added emailDomain property and corresponding getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration and retrieval of the email domain
added new configuration constants for request timeouts and methods to retrieve them to enhance flexibility by allowing configuration of request timeouts
add a condition to check if myDeferredConcepts and myConceptLinksToSaveLater are not empty before executing the processDeferredConcepts (
added RedisCategory import and category annotation to RedisServiceRegistryTests to categorize tests related to Redis service registry functionality
refactor ` FindDeprecatedMethodsTest ` to use ` ParameterizedTest ` and ` NullAndEmptySource ` for improved parameter handling to enhance
updated paintComponent method in OverlayPanel and WaterfallPanel classes to ensure proper rendering of components
removed unused import statements from multiple Java files to clean up the code and improve maintainability
updated event signature handling in ` ContractEventTriggerCapsule ` , ` ContractEventTrigger ` , and ` LogEventWrapper ` classes to improve
updated file name filtering logic in FileTestHelper . java to use endsWith instead of contains for session identification to improve clarity and correctness of
replaced ` clearRect ` with ` fillRect ` in ` MapView . java ` to improve rendering by using a custom background color
[ drools - 7 ] avoid compilation error when invoker be not available
removed unnecessary print statements from multiple Java files to clean up the code and improve readability
added a conditional check for NaN score values before assertions in TestFieldCacheSort . java to ensure that assertions are only performed on non - NaN
replaced ` Set < AlarmConditionFilterKey > oldKeys ` with ` Set . copyOf ` in ` DeviceState . java ` to
added checks for zero time values in ColumnSnapshotGenerator and created a new test for date default values in MySQLIntegrationTest to ensure proper handling of
rename ` ` offerermultisigpubkey ' ' to ` ` offerermultisigpubkey ' ' and ` ` takermult
changed the type of ` vsContext ` from ` Map ` to ` ? , ? ` in multiple collector classes to improve type safety and reduce
[ drools - 7 ] fix kiesessionmodel . getclocktype ( ) and getclocktype ( ) in kiesessionmodel
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure proper reference to the current configuration
added a conditional check to return early if modalness changes to improve performance by avoiding unnecessary processing when modalness changes
added a test for creating a CodecProfileLevel in ShadowMediaCodecListTest . java and implemented a native method in ShadowMediaCodecList .
fix # 5460 : fix # 5460 when enter key use , focus be wrong .
added validation for width and height in SunVolatileImage , added error handling in XRPMBlitLoops , and introduced a new Vol
updated the thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure consistent formatting
replaced the ` _ loops ` array with ` AtomicInteger ` for thread management in ` AsyncStressTest ` and ` StressTest `
added support for beta flavour - related UI components in AchievementsFragment and LeaderboardFragment to enhance user experience by providing feedback on
added access , name , and desc properties to the SearchMethodVisitor class to enhance the class ' s functionality by associating access , name ,
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling to include InterruptedException to improve responsiveness and handle potential
reformatted code in DLNAResource . java for consistency to improve code readability and maintainability
removed unnecessary ' required ' attribute from XML annotations in ResequenceDefinition , BatchResequencerConfig , and StreamResequencerConfig classes
refactor transaction handling methods in TableReader and TableReaderTxnScoreboardInteractionTest to improve clarity and functionality of transaction management
flume - 1343 : change keymanager - type to ssl . keymanager . algorithm to allow configuration of keymanager - type
refactor the ` getSingleSourceApplicableTest ` method to use ` Applicability . or ` instead of ` JavaIsoVisitor ` to improve
added exit ( ) method to Blockmania . java and a condition to check for tab key in a repeat event to improve user experience by
replaced the ` PACKAGE _ PRIVATE ` access specifier with ` NONE ` across multiple files to standardize the access specifier representation and improve clarity
renamed the method ` unHandled ` to ` unhandled ` and updated related error handling logic to improve clarity in the method ' s purpose
updated stripes and stripeStats assignment logic in OrcInputFormat . java to ensure correct retrieval of stripe statistics based on the type of or
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions during execution
update myhentaicomics ripper to use https instead of http
added command - line option ' v ' to show the current jar version to provide users with information about the current version of the application
fix problem with split ( ) and splitTokens ( ) in sketch . export ( )
updated rotation handling in ConsoleActivity and modified input connection methods in TerminalView to improve user experience by ensuring correct rotation behavior based on keyboard preferences
changed the type of the ` hq ` variable from ` HitQueue ` to ` PriorityQueue < ? extends ScoreDoc > ` and
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 16400 : added support for custom headersmapfactory in camel context .
updated closing brace in JavaCompiler . java and Diagnostic . java to improve code formatting for better readability
jmsoutboundgateway now implement initializingbean , and add a new jmsoutboundgatewayparser to allow configuration of the jmsoutboundgateway
updated the index parameter from ` i + 1 ` to ` i2 ` in the ArrayFunctions class to correct the expected index to reflect the
refactor script engine class loader and improve error handling in AbstractScriptProcessor and InvokeScriptedProcessor to enhance robustness and provide clearer logging
added support for PGStatement in the proxy instantiation in PooledConnectionImpl . java and added a new test case in ConnectionPoolTest . java
issue a jmx call to cassandra storageservicembeam . refreshsizeestimates after insertion to update the cassandra internal size estimate to have consistent result in cassandraiotest . testestimatedsizebytes
change log level from error to warn in AtomicRemainder . java to improve log severity for fragment limit logging
fix aggressivefullyexpired check in ttlexpirytest . testaggressivefullyexpired
fixed - rblockingdeque . pollfirstasync ( ) and polllastasync ( ) method return wrong value if timeout be zero . #
removed unnecessary string concatenation from printMap calls in JobInspectCommand . java to simplify code and improve readability
refactor Engine class methods for improved performance to enhance efficiency and maintainability of the code
replaced ` Stream . of ( children . values ( ) ) ` with ` children . entrySet ( ) . stream ( ) ` for sorting
[ rip - 10 ] fix aclclient to use sessioncredentials instead of remotingcommand
updated the condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure the correct
[ hotfix ] [ runtime ] do not print stacktraces to stderr in notebookserver
pas the geoelement instead of the function expression for correct isdefined check
changed method visibility from public to package - private in NodeIdAccessor . java to restrict access to methods and improve encapsulation
server : improve error message when fail to create snapshot policy
changed method visibility from public to package - private in ItemWriter . java to restrict access to these methods for better encapsulation
updated the mock object name from an empty string to " test " in RoombaHandlerTest . java to provide a more descriptive name for
added a toString ( ) method to the ImageNameSubstitutor class and a corresponding test in ImageNameSubstitutorTest to provide a
replaced FSDirectory with RAMDirectory for directory operations in TestNorms . java to improve performance and resource management by using a more efficient RAM
added a new static variable ` mLineHeight ` and modified the calculation of ` lineHeight ` based on its value to ensure the line height
refactor WalletAppKit . java to improve code structure to enhance maintainability and readability of the code
bugfix # 203323 , do n ' t use hat . js and hat _ nashorn . js in profiler
fix leak jcheckboxmenuitem when we have open window and contact add or remove resource
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
added nullability check for bsqBlockChainExplorer in PreferencesPayload . java to avoid potential NullPointerException when bsqBlockChainExplorer is not set
added attributes map and methods to manage session attributes in StandardSession . java and Session . java to enhance session management by allowing retrieval and setting attributes
added assertions to verify the behavior of the getPlainBean ( ) method in TestDbJson _ List . java to ensure that the bean '
updated the array size for averages from pageSize to initialPageCount to optimize memory usage by using initialPageCount instead of pageSize
refactor BatchCommandLineLauncher for improved readability to enhance maintainability and ease of future updates
added DataSource and JdbcTransactionManager beans to BatchMetricsApplication . java to enable database connection and transaction management in batch processing
change glowrootloghttpservice to implement httpservice instead of unauthenticatedhttpservice
pdfbox - 4892 : use non - stroke java compositing , a suggest by valerybokov
cleanup segment file when abort in segment flush
added getter and setter methods for multiple choice options and validation constraint in UiBinding . java to enhance flexibility in property management for UI components
updated method calls to use ` toString ( ) ` instead of ` getName ( ) ` for consistency across various classes to improve readability and ensure
add a flag to save the whole tree and only update it if it ' s full save to improve performance by avoiding unnecessary updates when the
hunspell : make affix . setcondition use pattern instead of string . compile ( )
replaced explicit type declarations with the diamond operator in KrakenAdaptersTest . java to improve code readability and adhere to
removed import of CharTermAttribute from DefaultIndexingChain . java to streamline code by eliminating unnecessary dependency on CharTermAttribute
refactor NBJavacTrees . java to improve code structure to enhance maintainability and readability of the code
removed unsupported encoding check from VectorizedPrimitiveColumnReader . java to simplify the code by eliminating unnecessary error handling
updated conditional checks and logging in HttpSolrCall . java to improve code clarity and ensure consistent logging behavior
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service proxy instances
relational query : limit the max level to break the infinite loop when circle appear in relation graph
added a null check for the change log ID in HubChangeExecListener . java to provide clearer error messages when the change log has not
try to fix the blackbox test failure on window .
changed the return type of ` executeCompilation ` and ` executeCompilation ` methods from ` int ` to ` ProcessExecutor . Result ` to improve
updated event counting logic in ObjectStore . java to improve clarity and maintainability of event handling logic
simplify the support check for @ ConfigurationProperties annotations in ValidatedLocalValidatorFactoryBean . java to enhance code readability and maintainability
fix potential race condition in entityawareworldprovider
remove unnecessary check for exact type in intrinsifyarraycopyphase .
remove the debug log since get to the bottom of this failure a while ago
refactor of exception message follow the new pattern of store and present location of error or verification failure
added null checks for ownerAddress and key in AccountPermissionUpdateActuator , PermissionAddKeyActuator , and PermissionDeleteKeyActuator to
remove comparator from scriptlauncher so it do n ' t have to sort
doc ( regen ) : update go _ package to match open source code ( # 113 )
updated method calls from ` addProperty ` to ` setProperty ` in ` BaseSingleTreeBuilder . java ` to improve code readability and maintain consistency in
updated AsmLoader constructor to accept a ClassLoader parameter to enhance flexibility in class loading by allowing the parent class loader to be used
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated namespace declaration formatting in Java2TypeScriptTranslator . java to improve clarity and maintainability of namespace declaration logic
replaced the ` EmptyServerHandler ` with a custom ` AbstractHandler ` implementation in ` HttpClientTest . java ` to enhance request handling by
updated input listener configurations in HelloInput . java to simplify code and improve readability by eliminating unnecessary array creation
fix navigable path assertion for correlated entity join
updated package structure in multiple test files to improve organization and clarity of test classes
refactor BufferedImage creation and filtering logic in AwtCanvas . java to improve image processing efficiency and readability
make native image location qualifier configurable .
[ beam - 1774 ] disable flaky test for usestimersinpardo
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 174 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization
renamed CallStack class to improve clarity to enhance code readability and maintainability
log warn if max size configuration do n ' t allow any data in the map
updated return statements to replace " AST " with " LST " in multiple Java files to improve clarity and consistency in terminology
fixed bug that miscalculate the number of scoreables in a job
nethooks : do n ' t throw an assertionerror , return null instead
updated method calls to use ` window ( ) . title ( ) ` instead of ` getServerAddress ( ) ` and ` title ( ) `
added ` makeString ` method to multiple classes and overridden it in ` AbstractSynchronizedRichIterable ` , ` AbstractMultiReaderMutableCollection `
replaced direct order assignment with a constant DEFAULT _ ORDER in OidcServicesManagerRegisteredServiceLocator to improve code readability and maintainability by
added a ` Predicate < ProposedWeakAssociation > ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated the validation logic accordingly to
refactor Deflater class for improved performance to enhance efficiency of compression operations
added a try - catch block to handle potential IOException in Font . java to improve error handling by throwing a specific IOException when a throwable occurs
added null and empty check for content in VersionTypeBinding . java to ensure proper handling of null or empty content values
refactor places list handling in NearbyListFragment to improve code clarity and encapsulation to enhance code readability and maintainability by
fix the issue of mailconverters fails with uppercase content type text / plain
add openssh support to sshkeypairspec . format ( ) . format ( ) . format ( ) . format ( )
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter indicating whether the folder name suggest should be binding to improve flex
updated import statements and modified Hibernate annotations in InheritanceCacheTest . java to enhance cache management and improve code readability
updated import statements in ConnectOAuth2RequestFactory and added getUserApprovalRequest method in TofuUserApprovalHandler to ensure correct package usage and
fix : influxdb naming convention apply to tag value ( fixes # 645 )
do n ' t fail quickfix test if no resolution be available
changed the cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure the correct cookie is used for processing requests
added a static method ` classMetadataUnsupported ( ) ` in ` Platform . java ` and refactored its usage in ` Subject . java `
added clear - all functionality based on user preferences in OverviewActionsView and updated RecentsView to utilize it to enhance user experience
updated desiredRepoVersion to be final , increased actionContext timeout to 600 , and modified the cluster stack version creation logic to check for an existing version before creation to enhance code clarity
remove memoryleaktest since it ' s not use anymore
updated the return statement in ServletTester . java to include the local host ' s hostname to improve clarity in URL generation based on the
added support for MvdWPlaceholderAPI in ServerListener and updated settings in Settings to enhance functionality by allowing MvdWPlaceholderAPI to be
fix partition assignment test by assert cluster size
implemented an unsupported operation exception in FFIProvider . java and implemented SingletonHolder . java to ensure proper instantiation of FFIProvider based on J
added a new test method ` testHierarchicalWFileList ` to the ` BatchProcessTest ` class to verify the functionality of hierarchical file list
added null checks for objectToSave and collectionName in MongoTemplate . java and implemented new test cases in MongoTemplateTests . java to enhance robust
updated Position initialization to use NODE _ LIST instead of 0 to improve clarity and consistency in handling position values
added a new field ` accTradeValue ` and its getter method in ` BithumbTicker ` , modified the trade history parameters in `
update logging messages in the file to fix the npe
replaced hardcoded maxParallelThreads with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to
replace ArrayList with CopyOnWriteArrayList for headerReaders , dataReaders , and readers in FixedByteMVMutableForwardIndex and FixedByteS
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is null
( chore ) camel - msv : fix flakiness of camelmsvtest
updated conditional check from ` equal ` to ` greater than ` for ` beginCycle ` in ` DelegationService . java ` to ensure correct
updated ` RandomValueStringGenerator ` from 6 to 10 in ` JdbcExpiringCodeStore ` , ` CodeStoreEndpointsTests ` , and
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of unique constraints in the database
updated language code extraction logic in MediaDetailFragment . java to improve clarity and accuracy of language descriptions
add catch block to log and recover from a couple type
add ` withreferencefilter ` and ` withfilter ` methods to ` ListImagesCmd ` , ` ListImagesCmdImpl ` , and `
camel - 16400 : camel - jms - add support for bridgeerrorhandler on jms endpoint . thanks to stan lewis
added checks for " # ifndef " and " # endif " conditions in OpExclusionUtils . java to ensure proper handling of empty
added two return statements in DatabaseCommand . java to ensure that the method returns false as expected
update honestpoliticianexample to include new politician
[ zeppelin - 1342 ] fix npe in beanshellinterpreter when initfile be empty
camel - 16400 : camel - restlet should use port or default port if not specify .
removed unused import statements from SchematicFormat . java to improve code clarity and maintainability by eliminating unnecessary dependencies
added a system property to set the maximum query length to 100Mb in QTestUtil . java and modified overridden configurations in SessionState .
changed visibility of userName and securityMgr from public to private and refactored HttpConfiguration initialization to use a new method to improve encapsulation and
rename processors from " writeHdfs " and " writeKafka " to " hdfsSink " and " kafkaSink " across multiple files to
updated the logic for determining if the application name is not equal to " spark . app . name " and refactored Spark application name handling
fix the bug # 54567 to better format of the code
danielwagnerhall : refactoring window . maximize to make it easy to implement maximize functionality
updated methods in ` LocalCellProviderFactory ` , ` AbstractEmbeddedCellBuckOutInfo ` , and ` DefaultProjectFilesystemFactory ` to
updated the assertion in TestXMLEntityExpansion to check for the presence of " entity expansions " to ensure that the exception is
updated table offset and length assignments to mask values of 0x7FFFFFFF to ensure proper handling of table offset and length values
added a null check for the customized field in DirectMethodHandle to ensure that the customized form is not null before proceeding
refactor line buffer initialization and coordinate checks in LineChartRenderer . java to improve code readability and maintainability
refactor flavor checks and error handling in AndroidBinaryDescription . java and AndroidBinaryFlavorsIntegrationTest . java to improve clarity and
updated buffer assignment from ` offset ` to ` i ` in ` LwjglGL11 . java ` to ensure correct buffer index is
added new classes ` Property ` , ` PropertySuper ` , and ` TestClassResolutionFail ` to demonstrate class resolution errors to
do n ' t remove shutdown hook if shutdownhookenabled be set to true
replaced ` FilterChainProxy ` with ` FilterChjainProxy ` and removed the ` url ` parameter from the ` VirtualFilterChain
replaced ` Collections . sort ` with ` Arrays . sort ` for sorting results in ` PercentileAggregationFunction . java ` to improve performance
added checks to ensure the schema is loaded before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to prevent potential errors when
set baseType to null and initialize literalPrefix , literalSuffix , and localizedTypeName to null in DatabaseInfoRetriever . java and MutableColumnDataType .
replaced ` < a > ` and ` < li > ` tags with ` @ link ` tags in multiple Java files to enhance readability
replaced instances of ObjectEqualEvaluator , ObjectNotEqualEvaluator , ObjectContainsEvaluator , and BooleanNotEqualEvaluator with final static evaluator instances to
updated configuration references from " osx - x86 - 64 " and " osx - x86 _ 64 " to " config " and
added sound effect playback functionality in AllAppsView . java to enhance user experience by enabling and disabling sound effects
simonstewart : removefirstpage now throw an ioexception instead of exception
enable granularity for left axis in BarChartActivitySinus to improve chart rendering by enabling granularity support
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS _ ALIAS _ SUPPORTED checks to improve test reli
added a ` close ( ) ` method to ` Connection ` , ` JsonAsyncHttpPinotClientTransport ` , ` PinotClientTransport
improve mockappender to reduce event count
[ beam - 4142 ] improve error message when resource be not a directory .
removed multiple unused import statements from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability by elim
remove duplicate call to unbindHandle in ItemServiceImpl . java to improve code clarity and maintainability by eliminating redundancy
refactor Config and Attribute classes to improve code readability and maintainability
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated navigation button handling in NavbarButtonsViewController to use UI _ MODE _ NIGHT _ YES instead of Themes to improve
replace ` abort ` with ` throw abort ` in ` PolyBenchLauncher . java ` to improve error handling by throwing the exception instead of
replaced ` bootstrapMethodIndex ` and ` nameAndTypeIndex ` with ` refKind ` and ` memberIndex ` in ` ClassWriter .
added BlockFormattingContext parameter to findBox and findElementBox methods in BasicPanel . java to enhance flexibility in box positioning based on
added a method to retrieve standard error output and improved error handling in WorkerProcess and WorkerShellStep to enhance error management and provide clearer
added null check for the operator parameter and improved error handling in CheckedListReplaceAll . java to enhance robustness by preventing NullPointerExceptions
added a test for writing a Hello Client and modified the fillInterested ( ) method in SslConnectionTest . java to improve test reliability
added listener management for device configuration changes in DeviceFlag . java and modified visibility of default value in FeatureFlags . java to improve responsiveness
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to mark the test as ignored due to known issue gh - 1114
added import statement for MalformedURIException in StandardRequestHandler . java to handle malformed URIs and improve error handling
add a script to focus the first element of the end date in the instructorfeedbackeditpage to improve user experience by ensuring the end date
refactor KrakenStreamingTradeService to streamline observable subscription logic to improve code readability and maintainability
changed ` System . err . println ` to ` System . out . println ` in ` ChangeableUrls . java ` to ensure output is
modified the constructor of SparseRowMatrix to accept a randomAccessRows parameter and updated related methods accordingly to enhance flexibility in handling random access scenarios
fix npe in deletevolume usage event when volume be delete from pool
refactor plan path handling in Utilities . java for better clarity to improve readability and maintainability of the code
[ dftest ] upgrade guava to v26.0 _ jre ( # 22663 )
memorycallgraphbuilder : do n ' t register memorycctprovider when reset internal state
do n ' t try to send a message for a multichat server that do n ' t support it .
added file write validation and dirty state management in Save . java to ensure the file is valid before proceeding with operations
added FolderSyncActivity and updated DrawerActivity to handle folder synchronization navigation to improve user experience by integrating folder synchronization functionality within the application
[ hotfix ] [ test ] fix resource leak in sequentialchannelstatereadertest
fix spanishtreenormalizer to correctly handle space between comma and %
replaced ` PointReader ` with ` heapPointWriter . getPackedValueSlice ` in ` SimpleTextBKDWriter . java `
added LocaleRandomizer and LocaleRandomizerTest classes for generating random locale values to enhance randomness support for locale - specific functionality in the random
tika - 3745 -- add mime type detection for font printer metric and font type1
[ netbeans - 4892 ] add 10.0 a a default version number for installer , autupgraderesource , and
reformatted code in TCPTransport . java for consistency to improve code readability and maintainability
added a default read timeout to the socketWrapper ' s read method in Http2AsyncParser . java to ensure that a valid read timeout is
increased the default value of the WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to
updated the primary key restriction error message to include the column name to improve clarity in error reporting for better debugging
added date formatting functionality for custom fields in ThirdEyeJiraClient to enhance date handling capabilities in the application
refactor priority generation methods in HeadersGenerator and PriorityGenerator classes to improve code readability and maintainability by consolidating priority generation logic
added a constant for maximum scalar replace code size and updated the condition to check its length to ensure that scalar replacement does not exceed the defined maximum
added DATE _ TAKEN to the projectionTest array and updated folderSortOrder and fileSortOrder to include DATE _ TAKEN to ensure sorting
updated image size calculations in TexturePacker2 . java to improve image rendering accuracy by adjusting dimensions
added WebSocketUpgradeFilter and updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to enhance WebSocket upgrade filter management and improve test coverage
shutdown services in Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper resource management and prevent potential memory leaks
added RawJsonRequestBody annotation processing to JaxrsSwaggerGeneratorContext and created RawJsonRequestBodyAnnotationProcessor to enhance Swagger generation capabilities for raw JSON
added a new method ` newTarget ` to create a ` Target ` object with specified type and extension to facilitate the creation of
updated ListBeanContainer to accept an ArrayList for entries and added BeanContainerTests class to enhance functionality and improve test coverage for BeanContainer functionality
rename ` blockCountHitPercent ` to ` blockCacheCountHitPercent ` in ` TestMetricsRegionServer . java ` to clarify
camel - 16400 : fixed cachedoutputstream to not leak resource when exchange be complete .
fix ( teltonika ) : add deviceid to position in teltonikaprotocoldecoder
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( ) ` for reading the first line to improve
added a null check for the operator in the visitAssignop method and created a new Test class with a method to ensure proper initialization of the
added a conditional check for ` enableAccountHandling ` in ` BaseActivity ` and modified ` mixinRegistry . onCreate ( savedInstanceState ) `
do n ' t throw an exception if the main polygon do n ' t contain a point . fix # 399
added a path parameter to the DrillViewTable constructor and updated its usage in WorkspaceSchemaFactory to enhance functionality by allowing specification of schema paths
updated the constructor of PooledByteBufAllocatorL to include additional properties to enhance flexibility and configuration options for memory allocation
modified the return type of the array from double to short in ObjectInputStream . java and added a new class CloneArray . java with serialization tests to
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE in HiveConf . java and updated LlapIoImpl . java
initialize sun . security . ssl . debug and sun . security . ssl . ssllogger in jdk 11 +
updated latitude and longitude range checks in LatLonGrid . java and added a new test method in TestLatLonGrid . java to improve validation
danielwagnerhall : introduce expectedconditions . invisibilityofelementwithtext ( ) and expectconditions . refreshed
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and changed its visibility from protected to private to allow the method to
added a test method for retrieving the outer class in the ReflectorTest class to ensure correct behavior of the reflector ' s getEnclosingObject method
added " auto _ generate _ android _ facet _ sources " configuration and updated its usage in IjProjectBuckConfig to enable automatic generation
refactor HubChangeExecListener to use a string message for messages instead of hardcoded strings to improve readability and maintainability of error messages
added properties list and getter / setter methods to the Link class , and implemented a test for overriding properties in QuickLinksConfigurationModuleTest to enhance
removed duplicate @ EqualsAndHashCode annotations from InitialConfig . java and YamlConfigFileDTO . java , and added toString method in YamlConfigFileDTO .
updated generic type parameters for SimpleForwardingServerCall and SimpleForwardingClientCall in AwaitableServerClientCallConfiguration . java to improve type safety
added CallerSensitiveAdapter support to forName methods in Class . java to enhance class loading flexibility by allowing caller - specific class loading
replaced ` isEmptyOrNullString ( ) ` with ` emptyOrNullString ( ) ` in ` RequestItemRepositoryIT . java ` to improve
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` and replaced ` LinkedBlockingQueue ` with ` LinkedBlockingQueueEx ` to improve
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
replaced custom HumanTime and HumanTimeConverter implementations with Jchronic ' s Options and Calendar classes to enhance flexibility and maintain
fix ` ` spark _ isolated ' ' , ` ` spark _ recessive ' ' , and ` ` spark _ isolated ' ' pattern
updated ` RestProxyFactory ` to use ` exchangeSpecification . getUri ( ) ` instead of ` ExchangeSpecification ` to improve clarity and consistency
updated output statements in RecordGenerator . java for clarity to streamline output for better readability and maintainability
( chore ) camel - kafka : fix auto commit issue
removed unnecessary lock release logic in Liquibase classes and updated output statement handling in LoggingExecutor to streamline lock management and improve clarity
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and AuthorizeTagCustomGrantedAuthorityTests . java to improve type safety and suppress warnings related to
synchronize on closefiles ( ) , preparecommit ( ) , commit ( ) , sync ( ) , flushlog ( ) and flush
camel - 16400 : camel - spring - boot - auto - configuration - maven - plugin to generate spring - boot auto - config file
updated the currency symbol from baseSymbol to counterSymbol in the VirtExMarketDataService to ensure the correct currency representation is used for
( chore ) camel - core : fix checkstyle issue
replace UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to improve
added synchronization to dateformat , numberformat , and longnumberformat methods to ensure thread safety when accessing shared resources
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated height scale from 256 to heightScale in FractalHeightMapGrid . java to improve flexibility by allowing dynamic adjustment of the height
updated equality check from ` assertEquals ` to ` assertNotSame ` in ` SecurityConfigTests ` to ensure that security strings are not equal
changed the default value of ` dumpPartitionId ` from ` true ` to ` false ` to ensure that ` dumpPartitionId ` defaults to
added unit tests for UTXO handling in UTXOSetTest . java to ensure correct functionality of UTXOSetTest with mock
[ java ] unusedvariable and unusedassignment should be check for ` ` _ ' ' instead of ` ` ignored ' '
pdfbox - 4892 : avoid npe , a suggest by valerybokov
removed unnecessary whitespace in JsrJobOperator . java and added a new test case in JsrJobOperatorTests . java to improve code read
added a boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` in ` DatabasePlatform
removed redundant assignment of principal in JaasAuthenticationHandler . java to streamline code for better readability and maintainability
refactor core closing logic to use an executor service for improved responsiveness to enhance thread safety and ensure proper cleanup of MDC logging
added visibility control for mActionsView in RecentsView . java to ensure mActionsView is visible when fullscreenProgress is zero
refactor code to use a conditional assignment for JobParameters to improve code readability and maintainability
refactor BasicEntity and TestUtil classes to improve code readability and maintainability
added tests for ` getMatchedDevices ` method in ` SchemaRegionBasicTest . java ` to ensure the correct number of matched devices is returned
[ 3.0 ] add tryinvoke ( runnable ) to metricseventbus ( # 9441 )
updated EigenvectorCentrality . java to include a null check and added a new EigenvectorCentralityBuilder .
updated registry lookup methods to use a random port instead of a hardcoded port to enhance flexibility by allowing dynamic port selection
updated GeometryGenerator to use database session for buffer creation and added product ID and rid parameters to enhance geometry data management and improve data integrity during processing
set the beacon amplifier to 0 instead of 2 in BlockEntityBeacon . java to reset the beacon ' s amplifier for
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable the HttpClientConfiguration by default and refactor the TaskScheduler implementation in ServiceHttpClientFactory to improve performance by avoiding unnecessary task execution
add a sanity check to the defaultvalidator to ensure that validation group be valid .
added a new test for JList selection with wrong colors in Nimbus L & F to address issue 8160438 and improve test
make thread daemon to allow speedment application to exit via main method completion fix # 322
fix lexicon version check , close # 2273
added a call to ReflectionCheckLinker . checkReflectionAccess in JavaAdapterFactory . java to enhance security by ensuring proper reflection access checks
camel - 16400 : added option lazysessioncreation = true to camel - mina
updated the ` initIOContext ` method to accept a ` RecordReader ` parameter across multiple classes to enhance functionality by allowing initialization of context -
deleted ClassLoaderHolder . java and LoaderManager . java files , and refactored loader management in VerticleManager . java to streamline code
added a new method ` configurationChanged ` in ` FileStore ` and modified ` FileStore ` to handle file existence and writable status to improve
added try - catch blocks around session callback registration and unregistration to handle potential exceptions during session callback registration and unregistration
updated index creation paths in TestBackwardsCompatibility . java to streamline directory structure to improve code readability and maintainability by eliminating
[ hotfix ] [ runtime ] fix akkarpcservice creation in akkarpcserviceutils
added a retry mechanism to set the maximum number of map attempts in TestExportSnapshot . java to control the maximum number of attempts for mapreduce
pdfbox - 4892 : use ` ` non symbolic ' ' instead of ` ` symbolic ' ' , a suggest by valeryb
added a new file SslConnectionTest . java to implement SSL connection tests to ensure proper handling of SSL connections in the application
added validation for address and family types in InetAddress . java and NetworkInterface . java to ensure only valid IPv4 and IPv6 addresses are accepted to
added a test for serialization of dates using Gson in DefaultTypeAdaptersTest . java to ensure proper handling and serialization of dates in collections
refactor Message class to improve code readability to enhance maintainability and facilitate future development
nifi - 11341 : fix npe in putdatabaserecord when generate sql
update loop condition in TableOutput . java to correct the logic to correctly calculate the loop index based on the current width
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated priority for format string validation in FormatStringChecker . java to improve clarity and maintainability of the code
[ java ] localvariablecouldbefinal - add property to ignore non - final loop variable .
added PDF version and full compression settings in PDFExporter and updated the sample file in PDFExporterTest to improve PDF export functionality and ensure compatibility with
added unit tests for LdapUserDetailsMapper to validate role attribute mapping to ensure correct handling of role attributes and authority mappings
make ldap read timeout configurable ( # 3649 )
refactor TestDescription class to improve code organization to enhance maintainability and readability of the test cases
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` in multiple classes to clarify the purpose of the variable related to allocation
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gesture states when the handler is invalidated
updated mMaxDistanceForFolderCreation and mOldScrollPageIndex values , and changed mOldRotationYs to a fixed value of 0
replaced ` ConfigProvider ` with ` ConfigProviderResolver ` and modified conditional checks in ` OciConfigConfigSource . java ` to enhance
refactor Testjsig . java to improve code structure to enhance maintainability and readability of the code
fix mana ring , mana tablet , and terra pick mana . close # 163
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress serialization warning for P11TlsPrf
replaced ` tsFileNotValid ` with ` isEmptyFile ` and introduced a new ` isValidateTsFileFailed ` flag to improve cl
added new files Switch21 . java and Switch19 . java to implement switch pattern matching , null handling , and guard pattern matching functionality to enhance
updated error message formatting in ComparableSubjectTest . java to improve clarity of error messages for better debugging
fix : add standalone flag to streamhelper . savexml ( ) for openxml4j
updated capacity validation and improved exception message formatting in Int2ObjectCache . java to enhance clarity in capacity validation and provide clearer error
removed sorting of securityFilterChains and webSecurityCustomizers in WebSecurityConfiguration . java and added a new test in WebSecurityConfigurationTests .
removed TimeInForce . GTC from the order parameters in BinanceTradeService . java to streamline order processing by eliminating unnecessary
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer instead of implementing Randomizer to improve flexibility and maintainability of range randomization
updated KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure proper
camel - 16400 : camel - jms - make it easy to configure component and whatnot .
updated the method in SourceUtils to handle NoSuchFieldError and added a new test class TestGetBound to improve error handling and ensure correct bound
refactor LeafFilterFactory to use a new method for obtaining the leaf filter builder based on Parquet type to improve code readability and
modified the handling of originalArtifactName and added setup and teardown methods in BatchPropertyBeanPostProcessor , JobContextFactoryBeanTests , and StepContextFactory
added a loop to read certificate serial number and issuer from the input stream in HttpsSegmentFetcher . java to improve robustness by ensuring only
modified the logic for retrieving the default value of " libdefaults " and added a new class DnsFallback to improve handling of null values and provide
ww - 4442 add more information to exception when write theme
changed the ` success ` field to ` url ` in the ` DepositAddress ` class and updated the constructor accordingly to reflect the new
refactor the drop method in WindowsSecurity to use a lambda expression to improve code readability and ensure proper resource management
removed " address " and " phone " from scope definitions in CommonOAuth2Provider and its tests to simplify scope management by eliminating unnecessary
added a new ` Start ` class and modified the ` submit ` method in ` ManagedSelector ` to improve the handling of the starting state of
added constant BIG _ DECIMAL _ 182 _ 04 and updated hue and saturation calculations in WLedHandler . java to improve code readability and
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set in ` VectorizationProvider . java ` to improve code
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to facilitate the handling of JSR inst
add transaction management to subscriptionactivatingsubscriber ( # 3552 )
refactor DBMSProcessor to use prepared statements for updating metadata and inserting data to improve performance and error handling during database operations
added elevation management for ContactItemInflater based on Android SDK version to ensure compatibility with devices running Android versions below Lollipop
rename variable ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in naming conventions
replace direct calls to ` Files . readAllBytes ` , ` Files . write ` , and ` Files . delete ` with ` AccessController . doPrivileged
refactor GroovyParserVisitor , GroovyPrinter , G , and GSpace classes to improve handling of Groovy binary operators to enhance code clarity and
updated warning message to include the class name of the exception to improve clarity of error reporting for better debugging
updated character reading logic and variable names in RecordInputStream and UnicodeString classes , and added a test for UmlatReadWrite in TestUnicode
added a test method to download a file with Norway characters in the name to ensure that the file downloads correctly handles Norway characters
updated error handling in AsyncResource to use CancellationException and added cancellation checks in FingerprintScannerSample to improve error management and provide clearer feedback
added null check for statistic before call handleCache to avoid potential NullPointerException when statistics is null
added a new test method to verify removal of objects from an explicit collection in MongoTemplateTests . java to ensure correct functionality of the remove method
update copyright year to 2022 , add miss license header
[ java ] use % n instead of \ n for string . format .
added functionality to manage the visibility and behavior of the clear - all button in RecentsView and PagedView to improve user experience by
refactor IcebergMetaHook and HiveIcebergSerDe to use a COMMON _ HMS _ PROPERTIES map to improve code
added a method to check if an address is in use and refactored exception handling to use this method to improve code readability and maintain
added a command - line argument to the argument list in TestNestmateAttr . java to specify the classpath of the test class for
updated log level from verbose to verbose _ schema in Grep . java to improve logging clarity by using a more descriptive variable name
remove dependency on org . apache . catalina in favor of org . apache . catalina . ha
# 113 - enh : add support for nested transaction use savepoint ( # 113 )
changed ` fetchSize ` from an integer to a ` ThreadLocal < Integer > ` in ` QueryProcessExecutor ` and updated related references to
[ java ] remove backoff and no - op idle strategy from embeddedpingpong .
refactor HttpClientIntroductionAdvice to use a new handleBlockingCall method for handling blocking calls to improve code readability and maintain
added handling for HDP _ VERSION configuration in SliderAppsViewControllerImpl . java to ensure that the HDP _ VERSION system property is
added a new ` close ` method to ` JavacProcessingEnvironment ` and modified the ` errorStatus ` assignment in ` Javac
added DeepCloner class and modified methodBlock in ParameterizedRobolectricTestRunner and RobolectricTestRunner to enhance object cl
added a bind annotation for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to control the visibility of stack traces for debugging purposes
added type checking for OBJECT in NativeObject . java to ensure proper handling of non - OBJECT types to prevent runtime errors
replaced references to ` sun . jvm . hotspot . types . OopField ` with ` sun . jvm . hotspot . types
updated JwkKeyListView and JsonWebKeyEndpoint to use PublicKey instead of RSAPublicKey and added Base64 encoding for mod and exp
[ gr - 21212 ] useonlywritablebootimageheap = true should not spawn isolates .
rename MBeanServerMXBeanUnsupportedTest . java file to improve clarity and maintain consistency in naming conventions
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and improve maintainability
added getOwnerAddress ( ) method to multiple actuator classes and updated validation logic to retrieve the owner address to enhance functionality by providing access to the
http : / / issues . apache . org / jira / browse / amq - 61613 - add a demo to show how
replaced direct calls to ` toByteArray ( min ) ` and ` toByteArray ( max ) ` with variable ` byteArrayMin ` and ` byteArrayMax
add support for empty index for dependency graph edge ( # 1193 )
[ java ] remove correlationid from asynccommandidset when a driver be active .
added file conflict handling in FileDataStorageManager , FileDownloader , and FileUploader to ensure proper management of file conflicts during file operations
updated generic types in multiple classes for better type safety to enhance type safety and prevent unchecked warnings
replaced ` StrUtils . splitFileNames ( ) ` with ` splitFileNames ( ) ` in multiple filter factory classes to standardize
added support for Oracle and MySQL drivers in DatabaseFactory to enable remarks reporting and use information schema for improved database compatibility
updated the ` MockMethodInterceptor ` to include a ` handler ` parameter and added a ` serialVersionUID ` to ensure proper serialization of the interceptor and
updated time measurement logic in FileChangedExclusiveReadLockStrategy . java to use current time instead of new date to improve accuracy of time tracking for
[ hotfix ] [ table ] wrap class loader in the execution context
added buffer change handling in TerminalView and TerminalTextViewOverlay classes to improve UI responsiveness during buffer updates
reformatted code for improved readability and added a null check for pid to enhance code clarity and prevent potential null pointer exceptions
refactor freeze operation logic to differentiate between V2 and V3 to improve clarity and functionality based on VM configuration
added support for insecure TLS configuration in TlsConfig and updated TlsUtils to utilize it to enhance security by allowing the use of insecure
refactor the source and class path handling in JavadocTool . java and add a new file T7091528 . java to improve code
updated variable names from ` nodeColumns ` to ` edgeColumns ` and introduced a new ` edgeIdColumn ` class to improve clarity and
added cascade = CascadeType . ALL to the OneToOne annotation in DefaultUserInfo . java to ensure proper persistence behavior for DefaultAddress entities
change message . hashcode ( ) to equal ( ) . hashcode ( ) . equals ( ) . hashcode ( ) . equals ( )
updated HTTP header and response body formatting in AsyncProvidersBasicTest . java to ensure proper handling of Unicode characters in response headers
[ hotfix ] remove unused method in rocksdbserializablecompositekeybuilder
added a method to retrieve the static permissions field in ` ProtectionDomain ` and updated ` SubjectDomainCombiner ` to use it to improve
fix null pointer exception in recipehandlerbrewery , recipehandlerelventrade , and recipehandlerfloatingflowers . close #
refactor parsing logic in Parser . java to improve clarity and structure to enhance readability and maintainability of the code
added a new method ` showConnectionErrorPopup ` to ` UploadMediaDetailFragment ` and its implementation in ` UploadMediaDetailsContract ` to provide
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to check for ` contentType . isAny (
updated bitwise operation from ' 1 < < bitIndex > ' to ' 1L < < bitIndex > ' in NodeBitMap . java
updated imports in ImportLayoutStyle . java for consistency to improve code clarity and maintainability
refactor ConsoleUIService to replace gitBashConfigValue with useStdin and introduce TERM _ PROGRAM and MINTTY constants
replace mocked ` AccountManagerCallback ` with ` TestAccountManagerCallback ` and update assertions in ` ShadowAccountManagerTest . java ` to
remove the enclosingType field and its assignment in AnalysisType . java to simplify the code by eliminating unnecessary field initialization
rename method names from ` getProperty0 ` , ` getProperty1 ` , ` getEntries ` , and ` getConcatSeparator ` to ` property0
nifi - 11341 : remove timeout from putallcallables . set ( ) in case of failure .
[ rip - 10 ] fix npe in mqclientinstance when consumer running info be empty or not
[ java ] generate source identity in order to avoid duplicate .
added a new file ` TopTabAction . java ` implementing the ` Presenter . Toolbar ` interface with a toolbar action to provide a
camel - 16400 : camel - core - dynamic - router should use reactive executor in doinit ( ) instead of match ( )
refactor ` AggregateItemReaderTests ` to remove inheritance from ` TestCase ` and add ` @ Before ` and ` @ Test ` annotations
added generic type parameter ` < T > ` to the ` Procedure ` method in ` AbstractObjectValueTypeMap ` to enhance type safety by specifying
added functionality to retrieve and display Wikidata edits in AchievementsActivity , NetworkingModule , and OkHttpJsonApiClient
added validation to ensure ' len ' is less than or equal to Short . MAX _ VALUE in OfflineSorter . java to prevent illegal argument exceptions
do n ' t report a bug when there be a load of min / max value .
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the dataset implementation
updated the exception message for invalid credential type in ProvisionClusterRequest . java and modified the test case in ProvisionClusterRequestTest . java to provide
updated random number generation logic in TestVectorUtil . java to ensure consistent behavior of random number generation
changed the return type of the compareBy method from int to long and simplified time comparison logic to improve performance and simplify time comparison logic
added SSL property handling and modified send buffer assignment in TestUtil . java and PGPropertyTest . java to ensure proper SSL configuration and validate SSL
danielwagnerhall : enable safebrowsing by default in chrome
added null check before cloning of oldConfig in BaseMotorMount and RecoveryDevice classes to prevent potential NullPointerException when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding behavior based on renderer
update column calculation and return logic in DataTable . java and TableDiffer . java to handle empty lists to improve robustness by preventing potential
added a new constant ` CustomIgnoreTag ` and modified its logic in ` RobustJavaMethodParser ` to handle ` CustomIgnoreTag `
( chore ) camel - jdbc : use specific exception type for optimistic locking
fix reflection requirement for @ configurationproperties ( ` ` parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity and modified onInsetsUpdated method to adjust toolbar padding and fragment container padding to improve UI respon
deleted the ` ClusterNodeInfo . java ` file to remove unused or redundant code from the project
modified the return statement in ShieldedTransferActuator . java to ensure consistent behavior of the method
added debug output for standard and legacy ciphersuite selection in ServerHandshaker to improve traceability of ciphersuite selection in the handshake process
updated template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single and multiple templates correctly to improve user experience by
added a ` nodeLabelMap ` to track duplicate node instances and updated logging behavior to improve error handling and provide clearer logging for duplicate nodes
added a new file R2303044ListSelection . java that implements a list selection test to verify the selection of a specific list item
[ java ] change publicationregistration . checkkeepalivetimeout to haveclienttimedout .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the compound property is correctly
refactor row count calculation in StatsRulesProcFactory . java to improve clarity and maintainability of the code
updated path handling and parameter management in SpringBootDocBuildTemplate . java and DocUtil . java to improve code clarity and maintainability by
updated logger initialization to be final and refactored action handling logic in multiple classes to enhance immutability and streamline event notification data management
changed the type of ` cachingBuildEngineDelegate ` from ` DistBuildCachingEngineDelegate ` to ` CachingBuildEngineDelegate ` and modified
updated RuntimeException to include a specific error message when JSON parsing fails to improve error reporting for better debugging and provide more informative error messages
added a conditional check for DEBUG before logging a message in WidgetsModel . java to improve performance by avoiding unnecessary logging when DEBUG is not
refactor Console and Scanner classes to improve code readability and maintainability
simplified the calculation of numTerms in SimilarityBase . java and added a test for discount overlaps in TestSimilarityBase . java
added reflection - based method calls for sending messages in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to enhance test reliability by
added new exit and quit properties with corresponding methods in Global . java and removed the old quit method from ScriptingFunctions . java to streamline
fix resource leak in loanbrokersharkdetector demo
rename methods from ` getFirstUnverified ` and ` getLastInvocationStackTrace ` to ` findFirstUnverified ` and ` findLastInvocationStackTrace ` to
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 567 : vm
reformatted assertions in ResinAcegiAuthenticatorTests . java for consistency to improve code readability and maintainability
added a 32 - bit limit to the bigIntegerToBytes method calls in ECKey . java to optimize memory usage by reducing the number of
rename fml . disabledmods to fml . modstates to avoid confusion .
refactor account selection handling into a separate method for clarity to improve code readability and maintainability
updated exception message to include host IP and port in CollectSink . java to improve debugging by providing more context about connection issues
added error handling for unexpected empty results in ValidatorContractController and a corresponding test in ValidatorContractControllerTest to improve robustness by throwing an exception
added a null check for the root variable before parsing JSON in TexturePackerFileProcessor . java to prevent potential NullPointerException when root is null
removed null check for datasource and JNDI in PooledConnection . java to simplify connection pooling logic by eliminating unnecessary checks
increased TARGET _ MB and WINDOW values and introduced a sink object in TestRefprocSanity . java to optimize memory allocation and
add null check for currentConsole before calling write methods in EditorConsole . java to avoid potential NullPointerException when currentConsole is null
added a credential refresh delay of 100 milliseconds in KinesisConfigUtil . java to allow more time for credentials to be refreshed during kinesis operations
refactor dialog creation into a separate method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
updated the ` test ` method to include a ` - package ` argument and modified the loop structure accordingly to enhance functionality by allowing the method to
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 and modified import statements in ModulesTest and
replaced specific imports with a wildcard import and added a dependency check before adding dependencies to resolve to simplify import statements and ensure dependencies are only added
added a set to manage ZipFileInputStream instances and modified the inflation logic to ensure proper resource management and prevent potential memory leaks
rename ' datamatrix ' to ' data _ matrix ' for consistency
sequencegeneratorsource : do not run active or idle if there be no key range
corrected the spelling of the method name from ` getCurrentyActiveConnections ( ) ` to ` getCurrentActiveConnections ( ) ` to improve
replaced ` findAny ( ) ` with ` findFirst ( ) ` and added ` getAnnotations ( Class < T extends Annotation > type ) `
added support for " ppc64 " and " ppc64le " architectures in Bits . java and ByteArrayAccess . java to
updated the exception message in RoboMonitoringInstrumentation . java to include a reference to GitHub issue # 4736 to provide more context about the
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of COMMIT _ TIMEOUT _ MINUTES and ROLLBACK _ TIMEOUT _
replaced instances of ` OffsetDateTime . now ( ) ` with ` Instant . now ( ) ` in ` DateUtilTest . java `
refactor BytesRef class for improved performance to enhance efficiency and reduce memory usage
added a Toast message to inform users that YouTube Player does ' t work on Lollipop yet waiting on an update from Google
added validation for unterminated dollar quotes , string literal , identifier , and block comment positions in the SQL parser to ensure proper syntax errors are
add miss check for mvibrator . hasvibrator ( )
updated table border and color settings in DotRenderer . java for better visual representation of foreign key columns to enhance the visual representation of foreign key columns
added a new method ` isEncodedPar ` to ` HiveConf ` and modified ` SetProcessor ` to check its value to improve handling of
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class for improved certificate validation logic to enhance security and maintainability of certificate processing
add support for wavefront uri prefix ( fixes # 3903 )
removed BitmapLruCache from TimeLineCursorAdapter and added image loading functionality in NetworkedCacheableImageView to improve image loading efficiency and
removed unnecessary parameters from the ` LauncherAnimUtils . ofFloat ` method across multiple classes to simplify method signatures and improve code readability
updated controller version references in DependencyBank . java and added a new constant in BuildScriptHelper . java to ensure compatibility with the correct controller version
refactor LaunchedURLClassLoader to improve URL loading efficiency to enhance performance and maintainability of the class loading process
updated the JDBC query implementation in DataSourceHealthIndicator . java to utilize DataAccessUtils and validate the number of columns in the result set to
add no - cache header to response when no - cache be enable .
added Locale . ENGLISH to the warnMsg string formatting in ZkController . java to ensure consistent string formatting across different locales
added a constructor to SolrQueryParser that accepts a QParser and a default field to enhance flexibility in query parser configuration
updated copyright year from Copywrite to Copyright in multiple Java files to ensure compliance with licensing requirements and clarify copyright ownership
removed unnecessary whitespace in MainTest . java to improve code readability and maintain consistency
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper creation of VoidColumnVector instances with default size
updated parameter name from ' templateName ' to ' req . getName ( ) ' in StatementGenerator . java to improve clarity by using the request
removed the ` isTypeMatch ` method from ` AbstractConfig ` to simplify the configuration addition logic
[ java ] reset session timestamp and add a new offer method in sessiondecorator .
rename method names from ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` and ` maxTrustedIndexXForwardedIndexResolver `
add @ nobootstrap annotation to make it easy to disable bootstrap inserter
hbase - 11341 fix npe in tabledescriptorchecker ( chaoyu tang , review by xuefu )
replaced ` maxCommits ` with ` requestedCommits ` in ` BranchGraphServlet . java ` to improve clarity and maintainability of commit
updated method signatures in bug6794831 . java to include InvocationTargetException to improve error handling and ensure proper invocation of UI components
added a new constant ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method in ` CachingBuildEngine `
removed unused imports of TxInputUtil and TxOutputUtil from TransactionCapsule . java to clean up the code and improve maintainability
removed duplicate call to markAsDone in HttpProtocol . java to streamline code by eliminating redundancy
added a default TezConfiguration instance and updated the copyInto method in TezConfigurationFactory to enhance configuration management for Tez tasks
added null check for keyPurposes in TimestampedSigner . java to ensure robustness by preventing potential NullPointerException
simplified the else statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a null check before stopping the least recent sound and implemented a forget method to manage recent sounds to prevent potential NullPointerExceptions when stopping the
clear position discontinuity only once in simplebaseplayer . invalidatestate
added decimal formats and tick units for the NumberTickUnit in NumberAxis . java to improve precision in number formatting for better user experience
refactor TargetGraphAndBuildTargets to use the new factory method for creating instances to improve code readability and maintainability
removed the ` IndexFileNameFilter ` class and updated file deletion logic in ` IndexFileDeleter . java ` to streamline file deletion logic
add a new configuration option to check the entire entity ' s collision bounding box for ladders . close # 163
added a default compression level parameter to the ApkBuilder , ApkBuilder , and SignedJarBuilder classes to allow customization of the compression
added a test method to verify static fields in the A class to ensure that static fields are correctly included in the generated stub jar
added support for handling BYTES data type in FieldSpec , MetricFieldSpec , Schema , SingleValueIterator , SingleValueSet , and Percentile
updated string formatting in multiple failure error messages for clarity to enhance readability of failure messages for better debugging and understanding
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the
added caching functionality and a test for updating post cache in SpringDataJPAJoinFetchPaginationTest and SpringDataJPAJoinFetchPaginationConfiguration
update pronunciation model to support locale - specific pronunciation file
added null post handling in SimpleHttp and improved test cases in TestHttpPlugin to ensure proper handling of null post parameters and enhance test coverage
added dispatcher and executor service shutdown functionality to ClientSideSlb and ClientSideSlbTest classes to ensure proper resource management and shutdown of the
modified the calculation of the texture ' s vertical position based on the flip direction to ensure correct vertical positioning based on the texture ' s flip
improve error message when discovery strategy can not be find
added null check for contextPath in MetricsPublisher . java to ensure contextPath is initialized to " NA " when it is null
[ drools - 7 ] fix class reloading in kiecontainerimpl ( # 3649 )
added B _ TREE _ MAP _ ROOT _ HEADER serialization header in BTreeMap . java and SerializationHeader . java to ensure proper serialization
added support for ` prefix _ header ` and ` precompiled _ header ` in the ` AbstractCxxSourceRuleFactory ` and ` Ap
replaced ` WeakReference ` with a new ` AccWeakReference ` class and modified the ` ImageWatched ` class to utilize
changed the visibility of the findNextIndex method from package - private to private in ObjectMap and ObjectSet classes to restrict access to the method for
updated the ` isDirect ` variable from ` true ` to ` false ` in ` VertexBufferObject . java ` to correct the logic for
maryclient : fix typo in audioeffecthelptextsmap . get ( effectname )
changed return type of localToAscendantCoordinates and localToDescendantCoordinates from void to Vector2 in Actor and Group classes to enable method
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added null check before removing the close hook in the context to prevent potential NullPointerException when context is not initialized
updated border spacing and padding logic for folder layout in CellLayout and DeviceProfile classes to improve layout responsiveness and maintain consistent spacing across folder
refactor numeric parsing logic into a new ValueNumeric class to improve code readability and maintainability by encapsulating numeric parsing logic
added a condition to check if the response is deferred before returning the login or error page to ensure that the authentication process does not proceed when deferred
updated argument checks from " -- module - startd - ini " and " -- module - start - ini " to " -- add - to
added a default partition value handling in DynamicPartitionFileRecordWriterContainer . java to ensure that a default partition value is used when none is provided
[ hotfix ] add null check for operatorfactory in streamnode and streamgraph
updated return statements in DefaultArtifact . java to include classifier and version information to improve clarity in artifact conflict identification and provide more detailed information
fix issue with kafka consumer rebalance to not call staterepository . getoffset ( ) twice .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to provide clearer feedback when a class cannot be loaded due to
change default value of gmail _ notifications _ enabled to enable _ gmail _ notifications .
doc ( regen ) : clarify that ` ` regen ' ' be ` ` regen ' '
updated mock message count in LumberjackMultiThreadTest . java to use a dynamic concurrency level to improve flexibility in test execution based
check if player be not dead in scoreboard . getentryTeam ( ) and scoreboard . getplayerdisplayname ( ) , fixes #
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
updateusercmd : update api key / secret key must be specify with apiKey / secretKey
replaced switch - case statements with if statements for better readability to improve code clarity and maintainability
refactor AbstractMetaDataExportMojo to improve code structure to enhance maintainability and readability of the code
added error handling for SQLIntegrityConstraintViolationException in Hive . java to ensure proper dropping of non - materialized views during table dropping
changed the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency with the project ' s property naming
added a new deprecated class ` RoboExecutorService ` in the ` org . robolectric . android . util . concurrent ` package to
added checks for root groups in GroupTreeView and updated menu items accordingly to ensure proper handling of root groups and improve group management functionality
rename method and variable from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` for clarity to improve code readability
refactor command - line argument handling in TestDynamicNumberOfGCThreads . java for improved readability and maintainability to enhance code
changed return types and variable types from ImmutableFlavor to Flavor in CxxPlatforms . java and KnownBuildRuleTypes . java to
updated SQL creation logic in CreateTable and CreateTableDeParser to improve handling of create operations and table parameters
set the background color of the ChatViewerFragment to a fixed alpha value to improve the visual appearance of the chat background
test : migrate ctiteratortest to junit 5 ( # 4649 )
added ` token . clear ( ) ` and ` result . clear ( ) ` methods to multiple tokenizer classes to ensure proper clearing of tokens and
pmd : add test case to demonstrate bug
updated ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to remove generic type parameters and added validation for state machine configuration to ensure
danielwagnerhall : do n ' t allow link locator to start with ' link = '
updated StringConverter to handle different value types and adjusted corresponding tests to improve flexibility in conversion between numeric and float formats
remove dependency on currentunitofwork in aggregatelifecyclecyclecyclecyclecyclecycl
updated touchable insets from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to improve respon
removed a conditional check for the ' ~ ' character in the FencedCodeBlockParser class to simplify the code by eliminating unnecessary
added support for the " socketTimeout " property in multiple classes to manage socket timeout settings effectively
added a delay of 500 milliseconds and handled InterruptedException in ElementAttributeTest . java to improve responsiveness and error handling during element attribute tests
added UTF - 8 encoding to BufferedReader in HttpUtils . java to ensure proper handling of character encoding in the input stream
refactor List class methods for improved performance to enhance efficiency and reduce memory usage
added constructor overloads for URI and Path in AsyncFileImpl . java and updated error handling in AsyncFileImplTest . java to improve flex
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the CucumberEngineExecutionContext is
fix npe when no nuage vsp device be configure on the physical network
rename ` retryUploads ` to ` retryFailedUploads ` and update related logic in ` FileUploader ` and ` FileListActivity ` to improve
updated Java version constants and method calls in ConstantPoolTagTests . java to ensure compatibility with Java 9 and improve code clarity
skip recompile with - xlint and - xlint warning
added a method to clear all headers in the AsyncHttpClient class to provide a way to reset client headers for better resource management
replaced Vector with ArrayList for better performance and type safety to improve performance and type safety in the code
updated the default grid column value from 4.0 f to 3f to improve the visual representation of grid items
added a condition to check if the table exists in the CalcitePlanner class to ensure proper handling of view creation when the table is not
updated datePattern and modified assertion logic in TestHS2HttpServer . java to improve date validation and ensure accurate comparison of expected and actual content
do n ' t swallow exception in graphprinter . asobject ( )
simonstewart : add a test to make sure we can access page with an insecure ssl certificate
updated byteOffset calculation in ByteBlockPool . java and added a new test case in TestByteBlockPool . java to improve memory management and
changed the visibility of ` firstEncoder ` and ` secondEncoder ` from static to instance variables in ` InteractionValueEncoder . java ` to
added error handling for unexpected exceptions in TcpTransport . java to ensure proper resource management and error reporting during transport operations
add @ suppresswarnings ( ` ` serial ' ' ) in papplet to suppress warning
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from ` OcamlDebug
update ` ` save change ' ' dialog to ` ` discard change ' ' and ` ` return to jabref ' '
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator . java and updated error logging in OAuth20AccessTokenEndpointController
added a check for the index variable in DrillBuf . java to ensure the index is valid before proceeding with operations
phoenix - 4892 add method to init table mapper job to table mapreduceutil ( addendum )
remove duplicate call to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to improve code clarity
[ gr - 36464 ] llvm : do n ' t allow access to non - exist language .
added deprecation warning and validation for the RESERVE variable in ReplicationHandler . java to ensure compatibility with Solr 7.1 and enforce proper configuration
replaced ` cacheVariableName ` with ` cacheForeignKey ` in ` DIHCacheSupport . java ` to clarify the purpose of the
updated variable types from long [ ] to Object [ ] in ECKeyPairGenerator . java to improve type safety and clarity in key pair generation
[ hotfix ] [ runtime ] add suspend method to restarting interface
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation in ` RecentsAnimationDeviceState ` to simplify the
refactor UniFiPortTable usage and streamline filtering logic in UniFiControllerCache . java to improve code readability
updated method signatures and variable types from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve thread identification
remove old offer from the list with the same offer id and add a new one if it have change .
enable tl 1.3 and tl 1.4 by default
modify Mockito method invocation control to differentiate between Class and other mock types to enhance flexibility in mocking behavior based on the type of
updated NotLoadedException to include the current context in multiple classes to improve exception handling by associating the exception with the current context
removed the import of DisplayUtils and added an extra parameter for EXTRA _ FILE in the intent to streamline the code by eliminating unnecessary
added error handling and compaction checks in StoreDirect and StoreWAL classes to ensure proper resource management and prevent potential memory leaks during file operations
replaced direct calls to ` stopSwipePipToHome ` with asynchronous execution in ` AbsSwipeUpHandler . java ` to improve
added hidden property and methods to manage command argument visibility in LiquibaseCommandLine and CommandArgumentDefinition classes to enhance command argument management by allowing
update the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to align the test environment with the latest
[ geos - 7094 ] use geoserverextensions . bean ( ` ` catalog ' ' ) for style group
added permission checks for shortcut creation in InstallShortcutReceiver , Launcher , and PackageManagerHelper classes to enhance security by preventing malicious int
added getId ( ) and setId ( int id ) methods to TiledMapTile , AnimatedTiledMapTile , and StaticTiled
refactor Manager class methods for improved performance to enhance efficiency and maintainability of the code
updated JDBC connection string to include version information in JDBCExample . java and SessionExample . java to ensure compatibility with the latest database version and improve
added properties for schemas and includeSchema in LiquibaseGenerateChangeLogMojo . java to enhance the functionality of the change log generation
replaced ` putIfAbsent ` with ` put ` in ` registryCache ` to improve performance by reducing unnecessary object creation
planner - 1745 : add logger . warn ( ) to plannerbenchmarkrunner . warmup ( )
changed the visibility modifier of the ` doPutRecord ` method from final to package - private to restrict access to the method for better encapsulation
updated return statements in Tools . java and modified path replacement in FileSelectorFragment . java to ensure correct path formatting and improve code clarity
added new test methods for handling large and slow response content in FastCGIProxyServletTest . java to improve test coverage for response content handling
added a call to start the ReadInteractionsService in MarkReadService . java to enable the service to interact with ReadInteractionsService for
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure that warnings are only logged when
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5952 - email server
add retry policy for ssl factory reloading ( # 5649 )
updated the date format from " yyyy - MM - dd ' T ' HH : mm : ss ' Z ' " to " yyyy - MM
updated the assertion message in SpyingOnRealObjectsTest . java to clarify the reason for mocking private classes to improve clarity
added methods to handle line endings on NL in InlineBoxing and LineBox classes to enable flexibility in line ending behavior based on the
updated filePathString assignment to handle null parent cases to improve robustness by avoiding potential NullPointerException
removed unused import of DocCollection from TopicStream . java to clean up unnecessary dependencies and improve code clarity
refactor NinjaServletContextTest to use a new method for creating ServletInputStream and add a new test for handling Windows 1250 parameters to
updated properties in AbstractCasEndpointTests to include a wildcard property to enhance flexibility in endpoint configuration
added a validation check for the current graph type in StatisticsControllerImpl . java to ensure that the current graph is a dynamic graph to prevent runtime
do n ' t throw disabledbeanexception when @ scopeone be set to @ scopeone
added support for suppressing exceptions in JSON path construction to enhance flexibility in handling JSON errors
updated the instantiation of ControllerLeaderLocator in HelixServerStarter . java to ensure proper initialization of the leader locator
updated usage messages in CLHSDB . java and HSDB . java to include ' - help ' to clarify command usage for
resolved - issue batch - 1342 : itemhandlers should not be register in stepfactorybean
remove deprecated write class and move it to sdk . io . write
replaced instances of ` getAccessibilityManager ( ) ` with ` accessibilityManagerInstance ` in ` ShadowAccessibilityManagerTest . java `
fix an issue with the flutter usage statistic group ( # 5379 )
removed the ` SourcePathResolver ` dependency from multiple classes and replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` to simplify
refactored the ` enumDataTypeHelper ` initialization and introduced a new class ` PostgreSQLEnumDataTypeHelper ` to improve code organization and encapsulate
updated the assertion in LogFileTests to use File . separatorChar for path comparison to ensure consistent file path formatting across different operating systems
replace instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency in naming con
added support for dropping index tables in HiveMetaStoreClient to ensure proper error handling for unsupported operations
added a visibility check and disabled flags update in RecentsView . java to ensure actions view is not shown when the visibility is not visible
added a conditional to set a specific highlighter for non - Windows environments in Repl . java to enhance syntax highlighting for non - Windows
add method to add optional local variable , and rename xss _ request _ parameter _ to _ cookie to hs _ request _ parameter _ to
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
removed a redundant call to removeCaptureListener in SelectBox . java to improve code clarity and maintainability
change the ` _ metaDataComplete ` variable from ` true ` to ` false ` to ensure that the ` _ metaDataComplete ` state is consistent
changed the return type of the removeTaskTarget method from boolean to void and added thread pool execution in RecentsAnimationController . java to
added environment variable handling for release and Android flavors in JsBundleGenrule to ensure proper environment variable management for JavaScript bundles
modified type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test method
added tests for crlf new lines in comments and javadoc in AddImportTest . java and updated imports in AutodetectGeneralFormatStyle
added hub mode support in AbstractLiquibaseChangeLogMojo and AbstractLiquibaseMojo classes to enable dynamic configuration of
removed unnecessary null checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify code logic and improve readability
added a check for the existence of the linkDb before adding the input path in IndexerMapReduce . java to ensure that the input path
refactor method lookup for ` setIndexerThreadPool ` in ` LuceneTestCase . java ` to use reflection to improve code clarity and
removed " : 5000 " from the address string in GameCanvasImplementation . java to simplify the code by eliminating unnecessary port configuration
refactor MapJobExecutionDao to introduce a copy method for storing JobExecution instances and update related tests to enhance the functionality of job execution management by
added a new file ` DownloadTest . java ` to implement a network test for downloading images to facilitate testing of image upload functionality
normalize the language before setting it in multiple classes to ensure consistent language representation across the application
updated exception handling in GenericUDFRound . java to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and specificity of exception
added null check for selectedVersion before accessing its properties in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
removed multiple AntPathRequestMatcher instances from SecurityConfig . java to streamline the configuration by eliminating unnecessary matchers
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a conditional check to ensure the concrete class is not equal to the class element ' s qualified name before processing to avoid unnecessary processing and improve
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to issues
changed ` SUPPORTED _ THING _ TYPES ` from ` final static ` to ` static final ` in ` OpenWebNetEnergyHandler
simplify code , no functional change
deleted the SunToolkitSubclass . java file which contained a method to flush pending events in the AWT toolkit to remove unused code
refactor translation logic in DefaultRenderableSorter and add hasRotationOrScaling method in Matrix4 to improve code readability and maintainability by
added a new test method to verify the registration of wrapper handlers before primitive types in TypeHandlerRegistryTest . java to ensure correct handling of wrapper
added a method to convert between PDLab and RGB representations in PDSeparation . java to enhance color space handling for PDLab
replaced references to ` CommonsApplication . API _ URL ` with ` BuildConfig . WIKIMEDIA _ API _ HOST
( chore ) camel - http : add health test for camel - main
add null check for blockpos in entitythornchakram . gettileentity ( ) to prevent npe .
added a new test method ` testAlterTableWithIndexesExtendPk ` to ` AlterTableWithViewsIT ` to verify the functionality of
updated offset initialization in FileFloatSource . java and modified assertions in TestFunctionQuery . java to improve clarity in document offset management and enhance
removed the ID from the fields in MongoRecordReader to streamline data management by eliminating unnecessary fields
added disposal method to DeviceBase and disconnect method in YeelightHandlerBase , DeviceBase , and WifiConnection classes to improve
added support for handling " AUTO _ INCREMENT " in the parser to ensure proper syntax error handling for integer values in the database
fix ( kubernetes - client - api ) : add a getexistingsharedindexinformers ( ) method to sharedinformersfactory to
server : fix npe in listtemplates api when uservm = = null
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage for improved image size management to enhance robustness and
removed deprecated constants from LauncherSettings and LauncherProvider to clean up the code and improve maintainability
[ drools - 7 ] move the broker - related file into the ' drools - examples ' directory
added legendTop variable and updated offset calculations in PieChart . java to improve legend positioning for better visual representation
added a check to return early if the world transform is zero in BaseShader . java to optimize performance by avoiding unnecessary processing when the transform
added a new file MaryScriptCreator . java to create a script that reads input and writes it to a specified directory to facilit
added a new attribute to store the remote host of the flow file in the session to enable tracking of the remote host of the flow file for
updated compactionLogger initialization and file deletion logic in LevelCompactionTsFileManagement . java to ensure proper resource management and avoid potential memory leaks
updated attribute keys from " xlink : href " and " xlink : href " to " href " in ComponentDescription . java to simplify
camel - 15836 - camel - aws2 : use configurable executor name for timeout checker
hbase - 20536 make isclustershutdown ( ) public in servermanager ( ) ; addendum
added null check before logging the stopped span in Slf4jSpanLogger . java and improved warning messages in DefaultTracer . java to
trim whitespace from the active option before adding it to the configuration to ensure that active options are properly formatted before processing
added depth preference handling in DepthController . java to allow users to control wallpaper zoom behavior based on depth settings
added an assertion to verify the success count of the overseer in OverseerTest . java to ensure that the overseer is
modified the return value of the ` getKernelVersion ` method to always return true to simplify the logic for determining if the xattr is enabled
refactor ExecConstants to improve code structure to enhance maintainability and readability of the code
removed the import of ScreenRecordRule and the ScreenRecord annotation from ThemeIconsTest . java to streamline the code by eliminating unnecessary
added a new method ` setScanAttributeForPaging ` in ` ScanUtil ` and updated references in ` TableSnapshotResultIterator ` to
updated lowRange assignment logic in Request . java and RequestV2 . java to ensure lowRange is within valid range to prevent potential errors
changed access modifier of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource and added debugCacheSize method in WriteCache to
server : fix npe in listhosts api when zoneid be null
[ zeppelin - 5242 ] fix content - type header in zeppelin - 5243
modified the filesystem removal method to include a zfs parameter to ensure that the filesystem is only removed when it matches the specified zfs
replaced the ` obj ` variable with a ` json ` variable in ` HttpRequestBuilder . java ` to improve clarity and consistency in JSON
increased the timeout duration for polling hard commit from 2 milliseconds to 5 milliseconds to allow more time for commit operations to complete successfully
fix : do n ' t fail if listener do n ' t exist
renamed multiple Java classes related to dial functionality to improve clarity and consistency in naming conventions
updated logging statements in SyncQueue . java for consistency to improve code readability and maintainability
update Ryuk version from 0.4 . 0 to 0.5 . 1 in the testcontainers / ryuk container to ensure compatibility
updated return statement from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` and added a new ` TestHook ` class
move legacyxmllayout . jar to the correct location ( # 4373 )
[ hotfix ] [ test ] remove yarnclient dependency from yarnitcase
add miss stats to localmapstatsprovider when no data be include
deleted the AllTests . java file to remove unused test class to streamline the codebase
added Unicode character handling for non - breaking hyphen and zero - width spaces in AbstractWordConverter to ensure proper formatting of Unicode characters in the output
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that stack trace invocations do not starve
updated method call to use getResultMappingsForRowKey for better clarity to improve code readability and maintainability by using a more descriptive
added a new boolean variable ` eventHandled ` in ` UIText . java ` to track event processing status
deleted the ` @ Controller ` annotation and renamed the ` Weldby ` class to ` WeldModule ` to clarify the purpose
ruby backtracking : allow zero width quantifier to be capture group in empty check .
changed the visibility of ` liquibaseProLicenseKey ` from package - private to protected in ` AbstractLiquibaseMojo
[ mondrian - 1212 ] fix nullpointerexception in mondrian - mondrian - mondrian
[ gr - 21212 ] add - g option to generate debug information .
mondrian : fix typo in mondrianproperties . java
added ` getFriendPaths ( ) ` method and modified ` KotlincStep ` and ` KotlincToJarStepFactory
added aliases for BATAK , BRAHMI , and MANDAIC in Character . java and modified main method in CheckScript
updated equality checks in ExecutionCommand and introduced a new method to convert JSON strings to ExecutionCommand to improve code readability and facilitate
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
refactor OCFile . java to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope object for easier debugging and logging
updated the ` cmyk ( ) ` function to handle both ` CSS _ NUMBER ` and ` CSS _ PERCENTAGE ` types to
added a new test method to verify the behavior of local index reverse scan in LocalIndexIT . java to ensure correct behavior of local index operations
updated imports and method names in BaseAndroidTestCase , BackupHelperTest , and LanguageHelperTest to use ApplicationProvider instead of InstrumentationRegistry
updated toast messages in ItemListActivity , LiveTvGuideActivity , and MediaManager to use string resources to improve localization support and maintain consistency
removed redundant condition checks in RendererUtilities . java and updated test assertions in RendererUtilitiesTests . java to streamline code logic and improve test coverage
replaced Iterator < JsonNode > with ArrayNode for handling ask and bid lists in KrakenStreamingAdapters . java to improve type safety and
added exception handling around SQL execution in FileContentProvider . java to log errors when adding duplicate columns during upgrade from 24 - > 30
removed a debug print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
refactor hash table size computation in ConvertJoinMapJoin . java to use computeOnlineDataSize method to improve code clarity and maintainability by
updated the ` buildView ` method to accept a ` Context ` instead of a ` LayoutInflater ` to improve flexibility by allowing dynamic
added assertAuthentication functionality to SecurityMockMvcResultMatchers and corresponding tests to enhance authentication verification capabilities in tests
vpc : set vpcid to null when it ' s not set
[ flink - 10955 ] [ test ] disable flink savepoint test on java 1.11
change int type annotations from ` int ` to ` int ` across multiple classes to improve type safety and clarity in the code
modified loop condition to check if the index is within the bounds of actions to ensure that actions are only executed when the index is within valid bounds
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to align with the new BitmexExchange structure
[ ds - 3552 ] add integration test for orgunit and orgunit relationship virtual metadata
added null check for spatial in LodControl . java to prevent potential NullPointerException when spatial is null
updated ` ConditionalTokenFilter ` , ` FixedShingleFilter ` , ` TestConditionalTokenFilter ` , ` TestRandomChains ` , `
make unsafestorenode and storefieldnode use stateafter ( ) instead of graph . unique ( )
updated method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure
added an assertion to verify that the event repository is not empty in CasAuthenticationEventListenerTests to ensure that the event repository behaves as expected without
removed the ` attributeTemplateName ` and ` attributeLine ` parameters from ` AuthenticationAttrProcessor ` to streamline the code by eliminating unused
added null check for the key parameter in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that
removed the ` setTypeface ` method from ` CodenameOneTextPaint ` class to prevent runtime exceptions when setting the typeface
added an ` open ` method to various file system classes to provide a standardized way to open file streams for different file systems
douniaberrada : remove deprecate method in webdriverrunner
simplified the conditional statement in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to replace ResultObject with Object and introduce a useConstructorMappings flag to improve code clarity and maintainability by
updated SQL statement to include quote for foreign key references in CreateTableGeneratorTest . java to ensure compatibility with SQL standards for foreign key references
added a filter mode check and modified return logic in VectorizationContext . java to improve handling of filter expressions based on the result type
changed the type parameter of ` moveSelectorConfig ` from ` ConfigUtils . inheritConfig ` to ` ConfigUtils . < MoveSelectorConfig >
replaced the instantiation of ReorganizeTableStatement with a direct reference to modifyDataTypeStatement to simplify the code by eliminating unnecessary parameters
updated cluster name references to use constants from IoTDBStartCheck to improve code readability and maintainability by standardizing naming conventions
do n ' t swallow exception in peergroup . connect ( ) and peereventlistener . connect ( )
added conditional checks for multiple style strings in Nano . java to ensure the correct style is assigned based on their values
fix data fix for schematic with binary data
updated return message in NoToStringOnStringType . java to clarify the purpose of the return value to improve user understanding of the
8274396 : testthreadfailure . java fail with ` ` - xmx64m ' ' due to ` ` - x
updated the return type of ` retryFailed ` method and introduced new classes ` DataProviderRetryAnalyzer ` and ` DataProviderTest ` to enhance
update return statement to use the variable ' bandwidth ' instead of the first token to improve clarity by using a more descriptive variable name
danielwagnerhall : add a way to capture network traffic in the selenium - backed selenium implementation .
refactored the ` doPrintEntry ` method to remove the ` printWarning ` parameter and updated public key algorithm information to streamline the
[ hotfix ] fix checkstyle violation in taskasynccalltest
added validation for opacity , shape , and background color in Dialog and Frame classes to ensure proper component state management and prevent illegal component state exceptions
changed the ` state ` variable from ` ArrayDeque < DirWalkState > ` to ` final ArrayDeque < DirWalkState > ` to
refactor Redis connection factory to use RedisStandaloneConfiguration and improve sentinel configuration handling to enhance flexibility in configuration management for Redis connections
added lastseendelayedmessage property to chatroom . jabber . chatroom . jabber . chatroomjabberimpl
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method to simplify
refactor share operation handling in FileOperationsHelper and OperationsService to utilize Intent for creating share operations to improve code maintainability and streamline
remove unnecessary check for ` isInjected ` in ` BeanDefinitionInjectProcessor ` and add dependency injection in ` FieldPropertyInject ` to streamline
replaced calls to ` getMinBuildHeight ( ) ` with a new variable ` yStart ` in ` ClassicPlotManager . java ` to
fix npe in smackintegrationtestframework due to nullpointerexception
tmi - 18 : add support for interop sub - directories in exif reader .
added support for a new ` ENABLED _ LS ` version mode in ` VersionedTargetGraphCache ` and updated ` VersionTargetGraphMode ` to
added a condition to check if the child ' s format is video before parsing to ensure proper handling of video formats in the code
chore : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
added a load method to LwjglNativesLoader and modified its implementation in LwjglApplet and LwjglN
updated CSVRequestHandler to support the ESCAPE parameter and modified encapsulator logic to enhance CSV handling capabilities and improve error handling
updated grant type validation logic in ClientRegistrations . java and modified corresponding test cases in ClientRegistrationsTests . java to enhance clarity and
updated error messages in Throwable . java and SuppressedExceptions . java to include context and exception details to improve clarity of error handling and provide
added a new SQL query and modified the iterator initialization in DerivedTableIT . java and ClientAggregatePlan . java to improve data retrieval and
added RSquare mapping and validation in RegressionEvaluator and StreamExpressionTest to enable testing of RSquare regression in the application
added request header handling in ThreadContextMDCServletFilter to ensure proper context attribute management for MDC requests
refactor SparkPlanGenerator to use a local variable for MapWork instances instead of casting to improve code readability and maintainability by reducing
refactor image loading logic in PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for retrieving folder images to improve code
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver and added a new test case in JwtIssuerAuthenticationManagerResolverTests to improve cache management
update resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and add a new test case
llvminteroptype : do n ' t allocate type cache if the type be not a method .
removed redundant sleep statement in AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating unnecessary delay
added a new file KernCrash . java that implements a GUI with a custom font and painting functionality to demonstrate and
added a fail ( ) method to LinkedHashTreeMapTest . java to ensure proper error handling during test cases
added a method ` getInterfaceAddresses ` to retrieve network interface addresses with a specified prefix to enhance functionality by allowing filtering of network interface addresses based
cancel the housekeeper task if it ' s not need .
updated the condition to check for autoSwitchHAConnection ' s slave address instead of the client address to ensure that the correct slave address is used
refactor assertions in Assert . java for improved readability to enhance code clarity and maintainability
added a new test file ` Issue247Test . java ` to implement unit tests for the ` org . mapdb ` class to ensure
changed the type of the ` results ` set from ` Set < CategoryItem > ` to ` Set < String > ` and modified the `
added checks for today ' s leap year and birth ' s leap year in ValidatorTest . java to ensure that max age validation behaves correctly
added GrblLookups for handling alarm codes and error responses in GrblController . java to improve error handling and provide clearer
added a condition to return the home button label when there are no screens available to improve user experience by providing a default label when no
removed the count parameter from the getTrades method across multiple classes to simplify method signature and reduce unnecessary parameters
updated methods in ConsoleReader to handle null strings and adjusted index handling in MemoryHistory to improve robustness by preventing null pointer exceptions and ensure
updated the file path construction for the jdkPath variable in JavaBuild . java to ensure the correct file path is used for the jdk
refactor method calls from ` getDescription ( ) . getBuildRuleType ( ) ` to ` getType ( ) ` across multiple classes to improve code
updated JFCModel constructor to accept a logger parameter to enhance logging capabilities for better debugging
added a validation check for the tolerance value in the MaximumInscribedCircle class to ensure the tolerance is positive to prevent illegal argument exceptions
added methods to create and drop views in TestUtil and updated DatabaseMetaDataTest to utilize these methods to improve code organization and facilit
[ gr - 36464 ] do n ' t run nan test on x86 .
added a new file DesktopTaskbarUIController . java and modified TaskbarManager . java to incorporate DesktopTaskbar
added progress tracking functionality and assertions in the SearchModFragment , ModItemAdapter , and ModpackApi classes to enhance task management and ensure proper
refactor file handling methods in Files . java to improve code readability and maintainability
refactor ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration ` classes to use ` Collection ` instead of ` Set
removed the @ FunctionalInterface annotation from DomainAwareServicesManager and ChainingServicesManager interfaces to simplify the interface structure and improve code clarity
add more logging to resourcepackloader . generatepackinfo for mod file .
update gapic - generator - java version to 2.1 . 0 ( # 6022 )
added grow ( ) and growX ( ) methods to Cell class to enhance flexibility in cell management
refactor DefaultInputHandler to simplify key binding management and improve code readability to enhance maintainability and simplify the code structure for better maintainability
resolve http : / / issues . apache . org / activemq / browse / amq - 2635 - add try catch to
replaced ` longs ` with ` bytes ` and added a memory fail count check in ` MetricsMemoryTester . java ` to improve
deleted the JobJobPrototype . java file to remove unused code to streamline the project
added a securityEnabled flag to the MappingsTable class and updated related methods to enable control over security configuration during data connection handling
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable the dump functionality for
skip eos detection for aws afts and aws videorenderer
[ java ] add connection check before publish limit to network publication .
added a check for ` options . getOutputOptions ( ) . isNoInfo ( ) ` when ` dbInfo ` is null to ensure that
make usesecureconnection default to 443 when use ssl
added DOMOutputOptions to DOMConverter and modified the buildDOMSubtree method to include error output options to enhance error handling by allowing customizable error
refactor assertions in Assert . java for improved readability to enhance code clarity and maintainability
[ java ] add retain option to publish event to allow publication to be retain .
added " testCaseName " to the JSON response in TestResultSummary . java and EventSerializationTest . java to include the test case name
[ hotfix ] [ table ] fix typo in sqlgroupedwindowfunction
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter .
use read write lock for ssl _ new ( ) and ssl _ session _ id _ context ( ) .
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to utilize SQL
changed log level from debug to trace in FirmwareUpdateService . java to improve logging granularity for better traceability
added null checks for date and timestamp types in GetObjectTest . java to ensure proper handling of null values in database queries
refactor string handling in ` StringSubject ` , ` Subject ` , and ` CustomFailureMessageTest ` classes to improve code readability and
added unit tests for repository permission handling in UserModelTest . java to ensure correct permission checks for different repository registrants
added a new file ` Test7088020 . java ` that implements ` invokeExact ` with multiple stack frames ` to demonstr
replaced the audience restriction matching logic with a set of audience URIs to improve clarity and maintainability of audience validation logic
refactor cache refresh methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code readability and maintainability by consolidating
initialize the _ stderr variable to null and update its assignment logic to handle potential null values to improve robustness by avoiding potential null pointer exceptions
added a new warning constant SEPARATION _ ORDER and updated warning logic in BasicEventSimulationEngine to track the number of active stages and improve
updated the parameter from offlineTableConfig to realtimeTableConfig in the query optimizer to ensure the query uses the correct realtime table configuration
added hostMinuteAggregrateSql and modified metrics aggregation logic in PhoenixHBaseAccessor . java and UpgradeCatalog240 . java to
[ hotfix ] fix checkstyle violation in savepointv2 and filestatehandle
added functionality to set and get BluetoothClass in ShadowBluetoothDevice and ShadowBluetoothDeviceTest classes to enable testing and management of Bl
fix checkstyle issue in player / offlineplayer / glowplayer . java ( # 787 )
[ drools - 7 ] allow sum ( [ ] ) function to return an error if the list be null or empty
replaced ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with ` graph . readUnlockAll ( ) ` to simplify
updated the construction of ` coreNodeName ` to include ` nodeProps . getCoreName ( ) ` to ensure that the coreNodeName is correctly formatted
chatactivity : refresh the contact list after the contact list be update .
rename TaggerParserPosTagCompatibilityITest . java file to improve clarity and maintain consistency in naming conventions
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
updated element type validation logic in ` mmm Types . java ` and added a new class ` T7005671 . java ` with multiple
updated superTriangle coordinates in DelaunayTriangulator and replaced EarClippingTriangulatorTest with DelaunayTri
added @ Override annotation in multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use builder pattern to improve code readability and maintainability
updated state management logic in StackOverflowCheckImpl . java to improve clarity and functionality of yellow zone state management
added shadow methods for SQLiteDatabase and ContentValues in Robolectric and removed deprecated methods in ShadowContentValues and SQLiteDatabaseTest to enhance
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglGraphics . java ` and `
replaced ` bytesPerDim ` with ` comparator ` for comparison in ` BKDWriter . java ` to improve code readability and maintain
updated Locale . java to include a script property and modified default locale initialization logic to enhance locale management by allowing dynamic language display , format , and
update return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to reflect the last set text alpha value instead of the current
corrected a typo in the warning message from " Confimap PropertySources " to " ConfigMap PropertySources " to improve clarity and accuracy
updated DefaultConfigurationTestSuite to use UaaJunitSuiteRunner and modified TokenRevocationEndpointTest to use " uaa . none " to
trim whitespace from nextToken ( ) calls in GzipFilter . java and GzipFilterDefaultTest . java to ensure consistent handling of whitespace in the filter
updated the initialization of _ outputType in Response . java to ensure consistency in output type handling
changed the default implementation of the regex implementation from JDK to JONI to ensure compatibility with the latest regex functionality
replaced ` LooperExecutor ` with ` Executor ` and refactored task handling in ` ViewCapture . java ` to improve task management
fix for ticket : 263 - add support for the style query parameter in the info request .
added a check to ensure the destination folder exists before creating it to prevent errors when attempting to create a non - existent folder
updated the node discovery bind IP from 0.0 . 0.0 to 127.0 . 0.1 in Args . java to ensure
( chore ) camel - jbpm : fix typo in inonly and inout handler
pdfbox - 4892 : add a private constructor , a suggest by valerybokov
renamed ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and updated related methods to improve clarity and consistency in naming conventions
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability across the project
fix : fix bug in pretty - printing of implicit type parameter ( # 3649 )
[ hotfix ] fix memory leak in operatorcontext
updated formatting in QueryByExamplePredicateBuilder , JpaPersistentPropertyImpl , and StringQuery classes to improve code readability and maintain consistency in
updated ` ConcurrentLRUCache ` and ` FastLRUCache ` to use ` AtomicLong ` for ` evictionCounter ` and ` stats
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` in ` DefaultTaskExecutor ` and added a
server : do n ' t check if the intended destination be n ' t an Inet4Address . getLocalHost ( )
added RuntimeEnvironment configuration to MainFrame . java to set database and source paths for improved database management
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` constructors to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration
[ hotfix ] [ table ] fix typo in tableenvironment javadoc
updated statement timeout handling in MapperBuilderAssistant and removed it from MappedStatement to streamline timeout management and improve code clarity
removed the ` hangingTscTimeout ` parameter from multiple methods in ` JSweetTranspiler ` , ` TypeScript2JavaScriptTrans
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocationResponse
updated precondition checks in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to use ` BuildArtifact ` instead of ` ImmutableSourceArtifactImpl `
tika - 3996 -- fix for tika - 3997 -- do n ' t throw a tikaexception when a t
make sure script update do not trigger concurrent modification
fix race condition in tcpnioconnection when no data be available .
added validation to check if two instances of ` actual ` and ` expected ` have the same value in ` GuavaOptionalSubject ` to ensure
updated visibility and alpha calculations in BackgroundAppState and ShelfScrimView classes to improve UI responsiveness and visual feedback based on
added null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerException when nav is null
mow - 1343 : fixed positioning of bounding box when mow - pin - image be enable .
updated error handling logic in ErrorOccuredInOnExceptionRoute . java to improve clarity and maintainability of exception management
replaced ` scheduleAtFixedRate ` with ` scheduleWithFixedDelay ` and changed ` logger . info ` to ` logger . debug ` to
simplified the assignment of ` irrUnit ` and ` pemUnit ` in ` SinglePassAndImageBasedLightingLogic . java
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hangs
updated import statements in GuiceFactoryTest . java to include specific Guice dependencies to enhance dependency management and improve code clarity
added support for system feature management in RobolectricPackageManager to enable testing of system feature functionality within the Robolectric framework
refactor RCAFrameworkLoader to improve path property handling and add a new test class RCAFrameworkLoaderTest to enhance code clarity and
[ hotfix ] [ runtime ] remove unnecessary log in task
added a null check and initialization for enumerationValues in RADProperty . java to ensure enumerationValues is initialized to null when enumerationValues is null
replaced the ` needInline ` variable with ` needStartText ` and ` needEndText ` variables in ` BoxBuilder . java `
replaced ` collectAndSendTelemetryData ( config ) ` with ` collectAndSendTelemetryDataAsynch ( config ) ` and
removed conditional logic for altering the column type of the UPGRADE _ ITEM _ ITEM _ TEXT in UpgradeCatalog260 . java to
updated error messages in BaseTableDataManager to provide clearer guidance on permissions for index and temp resources directories to improve user experience by providing
refactor DatasetUtilities class for improved readability to enhance maintainability and ease of future updates
append the selector ID to the key in Matcher . java to improve clarity of the key representation for better debugging
corrected string concatenation syntax in GouraudShadingContext . java to improve code readability and maintain consistency
updated taskbar visibility and alpha handling in multiple classes to improve UI responsiveness and visual feedback during taskbar interactions
reformatted code in KeyExchange . java for consistency to improve code readability and maintainability
added a type check for JdbcConnection before querying the version in CockroachDatabase . java to ensure proper handling of JDBC connections and prevent
updated file index handling in ServerMainTest . java to use a variable for clarity to improve code readability and maintainability by avoiding
added ` getMediaRecorderingMimeType ( ) ` method to ` CodenameOneImplementation ` , ` MediaManager ` , and ` Display `
move the useshaders method from confighandler to shadershelper and make it public .
updated the bindable filter condition in DruidAdapterIT . java from " C = 6588 " to " C = 13500 "
removed unnecessary whitespace in ZkStateReader instantiation to improve code readability and maintain consistency
pdfbox - 4892 : disable external entity and doctype declaration parser , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced a conditional check with a while loop in UrlHelper . java to improve code readability and maintainability
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic to improve clarity and
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by reducing
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during debugging
updated the ` HubUpdater ` and ` InternalDropAllCommandStep ` classes to include ` HubRegisterResponse ` and modified the ` register `
replaced usage of ` Byte . toUnsignedInt ` with ` Byte . toUnsignedInt ` across multiple classes to improve code clarity and
removed unnecessary parentheses in the method call to improve code readability and maintain consistency
updated the default caching behavior in AbstractCachingBuildEngineBuckConfig to use CACHE instead of ENABLED to improve caching efficiency by using a more efficient
changed the ` rangePannable ` property from ` true ` to ` false ` in ` CategoryPlot . java ` to disable the range
update work mode switch handling in AllAppsContainerView . java to improve clarity and functionality of active page management
changed visibility of ` glCaps ` , ` renderer ` , and ` animator ` variables from package - private to private in ` Visualizer
added handling for CancellationException in FunctionTest . java to improve error handling and prevent application crashes
changed constructors of JarFileResource and JarResource from package - private to protected to allow subclasses to access these constructors for better extensibility
fix typo in javadoc of defaulttrackselector
added a loop that sleeps for unseqMerging in LevelCompactionTsFileManagement . java to improve responsiveness during unseq
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the test verifies the correct currency
updated SQL queries to use " post " instead of " Post " and refactored assertions in HibernateDTOProjectionTest to improve clarity
refactor Unicode character handling methods to improve code readability and maintainability
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and introduced a new ` updateHiveLLAPSettingsIfRequired
updated the onComplete ( ) method call in SendHeadersFirstPublisher . java to ensure proper execution of the onComplete ( ) method
[ beam - 11341 ] make awsmodule a builder for ssecustomerkey ( # 11342 )
added handling for BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve error messaging for unsupported value types
refactor inner references to javacProcessingEnvironment in TreeBackedProcessorWrapper . java to improve code clarity by using a more descriptive
removed annotation printing from ParameterInfo . java to streamline output by eliminating unnecessary annotations
skip ac3 seek if ac3 be not enable .
[ hotfix ] fix npe in localnode . getresponse ( )
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to suppress warnings related to Commons
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` and modified the ` DataNodeTemplateSchema
updated RTimerTree . java file to improve timer functionality and performance
updated package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
add test case for issue # 358 ( bug in jme3 - gui )
updated thread and scheduler initialization in ClientConnector to include unique names to improve clarity and debugging of thread pool and scheduler instances
refactor JScrollPane and JSplitPane in ViewResultsFullVisualizer . java for improved layout management to enhance user interface responsiveness
added phone numbers list and phone number descriptions to ScimUserEndpointDocs . java to enhance clarity and usability of phone number management in
added private constructor and a private method to the DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes to enhance encapsulation and prevent
added null checks for responseMap and status code in JsonHttpPropertyRequest . java and URLStreamProvider . java to ensure proper handling of null
refactor SolrRequestHandler class to improve request handling logic to enhance performance and maintainability of request processing
added a condition to check if ` DEFAULT _ PARALLEL ` is not equal to ` parallel ` in ` XmlSuite . java `
fix checkstyle issue in util / vmware / testvmwarecontext / testvmwareMO . java and testvmwareutil . java
added a condition to check for SCARD _ E _ NO _ SMARTCARD in the error handling logic to ensure proper handling of smart card
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary console output during tests
camel - 16400 : camel - bindy - add support for list in key - value pair bindy data format .
change default value of ` ` useowner ' ' and ` ` usetimestamp ' ' to ` ` false ' ' .
changed the parameter type of ` runAndCheckException ` from ` Runnable ` to ` ThrowingRunnable ` and modified the exception handling logic to improve
updated hash calculation to handle null values for via , viaContext , and pathFromSeed to improve robustness by avoiding potential NullPointerExceptions
camel - 14263 : camel - aws2 - sdb should use source code generate configurer to avoid reflection configuration .
updated version number from 4.1 . 1 to 4.2 and refactored object handling in LiquibaseXMLTransformer to improve
fix the bug # 1122 to better structure of the code
replaced the ` frame ` variable with ` smoothDelta ` and introduced a new ` lastDeltaUpdate ` variable in ` ThreadHandler . java
added null check for paginator in HttpBatchReader and HttpScanBatchCreator , and introduced a new test for JSON pagination in TestPagination to ensure
added null check for CompactionInfo client in Worker . java and implemented a test case in TestWorker . java to ensure proper exception handling when
added onSaveInstanceState method to Fragment and updated fragment state management in ShadowFragmentActivity to ensure fragment state is properly saved and verified during fragment state
reformatted code for improved readability in BatchResourceFactoryBean . java to enhance maintainability and clarity of the code structure
added a test method to validate parsing of simple Android color references in ColorResourceLoaderTest to ensure that the color parsing functionality works correctly for different
added error handling for NoResultException in AbstractJPAQuery and created a new test for null results in AbstractStandardTest to improve robustness
refactor community creation logic to use an owner instead of fromCache to improve clarity and maintainability of the management of communities
updated the call to ` getWallpaperDepthEffect ( ) ` to use ` LawnchairApp . getInstance ( ) ` instead of
removed duplicate import of ProcessTools in LocalManagementTest . java to streamline code by eliminating redundancy
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` and related classes to
added null checks and improved string representation in ExtensionStack to enhance robustness by preventing NullPointerExceptions
2 . x : fix flatmap do n ' t cancel main error ( # 5649 )
updated connection management in MultiGetRequest , ControllerStarter , and ServerTableSizeReader classes to improve connection timeout handling and enhance error logging for
reformatted code in AndroidPrebuiltAarDescription . java for consistency to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to align with the new model testing framework
added new fetchers for SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and modified the inlineImage method
added a test to verify that the output hash is not calculated when the cache is not writable to ensure that the cache behaves correctly when the
camel - 16400 : camel - netty - add usebytebuf option to configure whether to use bytebuf or not .
updated the partition alteration method to use the table ' s qualified name instead of the old name to ensure accurate partition management by using the correct
improve the error message when the Vertx instance must be create with the preferNativeTransport option set to true to create domain sockets to
rename enumtypehandlerserializertest to colortypehandlertest and add unit test
refactor StreamEx class to improve code readability to enhance maintainability and ease of future updates
removed hint settings for Java query timeouts in SessionImpl . java to streamline query execution by eliminating unnecessary hints
added a new file ` StaticLoggerBinder . java ` implementing the ` LoggerFactoryBinder ` interface to provide a singleton instance of ` StaticLogger
phoenix - 5249 avoid unnecessary cloning of family map during put / delete operations
added orientation checks in TaskbarManager to ensure proper handling of window orientation changes
unescaping xml in chatroomjabberimpl . getroomroomname ( ) . fix # 163 .
updated the order of parameters in the longStackPut method and added a new test class Issue265Test to improve code readability and ensure proper
8274883 : suppress warning in jdk . jdi . component
[ drools - 7 ] remove broken test from executionflowcontroltest
formatted code for consistency and improved readability to enhance maintainability and enhance code clarity
updated NBWriteServlet and TestWriteListener to accept an unlimited flag to enhance flexibility in handling write limits in non - blocking operations
fix the case when try to import invalid block unreversably affect the totaldifficulty
simplified the logic for determining if the player is currently seekable in DefaultPlaybackController . java to improve code readability and maintainability
refactor NativeLibrarySupport and SecurityServicesFeature to use CopyOnWriteArrayList instead of Collections . synchronizedList to improve thread safety and performance in
added uniform allocation handling and adjusted position calculations in AllAppsView . java to improve layout responsiveness and ensure proper positioning of elements
added a check for the presence of a colon in the key before accessing its properties to ensure proper handling of key format in HttpURLConnection
added PrincipalResolver as a qualifier to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration class to enhance the configuration options for principal resolution in
replaced ObjectMapper with Noggit for JSON parsing in DelegationTokenResponse . java to improve compatibility with Noggit ' s JSON parsing framework
added a method ` removeTrailingSlashes ` to the ` IoUtil ` class to remove trailing slashes from a string builder to improve string handling
added a new constant ` EMPTY ` and a ` matchesAny ` method to the ` PatternsMatcher ` class and corresponding tests to provide a
hbase - 11341 improve the error message for loadincrementalhfiles when hfofdir be null
fix fire fire potion not be able to fade . close # 263
updated method call syntax in CellLayout . java to improve code readability and maintain consistency
updated calculation of decreasePercent in ContractStateCapsule . java and modified conditional checks in ReceiptCapsule . java to improve accuracy of decreasePercent
updated AsyncContentProducer and BlockingContentProducer to handle unready input states and added a new test case in AsyncIOServletTest to ensure correct
added a null check for the weightField in DocumentDictionaryFactory . java to ensure that a valid weightField is provided to prevent runtime errors
added plist variable expansion functionality and a test for Info . plist variable substitution in AppleBundle . java and AppleTestIntegrationTest . java
fix laser and laser turret not be able to be turn .
changed the type of the ` adaptOrder ` method from ` OrderCreateApiRequest . OrderCreateApiRequestBuilder ` to ` OrderCreateApiRequest . Order
added a new file ` PreParseGrammarTest . java ` with XML grammar parsing functionality to facilitate testing of XML schema grammars
added ` @ SuppressWarnings ( " doclint : missing " ) ` annotation to multiple Java files to address documentation issues related to ` @ SuppressWarnings `
added FontManager import and font override functionality in ExtendedEditText . java to enhance text rendering capabilities for better user experience
added null check for currentUser in AuthorizeTag and created a test for unauthorized access in AuthorizeTagTests to ensure proper handling of requests without a
( chore ) camel - cxf : avoid encode the uri if it ' s not the same
mondrian : jdbcgeometrytestsetup should not override setupdata ( )
removed unused import of DumpHandler from MultipartFilterTest . java to clean up the code and improve maintainability
[ hotfix ] do n ' t attempt restore for already cancel task
add server . rmi . create property to control the creation of rmi registry
replace string . join with stringutils . join for anticompactranges
updated display metrics handling and qualifier tests in multiple Java files to improve accuracy of display metrics and ensure compatibility with SDK version 26
[ java ] add cluster member id to the service heartbeat counter .
added conditional logic to handle total thread allocated bytes in TestThreadMXBean . java to ensure compatibility with newer versions of ThreadMXBean
updated the evaluation logic in CustomExpression . java to handle NaN values and improved hash code generation to ensure accurate evaluation of double values and avoid
( chore ) camel - ajax : do not log error when continuation be not initial
added authentication and authorization routes in AuthenticityController and implemented corresponding methods in AuthenticityFilter to enhance user experience by allowing users to authenticate
loweringphase : add assertion to make sure node be alive
updated the logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for the HttpClientRequestImpl class
move defaulttrackselector . compare false - first to defaulttrackselector . compare
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the serialization process
ggb - 2242 : fix issue with cropbox not work on android .
[ hotfix ] fix checkstyle violation in unitofworkfactory
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated references in ` WidgetPreviewLoader ` and ` Widget
tika - 3996 -- fix for tika - 3997 - add content - type name to mail content disposition header
updated the URI construction in ThumbnailsCacheManager . java to use the file ' s local ID instead of the remote path to improve clarity
added checks for mark support and reset functionality in the input stream to ensure proper handling of input states and prevent potential errors
added @ Deprecated annotation to multiple classes to indicate that these classes are outdated and should no longer be used in future development
added a new configuration property ` SERVER _ SHOW _ ERROR _ STACKS ` to control the visibility of error stacks in the error page to enhance
cloudstack - 7012 : delete template from account when domain cleanup fails
fix the bug # 954 to enchance the structure of the code
[ drools - 7 ] make decisiontableconfigurationadapter compatible with legacy drools 5 . x api
refactored the ` onRequestPurchaseResponse ` method to use a ` callSerially ` for asynchronous execution to improve responsiveness and
[ hotfix ] [ test ] increase default timeout for unboundedsourcesystemtest from 100ms to 1000ms
updated import statements and modified style qualification logic in ShadowAssetManager . java to improve code clarity and ensure correct style qualification based on
deleted the files MrefStat . java and MrefStat1 . java to remove unused classes to streamline the codebase
updated DependencyInsight to conditionally return a scope of " compile " based on the presence of a blank scope to ensure that a valid scope
added constants for error messages and refactored error handling in BTCETradeServiceRaw . java to improve code readability and maintainability
( chore ) camel - core : use hamcrest assertion instead of junit in tests / integration / camel - core ( #
added a method to retrieve payment request URLs in BitcoinURI . java and updated tests in BitcoinURITest . java to improve payment request handling
planner - 383 : improve error message when planner return a parameterized collection
removed duplicate calls to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
do n ' t free jfr buffer if write fails .
replaced ` Stream . of ( values ) . anyMatch ( Objects : : isNull ) ` with a manual for - each loop and impro
refactor LintUtility to utilize InputResource for parsing linter configurations to improve resource management and enhance error handling during configuration loading
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post ( Runnable ) to improve responsiveness
fix issue with oninventorytick not be call on the correct index .
added a case for OCELOT _ BABY in PlayerEvents . java to handle specific gameplay scenarios
[ hotfix ] [ runtime ] add @ publicevolving annotation to statettlconfig
added null handling for parameter ' x ' in PreparedStatement and Array classes to ensure proper handling of null values and avoid runtime errors
[ java ] add ` ` describe - all ' ' option to archivetool description
replaced double quotes with single quotes in the append0 method to improve code readability and consistency
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class and modified the ` SiteSnapshotVariationsTest
add a method to remove transaction and block from the cache in BroadTest . java to improve cache management by ensuring transactions and blocks are properly
added conditional logic for enabling primitive mode in AmcrestHandler and DahuaHandler classes to enable and disable primitive mode functionality based on
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` classes to simplify method signatures
updated constructors in ChangeLogIterator to accept changeSetFilters as a parameter to enhance flexibility by allowing filtering of change sets based on specific criteria
do n ' t crash the launcher in case of guest exception .
updated method call from ` getenv ` to ` getEnvOrSystemProperty ` in ` Ec2Utils . java ` to improve flexibility by allowing
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization
refactor conditional checks in SpacesVisitor to use dropParentUntil for better readability to enhance code clarity and maintainability by simplifying
# 1193 - enh : add servercacheoptions . copy ( boolean nearcache ) ( # 1194 )
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to ensure that the border is not visible on
replaced ` ActionGraph ` with ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and ` ProjectCommand . java ` to
updated KucoinExchange . java to replace LIVE _ URI with PROD _ URI and added logging for exceptions to improve clarity and
reformatted string concatenation in SpringResourceAccessor . java for better readability and consistency to improve code clarity and maintainability
updated unit strings from " μ g / m µ g / m µ " to " µ g /
updated method call from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java `
deleted the Tls12SocketFactory . java file to remove unused socket factory implementation to streamline the codebase
fix ( tex ) : fix duplicate entry in texbibentriesresolver ( # 9441 )
added a method to check if the application is in Robolectric legacy mode to ensure compatibility with Robolectric environments that do not
added a check for FirebirdDatabase to return a specific database type " DOUBLE PRECISION " to ensure proper handling of double precision in Firebird
added null checks for ` dataSource ` and ` transactionManager ` in ` DefaultBatchConfigurer ` to ensure ` dataSource ` and ` transactionManager
add a new package - info . java file for the org . terasology . unittest . stubs package to provide package - level
updated command from ping - c 5 www . google . com to ping - c 5 127.0 . 0.1
no effective change - code cleanup - use try - with - resources
updated TermScorer instantiation to conditionally use FREQS or NONE based on scoreMode requirements to improve flexibility in scoring behavior based on
updated metric retrieval logic in DataflowMetrics . java and changed jobMetrics . setMetrics to null in DataflowMetricsTest . java to enhance
server : fix npe in listvirtualmachines api when vm be in deploy - in state
refactor DynamicPartitionPruner to use a new method for finding target object inspectors to improve code clarity and maintainability by encapsulating
added a method to remove build artifacts and corresponding tests in the ArtifactFilesystem and ActionExecutionStep classes to improve the management of build artifacts and ensure
added selection logic for the table row in ThrustCurveMotorSelectionPanel . java to ensure the table reflects the correct selected row
add a helper method to assert that an array store exception can be throw .
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future development
added environmentName parameter to HttpClientBuilder and modified user agent creation methods to allow dynamic configuration of the client ' s user agent
refactor session restoration logic to utilize SessionData for improved session management to enhance code readability and maintainability by encapsulating session
updated assertions in IssueTest . java and Reporter . java to include descriptive messages and changed the data provider ' s results collection type to Identity
update content type handling in ConsumeEWS . java to ensure a default value is used when the file ' s content type is null
fire activationrequestdenied event and send it to the character . end ( )
updated return statements and added @ Override annotations in GraphApplet . java to improve code clarity and maintain consistency in method implementation
added a method to update task views snapshot radius in RecentsView . java and modified visibility of the updateSnapshotRadius method in TaskView
added logging functionality and updated schema generation in StaticMicroserviceVersions . java to improve traceability and debugging of Swagger generation process
changed the return type of the put methods from void to int in ArrayMap . java to provide access to the index of the put operation
updated KafkaContainerCluster to include a startup timeout and changed the Kafka container version from 5.2 . 1 to 6.2 . 1 to
resolve : http : / / issues . apache . org / activemq / browse / amq - 2635 - add retry logic
update header comparison logic in StaticServerHttpHeadersWriter to ensure headers are only added if they do not already exist to improve header management efficiency and
added package access check for the listener type in EventListenerList . java to enhance security by ensuring proper package access for the listener type
added custom adapter for applications list and image list in ApplicationsFragment . java and created CustomAdapter . java to enhance user interface by providing custom
updated the applyIcon method to include null checks for iconView and task to enhance robustness by preventing potential NullPointerExceptions
refactor DownloadStateCursor to extend Closeable and use try - with - resources for resource management to ensure proper resource management and prevent potential memory leak
added currentClauseStack and modified insertStatement initialization in BaseSqmToSqlAstConverter . java to improve clarity and maintainability of the
added JUnit annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursorProjection
added asynchronous poller initialization and error handling in DataInputStreamWithTimeout . java to improve responsiveness and handle potential interruptions during poller operations
added ENABLED _ TS constant and import for ToposortBasedDepsAwareExecutor in VersionTargetGraphMode and VersionedTargetGraphCache classes to enable
updated UpgradeCatalog150 . java file to enhance catalog upgrade functionality
rename networkparameters . testnet ( ) to networkparameters . oldtestnet ( )
do n ' t update property view when there be only one geos
updated onboarding preferences handling in AppsDividerView . java and added @ Nullable annotation in ActivityContext . java to improve null safety and
updated HdfsIndexOutput to extend BufferedIndexOutput and modified flushBuffer method to improve buffer management and enhance error handling during index output closure
pdfbox - 4892 : avoid npe , a suggest by valerybokov
simplified the localAddress assignment logic in SocketChannelImpl . java to improve code readability and reduce unnecessary synchronization
refactor ` TemplateTransformer ` to introduce a new ` addToRow ` method for handling multi - value values to improve code readability and
added a method ` isWindows ( ) ` to ` Utils ` and refactored file renaming logic in ` Wallet . java ` to improve
code39 : add check _ digit to check _ digit _ string , a suggest by valerybokov
do n ' t cast the return type if it ' s not generic or void .
removed redundant check for fieldType . stored ( ) in IndexingChain . java to streamline code logic for better readability and maintainability
fix ( sql ) : fix truncation of timestamp with nan
updated stack trace handling in LwjglCanvas . java to improve clarity and consistency in stack trace management
updated the description of the default storage URL processor in AbstractGCSProcessor . java to clarify that the processor overrides the HTTP Host header
updated method names from ` assertInitialized ` to ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve clarity by indicating
updated directory references from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to provide a default value of " single
refactor FaultTolerantChunkProcessor to simplify data creation and filter counting to enhance code clarity and maintainability by eliminating unnecessary
added a new method ` tabbedMethod ` to ` FileWithTabs ` and refactored imports in ` T4994049 `
replaced multiple instances of ` if ( ! ( TerminalFactory . get ( ) instanceof WindowsTerminal ) ) ` with ` assumeTrue ( Terminal
modify getfeedbacksessionsaction to not check if the user be not the admin
adjusted calculation of newSelection and modified return condition logic in AllAppsView . java to improve accuracy of selection handling and enhance responsiveness
bugfix # 203323 , do not notify client on result availability when there be no profile thread
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog . java and modified connectionList initialization in ExportPanel . java
replaced instance variable ` writeBufferSize ` with a static final variable ` WRITE _ BUFFER _ SIZE ` in ` Writer . java ` and updated
refactor segment size calculation in DocumentsWriter . java and add a test for no documents index in TestIndexWriter . java to improve segment
* add check for null dvert in armaturemodifier . validate ( )
refactor FileDisplayActivity to improve code structure to enhance maintainability and readability of the code
refactor exception handling in ApplySpecialization . java to avoid filling in stack traces to improve error handling by avoiding unnecessary stack trace filling
update the method to return the average line height instead of the label height to improve the accuracy of label height representation
replaced the singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing
refactor value string handling in AVA . java for clarity to improve readability and maintainability of the code
replaced Long . valueOf ( s , 16 ) with IdConversion . convertToLong ( s ) and modified trace state handling in ServletHandlerInterceptor
updated methods in ServerDatagramConnectorTest to include small and big tests to enhance test coverage for server functionality
updated SQL query assertion in TestSqlEntityProcessorDelta . java to ensure correct extraction of country code from the result
updated caching logic in Cache . java to improve performance and efficiency of cache operations
updated variable names from ' e ' to ' ev ' and modified scope settings in ResourceSetRegistrationEndpoint . java to improve clarity and correct
updated the ` doBefore ` method and modified the ` IndexSearcher ` instantiation in ` TestUnifiedHighlighterTermVec . java `
added GUI components and a button to display the number of rows in the GcodeTable to enhance user interface functionality by providing a visual representation of
updated the connection timeout configuration in the Indexer class to use a dynamic configuration instead of a hardcoded value to improve flexibility and maintainability
updated various Java classes to improve type safety and formatting to enhance code readability and maintainability
refactor TestMediaService class to improve code readability to enhance maintainability and facilitate future development
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in Messages . java to provide a way to
add a new file MarketsPrintTool . java to display market printing options for BSQ and BTC to facilitate easier
[ s3 ] allow s3control to modify http request with illegal character in account id ( # 3649 )
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration capabilities in the application
rename ServerSpanThreadBinder class files to improve clarity and maintain consistency in naming conventions
updated variable names from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and ` BlockItem
replaced " Location " with " the _ geom " and " number " in Csv2Shape . java to improve clarity and consistency in
replaced ` callGasWord ` with ` gasCost ` in ` VM . java ` and removed unused imports in ` Program . java `
refactor parameters handling in Parameters . java to improve code readability and maintainability
added setIgnoreNullValues ( true ) to piePlot in MultiplePiePlot . java to ensure proper handling of null values in p
refactor bundle loading logic in ResourceBundle . java for improved clarity and efficiency to streamline bundle management and enhance performance during loading
pdfbox - 4892 : fix typo , a suggest by valerybokov
move allowedduringediting annotation to executescriptaction , a freeplaneaction and accelerateableaction
added a userModified flag to the LoginSamlAuthenticationProvider class to track whether the user has been modified
added a new file ` TestSealedObjectNull . java ` to test the behavior of ` SealedObject ` with a null cipher to
changed method names from ` onOpen ` to ` setResponse ` and ` succeeded ` in ` ConnectPromise ` and ` WebSocketClientConnection ` to
added support for SNOW and POWDER _ SNOW types in BlockEventListener . java to ensure compatibility with server versions 1.17 and
added a ` id ` field to the ` CryptsyPublicTrade ` and updated related classes to include it to enhance trade tracking by tracking
added a try - catch block to close the HMS connection in HiveStreamingConnection . java to ensure proper resource management and handle potential exceptions during
fix checkstyle issue in util / glowserver . java ( # 761 )
updated device profiles in DynamicGrid . java to include a new " Nexus 5 " device to enhance navigation functionality for better user experience
2 . x : fix flowable . refcount ( ) and observable . takeuntil ( ) do n ' t reset connection object ( #
fix the bug # 4587 to better logic of the code
added a new WHITESPACE _ AROUND _ TEXTUAL _ OP token to FormatToken and updated formatting logic in FormatVisitor and TokenFormatter to
added checks for file existence and file length in SaveTask . java and implemented new test cases in SaveAndLoadTaskTest . java to ensure
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety when accessing shared resources
added support for MutableLogEvent in the add method of SmtpManager to enable serialization and deserialization of MutableLogEvent instances
updated PADDING constant from LengthLike to NonNegativeLengthLike to allow padding values to be non - negative
replaced calls to ` createContext ( headers ) ` with a direct call to ` createContext ( ) ` across multiple resource classes to simplify
[ fix ] methodirbuilder . buildexceptionentries now correctly handle jimple catch exception .
updated error messages in JUnitRunner and AndroidPlatformTarget to provide clearer guidance on installing Android SDK Manager to improve user experience by
increased the cache size from 16 to 8 to optimize memory usage for better performance
added a condition to check if start is zero in InvocationStageTrace . java and modified the JSON structure in TestInvocationPublishModelFactory . java
do n ' t throw npe if bcfks be not available . patch by jbellis
updated the port handling in UpstreamCheckUtilsTest to use a dynamic port instead of a hardcoded port to improve flexibility and ensure the
ggb - 212 fix : move splitpane to correct place
* add support for gl _ arb _ compute _ shader , gl _ arb _ geometry _ shader _ 4 , gl _ tess
refactor PopulatorContext to improve code structure to enhance maintainability and readability of the code
do n ' t send save all notification for project that do n ' t have a reload ( # 5373 )
added charset handling and updated JSON serialization logic in ZQLJobManager . java to ensure proper character encoding is used based on system properties
added a check for non - empty arguments before checking if it is an instance of Table to ensure that the method does not throw an ArrayIndexOutOfBoundsException
updated header prefixes in FakeOSSOHeaderDecoder to use a constant instead of hardcoded strings to improve code maintainability and readability by
added @ Deprecated annotation to multiple options in GenerateJavaSources . java , Config . java , and JavaGeneratorMojo . java to indicate that
removed debug logging statements from DerbyDatabase . java to streamline error handling and improve code clarity
( chore ) camel - cep : fix intermittent test failure
replace parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance and readability of the code
updated the logic for updating the ` liquibase . hub . mode ` and ` liquibase . hub . apiKey ` properties
added constants for IBM J9 VM and Eclipse OpenJ9 VM in Constants . java and implemented a test for version information in Test
updated FontFamily . java to handle CompositeFont messages and added a new DebugFonts . java file to improve logging clarity and facil
updated ALPNNegotiationTest . java and NegotiatingServerConnectionFactory . java to handle HTTP _ 1 _ 1 negotiation to improve
added RateControl import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to ensure proper handling of HTTP
added a new file ` Test6741426 . java ` implementing a Runnable class with a JComboBox and JTextField to facilit
updated the error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest . java to include the exception message to improve clarity of
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure data integrity by preventing potential NullPointerExceptions
added package declaration for S3CopyObjectRequest to improve organization and clarity of the code structure
refactor ` setupCategory ` methods to remove the ` accentColor ` parameter and utilize ` viewThemeUtils ` for setting category titles to
updated the error message in TemporaryFolderUsageTest to include the file path to improve clarity of the error message for better debugging
replaced ` ClassTypeInformation . from ( Map . class ) ` with ` ClassTypeInformation . MAP ` and ` ClassTypeInformation .
add address validation to clientnetworkconfig . addaddress ( )
added " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate verification capabilities
refactor compute method to return the output count instead of void to improve method usability and provide a more informative return value
added a condition to check if the popup is showing before setting the mode and reset the model ' s armed state to improve user experience by
pdfbox - 4071 : fix arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added new files ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` to implement a test for finalizer and heap
replaced ` . map ` with ` . doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator `
refactor address retrieval logic in BurningManService to use Optional for better null safety to enhance robustness by avoiding null pointer exceptions
refactor StringSubject class for improved readability to enhance maintainability and ease of future updates
increased the size of longData from 1MB to 1000MB and added an @ Ignore annotation to optimize memory usage and mark the test
changed the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java `
updated query formatting to replace " from : " with " from : " in RetweetActivity . java and Search . java to improve query accuracy
removed conditional check for ' forRebalance ' in SimulatorDiscoverer . java to simplify the logic for rebalance handling
added an import endpoint in YubiKeyAccountRegistryEndpoint . java and a corresponding test in YubiKeyAccountRegistryEndpointTests . java to
updated shader program names from " texture " to " tex " across multiple files to improve clarity and consistency in naming conventions
added null check for ` cnt ` in ` paintOnTopLoop ` and introduced safe area handling in ` SideMenuBar ` and ` Tool
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future feature additions
added null check for subName before assigning caption in HierarchyBase . java to ensure that caption is set only when subName is not null
changed the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to enable
updated conditional checks and variable names in CustomExpression . java for clarity and consistency to enhance code readability and maintainability
replaced the method ` requestBlindVoteListFromNetwork ` with ` sendRepublishRequest ` in ` VoteResultService . java `
add a new test case ` ` case4 ' ' to ` ` postgrestest . java ' ' that demonstrate the use
replaced double quotes with single quotes in substring and lastIndexOf methods to improve code readability and maintain consistency in character handling
refactor line separator handling in DefaultJavaPrettyPrinter and CommentTest to use a constant LINE _ SEPARATORS _ RE to improve code readability
truffle : replace atomicreference with atomicreferencefieldupdater in singleimplementor
added a null check before adding queries in SimpleFacets . java and introduced a new test case in SimpleFacetsTest . java to ensure
fix : add bridge to thinghelper . merge ( ) ( # 3649 )
replaced calls to ` printHelp ( ) ` with ` error ( ) ` in ` Ktab . java ` to provide clearer error
added a check to return the output file if it exists to ensure the output file is only created if it does not already exist
added date parsing logic for tee , plus , and minus indices in DateConverter . java to ensure accurate parsing of date strings in XML format
added queries to retrieve posts by a specific slug and updated assertions in SpringDataJPALockTest . java and PostRepository . java to enhance
changed the ` canAccessDbaRecycleBin ` variable from ` boolean ` to ` Boolean ` and added a check for ` canAccess
added SimpleClientHttpRequestFactory to ClientRegistrations . java to set connection and read timeouts for HTTP requests to improve request handling reliability and reduce
updated SourceTest . java to include assertions for file existence and canonicalization to improve test reliability and ensure correctness of file path handling
remove system . setproperty ( ` ` graalvm . version ' ' ) call from home finder
set access token and refresh token validity seconds to null if they are zero in the ClientAdminBootstrap class to ensure proper handling of token validity settings
bugfix : pick the android api version from the soot option in case the default classpath be not set
refactor references from ` this ` to ` placeholder ` in ` PropertyPlaceholderHelper . java ` to improve code readability and maintainability by
updated string formatting in Resources . java for better readability to enhance code clarity and maintain consistency in formatting
solr - 12028 : fix flakiness of zksolrclienttest
added import for BigInteger in MongoMappingContext . java to enable handling of BigInteger types in the mapping context
updated the condition in HomeFragment to include a check for a specific button text to ensure that the toast is displayed only when a specific button text
added a conditional check for MEncoder synchronization settings in MEncoderVideo . java to enhance control over MEncoder behavior based on configuration settings
increased the default event loop thread count from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to increase the maximum
refactor CountMin4 , IncrementalResetCountMin4 , PeriodicResetCountMin4 , and PeriodicResetCountMin4 classes
updated the ` ExternalFileField ` class to implement sorting functionality and added a new test class ` ExternalFileFieldSortTest ` to enhance sorting
updated error message in DoiFetcher from " Invalid URL " to " Connection error . " to improve clarity of error reporting for better debugging
added source attribute to event string and updated event ID handling in OpenRocketSaver , FlightDataBranchHandler , and RocketComponent
changed the visibility of the ` check ` method from private to protected to allow subclasses to access the method while maintaining encapsulation
added handling for SynchronizeFileOperation finish in FileActivity to improve user experience by providing a clear error message when synchronization conflicts occur
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for file handling to ensure proper URL encoding for resized images and improve
added a null check for the client property " cn1 $ infinite " in InfiniteContainer . java to prevent potential NullPointerException when the container is
updated the ` total ` variable and modified the ` total + ` calculation in ` IntHashSet . java ` to improve clarity and correctness
added a lock check before updating an entry in FeedRefreshUpdater to handle potential lock timeouts to improve error logging and prevent unnecessary updates when the lock
refactor conditional statements in SolarisAclFileAttributeView . java for improved readability and structure to enhance code clarity and
refactor LatLonTree to use an array of edges instead of a single list to improve efficiency and readability of the code
added a try - finally block to ensure proper resource management in ZkCLI . java to improve resource handling and prevent potential resource leaks
fix parsing of bibtex comment that start with \ n or \ x0d or \ x0a
added strict parameter handling in Main . java and corresponding tests in MainTest . java to ensure proper handling of unknown parameters in strict mode
support @ constraint ( validatedby = ' ' invalid ' ' ) for pojo constraint
camel - 16400 : camel - http4 - improve the verifier to use http4 instead of http
added a call to waitForThingsToLevelOut ( 30000 ) in TestCloudPivotFacet . java to ensure thread safety during pivot facet
refactor conditional statements in UBJsonWriter . java for clarity to improve code readability and maintainability
refactor ApplicationTest class to improve code readability to enhance maintainability and facilitate future development
replaced String details with StringBuffer details in ConnectionFactoryImpl . java to improve performance and memory usage of string concatenation
refactor ( methodgenerator , type ) : rename ` type ` to ` robotype ` ( # 3649 )
[ java ] return archive action . abort when dispatch be complete .
added cache key and cacheLookup attributes handling in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor . java to improve
added a new file PutfieldError . java that demonstrates the usage of IncompatibleClassChangeError to demonstrate the
camel - 15836 - camel - aws : fix incorrect translation of aws private to public address
add log for memtable throughput and operation in million
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple files
added a new method ` encodedLength ( ) ` to the ` Flyweight ` class to provide a way to retrieve the encoded length for
rename TestMethodResultMapBuilder . java file to improve clarity and maintain consistency in naming conventions
[ fix ] findnullderef do n ' t crash on integer type .
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated return statements in mmm Utils . java and ppp Utils . java to provide clearer representation of time values to improve readability and
updated conditional checks for DeepShortcutView in Utilities . java and FloatingIconView . java to improve handling of DeepShortcutView instances and enhance
updated JwtIssuerValidator to change the type of the validator from String to Object and modified its initialization logic to enhance flexibility in validating JWT claims
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
added a new file ` CoverageConfig . java ` and refactored ` CoverageController . java ` to use it to improve code organization and
added a check to ensure EventBus is not registered before registering sticky to prevent potential NullPointerExceptions when the sticky is not registered
added ASCII - only checks to normalize logic in NormalizerBase . java to optimize normalization process by excluding unnecessary ASCII characters
[ hotfix ] fix typo in jobcoordinationservice # ismigrationallowed ( )
added error handling for SQL update statistics execution in SpillableGroupByIT . java and NoOpStatsCollectorIT . java to ensure proper SQL
( chore ) camel - cometd : replace contexttestsupport with cameltestsupport in camel - cometd
added OK attribute to HtmlTag . java and updated corresponding tests in ListTagsTest . java , OtherTagsTest . java , and TableTagsTest .
added a line break to the write method in HtmlCoreReport . java to ensure proper formatting of HTML output
updated ramBytesUsed calculation to account for null scores to ensure accurate ram usage estimation when scores are not null
added StringHolder and StringHolderTypeAdapter classes for serialization and deserialization in CustomTypeAdaptersTest . java to enable serialization and deserialization of StringHolder
set extra data from mining params in mergecoordinator ( # 1193 )
added a static final map ` numArgs ` and updated the ` argsToProperties ` method to accept ` numArgs ` as a parameter to
refactor PathParamServerEndpointConfig for improved readability to enhance maintainability and clarity of the endpoint configuration
updated variable name from ' configedThreshold ' to ' configuredThreshold ' in DefaultMigrationAddressComparator . java and modified delay in MigrationRuleListener
updated the parameter name from ' part ' to ' partOrList ' in the attach method across multiple classes to improve clarity and consistency in
[ drools - 7 ] move twitter - bootstrap . css and twitter - bootstrap . js into twitter - benchmark
spanishtreebank : remove the basiccategory ( ) method from spanishtreebanklanguagepack
hhh - 11341 - implement load method in abstractentityloader and deprecate entityloader . loadbyuniquekey
hbase - 20536 fix potential npe in regionserverflushtableproceduremanager and regionserversnapshotmanager ( chaoyu
set size ( ) for java2d when width or height be zero
do n ' t call fillpool ( ) twice in hikaripool # close ( )
updated the ` assureMatchVersion ( ) ` method and initialized ` luceneMatchVersion ` to ` Version . LATEST ` in
fix proxy proxy generation for interface method ( # 7013 )
[ drools - 7 ] avoid to match a comma in a drl expression
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
improve error handle for invalid payload length
move PublishSubscribeChannel and PublishSubscribeChannelParser from ' channel ' to ' dispatcher ' and update package structure accordingly
updated method signatures to accept executionId as a long instead of a String to improve flexibility in handling scheduled query execution IDs
added multiple calls to ` digest . update ( ( byte ) width , ( byte ) height ) ` in ` ImageProcessor . java ` to
updated logging statements in SolrConfig . java and added new imports in SolrConfigHandler . java to improve logging clarity and enhance code readability
increased the delay duration for automatic synchronization in FileSyncAdapter to allow more time for synchronization to complete
updated the creation of the ` afterConversionTime ` variable in ` SegmentV1V2ToV3FormatConverterTest . java ` to
refactor ` addPathToMTree ` method to accept a ` Path ` object instead of ` String ` for better type safety to enhance code
updated URL handling in DefaultPackageScanClassResolver and added a new test case in DefaultPackageScanClassResolverTest to improve URL processing and ensure
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] introduce timestampextractorutils to extract timestamp
added a new file ` SpringSecurityAuthenticationSource . java ` to implement ` AuthenticationSource ` for LDAP authentication to provide a structured way to retrieve
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions
replaced ` Dialogs . autoSuggestDialog ` with ` SimpleFormDialog ` for displaying custom filename suggestion to improve user experience by caching
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest .
updated the parameter name from ` collection . getName ( ) ` to ` collectionName ` in the ` stream ` method to improve clarity and consistency
change zoom calculation and cast to float in MapOverviewImageMouseHandler . java to improve zoom handling accuracy and ensure proper type casting
updated KNearestNeighborClassifier to accept a Similarity parameter and modified related methods to enhance classification results based on similarity settings
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query performance by utilizing a more efficient constant
replaced ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity and consistency in
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated ` requestMtu ` methods in ` ShadowBluetoothGattTest ` and ` ShadowBluetoothGatt ` to handle M
refactor ServletInputStream creation into a separate method to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and provide clearer logging for unsatisfied
use concurrenthashmap in channelprocessingmanager to prevent concurrentmodificationexception
updated Japanese resource files by adding " all " , " grouped " , and " summary " to improve localization support for Japanese
updated size condition from ` size > 0 ` to ` size > 1 ` in JDBCTypeMapping . java and modified assertions in JDBCTypeMapping
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal processes
replaced the method ` isScreenReaderActive ( ) ` with a new instance of ` AccessibilityStateTester ` and refactored
updated commandBehavior and behavior checks in MenuBar . java and modified SideMenuBar . java to handle null icons to improve command behavior handling and
removed unnecessary import of Disposable and modified subscription logic in PoloniexManualExample . java ; added state handling in WampStreamingService
updated energy limit validation logic in ` UpdateSettingForEnergyLimitContractActuator ` and ` UpdateSettingForEnergyLimitContractActuator
updated variable names from ' url1 ' to ' javaUrl ' for clarity and consistency to improve code readability and maintainability
camel - 16400 : camel - soap - add getter / setter for namespaceprefixref in soapjaxbdataformat
refactor assertions in TestRange . java to use a new method ` isSameDay ` for date comparison to improve code readability and maintainability
added JettySolrRunner checks and security verification in BasicAuthIntegrationTest . java and updated security properties in ZkStateReader . java to
add pricefeed to tradeschartviewmodel to allow to use sticky market price
refactor configuration handling in ` PhoenixHBaseLoaderIT ` and ` PhoenixHBaseStorerIT ` to
updated the handling of the ' from ' and ' end ' variables in NativeString . java to improve clarity and correctness in the string
added a FileDataStorageManager to manage file download status in FileDownloader . java to enable tracking of file download status for better data management
[ java ] set the length of the randomaccessfile when create a mappedrawlog .
added a method ` checkIfRegistryRunning ` to check if the registry is running and modified ` deleteFileIfExistsWithRetry ` in ` FileUtils ` to
added call to ` componentPresetDao . startLoading ( ) ` in ` Quick3dMain . java ` and ` TextureTest . java
added @ SuppressWarnings annotations and removed unused variables in multiple Java files to improve code clarity and suppress unchecked warnings
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerException when instances are null
phoenix - 44a15 allow isolation level to be set to transaction _ read _ commit or transaction _ serialize when transaction be disable
added transaction handling in ` AbstractStepFactoryBean ` , ` ItemOrientedStep ` , and ` SkipLimitStepFactoryBean ` to
replaced ` CasClient ` with ` DirectCasClient ` and refactored the ` CasManagementSecurityInterceptor ` class to utilize
added functionality to handle the " add category " menu in ListFragment and NavigationDrawerFragment to enhance user experience by allowing category addition in the navigation
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated its references in ` File
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size handling and text size calculations in TerminalView and TerminalBridge classes to improve clarity and functionality of font size management and text size
fix a bug in constantanalysis that could cause an exception edge to be throw .
refactor multiple Java files for consistency and clarity to improve code maintainability and readability
return new ArrayList < > ( this . spans ) instead of the original span list to ensure that the returned list is not modified , preventing
removed unnecessary lock service usage in Liquibase classes to streamline code and improve performance by eliminating unnecessary locking
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to set it to null to ensure proper handling of microservice
updated foreign key and index naming conventions in AbstractRetriever and TableRetriever classes to improve clarity and consistency in foreign key and index representation
camel - 15836 - camel - aws2 - s3 : add uri - endpoint - override option to all the component - s3
removed the currencyPair parameter from the getBitstampUserTransactions method in BitstampAccountService . java and added a new method in BitstampAccountService
added a try - catch block to handle potential NoSuchComponentException when retrieving component instance to improve robustness by preventing application crashes due to
modify push method to return a boolean instead of void to enable push functionality based on remote settings
refactor LegacyAddressTest to use BufferedReader for parsing addresses to improve readability and efficiency of address comparison logic
changed the visibility of the method findDropTargetAt from package - private to public to allow access to the method from other packages
refactor Snackbar handling in NotificationsActivity to improve code organization and encapsulation to enhance readability and maintainability of push notification setup
added debug logging for channel closure in NettyAsyncHttpProvider . java to improve traceability and control over channel closure behavior
replaced null checks with StringUtils . isEmpty for better readability and consistency to improve code clarity and maintainability
rename DefaultAnnotationEngine and Stubber classes to improve clarity and consistency in naming conventions
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to issue PHOENIX - 2840
nifi - 11341 : added timezone support to nifi about endpoint
fall back to even range calculation in cluster with vnodes when token be distribute unevenly
no effective change - code cleanup - remove unnecessary try / catch
removed redundant synchronized block for adding active circles to streamline code by eliminating unnecessary synchronization overhead
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using a more specific exception type
flume - 1343 : add getter and setter for sink and source in sinkrunner .
changed log level from error to info for authentication failure in FastBindLdapAuthenticationHandler . java to provide clearer logging for authentication failures
refactor ContainerOrderFocusTraversalPolicy for improved focus traversal handling to enhance performance and maintainability of focus traversal logic
fix for freehand function to return int instead of double
formatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor database connection handling in SchemaCrawlerMain . java and add datasource validation in Executable . java to improve error handling and ensure proper resource management
http : / / issues . apache . org / activemq / browse / amq - 2635 - add support for tlsv
corrected a typo in the exception message from " values " , " labels " , and " metadata " to " metadata " to improve
modified audio queue position handling in MediaManager . java to ensure proper audio management when the current audio queue position is zero
updated debug log statements to include the cancelled state to improve logging clarity by providing more context about the upgrade process
added @ Transient annotation to JpaPersistentPropertyImpl and created a test for it to ensure proper handling of transient fields in JPA persistence
updated stack version assertions in UpgradeResourceProviderTest . java to reflect the correct versioning for HDP - 2.2 . 0 to ensure
trufflevm : change return type of eval ( ) from symbol to object .
fix sonar warning ; make isbinarytype ( ) public
updated the configuration key for TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE in HiveConf . java
remove ` ` priority ' ' parameter from javaproblems ( fixes # 364 )
remove default _ OFFHEAP from DictionaryIndexType and BloomFilterHandler classes to simplify the usage of dictionary index configuration
replaced hardcoded newline character with a dynamic line separator in TableWriterTest . java to ensure consistent line endings across different operating systems
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added a boolean variable ` ownsTexture ` to manage texture ownership in ` ParticleEffect ` to prevent unnecessary processing when the texture is not owned
added new LDAP authentication properties to HiveConf . java to enhance security configuration options for LDAP connections
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated soft input toggle logic in DetailActivity . java to include SHOW _ FORCED context to improve user experience by ensuring the soft input is shown
added a new test method to convert between primitive and object data types in DataTableTypeRegistryTableConverterTest to ensure proper conversion of primitive data types
updated the size calculation from 100 , 500 to 10 , 50 in TestFileSystem . java to increase memory allocation for improved performance
update error message to clarify that the code is closing the open resources prior to filing a bug report to improve user understanding of
made the ` dropSequences ` method abstract in ` AbstractDatabase ` and overridden it in subclasses in ` DerbyDatabase ` , ` Hsql
added a null check for the status variable in MainWindow . java to prevent potential NullPointerException when status is null
assign the result of binaryField . createField to a variable before use to improve code readability and maintainability
gather leaves and parents style for hierarchical icon event
added a test method to verify the behavior of ` findOneAfterUpsertForNonExistingObject ` in ` MongoTemplateTests ` to ensure that the
hbase - 11341 fix checkstyle issue in hbase - client ( addendum )
added a new method ` getStats ( ) ` and refactored broadcast intent handling in ` Launcher ` and ` Stats ` classes to improve
added graphics creation and disposal process in JavaSEPort . java to improve rendering efficiency and resource management
update instructorfeedbackresultsspagedata to show the current team instead of the previous team .
added handling for zero inventory IDs in Inventory . java and a corresponding test in InventoryTest . java to ensure proper generation and validation of inventory IDs
added a conditional check before breaking the break statement in ConfigDescriptionRegistry . java to ensure that the break statement is only executed when a valid configuration
updated method return type handling in multiple parser visitor classes to improve clarity and consistency in handling return types
added null check for blendedTiles before creating it in TileMapRenderer to avoid potential NullPointerException when blendedTiles is not set
reformatted the @ Classes annotation for clarity and consistency to improve code readability and maintainability
added null check for last and adjusted sum calculation logic in IfcTools2D . java to improve robustness by preventing potential NullPointerExceptions
simplified the initialization of the lockOnSync object and updated throttleRate assignment to improve code clarity and maintain consistency in handling throttle rate
pipe : fix pipeeventbus . addactions ( ) and pipeeventbus . onactionactivate ( ) , add test
increased timeout duration from 1000ms to TIMEOUT in ZkController instantiation to allow more time for ZooKeeper operations to complete
added a test for passcode handling with a client ID and secret in TokenMvcMockTests . java to ensure proper functionality of the passcode
added brokenOffsetsConstructors for LengthFilter and KeepWordFilter in TestRandomChains . java to ensure correct parameters are provided for token processing
added an import statement for the JUnit Ignore annotation in RandomPlaneTest . java to enable the test to run without the JUnit Ignore annotation
fix ( griffin ) : fix integer overflow in x86 _ 64bitvaread .
simplified the creation of ` btCollisionObject ` and ` btRigidBody ` methods to improve code readability and maintainability
added a copyright year property and updated the OPENROCKET _ URL in AboutDialog . java to reflect the current year of the build and
add getdistributedobjects ( ) method to jetclientinstanceimpl ( # 2249 )
added debug print statements in FinSet . java and modified variable assignments in MassCalculatorTest . java to improve traceability and maintain consistency in
replace ` TOTAL _ MEMORY ` with ` MAX _ MEMORY ` in ` SmartDexingStep . java ` to improve memory
changed exception handling from ` MetadataException ` to ` Exception ` in ` StandaloneSchemaFetcher . java ` and ` CreateAlignedTimeSeriesPlan
do n ' t send delayed payout tx if burningman be not activate
updated the input string construction and added exception handling for big _ integer _ t in JsonLoaderTest . java to improve JSON parsing accuracy and enhance
updated the table size validation from 1 < < 30 to 0x40000000 to ensure that the table size is within valid range and improve error
updated import statements in ColumnSnapshotGenerator . java and added null check for dataScale before setting decimal digits to enhance code clarity and prevent potential
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to streamline the code by eliminating unnecessary annotations
added security exception handling in FileHelper . java and modified content limit logic in TextHelper . java to improve robustness by preventing security exceptions
added a new constant ` StyleWithMultipleAttributes ` and a new test method ` resolveAttributes ` in ` ShadowThemeTest ` to support multiple
updated sheet name comparison logic in HSSFWorkbook . java and modified sheet creation in TestHSSFWorkbook . java to improve accuracy of
changed the primary color from primaryColor to elementColor in ManageAccountsActivity . java to ensure the correct color is used for UI elements
added a null check for replyHandler in DefaultEventBus . java and modified the path resolver in DefaultPlatformManager . java to improve robustness
added configuration for binary collation in MariaDbDbmsType , MySqlDbmsType , AbstractDbmsType , and FilterSortedSkipOptimizer
added a method ` whenType ` to the ` Tree ` class that returns an ` Optional < T extends Tree > ` to enhance type safety
refactor navigation logic by introducing a method to retrieve the user ' s view destination to improve code readability and maintainability by encapsulating
updated the response to return a temporary redirect instead of a generic JSON response to improve user experience by providing a direct access to the application settings
[ flink - 16400 ] [ kinesis ] add a check for non - serializable deserializer in flinkkinesisconsumer
( chore ) camel - base - engine : fix checkstyle issue
refactor zkClient initialization and shutdown logic in LeaderElectionTest . java to ensure proper resource management and prevent potential resource leaks
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify
refactor the ` read ` method in ` ProxyHandler ` to use a dedicated implementation to improve code readability and maintainability by centralizing
replaced usage of BufferUtil . allocate with direct usage of ByteBuffer . allocate in ABCase1 _ 2 . java to simplify code and improve
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success or failure to enhance functionality by allowing the method to decide whether to
replaced ` int ` comparison with ` Integer . compare ` for order comparison in ` AbstractConfigLoader ` and updated configuration parameters in ` Test
added a new file ` PicOfDayAppWidget . java ` to implement functionality for updating app widgets with Picasso images to enhance
server : fix the issue that the internal lb offering id can not be parse into the service offering uuid
updated import statements and modified join condition logic in HiveParserCalcitePlanner . java to improve clarity and functionality of join condition handling
[ hotfix ] [ runtime ] deprecate some transformation class in favor of their own implementation
added username and password options for remote JMX connections in NodeToolCmd . java to enhance security by allowing users to access the remote JMX server
removed redundant instantiation of BytesRef in Stemmer . java to streamline code by eliminating unnecessary variable declarations
updated method calls to include mPageViewIconCache and numPages parameter in AppsCustomizePagedView . java to ensure proper handling
ggbapplet . getviewforthumbnail ( ) now return the correct view for 3d thumbnail
updated rotation calculations in GcodeRenderer . java to ensure rotation values are non - negative to improve stability by preventing negative values
added a new WORKSPACE option to the OptionEnum enum and updated TerminalClient to set the workspace directory to enhance functionality by allowing users to specify
changed the file name from " options . apt " to " options . html " in CLIManagerTest . java to align test with the
updated ` ScimUtilsTest ` to use JUnit 5 annotations and added ` PollutionPreventionExtension ` to enhance test reliability and
updated the ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` ModelAndView ` to
updated assertions in HibernateIT to use assertTrueEventually for better event handling to ensure accurate cache hit count and improve test reliability
refactor EventBusHook class for improved event handling to enhance performance and maintainability of event processing
rename MultiPaintEventTest . java file to improve clarity and maintain consistency in naming conventions
changed the ` mNewScale ` variable declaration from ` final float ` to ` non - final float ` to allow for the ` mNew
refactor SyncFactory to improve synchronization logic to enhance performance and reliability of synchronization operations
added unique key handling for schema fields in LukeRequestHandler . java to ensure unique keys are correctly managed during request processing
added document filters and modified border color handling in BorderEditor , EditableResources , and Border classes to improve document filtering and enhance border color management
truffle : add miss @ truffleboundary to assert . isnotpartofcompilation
[ hotfix ] [ test ] replace slotpoolbuilder with declarativeslotpoolbridgebuilder in defaultschedulerbatchschedulingtest
added logging statements in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes and modified return values in PingPongApp
added toolbar menu item click functionality to RecentChatFragment to enhance user experience by providing context - sensitive actions during the construction process
changed the ` InfoDropTarget ` class to extend ` UninstallDropTarget ` and modified the ` startDetailsActivityForInfo ` and `
replaced calls to ` getTail ( ) ` with ` push ( ) ` and ` pop ( ) ` across multiple classes to standardize
updated API , image , and home URLs from " https : / / test . wikimedia . org / wiki / " to "
refactor index management logic into separate methods for clarity to improve code readability and maintainability
replaced usage of Collections . sort with direct method calls to improve code readability and maintainability
added DateTimePatterns to FormatData _ hr _ HR . java for date and time patterns to enhance date formatting capabilities in the application
added a call to clearFocus ( ) on clickedView in DetailFragment . java to ensure the clickedView is properly initialized before use
replaced ` notifyDataSetChanged ( ) ` with ` spinnerDescriptionLanguages . setSelection ( position , true ) ` and modified language selection logic
updated time zone entries from " WSST " to " WSDT " across multiple language files to reflect the correct time zone representation for better localization
added native methods for registration and access fields in FastGetField . java to enhance flexibility and control over field access in the FastGetField
added default value handling for UNION and NULL types in ReflectData . java and updated tests in TestReflect . java to ensure proper handling of null
fix test which randomly fail on slow ci server
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerException when the resource class is null
added constructors to HapiFhirDialect , HapiFhirH2Dialect , HapiFhirMariaDBDialect
http : / / issues . apache . org / activemq / browse / camel - 264 - add connection close header to http producer
increased the socket timeout from 60000 milliseconds to 120000 milliseconds to allow more time for socket operations to complete successfully
added an assertion to verify that the ticket status is FREE and final price cts is greater than zero to ensure that the database does not
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
refactor CasProcessingFilter class implementation to improve code readability and maintainability
refactor template parser to use document . getfirstelementchild ( ) instead of document . getfirstnode ( )
planner - 1343 : fix lookup of enum in look - up strategy
updated metaPortStart and dataPortStart values and added waitingToShutDown method to ClusterNode to improve port management and ensure proper shutdown
changed log level from warn to info for cache bean purge failure to provide more informative logging when the bean is not found
set mContentType to " application / octet - stream " in WebdavEntry . java to ensure proper content type handling for webdav entries
added a method to retrieve the queue size in LazyTraceThreadPoolTaskExecutor and created a corresponding test class to ensure that the queue size is correctly
fix distanceop to avoid infinite loop
updated variable and method names from ' required ' to ' requiredLabel ' in AbstractUITag . java to improve clarity and consistency in
add updateprogress ( ) to purgepartitioniterator so that it do n ' t override next ( )
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide a
added validation to ensure the polygon contains at least 3 points and modified localVertices assignment logic to ensure that the polygon does not contain at least 6
replaced instances of ObjectMapper with ObjectMappers . newDefaultInstance across multiple files to standardize object mapping and improve code maintainability
ggb - 1186 add a null check for the coeffSquarefree array before assignment to avoid potential NullPointerException
updated the handling of Unicode name length and multibyte flag in ExternalNameRecord . java and added a test case in TestExternalNameRecord
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix typo in jms
added conditional logic to exclude specific username and password prompts in LoginInfoEndpoint . java and updated tests in LoginInfoEndpointTests . java to
replaced ` remove ( listener ) ` with ` removeIf ( l - > l ) ` in ` AbstractController . java ` to improve
added a new case ` actionToggleSpin ` to the ` PieChartActivity ` class to enhance user interaction by allowing toggling
server : kill copy process if copy _ vhd _ to _ secondarystorage fail
hbase - 20536 do n ' t normalize table that have quota ( addendum )
updated import statements and added a resize method in AndroidInput . java to improve code clarity and ensure proper resizing of float arrays
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the existing ` @ VisibleForTesting ` annotation to enhance
ignore fail clientmapnearcachetest due to blocking prs
fix the hopperhock hopperhock not use the correct bounding box for item .
added authentication dialog functionality in SsoWebViewClient . java to enhance user experience by allowing authentication via SAML
updated assertions and added methods for document deletion and query deletion in TestStressIndexing2 . java to improve clarity and functionality of document deletion
[ flink - 22559 ] ignore upsertkafkatableitcase due to flink - 22559
replaced ` pg . types . get ( j ) ` with ` pg . types . computeIfAbsent ( j , k - > new ArrayList
added JSON deserialization configuration to DefaultEntityMapper to enable handling of single values as an array in JSON processing
updated localization messages to include " BE , UK , and SL . " to improve clarity and organization of localization updates
[ netbeans - 4952 ] make app category configurable via system property cl . app . categories
[ drools - 7 ] add test case for ` ` instance of ' ' and ` ` and ' ' expression
nifi - 11341 : added mime . type attribute to gethttp response to gethttp
add resourcehistorytable . toprovenance ( ) to avoid create a new resourcehistoryprovenanceentity
rename ` exitButton ` to ` doneButton ` and update related click listeners in ` HelpActivity ` and ` SearchBookContentsActivity ` to
[ java ] fix typo in javadoc of natsconfiguration .
updated the ` invalidateStalePartition ` method to accept a ` List < PartitionNameWithVersion > ` parameter and modified its implementation to include a
do n ' t use boundedfifobuffer and unboundedfifobuffer in viewresultsfullvisualizer
replaced instances of ` ic _ group ` with ` ic _ chat _ bubble ` in multiple files to align the icon with the new chat
[ java ] use getlongvolatile instead of getlong in broadcastreceiver to ensure thread safety .
updated method names in MocksCreationTest . java for consistency and clarity to enhance readability and maintainability of the test cases
added a new constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator
increased the timeout duration for awaiter calls from 10 seconds to 30 seconds to allow more time for phaser execution to complete before proceed
simplified the ` publishBuildSlaveFinishedEvent ` method and removed the ` BuildSlaveFinishedStatusEvent ` class to streamline the event
fix findbugs encode warning in vmwarestoragemanagerimpl . java vmwarestoragemanagerimpl . java cause by
added a test for depositing workspace items without a workflow in WorkflowItemRestRepositoryIT . java and modified the submitter group handling in
[ hotfix ] [ runtime ] distinct classloadersupport # getclassloadersupport # getclassloadersupport #
removed the isBoxedPrimitive method from Unbox . java to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool and add a new test case in TestSpecificCompilerTool to improve code clarity and ensure correct ordering
added null check and partition deletion logic in HiveMetaStore . java and updated tests in TestHiveMetaStore . java to ensure proper handling
updated asynchronous execution settings and exception handling in Hive classes to improve performance and clarity in asynchronous execution management
added a try - catch block around the dismissDialog call to handle potential exceptions when dismissing the dialog
updated UpgradeResourceProvider to use a constant for the execution task role and refactored service and component retrieval logic to improve code readability and
fix bug in operationsettelephonyconferencingSipimpl that cause a nullpointerexception
add a clearentries ( ) method to flutterlogtree ( # 5373 )
updated return statements in ChannelEndPoint . java to include additional conditions for output and input shutdown checks to ensure proper handling of shutdown states based on the
refactor SetNullableGenerator for improved nullability handling to enhance code clarity and maintainability
camel - 16400 : fixed the unit test error of camel - example - reportincident
replaced specific imports with a wildcard import and modified content type handling in NettyRoutingFilter . java , FormIntegrationTests . java , and
added @ ApiOperation annotations for " hello " and " helloWithValue " in multiple service classes and updated the ` hello ` method to include
refactor lifecycle listener management in Lwjgl3Application and Lwjgl3Window classes to improve code clarity and ensure proper
updated the FG _ FK color from 90.0 to 200.0 to improve the visual appearance of the foreground color
added a required property to the audioFormats class in SoundManager . java to ensure the audio format is not required for processing
fix secondaryindexmanagertest to use system . getbuiltindexes ( index )
pmd - plugin : add version and label to about page
[ hotfix ] [ test ] refactor customserializationitcase to use optional
refactor MediaFormatUtil to improve code structure to enhance maintainability and readability of the code
added a method ` isCellEditable ` that returns ` false ` in ` GeneralTab . java ` to provide a default implementation for cell editable
added a method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified ` UnusedDependenciesFinderFactory ` to
added a new static variable ` tmpCount ` and updated the ` vscales ` array from ` 2.0 ` to ` 0.85
updated import statements for BaseScalarUdfTest in multiple files to ensure consistency and correct usage of the BaseScalarUdfTest class
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper object comparison and hashing for instances of UaaAuthentication
* fixed testskeletoncontrolrefresh test failure due to old animation model
rename nodefilter to nodecountfilter to avoid confusion
updated the condition to check if the size of the fetch block is less than or equal to SYNC _ FETCH _ BATCH _ NUM to
updated state and type assignments in DebugExpressionParser . java and DebugExprType . java to improve clarity and correctness of debug expression handling
updated dependency resolution logic in ExcludeDependency . java to check if dependencies are in classpath of the specified scope to improve accuracy of dependency exclusion based on
updated method names from ` tmp ( ) ` to ` dst2 ( T v ) ` and ` lerp ( T target , float
set default value of ` args ` to an empty array in ` GridHubConfiguration . java ` to ensure proper initialization of the ` args `
updated linker argument handling in RustBinaryDescription . java and added a new linker flag test in RustLinkerIntegrationTest . java to
[ java ] fix adminemailpageuitest fail on travis and appveyor
added a new configuration variable for HIVEQUERYNAME in HiveConf . java and modified logging in GenericUDTFGetSplits . java to
removed an import statement for java . io . File in TileAtlas . java to streamline dependencies and improve code clarity
refactor output stream handling in EscapeProcessingOutputStream and GradleDaemonExecutor to improve resource management and error handling to enhance code clarity and
updated the ` validateQuery ` method to accept an additional ` Object . ... . arguments ` parameter to enhance error handling by providing additional context for
updated INDEX _ VERSION from 1 to 2 and refactored repository handling logic in LuceneExecutor . java to improve code clarity and ensure
[ hotfix ] [ test ] add test for kryoserializerregistrations
added null check before removing properties in BlueprintConfigurationProcessor and updated assertions in BlueprintConfigurationProcessorTest to enhance robustness by preventing potential NullPointerExceptions
refactor boolean handling in MetaStoreDirectSql . java to utilize BooleanUtils for improved readability to enhance code clarity and maintain
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user interface by hiding the customization drawer
refactor term vector handling and warning management in TermVectorComponent . java and TermVectorComponentDistributedTest . java to improve clarity and
added conditional logging for optimistic types and improved logging behavior based on environment settings to enhance logging clarity and control over optimistic type settings
refactor Expect class to improve code readability to enhance maintainability and facilitate future development
added UnixSocketConfigurationStrategy to DockerClientFactory and updated DockerMachineConfigurationStrategy to support Unix socket configuration in Docker connections
added ` @ Tag ( " flaky " ) ` annotation to ` testEvenLowRateIP ` method in ` CloseableDoSFilterTest
( chore ) camel - reactive : provide more informative exception when stream have no active subscription
refactor methods in Vectorizer and TezCompiler to use MapWork instead of MapRedTask to improve code clarity and maintainability by
updated constructor calls in StringAppender and LogDivertAppender to include a new boolean parameter to enable additional functionality for better logging capabilities
fix npe when gui package be null .
sulong : add a linkage . isweak ( ) method to check if the linkage be a weak function .
updated multiple Java files related to class loading and accessibility to improve performance and maintainability of the code
no effective change - add test for defaulttransactionthreadlocal
added a check for invalid operation handles in HiveStatement . java to improve error handling and provide clearer warnings for invalid operation handles
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - 14263 : camel - aws - secrets - manager should use source code generate configurer to avoid reflection configuration .
rename SimpleTree class to improve clarity to enhance code readability and maintainability
removed exception message from the response in UserREST . java to simplify error handling by eliminating unnecessary exception information
updated the ` fromContent ` method to include a ` subTree ` parameter and modified the ` Result ` constructor to include a ` boolean `
update column width calculation in Sheet . java and add unit tests in TestHSSFSheet . java to ensure correct column width calculations and validate
added configPath parameter to Commands . less method calls to provide additional configuration options for command execution
replaced instances of Set with Collection for tables and weakAssociations in DotWriter . java and GraphExecutable . java to improve performance and flexibility
updated the default SSHD container image from " quay . io / testcontainers / sshd @ sha256 " to " quay .
agent : do n ' t fail if hostid be n ' t null
refactor group key generation logic in DefaultGroupKeyGenerator . java to improve clarity and maintainability of key generation logic
refactor test method name and improve error handling in TestMultiMMap . java to enhance clarity and accuracy of seek operations and ensure proper
fix crash in bcsilicon recipes due to miss gate variant
rename put ( ) to putobject ( ) to avoid confusion
updated visibility logic in CellLayout and refactored drag exit handling in Workspace to improve code readability and maintainability by encapsulating visibility logic
modify the rewrite function in ModifyRequestBodyGatewayFilterFactory and add a test for empty upstream request bodies to ensure that the rewrite function behaves correctly
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure proper handling of non - package - accessible types
change logger . warn to logger . trace in LoggingHandler . java to improve logging granularity for better traceability
updated prefix extraction logic in WhiteBlackList . java and added a new test class Issue348 . java to improve handling of wildcard prefixes and
added options menu functionality and refactored image handling in GalleryActivity to improve user experience by enabling quick access to gallery images
refactor MongoDBServiceFactory to use a singleton instance for building MongoDB services to improve efficiency by avoiding multiple instances of MongoDBServiceFactory
added tests for boolean replacement in InlineConstantMutatorTest . java to ensure correct handling of boolean values during code formatting
updated the ` decode ` method to accept a ` Blackhole ` parameter for better control over the state decoding process to enhance flexibility in handling
fix : update gapic - generator - java with mock service generation fix ( # 174 )
updated method return types and added validation for group addresses in DeviceThingHandler to improve type safety and enhance error handling for group address parsing
removed the clear method call from the dbManager ' s Witnesses collection to streamline the code by eliminating unnecessary operations
do n ' t throw prestoexception when abort
updated stack management in NativeError . java by replacing direct stack setting with getter and setter methods to improve code clarity and facilitate
removed a condition that checks if the path name starts with " . " in DrillPathFilter . java to simplify the path filtering logic by
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before further operations
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 to correct the value of BOLDWEIGHT _ NORMAL for consistency
changed the ` fThreadGroup ` field to be ` volatile ` and modified the ` fLookForStuckThread ` variable to be `
reformatted the constructor and method declarations in ValueResultData . java to improve code readability and maintain consistency
updated hashCode ( ) and equals ( ) methods in FuzzyQuery . java to ensure proper equality comparison and hash code generation
removed unnecessary print statements from PushedResourcesTest . java to clean up the code and improve readability
changed return types of ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` to ` void ` to simplify method signatures
updated the product version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated the principal retrieval logic to set a default value of 0 and modified the creation of the principal to improve clarity and ensure the principal is
changed log level from info to warn in OpenWebNetBridgeHandler . java to provide more informative logging for connection issues
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve consistency and clarity in hash
added a constructor to ThumbnailGenerationTask to ensure storageManager is not null and mImageViewReference is not null to prevent potential NullPointerExceptions
updated the loop condition in GroupSelectionQuery . java to limit the number of attempts to a maximum of 5 to ensure that the loop does not
added a new file ` Bug1933922 . java ` containing a class ` Bug1933922 ` that implements a recursive compilation
removed unnecessary parentheses in multiple Java files to improve code readability and maintainability
updated character range from 33 to 32 in FileResolver . java to enforce a valid space character for control characters
added a call to ` cmp . requestFocus ( ) ` in ` Display . java ` to ensure the component is focused when necessary
[ # 7807 ] instructor : add new instructor : new instructor without sample course ( # 7808 )
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated message handling in DetailFragment and added onPause method in MainActivity to improve user feedback during detail updates and ensure proper activity lifecycle
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
replaced ` Runtime . exec ( args ) ` with a ` ProcessBuilder ` for launching a process to improve code readability and maintain
updated the host used for incrementing the past window from localhost to 127.0 . 0.1 to ensure accurate metrics reporting for the application
refactor subsystem assignment logic to use a loop for splitting controller and base names to improve readability and maintainability of the code
added assumptions in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to check if the Apple platform is available to ensure tests are only executed
compiler : update copyright header in minor refactoring
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
8274396 : [ testbug ] testlargepageuseforauxmemory . java fail due to jdk - 8274
updated method calls to include context parameter in BinaryParser , PlainTextParser , and ParsingExecutionContextView classes to enhance parsing context management and improve
added methods to set and get ` MultiPartFormDataCompliance ` in ` HttpConfiguration ` and created a new ` MultiPartFormDataCompliance ` enum
added JDK - 17 support for Gradle 7.2 in GradleDistributionManager . java to ensure compatibility with JDK - 17 features
refactor type management in DatabaseSnapshot and SnapshotControl classes to use a new addType method to improve code readability and maintainability by centralizing
refactor Term class to improve code readability to enhance maintainability and ease of future updates
modify return statement to handle null or empty runWith values to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / activemq / browse / amq - 2635 - add test case for xa
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
fix bug in localblockbinarizer that cause indexoutofboundsexception .
replaced direct assignment of ` amount ` with a variable ` mTintAmount ` in ` TaskView . java ` to improve code readability
added a new file ` SumZeroFunctions . java ` to implement and utilize the ` SumZero ` aggregation function to facilitate
[ hotfix ] fix test failure in firstvaluefunctionit and nthvaluefunctionit
hbase - 20536 bucketcache . getallocationfailwarningmessage ( ) should return more detailed information about bucketallocatorexception
added a null check before adding properties in JDBCRoleService to prevent potential NullPointerException when propName is null
added ` @ VisibleForTesting ` annotation to several fields and methods in ` StatusBarTouchController ` , ` RecentsView ` , and
added a new method ` logContainerStream ` to ` DockerClient ` and modified the existing ` logContainer ` method to accept a boolean parameter
add performance test for mvstore cache
change LONG value from " L " to " J " in PrimitiveType . java to accurately reflect the intended data type for long values
changed the ` delegatingApplicationListener ` method from instance to static to allow the method to be accessed without an instance of ` WebSecurityConfiguration
camel - 7013 : camel - rest - allow to set the body of the rest message to null .
added new files FileDeletingTasklet . java and TaskletJobFunctionalTests . java for managing file deletion and job functionalities to enhance
g3d - 310 : update center and orientationregardingview and scaleregardingview when view resize
added ` lgtm [ java / index - out - of - bounds ` comments to variable declarations in multiple classes to improve code readability
replaced ` sendEventToTest ` with ` sendStateEventToTest ` and introduced a new ` STATE _ FIELD ` constant to improve
added user agent checks for video thumbnail requests in multiple classes to ensure proper handling of video thumbnails based on the renderer ' s user agent
improve error checker service ( fixes # 399 )
updated titleArea addition logic to differentiate between top and bottom menu buttons based on their theme settings to improve button layout flexibility based on the
updated Skia . java to include a preload attribute and modified the value assignment to include " linux - x86 " and " macosx
networkparameters : add support for google . bitcoin . unittest
added error handling for invalid format arguments in QueryCommand and updated tests in QueryCommandIntegrationTest to improve robustness of command execution and ensure correct
replaced the ` capacity ` and ` isPositionValid ` variables with ` length ` in ` IntIterator . java ` to improve clarity
updated the ` walkRuleAndAdd ` method to include a ` srcTarget ` parameter and modified dependency traversal logic to include the source rule to
patchmodulefilemanager : add ability to override module name in binary for source .
[ java ] only check candidate term id if it ' s less than or equal to the protocol version .
added a conditional check for SAML authentication before setting the default policy in OwnCloudClientManagerFactory to ensure proper client creation behavior based on SAML authentication
add a null check for mappedtableresource ( table ) in readbatch and writebatch . builder ( )
refactor to use utils . close ( ) instead of try - catch .
refactor ` AnonymousAuthenticationFilter ` to use a ` Supplier < SecurityContext > ` for deferred context management to improve security context management and enhance the
modified the ` removeActor ` method to include a ` unfocus ` parameter for better control over actor removal behavior to enhance flexibility in actor
refactor configuration prompt logic to use a constant for valid configurations to improve code readability and maintainability by reducing redundancy
added logging functionality and improved channel handling in NettyHttpServer and RoutingInBoundHandler to enhance logging capabilities and ensure proper channel management
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
replaced direct update ( ) method with SwingUtilities . invokeLater ( this : : update ) in CodeDependenciesPanel . java to ensure UI
( chore ) camel - groovy : make it easy to use groovy script in camel context
remove dependency on artifactutils from defaultpluginmanager . getresolvedartifact ( )
changed access modifiers of several methods and constants from package - private to public in CliFrontendParser , ProgramOptions , ProgramOptionsUtils , and Cli
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
removed storageAlias assignment and added certificate chain retrieval in HttpsMessenger . java to streamline storage key management and enhance certificate chain validation
danielwagnerhall : fix classcastexception in httpcommandexecutor
changed the visibility of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow
add block . dropresources ( ) , block . dropxp ( ) , block . dropxp ( ) , and block . drop
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality for spatial location calculations in the application
updated multiple Java files related to CommunityDetection , GSA connected components , GSAPageRank , LabelPropagation , and SingleSourceShortest
replaced the ` keySet ( ) . isEmpty ( ) ` method with a new ` isEmpty ( _ root ) ` method in ` TreeTrie
replaced col - based calculations with direct method calls for foreground and background to simplify code and improve readability
added a conditional check for the " solr . disableFingerprint " system property in PeerSync and PeerSyncTest classes to control the fingerprint behavior based
changed the visibility of the moveFunds method from private to public to allow access to the method from other classes
updated event emissions in MongoTemplate and modified test cases in MongoTemplateTests to enhance event handling and improve test coverage for MongoDB template operations
add @ repeat annotation to settransactiontest so that it can be run in parallel
make sure to close the input stream if we get an exception
updated exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling consistency and
removed unnecessary whitespace in the ` loadConfig ` method call to improve code readability and maintain consistency
fix checkstyle issue in instructorfeedbackaddactiontest and instructorfeedbackcopyactiontest
make pipelineoptions final in externalworkerservice and jobserviceregistrar
[ hotfix ] [ type ] remove unused step field in homematic type generator
updated logging messages in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality of lock acquisition and release
schedulerserviceimpl : remove redundant call to schedulejobs ( )
simon : fix this lameness in the testgettextcontent . java
refactor Logger to use a ThreadLocal instance for better thread safety to improve performance by reusing logger instances in a single thread
modified the visibility of the convertToCompilationUnit method and replaced Mockito with MockitoJUnitRunner in FunctionInitializerTest and FunctionInitializerTest to
added primitive type checking and boxing functionality in mmm Types . java and mmm Infer . java and ppp T6995
updated task view handling and orientation state management in RecentsView . java and TaskView . java to improve UI responsiveness and ensure
hbase - 20536 fix flaky testflushfromclient . testflushfromclient . testflushfromclient . testflushfromclient
added logic to clone and save contract details in TransactionExecutor . java to ensure contract data consistency and save changes to the storage
updated balance calculations in TokenIssueProcessor to use asset issue fee instead of a hardcoded value to improve flexibility and maintainability of fee handling
refactor texture caching mechanism in RealisticRenderStrategy . java to improve cache management and resource cleanup to enhance texture management efficiency and ensure proper resource
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code cl
added ` isUnselectedStyle ` property and modified ` getStringWidth ` method in ` Label ` and ` DefaultLookAndFeel ` classes to
updated ArrayList initialization to initialize with initial size and refactored action list handling in multiple classes to optimize memory allocation and improve code readability
removed the ` flags ` parameter from several methods in ` ShadowApplicationPackageManager ` , ` ShadowUserManager ` , and ` ShadowUserManager
updated PingRequestHandler . java file to improve ping request handling functionality
skip transformations on api < 25 due to lack of muxing support
[ tradfri ] fix firmware version check for gateway ( # 10399 )
refactor AjaxElementLocator to improve code structure to enhance maintainability and readability of the code
updated layout checks from InlineLayout to DefaultLayout and modified the display condition to include " table - cell " to enhance layout flexibility by allowing
refactor JsonDecoder to improve token handling and add a new test for reordering fields in TestJsonDecoder to enhance code clarity and ensure
fix ( core ) : fix bug in blockcache . releaselocation ( )
[ hotfix ] [ test ] ignore savepointtestbase test
[ drools - 7 ] add miss @ test annotation to droolsmvelparsertest
changed ` publisher ` , ` appName ` , ` host ` , and ` port ` fields to be ` final ` in ` ContextRegisterListener
refactor ObjectHashSet and ObjectHashSetIntegerTest classes to improve iterator management and test setup to enhance code readability and facilitate easier
added batchBytes tracking in SparkReduceRecordHandler and ReduceRecordSource classes and defined a default value in VectorizedRowBatch to improve memory management
changed context mode from MODE _ WORLD _ READABLE + MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE in AppSettings and Update
updated logging messages in JdbcProxyGenerator to clarify that close ( ) is called after already close ( ) or abort ( ) to improve
updated the workspace animator to use mState instead of getState and added accessibility importance logic to improve accessibility support and enhance accessibility
changed log level from warn to debug in ProtobufLogReader . java to reduce log verbosity and improve performance during debugging
updated scope handling in UaaTokenServices and added a new test in UaaTokenServicesTests to ensure correct substring length and validate scope persistence
updated import statements in ` SchemaRetrievalOptionsBuilderTest . java ` , ` AvailableJDBCDrivers . java ` , and ` AvailablePluginsTest .
[ drools - 7 ] add executablecommand to allow to execute a command within a context
( chore ) camel - jms : cleanup unused file
added padding getter methods in CellLayout and modified bitmap creation logic in Launcher to enhance padding management and improve bitmap scaling accuracy
added a conditional check for ` sb . length ( ) ` before initializing ` cands ` in ` LineReaderImpl . java ` to ensure
refactor SamlMetadataUIParserAction and related classes to use Action instead of SamlMetadataUIParserAction to improve code clarity and
added a method to check for the presence of an LDAP port in LdapMockMvcTests . java to enhance test coverage for LDAP processes using specific
log4j2 - 1343 set shutdown timeout to zero in loggercontext . shutdown ( )
updated URL filtering logic in Fetcher . java and modified refresh handling in HTMLMetaProcessor . java to improve URL validation and ensure proper refresh behavior
updated the SolrQuery to search for " name : samsang " and modified the collated result assertion to ensure the query accurately reflects the intended search term and expected results
refactor Console instantiation to use reflection for Karaf Console API compatibility to enhance compatibility with newer Karaf Console API versions
* meshhelper . getverticescolors now use the correct mloopcol for bmesh compatibility
added a file filter to exclude timestamped reports directories and modified the copyDirectory method to include this filter to improve the handling of timestamped reports
refactor test method names and introduce parameterized tests in DataValidatorTest . java to enhance clarity and maintainability of test cases
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to ensure proper error handling when binding form errors within the adequate context
removed debug print statement from JoglInput . java to clean up the code and reduce unnecessary console output
added support for allowing extraction of private fields in FieldSupport to enhance flexibility in field value retrieval based on user preferences
replace " { name } " with device . getName ( ) in WebDataHandler . java to improve device name handling for better clarity and
replaced direct instantiation of ` Lookup ` with a null check for ` lookupConstructor ` to improve robustness by avoiding potential ` NoSuchMethodException `
changed the method name from ` weights ` to ` weightsByDouble ` and updated its implementation to accept an integer weight instead of a double to
added Database parameter to the writeCustomHTML method across multiple writer classes to enable database - specific functionality for custom HTML writing operations
removed unnecessary type casting and added an assertion for null values in BTreeMap . java to improve code clarity and ensure proper handling of null
replaced ` Exception ` handling with ` BalanceInsufficientException ` and added handling for ` BalanceInsufficientException ` to improve error handling and
bugfix # 203322 , do n ' t use profiler . heap . zerofile to speed up file write
replaced direct calls to ` stream . println ` with ` Scope . getCurrentScope ( ) . sendMessage ` in ` Main . java ` to
reduced the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed a generic record assignment in H
added imports for ChunkListener , ItemProcessListener , ItemReadListener , and ItemWriteListener in multiple Java files to enhance functionality by integrating
reformatted code for improved readability and consistency in AbstractProviderModule . java to enhance maintainability and enhance code clarity
removed the method call to ` doc . get ( ' title ' ) ` in ` SearchFiles . java ` and replaced it with a direct
updated Test7005594 . java for improved functionality to enhance performance and maintainability of the code
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob . java for improved clarity to enhance code maintainability and readability
server : fix npe in listvirtualmachines api when vm be not in use
replace modifier digital triggers with analog triggers and introduce a new method to support analog triggers to enhance the functionality of the gamepad by
renamed the method ` iteratesOverSequence ` to ` iteratesOver ` and introduced a new method ` iteratesOver ` in ` IterableSubject `
camel - 16400 : fixed defaulthttpbinding to use name / value pair instead of name / value .
added assertions to verify the count of various entities in the ActivityHistorySQLServerStoredProcedureTest class to ensure that the database queries return zero values
added a new ` LargeValueFormatter ` class and modified ` BarChartActivityMultiDataset ` , ` BarLineChartBase ` , and
fixed bug in comment parser that cause the parser to fail to parse a string with no character .
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress warnings related to incompatible argument types
[ fix ] [ gr - 21212 ] do n ' t swallow exception in tracelinearscanLifetimeanalysisphase .
added a TODO annotation to the NullAssertionValidator class to implement automatic generation for method stubs
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enhance rule key generation for build rules
create system profile directory if it does not already exist in PmsConfiguration . java and update logging configuration in DLNAMediaInfoTest
refactor thread factory creation to use a dedicated method to improve code readability and maintainability
refactor messages retrieval in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code readability and maintainability by
set the accept attribute to " image / * " in the ImageFileInputDialog to allow users to accept images instead of just images
updated ElasticIndexWriter and TestElasticIndexWriter to use TransportClient and PreBuiltTransportClient instead of Headers to improve client configuration flexibility and
added witness class and witnesses details to the ForkController class to improve debugging and traceability of witnesses and witnesses in the application
added a new file ` NullPointerAndEmptyArrayTest . java ` to test null pointer and empty arrays in ` APITests . java `
removed unused methods and classes related to generated source paths in BaseIjModuleRule . java , IjProjectBuckConfig . java ,
updated UaaStringUtils to include a new method for constructing a wildcard pattern with any character delimiters and modified wildcard construction logic to enhance flexibility
refactor alias validation logic in Vectorizer . java to improve clarity and structure to enhance error handling for invalid aliases and table scan operators
updated MockitoJUnitRunner import from ` org . mockito . runners . MockitoJUnitRunner ` to ` org . mock
added error handling for setting values in TinyGFirmwareSettings . java to improve robustness by logging exceptions when setting firmware settings
changed the return type of the getLangs method from String [ ] to Set < String > and updated its implementation to improve language retrieval efficiency and
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency and clarity to improve code readability and maintainability
hbase - 20536 add prepare ( ) method to takenapshothandler ; addendum ( addendum )
[ j2kt ] add support for ` ` isnull ' ' and ` ` if ' ' condition in control flow .
added a test method to verify the modification of HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the EXPLORER endpoint
added a boolean field ` isSuspended ` and modified thread state handling in ` Thread . java ` to ensure proper handling of thread suspension
updated return statements in Java JavadocVisitor classes to replace Javadoc . Author , Javadoc . Since , and Javadoc . See with Javadoc . Hidden , and
( chore ) camel - spring - remoting : use objecthelper to check for non - null camelcontextid
removed redundant @ Override annotations from multiple security - related classes to streamline code and improve maintainability
added module import support in Java2TypeScriptAdapter and updated eval method signature in EnumTests to ensure compatibility with module imports and improve method access
fix xssfexporttoxml language to be http : / / www . w3 . org / 2001 / xmlschema
added content description handling for badges in BubbleTextView to improve user experience by providing descriptive text for badge items
added MouseWheelListener to TestMouseWheelScroll . java to handle mouse wheel events to improve mouse wheel scrolling functionality for better user interaction
added document closing logic in VisualTester and a new test method in VisualRegressionTest to ensure proper resource management and validate document positioning
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to align
refactor vacuumcontroller , vacuumframe , vacuumview , vacuumenvironment . location to use string instead of
simplified the return statement by directly returning the bitfinexSymbol to improve code readability and reduce unnecessary variable assignments
replaced HashSet with ImmutableSet and refactored field printing logic in JsonFormat . java to improve performance and clarity in handling message fields
added handling for arrays and enums in JacksonXmlFormatMapper to ensure proper serialization of arrays and enums in JSON output
added a new constant ` SUSPENDED ` and refactored thread handling in ` VirtualThread . java ` to improve thread state management and
refactor DirectoryTaxonomyWriter to use a consistent variable name and improve clarity to enhance code readability and maintainability by standardizing naming con
refactor VetoableChangeSupport to improve code structure to enhance maintainability and readability of the code
update return statement to adjust the height of the owner ' s Y - coordinate to correct the positioning of the content pane by subtracting the
pdfbox - 4892 : remove unused exception , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
ggb - 2696 : make sure the help menu be open even if there be no menu
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code readability and maintainability
replaced ` Thread . sleep ` with ` ThreadHelper . waitUntil ` in ` BackendInitializerHelper ` and ` TerminalClient ` to improve
updated version checks in SwingStartup . java to include release status and exception handling to improve release status validation and ensure proper handling of release status
added support for including a generated file comment in the DB migration configuration to enable users to customize migration output for generated files
updated command descriptions to include " < player | * > " for clarity to enhance command usability by allowing wildcards for player names
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused classes to streamline the codebase
[ hotfix ] [ table ] fix typo in optionprocessor . java
added a condition to check if the XmlSuite ' s PARALLEL _ CLASSES is equal to parallel to ensure proper handling of parallel
updated the logic for enabling acting master and modified the registerFirst condition in RouteInfoManager . java to improve clarity and correctness
refactor : remove static import of enums in ctmethodimpl . java ( # 2379 )
added serialVersionUID fields to multiple Java classes to ensure compatibility during serialization and deserialization processes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code readability and maintainability
updated ShibbolethCompatiblePersistentIdGenerator to include a constant separator parameter to enhance flexibility in handling different operating systems
updated the method to check for null parameters and modified the condition for system actions to enhance robustness by preventing potential NullPointerExceptions
add a new file ` Person . java ` in the ` org . apache . maven . it0074 ` package to provide a structure for
do n ' t pass localendpoint to gossiper . start ( ) . patch by jbellis ; review by jbellis for
convert ` timeStr ` to ` timeStr . toUpperCase ( ) ` in ` AbstractClient . java ` to ensure consistent case handling for column
added assertions for timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest . java and updated segmentMetadata in SegmentMetadataImpl . java
updated color import from java . awt . Color to net . sf . openrocket . util . Color and modified simPlotPanelDesc '
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper handling of disconnect
do n ' t use string . getannotationnamesbysortereotype ( ) in defaultbeancontext . getscope ( )
add a test for click on an element hidden by double overflow in ClickScrollingTest . java to ensure that clicking an element does not
added a try - catch block around the dismissDialog call to handle potential exceptions when dismissing the dialog
[ drools - 7 ] allow to specify a custom jndi location for the jta transaction synchronization registry .
changed the visibility of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to streamline the code by eliminating unnecessary functionality
replaced ` enabledCiphers ` with ` result ` and updated keyAlias handling in ` JSSESocketFactory . java ` to improve cl
fix bigquery timestamp type for bigquery storage ( # 2175 )
replaced manual null checks with requireNonNull for buffer and userCredentials in Identifiers . java and DatabaseConnector . java to improve code readability and
fix bug in valuesresolver that cause input object to be coerce to null ( # 2278 )
added bounds checking for row and column in FlightConfigurablePanel . java to ensure that row and column values do not exceed the table ' s
added scrollSelectionVisible ( ) method to ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness during motor selection
[ java ] unnecessarylocalbeforereturn - fix false positive
replaced the variable ` scriptEngineManager ` with a direct reference to ` scriptEngine ` in ` AbstractScriptExecutor . java ` to simplify
lucene - 6273 : remove unnecessary nan check from euclideandistancesimilarity . itemsimilarity ( )
do n ' t run incremental backup if sstable be null
refactor relativization logic in MorePaths . java and add tests in MorePathsTest . java to improve path handling and ensure correct normalization
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to improve clarity and correctness in handling column size and decimal digits
do n ' t delete 1 . log . tmp if it do n ' t exist
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure consistency in
rename ` ErrorHandlerController ` to ` Error403Controller ` and introduce new controllers ` Error404Controller ` and ` Error403Controller
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal . java
updated import statements and modified trigger patterns in Tiny . java to improve clarity and functionality to enhance code maintainability and ensure compatibility with the
refactor connection acquisition logic in ConnectionPool . java to enhance readability and maintainability of the code
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` and ` setLdapDateConverter ( ) `
fix the bug # 54567 to avoid the npe
updated error message formatting in JavassistUtils . java to improve clarity of error messages for better debugging
added readerException and writerException fields and modified thread join durations in LargeStreamletTest . java to improve exception handling and ensure proper thread
updated the logic to increment extra pages based on user preferences instead of a hardcoded value to improve user experience by allowing dynamic page navigation based on
added a try - catch block to handle potential exceptions when creating a native image to improve error handling and prevent application crashes due to broken Gaussian
added @ SuppressSubnodes annotation to SequenceMatcher return statements in BaseParser . java to streamline code by eliminating unnecessary suppressNode (
refactor FDFParser instantiation to use a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for project functionality
added a shell command execution in ` AbstractLauncherUiTest . java ` and modified an assertion in ` LauncherInstrumentation . java ` to
added JSON serialization for the filenameToUrl map in FileDumper . java to facilitate the mapping of URLs to JSON files for better
bugfix # 253323 , do not synchronize access to resultsnotified flag
[ fix ] texturehelper . loadtexturefromimage now return a loaded image instead of a texture .
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to remove " : " prefix to
updated the seed for aNewIsbnRandomizer from " 9781797745008 " to " 978179784500
updated notification sound handling in AlarmReceiver . java to use a ringtone URI to improve notification sound flexibility based on user preferences
add a method to report loop count in RootNode . java to enable reporting of loop count in the call target
added a conditional check to finalize the cluster version in FinalizeUpgradeAction . java and updated the merge method in ClusterImpl . java to ensure
server : fix bug in listbyregionidandstate search - use getregionid ( ) instead of getrangeid ( )
removed duplicate opening of streamManager in ItemOrientedStep . java to streamline code by eliminating redundancy
added a new file ` CountedLoopProblem . java ` that implements a counted loop implementation to demonstrate and verify the hash code
[ gr - 21212 ] remove unused metaspacemethod parameter from executecompiledmethod and executecompiledmethodVarargs
refactor pendingfailedspeculationoffset to use getfieldoffset instead of getfieldoffset
renamed ` KafkaStreamsTracing ` to ` ValueTransformerWithKeySupplier ` and updated method signatures accordingly to clarify the purpose of the
added ' received points ' to feedbackconstantsumquestiondetails . java and updated test case in feedbacksessionslogictest . java
replaced ` DynamicColors . applyToActivitiesIfAvailable ( this ) ` with ` DynamicColors . applyToActivitiesIfAvailable ( this ) ` to
added thread management and stack dumping functionality in CloseRace . java to improve error handling by ensuring all child threads finish gracefully
updated return statement to return the integer value instead of the raw value to ensure the correct value is returned for the IntPointField class
updated arc size from a fixed value to a dynamic fraction of the button ' s width to improve the responsiveness of the button ' s
pdfbox - 4892 : use 640 instead of 768 , a suggest by valerybokov
rename ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` in ` SqlSourceBuilder ` and ` Configuration ` classes to improve cl
refactor ` waitForStateTransitionToEnd ` and ` waitForStateTransitionToEnd ` methods in ` AbstractLauncherUiTest ` and ` Work
added new configuration classes for CasCore and CasCoreTicketIdGeneratorsConfiguration in multiple test files to enhance integration with CAS framework for better ticket management
replace ` raf . readLong ( ) ` with ` raf . readFully ( ) ` for reading data in ` Volume . java ` to improve performance
( chore ) camel - http : optimize http producer to reduce log verbosity
refactor classpath creation in DeclarativeHintsParser to use a builder pattern to improve clarity and maintainability of classpath management
added MediaScriptScopeProvider to manage audio and voice management within the automation module to enable monitoring and management of media - related resources within the automation
added methods to get and set a layer manager in AnimComposer and updated AnimEvent to utilize it to improve layer management functionality and
added a check to return early if the queue size is zero in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java
added null checks and improved exception handling in MapRecordProcessor and TezProcessor classes to enhance robustness by preventing null pointer exceptions and
CylinderRegion . java to replace Vector and Vector2D with Vector and Vector2D for center and center2D calculations to improve
replaced manual exception handling with JUnit ' s ExpectedException rule in TestBadUseCases . java to improve code readability and maintainability
modified the ` sendOneQuery ` method to handle null subparams and added a new test for multi - execution in ` StatementTest ` to
bugfix # 252 , do n ' t log error if custom environment can not be customize
review : exclude image not upload from the app ( # 5118 )
refactor Test class to improve code readability to enhance maintainability and facilitate future development
updated PBEKeySpec parameter from blkSize to keyLength to improve clarity by using a more descriptive variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
add a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure proper handling of section definitions in Rtf documents
added location accuracy checks and warning logging for large jump detection in GpsLoggingService . java to improve logging accuracy and provide clearer diagnostics when
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 174 )
use weak references for rootnamefn and sourcefilterfn to avoid memory leak
simplified the addition of elements from data to added in AllAppsList . java to improve code readability and performance by eliminating
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to simplify the
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
updated assertion syntax in FST . java to improve code readability and maintain consistency
added an assertion to check if the security policy exists or is not a file to ensure that the security policy is valid before proceeding
camel - 14263 : camel - olingo2 should use source code generate configurer to avoid reflection configuration .
increased the sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for recovery operations to complete
removed the exception parameter from the log statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception information
add functionality to publish xmpp images via HTTP using XMPP to enhance image publishing capabilities and improve error handling
camel - 16400 : camel - netty should use channel . getattachment ( ) instead of channellocal . get ( ) to avoid
updated the URL _ TEMPLATE regex in BalancedClickhouseDataSource . java and added unit tests in BalancedClickhouseDataSourceTest . java to
remove system . setProperty ( " org . apache . jasper . compiler . disablejsr199 " ) from FragmentActivator . java
added support for handling null values in CSVRecordReader and its configuration to enable proper handling of null values in CSV format
added ` @ LiquibaseService ( skip = true ) ` annotation and import for ` LiquibaseService ` in multiple connection
updated method signatures to use JavaSourceFile instead of J . CompilationUnit to ensure compatibility with Java source files
change event . topics for command and state trigger to match the topic
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to align exception
added deprecated case for " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java , and updated tests
fix mana tablet not be able to damage their mana . close # 169
added a method to copy the identifier collection in the P25P2DecoderState class to ensure that the current call event has the correct identifier
removed unused imports of DictionaryCompoundWordTokenFilter from TestRandomChains . java to clean up the code and improve maintainability
updated thread pool executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to improve clarity
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
updated the assertion message in TypeDefinitionRegistry . java to include the definition parameter to improve clarity of the assertion failure message for better debugging
set visibility of shareWithMeIcon to GONE in LocalFileListAdapter . java to hide the share - with - me icon when not needed
updated the link from " http : / / getbootstrap . com " to " https : / / getbootstrap . com " in multiple filter
updated RouterFilter , RouterServerListFilter , and RouterDistributorTest to use @ NotNull annotation and modified header initialization logic to ensure headers are
updated assertion message in TestIndexWriterMergePolicy to include additional context to improve debugging and traceability of assertions
added @ Deprecated annotation to multiple Java classes to indicate that these classes are outdated and should not be used in future development
added null check for context in ` CrawlerSessionManagerValve ` and created a new test for multiple contexts in ` TestCrawlerSessionManagerVal
added a security check before retrieving the JspApplicationContext in JspFactoryImpl . java to ensure proper access control when accessing JspApplicationContextImpl
updated axial offset calculations and length calculations in RocketComponentConfig . java to improve accuracy of axial representation and ensure proper bounds checking
updated NonceService and OpenIDAuthenticationProviderModule to use GWT ' s @ Singleton annotation to improve dependency injection flexibility for the NonceService class
added a method ` thenCompose ` to update child links in ` FileWrapper . java ` to enhance the functionality of child link updates in the
refactor method signatures and parameters in SpringCloudPlugin . java for improved clarity and consistency to enhance code readability and maintainability by
increased the delay for publishing delay from 100ms to 500ms in RetrievalBlockingMessageStoreTests . java to allow more time for
added a new boolean attribute ` mShiftCodesAlways ` and modified the logic for setting ` mShiftCodesAlways ` based on its value to
[ java ] use isactiveclustercoordinator ( ) to determine if the node be a cluster coordinator or not .
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated identity filtering logic in AbstractKerberosDescriptorContainer . java to check if the identity is a reference instead of a non - null name to
modified the ` newInstance ` method to accept a boolean parameter indicating ` noop ` instead of ` AbstractCommandOptions ` to simplify the method signature and
added a sleep of 3000 milliseconds before handling IOException and InterruptedException in TestListenTCPRecord . java to improve responsiveness by allowing more time for
replaced the original argument assignment logic in PatchExtensionMethod . java to ensure the correct original arguments are used for method calls
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances and refactored related methods to improve performance and
int - 1640 add support for ' apply - sequence ' and ' ignore - send - failures ' attribute on < router > and <
removed x509PublishUrl and x509ViewName fields from ClientKeyPublisherMapping and JwkViewResolver classes to streamline the publishing process and
modified the handling of the ` readers ` array in ` QueryComponent . java ` to ensure proper assignment and retrieval of the first reader to improve
replaced ` ValueSourceParser ` with ` Double2Parser ` for " max " and " min " in ` ValueSourceParser . java
simplify return statement in Container . java to improve code readability and maintainability
removed unused variables ` n ` and ` minScore ` from ` Highlighter . java ` and removed ` throws IOException ` from ` TokenSources
server : add uuid to the ` ` id ' ' column in the ` ` user ' ' table when create a user .
updated ` CasMultifactorAuthenticationWebflowConfiguration ` and ` CasWebflowContextConfiguration ` to use ` ObjectProvider < FlowBuilderServices
updated SQL commands and refactored database connection management in WriteJdbcPTest . java to improve database connection handling and enhance connection management
removed conditional check for the " editor . laf " preference in DefaultPlatform . java to simplify the code for better readability and maintainability
replaced calls to ` getStateEntity ( ) ` with direct references to ` stateEntity ` in ` ServiceComponentHostImpl . java ` to
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability
added a conditional check for ` running ` in ` RootFolder . java ` and updated the status line in ` NavigationShareTab . java `
do n ' t increment thread id in cpucallgraphbuilder . getintrinsics ( )
ggb - 1353 : make sure perspective be set to ` ` 0 ' ' when use perspective .
added NetworkAddressChangeListener implementation and updated logging messages in HomekitImpl . java to enhance network address management and improve logging clarity
replaced lease management with lease renewal time retrieval in TestHDFSEventSinkOnMiniCluster . java to improve clarity and
replaced ` Optional . < SourcePath > absent ( ) ` with ` Optional . absent ( ) ` in ` CxxLibraryDescription .
added null check for exception message in ExceptionHandlerRegistryFactory . java and created a test for fatal IOException with null message in ExceptionHandlerRegistryTest
changed ` nextID ` from ` int ` to ` volatile int ` and modified the ` getSize ` method to use ` nextID ` to
try to fix intermittent test failure on slow ci server
added HasSourcePath interface and updated AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to implement
replaced StringBuffer with direct string concatenation in IllegalArgumentException handling to simplify error message construction and improve code readability
added a custom index field name for " tag " and " id " in the facet configuration and updated related tests to enhance flexibility in facet
updated the ` toEpochMilli ` method to handle negative seconds and positive nanoseconds correctly to ensure accurate conversion of time values and improve test coverage
updated attribute retrieval in OGLESShaderRenderer and LwjglRenderer to use ` name ( ) ` instead of ` getBufferType
copy - paste : do n ' t block update script when copy a file
added a new file TestCMoveLimitType . java with methods for handling CharBuffer and ByteBuffer operations to facilitate testing of character
updated method calls and refactored audio packet handling in multiple classes to improve code clarity and enhance audio packet processing efficiency
( chore ) camel - sql : simplify code and improve readability
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current vendor of the software
refactor console creation logic in Main . java and introduce a new method in VersionCommand . java to improve code readability and encapsulate
replaced the ` storedToken ` variable with a ` hash ` variable in ` InputStreamBinder ` and removed the ` validateToken ` method from
improve error message when iib . eof ( ) return false
add unit test for delete group member .
( chore ) camel - ftp : remove unnecessary array creation
deleted the V2ReplicationProtocol . java file to remove unused replication protocol implementation
updated references from ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` to ` ImmutableSortedSet < SourcePath > compileTimeClasspath
added new files ConstructorArgsDemo . java and StrictDemo . java , and renamed StupidFinal . java to FinalDemo . java to
move templatefeatureiterator to threadlocal so that it can be reuse
increased the assertion from ` responseCount < = 1 ` to ` responseCount < = 2 * DatabaseDescriptor . getReplicationFactor (
added null check for getIndexNumber ( ) in ItemRowAdapter . java to prevent potential NullPointerException when item . getIndexNumber ( ) is null
rename ` showAnchestors ` to ` showAncestors ` across multiple classes to improve clarity and consistency in naming conventions
added a check to return early if the app ' s width is less than 12 to optimize performance by avoiding unnecessary processing when the width is
updated comparison from ' = = ' to ' . equals ( ) ' in ChangeLogParameter . java and added a new test case in Change
changed the loggers field from static to instance final in LogFactory . java to ensure that the loggers instance is not reassigned after initialization
modify return statement to return the base plot instead of the current plot to ensure the method returns the correct base plot for the current plot
( chore ) camel - rest - server : avoid unnecessary log message when upload directory do not exist
added a ` sendStatus200 ` parameter to several constructors and methods in ` ServerGenerator ` , ` HttpTransportOverFCGI ` , `
added a condition to check if the comment length is greater than zero before proceeding to prevent potential errors when comment is empty
added imports and modified file type management logic in BuckModule . java to enhance file type management and ensure compatibility with the IntelliJ
simplified import statements in ComposedUtil . java and changed return type of multiply methods from ToLong to ToInt to improve code read
added a constant RTM _ OS _ ERROR in RTMGenericCommandLineOptionTest . java and updated error messages in TestUseRTMLock
reformatted code for consistency and clarity in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code readability to enhance maintainability and facilitate future development
added mockitoPackageImport method to AbstractModbusOSGiTest . java to enable mocking of ChannelTypeUID for testing purposes
fix typo in polyglotexceptionimpl . visitguesttohost reflective call .
initialized ` systemContext ` in ` AndroidTestEnvironment ` and introduced a ` FontsContractReflector ` interface in ` ShadowFontsContract
added a ` toMillis ` method to ` TimeGranularity ` and modified date calculations in ` PinotDataSourceDimensionFilters ` and ` Pinot
refactor control flow handling in ControlFlow . java and Guard . java to improve clarity and structure to enhance readability and maintainability of
updated array equality comparison logic in Assert . java and ArrayEqualityAssertTest . java to improve clarity and accuracy of error messages when comparing arrays
fix incorrect behavior of click logic in windowclicklogic
corrected the bitwise operation for index assignment in MeshBuilder . java to ensure proper handling of index values in the code
nifi - 3443 : remove dependency to controllerserviceprovider from standardprocessscheduler
added support for Java annotation processors in KotlincToJarStepFactory and added a test annotation in KotlinLibraryIntegrationTest to
updated RESCROLL _ DELAY and PAGE _ SNAP _ ANIMATION _ DURATION in DragController , PagedView , and Workspace
added functionality to check and refresh shortcut permissions in the Launcher and DeepShortcutManager classes to ensure shortcuts are refreshed correctly based on user permissions and
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle history search actions more effectively
added null check for core name in CoreAdminHandler . java and improved exception handling in CoreAdminHandlerTest . java to enhance robustness
added marker selection functionality and close listener to NearbyMapFragment to enhance user interaction by allowing marker selection in the map
added a catch block to handle Throwable in FileSyncAdapter . java to improve error handling by printing stack traces when exceptions occur
refactor memory checks in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve robustness of memory management checks and
updated FeedQueues . java to modify feed retrieval logic to include conditional filtering based on application settings to enhance the efficiency of feed processing based on application
make defaultdrmsession and defaultdrmsessionmanager accessible on wrong thread
updated ` AndroidBinaryDescription ` , ` AndroidBinaryBuilder ` , and ` AndroidBinaryDescriptionTest ` to use ` Locale . US ` to
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure compatibility with the application ' s
updated references from ` configFile ` to ` INSTANCE . confFile ` in ` Args . java ` to ensure consistency in configuration file references
replaced " sleep 5 ; exit 1 " with " exit 1 " in HostPortWaitStrategyTest . java to simplify the test by removing
updated the data type of ` getGroupingIdValue ` from ` int ` to ` long ` and modified the condition for ` numCountDistinct
added multiple calls to ` GraphicsEnvironment . isHeadless ( ) ` in ` Toolkit . java ` to ensure proper handling of headless
exoflame furnace : do n ' t try to smelt furnace that do n ' t match furnace
planner - 521 add move thread count to solver log
fix r4 search with revinclude do n ' t select wrong resource with the same sp name
added a new file ` Issue582Test . java ` to implement unit tests for the ` PumpSource ` and ` BTreeKey
[ native ] fix division by zero error in native query .
refactor LoadingCache class for improved performance to enhance efficiency of loading operations
added a new rule for avoiding non - constructor methods with the class name in NamingRulesTest . java to ensure proper handling of non -
danielwagnerhall : catch staleelementreferenceexception and add a method to expect condition to check if an element be select
added a method ` hasView ` in ` DatabaseSnapshotGenerator ` and updated error handling in ` ViewExistsPrecondition ` to improve view existence
refactor DOMUtil methods for improved performance to enhance efficiency of DOM manipulation operations
added translation calculations in TaskViewUtils and implemented logging of matrix values in Utilities to improve animation accuracy and facilitate easier debugging of matrix
change the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false to disable the fixed rotation transform
added a ` walk ` method to ` TempFSTTermsReader ` and modified ` TempTermOutputs ` to handle term frequency writing to improve
updated the ` create ` method across multiple factory classes to include ` SolrQueryRequest ` as a parameter to enhance functionality by allowing the creation of
added null checks for Post and Announcement fields in SingleTableMySQLTriggerTest . java to ensure proper handling of null values in database queries
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a new setComparator method to improve code clarity and maintainability
updated query prefixes in PhoenixQueryBuilderTest . java to include double quotes for column _ Char and COLUMN _ DATE to ensure compatibility with
added Spark initialization to the init method in RequesterTest . java to ensure Spark is properly initialized before use
added methods to save total storage pool , fee , and limit in DynamicPropertiesStore . java to enhance flexibility and error handling for storage pool
added support for NinjaProperties in AssetsController and updated URL handling in AssetsControllerTest to enhance file streaming functionality based on development environment
updated the method to retrieve a map mark key instead of the current position to improve accuracy in checking the existence of map marks
added a ` TokenRewriteStream ` parameter to several methods in ` BaseSemanticAnalyzer ` and ` DDLSemanticAnalyzer ` classes to
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to
do n ' t swallow exception when add url to urlclassloader . addurl ( )
added a check for the " AppVersion " property in the IOSImplementation class to ensure that the application version is not set to an empty
updated the logging statement to use the thing ' s UID instead of the bridge UID to improve clarity by directly referencing the thing ' s UID
( chore ) camel - alberto : disable flaky test on github
updated SSL configuration properties in OpenWireConnectionTimeoutTest . java to use constants for keystore types and trust store types to improve code readability and
updated debug logger names and added handling for NaN values in DynatraceExporterV2 . java to improve clarity of logging and ensure
added a call to remove a specific session ID in the SessionManager class to ensure proper management and cleanup of sessions
added host name assignment for alerts in HeartBeatHandler . java and improved log message formatting in AlertReceivedListener . java to ensure
simplified the buffer management logic in ChannelEndPoint . java to improve code readability and maintainability
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . kmodule
added tests and implementation for seeking to a specific seek mode in ShadowMediaPlayerTest and ShadowMediaPlayer to ensure compatibility with Android O and
rename ` createTask ` method to ` createThrowingTask ` across multiple classes to clarify that the method is intended to throw exceptions
added a conditional check to set the border of the tabCloseButton based on the IS _ AQUA _ LAF flag to improve the
updated HTTP request methods and modified import statements in TSPTimeStampService . java and TestSignatureInfo . java to improve HTTP request handling and enhance
[ drools - 7 ] allow xstream to be create with wildcard type permission ( # 3745 )
added error handling for diamond application in Attr . java and created a new DiamondRaw class in Neg12 . java to
[ hotfix ] fix checkstyle violation in reloptutil
updated validation conditions for setting IDs and values in Http2Settings . java to ensure that setting IDs and values are valid for unsigned values
deleted the file Issue664Test . java to remove unused test cases to streamline the codebase
hhh - 11341 - fix test that fail on a disposed session even if create from a pool
updated JSON object creation in GeoJsonWMSBuilder . java to include root object and end object to improve JSON formatting for better readability and
updated the method for setting the selected index in the PopupMenuButton class to use intValue ( ) instead of a raw mode value to improve
added checks for manual unstashing in TaskbarStashController to ensure proper handling of app state during unstash operations
camel - 16400 : camel - jbang - do not dump route with customid = ' ' true ' '
modified the ` getEventMismatchMessage ` method to accept a boolean parameter indicating whether to wait for expected events to improve flexibility in handling event mismatch
added a new file ` HeaderFixer . java ` to process header files and write them to a specified directory to facilitate the
added a method to send a broadcast when the first load completes and updated the widget binding logic to improve user experience by ensuring the app widget is
deleted the file SuperJumperAndroid . java to the functionality provided by SuperJumper is no longer needed in the project
updated return statements in SystemTableScan . java to check if the table is distributed and modified test cases in TestStarQueries . java to enhance
removed KeyValuesProviderAware and ObservationConventionAware interfaces from the Observation class to streamline the codebase by eliminating unused methods
fix a bug where miss mapping could not be add to the registry .
change return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast the variable ' i ' to a long type to ensure
added caching functionality for date format strings in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated the query in RemoteAuthenticationEndpointTests to filter usernames by their name to ensure that only valid usernames are processed in the response
use def . finished ( ) instead of def . needsinput ( ) in def . isfinished ( )
updated logging mechanism in Launcher . java to include container information and workspace to improve logging clarity and provide additional context for the launcher exit
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to remove unused test class to streamline the codebase
fix nullpointerexception in bugcontentprovider . updatecontent and add debug message in buggroup . addmarker
added a " Reopen in Browser " menu item and implemented an action listener for opening URLs in the JavaScript editor to enhance user experience by allowing
added a new error message for output specifications and improved error handling in the SemanticAnalyzer and ErrorMsg classes to enhance semantic analysis clarity and
updated the ` addEntryListener ` method to include a ` EqualPredicate ` parameter to enhance the functionality of the ` addEntryListener ` method
fix coordinatearray . reverse ( ) to prevent arrayindexoutofboundsexception
reformatted the setOpen ( ! isOpen ( ) ) method call to improve code readability and maintain consistency
added a boolean variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to ensure proper initialization of the
replaced the ` enterOverviewMode ( ) ` call with ` showOverviewMode ( true ) ` in ` Launcher . java ` to
added a line to set the destination of a message in NetworkRouteTest . java to ensure that the message dispatch reflects the correct destination for
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of maximum
fix checkstyle issue in util / nestedarithmetictest . java
updated the addition methods in HttpClientRequestImpl and modified buffer handling in HttpTest to improve clarity and functionality of buffer management in the request handling
updated artifact replacement logic in GetMavenDependenciesTask . java to ensure correct formatting of artifact identifiers
pdfbox - 4892 : simplify code , a suggest by valerybokov
removed unnecessary print statement from ReferenceUtil . java to streamline code for better readability and performance
refactor visibility predicate to use a separate environment for query type
added solidityJsonRpcHttpPort and solidityJsonRpcEnable parameters to CommonParameter and related classes to enable dynamic configuration of the JSON RPC
added a type check before removing the drop target in mDragController to prevent potential ClassCastException when the folder is not a DropTarget
refactor stub jar creation logic by introducing a new method ` createStubJar ` to improve code readability and maintainability by encapsulating
added new features for " Setup wizard " , " Probe Module " , and " Workflow helper " in StartPageTopComponent . java to enhance
do n ' t schedule meteredflusher if it do n ' t already exist
removed unnecessary type casting for ' available ' in OnlineTestCase . java to simplify code logic for better readability and maintainability
changed the return value from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all user attributes are returned for
modified the logic for handling onIdleTimeout in HttpChannelState . java and added failure listener in HttpChannelTest . java to improve error handling
modified the CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to allow non - blocking functionality for better resource management
updated table header separator regex and added new test cases for one - column head and one - body rendering to improve table header parsing logic and enhance
updated the return value from 32.0 f to 31.5 f in the Camera class to improve the accuracy of the camera ' s representation
added a preference for starting the on - boot setup in GpsSettingsActivity and modified return statements in Utilities to streamline the startup process and
increased the client secret length from 128 to 512 bytes to optimize memory usage and improve security
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to call ParameterRegistration # enablePassingNulls ( true ) to ensure consistency in
ignore scheduledmethodmetricstest due to race condition
refactor methods in SegmentGenerationAndPushTaskExecutor to return the instance of PinotFS instead of creating it directly to improve code clarity
added locale check for dateFormatter assignment in TimeLineCursorAdapter . java and TimelineArrayAdapter . java to ensure dateFormatter is only set
added MetalLookAndFeel to the UIManager in bug8032878 . java to enhance the visual appearance of the UI
added synchronization and refactored ping task management in the Bot class to improve thread safety and ensure proper shutdown of tasks
replaced the method call to ` getMessage ( ) ` with ` throwable ` in ` GlobalErrorHandler . java ` to simplify error handling by directly
[ gr - 21212 ] remove unnecessary meta parameter from packagehelpervm . getpackageentry .
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging and monitoring
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added a deprecated ` hashCode ( ) ` method
refactor boolean variables to use ` boolean ` instead of ` Boolean ` for better readability and consistency to improve code clarity and maintainability
updated zoom level settings for mapView and mvp in BasicMapViewer . java to improve user interface responsiveness by adjusting zoom levels
refactor adminUsers and adminUserGroups to include processUser and processUserGroups in DrillRoot . java to enhance user management by associ
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider ` and ` Windows
added argumentExtractor to DelegatedClientAuthenticationAction and updated service resolution logic in DelegatedAuthenticationWebflowConfiguration and DelegatedAuthenticationWebflowConfiguration
changed the defaultGroup variable from non - final to final in NacosServerRegisterRepository . java to enforce immutability of the default
remove tilecache . destroy ( ) , use destroytilecaches ( ) , createtilecaches ( ) instead
removed redundant calls to ` removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment . java ` and ` InfoLayoutHelper . java ` to
refactor cleanEntriesForFeedsWithoutSubscriptions method to cleanFeedsWithoutSubscriptions and introduce a new cleanEntriesForFeedsWithoutSubscriptions
replaced instances of ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to standard
nifi - 1643 : remove unnecessary file deletion in filebasedclusternodefirewalltest
theorem proving : make sure we do n ' t use nan in conicfivepoints
reformatted conditional statements in RandomAccessReader . java for consistency to improve code readability and maintainability
added @ SuppressWarnings ( " unchecked " , " vararg " ) annotations in Fields . java and MockitoBeforeTestNGMethod . java to
added native methods for creating NS images and refactored image creation logic to enhance image handling capabilities and improve code readability
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to streamline code
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple classes to improve clarity and consistency in
replaced manual null checks with ` Objects . equals ` for consistency across multiple classes to improve code readability and leverage built - in null
refactor method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` across multiple classes to improve clarity and
added verification for various Ninja properties in NinjaDefaultTest . java to ensure correct handling of view locations in the application
renamed the method from ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve clarity and
updated timestampsViewPaddingBottom calculation and modified listViewPositionOffset initialization in DetailFragment and ListFragment to improve layout spacing and ensure consistent positioning
updated exception handling in ZkStateReader . java to include Thread . interrupt ( ) for better thread interruption handling to improve error reporting
added null checks for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure proper handling of
server : do n ' t allow staticnat service to be create in a network that do n ' t support it
added multiple calls to resetHeaderScrollingState ( ) in OCFileListFragment . java to ensure proper visibility and state management of the F
added functionality to remove extra empty screen from the workspace to improve user experience by preventing unnecessary content from being displayed
added a fixedWidth flag and modified glyph adjustment logic in BitmapFont . java to support dynamic width adjustments based on fixed width settings
removed the boolean parameter from the createFragment method and refactored related logic in ChangeLogFragment to simplify method signature and improve code readability
added preEvent , preTransition , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state machine event handling and error
refactor ConfigDescriptionProvider for improved configuration handling to enhance performance and maintainability of configuration management
updated role creation in TestAuthorizationApiAuthorizer and modified configuration handling in StorageBasedMetastoreTestBase to improve role management and ensure compatibility with
refactor sorting logic in FacetComponent . java to use a boolean variable for clarity to improve code readability and maintainability by reducing
refactor CheckstyleReport to use a variable for overriding properties and update the cache file path based on the model ' s directory to improve code
refactor DeleteInactiveReplicaTest . java to improve jetty management and failure handling to enhance reliability and clarity when stopping the Jetty
added a file name parameter to the FileActionsDialogFragment ' s newInstance method and updated its implementation to include it to enhance the dialog ' s
updated reorder direction checks in CellLayout . java to include a new constant INVALID _ DIRECTION to improve code readability and maintainability by using
updated currency and from fields in InnerTransferRequest . java and modified API path annotations in AccountAPI . java to improve clarity and consistency in
fix jetstresstestutil . testfailjob _ withnontransientexception ( ) and jetstresstestutil .
added a new annotation type ` EnableAdminClient ` in the ` org . noear . solon . admin . client ` package to provide
consolidated import statements and overridden visitIdentifier methods in FindTypes . java to improve code readability and maintainability by consolidating import statements
added action text color to AuthenticatorActivity to improve the visibility and aesthetics of the action button
added find method to Manager , StreamSupplierComponent , MockManager , MockManagerImpl , MockManager . java , MockManagerImpl . java ,
rename methods from ` addTestStepsForPickleSteps ` to ` createTestStepsForBeforeHooks ` and ` addTestStepsForAfter
renamed the test method from ` invalidMethod ` to ` validMethod ` in ` StaticHandlerMethodResolverTests ` to clarify the
added a method to cancel a client and updated the startDriver method to include it to improve client management by ensuring proper cancellation of pending clients
added ` getImplicitPreCoercionValue ` method to ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller ` ,
initialize lastDisplayedUser to Optional . empty ( ) in FileDisplayActivity . java to ensure lastDisplayedUser has a default value to
added a new method ` findAll ` to ` QueryDslMongoRepository ` and a corresponding test in ` AbstractPersonRepositoryIntegrationTests ` to
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerException when stopping the consensus instance
planner - 1343 : exit the warm - up loop in case of a failure .
feature - add xread ( ) and xreadgroup ( ) method to redis pipeline interface
refactor ` LinkedBufferInput ` and ` StreamInput ` classes to remove unnecessary ` FIXME # MN ` comments to improve code clarity
added WebSecurityCustomizer to CasWebAppSecurityConfiguration and refactored the configureWebSecurity method in CasWebSecurityConfigurerAdapter to
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to implement
added a method to register content providers and refactored the creation logic in ContentProviderController and ContentProviderController to improve provider registration and enhance
changed the type of the ` version ` parameter from ` Version ` to ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure
add keep - alive configuration to SingleConnectionManager to enhance connection management by allowing keep - alive settings
[ java ] rename ` ` unicastsenderflowcontrol ' ' to ` ` multicastsenderflowcontrolsupplier ' ' for clarity .
ggb - 269 fix for locus with no point in 2d
added error handling and improved buffer management in WebSocket - related classes to enhance robustness and ensure proper handling of IO exceptions during WebSocket operations
updated WebDriver initialization and screenshot handling in HttpWebClient . java to support different selenium driver types and improve screenshot management
replaced ` assertEquals ` with ` assertThat ` in multiple test classes to improve readability and leverage built - in assertions
remove deprecate method in trufflelanguage . getcontextreference .
initialize the variable ` e ` to ` null ` and modify the exception handling logic in ` StubberImpl . java ` , added new tests
updated conditions in Actor . java and Group . java to improve error handling and clarity to enhance code robustness and provide clearer error messages
refactor location permission handling in LocationPickerActivity and ContributionController to utilize LocationPermissionsHelper for better access control to improve user experience by
http : / / issues . apache . org / activemq / browse / amq - 2635 - add a simple example for
added cookie specification to request configuration in GetHTTP . java to enhance request security by enabling secure cookies
replaced a conditional check with a method call to ` overlaps ` to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and removed logging in AirspyT
added monitoringUrl parameter to ScrollingPanel and SystemInformationsButtonsPanel to enhance functionality by allowing monitoring URLs in the UI components
added a new configuration option for the service creation timeout in Kubernetes to provide a configurable timeout for service creation in the Kubernetes environment
updated icon resource assignment in NearbyListFragment to use a switch statement based on the place description to improve code readability and maintainability
added a null check for the package before accessing its properties in DefaultPackageScanClassResolver . java to prevent potential NullPointerException when the package is not
added a new file PrintInlining . java with a main method that prints " Passed " to demonstrate the use of
fix ( javadoc ) : fix nested brace in javadoc inline tag ( # 4329 )
[ java ] remove unused field in archivetest .
updated the method from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java ` to
removed unnecessary import of ClassPathResource and ResourceLoader from SpringResourceProperties and PasswordManagementConfiguration to streamline dependencies and improve code clarity
updated Timber log messages to use float instead of integer for playback speed to improve logging clarity and provide more detailed logging information
do n ' t cache room remove event when cluster be start .
updated the variable name from ' replicas ' to ' cores ' in the AutoScalingHandlerTest . java file to clarify the purpose of the
added key properties for flipY and generateMips in TextureHelper . java to enhance texture rendering capabilities
replaced ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParserDecorator ` and refactored related methods to
[ j2kt ] add librarynormalizationpass to allow normalization of library .
updated the method name from ` nextResponseBodyConverter ` to ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8Optional
[ hotfix ] [ runtime ] make memorysegment visible for testing
added @ Temporal annotation to ConsoleSessionVO . java to enable timestamping functionality in the session management
added new files ` Hbs . java ` and ` HbsTest . java ` to implement ` Handlebars ` for template compilation and testing
added null and empty check for hint and message item visibility in ChatMessageAdapter to improve user experience by ensuring appropriate visibility based on the presence of
update header iteration from keySet ( ) to values ( ) in ImportCsv . java to ensure accurate processing of header entries
# 1193 fix flaky test : wait until confirmation dialog appear
added a null check for distinct column indices in ReduceSinkDeDuplication . java to prevent potential NullPointerException when the number of distinct column indices
updated file path handling and error processing logic in MiscUtils . java to improve robustness and clarity of file path processing
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
replaced instances of " websocket - server " and " websocket - client " with " jetty - websocket - server " and " jetty
updated the return statement to return an unmodifiable map of identity attributes instead of a mutable map to enhance immutability and prevent modification of the map
update sketch . setmodified ( ! sketchcode . getdocumenttext ( ) ) when sketchcode . getmodified ( ) return false
replaced instances of ` new Double ( bytes ) ` and ` new Float ( value ) ` with direct return statements in multiple Java files to
updated the method call from ` getDate ( ) ` to ` getTimestamp ( ) ` in ` JdbcDataSource . java ` to ensure consistency in timestamp
added a condition to check if the object is an instance of " javax . naming . Context " in HtmlJndiTreeReport . java to
added a switch statement to create a default database options in StorageUtils . java and updated logging in Manager . java to improve database options handling and
changed the edge type from " double " to " mutual " in ImporterGEXF . java to enhance functionality to support mutual
updated FLAG _ SLIPPERY to use WindowManager . LayoutParams . FLAG _ SLIPPERY instead of a hardcoded value
fix truffleconstantfieldprovider . getarraydimension to handle non - array type .
added methods to get and set the Google Drive folder path in PreferenceHelper and updated references in GoogleDriveJob and GoogleDriveSettingsFragment to
ggb - 1396 fix for keydown , enter , up - arrow , down - arrow , up - arrow , down - arrow
added @ Nullable annotation to multiple assertThat methods across Truth . java to improve null safety and indicate that the target parameter can be null
updated case handling for newSize in ArrayUtil . java to improve clarity and correctness of return values
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check if constructors can be instrumented to enhance test coverage
add wait for anticompaction to stream in and out
added ` isKeyguardSecure ` property and related methods in ` ShadowKeyguardManager ` and updated tests in ` ShadowKeyguardManagerTest
added serialVersionUID fields to StringDialog . java to ensure compatibility during serialization and deserialization
replaced ' > ' with ' > ' in GrblUtils . java and added a conditional check for overrideParts length to improve code
corrected a typo in the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultiple
modified the checkDrained ( ) logic in AsyncFileImpl . java and added a new test in FileSystemTest . java to ensure drain
updated light parameters and shader configurations in HybridLightTest . java to optimize lighting and improve rendering performance
updated filesystem initialization in AndroidAppBundleIntegrationTest , AndroidBinaryFlavorsIntegrationTest , and ParserIntegrationTest to use the workspace ' s
changed the type of the ` loadRerunFile ` method from ` List < String > ` to ` List < PathWithLines > `
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed @ NotNull annotation from TEST _ DIRS in PubRoot . java to address potential null pointer exceptions due to TODO 2022.1
added a call to close the ParcelFileDescriptor to ensure proper resource management and prevent potential memory leaks
added a method to reset the prefix index and refactored thread - local usage in BasisLibrary to improve thread safety and simplify prefix management
added logging for HTTP connection in TestDistributedStatsComponentCardinality . java to improve debugging visibility during development
added throwIfImmutable ( ) method to IntList . java to ensure the list is immutable before proceeding
added @ NotNull annotation to GrpcServerRunner and modified ManagedChannelBuilder instantiation in GrpcClientBuilder and UnitTestIdleHelper to enhance null
move demo code from org . jline . demo to org . jline . demo . graal ( # 2273 )
[ gr - 21212 ] fix memory leak in insight .
added platform - specific handling for XML output in GenerateManifestStep . java to ensure compatibility with Windows environments when writing to the manifest file
fix for rfe3531161 : redundant nullcheck of nonnull value
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry . java and updated null checks in ThingResource . java to enhance null safety and
make masterjobcontext # createcancellationexception return runtimeexception instead of throwable
pdfbox - 4892 : do n ' t create a cropbox when there be no crop
refactor ManagerBase class to improve code readability to enhance maintainability and facilitate future development
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR in FeatureFlags . java to enable access to All Ap
refactor FragmentActivity initialization to use Robolectric ' s ActivityController to improve testability and leverage Robolectric ' s
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` to improve clarity
rename ` ABCase1 _ 1 ` , ` ABCase1 _ 2 ` , ` ABCase2 ` , ` ABCase3 `
renamed the parameter ` num ` to ` value ` in the ` saveEnergyPriceHistoryDone ` method and added a null check for
refactor handler management in OpenRocketViewer . java to improve simplicity and clarity to enhance the responsiveness of the rocket
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to implement a recipe for changing Maven dependency groupId and artifactId to provide functionality
refactor file system and path initialization in IndexingJob . java and add a check in SegmentChecker . java to ensure the input path is
updated address comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to
refactor ` PreprocessorDelegate ` to use ` Supplier ` for ` replacementPaths ` and ` pathToSourcePathMap ` to improve code read
rename ` JsonExamples ` class to ` Examples ` in ` JsonExamples . java ` and update package - info . java files to improve cl
added debug logging statements in ViewExtractor . java to improve traceability and debugging of the code
pdfbox - 4892 : fix typo find by linktext , a suggest by valerybokov
added a new file ` Main . java ` in the ` com . facebook . buck . oop _ javac ` package to provide
fix concurrentmodificationexception in sipaccountregistrationwizard when create xcap account .
removed duplicate continue statements in NativeScanner . java to improve code efficiency and readability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unused
replaced ` ImmutableSet ` with ` Supplier ` for querying and exporting dependencies in ` AndroidLibraryDescription . java ` to improve performance and reduce
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added charset handling in ExtractingDocumentLoader to ensure proper content encoding is included in metadata
updated SQL insert and select statements to use wildcard syntax and improved type handling to enhance code readability and reduce potential errors in SQL queries
added a check to return early if the slot is - 1 in WindowListener . java to optimize performance by avoiding unnecessary processing when the slot
added support for ignoring transitive repositories in Maven execution requests to allow users to decide whether to ignore remote repositories introduced by transitive dependencies
removed the dependency on BackgroundJobManager in ContactsPreferenceActivity . java to streamline the code by eliminating unnecessary dependency
updated ColorsActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android versions
added null check before closing selection in NIOTransport . java to prevent potential NullPointerException when selection is null
added a condition to break if the current index equals the string length and matcher start and end in NativeRegExp . java to ensure proper handling of
add port 0 to integration test to make it easy to run in ci
add a new user defined function ( UDF ) called reverse to reverse text in FunctionRegistry to enhance functionality by allowing users to reverse strings in Hive queries
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` in ` Dispatcher ` , ` Request ` , and `
refactor Tracer class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] ignore flaky test in rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java to improve code readability and reduce unnecessary dependencies
added synchronization to the buffer clearing process in StarTreeRecordStoreCircularBufferImpl . java and a corresponding test in TestStarTreeRecordStore
updated forecast values for minutes , hours , and days in OpenWeatherMapOneCallHandler . java to adjust the forecast values for better data
fix flakiness in abstractpageoperationtemplatetest and add timeout
updated ` RemoteTargetGluer ` , ` FloatingHeaderView ` , ` SuggestionMode ` , and ` RemoteTargetHandle ` to
replace ` splitAndMap ` with ` splitAndThenFlatMap ` and change return type of ` parseRerunFile ` to ` Stream
add multiple livingwood and fluff block to the creative tab . close # 399
updated assertions in TestRadioButtons . java to use consistent method calls to improve code readability and maintainability
added file size tracking functionality and a method to retrieve the number of rows in RCFile and RCFileCat classes to improve file size management and
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
[ api ] add checkndarray ( pointer pointer , msg ) to jnautils
refactor BlobServer . java to improve code structure to enhance maintainability and readability of the codebase
[ java ] unusedprivatemethod - fix false positive with static private call from initializer
rename variable ` lexicalScope ` to ` lexScope ` for consistency to improve code readability and maintainability
added a test method ` testAutoStartup ` to the ` InboundChannelAdapterParserTests ` class to ensure that the SFTP adapter is
added methods to retrieve level and root in Node , Quadtree , AbstractNode , and AbstractSTRtree classes , and modified STRtreeNode to
updated version parsing logic to handle minor version numbers more accurately to ensure accurate parsing of version numbers for improved compatibility
do n ' t persist tag if there be no tag available for the item
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a new method ` fromDateTime ` in ` DateTime
hhh - 17100 - fix nullpointerexception in distributedusertype . setparameter ( )
refactor Log4j2ConfiguratorServlet to improve logging functionality to enhance performance and maintainability of the logging system
replaced instances of creating HiveException and AuthorizationException with direct return statements to simplify exception handling and improve code readability
updated CGoCompileStep to join the C++ command prefix and added a new test for CGoLibrary with C++ prebuilt dependencies to
added @ Buildable annotation to CustomResource . java to facilitate the creation and management of resources in the Kubernetes framework
added @ Override annotation in mmm Only . java and ppp Only . java to ensure proper method overriding and improve code clarity
added a three - hour timeout for HTTP connections in HttpClientFactory to improve connection stability by allowing more time for requests
added new attributes " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _
simonstewart : enable everything but trace by default
removed the @ Singleton annotation from ApplicationController . java to streamline the code by eliminating unnecessary singleton annotation
added handling for OwnCloudAccount in ShareActivity to retrieve the username based on its display name to improve user experience by providing a more accurate
added a new test method ` testResumePausedInstance ` to ` SimpleJobLauncherTests ` to verify job execution behavior when a paused instance is
added null check for cacheConfig in HttpSyncDataService . java and refactored success handling in DataRefreshFactory . java to improve robust
[ grid ] add check for docker session in local node
fix : ` ` java . lang . ' ' - > ` ` java . lang . ' ' - > ` ` java . lang .
pdfbox - 4892 : use nonsequencypdfparser instead of pdfparser to parse dictionary
mahout - 1343 fix checkstyle violation in testdistributedlanczossolvercli
refactor HttpServerTestBase class for improved test coverage to enhance reliability of HTTP server tests
refactor assertions in PortletApplicationMapTest to improve clarity and structure to enhance readability and maintainability of the test code
added tests and implementation for handling nested bean lists in BeanTableSchemaTest and NestedBeanIgnoreNulls to ensure correct handling of null values in bean
add redissonautoconfigurationcustomizer interface to allow customization of spring starter
fix indicator . todouble ( ) and add unit test
added new methods ` execInContainerWithUser ` to ` ContainerState ` , ` ExecInContainerPattern ` , and ` ExecCreateCmd
update the logic for interestedInByteMessages and interestedInTextMessages to include both WebSocketByteListener and WebSocketTextListener to improve clarity and
added new test cases for semantic graph attributes and negative attributes in SemgrexTest . java to ensure correct functionality of semantic graph comparisons and negative
added a broadcast intent to clear the pull unread state in HomeFragment to enhance user experience by providing a clear - pull - unread action
simplified the initialization of ` isPreGingerbread ` and ` overScroller ` in ` TouchImageView . java `
add flush ( ) and destroy ( ) method to defaultprofilevalidationsupport in dstu21
camel - 16400 : camel - core - optimize to reduce stack frame in use during camel context startup .
added floating action buttons and methods for showing and closing the FAB menu in ShareActivity to enhance user experience by providing access to the main fab
added InlineParslet class and modified ToDateParser to handle inline formatting to improve date parsing functionality and enhance code readability
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated error messages in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java for clarity to improve user understanding of
added a check for mServerIsChecked before binding to the operations service to ensure the server connection is established only when necessary to avoid redundant bindings
updated the method calls from ` getBeginColumn ( ) ` and ` getEndColumn ( ) ` to ` getBeginLine ( ) ` and ` getEnd
added waitFor method to ManagedThread and updated process termination logic in CxxPreprocessAndCompileStep to improve thread management and ensure proper termination of
added a boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and modified ` CoreAuthenticationUtils ` and ` CasPersonDirectory
remove checkifloaded ( ) from ` ` defaultrecordstore ' ' and make ` ` mapcontainer ' ' and ` ` maxsizechecker
added support for enabled SSL protocols in the Netty web server configuration to enhance security by allowing customizable SSL protocols for client connections
replaced ` AtomicBoolean ` with ` AtomicReference ` in ` SetOnce . java ` and added a new ` trySet ` method to
updated the return statement in QueryDslMongoRepository to handle null properties and added a new test in SpringDataMongodbSerializerUnitTests to
updated assertions in RoundRectBorderTest . java for consistency and clarity to improve test reliability and provide clearer error messages for better debugging
add a check to ensure the genesis config is not empty before proceeding to avoid potential errors when the cluster is empty
remove paralleltest since it is heavy and quite pointless
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign . length
updated conditional check from ' if ( windows ) ' to ' if ( ! windows ) ' in ProcessInformationsPanel . java to correct logic
refactor methods in MoreCollectors to improve naming consistency and clarity to enhance code readability and maintainability by standardizing naming conventions
added null checks and improved WebSocket client extension handling in BitmexStreamingExchange and BitmexStreamingMarketDataService classes to enhance
added validation for latitude and longitude in GeoPointField . java and implemented corresponding unit tests in TestGeoPointField . java to ensure that invalid
refactor methods in OozieProxyImpersonator and WorkflowFilesService for clarity and consistency to improve code readability and maintainability
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
updated the ` getTableDocument ` method to accept a boolean parameter indicating whether to include dependent tables to enhance flexibility in document retrieval based on the
added logic to track the number of consecutive uploads without coordinates in UploadActivity and UploadPresenter to improve user experience by providing feedback when location coordinates are
added caching for profile data and a new endpoint for viewing profiles in ProfileResources . java to improve performance by reducing redundant retrieval of profile
updated identifier derivation logic and refactored property value handling in JpaMetamodelEntityInformation . java to improve clarity and maintainability
added methods to bootstrap last DDL timestamps for tables and views and indexes in UpgradeIT and UpgradeUtil classes to improve clarity and functionality of timestamp
add a default configuration option for exception mapper registration in ` AbstractServerFactory ` to allow customization of exception mapping behavior in the application
change background color in fieldtextfield be now optional
updated the ` nativeCreateNSWindow ` method to include an ` ownerPtr ` parameter to enhance functionality by allowing the window to be created with
updated SQL command in FileContentProvider to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure the correct table name is
added support for the STOCK tile in the Tile class to enhance the visual representation of the Stock tile in the application
fixed - rbuckets . set ( ) and readasync ( ) method do n ' t accept string codec parameter . # 3559
add detector under test for findunrelatedtypesingenericcontainer
refactor back animation handling in LauncherBackAnimationController to utilize BackProgressAnimator for improved state management to enhance the responsiveness
changed the visibility of the ` _ initialPageNo ` variable from final to non - final and added logic to update content limits based on page
fix crc16 calculation in jedisclustercrc16 ( # 1193 )
added comment handling in FormattedSqlChangeLogParser and created a corresponding test in FormattedSqlChangeLogParserTest to improve comment parsing functionality
refactored JarArchiver instantiation in MavenArchiver and updated its usage in AbstractJarMojo to improve code clarity and maintainability
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling and provide clearer context
refactor aggregation logic in TSServiceImpl . java and add multiAggregationTest ( DaemonTest . java ) in DaemonTest . java to improve
added validation for pixel format and type in GwtGL20 . java to ensure only supported formats and types are accepted to prevent runtime exceptions
added a new test method ` testDebugInfo ` in ` OutputMemoryTest ` and refactored ` PrintR ` and ` VarDump
replaced ` UnmodifiableClassException ` with ` IllegalStateException ` for better error handling in ` InlineBytecodeGenerator . java ` to provide clear
[ gr - 11313 ] print class initialization trace even when an error is not encounter
fix typo : queryleveltimeoutms and querytimeoutms should be querytimeoutms
replaced Google ' s CacheBuilder with Caffeine ' s CacheLoader for topic route caching to improve performance and performance by utilizing
added a read - only option to the createDataSource method in MBTilesDataStoreFactory to allow the data source to be created in a read -
updated INVALID _ SOURCE _ TARGET _ RELEASE regex and added a fatal error message in FailureLogAnalyzerTest to improve error handling for invalid target
updated URI construction and added location intent handling in DetailFragment . java to improve location retrieval and ensure location functionality is available
nifi - 7042 : fix npe in getreferencedparametercontexts ( ) when the parametercontext be null
updated ClassLoader . java for improved resource management to enhance performance and maintainability of class loading
added a method to set origin response headers in ProxyRequestHelper and created a test for it in ProxyRequestHelperTests to ensure proper handling of
added a new instance of ProfileSettingDrawerItem in GpsMainActivity to support profile setting functionality in the application
added XML _ VALIDATION _ ATTR constant and updated related classes to utilize it to enhance XML validation configuration flexibility in the application
simonstewart : make the firefox driver a little easy to understand
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to ensure fetch size does not exceed the defined maximum rows and
refactor method names and logic in SqlStreamTerminator for clarity and consistency to improve code readability and maintainability
added handling for node and mouse left click events in StandardVizEventManager to enhance user interaction by allowing selection of nodes and mouse positions
[ java ] refactored buffer . setmemory into a separate method to reduce code duplication .
[ drools - 7 ] add getter and setter for xorgroup in terminalnode memory
removed getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource . java to streamline code by elimin
refactor SourcePathResolver to use private methods for path resolution and introduce a new method to retrieve absolute paths to improve code readability and
fix # 216 : unexpected attribute when parse composite element should be log
modified the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method and added encoded URL handling in ` WebsocketRoutingFilter ` to enhance
rename ` ` gc / gccsuitecompile ' ' to ` ` gc / gcc / compile ' ' and ` ` nwcc /
refactor CxxPlatform retrieval logic in HaskellBinaryDescription . java to use a new method to improve code readability and maintainability
added imports for ` IndexReader ` , ` IndexReader ` , ` Similarity ` , ` Hits ` , ` Hits ` ,
modified the return logic in ` ConcurrentLinkedStack ` to handle null values and added new test cases in ` ConcurrentLinkedStackTest ` to improve
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added null check for mDirectories before initializing it to prevent potential NullPointerException when mDirectories is null
updated condition in RecentsView . java to include checks for overview state and first layout to ensure proper handling of gesture end targets based on
added multiple package - info . java files for various Lucene packages to provide package - level documentation and organization for better code organization
added a text to the visibleAutoLeveler component in AutoLevelerTopComponent . java to enhance user interface by providing localized text for the
added support for post - optimize callbacks in DirectUpdateHandler and DirectUpdateHandler2 classes to enable post - optimize functionality in the update process
updated decompressor and compressor initialization to include a padding flag to ensure proper handling of dummy byte values during compression
removed the check for user data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to check if the base is a local meta store before retrying retries to ensure retries do not exceed the retry limit for local meta
updated import statements and added null check for hostStatus in HeliosSoloLogService . java to improve error handling by ignoring specific exceptions
refactor methods in Subject class to improve code readability and maintainability
make type map in abstractserializationservice use concurrenthashmap ( referencetype . weak , referencetype . strong )
updated color distance calculations in HSSFPalette . java and added a new test case in TestHSSFPalette . java to improve accuracy
doc ( regen ) : update license year for generated file ( # 49 )
danielwagnerhall : fix xpath library to return empty list instead of throw exception .
added a flags parameter to the registerReceiver methods in ShadowApplication , ShadowContextImpl , ShadowInstrumentation , and ShadowInstrumentation classes to enable
updated FFmpegTest to use Mockito ' s Answer for mocking the " - version " argument to improve test reliability by ensuring mock
added handling for previous input streams in Ogg and OggInputStream classes to improve resource management and prevent potential memory leaks
added a constant RESPONSE _ WAS _ NULL and updated the failure message assignment to use it to improve code readability and maintainability by using
[ te ] detectionmigrationresource should check if anomalyfailurecount = = 0 and anomalywarningcount = = 0 ( # 439
refactor Toast handling in BaseActivity and DetailActivity to use a new showToast method to improve code readability and maintainability by
updated the method to use httpMethod ( ) and requestTemplate ( ) instead of method ( ) and requestTemplate ( ) to improve clarity and
added validation for LDAP names and modified referral handling in LDAPCertStore . java to improve robustness by ensuring only valid names are processed and
refactor the retain logic into a separate method for clarity to improve code readability and reduce duplication
rename ` AdapterViewTest ` to ` ListViewTest ` and add a new test for item click functionality to improve clarity and functionality of
[ hotfix ] [ test ] make checkpointfailuremanageritcase public
remove genericitemuiprovider , since it ' s not use anymore
added a new field ` selectedObject ` and modified the ` setSelected ` method in ` SIPCommSelectorBox . java ` to improve the
added JUnit @ Isolated annotation to MetaInfConfigurationTest . java to access the static method of FileSystemPool in a parallel test environment
set the server connector ' s bind address to HTTP _ INFO . bindAddress to ensure the server connects to the correct bind address for communication
updated token validity and refresh tokens based on heart mode and grant types in DynamicClientRegistrationEndpoint . java to improve token management for different client
added a new ` CloverInstrumentationFilter ` class and modified ` SplitLogCounters ` to check for ` AtomicLong ` type to enhance
[ miio ] add support for smartmi evaporative humidifier ( zhimi . humidifier . cb2 )
plausible to break now use cost _ inf instead of cost _ inf
changed the visibility of the ` setScrollRangeDelta ` method from package - private to public to allow access to the method from other classes
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to provide clearer error messages when the repository
update return statement in IntHashSet . java to use logical OR instead of logical AND to improve clarity and correctness of the comparison logic
added Serializable interface to RuleAdministratorImpl class to enable serialization of RuleAdministrator instances
replaced List with Set for allowedOrigins and allowedTimingOrigins , and added allowedOriginPatterns to generateAllowedOrigins and generateAllowed
added " g3d / knight . g3dj " and " g3d / cube _ anim . g3dj " to
added error handling for updateLatestSolidifiedBlock in Manager . java to improve robustness by logging errors when solidifiedPosition is negative
hbase - 11341 fix null return in execresult . getcoprocessorexec ( ) ; addendum ( addendum
added a method to check if a user has an administrator access and improved error handling for unauthorized users to enhance security by ensuring proper access
replaced the ` writeTo ` method with a new ` getStubClassBytes ` method in ` ClassMirror ` and refactored the stub
added a TextView to display the internal link text based on whether the file is a folder or a file to improve user experience by providing a clear
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting across different locales
changed the condition from checking if the calendar ' s SATURDAY is equal to checking if it is not equal to the current day to
refactor hideInput and hideIme methods in AllAppsContainerView and LauncherAllAppsContainerView to improve UI responsiveness and
use inmemoryeventstorageengine for test to avoid memory leak
refactor BsdFileStore and BsdNativeDispatcher to implement getmntonname and getmntonname0 methods to improve code cl
test : add test case for issue 1599
add coordinate support for spawn command
added MIN _ CONTENT _ DIMEN constant and refactored content area width and height calculations to improve code readability and maintainability by
make variable final in graalcompilertest and hotspotcryptosubstitutiontest
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to relies on
added plugin check class names to the failed checks in UpgradeCheckRegistry and reformatted the addColumnsToUpgradeTable method in UpgradeCatalog280
refactor Environment class to improve code readability to enhance maintainability and facilitate future development
added import for LuceneTestCase and annotated RecoveryAfterSoftCommitTest with a BadApple annotation to address issue SOLR - 7421
updated home assignment logic in CodenameOneImplementation . java and removed redundant type check in HashtableContent . java to improve code clarity and
change flag name from FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS
updated import statements in LiquibaseEntityResolver . java and XMLChangeLogSAXParser . java to streamline resource handling and improve
added security property ` jdk . tls . disabledAlgorithms ` to ` ComHostnameVerifier ` and ` JavaxHostnameVerifier ` classes to
updated ` @ Value . Immutable ` annotation and replaced ` EMPTY ` with ` CxxDeps . of ( ) ` in ` AbstractCxx
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualStubDirectory ` and ` actualFullDirectory `
updated the ` resizeThreshold ` variable declaration in ` Int2ObjectHashMap . java ` to improve code clarity and maintain consistency in variable naming
updated folder name suggestion logic to check for empty title before setting hint to improve user experience by providing a clear hint when the title is empty
updated ` loadClientByClientId ` method calls to include an additional parameter ` " uaa " ` to ensure correct client context is used for
changed access modifiers of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
update value assignments in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to handle closed states to ensure accurate representation of values when the
refactor MimetypeIconUtil class for improved readability to enhance maintainability and clarity of the code structure
corrected the spelling of " supportsViewFor " to " supportsViewsFor " across multiple view provider classes to improve code readability and
added a new test method ` negatedInstanceOf ` in ` UnnecessaryParenthesesTest . java ` and modified the ` UnwrapParenthes
added a new method ` teleport ` to handle teleportation in the ` Location ` class to enable dynamic teleportation of entities based on their class
replaced deprecated Base64 encoding methods with a new utility method from Base64Utils to improve code maintainability and reduce dependency on Spring Security '
replaced ` Statistics . onGenerate ` with ` Statistics . report ` in ` TranslatorManagerHelper . java ` to update statistics reporting to include
rename the ` ContainerAnnotation ` annotation from ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the annotation '
added a null check for the result variable in ObjectIdentityImpl . java to ensure that the getId ( ) method is not null to prevent potential
refactor retweeter handling and visibility logic in TimeLineCursorAdapter . java to improve clarity and functionality of retweeter muff
added conditional logic to retrieve the ' verified ' text based on the ' addonTheme ' setting to ensure the ' verified ' text is displayed correctly
refactor AbucoinsDigest to be non - static and make timeDiffFromServer final to improve encapsulation and enforce immutability
camel - 16400 : camel - mongo - add autowired option to all the component - mongo component
[ geos - 7012 ] add sourceindex to attributemapping so we can know where the source be
handle corruption when alter partition statistic
added a call to isSecurityEnabled ( ) in AuthParams . java to enable security checks for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and enhance maintainability
escape the contact email in the home page to make it easy to click on it .
fix ( modulemanagerimpl ) : enhances reflections with subsystems ( # 4249 )
refactor feature writing logic in JoinModeller . java to use a variable for number of features to improve code readability and maintainability by
add a check for non - empty command string before checking if it starts with ' < ' in AlgebraProcessor . java to prevent potential NullPointerException
( chore ) camel - kafka : avoid unnecessary call to log . gettrace ( )
replaced hardcoded ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat in MediaSessionConnector . java to improve
updated IgnitionConfigurationHandler , MotorMountHandler , AxialStage , and ParallelStage classes to migrate automatic separation handling to
tika - 3748 -- fix bug in msownerfileparser that cause ascii name length to be different than the unicode length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as non - deterministic for JDK 1
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and encapsulate lock file creation logic
updated version check from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added new sync interval settings to
added a check to return null if the username equals FEDERATION _ USER to ensure proper handling of federation users in authentication
truffle : do n ' t wrap truffleobject in executemethodnode . isinstance ( ) .
refactor filter logic in JakartaClientShutdownWithServerWebAppTest and JakartaClientShutdownWithServerWebAppTest
do n ' t log an error if the filter chain be deny
refactor Collection and Map classes to improve code readability and maintainability
added import statement for Version in CreateIndexTask . java to utilize version management features in the index creation process
added handling for missing primary key changes in OracleDatabase and AbstractDb2Database to ensure proper schema management for primary key references in the comparison database
updated ` execute ` and ` repair ` methods to include ` MetastoreException ` and added error handling for invalid partition names to improve error
[ hotfix ] [ kafka ] refactor kafkacommitter . committransaction into retryablecommittables
[ rip - 10 ] remove the receipthandle when it ' s remove ( # 1193 )
added a ` withServices ` method to ` DockerComposeContainer ` and modified the ` runWithCompose ` method to accept a list of services
fix concurrentmodificationexception cause by concurrentmodificationexception
removed unnecessary import statements and simplified XML return value in FeedParser . java to streamline code and improve readability by eliminating unnecessary dependencies
removed conditional check for DISABLE _ ALL _ APPS in Launcher . java and updated custom page retrieval in Workspace . java to simplify code
change the data type of several fields from int to double in MeterRealtimeBodyDataDTO . java to improve precision in energy consumption and consumption
added a new file ` bug4150029 . java ` to implement a JApplet for managing temporary directories to address bug 41500
added a boolean flag ` isSparkConfigUpdated ` and its getter / setter in ` HiveConf ` , ` SparkClient ` , and `
added a ` getLongPressIndicator ` method to ` AppIcon ` and ` AppIconMenuItem ` classes and modified the ` Launchable ` class
added checks for empty polygons in WKBWriter and updated related tests in WKBWriterTest to ensure proper handling of empty polygon scenarios and improve
refactor UnflavoredBuildTarget to use a builder pattern and introduce interner for better memory management to improve code readability and
added a new file ` MultiplyByMaxInt . java ` containing a class for testing multiplication with ` 2147483647 ` to implement a
added conditional logic to enable the drawer indicator based on the current file state in OCFileListFragment to enhance user experience by enabling the drawer
placed test around and remove empty de directory in analysis to fix the wrong message
replaced instances of ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to
[ drools - 7 ] improve error message when expression be not define on node
replaced ` @ ContainedBy ` annotations with ` @ Repeatable ` annotations in multiple Java files to improve annotation clarity and consistency in
updated the file sending message to include the duration of the sending process to improve clarity of the output by including the duration of the file sending
updated class name handling in OpenMBeanAttributeInfoSupport . java to use safeGetClassName ( ) to enhance security by ensuring package access is validated
fix npe in readresponseresolver . isdatapresent ( ) when there be no response
add a calculation for freeSize in StoreDirect . java to adjust freeSize based on the value of ' s '
do n ' t allow touch to be swipe up to utilize keyboard .
replaced instances of SslContextFactory with SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer classes to align SSL context creation with the
removed the PrivilegedSocket class from PG _ Stream . java to simplify socket connection handling by directly instantiating the socket directly
refactor InputTest class to improve code readability to enhance maintainability and facilitate future development
modified ` finishRecentsAnimationOnTasksAppeared ` and ` finishRecentsAnimationOnTasksAppeared ` methods to accept a
added null check for curLatLng before adding the current location marker to prevent potential NullPointerException when curLatLng is null
updated the return statement to use the client ' s client ID instead of the client object to ensure that the removeSecret method uses the correct client
updated SQL query and configuration parsing in SqlSourceBuilderTest . java to ensure compatibility with SQL syntax and improve test reliability
resolve http : / / issues . apache . org / activemq / browse / amq - 2635 - use executorservice to
added unit tests for handling unknown keys in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys in the dataset
[ type : refactor ] fix npe in shenyutrierulelistener ( # 3649 )
[ fix ] [ jme3 ] add clonefields ( cloner ) method to lightcontrol .
updated conditions for setting ` _ hideStacks ` and modified stack trace handling in ` StdErrLog . java ` to improve code clarity and
added a method ` getContext ( ) ` to ` HttpSessionEventPublisher ` and updated the context handling in ` HttpSessionEventPublisherTests ` to ensure
removed a null check for the CREATE CQ statement in ASTVisitor . java to handle cases where the syntax of CREATE CQ is changed from
[ hotfix ] fix checkstyle violation in flinkiottdbsink
simplify custom simplification in canonicalizerphase . simplifiesimplificationconsiderednodes .
updated fileIcon parameter from null to context in ActivityListAdapter . java to ensure proper context is used for icon display
updated indexOrConstraintName to include schema name in the readIdentifierWithSchema ( ) method to ensure the correct schema name is used for index
add bigqueryutiltest . testreadwithtime ( ) for timestamp field ( # 2178 )
added ` findViewWithTag ` method to ` ShadowView ` , ` ShadowViewGroup ` , and corresponding tests in ` ViewTest ` and
updated for - loops to use generics for type safety to enhance type safety and avoid unchecked cast warnings
added import statement for PColumnFamily in IndexTool . java and modified imports in IndexTool . java to enhance functionality by integrating column family
added new constant JSON _ VALUE and JSON _ CREATOR to DocAnnotationConstants and updated method logic in JavaClassUtil to enhance annotation handling and improve
[ gr - 38686 ] allow resource feature to work with jar file .
added CUDA _ R _ 16F , CUDA _ R _ 16C , CUDA _ R _ 16U , CUDA _
replaced the ` ResourceLoader ` class with a new implementation that retrieves layout directories from a directory to streamline resource loading by eliminating
fix checkstyle issue in util / blockredstonetorch . java ( # 712 )
[ calcite - 3640 ] add support for varbinary type in reltostageconverter
updated import statement for DateHelper in NoteAdapter . java to utilize DateHelper for date handling functionality
updated backup message messages and error handling in Backup . java and Captions . java to improve clarity and functionality of backup status management
mow - 412 fix : position of simple panel should be relative instead of absolute
simplified the creation of a temporary file in ShadowParcelFileDescriptor . java to improve code readability and maintainability
replaced ` poll ( ) ` and ` offer ( ) ` methods with ` addFirst ( ) ` and ` removeFirst ( ) `
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the
fix ( griffin ) : fix canonicalization of x = = y in integerequalsnode
added a static final Type constant STRING _ ARRAY to TypeFactory to facilitate the retrieval of String array types in the type system
refactor keyboard hiding logic in AllAppsContainerView and add event logging in LauncherAllAppsContainerView and LiveSearchManager to improve
add blockstatecontainer . setbits ( ) to force bit density to fix network issue .
updated assertions in ` TimelineMetricCacheSizingTest . java ` and ` TimelineMetricCacheTest . java ` to include descriptive
add a workaround for gl _ max _ texture _ size in minecraftplayerusagesnooper . getmaxtexturesize ( )
[ java ] do n ' t call trystoplogrecording ( ) in consensusmoduleagent . stop ( ) .
added a condition to reset startPosn if isInTransform is true to ensure proper initialization of startPosn when in transform mode
added a ` isSkipStarTree ` method to ` QueryContext ` and updated related classes to utilize it to improve control over star tree
added a ` lockNearbyView ` flag and modified progress bar visibility logic in ` NearbyActivity . java ` to improve control over
add maptransformer . of ( map ) and inverse ( ) and bimap ( ) for convenience
rename EmeddedObjects and EmbeddedObjects classes to improve clarity and consistency in naming conventions
added support for launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget rendering capabilities and improve performance
updated the ` StageSelector ` and ` StageAction ` classes to implement ` StateChangeListener ` instead of ` ChangeListener ` to align with the
added methods to manage callingPid and callingUid in ShadowBinder and ShadowBinderTest classes to enable testing and management of the calling process and UID
refactor ` ExpectationFailure ` to use ` Objects . equals ` and ` Objects . hashCode ` instead of ` AutoValue _ Expectation
bitcoinserializer : do n ' t log warn when no support for deserializing message
simplified the calculation of newW and newH in ImageReplacedElement . java to improve code readability and maintainability by redu
added support for escape characters in CoreMarkdownNodeRenderer and modified MarkdownWriter to handle newline characters correctly to ensure proper formatting of markdown literals and improve
added a neutral button to the alert dialog and refactored password sharing logic into a separate method to improve code readability and maintainability
refactor MAP _ ADDRESS , UNMAP _ ADDRESS , and UNMAP _ BUFFER to use a new MappingMethods class to improve code
changed method visibility from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to restrict access
added new options for Slider AM keytab and slider keytab directory and principal in LlapOptionsProcessor . java to enhance functionality by allowing
updated the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation functionality to enhance the graph view
added functionality to manage bind completion and shortcut existence in LauncherModel . java to ensure proper execution of binding tasks and improve error handling during loading
replaced boolean isFinished with a Set for data and isFinished in multiple operator classes to simplify the logic for determining if a node is finished
updated method signatures in IssueInterface and ValidationReport classes to include messageType and guid instead of error to improve clarity of method signatures and enhance validation
added a method to safe the provider name retrieval in RSAClientKeyExchange . java to improve error handling and provide clearer debugging information when the
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration in containerspecification
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and improve performance
removed conditional check for size in AggregateLifeCycle . java to streamline output formatting for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public in DefaultMapScaleBar . java to allow access to these constants
removed the @ Ignore annotation from CovariantOverrideTest . java to enable the test for covariant override functionality
refactor curly and qtype methods in Pattern . java to improve type handling and encapsulation to enhance code readability and maintainability by consolidating
( chore ) camel - core : improve reload strategy to load route from resource as xml
added space minimum and maximum settings for the X - axis in ScatterChart to improve visual spacing for better data presentation
updated SQL query syntax in ExpressionStringBuilder . java to ensure consistency in SQL syntax
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` Base
added a validation check for the UTF8 key in CheckEncodingPropertiesFile . java to ensure that the UTF8 key is present before proceeding
updated print statements in TestReproduceMessage . java and modified test annotations in LuceneTestCase . java to enhance output clarity and
added logging for long - press events on AllApps items in StatsLogManager and ItemLongClickListener to enhance user experience by tracking long - press
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure log is not null
added a condition to check if the sector preset is not null before showing the sector land info to ensure that the sector land info is only displayed
[ hotfix ] fix rawtypes warning in java . base
refactor Enum class to improve code readability to enhance maintainability and facilitate future development
fix npe in nearbyselectorconfig . buildnearbyrandom ( ) when distribution be not enable
remove temporarycache . removed _ service , use cachebuilder . expireafterwrite instead
mondrian : make newlayerpage visible to the user when create sqlview and wmslayerimport
initialize the _ availability variable to UNAVAILABLE to ensure a default value is provided for availability availability
added a new method ` isSyncFinish ( ) ` and modified ` processPBFTCommitMessage ( ) ` to accept a ` BlockCaps
fix : update gapic - generator - java version to 2.1 . 0 ( # 602 )
replaced ` _ freeSpaceReclaimDisabled ` with ` _ freeSpaceReclaimQ ` and updated related methods to allow dynamic adjustment of
changed KDC options from public to private static final in KDCOptions . java and added a new KDCDefaultOptions . java file to
modified the initialization of the writer variable in Json . java to ensure proper assignment of the writer before use
updated the formatting of the ` mentions ` , ` mentionsQuery ` , and ` fetchFavorites ` methods in ` ProfilePager . java `
renamed the method ` paintBackground ` to ` paintComponentBackground ` in the Slider class to clarify the purpose of the method
added a method ` valueFromClassConstant ` to retrieve the value from a class constant in ` Configuration . java ` to enhance flexibility in
added error handling for initialization in KafkaService to improve robustness by logging exceptions during service initialization
added " usr / share / zoneinfo / tzdata " to the RESOURCES _ TO _ ALWAYS _ ACQUIRE list in Instrumentation
allow ' auto - create - channels ' to be configure as ' default - output ' for default message endpoint .
added keyword handling in HTMLDocument and a corresponding test in TestDemo to enable indexing and querying of keywords in the HTML document
updated the SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added a conditional statement to initialize the ` _ addresses ` list in ` MemcachedSessionDataMapFactory . java ` to ensure ` _ addresses ` is
replaced instances of ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall .
refactor Builder class to improve code readability to enhance maintainability and facilitate future development
fix isbn2bibtex fetcher to work on the ebook . de . tools . isbn2bibtex
[ gr - 11313 ] do not wait for context to be active in polyglotimpl . enterifabsent ( ) .
added null check for text before firing data changed events in TextField . java to prevent potential NullPointerException when text is null
add a basiccategory method to the sentimentmodel so that it can be use by the rnn framework .
added trimming of whitespace in the SuffixURLFilter class to ensure proper formatting of URLs without leading or trailing whitespace
added a check to return early if the player is in godmode to optimize performance by avoiding unnecessary processing when the player is not in
ggb - 2269 fix : checkbox creation and text input dialog do n ' t work on desktop
updated constructors of LinkedHashMapCache and BoundedLinkedHashMap to accept a boolean parameter for access order to enhance flexibility in cache initialization by allowing different
removed unnecessary ` _ channel . close ( ) ` and ` _ buffer . length ( ) ` calls in ` ChannelEndPoint . java ` to
added null check for keyIndex in FixAcidKeyIndex . java and updated KeyIndexBuilder instantiation in OrcOutputFormat . java to
updated exception handling in DirectUpdateHandler2 . java to include Locale . ROOT to improve localization support for exception messages
add writenode to allow store check guard to be use during runtime .
[ gr - 4645 ] fix edge detection for exceptiondispatchblock . handler . startbci and exceptiondispatchblock . handler . end
bugfix : return 0.26 instead of 0.5 for variance > = 0.26
replaced ` BuildTarget . copyOf ( ) ` with direct assignment in ` AppleLibraryDescription ` , ` AbstractDependencyFileEntry ` , and
[ hotfix ] [ table ] fix typo in sqlrunner
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
rename ` knownApis ` to ` knownSdks ` and introduce a new method ` knownSdks ` to improve clarity and
use confidenceprogressindicator instead of progressindicator in createofferview
updated user agent header check from " Cling / " to " UMS / " and refactored UPNPService initialization to utilize
add a forceiterate option to the builder , fixes # 399
added a new constant VIEW _ TYPE _ MESSAGE and VIEW _ TYPE _ MESSAGE _ NOFLEX in CrowdfundingChatAdapter . java
replace ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL .
fix a bug in the grammar tree that be cause a bug in the grammar parser .
removed the ` canvas ` parameter from the ` insert ` method and introduced a new ` writePackEntry ` method to simplify method signatures and enhance
replaced the ` getVisitors ( ) ` method with a default ` apply ` method in ` RefactorModule ` and refactored the
added methods ` getChildByName ` , ` getChildByNameRecursive ` , and ` getChildrenByName ` to retrieve child elements by their names to enhance functionality
set the Content - Charset header to UTF - 8 in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of character encoding in
added SystemUiControllerFlags annotation and modified UI state management in TaskThumbnailView , AllAppsTransitionController , and SystemUiController classes to enhance
removed the private ClientConfigurationService field from IntrospectingTokenService . java to streamline the service implementation by eliminating unnecessary dependencies
updated the exception message in HiveRecordSet . java to include additional context about the Hive split to improve error reporting for better debugging and traceability
removed the ownerId field from NodeEntry class to streamline the code by eliminating unnecessary fields
rename ` ` backup . backup . rightafter ' ' to ` ` backup . backup . after ' '
added score calculation to the merge method in TextFragment . java to ensure that the fragment ' s score does not exceed its original score
removed the private Digester variable from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added a validation check for the maximumUnimprovedStepCount property to ensure that the maximumUnimprovedStepCount is non -
added a check to return early if there are currently opened editors to improve performance by avoiding unnecessary processing when no editors are open
replaced direct calls to ` verify ` with ` Mockito . verify ` in ` BDDMockito . java ` and added new methods
replaced ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` in ` PathScanner
updated the ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a direct call to ` sayHi2 `
fix race condition in abstractsplitbraingrotectiontest ( # 11301 )
updated logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for a non - null LogoutConfigurer before adding the filter to
[ giac ] make sure degree [ 1 , 2 , 3 ] = degree [ 2 , 3 , 4 , 5 , 6 ] be
added logging capabilities to DockerComposeContainer and updated related tests to enhance logging capabilities and improve test coverage for DockerComposeContainer functionality
specify the generic type in the testMapping method to improve type safety and clarity in the method signature
updated import statements in AmbariMetaInfoTest . java to streamline dependencies and improve code clarity
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to facilitate the creation of a ` Throwing
replace ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure that the method returns a true instead of
camel - platform - http : / text / post should end the response if the body be a buffer .
added methods to handle platform - specific path separators in MorePaths . java and updated path resolution in CopyStep . java to improve cross - platform
added a null check before iterating over authorizationContext to avoid potential NullPointerException when authorizationContext is null
replaced the ` loadLibraryOnlyIfPresent ` method with a new ` throwExceptionIfFail ` method in ` NativeLibraries . java ` to
updated SDK version from " 4611349 " to " 4514284 " and added new methods for speak and stop in ShadowText
queuetransactionlog : add hashcode ( ) and equal ( ) to avoid npe
added ` enableSqlWithoutProfile ` property and its getter / setter in ` JdbcEnvironmentProperties ` , ` JdbcEnvironmentRepository ` , and updated
added a try - finally block around the write method in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
use eventgenerator . fromfunction ( ) to avoid eclipse compiler warning .
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated the ` getThreadInfo ` method to include a ` STACK _ TRACE _ DEPTH ` parameter in ` CachedThreadStatesGaugeSet ` to
added a protected field ` prevTlogOnPrecommit ` in ` UpdateLog ` and modified sleep duration in ` LeaderTragicEvent
update FastAsyncWorldEdit - P2 - V6 to FastAsyncWorldEdit - 1.17 to align with the latest version of the
refactor file existence checks and add null check for inputDataFilePath to improve robustness and prevent potential NullPointerExceptions
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored ` TriangulationHelper ` to use it to
updated method signatures to use ` identityZoneId ` instead of ` principal ` and ` identityZoneId ` to improve clarity and consistency in
refactor methods in SpanCollector for improved performance to enhance efficiency of span collection operations
added a null check for the getCurrSession ( ) method in AuthorizationFilter . java to prevent potential NullPointerException when accessing the session information
refactor TransactionIsolationLevel class for improved transaction management to enhance performance and maintainability of transaction isolation
rename method from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java `
added thread name setting for the current thread in TestSession . java to improve clarity of thread identification during testing
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
simplified the return statement in LauncherExtension . java to improve code readability and efficiency
added a new OverviewToAllAppsTouchController to the RecentsUiFactory to enhance the functionality of the OverviewToAllApps
replace the method ` scaleHotseatWithWorkspace ` with ` getHotseatScaleAndTranslation ` in ` LauncherState ` and
added a check for JUnitRule in the DefaultStackTraceCleaner and created a new test case in StackTraceFilterTest to ensure that stack trace
replaced direct buffer handling with direct buffer manipulation in MappedResizeableBuffer . java to improve efficiency and clarity in memory copying operations
refactor balance listener management in DepositListItem . java to improve clarity and maintainability of balance listener management
updated color conversion logic in RealisticRenderer to handle different edge modes to ensure correct color representation based on the edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor . java to prevent potential NullPointerException when httpClientResponse is null
remove patternutil . checkpattern ( ) from gl200protocoldecoder ( fix # 399 )
added logging for last playback time in FullDetailsActivity . java to improve traceability of playback events for better debugging and monitoring
added a method to check if an element is an elliptic node and refactored related logic in SpanishXMLTreeReader . java
mondrian : fix bug in installitem when language = iso be not specify .
updated the ` ReactiveLoadBalancerClientFilter ` to set the ` overrideScheme ` based on the security status of the service instance to ensure that the
[ hotfix ] fix checkstyle violation in defaultmessagestore
[ gr - 21212 ] fix compiler warning in debuginfobase . java .
replaced custom Correspondence implementation with a lambda expression to improve code readability and reduce boilerplate
updated locale support checks from US locales to EN locales in JRELocaleProviderAdapter . java and LocaleDataMetaInfo - XLocales . java
removed null check for redeemData in LocalTransactionSigner . java to simplify code logic for better readability and maintainability
add minecraftforgeclient to allow custom texture for block render .
added a return statement to TxCacheDB . java to ensure proper termination of the method execution
updated import statements from ` com . sun . xml . internal . ws ` to ` jdk . internal . org . objectweb . asm
refactor FastDictionary class for improved performance to enhance efficiency and reduce memory usage
improve handling of session . getstatus ( ) in nioconnection . close ( ) .
updated FlightEvent parameters for GROUND _ HIT , SIMULATION _ END , and TUMBLE events in FlightEventsTest
fix : upgrade grpc to v1.26 . 0 ( # 2269 )
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the namespace declaration is
add displayablefsname and displayablecourseid to instructorfeedbackresultsspagedata and instructorfeedbackresultsspagedata .
added shortRules to DefaultPasswordValidator and introduced validation for alphabetic and numeric sequences in long passwords to enhance password validation flexibility by allowing
danielwagnerhall : increase timeout for remote control log capture to 20 second
removed JUnit import and annotation from ProxyClassSerializationTest . java to streamline test code by eliminating unnecessary dependencies
updated thumbnail parameters in DLNAMediaInfo . java to use " format = bgr24 " instead of " format = bgr
remove speculativeguardmovementphase from truffle runtime compilation support .
added checks for the presence of the AUTHENTICATION _ MANAGER bean definition and its alias in the AuthenticationManagerBeanDefinitionParser to ensure proper
updated ForwardedRequestCustomizer to handle both Host and PortSetHostPort instances and modified host handling logic to improve flexibility in handling forwarded requests
added a line to set the length of the StringBuilder to zero in ConsoleReader . java to ensure that the StringBuilder is properly initialized before use
changed the access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access the list of allowedRoles , disallowedRoles ,
update OpenIDE - Module - Specification - Version and OpenIDE - Module - Specification - Version in multiple files to ensure compatibility with the latest Open
hbase - 20536 set netty tl wrap size for ssl connection ( chaoyu tang )
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to remove inheritance from TestCase and add new test cases for tokenization to improve test coverage and ensure correct exception
refactor protocol binding logic in OpenSamlAuthenticationRequestFactory and add unit tests in OpenSamlAuthenticationRequestFactoryTests to enhance flexibility in protocol
refactor DepthController to use AttachedSurfaceControl for transaction handling to improve performance and ensure proper application of surface control transactions
updated version return value from " main " to " 2.5 . x " to ensure compatibility with version 2.5 . x
phoenix - 5249 change accesscontroller . hassomeaccess ( ) from write to create for prepreparebulkload and pre
updated subList method parameters in TsFileManagement . java and modified measurement schemas in MergeMultiChunkTask . java and MergeTaskTest . java to
camel - 16400 : fixed genericfileconverter to support java . io . file
added a ` build ` method to ` DefaultShardManagerBuilder ` and modified the ` build ` method in ` DefaultShardManagerBuilder ` to
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
rename the table from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the table ' s
added a condition to check if the response completion is marked before retrieving the reference to ensure that the response is only processed when the completion is marked
added a condition to check if the giver is a user student before comparing the response ' s giver to ensure that the giver is
added checks for linked profiles and modified ICC _ ColorSpace initialization in BMPImageReader . java to ensure proper handling of linked
updated the location parameters for setSimpleCuboid calls in ClassicPlotManager . java to correct the coordinates to ensure proper functionality of the plot
pmd : wait for pmd status before check the file in this package
refactor gridPresenter initialization and introduce a new method for setting grid sizes to improve code readability and maintainability by encapsulating grid size
changed return values from false to true in ContributionsListFragment . java to ensure that the method returns true for successful operation
added a test for skipping range queries in DistinctPrefixFilterIT . java and modified the filter logic in BaseResultIterators . java to
pdfbox - 4892 : add test case for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to enable retrieval of the last modified timestamp of
added validation for the " metaTable " property in HiveIcebergStorageHandler . java to ensure that metadata tables are valid before proceeding
change cashdepositform to use combobox instead of textfield
changed the catch block from IOException to Throwable in WriteFlusher . java to handle a broader range of exceptions
added a new boolean variable ` mStartedEnterAnimation ` and modified the animation logic in ` IconRecentsView . java ` to improve animation
added a new field ` activeKeyId ` in the ` UaaConfiguration ` class to store the active key identifier for better configuration management
rename ` ` send a mail ' ' to ` ` send a mail with several url attachment ' ' and ` ` send html ' ' to
changed the ` isActive ` variable from ` boolean ` to ` volatile boolean ` to ensure thread - safe access to the ` isActive ` variable
fix ( broker ) : order by should be asc rather than desc
cast to charsequence to avoid java 1.5 compiler warning
added a check for the ownCloud application name in the conditional statement to ensure that the application name is correctly validated before proceeding
hbase - 11343 set hbase . rootdir . perms automatically when hbase . security . authentication be set
update locale retrieval from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` Javax
refactor Instant class for improved clarity to enhance maintainability and readability of the code
updated the ` getStateFormat ` method to return a default value of " 2 " and changed the default state format from an integer to a String
simplified the logging statement in CentralAuthenticationServiceImpl . java and modified the condition in AbstractTicket . java to enhance code readability
pdfbox - 4892 : ignore illegalargumentexception , a suggest by valerybokov
removed unnecessary whitespace in AbstractFileResourceSet . java to improve code readability and maintain consistency
added pathtranslator to pluginparameterexpressionevaluator to align file to base directory
move protobuf coders to extension package and add coderregistrar
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer . java and added a new test case in HqlQuery
refactor generateLaunchLugFromRASAeroRailGuide and generateRailButtonFromRASAeroRailGuide methods to include
removed the getNonceFactory method from BitmexStreamingExchange . java to streamline the code by eliminating unnecessary functionality
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] set default timer interval to default in driver conductor test .
changed the default value of initializeLoadedClasses from true to false in FastClasspathScanner . java and ScanSpec . java to disable loading of loaded
added a call to grab focus on the searchField in FullTextSearchPanel . java to ensure the searchField is properly initialized before use
refactor NioParams initialization in TlsConnectionLogging . java to improve code readability and maintainability
added a comment to clarify the purpose of the assertion in StatementTest . java to improve code readability and understanding of the test
updated assertion message formatting in TestSolrConfigHandler . java to include the server ' s URL to improve clarity of error messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests . java ` to
updated density filtering logic in FilterResourcesStep . java to improve accuracy of drawable matching based on density
added a method to retrieve the button UIID and updated UIID updates to use this new method to improve code readability and maintainability by
removed display metrics import and modified rotation condition in RecentsAnimationDeviceState . java to streamline code logic for better readability and maintain
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java to implement tests for array
added import for LuceneTestCase . AwaitsFix and annotated ReplicationFactorTest with @ AwaitsFix annotation to address issue SOL
fixed - npe be throw in redissonexecutorservice if scheduleatfixed method return null
simplified the condition for updating credentials in FileDownloader and FileUploader to enhance code readability and maintainability
added null check and closing logic for StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerException
[ java ] fix npe in netmetrics . getconnectionnum ( ) .
added nonce parameter and assertion for token claims in TokenMvcMockTests to ensure the correct nonce is used for testing purposes
refactor ChartEditor , ChartEditorFactory , ChartEditorManager , DefaultChartEditor , DefaultChartEditorFactory , DefaultChartEditorManager , Default
added width and height settings for formLayeredPane in Form . java to ensure proper layout behavior for the form layered pane
added maxY method to BrowserContentPane to calculate the maximum height based on the owner ' s height to ensure proper height adjustment based on the owner
modified the ` openDatabase ` and ` openSharedDatabase ` methods to return a boolean indicating success or failure to provide feedback on whether the database
refactor Docker command access from private to public in DockerTestUtils . java and Platform . java to improve accessibility and maintainability of the
added a null check for the input stream before reading in the initialize method to avoid potential NullPointerException when the input stream is null
added a folder leave behind color attribute and modified the drawLeaveBehind method to accept a color parameter to enhance the visual appearance of the
show an error if the flutter plugin do n ' t work properly with canary version of android studio ( # 5373 )
apiresponseserializer : fix npe in case of invalid identityproxy table name
removed modulePersistEnable and modulePersistDisable lists from StartArgs . java to streamline argument handling and improve clarity in module persistence management
updated argument check from ` args . length = 1 ` to ` args . length > = 1 ` in ` GeminiMarketData
replaced HashSet with LinkedHashSet for storing questions in VerifyPasswordResetRequestAction to ensure insertion order is maintained when storing questions
add a test case to verify the behavior of a realm with a single role .
updated the exclusion list of setup JSP files in AuthCheckFilter . java to include specific setup JSP files for improved security and organization
fix scheduler to not eagerly execute runnables enqueued while execute other runnable
changed method parameters from String [ ] to varargs in AbstractCommandRunner , AuditCommandRunner , and CommandRunner classes to allow for more flexible
modified character reading logic in XMLParser . java to handle end - of - stream scenarios to improve robustness by preventing unexpected end - of
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to ensure that text is
added pivot properties for the arrow in DeepShortcutsContainer to ensure proper positioning of the arrow based on icon visibility
fix checkstyle issue in util / jabref / fileupdatemonitor . java ( # 5649 )
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter for better control over the refresh behavior to enhance the functionality by allowing
pdfbox - 4892 : use class name instead of ` ` org . apache . pdfbox . extractttffonts ' '
updated InternetAddress constructor to include a boolean parameter in EmailFormatSpecifier . java and HostnameFormatSpecifier . java , and added error handling in Hostname
refactor references to ` this ` for consistency across multiple classes to improve code readability and maintainability
modified the maximum document ID handling in the SizeBasedDocIdSet and SizeBasedDocIdIterator classes to improve clarity and correctness of document ID management
updated the ` promptToOpenFile ` method to accept an existing file name and modified the file chooser logic to include an additional parameter to
updated sleep delay and refactored page counting logic in AppsCustomizePagedView . java to improve responsiveness and maintainability
updated FlightConfiguration . java to enhance component transformation logic and adjusted expected length in FlightConfigurationTest . java to improve component rendering accuracy and
( chore ) camel - micrometer : fix test failure on window
updated DateTimeFormatter to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3442 ] remove permission from metadata when convert to dspaceobjectconverter
added a test method ` testMissingRequired ` to the ` StarTreeConfig ` class to ensure that ` StarTreeConfig . Builder
camel - 16400 : camel - spring - dsl - add support for dynamic recipient list to routebuilder .
refactor InlineLayoutBox and HoverListener classes to improve repainting behavior based on painting information to enhance the visual representation of layout elements
refactor authentication service handling in AuthenticatorActivity to utilize OperationsService instead of DetectAuthenticationMethodOperation to improve service management and facilitate
