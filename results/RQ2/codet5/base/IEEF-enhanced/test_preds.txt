replaced the instantiation of SocketAppender to set remote host and port explicitly to simplify the SocketAppender initialization and improve clarity in setting remote host
refactor header handling in BasicAuthPlugin to use a dedicated method for setting prompt headers to improve code readability and reduce duplication in header management
replaced ` RecordDescriptor . msgLengthOffset ( recordIndex ) ` with ` recordIndex ` in ` ManyToOneRingBuffer . java `
cloudstack - 8293 : fix npe when vm . overcommit . ratio be not specify in the config file
added a flags field and methods to manage anti - aliasing in the ShadowPaint class to enhance flexibility in managing anti - aliasing behavior
updated the title of the MassSetFieldsDialog from " Set / clear / append / rename " to " Manage field names & content "
do n ' t fail the detection test if eclipse be not compile .
do n ' t try to digest auth if the realm do n ' t have a scheme
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` class to utilize it to provide a listener for handling socket
refactor conditional statements in OrcEncodedDataReader . java for clarity to improve code readability and maintainability
updated filter condition to check if the thing is enabled before processing to ensure that the handler is only processed when the thing is enabled
added null checks before modifying policy management in AuthorizeAdminServlet to prevent potential NullPointerExceptions when the resource is not initialized
updated assertions in tests to match date separators correctly for Java 9 and later versions to ensure accurate JSON representation of date formats in different Java versions
added a new JSON object to store and log the dag ' s description in TezTask . java to improve debugging capabilities by providing detailed context
added methods to retrieve heap time and tag time in ` ComputedSummary ` and ` HprofHeap ` classes to improve accuracy of heap dump
refactor upload count retrieval to use CommonsApplication instead of a custom RxJava2Tasks class to improve code organization and maintainability by centralizing
removed unnecessary check for multi - threaded lock mode in MVTable . java to simplify the lock logic for better readability and performance
fix ( core ) : fix commitlog offset check ( # 5396 )
updated folder opening logic to handle cases where associated folders are not open to ensure proper management of folder states when associated folders are not open
added a test method to verify sorting of PGProperty names to ensure that PGProperty names are sorted in ascending order
updated the HOVER _ MESSAGE _ EVALUATION _ POINTS _ GEN constant to clarify the purpose of the constant
updated method parameters from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget . java ` to improve type safety and simplify intent
updated assertion in RequestBuilderTest to check for multiple HTTP methods to improve clarity and accuracy of error messages for better debugging
replaced instances of ` NearbyMapFragment ` and ` NearbyListFragment ` with ` NearbyListFragment ` and
[ hotfix ] fix typo in constructor of flatprofilecontainerfree
added a new boolean property ` sendZeroAnomalyEmail ` to the ` EmailConfiguration ` class to control the sending of zero anomal
[ hotfix ] [ kafka ] fix npe in kafkaconsumerbase # open ( )
added methods to retrieve user and geofences from the database to enhance data retrieval capabilities for user and geofences
added a constructor to the BlockingResponseListener class that accepts a maximum length parameter to enhance flexibility by allowing customizable maximum size for response processing
refactor ` memberBroadcastsReceived ` method to accept a byte array instead of a ` ChannelData [ ] ` and update related logic to
replaced System . out . println with logger . info and added a try - finally block around the snapshot fragment sending process to ensure proper resource
updated URL in assertions in LoginSAMLAuthenticationFailureHandlerTest . java to remove leading slashes to ensure consistency in URL formatting
[ hotfix ] fix checkstyle violation in configmetadataprovidertest
updated import statements and variable names in ListFragment and SnoozeActivity to improve code clarity and maintain consistency in naming conventions
added a private static class AcceptAllFilter and refactored directory stream filtering to use it to improve code readability and maintainability by central
refactor JdbcTestDataSet class for improved readability to enhance maintainability and facilitate future updates
do n ' t swallow classnotfoundexception when lookup type in hotspot
replaced tag validation logic in ` GenericContainer ` with a new ` DockerImageName ` utility class to improve error handling for invalid Docker image names
updated the login error message from " login _ failed _ username " and " login _ failed _ password " to " login _ failed _ wrong
replaced multiple instances of setAutofocus ( " autofocus " ) with setAutofocus ( " autofocus " ) across multiple
added tests for zone - aware SAML configuration in ` SamlIDPRefreshMockMvcTests . java ` to ensure correct behavior of zone -
added checks for non - empty list and non - numeric values in ComparableVersion . java and updated test cases in ComparableVersionTest . java to
replaced topLeftMode ( ) and topRightMode ( ) methods with topRightMode ( ) and bottomRightMode ( ) , and
moved ` ParallelUniverse ` and ` ParallelUniverseTest ` from ` org . robolectric ` to ` org . rob
refactor constructor type handling in LocalCacheFactory and NodeFactory to improve code readability and maintainability
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve visual
added methods to draw self - loops and edges in ProcessingPreview . java to enhance visual representation of self - loops in the graph
updated references from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 0
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to clarify the method ' s
set the translation Y - coordinate of the drag handle indicator in AllAppsTransitionController to zero to ensure the drag handle indicator is fully visible during
updated logging statements in CollectionViewer , CommunityViewer , and ItemViewer to improve visibility into collection , community , and item views
hive - 16405 : clarify the default value of hive . optimize . ppd for push filter down in the operator tree
added an assumption to the ScanningAppProviderRuntimeUpdatesTest to skip tests on OSX to address potential issues with the build server due to
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser . java and conditional diagnostics in TestOSGi
act - 1342 : fix for act - 1343 : executionentitymanager . updateprocessinstancelocktime ( ) throw optimistic
refactor transaction handling logic in Transaction . java to improve code readability and maintainability
replaced ` @ AddToRuleKey ` with ` @ ExcludeFromRuleKey ` and updated annotations in ` GenruleBuildable . java
simonstewart : fix issue where firefox can not be launch on window .
replace ` putIfAbsent ` with ` put ` for adding dynamic columns to ` colFamToDynamicColumnsMapping ` to improve efficiency by avoiding
[ hotfix ] [ runtime ] remove rawtypes suppression in hadoopoutputcollector and hadoopTuple unwrappingiterator
added conditional logic to handle view types in MetaDataEndpointImpl . java to ensure compatibility with client versions less than MIN _ SPLITTABLE _ SYSTEM
update the googleid of the student when an email be add to the instructor
replaced the import of TestCellReference from ` org . apache . poi . xssf . util ` to ` org . apache .
added a hardness check to the mobility condition in LensPiston . java to ensure that the block ' s hardness
added a new file LongPointerPressTest3049 . java for testing long pointer press scenarios with network error handling to demonstrate
remove trufflefunctioninlining option in favor of trufflefunctioninlining .
refactor null checks to use a ternary operator for better readability in BaseBuilder . java and XMLConfigBuilder . java to improve code
simplified condition in ListBlockParser and added a new test for deeply indenting lists in SpecialInputTest to improve code clarity
added a new abstract class AbstractOptionalAssert with methods ` isPresent ( ) ` , ` isEmpty ( ) ` , and ` contains ( ) `
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests related to issue # 1070
[ wasm ] remove unnecessary call to tojstring in testcaselogger .
updated the closing brace formatting in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the media format is a video format to ensure that web subtitles are only processed for video formats
added Security . setProperty ( " jdk . tls . disabledAlgorithms " , " " ) to ComHostnameVerifier and JavaxHostnameVerifier
server : do n ' t allow vm to be start / stop when the vm be in zonetype zone .
updated logging statements in Driver . java and QueryResultsCache . java for improved clarity and consistency to enhance readability and maintainability of
added functionality to skip model updates after managed dependencies in the management dependencies to ensure that changes to the model do not affect the POM source code
added a test for sending PendingIntent requests with a request code in ShadowActivityTest . java and implemented the send method in ShadowActivity . java
updated logging messages and introduced a method to create overlay graphics in RocketFigure3d . java to improve logging clarity and enhance rendering
added synchronization to the controllerListeners list in HydrawiseAccountHandler to ensure thread safety when accessing shared resources
solr - 9893 : disable solr - 9893 test that do not work with java 9
updated year retrieval to use ` ChronoField . YEAR _ OF _ ERA ` instead of ` Math . abs ( ) ` and refact
check for null connection before call disconnect ( ) to avoid potential npe .
added " cur _ ws _ commit _ id " and " cur _ ws _ commit _ id " to the SQL query in TxnHandler .
replaced ByteChunk with ByteBuffer for handling buffered data to improve memory management and error handling in the BufferedInputFilter
added a new method ` toSync ` in ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to facilit
added ActionGraphBuilder to multiple compiler factory classes and updated related methods to utilize it to enhance dependency management for ABI jar rules in the
danielwagnerhall : add test for hidden file input in upload
removed duplicate try - catch block for creating tables in SQLManager . java to improve code readability and maintainability
added a check to return the local Maven directory if the file does not exist to ensure that the application returns the correct local Maven directory when the
do n ' t show the algebra label if it ' s hidden
fix : fix npe when getmetadata ( ) return null
replaced ` setFlags ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` addFlag ( C . BUFFER _ FLAG
do n ' t sort cache instance by id if it be already sort
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) " to provide
added a null check for backupFolder before logging the expiration date to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that demonstrates the use of ` Array . newInstance ` with a
added @ AddToRuleKey annotation to the toolType field in ClangCompiler and GccCompiler classes to ensure the toolType field is
replace hardcoded timeout values with a constant PINCODE _ TIMEOUT to improve code readability and maintainability by avoiding hardcoded values
set isSampled ( ) to true in PrometheusMeterRegistryTest and PrometheusExemplarsSample to enable sampling of metrics for impro
removed @ Ignore annotations from multiple test classes to ensure compatibility with MongoDB server requirements in tests
( chore ) camel - jms : clean up unused import
updated the condition from checking if the table name starts with an empty string to checking if the table is an artifical table to ensure proper
changed file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer . java and LaunchMapper . java to ensure correct
updated null and empty checks for session attributes in MongoSessionManager . java to ensure proper handling of session attributes and avoid potential null pointer exceptions
replaced surfaceHolder . setFixedSize ( ) with surfaceHolder . setSizeFromLayout ( ) in CameraSurfaceView . java to improve surface
replaced direct reference to ` _ stopping ` with a variable ` stopping ` in ` AbstractConnector . java ` to improve clarity and ensure
removed unnecessary whitespace in the WebSocketClientHandshaker constructor to improve code readability and maintain consistency
camel - 15836 : camel - core - optimize defaultmessagehistory to reduce object allocation
[ java ] fix delayedmonopublishertest . testonerror ( ) to work with jdk 11
replace assertTrue with a conditional check for WebSocketHandshakeException to improve error handling by providing a clear failure message
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener directly to simplify the code structure and improve readability
replaced variable names from ` theHandler ` to ` handler ` for consistency throughout the code to improve code readability and maintainability
int - 1193 xpath router : add ' default - output - channel ' attribute to the < xpath - router > element
changed the cacheSeconds field type from ` int ` to ` String ` and added a ` @ DurationCapable ` annotation to enhance flexibility
updated OpenAPI version from 3.0 . 0 - rc1 to 3.0 . 0 in multiple Java files to ensure compatibility with the
removed the append method call from ByteBufferPool . java to simplify the code by eliminating unnecessary functionality
added a method to detect and print warnings about the presence of " alt - rt . jar " in the boot class path to improve error handling
updated SQL user deletion statements and modified test assertions in JdbcScimUserProvisioningTests . java to ensure consistency in user identification and improve test accuracy
replaced the use of ` Arrays . asList ` with a ` List ` for options in ` FlightRecorderProfiler . java ` and added
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if the content view has content before processing the buffer in HttpParser . java to ensure that the buffer is not empty
refactor AtmosEndpoint class to improve code readability to enhance maintainability and facilitate future updates
added additional target method checks for " println " , " printf " , and " print " in Java2TypeScriptAdapter . java to enhance
added a new test class ` TestCapacityUntilGCWrapAround ` and native methods for managing metaspace capacity in ` WhiteBox ` to ensure
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the calculation of the end time in SamplingStatCalculator . java to ensure the end time reflects the current time of the resource
added unit test base on user forum issue
pdfbox - 4892 : do n ' t throw illegalargumentexception when icc _ profile be invalid
fix botania rod picking and terra picking on the client side
updated JoobyModule to bind Config and Environment classes to their respective instances and added a conditional check in SpringModule to enhance bean registration
use container . getparentclassloader ( ) instead of thread . currentthread ( ) . getclassloader ( ) to get the parent class
bug 60536 - add additional namemap entry if they be already define . jmeter . nameupdater . properties
added a boolean flag ` started ` to the ` EllipsoidRegionSelector ` class to track the start state of the ellipsoid region selection
updated URLs in JavaSEPort . java to use HTTPS instead of HTTP and set a default Codename One com protocol to enhance security by
[ geos - 7013 ] wfs getfeature should throw illegalargumentexception if sortby = ' ' ' null ' '
updated null check for grantTuple [ 0 ] from ` equals ( ) ` to ` null ` to ensure proper handling of null values in the
added imports for GraphicsConfiguration , GraphicsEnvironment , and Transparency , and modified image handling in DiagramGenerationTest . java to enhance image compatibility
add a check to prevent fml from be reinstall when sideddelegate be null .
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
test : fix flaky testlocktest . testlock
added methods to calculate whole - word tokens and join tokens in StringUtil . java to enhance string manipulation capabilities in the application
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 533 - do
refactor command handling and highlighting logic in SystemHighlighter . java to improve command parsing accuracy and enhance highlighting functionality
update version from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING
update buffer position to use dimensionSize instead of a fixed index to ensure correct buffer size is set for better data management
added support for shell drag - and - drop functionality in QuickstepTestInformationHandler and SystemUiProxy to enhance drag - and - drop functionality
[ log4j2 - 1343 ] fix test that fail on java 7
added " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to TestCipher . java to support additional
update description text from ` getDescription ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java ` to ensure
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for better data representation
refactor HqlQueryRenderer to handle reserved words and schema scoping to improve query parsing accuracy and support schema scoping in function names
updated error message from " d is null " to " s is null " in SubscriptionHelper . java to improve clarity and accuracy of null
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
added a new parameter ` indexStartsAtAtOne ` to the ` offsetStreamIndex ` method and updated its usage throughout the ` Video
tika - 697 -- add mime type test for oleewere / oleewere / oleewere / ole
[ hotfix ] [ table - common ] remove useless method getMonotonicity ( ) from flinksqloperatortable
added equals ( ) , hashCode ( ) , and toString ( ) methods to OneTimeTokenAccount and OneTimeToken classes using Apache Commons
added a condition to check if the assistant is not launched when fling to ensure fling only occurs when the assistant is not launched
added a new file SolarisShortDSA . java that implements key pair generation and verification using DSA to demonstrate the
added a method call to toggle the search label to disable search functionality for improved user experience
cloudstack - 7803 : check if the volume be lock before try to create a snapshot .
replaced the initialization of ` mConnection ` with a new ` DetailsServiceConnection ` class and modified its unbinding logic to improve resource management
replaced the handling of SSLPeerUnverifiedException with an AtomicReference to capture the request failure to ensure that SSLPeerUnverifiedException is
removed the equals method from the ConjunctionScorer class to simplify the comparison logic for Scorer objects
added a null check and error logging when removing a colliding item to improve error handling during the item removal process
improve leader election wait time ( # 11977 )
renamed variable ` desiredSize ` to ` desiredSize ` and modified cache size handling logic to improve code readability and reduce redundancy in
updated API paths from " / api / v2 " to " / api / v3 " and modified order properties in CryptoFacilitiesAccount
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if the list is empty
drill - 8416 : release empty dictionary page when there be no data to read
updated method signatures and logic in SerumStreamingService . java for handling subscription types and improved error handling to enhance robustness and provide clear
add a config to disable the charging animation when an item be charging on a mana pool .
[ java ] do n ' t hang cluster node restart test when egress subscription be not connect .
updated exception handling in WaitForHelper to log errors instead of ignoring them to improve error reporting and provide clearer diagnostics for interrupted exceptions
updated assertions in DefaultServletTest to use assumeTrue for directory creation to improve test reliability by ensuring filesystem support for question dirs
updated the injection order for dialog and open - screen styles in ResourcesInjectorFull . java to ensure consistent styling across the application
refactor ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` for
updated method calls from ` other . x ` , ` other . y ` , and ` other . z ` to ` other . getX (
added final modifiers to the CacheEntry class and updated return statements in LongConcurrentLRUMap . java to enhance immutability and clarity of
replace direct addition of single element to resourceConfiguration with regex escaping to ensure proper handling of special characters in resource identifiers
modified FileCredentialsCache to retrieve the KRB5CCNAME environment variable and updated EmptyCC to accept command - line arguments for the credentials cache
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
wait for fast sync downloader when there be no peer available .
danielwagnerhall : fix npe in webdriverservlet
do n ' t expand ` ` areequal [ x , y ] , ` ` segment [ x , y ] ' ' format expression if
added a condition to clear pending rendering operations if the implementation is minimized to optimize rendering performance by avoiding unnecessary operations when the view is minim
do n ' t fail the test if the deadline be too long .
fix write - behind for continuously update key
set the icon of a JLabel to null in GroupTreeCellRenderer to improve visual clarity by removing unnecessary space
updated test methods to differentiate between default and nonstrict redirect matches to improve test clarity and ensure proper handling of strict matching behavior
added IO . close ( serverSocket ) and refactored test methods in ShutdownMonitorTest . java to improve resource management and enhance test coverage
replaced the calculation of ` moveSize ` and refactored the chunk fill rate handling logic in ` RandomAccessStore . java ` to
refactor field retrieval and serialization logic in Json . java to improve code readability and maintainability
[ hotfix ] [ runtime ] move componentclosingutils to flink - runtime . operators . coordination
delete vm when vm transition to error state
do n ' t set ipv6 range if ipv6 address be not specify in the ipv6 range .
rename ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderBeanManagerConfigurer ` and update references accordingly to improve clarity and
increased the timeout duration for the leader retry method from 15 seconds to 30 seconds to allow more time for the leader retry operation to complete
added logging functionality and improved error message handling in multiple parameter classes to enhance debugging capabilities and provide clearer error messages for invalid parameters
update image drawing coordinates from x and y to - x and - y in URLImage . java to ensure correct positioning of images in the
update field name comparison from solrDocument1 to solrDocument2 to ensure consistency in field name comparison between documents
replaced multiple try - catch blocks with a dedicated method ` isItemZeroHighCardDim ` to improve code readability and maintainability by
[ hotfix ] [ stream ] add streamexception to streamtaskexception
refactor tag processing logic in Preprocess . java for improved clarity and efficiency to enhance code readability and maintainability by reducing
reformatted the ` read ` method in ` MessagePack . java ` for consistency to improve code readability and maintainability
added a new annotation interface named Mapper in the org . apache . ibatis . annotations package to provide a standardized way to define a
do n ' t try to encode an empty extension list when parse a bundle with no extension .
updated string splitting logic in Artifact . java and LibraryManager . java , and added null checks for child and metaEntry in LibraryManager . java
added alias " node _ popup / node _ popup _ scripting " to the entry navigation menu to enhance the functionality of the scripting menu
updated constants for HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN in OverviewActionsView .
camel - jms : fix findbugs warn in camel - jms
[ hotfix ] fix checkstyle violation in io module
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove obsolete code that is no longer needed in the project
updated GzipHandlerTest to use final variables and added a new MicroServlet for handling HTTP headers to improve code clarity and ensure proper handling of
fix race condition in onsubscriberedo . repeat ( ) and onsubscriberedo . distinct ( )
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance debugging capabilities and provide clearer insights during component
add dspace - config to enable oai to load config from servlet
hbase - 22387 fix hbase - 22387 addendum fix hbase - 22387 ( addendum )
camel - 17836 : camel - jbang - enable / disable jmx in cameltestsupport and cameleventnotifynctest
replaced hardcoded ' / ' with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation . java ` and
added methods to find YARN binary and Hadoop home paths in HiveConf . java and implemented application information in RemoteSparkJobMonitor . java
added support for database name " maria " in addition to " mysql " to ensure compatibility with multiple database types
[ hotfix ] [ test ] fix log issue in masterwalmanager
added a new file ` ExecuteAndReturnStringTest . java ` with a test class for validating network error handling to ensure that the application handles
added a new file ` InvokespecialInterface . java ` implementing an interface and its implementation to demonstrate the invocation of dynamic methods
refactor EvictingBoundedList class for improved performance to optimize resource management during evicting operations
do n ' t use turncosts = true by default
added a check for ` style . backgroundDisabled ` in the ` SelectBox ` class to ensure ` selection ` is non - negative to prevent
added a null check for the method name in RpcServer . java to throw an exception if the method name is null to ensure proper error handling
updated hotseat cell size calculations to include border spacing to improve layout responsiveness by incorporating border spacing
replaced the method of constructing the partition name string with a direct call to ` values . get ( " partitionColumnIndex " ) ` to simplify
fix serialization of namedtaskdecorator and taskdefinition with version 4.1 .
updated the directory reference from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
changed the default value of the ` equal ` variable from ` false ` to ` true ` and modified the comparison logic to ensure consistent behavior when
updated UnicodeToLatexFormatter to conditionally append Unicode code points and added a new test for mathematical italic epsilon to ensure accurate
added null check and trimming logic for ISO control characters in OAIDCCrosswalk . java and Item . java to ensure proper handling
danielwagnerhall : fix a bug in the selenium - backed selenium .
added a clear button to the DataBrowser class and modified the BookmarksPanel to exclude the BOOKMARKFILE extension to enhance user experience by
refactor base URL creation in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for better URL handling to improve code readability and maintainability
updated date assertions and error messages in SoftAssertionsTest . java for improved clarity and consistency to enhance readability and maintainability of
modified the ` adaptOrders ` method to include a ` reverse ` parameter for order adaptation to improve order management by allowing the order adaptation
delombok should print ` ` var ' ' instead of ` ` print ( ` ` var ' ' ) if the name of the variable
danielwagnerhall : remove unimplemented import from test
updated Configuration initialization to set the default value to false and removed unnecessary debug logging for Hadoop configuration properties
replaced the call to ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha )
added unit test base on user forum issue
use context . getormodename ( ) instead of system . getproperty ( ... ) .
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified ` ShadowICU ` to handle different
added color information to the PlotSquared class and updated the color map to use a predefined number of color values to enhance the visual representation of color
added ZuulProperties to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enable configuration of Zuul properties
tika - 3352 -- fix unit test to ensure that the default timezone be utc .
added new files ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to include a method to retrieve the build time
updated the calculation of xDist to use the absolute value of mScroller . getCurrX ( ) to ensure accurate positioning by using
deleted file GUIRWTester . java from the project to remove unused or redundant code from the project
removed the @ NullableDecl annotation from the method signature of ` countPlaceholders ` in ` LazyMessage ` and ` StandardSubjectBuilder ` to simplify
updated error message format in TestStream . java to include a placeholder to improve readability of error messages for better debugging
rename package of templateparser from ` templateparser ` to ` markup ` . thymeleaf / thymeleaf / thym
added unit tests for XPath string evaluation in XPathTest . java and modified XPathTest . java to use XPathFactory to improve test coverage for XPath
added nullable annotation to FutureUtils . java to improve code clarity by indicating that certain fields can be nullable
add warn message when invokedynamic be not resolve during call - graph construction
updated email addresses from " myFakeemail @ gmail . com " and " myrealemail @ gmail . com " to " my
updated HTTP response handling in HttpConnectionTest . java to return " HTTP / 1.1 200 " instead of " HTTP / 1.1
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a default
added default implementation of the serviceClientConfiguration method in multiple classes to provide a default implementation that throws an exception for unsupported operations
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
replace long time representation with Instant for startTime and stopTime to improve time accuracy and consistency in time representation
added versioning checks and updated option handling in LibMediaInfoParser . java to ensure compatibility with the latest media info library versioning and improve
added proxy management for IdeaDependency instances in ProjectReader . java to enhance dependency management capabilities within the project
added a new file ` SerialHeap . java ` and updated ` CollectedHeapName . java ` and ` Universe . java ` to
added multiple @ SuppressWarnings ( " serial " ) annotations to prevent serialization warnings in Gson classes
add mouseposition to mousewheelevent to allow user to click on a different position .
updated the ` addAppropriateLikeRegexTo ` method to handle null values for the ` next ` parameter and added a test for
[ hotfix ] [ table - common ] add support for multiset type information in maptypeinfo
added ` retrieveByIssuer ` method to ` XOAuthProviderConfigurator ` and corresponding tests in ` XOAuthProviderConfiguratorTests ` to ensure correct
pdfbox - 4892 : improve parsing of cmap with poor whitespace , a suggest by valerybokov
refactor ContactsBackupJob to use OperationsServiceConnection for better management of the operations service to improve resource management and ensure proper cleanup of the
added a new class T6938454a , T6938454b , T6938454a , and T6938454b
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
added a condition to log an error if the number of supported display bounds changes to ensure that the application logs an error when the number of supported
updated schema key retrieval from ` getSchemaName ( ) ` to ` getSchemaKey ( ) ` in ` PMetaDataImpl . java ` and added
ggb - 1343 fire passive login event on web ( not only on web )
added a new file Box2DTest . java and modified the GDXTester . java and Box2DTest . java files to implement
fix localbypartionertype to not return null
[ hotfix ] [ test ] increase default buffer request timeout for hybrid shuffle
added DEFAULT _ GENERATOR _ NAME and DEFAULT _ GENERATOR _ VERSION constants and updated SpeechSettings to use these constants to improve configur
added a help button to the OpenOfficePanel to provide users with help options for users
[ java ] make tcp _ nodelay a child option for netty acceptor , protocol _ nodelay and protocolpublishdecoding
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService to use
refactor class loading logic in ScanResultObject . java to use a transient Class < ? > classRef instead of a local className variable to
updated error handling and streamlined URL and image decoding logic in DecodeServlet . java to improve robustness and clarity of URL and image decoding
add support for querydsl ' s nullhandling . nullsfirst , nullslast and nullhandling . native
added null check for actor in ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions during action processing
reformatted lambda expressions in CtTypeTest . java for consistency and clarity to improve code readability and maintainability
added synchronization around access to sfWriters in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its implementation ` JJ ` and ` JK ` , along with a
added functionality to revoke an existing agent certificate in CertificateManager . java and updated related tests in CertGenerationTest . java to enhance certificate management by
added handling for HTTP response without body codes in AbstractHttpTest . java and implemented a test case in HttpServerTestBase . java to ensure proper
added error handling for missing < script > tag and script language in ScriptTransformer . java to improve robustness and provide clearer error messages when
added " BONECP " , " DBCP " , " HikariCP " , " NONE " , " HikariCP
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added file locking functionality in FileMenuFilter and OCFileListFragment to manage file locking behavior to improve user experience by allowing users to lock files
updated versioning logic in mmm Version . java and ppp Version . java to improve version management and maintain consistency in versioning
clear endpoint cache when update keyspace
refactor synchronization logic into a separate method ` waitForState ` for improved readability and maintainability to enhance code maintainability and clarity
updated methods in SkylarkDescription and SkylarkDescriptionArg to use ` SkylarkRuleContextAttr ` instead of
[ java ] refactoring storage interface to make it easy to reuse
fix npe when create view with ` ` create or replace ' ' option
changed exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error handling by differentiating between
updated query string retrieval in SpellCheckComponent to ensure a valid query string is used to improve robustness by avoiding potential null pointer exceptions
added validation for header values in Headers . java and introduced a new checkValue method to ensure header values are valid and prevent illegal characters from being
replace instanceSize with arrayBaseOffset in HybridLayout . java and introduce afterFieldsOffset in HostedInstanceClass . java to improve
[ apex ] add @ experimental annotation to astcommentcontainer . setcontainscomment ( )
hhh - 510 - add warn log for association with ` @ fetch ( fetchmode . join ) ` and ` fetchtype . lazy
refactor ` NoGetOperationsFilter ` , ` NoUserOperationsFilter ` , and ` RemoveInternalParamsFilter ` classes to extend from `
added assertions to compare database and table names in TestCompactionTxnHandler . java and set database and table names in TxnHandler . java to
camel - 1640 : timer component now also support graceful shutdown of the timer .
added a condition to check if the block is not processed before adding the trace to ensure only valid traces are added to the trace list
updated null check in ProviderManager to use CollectionUtils for checking providers to enhance robustness by ensuring that null values are properly validated and prevent runtime exceptions
simplified the database version check in InsertOrUpdateGeneratorPostgres . java to improve code readability and maintainability
added SQL queries and assertions to LocalIndexIT , modified scan handling in BaseResultIterators , and ExplainTable to improve test coverage and
added a check to prevent adding collections with the same name and type to maintain consistency and prevent potential errors
updated cursor positioning logic in VDUBuffer . java and vt320 . java to ensure proper handling of screen dimensions and cursor changes
removed the static final String USE _ RETRIES constant from HttpShardHandlerFactory . java to simplify the configuration by eliminating unnecessary retry
updated the VERSION _ NUMBER regex in JavaVersion . java and added a test for version 11.0 . 7 in TestJavaVersion . java
[ hotfix ] [ stream ] do not process empty input gates in stream task
[ ci ] fix checkstyle violation in testreceivingmessagesourceparsertests
added null check for properties before retrieving a value to prevent potential NullPointerException when properties is null
updated IOException handling in FileSystemBlobStrategy to set the cause of the IOException to improve error reporting by including the original exception as the cause
updated error message from " rolling " to " stack " in multiple Java files to clarify the purpose of the error message regarding stack upgrade
added a txConfidenceListener to manage transaction confidence updates and removed it from the wallet service to streamline the transaction confidence listener management and improve
bugfix # 20632 , add support for g1 perm generation to jmxsupport
removed unused imports and modified return statements in NearbyController . java to streamline code and improve readability
pdfbox - 4071 : make pdfcloneutility . clonefornewdocument public , a suggest by valerybokov
updated the condition in BaseSwipeUpHandlerV2 to exclude home activities from the gesture state check to ensure that home activities are not processed
rename DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and update related constants and methods to improve clarity and consistency in naming conventions
updated method names in ShadowTelephonyManagerTest and ShadowTelephonyManager to be case - insensitive and modified return values in ShadowT
update UnfreezeBalanceV2Actuator to set the unfreeze amount based on the unfreeze balance to ensure accurate handling of unfreeze balance
updated descriptions in ConferenceSchedulingXlsxFileIO to use " per match " instead of " per minute " to clarify that the
simonstewart : use apache common io instead of guava
refactor multiple assertion classes for improved consistency to enhance maintainability and readability of the codebase
2 . x : fix javadoc for observable . delay ( ) and observable . delay ( ) . delay ( )
replaced direct key value storage with a multi - field operation for pushing values to improve code readability and maintainability by utilizing a
added a null check for ` randomUUID ` before setting it in ` MockHubService . java ` to ensure that ` hubChangeLog `
added an ` onHoverEvent ` method to ` InputConsumer ` , ` OverviewInputConsumer ` , and ` InputConsumerProxy ` classes
added a conditional check for the " bootstrap _ conf " property in the CoreContainer class to ensure proper synchronization when the configuration is not set
camel - 16400 : camel - netty - http - align default value of maxheaderssize with camel - netty4 - http
hbase - 22855 hbase . hbase . hbase . client . retries = 5 should increase the number of retries
updated file path construction to use File . separator for better cross - platform compatibility to ensure consistent file path handling across different operating systems
make encodedgraphcachetest more resilient against failure
updated queryCommand from " customer _ count " to " all _ tables " and modified the query to use " INFORMATION _ SCHEMA . SYSTEM
added logic to adapt and store currency metadata for Kraken assets to ensure accurate currency representation for better asset management
added a ` toString ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test ` to
[ hotfix ] [ runtime ] fix nullpointerexception in alerttaskrunnerv2
[ beam - 10686 ] fix influxdb publish metric for non - blank measurement and database .
corrected a typo in the method name from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and
updated address filtering logic in NetUtils . java to include unique local addresses to enhance security by ensuring only valid local addresses are filtered
added a method to convert column names to quoted column names in DataTextFormatter . java to improve clarity and maintainability of column name handling
added property management methods and utility methods in WrapSystem , StrUtils , CompileMethodEntity , and ClassWrapper classes to enhance system property management and
added a constructor to the UpdateRequest class that accepts a URL string to enable the creation of an instance of UpdateRequest with a specific HTTP method
changed enum declaration from static to non - static for EnumSerialization in ProtoTypeAdapter . java to allow the enum to be serialized as an enum
added an ` addExperimentalFormatWarning ` method to ` RequestHandlerUtils ` and updated ` DataImportHandler ` and ` ReplicationHandler ` to
updated debug logging to format module names in JpmsUtil . java to improve readability of module names for better debugging
add a method to get the default label font size and set row height accordingly
http : / / issues . apache . org / activemq / browse / amq - 2372 - remove useless code in default
added meanPartitionSize , partitionCount , and splitCount variables and modified conditional logic in CqlInputFormat . java to improve clarity and
simplified the condition for checking JUnit4 class name to improve code readability and maintainability
[ drools - 1342 ] fix ruleterminalnodelefttuple equal ( ) and hashcode ( ) to avoid npe
added StageIDsRearranger import and resolution logic in TezCompiler . java to enable stage ID rearrangement for improved performance
fix wrong mbean name for messagingservice . patch by jbellis
updated memory consumption logic in LotsOfOutput . java to include debug output to provide insights into memory consumption during tests
added imports for ` Document ` , ` DocValuesFormat ` , ` NumericRangeQuery ` , and ` DimConfig ` , along with
renamed ` anonymousReadOnly ` to ` anonymousReadOnly ` in ` LdapAutoConfiguration ` and updated related methods in ` LdapProperties ` to improve
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed the visibility of the EchoInputDoFn class from public to private and added the JUnit4 @ RunWith annotation to enhance encapsulation
added ` finishMocking ` method to ` MockitoSession ` and updated ` DefaultMockitoSession ` to handle ` Throwable ` to improve
removed extraDeps from parameters in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to streamline dependency management
refactor buffer management in SPDYAsyncConnection and HTTPSPDYAsyncConnection to improve clarity and structure to enhance code readability
replaced ` BlockLiquid . getStaticBlock ( material ) ` with ` BlockLiquid . getFlowingBlock ( material )
updated intent data handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to support dynamic URL parsing and improve location listener instantiation
fix typo find by codespell on fossies . org
[ hotfix ] add support for streamingplan in clifrontend
fix craftingmanager # getitemhash ( ) and craftingmanager # getitemhash ( ) # getitemhash ( )
[ flume - 2271 ] [ test ] add retry for checkpoint in file channel restart test
simplified condition checks for whitespace and indentation in TabsAndIndentsVisitor . java to enhance code readability and maintainability by
added a pattern matching for temporary lines in NeuteredLinesFilter . java to enhance filtering capabilities for temporary lines
doc ( regen ) : update sample code to set total timeout , add api client header test
added conditional logic to initialize ` liquibaseDataType ` based on the data type and updated condition checks in ` UnknownType ` to handle
do n ' t register wavefront metric if it ' s not publish yet
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` to set ` divideUpstreams ` to ` springCloudSelectorHandle
added a new method ` registerListener ` to ` ShadowSensorManager ` to enable registration of sensor listeners with specified parameters
added error handling for socket exceptions in the ` testFullMethod ` , ` testFullURI ` , and ` testFullHeader ` methods to
camel - 15836 : camel - ignite now use apache ignite 1.5 . 0 and camel - ignite 1.5
updated print statements to handle empty line numbers and modified the result set check to improve clarity of output and ensure correct handling of reaching end
pdfbox - 4892 : catch all exception to avoid crash
added tests for HDR capabilities in ShadowDisplayTest and implemented error handling for unsupported HDR capabilities in ShadowDisplay to ensure compatibility with newer Android
added a finally block to ensure classLoader is reset to prevent potential memory leaks during compilation
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve clarity of error messages and provide more context
added a default constructor to the Message class to enable instantiation of the Message class without requiring an existing one
do n ' t report bug for java . awt . component in non - gui mode
updated ` PhoenixDecimalObjectInspector ` and ` PhoenixObjectInspectorFactory ` to utilize ` PrimitiveTypeInfo ` for
replaced ` GZIPOutputStream ` with ` OutputStream ` in ` CompressionResponseStream . java ` and added a check for response commitment to improve response
updated variable and method names from WWWAuthenticate to authenticateHeader for clarity to enhance code readability and maintainability by using more descriptive
removed conditional checks for EJS and org . omg directories in DCD . java to streamline code by eliminating unnecessary checks
fixed possible npe in threadleaktest when thread be already stop
added logging functionality to the ` afterPropertiesSet ` method in ` MethodInvocationPrivilegeEvaluator . java ` to enhance debugging capabilities by providing clearer
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nut
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
cloudstack - 7803 : add iso disk for user vms in kvm
removed the handling of named signals and updated the test method names for clarity to improve code readability and maintainability by using more descriptive
replaced static import of ` ArrayUtils . isEmpty ` with direct usage of ` ArrayUtils . isEmpty ` to improve code readability and reduce dependency on
make axonautoconfigurationwithspringcloudtest work with spring boot 2.0
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and ensure proper method overriding
remove planningentityconfig . resetinitializedplanningentities and deprecate the planningentityconfig . uninitialize ( )
added build time to artifact info in TwoLevelArtifactCacheDecorator and updated related classes to include it to enhance artifact tracking by incorporating
updated field handling in GroupByOperator to use getFields ( ) and added a condition for numEntriesHashTable to improve accuracy of row size
added null checks before adding block appearance to prevent potential NullPointerExceptions when the block is not initialized
added new currency pairs CNC _ BTC and CNC _ BTC to support trading functionality in the trading system
updated the skewAllowance value from 5 to 15 and added a conditional check based on its value from CasConfigurationProperties to enhance flexibility in
added sorting functionality to songs in SongListActivity and updated sorting logic in Utils to improve user experience by allowing sorting of songs based
removed unused imports and modified the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to streamline code by eliminating unnecessary
replaced instances of ` BaseBlock ` with ` LegacyBaseBlockWrapper ` in multiple files to implement a new ` LegacyBaseBlockWrapper `
updated IcebergBranchExec to check for tag existence before retrieving the snapshot ID to improve error handling for non - existent tags during branch creation
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest
refactor PhotonMappingDemo and HybridDemoSsboInstancing to improve bounce handling and resource index retrieval to enhance
added validation for requirePasswwordChangeRequired property in IdentityProviderEndpoints . java to ensure proper handling of password change requirements for external IDP
added a call to remove instances of ` assumeReflective ` from the ` notInitializedInConstructors ` collection to ensure that the constructor is not
updated error handling in JdbcExecutor to differentiate between closed and non - closed connections to improve error reporting by providing a specific URL for closed connections
added a new test method ` testRequiredBody ` in ` SpringmvcClient . java ` to validate the handling of missing user data and
updated regex patterns for user and password formats in CredentialInjector . java and CredentialInjectorTest . java to improve accuracy in matching user and password values
added a new menu item " Item4 " and a key binding for the " Enter " key in ActionListenerCalledTwiceTest . java to
updated test output formatting and assertion logic in TestCoreParser . java to improve clarity of test output and ensure accurate result reporting
updated equality checks in SimpleNode . java to use ' id ' instead of ' id ' to ensure correct equality comparison between nodes
changed the visibility modifier of the PopulatorContextStackItem class from public to package - private to allow access to the PopulatorContextStackItem
lucene - 1792 : morelikethis should not use numdocs ( ) if there be no doc
reformatted code for better readability in QuestManager . java to improve code maintainability and clarity
[ hotfix ] [ networkbufferpooltest ] make networkbufferpooltest non - static
updated query appending syntax in MongoSessionDataStore . java to improve readability and maintainability of the code
[ gr - 36400 ] add support for unsafe . getlong ( ) in compilerdirectives .
replace " ARAST " with " EET " for " Asia / Amman " across multiple TimeZoneNames files to align with the
updated the ID from 90000010 to 90000011 to reflect the new version of the application
hhh - 14850 - handle exception in case of rollback - only
modified the logic for generating the planned name and handling link suffixes in DownloadExternalFile . java to improve the clarity and functionality of the
disable apple menu bar on macosx
test : add integration test for x ^ 2 , x ^ 2 , x ^ 2 , x ^ 2 , x ^ 2 , x ^
changed access modifier of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods from private
added a method to modify the whitelist pattern in HiveConf and created a test for modifying the whitelist pattern in TestJdbcWithSQLAuthorization to ensure
updated invalidClasses map to include entryName and value to ensure proper handling of invalid class entries
use player . team ( ) instead of sharded in mobileinput . findclosest ( )
updated cookie domain to use domainHelper ' s hostname instead of a hardcoded value to enhance flexibility by allowing dynamic domain configuration
added nullable validation logic for columns in ` MissingColumnChangeGenerator ` and ` MissingTableChangeGenerator ` , and introduced ` shouldValidateNullable `
refactor multiple security - related classes for improved organization and clarity to enhance maintainability and readability of the security - related components
added queries and static final constants in CustomCollectionTest . java and CompositeIdRouter . java to improve code clarity and ensure consistent behavior in
added snapshot handling for bytea data in ` ExecutablePreparedStatementBase ` and introduced a new test for blob types in ` PostgreSQLIntegrationTest ` to
updated conditional checks for max _ cache _ files and max _ cache _ size in DefaultServlet . java to ensure proper handling of cache size and
fix drag and drop of library and library tab ( # 5379 )
updated ` ExecutionUnitRunner ` , ` CucumberTest ` , and ` ExecutionUnitRunnerTest ` to use ` Description . createTest
replace ` string . isempty ( ) ` with ` stringutils . isnotempty ( ) ` for ` myVersion ` and ` build
removed the ` public ` access modifier from several methods in ` TimeUtils ` and renamed ` TimeUtilsTest ` to ` TimeUtilsTest `
added a method to determine if a class is a security frame or injected invoker based on version checks to improve code readability and maintainability by
changed the file extension check from " jpg " to " . jpg " in PreviewImageFragment . java to ensure compatibility with different file
[ gr - 3246 ] fix debug info provider for host method .
added icon loading methods and updated class display logic in DataTableTopComponent and EdgeDataTable to enhance visual representation and improve code readability by allowing dynamic
updated the logic to check for the last index of a dot in the request name to improve robustness by avoiding potential null pointer exceptions
updated the ` FindAndReplace ` class to handle dollar signs correctly and added a test for tolerated dollar signs to improve text replacement
fixed npe when try to connect to a remote server . jm - 522
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` to copy files from a source directory to a destination directory to enhance functionality by allowing copying of non -
added an exception throw for unknown datum classes in JacksonUtils . java to provide clearer error handling for unknown datum types
refactor ABI handling in DefaultJavaLibraryBuilder to use requireRule for library targets to improve build rule management by ensuring required ABI jars
simplified height calculation by removing background padding to improve code readability and maintainability
added normalization of database and table names in ObjectStore . java to ensure consistency in identifier formatting
added schema handling for Oracle database types in DbSqlSession . java to ensure correct schema is used for database operations
removed the Logout implementation in HomeFragment . java to simplify the code by eliminating unnecessary logout handling
updated the number of subtasks in MockStreamingRuntimeContext from 0 to 1 in multiple test files to improve performance by reducing the number of
added null check for the candidates list in FastImportAction . java to ensure robustness by preventing potential NullPointerExceptions
updated the logic for determining if a bean is managed in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to improve
rename iexecutionattributesdialect to iexecutionattributedialect so that it would well reflect the purpose of the dialect
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that metadata is cleared before processing
added null check for the ` loc ` variable in ` CmdGetTime . java ` to prevent potential ` NullPointerException ` when ` loc ` is
added null checks in ` TabletInsertionDataContainer ` and ` CachedSchemaPatternMatcher ` , and introduced ` DisruptorQueueExceptionHandler ` to
deleted the Session2Token . java file from the media package to remove unused class to streamline the codebase
cloudstack - 7892 : cleanup the destination volume on failure to create the volume .
added a new ` Install ` class and modified ` SystemShortcut ` and ` InstantAppResolver ` to handle instant apps to enhance functionality for install
added a ` NullAuthoritiesPopulator ` to the ` LdapAuthenticationProvider ` class and modified the constructor of ` LdapAuthenticationProvider ` to
updated retrolambda jar retrieval logic to use a system property instead of a hardcoded path to improve flexibility in determining the retrolambda
replaced the call to ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to ensure the camera
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` to improve performance by using a more efficient
added a method call to handle null results in JMESPathExtractor to ensure proper handling of null values in the JMESPathExtractor
added null and length checks for currentUser ' s authorities in AuthorizeTag . java to ensure that a valid authority list is returned when no author
updated assertions in multiple test classes for consistency and clarity to improve code readability and maintainability
cloudstack - 7803 : vm snapshot with memory be not support for vgpu enable vms .
updated configuration handling in ` RobolectricTestRunner ` to distinguish between subclass and method annotations to ensure correct configuration merging for subclasses and methods
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to enhance flexibility in handling socket connections
added a method to compare partial partition keys and updated related logic in HiveAlterHandler . java to improve partition key validation and ensure consistency in partition
added a new debug flag ` ENABLE _ ICON _ IN _ TEXT _ HEADER ` in ` FeatureFlags . java ` to control the
added a condition to check if the component is active in the SimulationStatus class to ensure that the component is active before proceeding with the
replaced SharedBlockingCallback with Callback . Completable for handler deployment and undeployment to simplify the code and improve readability by using a more
added WorkspaceListener to PreviewControllerImpl and modified the buildGraph call in PreviewUIController to manage workspace state to improve workspace management and ensure graph
added a check to prevent inflation of anonymous classes in ReflectionFactory . java and modified class name retrieval in ReflectUtil . java to ensure that
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated file path formatting in CatalinaAcegiUserRealm . java to improve code readability and maintain consistency in resource loading
updated logging statements in AmbariServer . java to improve clarity on server startup and action manager initialization
added null checks for initialization and modification nodes in JSONWriter . java to ensure robust handling of null values and improve code robustness
updated method signatures and parameters in SliderAppsViewControllerImpl . java for consistency and clarity to enhance code readability and maintainability by
added a check to ensure backgroundManager is not attached before attaching the window to prevent potential errors when the backgroundManager is not attached
updated tab management and alpha adjustments in multiple classes to improve user interface responsiveness and visual consistency
added null check for the URL parameter in BaseDataSource and implemented a corresponding test case in SimpleDataSourceTest to ensure that invalid URLs are provided and
added JRE support for PebbleTemplateEngine instantiation in PebbleModuleTest . java to ensure compatibility with newer JRE versions and
added EditNameDialog to handle directory creation and dismissed dialog to improve user experience by providing a clearer dialog when directory creation fails
added actionToggleBarBorders functionality to multiple chart activities to enable toggling of bar borders based on specific width
updated OkCoin API URLs from OKCoin to OKEx in OkCoinExchange . java to ensure compatibility with the latest OKCoin API changes
[ drools - 1342 ] remove the unused step scope from acceptedforagetest . testpickmovesimilarity
replace FileChannel with SeekableByteChannel for input stream management to improve performance by using a more efficient byte channel implementation
refactor ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter for improved type safety to enhance code clarity
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in the mocking framework
removed redundant checks for LAMBDA _ CAPTURING _ SERIALIZATION _ TYPES _ KEY in SerializationConfigurationParser . java
added heap limit configuration for debug devices in QuickstepProcessInitializer . java to improve memory management for debugging purposes
replaced direct calls to ` mapper . applyAsDouble ( t ) ` with a temporary variable ` val ` in the sumWithCompensation
log4j2 - 1349 - do not swallow exception in abstractloadbundletest
added a conditional check for the top level deletion before serialization in PrecompactedRow . java to ensure proper handling of deletion time during data serialization
updated rendering intent return values in ICC _ Profile and ColorConvertOp classes , and added a new test class for invalid render intents to
close meterregistry on shutdown to prevent leak
[ 3.0 ] change log level of config center error message to info
added tests for certificate generation with empty byte arrays in CertificateFactoryTest . java to ensure proper error handling when certificate generation fails
camel - 16400 : fix simple predicate parser to handle ambiguous binary operator .
removed unnecessary window dismissal logic from onTabUnselected method in EditorActivity and added focus change handling in IDEEditor to streamline tab
include the user name in the log message when access log fail
updated file paths and scaling values in SkeletonModelGpuSkinningTest . java and modified animation time calculation in OgreXmlLoader .
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods should no longer be used in future development
added support for generating d . ts files along with the JavaScript output directory in the JSweet transpiler to enhance the transpilation process
fix ( streamconfig ) : set default fetch timeout for kinesis consumer factory
added a new parameter " . html " to the method signature in StreamingDataflowWorker . java to provide a way to include HTML output for
increased the maximum number of threads for the metastore server from 100 , 000 to 1000 , 000 to improve performance by reducing
changed the return type of the ` onTaskSnapshotChanged ` method from ` void ` to ` boolean ` and added a return statement to provide
update shadow radius setting in SwipeUpAnimationLogic . java to use shadowRadius instead of mMaxShadowRadius to ensure correct shadow radius is
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to validate chain nesting and aggregation functionality in the
updated loop condition from ' limit ' to ' end ' and added error handling in MarketSellAssetActuatorTest . java to ensure
do n ' t use isinternal ( ) if the source be not interactive .
updated conditional check in CreateKeytabFilesServerAction . java to handle null previousCachedFilePath case to ensure correct behavior when previousCachedFilePath is
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to utilize DisplayController for improved functionality
updated toolTipText assignment logic for root directories in MetalFileChooserUI and SynthFileChooserUI to ensure consistent tooltip display for desktop
updated screen size retrieval from getToolkit ( ) to Toolkit . getDefaultToolkit ( ) to ensure compatibility with the default toolkit for
change return type of ` recognise ` method from ` List < ? extends RecognisedObject > ` to ` List < CaptionObject >
added unit tests and refactored entity management methods in JPASQLBase . java to enhance test coverage and improve code readability
modified drag index logic in FreeformFinSetConfig . java to adjust drag index based on point position to ensure dragIndex does not exceed the
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to ensure compatibility with the latest version of
corrected a typo in the error message and added a call to spend all gas to improve clarity of error messages and ensure gas is
updated error message formatting in ` ElementsShouldSatisfy ` , ` ZippedElementsShouldSatisfy ` , and ` ElementsShouldSat
added a @ Deprecated annotation to the Weights class to indicate that the class should no longer be used and should no longer be used
refactor unsafe and platform - specific plugins registration in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to improve code readability and maintain
added @ Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and implemented a test for blacklisted modules in Android
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to adjust the page centering behavior for
updated the ` doneProcessing ( ) ` method call in ` MigrationRequestOperation . java ` to ensure proper execution of the migration process
updated constants and variable names from HOST to BASE _ URL in KonnectedBindingConstants and KonnectedUPnPServer to
changed ` attributeValue ` from an ` Object ` to a ` List < Object > ` in ` WSFederationClaimsReleasePolicy ` to enhance
updated database handling in TestJdbcWithMiniLlap and modified query processing in LlapBaseInputFormat to use a specific database key to
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate SQL parsing for cases containing brackets to
added support for handling touch events and refactored the copy mode initialization in ConsoleActivity to improve responsiveness and maintainability of the code
refactored the ` writeXmlOutput ` method to accept a ` Writer ` instead of a ` String ` for XML output to improve XML
camel - 1640 : fixed npe when use custom list aggregation strategy with empty body .
camel - 17850 : camel - jbang - log exception cause to show the cause of the exchange .
move logback - classic to main / instead of test / qos / logback - classic
do n ' t run dataflow analysis if there be no phinode .
removed unused import of SharedStringSource in TestXSSFRichTextString . java to streamline code by eliminating unnecessary dependencies
added a new method ` invokeMethod ` in ` ObjectInvokeHelper ` to facilitate method invocation with specified parameters
updated multiple Java classes related to box and whisker calculations and datasets to improve code organization and maintainability
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit5
updated equality checks in InstantiatedIndexReader to use ` equals ( ) ` and improved string comparison in MemoryIndex to enhance code readability
changed the visibility of the IndexFileNameFilter constructor from public to private to restrict access to the constructor for better encapsulation
replaced the use of ` testPluginDefinition ( ) ` with ` pluginDef ` and refactored vertex assertions in ` ifStatementTest
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
refactor TypeAdapter methods to simplify null handling to enhance code readability and maintainability by eliminating redundancy
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of entries in the distribution
added EXIFReader class to handle image metadata processing to improve image processing capabilities for Exif - specific images
use standardunit . none when unit be unknown in cloudwatch registry
[ drools - 1342 ] fix classnotfoundexception when apply pmml model
improve error message for repeated CounterCurrencyTransferStartedMessage in FluentProtocol . java to clarify that a repeated CounterCurrencyTransferStarted
added a check to return early if the bubble bar is not visible to enhance performance by avoiding unnecessary processing when the bubble bar is hidden
[ gr - 18686 ] handle branchtargetoutofboundsexception in substrateaarch64backend .
added a try - finally block around the initialization of JDK log manager in JDKXRLogger . java to ensure that ` initPending ` is
added a new method ` find ( Class < Ticket > ticketClass ) ` to ` TicketCatalog ` and its implementation in ` DefaultTicketCatalog
updated SSL connection string construction and assumptions in TestSSL . java to improve clarity and correctness of SSL connection handling
[ hotfix ] [ runtime ] fix the memory leak in sort - shuffle result partition
updated the constructor of Read and Write in JmsIO . java to include additional parameters to enhance functionality by providing default values for read and write operations
added " type " and " sort " fields to PluginHandleDTO and related classes to enhance functionality by allowing sorting and retrieval of plugin handles based
added ` start ( ) ` method to span creation in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` to ensure span starts
added GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , GLKViewDrawableStencilFormat , and GLKViewDrawable
refactor login logic in LoginIT . java to utilize a new method for attempting login after failed attempts to improve code readability and
[ pytorch ] throw unsupportedoperationexception when real ( ) be use .
removed thread interruption check and replaced with a do - while loop with a do - while loop to ensure proper handling of lock name retrieval
refactor ShadowPicker class implementation to improve code readability and maintainability
refactor HTTP / 2 client options creation into a separate method and add configuration properties for connection pool size and multiplexing limit to improve code read
updated type checks and improved error handling in DynamicStruct and SolidityFunctionWrapper classes to enhance type safety and provide clearer error messages
updated getStringProperty calls to include a default value of true for " text - align " and " font - size " properties to ensure consistent behavior
added constructors to the CopyStep class to initialize source and destination paths with a boolean flag to enable recursive copying of paths in the application
fixed - rsemaphore . addpermits ( ) and rsemaphore . release ( ) method do n ' t
camel - 14263 : camel - core - dsl : fix camel - core test after camel - 14263
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
changed the data type of ` witnessesAddressList ` and related methods from ` List < String > ` to ` List < ByteString > `
modified print statement to check if resultsMeta is not empty before printing to improve error handling by avoiding printing empty results
modified the logic in ConcurrentLinkedQueue to handle unlinking and added a new RemoveLeak class to improve the robustness of the ConcurrentLinked
added a boolean parameter ` addSpecialTokens ` to several ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] use collections . nCopies instead of manual array creation
updated chunk data handling in LoadSingleTsFileNode . java to utilize AlignedChunkData for better data management to improve clarity and
added session storage context constants and updated session state management in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to enhance
add a unit test for schema validation in TestJspDocumentParser . java to ensure that schema validation functionality works correctly for JSP documents
added a default constructor to TypeAdapter and updated annotations in Java17RecordTest and ReflectionAccessTest to clarify the purpose of the constructor
replaced the ` kill ( ) ` method with a ` prepareKill ( ) ` method in the ` SuspendedEvent ` class and updated
refactor AntPathRequestMatcher to improve path matching logic to enhance code readability and maintainability
[ ds - 3952 ] remove redundant null parameter in resource policy creation
added null check for _ deflaterEntry before releasing it to prevent potential NullPointerException when _ deflaterEntry is not initialized
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
updated the MD5 checksum computation to normalize unicode characters to enhance security by preventing invalid characters from being processed
refactor command handling in Example . java to improve command execution logic to enhance code clarity and prevent potential null pointer exceptions
make keylistener final and add @ override annotation in basestate
updated the type of ` objectToSave ` from ` T ` to ` DBObject ` and added a new test for saving JSON strings to
added support for multiple remote addresses in RequestUtils and created a test for it in RequestUtilsTest to ensure proper handling of multiple IP addresses in
changed the return type of getJobArgs from String to ObjectBuilder and updated related method signatures to use ObjectBuilder instead of String to improve JSON handling
updated CookieManagerTest . java and UnmodifiableMaps . java to utilize NO _ PROXY for local host address retrieval and modified connection handling to
updated glyph handling logic in GlyphLayout . java and added a new bitmap text in BitmapFontTest . java to improve memory management and ensure correct
[ hotfix ] [ connector ] pause and resume pulsar split in pulsarsourcereaderbase and pulsarpartitionsplitreader
added a new configuration variable ` HIVESCRIPTIDENVVAR ` and updated ` ScriptOperator ` to use it to retrieve and store the operator
refactor the ` getListedTermCounts ` method to use a stream - based approach for retrieving term counts to improve code readability and maintain
added a new file ` UseSeparateStepSizeAction . java ` to manage the use of a separate step size in the Jog plugin
added user - specific unlocking logic and refactored unlocking logic in FileMenuFilter . java to enhance file management functionality and improve code
hbase - 15827 fix npe in roundrobintableinputformat when regionname be not specify ( # 4358 )
replaced " false " and " true " with " 0 " and " 1 " for the Sampled header in HttpClientRequestAdapter and its
pdfbox - 4892 : simplify code , a suggest by valerybokov
added fullscreen functionality to GwtGraphics and updated viewport settings in GwtApplication to enhance user experience by enabling fullscreen mode in the
updated ` WebfingerIssuerService ` to use ` URI ` instead of ` String ` for resource normalization and modified ` issuers ` and
add a new test class SoulApacheDubboClientConfigurationTest for Spring Boot configuration to ensure correct initialization of Dubbo client
replaced ` Gdx . files . internal ` with ` resolve ` for file path resolution in ` SkinLoader . java ` to improve
updated log level from warn to info in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreCacheLoader to improve logging clarity
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple classes to ensure thread safety during concurrent access to the RE
changed the package declaration of java . lang from ' package ' to ' package ' to improve organization and clarity of the code structure
added handling for CodeException in NullDerefAndRedundantComparisonFinder . java to improve error reporting for specific method exceptions
rename onmanifesterror , onmanifesterror and onmanifest to onsinglesinglemanifest , fix javadocs
add a configuration property to limit the maximum number of prepared statements cached per a database connection to allow users to configure the maximum number of prepared statements
change return type of ` set ` method from ` WritableConfig ` to ` Configuration ` in multiple configuration classes to provide a more generic return type
added error handling in the checkErr method to ensure proper error reporting for command operations
refactor methods in CombinedDataset class to improve code readability and maintainability
replaced the variable name ' buf ' with ' b ' in the InflateIn _ DeflateOut class to improve code cl
remove restricted cryptography restriction from default policy
added a check to ensure the event is not cancelled before attempting to create a new chunk and spawn a portal to improve stability by preventing
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure proper functionality of
added null check and initialization for vContext in Vectorizer . java to ensure proper handling of vectorization contexts when vContext is null
fix wialon speed unit ( fix # 1193 )
hbase - 16400 make metricsuseraggregate . enable ( ) default to false ( # 2298 )
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
updated the handling of the receiver registration logic in the Launcher class to ensure proper unregistration of the receiver only when the receiver is attached
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
[ hotfix ] [ runtime ] add params to zadd ( ) method in pipelinebase
( chore ) camel - dspace : fix checkstyle issue in util / metadataimportit . java
rename testasynMessages to testasynmessagesperformancetest and remove @ ignore annotation
added a method to retrieve an optional TargetNode and refactored conditional logic in VersionedTargetGraphBuilder to improve code readability and maintainability
updated timestamp constants for epoch seconds in TimeZoneProvider . java to improve readability and maintainability of timestamp comparisons
updated return statement in EscherBlipRecord . java to use HEADER _ SIZE and added a new test class TestOLE2Embeding
updated the initialization of row and column variables in JSONParser . java to ensure correct parsing of JSON data
replaced usage of ` JavaType . FullyQualified ` with ` java . util . regex . Pattern ` in ` FindTypes . java
updated DETAIL _ THUMB _ HEIGHT and added ACTION _ PLAY _ TRAILER for managing local trailers to improve user
added a method to remove glyph information from the cache in CStrike . java and invoked it in CStrikeDisposer . java to
act - 1342 : record process - instance - end history when terminate all execution
camel - 16462 : camel - core - camel - xml - bind should use the name of the root element , not the name of
updated the endpoint URL from " http : / / scottb . org / scottb . html " to " http : / /
add ` ` prdef ' ' option to reset all preference to default value
hbase - 21751 addendum make hbase - thrift module protect instead of private
[ danfoss ] remove channel ` ` manual _ fan _ speed ' ' and ` ` manual _ fan _ step ' ' from
use hamcrest assertion instead of junit in examples / integrations / micrometer / se
removed duplicate code for stopping expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure proper handling of index values and implement proper hash
vmware : allow to configure the disk size of a vm in vmware vms .
added preference - based visibility control for predicted apps in the PredictionRowView based on user preferences to enhance user experience by allowing conditional visibility based
[ geos - 7013 ] api bboxparser throw bad _ request error if bbox be invalid
added validation methods for value , position , and Merkle tree depth in LibrustzcashParam . java to ensure parameters are non -
deprecate ithrowableentity in favor of a new one
added random position calculation for x and y in NodeDataImpl . java to ensure unique positioning for improved user experience
updated the method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to
refactor JavacStep to use try - with - resources for better resource management to improve code readability and ensure proper closure of the
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release version
added a conditional check for ITEM _ TYPE _ DEEP _ SHORTCUT in LoaderCursor . java to ensure proper handling of deep shortcut items
added a hashCode ( ) method to the TimeGranularitySpec class to ensure proper hash code generation for different types and column names
changed visibility of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes from other classes
added a boolean flag ` useProxyResponseCode ` and modified proxy handling logic in ` HttpURLConnection ` to ensure proper handling of NTLM proxy
aarch64 : fix a memory leak in aarch64move .
server : calculate reserve / used / vms to account for host capacity
added a null check for max score in JSONResponseWriter . java and included a query in TestDistributedSearch . java to ensure that the
updated the audio recorder ' s audio codec from 22050 to 44100 to ensure the correct audio encoding is used for testing purposes
adjust calculation of newOriginX in RocketFigure . java to account for scaling based on subject bounds
updated data source validation to check for empty input and set default interval to ensure robust handling of empty data sources and improve interval initialization
added ` ORIGINAL _ TYPE ` to the ` CustomProperty ` class and updated the pattern in ` CustomPropertyTest ` to support additional
added a static method ` create ( Table parent , Map < String , Object > data ) ` to facilitate the creation of `
simplified return statement by removing unnecessary variable to improve code readability and maintainability
updated schema compatibility logic to include location information and added tests for reader and writer types to enhance compatibility checks and improve test coverage for reader and writer
added checks for entity paths and association types in QueryUtils . java and updated test cases in EclipseLinkNamespaceUserRepositoryTests . java to
added synchronization to the spans list to ensure thread safety when accessing shared resources
changed method parameters from ` List < Object > ` to ` List < ? > ` in multiple classes to allow for more flexibility in the
updated exception handling to differentiate between InvocationTargetException and Exception to improve error logging and provide more detailed error messages during authentication failures
refactor OAuth2AccessTokenEntity to improve code structure to enhance maintainability and readability of the code
updated error messages in SCBEngine , TestInvocationFactory , TestInvokerUtils , and HighwayServerInvoke to clarify request rejection
added new project files for iOS data and moe resources in GdxSetup . java to ensure compatibility with iOS ' s data and moe
updated import statements and modified constructor in TestSearcherManager . java to utilize ConcurrentMergeScheduler to improve concurrency handling during indexing operations
added null and empty check for session state in QTestUtil and refactored list iteration in GenericUDTFInline to improve robustness
refactor multiple classes including MapIterable , FJIterate , and ParallelIterate to improve code organization and maintainability
prevent ` ` key press ' ' from click on the ` ` key ' ' button in spreadsheet
hhh - 14836 - hibernate bundle activator now properly stop the osgi bundle
fix issue with incorrect timeout value in hikaripool . getconnectiontimeout ( )
move voice - component . xml to src / non - packaged - resources
updated file path handling in Compat . java and FileOpener . java to improve consistency and clarity in file path processing
changed the return type of the row ( ) method from Cell < T > to void to simplify the method ' s return type for better us
improve error message when port number be specify multiple time
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 initialization to enable dynamic mask generation based on a new configuration option
modified the return type of genUDTFPlan method to return a Pair < RelNode , RowResolver > instead of a RelNode to
added node selection statistics for bucketed preferred and non - preferred nodes in NodeScheduler and its subclasses to track and track the number of selected nodes
added a new class Person with getter and setter methods for the name property to provide a way to manage the name of a property in the Maven
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to improve clarity and control
added a clock functionality to the PlaybackOverlayFragment for managing fade - in and fade - out animations to enhance the user experience by providing a
remove unnecessary call to markdirty ( ) and update comparator output for each block .
changed the visibility of the IMPL constant and improved exception handling in SegmentReader . java to enhance encapsulation and provide clearer error messages
make sudoku cell update event run in edt thread
replaced ` DefaultInetAddressAdapter ` with ` CollectionTypeAdapter ` and updated related methods to use ` Class < T > ` instead
added methods to retrieve double , long , string , boolean , and boolean values in the Series class and updated test cases in DataFrameTest to enhance
updated the command - line option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to ensure
updated boundary conditions in GeoRelationUtils and GeoUtils for improved boundary checks to enhance accuracy of geometric calculations and prevent potential errors during query
cloudstack - 7803 : fix npe when vmserviceoffering fail to start due to disk offering change
added cleanup method in HazelcastTest . java to ensure proper resource management during tests
blockciphertest : add more test for AES / 2 / 9 + no padding
added filters for " going to print operations logs " and " printing operations logs " to the QFileClient class to enhance logging capabilities for better
fix bean definition introduction with type argument . fix # 3550
initialize currentconnectionaddress to proxyaddress if it be null .
replaced the use of Math . addExact with MathUtils . cappedAdd in WebSocketConnection . java to improve performance by using a more
refactor image output stream handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
replaced calls to ` TvApp . getApplication ( ) . showSearch ( activity , boolean musicOnly ) ` with direct calls to `
updated the initialization of ` schemaCrawlerOptions ` in ` SchemaCrawlerCommandLine ` and reformatted the ` toString ` method in ` GrepOptions
http : / / issues . apache . org / jira / browse / amq - 4237 - add support for osgi console
added @ Autowired annotation and repository field to RepositoryIndexCreationIntegrationTests to enable dependency injection for PersonRepository in tests
updated exception type from Exception to InterruptedException in UIServer . java and modified log message formatting in TestVertxUIManual . java to
added new case statements for various cactus types in BlockCactus . java to enhance the functionality of the BlockCactus class
refactor mouse event handling in ThemeSelector . java to use a MouseMotionAdapter to improve responsiveness and maintainability of the code
[ java ] extend abstractmin
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance the flexibility of the
use illegalargumentexception instead of exception in statToksentannotator
added a condition to check if the query is a distinct query and modified group column count logic in the QueryGenerator to accommodate distinct queries
improve error message when find closely linkage
fix javadoc warning in jmeter . gui . util . textfield
added null check for children in PartitionPruner . java to prevent potential NullPointerException when children is null
added tokenPosition and currentPosition fields to MessagePackParser and updated return statements accordingly to enhance the functionality of the MessagePackParser to support parsing JSON
added locale management to the AbstractSolrMorphlineTestBase class to ensure consistent locale settings during tests
simplified the calculation of the status bar height in LauncherFragment to improve code readability and maintainability by removing unnecessary conditional checks
add MetricsReporterTest . java to implement unit tests for MetricsReporter to ensure correct metric registration and reporting functionality in the MetricsReporter class
camel - 16462 : camel - mock - allow to configure type cache in osgi service registry
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing of the Rectangle object
[ hotfix ] [ kafka ] use random name for sink in streamkafkaptest
refactor DSAParameterGenerator to use BigInteger . ONE for better readability and consistency to enhance code clarity and maintainability by using consistent
added support for using FQDN of the AM machine when submitting work to LLAP , and updated related classes to utilize this feature to
fix flaky clientoutofmemoryhandlertest . testclientoutofmemory
added a new method ` getCmoObjectId ` to multiple shape classes and updated the ` setObjectId ` method to use this new method to ensure
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of fetching distinct entities
refactor multiple Java files related to search functionality to improve code organization and maintainability
added methods to bind and unbind ExtensionAdapter in ManagedKubernetesClient to enable dynamic binding and unbinding of ExtensionAdapter instances in the Kubernetes client
updated the title and body display logic in ` DetailsDescriptionPresenter ` and introduced a new ` getInfoRow ` method in ` Utils ` to enhance
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot . java and TestRSAProviderTokenManager .
do n ' t swallow exception in xmlbugreporter . generatesummary
removed parameters from the reset method calls for intPool and bytePool to simplify the code by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
update ShadowWindowManagerGlobal to handle TIRAMISU API level and introduce a new WindowSessionDelegateU class to enhance compatibility with
updated URL handling logic to differentiate between scheme and port to ensure correct URL construction based on request scheme and port
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQL database operations
hbase - 27979 fix checkstyle issue in hbase - server
pipe : fix bug in emzuli pipe , add a filtereventhandler class .
simonstewart : make the htmlidentifier logging configurable
[ flink - 21212 ] [ table ] fix hive lookup table test ( # 2365 )
deprecate setthrowwhenusingwrongthread ( ) , use verifyapplicationthread ( )
updated schema name handling in SequenceSnapshotGenerator . java to utilize CatalogAndSchema for better schema management
updated color scaling in SpriteBatch and SpriteCache , replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugStarter
fixed - spring data redis redissonconnection . connectasync ( ) method throw classcastexception . # 3558
added logic to retrieve and add the base URL from HttpSolrClient and ensure the base core is not already in the statistic yearCores list to
updated method names and parameters in TaskActionController , TaskAdapter , and IconRecentsView to improve clarity and functionality to enhance code read
updated imports and modified constructor parameters in MorfologikFilter . java for improved dictionary loading to enhance functionality by allowing dynamic loading of
updated sorting options to use the correct string resource for community and critic rating to improve clarity and consistency in displaying community and critic rating
added imports for ViewKt and ListRow , and modified visibility logic in CustomListRowPresenter to ensure proper visibility of the header view based
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class for improved performance to enhance efficiency of HTTP request handling
replaced calls to ` isCaseSensitive ( ) ` with ` instanceof ( DB2Database ) ` in multiple files to ensure compatibility with DB
add support for java . time . datatype . jsr310 in jackson serialization
changed the import of MDC from Apache Log4j to SLF4J in LogUtils . java to align with the latest logging framework
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve code clarity
removed unnecessary import of CoinbaseTransactionStatusDeserializer from CoinbaseTransaction . java to improve code readability and maintainability
added ` getBuildTargetList ` method to ` BuckConfig ` and modified ` ProjectCommand ` and ` BuckConfigTest ` to enhance
removed and re - added the garbage collection of the IdleStrategy in Ping . java to ensure proper resource management and avoid potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` in the ` OCFile ` class and updated related references to improve code consistency and
removed unnecessary conditional checks for state changes in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix npe in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` to implement a recipe to remove calls to ` System . gc ( )
removed unnecessary super ( ) calls from multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added a method to set the UIID in ScaleImageLabel to ensure the correct icon is used during UI updates
replaced instances of ` foundEntry ` with ` update ` for clarity and consistency to improve code readability and maintainability by using a
updated command - line argument checks to include " - cp " in addition to " - classpath " to ensure compatibility with additional command - line arguments
pdfbox - 4892 : use compiler instead of options in presets for ffmpeg
removed unnecessary whitespace in StorageService . java to improve code readability and maintain consistency
updated Test7196045 . java file to improve test coverage and reliability
updated density and decay values in ShaderParametersLightShaft . java to improve lighting quality by adjusting density and decay values
added withState and stateData properties with their respective getters and setters in OidcConfiguration . java and modified OidcRedirectActionBuilder . java
hhh - 14850 - ddl migration : do not generate unique constraint for nullable column ( e . g . non - null column )
added federated share capability checks in UsersAndGroupsSearchProvider and EditShareFragment to enhance user access control based on user capabilities
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy . java ` to ensure that document values are
refactor BufferAlignmentAgent , BufferAlignmentInterceptor , and StringWriterOutputManager classes for improved clarity and error handling to enhance code readability
added a new method ` intForEach ` to ` Int2ObjectHashMap ` and refactored the ` IntObjConsumer ` interface to
do n ' t share scoreboards early in worldserver . getscoreboard ( )
changed return type of count ( ) methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongo
updated logging conditions for MTree snapshot creation in MManager . java to improve clarity and maintainability of the snapshot creation logic
updated the calculation of dot product score in VectorUtil . java and its corresponding test cases in TestVectorUtil . java to improve accuracy of score
added IRREVERSIBLE _ THRESHOLD constant and methods to manage and retrieve the latest confirmation block number in DynamicPropertiesStore to improve block management
refactor locale handling in GpsMainActivity and MainPreferenceActivity to utilize the Systems class for setting language and country based on user -
added a new boolean flag ` wasNewDbCreated ` to the ` LauncherProvider ` class and modified the ` LauncherClings `
refactor assertions and exception handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability by using a
reformatted conditional checks for datamodel and OS _ ARCH in Constants . java to improve code readability and maintainability
added a check to ensure the current thread is not the same as the current thread in TestIndexWriterDelete . java to avoid unnecessary processing when
changed the access modifier of the ` closeDatabase ` method from private to protected to allow subclasses to access the ` closeDatabase ` method for better
updated imports and references from ` apiclient ` to ` sdk ` in ` FullDetailsActivity . java ` and ` BaseRowItem .
added attribute handling for SVG elements in BatikSVGDrawer . java to ensure that SVG elements are correctly imported from the XML document
added a try - catch block around the exception handling in ConsoleKeys . java to improve error logging for user configuration parsing errors
updated wait result handling in AndroidImplementation and CodenameOneActivity to check for the " WaitForResult " flag to ensure correct behavior when waiting
updated constructors in HitQueue , SpanPositionQueue , PriorityQueue , TopOrdAndIntQueue , TopOrdAndIntQueue , and Term
refactor widget handling in WidgetCell . java to improve readability and manage widget descriptions more effectively to enhance user experience by ensuring widget descriptions are
added a validation check for the maximum attribute count in the attribute registration process to ensure that the system does not exceed the maximum allowed attribute count and
move predicatestest to com . hazelcast . query . impl . predicates and move it to com . hazelcast . query . impl
camel - 16400 : camel - core - optimize defaultheaderfilterstrategy to be case insensitive
updated InlineLayout and Breaker classes to improve whitespace handling and alignment logic to enhance code readability and maintainability while ensuring proper alignment behavior
added nullability checks and improved view inflation logic in ShareUserListAdapter . java to enhance robustness and prevent potential null pointer exceptions
refactor ` shouldInstrument ` method to include ` isFromAndroidSdk ` and ` instrumentingExcludeList ` checks to improve clarity and
added a condition to return the last column index based on the association ' s insert destination before source to ensure correct indexing of columns in the table
test : use ` ` / sys / fs / cgroup / memory . max ' ' instead of ` ` / sys / fs / cgroup /
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in ` AbstractCxx
added a check to throw an exception if the specified source under test is not among its dependencies to improve error handling and provide clearer feedback on
fix cross version proxy support for vanilla 1.10 . 2 .
remove unnecessary check for negative ` atIndex ` in ` StringUtils . java ` to simplify code logic and improve readability
increased the timeout duration from 100 milliseconds to 500 milliseconds and increased the sleep duration from 1000 milliseconds to 5000 milliseconds to allow more time for
refactor TaskOverlayFactoryGo to use AssistContentRequester for assist content requests to improve code clarity and maintainability by centralizing
updated the method for encoding the witness address in VoteWitnessProcessor . java to ensure proper validation of the witness address format
updated test cases in DefaultMethodRegressionTests . java to improve test coverage for method registration functionality
rename WorkloadManagerMxBean class for consistency to improve clarity and maintainability of the code
updated KafkaOutboundAdapterParserTests to use KafkaException instead of KafkaProducerException to ensure compatibility with the latest Kafka API changes
added a call to close the loader container in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a ` clear ` method to ` ExceptionThrowingTaskletStub ` and corresponding unit tests in ` FaultTolerantExceptionClassesTests
[ hotfix ] [ python ] improve error message in configbuilder
added ` extraProperties ` parameter to multiple tuner utility methods to enhance flexibility in configuring tuner configurations
add a check to prevent duplicate instances of the same instance in progress before adding them to the list of segments to ensure that only valid instances are
added a conditional check to return null if the touchable is not disabled to ensure proper handling of disabled touchable interactions
added a test for building precompiled headers in other cells to ensure compatibility and functionality of precompiled headers in the project workspace
throw a retryable exception if cache config do n ' t exist
added a method to check if a node package is installed and improved logging messages in JSweetTranspiler . java to enhance module installation
added ` @ ManagedObject ` and ` @ ManagedOperation ` annotations to ` MBeanContainer ` and ` Destroyable ` classes to enhance the management and
changed the condition from checking if ` inAppBrowser ` to checking if ` inAppBrowser ` is false to simplify the logic by elimin
refactor equality checks in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` . equals ( )
updated isReifiable check logic and added new classes T6558559a and T6558559b to improve type safety
improve worldeditlistener . tostring ( ) to make it easy to understand
camel - 14263 : camel - kafka - allow kafka consumer to shutdown the executor on shutdown .
removed default implementation of the examples ( ) method in mmm Schema . java and ppp Schema . java to streamline code by elimin
modified the thread handling logic in AgentRunner . java to ensure proper termination of the loop when the thread is not alive
added removal of dataset time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure accurate data integrity by removing the
simplified the condition for checking shards in FacetComponent . java to enhance code readability and maintainability
replaced direct calls to ` linker . getParseTimeDeps ( ) ` with ` CxxPlatforms . getParseTimeDeps ( c
added ' name ' attribute with getter and setter methods to multiple authentication properties classes to standardize the authentication properties and enable name identification for configuration purposes
added debug print statements in CFGPrinterObserver and improved error handling in IdealGraphPrinterDumpHandler to enhance debugging capabilities and provide clearer
refactor scan range handling in BaseQueryPlan and introduce a small scan threshold constant in QueryServices to improve code readability and maintainability
updated the ` RetryGatewayFilterFactory ` to include ` routeId ` in the ` toString ` method to enhance clarity and context of the
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
replaced direct calls to ` onOverviewShown ` with ` showForOverviewIfNeeded ` and added delay handling in ` DiscoveryBounce ` to
refactor conditional checks for null points in CheckIndex and add a new test for deleting all point documents in TestPointValues to improve code read
updated the parameters in the publish method call from ` true ` to ` updateLastState ` to improve clarity by indicating whether the last state
updated the string concatenation syntax for SKEWED _ STRING _ LIST _ VALUES in MetastoreDirectSqlUtils . java to ensure proper
added a null element to the exp collection in SpliteratorCollisions . java to ensure proper handling of null values during collection operations
danielwagnerhall : add ` ` textcaseinsensitive ' ' and ` ` exacttextcaseinsensitive ' '
replaced the ` do ` loop with a ` while ( true ) ` loop in ` ManyToManyConcurrentArrayQueue . java ` to improve
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 577 - add
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to improve error management by ignoring closed channel exceptions
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated window radius initialization in QuickstepAppTransitionManagerImpl . java to account for support for rounded corners on windows to enhance flexibility in window
refactor background handling in DesktopTaskView to use a View instead of a ShapeDrawable to improve flexibility and maintainability of background management
updated the initialization of ` upstreamCheckService ` in ` UpstreamCheckServiceTest . java ` to include ` selectorMapper ` and ` selector
updated logging statements in AbstractSession and AbstractSessionManager to use ` debug ` instead of ` warn ` to improve log clarity and reduce log
replaced error logging with returning locks in ZooKeeperHiveLockManager . java to simplify error handling and improve code readability
[ hotfix ] fix checkstyle violation in flink - core
added a boolean flag ` containsCustomData ` and modified mipmap generation logic in ` FileTextureArrayData . java ` to ensure m
updated assertions in DefaultMaskingFormatterTest to use single quotes instead of double quotes for string literals to improve clarity and consistency in string representation
added selectable property and methods to manage selection state in List . java to enhance user interaction by allowing selection behavior based on selection state
added a check to return false if the vector ' s value count is zero in LlapArrowBatchRecordReader . java to ensure that the
added file separator handling in PolicyContext and modified test cases in TestPolicyContext to improve file path management and ensure correct property expansion behavior
replaced ` HashSet ` with ` ArrayList ` for ` flatQueries ` and ` expandQueries ` in ` FieldQuery . java ` to improve
refactor TLSRestrictions class to improve code readability to enhance maintainability and facilitate future updates
added a Runnable to ensure the producer is closed only if it exists to improve resource management and prevent potential memory leaks
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance the functionality of node state assertions by allowing dynamic
added a check to delete the " LOCK " file if it exists in the workspace directory to ensure that the application does not leave a lock before
updated the client port initialization to use InetSocketAddress for standaloneServerFactory in MiniZooKeeperCluster . java to ensure proper port handling for the server factory
added a new method ` getResponse ` to the ` RestClient ` class for handling HTTP responses to improve error handling and logging for web service connection
updated the method call from ` segmentUploadSpec . getPushJobSpec ( ) ` to ` segmentTarURIStrs . toArray ( ) `
updated loginStudent method parameters to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure
added a null check for ` mCurrentItem . getItemId ( ) ` in ` EnhancedBrowseFragment . java ` and ` StdBrowseFragment
reduced the number of strings from 500 to 100 in TestSpecialOperations . java to optimize memory usage and improve performance
updated the initialization of ByteArrayInStream and removed the hexToBytes method from WKBAttributeIO . java to improve memory management and simplify the code
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a method to check if a transition is a direct substate and introduced a helper method to determine if a transition is a direct substate
added support for comparing ListMultimap and SetMultimap in MultimapSubject . java and corresponding unit tests in MultimapTest . java to ensure correct
added JoinOperation interface to PostJoinOperation class to enhance functionality by allowing additional join operations
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest ` for validating PostgreSQL data issue 258 to ensure
resolve intermittent failure on slow ci server
refactor AvaticaDatabaseMetaData class for improved clarity to enhance maintainability and readability of the code
changed default values of lifeTime , idleTime , and maxWaitTime from int to String in MongoDbConnectionPoolProperties and MongoDbConnectionFactory to
fix bad call to sipactivator . getmediaservice ( ) . createaudioinputformat ( ) in sdputils .
refactor handleFilters , evalFilters , handleDomainChanges , handleBlockJoin , and handleBlockJoin methods to return a boolean indicating filter application
[ java ] add an option to turn off timeout in shufflehandler .
replaced hardcoded value for quick step starting rotation with a constant from QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code
camel - 16462 : camel - xpath - add more log for the xpathfactory and camel - xquerybuilder
pdfbox - 4892 : use dataresource . class . getresource ( ) instead of this . getclass ( ) . getresource
pmd : add test case for escape backslashes in file name ( # 1751 )
added a check for the presence of the ' atlas ' property in the map to ensure that the map does not contain the ' atlas ' property
camel - 15836 : camel - core - optimize component to not use property placeholder .
close the database connection in BlockchainTest . java and remove unnecessary Kafka message handling in KafkaTest . java to improve resource management and eliminate unnecessary
refactor lines handling in CoreMarkdownNodeRenderer to use a new helper method to improve code readability and maintainability by centralizing split logic
updated import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code readability and maintainability
replaced ` ImmutableList . Builder ` with ` List ` and added deprecation warnings in several classes to improve code clarity and enforce immutability
added a condition to check if the Java VM name contains " OpenJDK " in addition to " Apple " to include OpenJDK
added keepAlive ( true ) to the baseUrl configuration in ReactorClient . java to ensure that connection stuck before proceeding
replaced string literals for position , normal , and normal attributes with constants from ShaderProgram to enhance code readability and maintainability by using
camel - 14263 : camel - core - optimize to reduce stack frame in use during startup .
updated null check for accountCapsule in UnfreezeBalanceActuator . java to improve code clarity and ensure proper handling of null values
update version number from 3.8 . 0 to 3.8 . 1 in xmppserver . java .
updated return statements to use ` unannotatedType ( ) ` for ` t ` and ` TypeVar ` instances to ensure correct handling of
updated assertions in StorageGroupProcessorTest . java to reflect the correct number of work sequence TsFile processors and reset the sequence tsFileSize to ensure
added a new ` DumpableCollection ` to the ` Server ` class and updated environment - related class loading to ensure compatibility with the latest J
added a parameter ` waitbeforestart ` of 2500 to the ` FFMpegVideo ` class to allow for a longer wait before starting
removed the ` _ skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructor to simplify the constructor by eliminating unnecessary
added unit tests for the ` listIndex ` method in ` AccessorsTest . java ` and removed an unused class ` TestListIndex `
add framemap ( ) to lirgenerator so that it can be use by the graalcompiler
updated import statements and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and RunningContinuousIntegration
fix boat not be able to spawn on water .
updated the ` toString ( ) ` and ` getLockID ( ) ` methods in ` Directory . java ` and ` RAMDirectory . java `
removed the ` allowExperimentalOptions ( ) ` method from ` Launcher . java ` to simplify the condition check for experimental options
added methods for ` AbstractPathAssert ` and ` AssertProvider ` in ` BDDAssertions . java ` to enhance assertion capabilities for better
refactor HostPort usage to use hostField instead of hp for improved clarity to enhance code readability and maintainability by using more
updated logging level from debug to warn for multiple Kubernetes config files and improved log message formatting to enhance log clarity and provide clearer guid
added methods to fill and manage OCFile uploads in FileUploadService and UploadListActivity to enhance file upload handling and improve upload status management
added ProviderLoader and ProviderLoaderListener classes for managing provider installation events to improve the management of crypto provider installation and error handling
updated imports and references from ` Span ` to ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests
updated the ` SelectFromDatabaseChangeLogStatement ` to use ` ColumnConfig ` with computed column names to simplify the database change log selection by
hhh - 14850 - fix schemaupdatetest for postgresql and postgresql10dialect
ignore partition for lite member if data member size be zero .
added scheduler state checks and logging in ExecutionScheduleManager and ExecutionSchedulerImpl to ensure proper scheduler start behavior and improve error handling during execution
modified InlineBox instantiation and conditional check for blockParent to enhance code readability and prevent potential null pointer exceptions
reformatted error messages for clarity in StatisticMap . java to improve readability and maintainability of the code
increased the staged rectangle slide end value from 383 to 500 to improve the responsiveness of the application
updated button and command table labels to use bundle strings instead of hard - coded strings to improve maintainability and readability of the code
updated condition in BukkitMain . java to include both KILL _ ROAD _ ITEMS and plot area checks to improve accuracy
added tests for touch exploration functionality in ShadowAccessibilityManagerTest . java and modified listener management in ShadowAccessibilityManager . java to ensure
pdfbox - 5328 : fix bug # 5328 - avoid arrayindexoutofboundsexception
use getname ( ) instead of getpropertyasstring ( ) where possible .
refactored NPOIFSFileSystem instantiation to use POIFSFileSystem . create ( ) instead of direct instantiation to improve code readability
added import statements for PlotArea and modified return logic to check for a valid PlotArea to improve robustness by ensuring a valid plot area is
updated the regex pattern for the version string in TestWebHCatE2e . java to ensure compatibility with the latest version format
updated the validation condition for ` count ` from ` < 0 ` to ` < 1 ` in ` Filters . java ` to ensure proper handling
fix kafka client id with multiple thread ( # 3395 )
updated import statements and added error handling in JavacCompiler . java to improve error management and provide clearer feedback on compilation failures
ggb - 2171 : repaint the list when there ' s a change to the index
camel - spring - batch : fix checkstyle violation in camel - core
added a method ` isAnimationFinished ` to check if the animation is finished based on the current state to provide a way to determine if the
updated import statements in LoginInfoEndpoint . java and added a new test method in LoginMockMvcTests . java to improve code readability and
added null check for otherUrl in TimeLineCursorAdapter and modified refreshing text in HomeFragment to enhance robustness by preventing potential NullPointerException
remove space from the input string when there be no space .
refactor ObjectHashSet implementation to improve performance and maintainability of hash set operations
replaced manual null checks with ` Arrays . equals ` for better readability and performance to simplify null comparison logic and improve code maintainability
[ mc - 12770 ] allow for deletion of enchanted books ( mc - 12770 )
test : add test for async get / put / get ( ) and asyncput ( )
rename ` TARGET _ FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP _ SUFFIX ` and
added detailed logging of email sending failures and improved error handling for invalid addresses and unsent addresses to enhance debugging capabilities by providing more informative
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` and introduced a constant ` EMPTY _ LABEL `
added multiple test cases for retrieving partitions by name with single and multiple sizes in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure
added a closing brace to the FileListListAdapter class to improve code structure and readability
updated import statements and variable types from ArrayList to List in OCFile . java and OCFileListAdapter . java to improve code clarity
update the index used for removing a view from the last child in BubbleBarView . java to correct the index used in the view removal
removed redundant hide statements from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline code by eliminating unnecessary dependencies
changed the ' policy ' parameter from ' true ' to ' false ' in S3Request constructor to control the behavior of the S3Request
update jfxradiobutton ' s animation when there be no timeline .
updated condition checks in DeweyNumber . java and added exception handling in DeweyNumberTest . java to improve error handling and ensure
added a static variable ` categorySetString ` and modified the return statement to remove the " Category : " prefix from the category set string to
corrected a typo in the WebSocket close code from " Invalid close control status " to " Invalid close code " to ensure consistency in the
added null check for classLoader in WebappLoader and updated test assertions in TestVirtualWebappLoader to ensure robustness by preventing potential NullPointerException
removed duplicate conditional check for mapped superclass class in PersistentAttributeTransformer . java to streamline code by eliminating redundancy
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` for testing the ` PorterStemFilter ` functionality to ensure the tokenizer correctly resets
added a success parameter to the postBatchMutate method and modified its implementation to handle index updates only when the miniBatchOp is successfully written
change package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
fix thread safety issue with chat window manager
removed duplicate calls to Sys . touch ( ) across multiple Java files to streamline code by eliminating unnecessary touch calls
updated the command - line interface to include " - mardu " and modified the untrackedFiles ( ) method to include " - unknown
camel - 14263 : camel - netty : fix thread safety issue with netty producer
added ' final ' modifier to ' direction ' , ' color ' , and ' range ' fields in DirectionalLight , PointLight , and
replaced direct calls to target . getWidth ( ) and target . getHeight ( ) with variables w and h in X11GraphicsConfig and W
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a way to retrieve
added annotation filtering functionality to the ClassFinder class to improve performance by avoiding unnecessary processing of inner classes and annotations
modify the handling of newLength in BytesColumnVector . java to ensure it does not overflow with Integer . MAX _ VALUE to prevent potential overflow
fix intermittent failure in writebehindmapstorewithevictionstest
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI
apps - 3395 use function . isEqual ( ) instead of function . expandtopolyfunction ( ) to compare function
added null check for the table before retrieving the column class to prevent potential NullPointerException when the table is not initialized
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException during class loading
added functionality to manage a whitelist of paths in DistBuildConfig and updated related classes to utilize these new configurations to improve flexibility in managing
show ' ofx ' and ' qif ' warning when double - entry be enable
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to potential issues with tracking down
changed return type of ` doJoin ` methods from ` void ` to ` boolean ` and added conditional checks in ` JoinTemplate ` , `
removed the Optional < Boolean > getAutodeps ( ) method from JavaLibraryDescription . java to streamline the code by eliminating
added FLAG _ ACTIVITY _ NEW _ TASK to the intent flags in LauncherTimelineCursorAdapter . java to ensure proper activity behavior when
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance query performance by enabling paging order
updated repository URL assertions in RepositoryConventionPluginTests . java to reflect the correct number of repositories to ensure the tests accurately reflect the correct repository
[ openfire ] add node affiliate to the cluster .
do n ' t use requestutil . normalize ( ) in taglibraryinfo
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added reflection - based array handling in CacheKey . java and refactored equality checks in CacheKeyTest . java to improve type safety and
updated file type detection methods to utilize ` FileTypeDetector ` instead of ` GnomeFileTypeDetector ` across multiple files to enhance compatibility
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
removed the ` ShadowVirtualDeviceParams ` class and refactored the ` getParams ` method in ` ShadowVirtualDeviceManager ` to simplify the
added a condition to check if the context is not removed from the session if the context is before execution to ensure that the context is not removed
refactor loopback address retrieval logic in NetUtil . java to improve clarity and functionality when checking for loopback addresses
renamed BUF _ SIZE to DEFAULT _ BUF _ SIZE and updated associated variables for consistency to improve code readability and maintainability by
added secure validation and retrieval method checks in KeyInfoReferenceResolver , modified exception handling in TransformXPath , and simplified URI handling in ResolverLocalFilesystem
added a boolean flag ` iconChangeListenerInstalled ` to manage icon change listeners to ensure actions are only enabled when the icon change listener is not already
added " ru " language support to the Language class to enhance localization support for Russian - specific locales
hhh - 14836 : use nanoseconds for duration conversion in sqm to sqlastconverter
added frameState . disableStateVerification ( ) method call to SubstrateGraphKit . java to disable state verification for improved performance
added system property reset functionality in RobolectricTestRunnerTest and introduced a new method in TestUtil to reset system properties to ensure proper
added system class loading for SLF4J LoggerFactory in ViewClassLoader to ensure proper loading of LoggerFactory in the application context
add a check for the packaging parameter in the ChangePackaging class and implement a test for removing the default packaging to ensure that the
fix flaky test : download file with extension ` ` txt ' '
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to reset the buffer after
updated unit handling in JogService and Settings classes to use preferredUnits instead of defaultUnits to improve clarity and consistency in unit management
updated date formatting in DatePatternConverterTest to use UTC timezone to ensure accurate date representation based on the current time zone
updated return statement formatting in Terminator . java to improve code readability and maintain consistency
updated error messages in FileSystem , LocalFileSystem , and DistributedFileSystem to provide clearer guidance on file URI validation and authority to improve clarity
fix npe in jabrefframe . showtrackingnotification ( ) ( # 1649 )
fix ftp test which fail on slow machine
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to improve performance by avoiding concurrent
added an ` ignore ` method to ` JavaUtilLog ` , ` Logger ` , ` Slf4jLog ` , and ` Std
added a null check for the runningTaskView before proceeding to prevent potential NullPointerExceptions during execution
removed unnecessary type casting for item and contents in BukkitWorld . java to simplify code by eliminating unnecessary type casting
removed the call to GraphicsUtil . cleanImage in PanelManager . java to clean the image before processing it
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to implement memory - based directory mapping and unmapping functionality
added null check for the ` ic ` object before creating the ` cleanUpColor ` instance to avoid potential ` NullPointerException ` when ` ic ` is
updated the field name from ' field1 ' to ' field1 _ s ' in the query equality assertion to improve clarity and accuracy of
refactor ExtendedOperatingSystemMXBeanImpl class to improve code readability and maintainability
added functionality to install and manage left commands in the SideMenuBar to enhance user experience by allowing dynamic updates to the title area
added advanceWindowed setting to AppSettings and modified setup logic in TweetActivity and UserProfileActivity to conditionally call setUpWindow ( )
added support for SybaseDatabase in DropPrimaryKeyGenerator to enhance compatibility with additional database types
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] wait for the leader to be ready before incrementing last record position .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement to the NearCachedClientMapProxy class to optimize performance by avoiding unnecessary processing
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to shutdown the HTTP server and handle exceptions during server startup to improve error handling and ensure graceful shutdown of the server
camel - 15836 - camel - aws2 - s3 : use bindtoregistry to bind to endpoint in camel - aws2 -
[ hotfix ] [ runtime ] rename taskmanagermetricstore param name to taskmanagershandler . taskmanager _ id _ key
db upgrade : drop key that do n ' t exist in 2.2 . 7
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to append a hyphen to the password to
added maxEnergyLimit variable and updated energyLimit assignment logic in VMActuator . java to improve energy limit handling for constant calls and ensure
added maxInMemorySize property and its getter / setter in HttpClientProperties . java , and modified the webClientPlugin constructor in HttpClientPluginConfiguration
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
added new files RunCucumberTest . java , StepDefinitions . java , and StepDefinitions . java to implement Cucumber - based
updated the ` writeDouble ` method in ` TypeJsonUtils ` to handle ` JsonParseException ` when parsing double values to improve robustness by
removed redundant byte array elements from the buffer in Utf8StringBuilderTest . java to streamline test code by eliminating redundancy
added a check to ensure parameters are only encoded if they are not already set to improve robustness by avoiding potential null pointer exceptions
camel - 16400 : camel - core - circuit breaker - allow to configure maximum number of output for load balancer . thanks to
updated the assertion in TestIndexWriterExceptions to use the maximum buffered documents to ensure that the test accurately reflects the maximum number of buffered
replaced instances of ` String ` with ` Sha1HashCode ` for resource APK , primary Dex , string assets , and text
added methods to convert Enum objects to integers and longs in AsmRuntime . java to enhance functionality for handling enum values in the Asm
add is _ medium and is _ deep _ dark tag to forge biome ( # 7848 )
change asyncimageloader to use a separate thread pool
changed access modifiers of several fields and methods from private to protected in BaseTableUpsertMetadataManager . java to allow subclasses to access these fields and
updated abbreviation for JO , LB , and SY formats from " л і т " to " �
replaced the method ` getImage ( ) . equals ( ) ` with ` hasImageEqualTo ( ) ` for image comparison to improve code
camel - 18497 : camel - jbang - run command now support specify a different camel version .
added handling for NaN score values in CrawlDbReader . java to improve robustness by avoiding potential null pointer exceptions
added cleanup method and timestamp handling in OnStartupTriggeringPolicyTest to ensure temporary files are cleaned up after tests to improve resource management and prevent
replaced requestFocus ( ) with requestFocusInWindow ( ) in FilterConditionEditor . java and updated focus handling in FindAction . java
[ hotfix ] [ runtime ] implement autocloseableasync in checkpointcleaner
added a new file ` XPathWhiteSpaceTest . java ` to validate XML schema handling to ensure proper XML parsing and validation of whitespace in XML schemas
fix ( bonsai ) : do not override trie log layer when get mutable state
refactor FilledNewArrayInstruction class implementation to improve code readability and maintainability
added a timeout of 60 seconds to multiple @ Test annotations in SimpleNetworkTest . java to allow more time for tests to complete before proceeding
updated the method to check if the parentPath ends with a trailing slash instead of using substring to improve clarity and correctness in path path handling
added a print statement to indicate failure to load the skin file to improve error reporting for better debugging and troubleshooting
added ` markDirty ( ) ` and ` isValid ( ) ` methods to ` LgoGroupedLevel2Update ` and modified ` Lgo
added a constant ` UNDEFINED ` to the ` Result ` class and replaced instances of ` new Result ` with it in ` TestStep ` to
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper handling of NullPointerExceptions during transaction registration
refactor uploadjobmultipartoperation to not use completablefuture , and add test for jet service
[ hotfix ] [ runtime ] do n ' t ignore miss journalfiles when recover
bug fix : do not ignore child of a parent node in view layout
modified the ` pos ` variable and ` ensureAvail ` method to use a ` sizeMask ` instead of a ` byte [ ] `
added @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to mark tests as ignored due
fix indexoutofboundsexception in storageproxy . getendpoints ( )
removed the ' final ' keyword from the boolean parameters in FileManager . java to improve code readability and maintain consistency
added new transform function types " plus " , " minus " , " times " , " ceiling " , " log " , " pow
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` to the ` VariableElement ` class to provide a consistent way to
updated RFC version from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compatibility with the latest rfc standards
fix : fix classcastexception in searchannotationvisitor
refactor ListActivity to use a loop for retrieving selected items and replace HashMap with SparseBooleanArray in NoteAdapter to improve performance and memory management
rearranged conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation and added a new test for absolute resource paths to ensure correct file path
updated PreviewPositionHelper to accept a Context parameter and modified its initialization in TaskViewSimulator and TaskThumbnailView to utilize SplitScreenBounds
[ java ] simplify logic for publish newleadershipterm to improve code readability and maintainability
updated test assertions in PMDCoverageTest . java to improve clarity and accuracy of error messages to enhance test reliability by ensuring correct
updated the skip logic in ByteArrayInputStream and added a new Skip class with test cases to improve input stream handling and ensure correct skipping behavior
reordered conditional checks for promptUpdate and showChangelog in UpdaterTask . java to improve code readability and maintainability
changed the ` MAX _ HEADERS ` constant from ` final static ` to ` public static ` and added a conditional check before calling ` block
added " rt . jar " to the STANDARD _ LIBRARIES list to support additional library dependencies in the mod class loading process
refactor connection rejection logic in AbstractHandshakeHandler . java to enhance clarity and maintainability of the handshake handling logic
refactor ` collectGranules ( ) ` method to throw ` IOException ` and update ` heterogeneousGranules ( )
added a condition to check if the response is already committed before sending an error to improve error handling by logging a warning when the response is already
simplified condition checks in HttpSession . java to enhance code readability and maintainability
updated fade - out behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorialController to enhance
[ api ] add name to prefab if it do n ' t already exist .
updated external group configuration to include " internal . superuser " and " cn = superusers , dc = test , dc = com " to
updated thirtyDays initialization and added validation for transfer amount in TransferActuator to ensure thirtyDays is within valid limits and prevent invalid transfer
replaced hardcoded ' / ' with File . separator in FileResolverTestBase . java to ensure compatibility across different operating systems
ggb - 2272 undo / redo in av , make sure ` ` keep focus ' ' work again
updated GpsMainActivity to include session description and changed AnnotationViewFragment to use EventBus for command events to enhance the application ' s ability
update JsoupNonVisualRegressionTest to save a PDF file if the number of pages does not match the expected value to ensure that
[ jme3 ] deprecate androidbufferallocator in favor of androidnativeallocator
added checks for flags that start with " ! " in Main . java and Util . java , and modified flag validation logic in PrimaryItem .
added a NOPMD comment to the ` executeQuery ( ) ` method in ` JDBCHistoryCache . java ` to address potential
refactor conditional check for item use operation in BattlePassManager . java to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4237 - fix test which fail on slow
exclude this unit test for a while , since it fail because componentcontext . initcomponentslifecycle ( ) ; be fail when db be unavailable
added null check for main . command and modified argument handling in Main . java to improve user experience by providing help messages when no command is provided
increased LightOutputStream size from 7 to 4 across multiple classes to optimize performance by reducing the number of light output streams
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
modified ClassWriter . java to introduce a showBlank option and updated conditional checks accordingly to enhance flexibility in displaying blank lines and improve code read
updated the assertion to check the presence of the variable ' sn ' in the Person class to ensure that the variable ' sn ' is not null
added a null check for the file extension before checking if it is not null to ensure that the method does not throw a NullPointerException when the file
change return statement from ` return ` to ` continue ` in ` ContactRightButtonMenu . java ` to improve control flow by ensuring the loop
[ hotfix ] [ runtime ] fix potential npe in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver . java to improve code readability and maintainability
refactor the binding and closing process of PlainSocketImpl to improve clarity and ensure proper resource management to enhance code readability and ensure proper
added functionality to manage and clear removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve the management of removed items in the
updated log message to reflect the element ' s in - view center point instead of the center of element to clarify the accuracy of the
added a new file ` bug4865918 . java ` to implement a GUI test for a scrollbar to verify that the scrollbar block increment
replaced the use of ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code by
updated import statements and added functionality to handle group triggers in QuestCommand . java to improve code organization and enhance user feedback for quest commands
added a method to start an XML file chooser in the AccountsActivity class to enhance user experience by allowing users to select GnuCash
added @ tostring ( callsuper = true ) annotation to partitionchangeevent and tbapplicationevent
added a constant CONFIG _ URI to the CloudService class and updated its usage to improve configurability and maintainability of the CloudService configuration
replaced setViewportComponent ( scroll ) and setJScrollPane ( scroll ) with setViewportComponent ( scroll ) and setJScrollPane ( scroll
updated key handling in LwjglInput , ParticleEditor , Layout , and Twl classes to include a new key mapping for the
added a conditional check for the " moreIndexingFilter . indexMimeTypeParts " configuration before retrieving and adding the " type " part to the document
added a pattern to identify author comments in JSDoc . java to enhance comment processing by including author information
rename metrics constants from DELTA _ TOTAL _ DATABASES and DELTA _ TOTAL _ TABLES to CREATE _ TOTAL
updated HiveDatabaseSchema and HiveSchemaFactory to accept ` DrillHiveMetaStoreClient ` and ` SchemaConfig ` as a parameter to
updated the ` oauth2LoginLinks ` method to accept an additional ` queryParams ` parameter and added error handling to enhance the functionality of the `
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al
updated the supported condition to exclude Firefox in WebAudioWrapper . java to ensure compatibility with different browser versions
added a method to append a ServerInterceptor to the GrpcServerBuilder class and removed the private constructor from InterceptorConstants to enhance the server builder
added support for the " DEFAULT " character set in the database schema and updated the test cases accordingly to ensure compatibility with the default character set and
[ hotfix ] [ runtime ] fix bug in streamingaggtemplate and writerrecordbatch
[ hotfix ] fix checkstyle violation in executiongraph
added a boolean flag ` hasFrom ` and modified ` DeleteDeParser ` to conditionally append " FROM " based on its value to enhance
refactor synchronization logic to handle multi - status responses and improve error logging to enhance clarity and maintainability of the synchronization process
refactor applicable test checks to use a new utility method in RecipeScheduler to improve code readability and maintainability by centralizing applicable test
updated regex pattern for log line parsing in LogAnalyser . java to improve accuracy of log output formatting
( chore ) camel - integration : add support for google cloud integration test
fixed - rsearch . setmaxmax ( ) and rsearch . minmax ( ) method do n ' t respect exclusive parameter . #
add option to select cclicense and cclicensestep option to select cclicense and cclicense .
added a null check for ifcRoot . getGlobalId ( ) before putting it into guidIndex to avoid potential NullPointerException when ifcRoot . getGlobalId
updated comparison logic in OptionalAssert to use a custom comparison strategy to improve consistency and reliability of value comparisons
updated font size handling in NoNewLineParagraphCssApplier and ParagraphCssApplier to conditionally set last margin bottom based on its presence to
added a new file TestArrayCopyToFromObject . java that tests array copy behavior to ensure that ArrayStoreException is thrown when dealing with non -
replaced instances of ` Escaper . escapeAsBashString ( ) ` with ` Escaper . escapeAsPythonString (
fix regression introduce by http : / / issues . apache . org / activemq / browse / amq - 2638 -
deprecate findfiles ( modcontainer , function , function , boolean , boolean ) in forgehooks . java and craftinghelper . java
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test case due to unstable test case
modified the request handling in TestInternalInputBuffer to check for null exceptions before asserting a 400 response to ensure that the test accurately verifies
added a locking mechanism for class loading and modified the ClassEntity autoloadCall constructor to include a name parameter to improve thread safety by preventing multiple
added server version comparison logic to CustomPlaybackOverlayFragment and updated PlaybackController to check HLS support based on server version to enhance server version
updated localhost handling in BasicKrb5Test . java and OneKDC . java to use canonical hostname resolution to ensure consistent retrieval of hostname
updated Jsr250Voter to conditionally return ACCESS _ DENIED or ACCESS _ ABSTAIN based on jsr250AttributeFound
feat ( mp4parser ) : add new box class to the mp4parser
added HS2 _ PROXY _ USER constant and modified sessionParams handling in ConnectionFactory . java to include the username from the proxy user if
added support for compression compression using SnappyCodec in HdfsCompressionCodec and corresponding unit tests in HdfsProducerTest to enable support for
added a sleep delay of 1000 milliseconds in HttpClientTest . java to improve reliability of HTTP connection handling
fix bug # 49966 - fix xssfcell . setcelltype ( cell . cELL _ type _ blank ) and x
updated glyph width calculations and modified text assignment in GlyphLayout . java and BitmapFontTest . java to improve text formatting and ensure accurate text representation
updated references to ` ISTIO _ VERSION ` , ` ISTIO _ PILOT ` , and ` ISTIO _ BIN
replaced calls to ` apiClient . ReportPlaybackStartAsync ` and ` apiClient . ReportPlaybackProgressAsync ` with direct calls to ` Tv
fix potential resource leak in simpleauthority
fixed maploader hit eviction when initial load fails
updated the return statement to use bitwise OR instead of bitwise AND for LENGTH _ BIT to ensure correct handling of error flags in response processing
[ ds - 3952 ] fix default policy for community that have no read policy .
added a concurrent map for managing CompositeFont instances to improve performance by avoiding redundant creation of CompositeFont instances
simplified the calculation of prefHeight by removing unnecessary calls to getHeight ( ) to improve code readability and maintainability by eliminating
drools - 2595 dmn feel validation error message for unknown variable name ( # 2598 )
removed unused imports and updated generic type declarations in multiple Java files to improve code clarity and enforce type safety
changed method visibility of ` finishRunningRecentsAnimation ` from private to public and updated long press runnable execution to use ` MAIN _ EXECUT
added null checks for node ID and edge types in ElementFactoryImpl and updated edge handling in ImportContainerImpl to improve error handling and ensure proper
[ flink - 16405 ] [ python ] fix npe in fnapicontrolclient and beamfnstategrpcclientcache when
[ hotfix ] fix npe in binfiles when bin be large than bin limit .
replaced the method for finding the closest core by using a loop to find the closest core to improve accuracy in determining the closest core based on
added a check to skip copying the content - length header in the RestTemplateCopyHeaderFilter to optimize request processing by avoiding unnecessary content length
updated the ` Java2TypeScriptTranslator ` to handle string and character literals correctly and changed method names in ` SyntaxTests ` for clarity to improve code readability and functionality while aligning with TypeScript export conventions
updated channel bandwidth settings and sample sizes in multiple classes to improve performance and visual consistency in channel processing
hbase - 27979 add - allregions option to canary to enable all region on a regionserver ( hbase - 279
removed unused NodeModule import and replaced it with a default empty map in TestCassandraConnector to simplify configuration and improve code readability
added a call to reset the cursor position in the order index to ensure the cursor position is reset before processing new data
added minimum size constraints in CallDialog and updated frame dimensions in OneToOneCallPanel to improve UI responsiveness by ensuring minimum size does not
fixed vanilla bug where state information be lose during world gen .
refactor tests in TestHTTPSamplersAgainstHttpMirrorServer to use static setup and teardown methods to improve code readability and maintainability
added null check and removal logic for KerberosPrincipalEntity in KerberosPrincipalDAO . java and removed unused imports from KerberosPrincipalEntity .
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method call by eliminating unnecessary functionality
improve error handling in apr connector by catch all throwables and log them instead
updated the error message for the android . licenseKey in AndroidGradleBuilder . java to clarify the usage of the Monetization
updated the method to retrieve the display name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource ` and
[ drools - 5271 ] fix package name resolution in kie - maven - plugin
added an assumption to skip tests on the Java version 19 to ensure tests are only executed on supported features of Java 19
removed the context parameter from the assignTargetsForSplitScreen method and its associated logic to simplify the method signature and improve clarity by elimin
refactor LeaderLatch class for improved readability to enhance maintainability and facilitate future updates
added methods to initialize zk - SNARK parameters for Sapling to ensure proper initialization of zk - SNARK parameters for Sapl
refactor transaction confidence handling to use ListenableFuture for depth management to improve thread safety and manage depth changes effectively
updated variable and method names from longtitude to longitude for consistency and clarity to improve code readability and maintainability by standardizing variable
set default value of platformName to " ios " to ensure platformName defaults to " ios " for consistency
refactored PageEditClient to improve code structure to enhance maintainability and readability of the codebase
reformatted conditional statements in Graphics2D . java for better readability to improve code clarity and maintainability
refactor methods in CreateVisibleSignature . java to improve code readability and maintainability
do n ' t swallow exception in the nextoutgoingframe ( )
refactor ClassLoader retrieval to use AccessController for improved security to enhance security by ensuring the caller class is accessible within a privileged context
added logic to remove child categories from their parent if they do not match the current ID to ensure proper handling of category relationships in the database
fix contribution manager not show due to missingresourceexception
added a new BigDecimal field ` vwap ` to the ` Ticker ` class and modified the constructor accordingly to include it to enhance the
added functionality to manage the visibility and padding of the no widgets view in the SearchAndRecommendations scroll controller to improve user interface respons
add a rendergraphapi to facilitate the creation of a node in the render graph .
added a method to set the primary color in NCFirebaseMessagingService to ensure the application uses the primary color from the primary theme
updated ShadowUsbManagerTest . java file to improve test coverage for USB management functionality
updated calculations in ` AbstractDifferenceRecommenderEvaluator ` , ` AverageAbsoluteDifferenceRecommenderEvaluator ` , and ` RMSRecommenderEvaluator `
added a call to ` selectedConfiguration . update ( ) ` in the ` Rocket ` class to ensure the selected configuration reflects changes
updated width and height calculations in AndroidGraphics to ensure values are at least 1 to prevent potential errors caused by invalid dimensions
replaced instances of HashMap with LinkedHashMap in multiple classes to ensure consistent iteration order and maintain insertion order
replaced ClosureManager with ClosurePool for closure handling to improve closure management by utilizing a dedicated pool for better resource management
( chore ) camel - test - infra - camel : migrate camel - test - infra - camel to junit5 ( #
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , implementingIngressIntegratedBootstrap . java
[ ds - 3952 ] remove unused test and fix javadocs
refactor authentication equality check to use a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by
added a conditional check to return false if the system property jnr . ffi . compile . x86asm is not set to true to ensure
replaced calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` to improve code readability and maintainability
added a new ` @ Insecure ` annotation and refactored ` MessageBuffer ` to use it to improve encapsulation and provide a clearer
added new configuration variables for various Hive - related configurations in HiveConf . java to enhance the flexibility and functionality of Hive configuration settings
initialize scopes and policies with new HashSet instances in ResourceSet . java and add a null check in DefaultResourceSetService . java to ensure that
made the ` decrefOnClose ` variable final and updated the constructor of ` MultiReader ` to include ` readerFinishedListeners ` to
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 files to
simonstewart : fix test that be break in 2.49
added a method to retrieve the first type argument from a generic type and made several classes final to enhance code clarity and enforce immutability
expose the correct class in the public api to avoid boxing
added a duration parameter to the FlipTransition class and updated related methods to enhance the functionality of the FlipTransition class by allowing dynamic adjustment
removed unnecessary logging statement for subsAreValidForStreaming in DLNAResource . java to streamline code by eliminating unnecessary checks
bump major and minor version number to 9.10 . 0 - rc10
use java version - specific warning in ` stacklocator ` ( # 1760 )
update parser configuration to support java 16
updated padding values for the status view based on the number of replies to improve visual consistency and readability of the status view
fix potential nullpointerexception in abstractpartitionprimaryreplicagelimitertask
added metadata handling in SeedUrl and SeedResource classes to enable storage and retrieval of additional metadata for seed URLs
added null check for declaration before creating a cloned pattern to avoid potential NullPointerException when declaration is null
[ hotfix ] [ test ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
fix wrong package name in annotationactionvalidatormanager when package name be not specify .
updated assertions in IterableTest to use explicit casting of null to Object to enhance type safety and prevent potential ClassCastException during null checks
added stream and parallelStream methods to MapIterable and PrimitiveObjectMap classes to enhance performance and flexibility in streaming and parallel processing of collections
return a cloned instance of notifInfo instead of the original to ensure that the original notifInfo is not modified after processing
make sure to iterate over all command key , not just the first one
add note about accuracy of output size calculation of aeadblockcipher and appropriate handling of plaintext output during decryption prior to authentication .
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a check to initialize ` id ` in ` PackageResourceTable ` and changed ` ResourcesMode ` from ` best ` to ` legacy `
added conditions to check if both ulSize and ulPos are zero before retrieving the head and post tables to ensure accurate representation of font appearance
refactor SignPlugin to accept a list of HttpMessageReaders and update the constructor to accept a list of readers to enhance flexibility by allowing
refactor Int2ObjectCache implementation to improve performance and reduce memory usage
added validation to check if the remote repository is an instance of MavenDeployer before proceeding to ensure that only valid Maven deployers are processed
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
added SSL context setup and error handling in LinkyHandlerFactory . java and updated cookie management in EnedisHttpApi . java to improve SSL
refactor HiveFunctionRegistry to use Java Streams for string manipulation and add function replacement mapping to improve code readability and maintainability by utilizing
http : / / issues . apache . org / jira / browse / amq - 4237 - fix discoverynetworkreconnecttest to
updated the method signature of ` getBuildTargetForAlias ` to include ` possiblyFlavoredAlias ` and adjusted its handling to improve clarity
[ olingo2 ] fix npe in odata2 consumer when feed be empty
added equivalent version handling in MetaStoreSchemaInfo to improve compatibility with different Hive versions
vm expunge : do n ' t expunge vms in expunge state
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in new code
refactor ONDashClockExtension to use a new method for retrieving note titles and content to improve code readability and maintainability by central
updated the test class name from ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and modified assertions in ` T
replaced ` commit ( ) ` method calls with ` apply ( ) ` method calls across multiple classes to improve code readability and maintain consistency
added TestIdleListener class and modified session initialization in AsyncTimeoutTest . java to implement idle listener functionality for better session management
make bigqueryioit . testbigquerytable a unique name for easy debugging
set the background resource for the icon in HotseatPredictionController and reset the icon in BubbleTextView to improve visual clarity
mondrian : fix typo : getflushafterquery - > flushafterquery
[ native ] add test for native query execution
[ junit ] fix npe in limeexplanation # getactivefeatures ( )
added argument handling for running commands with - r in AppleSimulatorController and InstallCommand to allow users to specify command - line arguments for
replaced calls to ` getArea ( ) ` with a local variable ` area ` for current paragraph start and end to improve code read
added a check for the availability of the lifecycle state in both ContainerBase . java and StandardContext . java to ensure that the lifecycle state is
added functionality to clip the background of the QSB widget to enhance the visual appearance of the QSB widget
added flag processing tracking and logging in SQLManager . java , modified string splitting in BlockTypeListFlag . java , and improved flag string
replaced specific OpenGL imports with a wildcard import and modified depth rendering logic based on the presence of floatingText ' s occluded status to
[ gr - 16400 ] fix nfi package name for linux .
added getter and setter for propagationBehavior in JdbcAggregationRepository to allow configuration of the propagation behavior for transaction templates and readers
add check for l1 regularization and l2 regularization in layervalidation . configurebaselayer ( )
added exception handling to the readWrite method in AbstractChecker . java to improve robustness by logging errors during read / write operations
changed the visibility of the colorStack array from static to instance variable to allow external access to the colorStack variable in the GlyphLayout class
updated ` getMappedStatement ` and ` hasStatement ` methods to set the second parameter to true to enable the retrieval of mapped statements and their
convert tradableIdentifier and currency to lowercase in BTCEPollingMarketDataService to ensure consistency in data retrieval
fixed - channelstatetests # testmultichat ( ) , # testmultichat ( ) , # testmultichat (
remove ` versionedhashes ` from ` enginepayloadparameter ` ( # 1188 )
clear trigger price field when it ' s change in mutable offer view
refactor : add ` ` error ' ' check to studentfeedbacksubmissioneditsaveaction
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2635 hbase - 2634 hbase - 2635 do not log a debug message if there be no
# 113 - enh : add beanstate . setmanyproperty ( ) and entitybeanstate . setmanyproperty ( ) ( #
added a boolean flag ` _ alwaysSaveUri ` and corresponding getter / setter methods in ` FormAuthenticator . java ` to control the behavior of
added two new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide a
replaced specific imports with wildcard imports for java . awt and javax . swing , and added firePopupMenuWillBecomeVisible method to
removed redundant initialization of the ' insert ' variable in StressProfile . java to streamline the code by eliminating redundancy
replaced direct calls to ` JavaConversions . asScalaIterable ` with a static import of ` collectionAsScalaIterable `
added null check for requests and improved logging messages in MockServerEventLog , HttpForwardObjectCallbackActionHandler , and CallbackWebSocketServerHandler
log warn if property file can not be load
refactor session dataset initialization to use try - with - resources to ensure proper resource management and prevent potential memory leaks
added a condition to check if the NIC supports multicast and the NIC is up before proceeding to ensure proper handling of network configurations for
do n ' t add extra space character to parser . sqlcommand when it be change
updated methods in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to use latestConsumeTime and latestConsumeTimeFor
added a method to set an invalid session strategy and improved null checks to enhance session management by ensuring the invalid session strategy is not null and
improve error message when a token can not be find .
add a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` containsKeys ` in ` MapAssert `
updated JdbcProxyGenerator to use DelegatorGenerator for mocking JDBC4 prepared statements and added JDBC4 temporary prepared statement methods to enhance flexibility
added a ` ensure ` method to ` ServerWebSocketContainer ` and updated ` DirectUpgradeTest ` to use ` Handler ` instead of ` Context
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to replace ImmutableMultimap with ImmutableListMultimap for better
pdfbox - 4892 : avoid npe if no initial moveto ( ) be call ; use point2d instead
replaced the initialization of the hooks array with a static EMPTY constant in MethodHook . java and refactored its initialization in Method . java
added support for granting access in MockAuthenticationManager by introducing a grantAccess flag to enhance flexibility in authentication management by allowing users to
updated the ` afterJob ` method to accept ` JobExecution ` as a parameter across multiple classes to allow for better job execution management in the job
added a check to verify if the file can be executed before verifying if the file can be write to ensure that only writable files are processed
feat ( scala ) : update protoc to v3.15 . 3
refactor samplerservice . savesampleresult and resultcollector . recordresult ( ) to use sampleevent object instead of sampleresult
added new constants for Battery level , annotation , time with offset , start timestamp , and profile name in BundleConstants . java and updated
make searchexpression . applyrule accept a map instead of a hashtable
moved geo object to absolutescreenlocateable , not geowidget
updated JoglGraphics and ProjectiveTextureTest to improve resizing behavior and texture filtering to enhance rendering accuracy and enhance texture quality in the
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to improve resource management by ensuring the file is writable
camel - 1640 : fixed property component to intercept from property component .
updated time comparison from ' > ' to ' > = ' in ActionScheduler . java and modified test assertion in TestActionScheduler . java to
updated debug log path in DbgPacker . java and added null check for debug _ log in DbgPacker . java to ensure
renderingdebugconfig . hud _ hidden ( ) now bind to render . debug ( ) .
move gate reset logic to pipe . resetgate ( ) so that it can be use by other pipe .
added locale management in TestSupplementary class to ensure consistent locale handling during tests
updated the randomness of the Team ' s color value from 0.8 to 0.4 to improve the accuracy of the team ' s
changed the type of ` activeMatchedStates ` from ` Set ` to ` Collection ` and updated logging statements to use ` logger . isLoggable (
updated the logic to check if the annotation is null and the expected exceptions are empty to ensure that the method correctly handles cases where the annotation is
updated error handling in StorageResources to include specific error messages and added exception handling in StoragePluginRegistryImpl to improve error reporting and provide clearer
replaced multiple occurrences of ` ReportUtils . report ` with a new ` toCsvFile ` method in ` CallTreePrinter . java `
added null checks for note and noteTmp in DetailFragment . java and updated references in WidgetProvider . java to improve robustness and ensure proper
added a mechanism to track and calculate the number of loaded tasks in the AssetManager class to improve the accuracy of loading based on the number of
danielwagnerhall : enable native event for firefox on window .
added custom score and fetch interval metadata handling in the Injector class to improve scoring and fetch interval management in the application
updated imports from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in ` ScimExternal
updated the null check for zkController in CoreContainer . java and added a new method isShareSchema ( ) in TestCoreContainer . java
updated sizeInBytes ( ) method calls to accept a boolean parameter for better memory management to ensure accurate size representation during indexing operations
changed assertions from ` assertEquals ` to ` assertNull ` for version1 _ 2 in ` VersioningTest . java ` to ensure that
updated SQL queries to include additional conditions for handling non - null domain columns to ensure compatibility with PostgreSQL versions 7.3 and above
[ java ] do not send appendnewleadershiptermevent if appendnewleadershiptermevent fails .
added a method to build a MediaType from the HTTP request headers to enhance the handling of HTTP content types in the WebClient plugin
updated method names from ` fill ` to ` fillSlice ` and ` fillUsingLengthPrefix2 ` to ` fill ` and ` fillAndGet
refactor transaction handling logic in AcidUtils and add a new test for major table compaction in TestCleaner to improve code readability and
fix npe when create table with null storage scheme and qualifier encoding scheme . patch by jbellis ; review by jbellis for cassandra
added new classes PojoProducersCustomized . java and RestProducersCutomized . java to support customization of pojo and rest
updated cache configuration retrieval to use a constant CACHE _ SECTION _ NAME instead of a hardcoded string to improve code readability and maintainability by
removed duplicate registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to streamline the registration
add miss recipe for wooden slab in oredictionary
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of session management components
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14850 - fix test that fail on mariadb
update positioning calculation for spriteBatch drawing in HelloWorld . java to ensure correct positioning of the sprite rendering
updated player permission checks and improved the representation of plot coordinates in PlayerFunctions . java and WorldGuardListener . java to enhance accuracy of plot
added a deprecated static final version constant for Lucene 8.5 . 0 to indicate that this version should no longer be used in future development
updated string concatenation in the log statement for clarity to improve readability of log messages for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing of a
updated the dependenciesType variable type from String to SemanticGraphCoreAnnotations . DependenciesType and introduced a new DependenciesType enum to improve type
refactor target description logic into a separate method in ParseContext to improve code readability and maintainability by centralizing target description logic
updated the test method from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to simplify
reduced the size of the configBlocks array from ` Block . blocksList . length ` to ` 256 ` and updated the loop index to
disable Paper only feature if version do n ' t support it
updated SQL statement escaping logic for PostgresDatabase in AbstractSQLChange . java and added a corresponding test in AbstractSQLChangeTest . java to
added ` ofAll ` and ` withAll ` methods to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
updated error handling for mismatched shortname and permalink in BuildNavAndPDFBody . java to improve code robustness and provide clearer error messages
fix http : / / code . google . com / p / mybatis / issues / detail ? id = 561 : nhc
updated ChangeSet retrieval logic to use the root database change log if the change log is null to improve robustness by ensuring a valid ChangeSet
removed unnecessary instantiation of MethodResult in StaticMethodInterceptor and modified response body assignment in RocketMQGlobalPluginHandler to improve code clarity and
added database drop functionality in TestHiveMetaStorePartitionSpecs and logging in TestObjectStore to enhance database management and improve logging in TestObject
added a new parameter ` order _ currency ` to the ` BithumbAuthenticated ` class and updated its usage in ` BithumbAccount
remove ` ` thymeleafframework . sseflux . thymeleafwebconfig ' ' . thymeleaf . templateresolver
updated method return type checks to use ` getReturns ( ) . isVoid ( ) ` instead of ` getFullyQualifiedName ( ) ` to
renamed ` YAML _ READER ` to ` YAML ` and added a new endpoint ` listYamls ` to improve clarity and
removed the public access modifier from the equals ( ) and hashCode ( ) methods in the Marker class to enhance encapsulation by restricting access to
refactor thread factory to use a lambda expression and introduce a new method for awaiting termination in multiple classes to improve code readability and
added unit tests for adding lists with simple and mapping converters in MongoTemplateTests . java and created a new PersonWithAList class to ensure
ggb - 1343 sync applet panel size when resize the view
replaced direct toolbar visibility setting with a delayed handler to improve UI responsiveness by allowing a delay
refactor the initialization and handling of the first page reader in ` SeriesReader . java ` to improve code readability and maintainability by encaps
save vm password if vm be not run on router
added flags for usingOutputStream , usingWriter , and isCharacterEncodingSet in the Response class to ensure proper handling of output stream and character encoding
added a warning check before proceeding with assignment side effects in GroupDialog to ensure proper handling of assignment side effects during group assignment
refactor JSON handling in JSONObjectConvertor . java to improve code readability and maintainability
updated icon width and height checks to use maxWidthWithMargin instead of maxHeightWithMargin to ensure proper handling of icon dimensions based on user preferences
refactor ` fetchPublicKey ` method in ` JwtTokenCipherSigningPublicKeyEndpoint ` to use ` JcaPEMWriter ` instead of ` Encoding
added content type checking functionality and improved error handling in file operations to enhance robustness of file existence checks and provide clearer feedback on file
implement netty compression in nettyconnection . fix # 1193
added a new method ` doesClassLoaderDescendFrom ` to the ` Util ` class and updated references in ` Class ` and ` MethodHandles `
removed the ` doConnect ` method from ` ChannelProvider ` and updated its implementation in ` ProxyChannelProvider ` to streamline the connection process
added a test method for handling empty final columns in TestCsvHeader . java to ensure correct handling of empty final columns in CSV output
added compass gravity and margin settings to NearbyMapFragment to improve the visual appearance of the NearbyMapFragment
added unit tests for the interpolation logic in GeoPathTest . java to ensure accurate distance calculations between two GeoPath instances
added exception handling to ` getLeafFilterBuilderByType ` and ` ParquetFilterPredicateConverter ` methods to improve error management and provide clearer
added a condition to set the language of currentAudioTrack if it is blank to ensure proper language handling for audio tracks when the language is blank
added a warning log for schemas being less than the old version in MicroserviceRegisterTask . java to inform users about compatibility issues with schemas in
replaced manual array copying logic with a unified ` addAll ` method across multiple array classes to improve code readability and reduce redundancy in array
reformatted the closing of the database connection in DataSourceProxy . java to improve code readability and maintainability
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to improve registration handling and enforce non - null checks to enhance robust
added a method ` resetUIState ( ) ` to ` SchemaUpgradeHelper ` to reset the UI state to ensure the database reflects the
added handling for failed steps in JUnitReporter and implemented new test cases for strict and pending exceptions to improve error reporting accuracy and ensure correct behavior
add a playerselector class to allow ` ` . ' ' in entityselector .
modified the Selector class to implement the Closeable interface to ensure proper resource management and prevent memory leaks
replaced hardcoded parallelism , runs , and iterations with a dynamic connection pool configuration using MultiplexConnectionPool to optimize connection management and improve performance
added multiple stringType ( ) method calls to CoreOptions . java to enhance type handling for better data representation
updated HqlQueryRenderer to handle both character and parameter contexts in tokens to improve token processing accuracy and align with new naming conventions
updated HTTP status handling to use HttpStatus constants instead of hardcoded values to improve code clarity and maintainability by standardizing status codes
pdfbox - 4892 : fix typo , a suggest by valerybokov
fix unit test which fail on slow ci server
updated ParquetFormatPlugin . java and ParquetGroupScan . java to improve metadata handling and caching to enhance efficiency and maintainability of metadata
updated the success flag and modified the javacTask execution logic in Jsr199Javac . java to ensure proper handling of compilation errors
added a new ` BaseTableModelListener ` class and initialized ` baseRenderer ` to null , and created a ` TableModelListener ` to
updated the minimum value constraint from 49152 to 65535 in ServerConfig . java to allow for a maximum of a value of 16 , 000 ,
added handling for document provider authority in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with devices running KitKat and above
removed the call to startLogging from MainApp . java to streamline logging setup for improved performance
modified exception handling in FilterChainProxy to utilize ThrowableAnalyzer for better error handling to improve robustness by ensuring only wrapped RequestRejectedExceptions are
updated string builder logic to use ` this . length ` instead of ` length ` for improved clarity and consistency to enhance code readability
pdfbox - 4892 : throw illegalargumentexception if filter list be empty , a suggest by valerybokov
added new file tbstopwatch . java with methods to start , stop , total and last task time
fix checkstyle issue in io / entity / pliststore . java
added @ Deprecated annotation to several Java classes to indicate that these classes are outdated and should not be used in new implementations
[ zeppelin - 5271 ] fix classloading issue in interpreter server
fix checkstyle issue in block / entity / commandsourcestack . java
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall to ensure compatibility with newer SDK versions
updated parameter names from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to enhance
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 595 : add
updated URLs from " wro / all . js " and " wro / all . css " to " static / all . js "
added a new test method ` showLatestTimeseriesTest ( ) ` to ` IoTDBMetadataFetchIT . java ` to verify functionality of
updated configuration parameters from " appContextLocation " to " contextConfigLocation " across multiple files to align with the new naming conventions and improve
updated exception handling in OCSPChecker to differentiate between CertPathValidatorException and other exceptions to improve clarity and maintainability of exception management
add writeoutputsolutionenabled to problembenchmarksconfig so that it can be disable by default
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` with a test method ` sliceSize _ reopen ` to verify the behavior of ` Sorted
added a shapeless recipe for waterproof and ball to the GameRegistry to enhance the game ' s recipe functionality with a smoother
fix arrayindexoutofboundsexception in sequentialaccesssparsevector # iteratenonzero
added shulker entity metadata handling in BukkitMain , EntitySpawnListener , and PlayerEvents classes to ensure proper metadata management for
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide a way to
updated import statements and added getter methods for maximum directory and file name lengths in IOHelper . java and MultiKahaDBPersistenceAdapter .
added a check for the presence of a tag in the changeset filter before proceeding to improve error handling and provide user feedback when the tag does
[ hotfix ] [ table - common ] fix checkstyle issue in generator / objects / groupbykeytranslator . java
refactor BrokerRoutingManager to improve routing logic to enhance code readability and maintainability
changed volumePaint and upPaint to Color . GRAY and Color . GREEN in CandlestickRenderer . java to ensure consistent
refactor layout parameter handling in InsettableFrameLayout to improve readability and maintainability to enhance layout parameter management and ensure correct margin calculations
added a duration parameter to the BuildTargetDurationListener and updated related tests to include it to enhance the functionality of the BuildTargetDurationListener to
updated database migration integration tests to use assumeTrue instead of @ Profile annotation to ensure tests are executed only when the database profile is enabled
added null check for the user object before processing claims to avoid potential NullPointerExceptions when the user is null
camel - 1640 : camel - test - allow to replace from / to endpoint . thanks to jooby .
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` for the ` statements ` set in ` CassandraConnection . java ` to
api : add listpublicipaddresses api to list public ip address by source network id
added unit tests and implementation for ignoring battery optimizations in ShadowPowerManager to ensure correct behavior of the power manager ' s battery optimization
update Jetty version retrieval to use build properties to ensure the application uses the correct version from the build properties
added unit tests for ` NumberOfInvocationsInOrderVerifier ` to verify behavior with different verification modes to ensure correct error reporting and verification behavior
tregexexecnode : debug force evaluation only if there ' s no match instance
added " - foreground " flag to the startProfile method call in NewProfileExtensionConnection . java to enable foreground mode for the profile launch process
refactor executor variable names and improve resource management in MiniSolrCloudCluster . java to enhance code readability and maintainability by using more d
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related code
updated log message to include the file name in CodeEditorView . java and added null checks in EditorTextActionWindow . java to improve logging
updated skippedEntries to include detailed error messages in ClassFileReader . java and modified warning message format in JdepsTask . java to improve clarity
replaced LogStorage with LuceneStorage for storing documents and added German analysis to enhance document retrieval capabilities and improve code clarity
updated the ` populateBubble ` method to include an existing ` BubbleBarBubble ` parameter and added a null check for it to
[ hotfix ] [ runtime ] remove unnecessary warn log in scheduled route policy
updated method signatures and variable names in MotanServiceBeanPostProcessor , TarsServiceBeanPostProcessor , and TarsServiceBeanPost
[ java ] use correct delay generator for non - multicast destination .
added JSON properties for client ID , client secret , issued _ at , and registration _ client _ uri in ClientInformationResponseView . java to
added a conditional check to set the average price only if the field amount is greater than zero to ensure that the average price is only set when
replaced the method ` rawExecutionReports ( ) ` with direct assignment of ` executionReports ` in ` BinanceStreamingMarketDataService
added a fail method to handle exceptions and modified the failure logic in LdapTimeoutTest . java to improve error handling and provide clearer output during
fix for ticket : 135 -- check if the user dictionary file exist before try to read it .
updated password handling logic in AmbariServerConfigurationHandler to check for a non - blank password file or credential store alias before updating the password
added a check to prevent parsing an already parsed segment in ParseSegment . java and implemented the isParsed method in SegmentChecker . java to improve
[ hotfix ] [ yarn ] change the default value of yarn . application - attempt - failures - validity - interval
do n ' t try to unload the h2 driver if it be not include
hbase - 25836 hbase . tableinputformat . scanner . readtype should provide a default readtype for snapshot - based input
added fixed height and width options to InstanceLoginInfo to enable dynamic configuration of instance login settings
added corner radius parameter to update methods in ActivityControlHelper , WindowTransformSwipeHandler , ClipAnimationHelper , and LauncherLayoutListener
added new SQL commands to the COMMANDS _ TO _ REMOVE array and filters for RIBE , TABLES , and INDEXES ,
added retry logic for connection pool handling in TxnHandler . java to improve reliability by allowing retries on connection pool issues
do n ' t poll backup record if it do n ' t exist
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to facilitate the assignment of the ` strings `
updated DELETE statements in CostBasedDecisionIT and DeleteCompiler to use " DELETE ROWS CLIENT SELECT " and " DELETE ROWS SERVER SELECT "
updated the exception handling logic in BaseServiceException to include a check for " insufficient data written " to improve error handling and provide clearer feedback
added support for rapid install types in multiple classes to enhance device management by allowing conditional installation of beta install types
updated the regex pattern for seed generation in SortTest . java to allow negative seed values to enhance flexibility in seed generation
refactor ` MultimapSubject ` to use a factory for creating ` IterableValuesForKey ` and ` iterableEntries ` to improve code readability
simplified the calculation of the launcher ' s display size by removing unnecessary orientation checks to improve code readability and maintainability by elimin
added a ` transmux ` parameter to the ` Transformer ` and ` TransformerInternal ` classes to control transcoding behavior based on media item
added localization support for string values in Picker . java to enhance user experience by displaying localized strings
camel - 2343 : camel - cxfrs : do n ' t fail the exchange if it can not be find
hhh - 14850 - fix issue with hibernate 1.8 . 0 _ 21 ( lock not available )
added assertions and modified visibility annotations in HiveStatement . java and TestJdbcDriver2 . java to improve database query handling and enhance exception handling in
add usesunboundedpcollections category to the pardo test category ( # 11937 )
updated HTML structure in GpsSimpleViewFragment to remove unnecessary em elements to simplify the code for better readability and maintainability
[ java ] remove unused leadershiptermid from join log a follower .
refactor HttpSender to use a private instance of HttpExchange to improve encapsulation and maintainability of the code
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and updated its
added null check for ` tree ` and ` @ EqualsAndHashCode ` annotations in ` Recipe ` , ` Markers ` , and `
change the return type of getFontSizeAsFloat and setFontSizeAsDouble from float to double across multiple classes to allow for more precise font size
addressbookdocomoresultparser : fix typo in email
added handling for null exclusions in RawMavenResolver to improve robustness by ensuring only valid exclusions are processed
added error handling and currency management in DSXAdapters , DSXPairInfo , and DSXBaseService classes to improve robustness and provide
updated test classes for blocking , parsing , resolving table , and validation to improve test coverage and ensure reliability of I / O operations
[ drools - 90 ] fix incremental build for executable model during incremental compilation
updated the initialization of ` copy ` and added a check for ` sobj . has ( k ) ` before invoking ` defineOwnProperty ` to
rename JacksonDataFormat and JacksonXMLDataFormat files to improve clarity and consistency in naming conventions
truffle : fix hostfielddesc so that it do n ' t throw an unknownidentifierexception
add nullness annotation for java . util . concurrent . completable
updated the calculation of mFreezeCheckPoint in PlaybackController . java to adjust the sleep interval based on the current playback duration
removed unused imports and updated internal state management in AbstractCommonPowerMockRunner and PowerMockRunner to streamline code by eliminating unnecessary dependencies
updated the method call from ` typeCode ` to ` realType ( ) ` in the ` unmarshalIn ` method to ensure correct type handling
refactor indentation handling for method invocations in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced ` LuceneTestCase ` with ` TestCase ` in ` TestSingleTokenTokenFilter ` to align with the current testing framework
updated the method call from ` write ( newColumn ) ` to ` write ( " <td > < / td > " ) ` to
updated JdbcStepExecutionDao , MapStepExecutionDao , and MockStepDao to manage ExecutionContext and LobHandler to enhance execution context management
added a condition to check if a new media folder should be shown before adding a child to ensure that the child folder is only added when the
added null checks for the actor parameter and implemented widget removal logic in SplitPane to enhance error handling and ensure proper cleanup of components in the Split
added handling for JavaType . Parameterized in RemoveUnusedImports . java to improve type management by associating parameterized types with their corresponding package names
fix npe in uniquemodlistbuilder when there be no mod file
changed the logger variable from instance to static in TicketGrantingTicketImpl . java to improve performance by avoiding unnecessary instantiation of the logger
updated the SQL string in PhysicalPlanTest . java to use RLE . 81 + 12 instead of a fixed value to ensure compatibility with the
added a method ` isValue ( String value ) ` to ` AttrData ` and modified ` Converter ` to handle value retrieval to improve value validation
updated key handling logic in CPlatformResponder and added methods in LWCToolkit for US International PC locale and character modifier keys to
[ java ] set aeron _ publication _ connection _ timeout in ctestmediadriver and use it in spysimulatedconnectiontest
added a check to return false for certain request URIs in GTVGFilter . java to ensure that only valid request URIs are processed to avoid processing
updated the APK installation command to include assertion to ensure the APK is rooted when it fails to install the test APK
no effective change - remove oracle sql limiter
updated ` getEnabledSecureTransportProtocols ( ) ` to return a mock of ` MultiMap ` and changed the expected length from 1 to 3
update Java library paths in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest version of Java
added a new boolean variable ` mIsIsDismissHapticRunning ` and modified the conditional check in ` TaskViewTouchController .
do n ' t crash the explosion if a projectile be not a projectile .
removed unnecessary imports and implemented the ` getItemId ` method in ` SymbolInputAdapter ` to streamline code by eliminating unnecessary functionality
updated Bitfinex API endpoint to use QueryParam for limit _ bids and limit _ asks instead of a hardcoded value to improve flexibility in
camel - 15836 : camel - jbang - fix test failure on window
added a toString ( ) method to KubernetesLeaderElectionDriver and its corresponding tests to ensure that the string representation of ConfigMapName and leaderLatchPath
refactor SqlSessionFactoryBean for improved session management to enhance performance and maintainability of session management
[ 3.0 ] fix triinvoker do n ' t work with generic call
replaced error handling in PolygonRegionLoader to throw a GdxRuntimeException instead of logging the error to improve error handling by providing a clearer
added a method ` isStarted ( ) ` to check if the current deadline is started and implemented timer management in ` RawStoreProxy ` to improve
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages for closed channels
added null check for the genres list before setting the text to avoid potential NullPointerException when the genres list is empty
[ hotfix ] [ checkpointing ] reset hook in region recovery in checkpointcoordinator
fix : add support for map container in prefab with collection of mapped container
[ iotdb - 5748 ] fix npe in walnode # getoldestunpinnedmemtabletableinfo ( )
added a test for retrying the same host on callback failure in HttpTest . java and modified the handler handling in Endpoint . java to ensure
fix checkstyle issue in io / file / package - info / package - info . java
added SQLServerEscapeQuestionCharacterTest to validate query handling for active posts to ensure proper handling of special characters in SQL queries for the Post entity
added nullability annotations to constructors in camelModule and improved null handling in JoobyBeanRepository to enhance code robustness and prevent
replaced manual synchronization with a utility method for waiting on the input stream to improve code readability and reduce boilerplate
updated package imports from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider
replaced direct instantiation of ` CropperBehaviour ` and ` BitmapCropBehaviour ` with a new method ` createCropperBehavi
removed the appName parameter from the configure methods in InputRC to simplify the configuration process by eliminating unnecessary parameters
[ gr - 19241 ] check that catalog install and uninstall do not ignore dependency .
replaced calls to setHeadless ( true ) with addArguments ( " -- headless = chrome " ) in multiple test files to standard
updated value assignment to use ` intern ( ) ` to improve memory efficiency by reusing the value
added " MOVE " status check to the connection status validation to ensure proper handling of movements in the database connection
updated US _ MONTH _ DAY _ YEAR2 _ TIME and ISO _ MONTH _ DAY _ YEAR4 _ TIME constants in FixedDateFormat . java
phoenix - 5635 refactor curator dependency handling and clean up erroneous direct reference
[ hotfix ] [ network ] fix the issue that hsbuffercontext . startspilling ( ) return null
added a check for ` UntrustedVisitFlag ` and ` UntrustedVisitUNTRUSTED ` permission in ` Visit . java ` to
do n ' t start jabber protocol provider if it ' s already active .
updated character validation logic in BasicURLNormalizer and added a new test case in TestBasicURLNormalizer to ensure correct handling of curly braces in URL
changed method visibility from protected to private for addRemoteAnimations , unregisterRemoteAnimations , and unregisterRemoteTransitions to enhance encapsulation and restrict
added a check to compare lock rate values in EncodingConfiguration to ensure consistent lock rate comparison between enc1 and enc2
added a method to retrieve the project path and modified the ` generateProjects ` method to return a list of generated project paths to enhance project management
updated the method for setting the zero digit and added a validation check for the calendar ID to ensure that the calendar type is valid and prevent potential
added a new file MSwingUtilities . java with utility methods for image scaling and exception handling to provide a utility class for handling image scaling
camel - 1640 : camel - mail - optimize to reduce object allocation .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure proper refreshing of configuration properties in the application
added unit test base on user forum issue
added two new Java files , Main . java and ScriptRenderer . java , and modified JdbcJarPath in SchemaCrawlerMojo . java to
added a condition to check if the input state is __ NONE in the Form - Encoded content type and implemented a test for query parameters
added checks for non - positive width and height before calculating descent in BitmapFont . java , implemented isDescendant method in Group . java ,
replaced direct calls to ` reportFailure ` with ` context . runCloseHooks ` in ` DeploymentManager . java ` to ensure proper handling
refactor stackToString method to include a forceIgnore parameter for better control over item damage handling to improve clarity and flexibility in
updated sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to allow more time for operations to complete before proceeding
replaced specific StringUtils imports with a wildcard import and modified the conditional check to include a check for non - blank short names to simplify import statements
update jollydayholidays to use classpath resource instead of classpath urlstreamhandler
added a new file ` FieldUtils . java ` with utility methods for reflection - based field access to facilitate reflection - based field
simplified the assertion check in DeferredAttr . java and added a new class DoubleStaticImport . java with a static import test to enhance
updated layout inflation from workspace _ custom _ content to workspace _ screen and added padding for custom content to improve layout consistency and ensure custom content
fixed update of xabber account sync state when an error occur .
added a new method ` setvar ` to facilitate setting variable values in a LineReader to enhance usability by allowing users to
add miss hook to catentity . onanimaltame ( ) to prevent crash .
[ mondrian - 1201 ] support range frame in order by clause .
pdfbox - 4892 : check that all font be present , not just the default one , a suggest by valerybokov
added method to set the application mode to ensure the application uses the current application ' s mode
added methods for handling build arguments and Docker file path in ImageFromDockerfile . java , and created DockerfileBuildTest . java for testing
added a null check before creating a new ThreadInfo instance to ensure that only one instance of ThreadInfo is created to avoid potential null pointer exceptions
updated the conditional check for the sweep angle in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of a hardcoded value to
[ hotfix ] [ runtime ] add more log to singleinputgate and singlecheckpointbarrierhandler
added new database schema elements to the Schema class to enhance schema management capabilities within the application
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors to allow customizable similarity limits in query calculations
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
add immediateflush property to enclose outputstreamappender for backwards compatibility
added additional auto - configuration classes to ZipkinAutoConfiguration to support additional auto - configuration options for Rabbit and Kafka
modified the null check in JLayer . java and added a new test class bug6875716 . java to ensure proper handling of null
replaced import of ` avro . shaded . com ` with ` com . google . common . base ` across multiple files to streamline
add return and unwind block to bciblockmapping , a suggest by valerybokov
added null check for icon and legacyRenderer properties in Label . java to enhance robustness by preventing null pointer exceptions during image drawing
replaced custom ` intToFourBytes ` method with Google ' s ` Ints . toByteArray ` method in ` AbstractJweDecrypt
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is null
updated the signature of the ` thenComparing ` method and added a new ` Department ` class with corresponding unit tests to improve type safety
refactor DocIdSet class to improve code readability to enhance maintainability and facilitate future updates
update anomalyResult ' s end time to use current bucket milliseconds instead of null to ensure accurate time representation for anomaly results
added exception handling for parsing integer values in VisualScoreTagTest . java to ensure robustness by catching NumberFormatException
added a class loader to the MockFactory class and adjusted the naming policy setting for mocking classes to ensure proper class loading and improve mocking
added a new class ` OriginalFormat ` and modified the ` formats ` list in ` ConverterWithEnumFormat . java ` to enhance the format
replaced hardcoded date format string with a constant pattern to improve maintainability and readability of date formatting
refactor JAWTRenderer class to improve code readability to enhance maintainability and facilitate future updates
camel - 15836 - camel - aws2 - * : enable autowire on the aws2 - lambda client , fixed test
server : fix mac address generation for vmware vms .
removed condition checking for " Authorization " in ProxyServlet . java to simplify authorization handling logic
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to improve method clarity by using a more descriptive
added a ` getDetails ( ) ` method and a ` getDetails ( ) ` method to multiple authentication classes , along with a ` getD
updated the randomness of the ` randUsePoints ` variable in ` SolrTestCaseJ4 . java ` to ensure that ` randUse
replaced instances of ` appendDot ( ) ` with ` endSentence ( ) ` across multiple classes to standardize the method naming conventions
updated ` TimeFormat ` and ` TestResultSummary ` classes to include ` Locale . US ` as a parameter to ensure consistent behavior across different
updated import statements and modified how unparsed arguments are processed in GroovyParserVisitor . java and GroovyPrinter . java to improve code readability and maintain
added bounds checking for inset dimensions in Border . java to ensure values are within valid dimensions to prevent runtime errors
refactor GestureState initialization to use DEFAULT _ STATE and introduce a new method to improve code readability and maintainability by encapsulating
replaced Joda - Time ' s DateTime with Java ' s Instant and DateTimeFormatter for version representation to improve date formatting consistency and simplify date representation
refactor openblas and openblas _ nolapack classes for improved organization to enhance maintainability and readability of the codebase
[ hotfix ] [ runtime ] replace ioutils . close with java . io . ioexception
added synchronized keyword to the initTxnMgr method to ensure thread safety when initializing the transaction manager
increased the timeout duration for recoveries in ` AbstractDistribZkTestBase ` and increased the socket timeout in ` AbstractFull
added a new class SearchResults to handle search results to provide a structured way to retrieve search results from a document
do n ' t re - create threadcpusamplerview if it ' s not null
make sure to initialize the body if it ' s null
added new test cases for versions " 8.10 . 0 - cfs " , " 8.10 . 0 - nocfs " ,
changed the feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the text
added a new API endpoint to retrieve tenant pools for the current instance to provide functionality for managing instance pools within the application
refactor ` canEarlyTerminate ` methods in ` TopFieldCollector ` and ` TestTopFieldCollectorEarlyTermination ` to improve code
updated InlineBytecodeGenerator to include toString ( ) method for mock interfaces and added new test cases in InlineByteBuddyMockMakerTest to
added debug logging statements to CxxCompileStep and CxxPreprocessStep classes to improve error handling and debugging capabilities during compilation and processing processes
add stringutil . removeregion ( ) method to remove a character from a string
[ 3.0 ] fix metadata service protocol do n ' t work when port be wrong ( # 9013 )
( chore ) camel - kie - services : introduce data transformer interface ( # 1188 )
changed the type of ' values ' and ' objval ' from Object [ ] to Number [ ] [ ] in DistributionGraph . java to
removed a boolean variable ` interesting ` and simplified the conditional check in ` FormatStringChecker . java ` to streamline the code by elimin
updated initialization of SolrCore in ElectionContext . java to ensure proper initialization of SolrCore
updated ITestDbTxnManager . java file to improve transaction management functionality
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and prevent potential memory leaks
added testMapModel method to CodeFirstPojoClient , CodeFirstPojoIntf , and CodeFirstPojoIntf classes to
pdfbox - 4892 : skip validation if map of xobject be null , a suggest by valerybokov
refactor selection logic in ScaleDialog . java for improved clarity and efficiency to enhance code readability and maintainability by reducing red
refactor : rename ` ` updateplayerstepstatus ' ' to ` ` tickbelt ' ' in forge
pdfbox - 4892 : do n ' t throw ioexception if there be no appearance stream
replaced TreeSet with LinkedHashSet for storing keys to ensure uniqueness and maintain insertion order
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 in CancelEventTimer . java to allow
updated preload dependencies from " libdc1394 - 22 " to " libdc1394 - 25 " to align with the new library loading
added conditional logic to only set all constructors to public in MainMockTransformer . java and created new classes MockStaticWithPrivateCtorTest . java
pdfbox - 4892 : optimize code , a suggest by valerybokov
added support for awt . awt . x11 . xtoolkit . setwindowtitle ( ) to set window title
modify depth calculation to account for pixel size to ensure correct depth is set based on the color model ' s pixel size
added error response body handling in OkHttpDataSource to improve error reporting for failed responses
added a static exit method to TopLogging and updated TopThreadGroup to use this new exit method to improve error handling and provide a clearer
modified the initialization of the start variable in NativeRegExp . java to ensure consistent behavior when the regexp is not a global
ignore optaplanner - 468 test until upgrade to optaplanner 6.3 . 1
updated the variable used to retrieve the high allocation from ` lowIndex ` to ` highIndex ` to ensure the correct number of available allocations is
added methods to clean feed entries without feeds in DatabaseCleaner and FeedEntryDAO to improve resource management by ensuring no feeds are deleted
changed the return type of the ` appendToLabel ` method from ` void ` to ` AtomicCounter ` to allow the method to return the current
[ java ] add no - op idle strategy to the low latency medium driver .
added handling for HTTP not modified responses in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure that headers are only written when the
rename methods and variables related to instrumentation in InstrumentationPartialEvaluationTest to improve clarity and consistency in naming conventions
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI . java ` to correctly calculate the dimensions of the tab area
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional ` args ` parameter and modified the
( chore ) camel - core - file : added getfileseparator ( ) and isabsolute ( ) to fileendpoint
added a new method ` build ` to ` JavaProvenance ` and modified ` MavenProjectParser ` to include classpath dependencies to enhance the functionality
added trace logging for Hive functions , UDFs , and non - deterministic UDFs , and modified a condition to check for non - deterministic types
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage and reduce execution time
do n ' t deliver hint for deleted column family ( patch by jbellis )
updated error handling in NativeErrors . java to check if the output file can be writable before executing the command to ensure that the test does not
added error handling for package information retrieval in LauncherModel . java to improve robustness by logging failures when package information is not enabled
do n ' t delete network _ offering _ service _ map table when database upgrade fails
updated exception handling in ` AbstractFaultTolerantChunkOrientedTasklet ` and ` FaultTolerantChunkOrientedTask
replaced ` startsWith ( completed ) ` with ` regionMatches ( completed ) ` in ` LineReaderImpl . java ` to improve accuracy in
added imports for SourcesFileErrors and SourcesFileResults , and modified data table retrieval logic to include global data tables to improve data table management and
added functionality to dismiss all tasks from the overview in TaplTestsTaskbar to improve user experience by ensuring all tasks are dismissed
db upgrade : add dbupgradetemplate interface to update system vms on database upgrade
removed unnecessary null checks for the connection variable in LdapClient . java to simplify code logic and improve readability
refactor index handling in SequenceAction to use a local variable for clarity to improve code readability and maintainability
fix npe in cassandraserver . set _ keyspace ( ) when keyspace do not exist
added a check to skip synthetic fields in ReflectUtils to ensure that non - synthetic fields are not processed in reflection
added LoggerProvider to manage logging in the application to enable better logging capabilities within the application
changed the type of the builder in ServerStatusCommand from ImmutableMap . Builder < String , String > to ImmutableMap . Builder < String , Object >
added deprecation warning for deprecated Spring classes in SpringFactory . java and modified test cases in SpringFactoryTest . java to provide a clear warning message
added a new method ` deepStart ` to the ` Startables ` class that accepts a list of ` startables ` to provide a way
removed the deprecated method ` reservePrimitiveExtensionArray ( ) ` from the ` Shape ` class and its implementation in the ` ShapeImpl ` class
make laser table and laser target block implement ilasertargetblock . close # 2333
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated the expiration messages period for policyEntry in MemoryLimitTest . java to ensure proper handling of memory consumption during tests
removed null checks for handlerName and added a check for non - empty norm before adding it to the info registry to improve code clarity and
replaced ' - ' with ' . ' in the servlet name retrieval method to ensure consistent formatting of servlet names for logging
updated the handling of the " PYTHONPATH " environment variable in ProjectBuildFileParser . java to exclude the PYTHONPATH environment variable from
updated audio frame size handling and error management in DirectAudioDevice . java and Toolkit . java to improve robustness by ensuring audio data is
modified the return statement to handle null enums gracefully to improve robustness by preventing potential NullPointerExceptions
updated the error message format in CommitLogReader . java to include the segment number to improve clarity of error reporting for better debugging
added policy assignment from containerScope to WebSocketSession to ensure proper configuration of WebSocket session policy
simplified the logic for initializing static fields in the Java to TypeScript translation to improve code readability and maintainability by eliminating
updated the StaticHandler to use a dynamic webroot parameter instead of a hardcoded UI _ DIR value to allow dynamic configuration of the web root
test : migrate camel - jupiter - spring to junit5 ( # 4237 )
do n ' t use reflection to check if the vm be attachable
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple classes to improve clarity and consistency in header creation logic
consolidated multiple import statements into a single wildcard import and added a method to place stop orders to streamline import statements and implement a placeholder
added buffer reset calls in ReduceRecordProcessor . java to ensure data integrity during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground or mOriginalBackground are
updated comparison in FloatingDecimal . java from " decExp = = - 3 " to " decExp < - 3 " and added a
updated property type checking logic in PropertyDescriptor . java and added a new test class Test7189112 . java to improve type safety and ensure
removed the maxVersion parameter from the getVersions method call to simplify the code by eliminating unnecessary parameters
added conditional logic to set the ORIGIN header in NettyRequestFactory to ensure that the ORIGIN header is only set when it is not
updated animation behavior for modal tasks in RecentsView , TaskView , and LayoutUtils to improve UI responsiveness and visual clarity
updated error messages in ORCRecordReader to include the field name to improve clarity of error messages for better debugging
added new sample files for " Clear HLS " and " Basic 4x3 " to the DemoUtil . java file to enhance audio
removed HIBERNATE52 _ ENTITY _ MANAGER _ TYPE and HIBERNATE _ JPA _ METAMODEL
updated log class references in ExecRPCInvoker and WritableRpcEngine to use fully qualified class names to improve logging clarity and facilitate
avro - 113 . java : add unit test for union and fixed field with - xlint : all
modified websocket session creation logic and added a test for session closure to ensure proper handling of WebSocket connections and validate session closure behavior
reduced delay in sec from 1 second to 5 second and updated method names in DaoStateMonitoringService and related services to improve performance and
replaced references to " OpenSymphony Group " with " Apache Struts " in XmlConfigurationProvider . java and LocationAttributes . java to
modified the video stream stop logic in WebCamInputPanel . java to ensure proper handling of video tracks when the stream is stopped
changed the type of ` chartData ` from ` List ` to ` ArrayList ` in ` BittrexChartDataResponse ` and added a
update gml example to use new geotools apis
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` TargetType58 ` class to improve performance by
hhh - 10956 - fix exception message for composite id field with composite identifier
rename ` ` find - full - text ' ' to ` ` download - full - text ' '
updated URI registration logic to include host and port checks to enhance URI registration by including host and port information
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for the OSDB hash before retrieving an OpenSubtitle from the file path to handle cases where the OSDB hash is blank
added a method to transfer a token from a deposit to a deposit in MUtil . java and integrated it into RuntimeImpl . java to
modified file deletion logic in FtpOperations . java to handle stepwise mode to ensure correct directory management during file deletion based on configuration
updated search bind password from ` searchBindDN ` to ` searchBindPassword ` to ensure correct authentication for LDAP connections
added assertions and modified conditional logic in MapJoinOperator . java and HybridHashTableContainer . java to enhance join handling and improve bloom
updated the constructor of ` HTTPSPDYAsyncEndPoint ` to accept an ` AsyncEndPoint ` instance and added methods to retrieve local and remote
added " id " extra to intent in multiple adapters , TimelineArrayAdapter , TweetPager , and TweetFragment to ensure accurate tracking
added proxy authorization handling and refactored disconnect logic in HttpURLConnection . java to improve connection management and ensure proper disconnect behavior based on proxy settings
replaced ` int ` with ` AtomicInteger ` for tracking the number of children in ` TraceContext ` to ensure thread - safe counting of trace
removed redundant JWT and RESPONSE constants from PluginEnum and modified variable declarations in DividePluginDataHandler and WafPlugin to improve code readability
disabled the test annotation in ValueTypeTests . java to prevent the test from running
resolve split - packages : split - packages : split - packages : split - packages : split - packages : split - packages : split - packages
replaced instances of ` IN ` with ` NOT _ IN ` in multiple predicate classes to improve clarity and consistency in predicate handling
replaced specific account exception handling with a more general Exception catch in FileActivity , Preferences , and ReceiveExternalFilesActivity to improve error handling and
added null check for witnessService before validating permission to prevent potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to use getExprString ( ) to improve clarity and maintainability of the code
added a condition to check if the JDoc is not present before setting the Java document to ensure that the item ' s documentation is only set
rename ` holderMethod ` to ` holderMetadata ` and update related methods in ` CompiledICHolder . java ` to improve clarity by
replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) in Tabs . java to improve animation safety handling for tabs
[ hotfix ] [ connector / kafka ] return registeredmetricsgroup instead of throw an unsupportedoperationexception
updated the calculation of the y variable to use oldX instead of x to improve clarity and maintainability of the code
updated the cache creation method to accept a Configuration < Object , Object > parameter to ensure compatibility with the updated cache configuration type
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 2974855
refactor ShadowCookieManager to improve cookie management logic to enhance code maintainability and readability
added a new configuration option ` METASTORE _ AUTHORIZATION _ EXTERNALTABLE _ DROP _ CHECK ` to disable storage - based authorization
added a braces to the conditional statement in Stage . java and modified the drawing position in ProgressBar . java to improve code readability and correct the
truffle - core : cache byte order for llvmlanguage . getbytesupport ( )
updated the property name from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to
modified initWebViewLogin method to accept a baseURL parameter and updated logic for loading web login URLs to enhance flexibility in handling web login URLs
updated the exception message in CallableStatementHandler to specify the JDBC type for output parameters to improve clarity of error messages for better debugging
changed the ` @ RequestParam ` annotation from ` required = false ` to ` @ DateTimeFormat ( pattern = " yyyy " T ' HH : mm
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` and update related references to improve clarity and consistency in naming conventions
added soft body removal and deletion logic in SoftBodyTest . java to ensure proper resource management and prevent memory leaks
changed interfaces from package - private to public to allow access to these interfaces from other packages
[ hotfix ] [ zeppelin - 559 ] fix log message in zeppelinhubclient and zep
[ jingle ] add unit test to check that there be no redundant namespaces
fix a nullpointerexception when the redplasma component be not available .
added HTTP / 2 header handling in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
refactor condition checks for member and denied removal in the plot class to improve code readability and maintainability
updated delimiter and string formatting in SimpleReport . java to improve readability and maintain consistency in output formatting
added ` setIgnoreSymbolFile ( true ) ` to ` JavapFileManager ` and removed the ` - XDignore . symbol
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class and its associated references to improve
removed exception handling for unknown transaction types and added validation for contract creation and address retrieval to improve error handling and provide clearer feedback for invalid contract
do n ' t create input3d if it ' s not in applet
added an @ Ignore annotation to the KinesisIntegrationTests class to temporarily disable tests that are not ready for execution
do n ' t throw parserexception in scripttagpayloadreader
renamed the method ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` to provide a more descriptive method name for better clarity
changed the return type of ` getExecutableCommand ` from ` String ` to ` List < String > ` across multiple classes to provide a list
updated the assignment of properties in IOSGLES20 from ' this ' to ' IOSGLES20 . java ' to improve clarity and
removed the UploadPathActivity class and integrated it into ComponentsModule to streamline the codebase by eliminating unused components
modify return statements in SimpleTextFieldsReader to conditionally return - 1 based on indexOptions to ensure correct handling of term frequency based on index
fix : make ctclass . getconstructor ( ) . isimplicit ( ) return true when the constructor be not at the source start of the
added ` database ` parameter to ` populateValidateNullableIfNeeded ` , ` populateValidatePrimaryIfNeeded ` , and ` populateValidateUniqueIfNeeded ` methods
refactor Database class to improve code readability to enhance maintainability and ease of future updates
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the application builder
updated iterator assignment in PointInSetQuery to use ' this . sortedPackedPoints ' reference to improve code clarity and maintain consistency in
removed the substring method from rawName in SchematicHandler . java to simplify the code by eliminating unnecessary substring operations
added a switch statement to handle specific collection types in AbstractCollectionAssert and updated CollectionAssert _ isUnmodifiable _ Test to include additional empty collections to
changed the ` Option ` enum from static to non - static in ` ProcessExecutor . java ` to allow the ` Option ` enum to be
refactor dialog handling in Compose . java and ComposeActivity . java to use AlertDialog for better user experience to enhance user experience by
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` FileOperationsHelper . getFile ( ) ` to stream
replaced DatatypeConverter with Java ' s built - in Base64 decoding in ImageUtil . java and added unit tests in ImageUtilTest .
added new files ` ControllerCounter . java ` and ` DBCallback . java ` , and implemented a ` ControllerCounter ` and ` DBCallback
added ' final ' modifier to the ticketId parameter in the deleteTicket method to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement application configuration for flyway migration to facilitate migration functionality within the
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in ` HashMap . java ` and added a new class `
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest release
added @ Nullable annotation to modifiers parameter in CompressionCodec and ZlibCodec classes and added a warning log for missing ORC compression modifiers to enhance
added null check for mainValue in LauncherHelper and improved jar creation logic in TestHelper to ensure robust handling of missing main manifest attributes
rename test classes to include " Tests " for consistency to improve clarity and consistency in naming conventions
rename hotspotprofilinginfo . getcompiledgraphsize ( ) and hotspotprofilinginfo . getcompiledirsize ( ) to hot
patch from javen oneal from bug # 45372 - make cellcopypolicy . clone ( ) public
added a static method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and called it in ` Launcher ` to
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated IconRecentsView to correctly handle landscape orientation and reset bottom margins based on configuration changes to improve layout responsiveness and ensure proper
deleted the AddAdapter . java file to remove unused components that are no longer needed in the project
do n ' t throw an exception if the constructor code list be empty .
modified the constructor of ` OpTraitsRulesProcFactory ` to include a ` processSortCols ` parameter and adjusted the logic for adding bucket column
refactor TestLogWatcher to improve message handling and assertions to enhance clarity and reliability of log watcher registration checks
added a line to print " < any > " in Java2TypeScriptTranslator to enhance TypeScript translation capabilities
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
added a conditional check to ensure SPRING _ AOP _ PROXY _ TARGET _ CLASS is set to " true " in the environment to
removed the conditional check for singletonLock in TypeCachingBytecodeGenerator . java to simplify the locking mechanism by eliminating unnecessary locking
updated callback methods to include class names with classes and strings to enhance clarity and usability of the callback functionality
added an ` appendToFile ` method to the ` Utils ` class and modified the ` writeFile ` method to accept an ` append ` parameter to
added a condition to check if ` mavenSettings ` is not equal to ` getSettings ( ) ` and refactored ` MavenRepositoryMirror `
added a ` name ` parameter to several constructors in ` BuildRuleSourcePath ` and ` PathSourcePath ` , and created corresponding tests to
updated the redirect URI matching logic in the OAuth20CallbackAuthorizeEndpointController and added a new test case in OAuth20CallbackAuthorizeEndpointControllerTests
refactor annotation handling by replacing direct calls to ` values ( ) . toArray ( ) ` with a new ` AnnotationParser . toArray ( )
updated method calls to use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawableForUser and getBadgedLabel
updated the default line separator message in GlobalConfiguration . java to provide clearer guidance on the default line separator for output formatting
bugfix : do n ' t check if an interface be a derive class of the bestpathaccuracytracker class
[ thymeleaf / thymeleaf - server ] sanitize server name and url ( # 1193 )
chore : update java and python dependency ( # 136 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` declaration and modified the ` buildFileNamesCan
refactor CountersReader to improve code structure to enhance maintainability and readability of the code
update container type assignment in ` AllAppsRecyclerView ` and refactor ` logDeepShortcutsOpen ` method to accept a ` View ` parameter
hbase - 16421 make hbase . ipc . server . reservoir . initial . max and hbase . ipc
[ native ] fix native query in window and join
replaced the method ` getGenericParameterTypes ( ) ` with ` getAllGenericParameterTypes ( ) ` in ` Executable . java ` and updated
refactor TestFSTs class for improved readability to enhance maintainability and facilitate future development
ggb - 1342 : fix inputbox height calculation for latex text
hbase - 16481 increase to upper bound region split policy should increase the size of table region
removed unnecessary model reset and loader start calls in LauncherClings . java to streamline the loading process and improve performance
removed redundant initialization of lists keys and updates at initialization to streamline code and improve readability by eliminating redundancy
added a set of excluded datasources in SpringDataSourceBeanPostProcessor to control the exclusion of beans in the application
added undo info storage in TableValuesView and removed null check for cb in TableValuesPanel to streamline code by eliminating unnecessary null
camel - 15836 - camel - aws : fix kinesis proxy to work with non - recoverable sdks
refactor channel triggering logic to iterate through multiple channels instead of individual ones to improve code readability and maintainability by using a loop for channel
disable flaky test due to unfavorable benchmarks in ` LocalCacheSelectorCode ` and ` BoundedLocalCache ` to improve test
added a test for illegal database names in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to ensure that
added a call to ` resetNewFiles ( ) ` in ` GarbageCollector . java ` to ensure that new garbage collection files are properly
replaced ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx ` and
reformatted code for improved readability in CharTokenizer . java to enhance maintainability and clarity of the code structure
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
rename xenserver _ network _ label to xennetworklabel to fix typo
updated libgdxVersion and libgdxNightlyVersion from 1.5 . 5 and 1.5 . 6 - SNAPSHOT
added a metricNames set and a getter method for it in SolrCore . java to provide a way to access and retrieve metric names for better
replaced ` URI ` with ` Path ` for working directory and absolute path handling in ` MavenManifestFactory . java ` to improve type safety
replaced direct check for " os . name " with a static final boolean variable IS _ MAC to improve code readability and maintainability by
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the aggregation repository implementation
clear the slotList and update the slotList with the other ' s slotList to ensure proper management of the slot list
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predCount variable before proceeding
added import statements and implemented the ` mergeProperties ` method in ` ConfigurationSpringInitializer ` to ensure that configuration properties are correctly merged from the
updated the ` setupLogging ` method to accept a ` org . slf4j . Logger ` parameter instead of a ` Logger ` object
replaced instances of HashMap with LinkedHashMap in multiple Java files to maintain insertion order and maintain insertion order
added logic to retrieve the jdbcHandlerMap for a specific type if it is null to ensure proper handling of jdbcHandlerMap when the type is
added debug logging for writing items in HibernateItemWriter , JPAItemWriter , FlatFileItemWriter , and JmsItemWriter to improve
modify the handling of the wellformed string to remove the trailing semicolon to ensure proper parsing of the last semicolon from the string
updated Http2ServerResponseImpl and VertxHttp2Handler to execute the handler in an IO context to ensure proper resource management and avoid potential
improve performance of xssfevaluationworkbook # gettable by cache the result of xssfevaluationworkbook
updated schema text formatting to differentiate between basic and non - basic schema text types to improve clarity and accuracy of schema text representation
replaced instances of MongoFactoryBean with MongoClientFactoryBean in MongoNamespaceReplicaSetTests . java to ensure compatibility with the latest MongoDB client
replaced instances of HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order and maintain insertion order
updated the handling of table scan clone operations in SkewJoinOptimizer . java to ensure that the operator tree is properly cloned before proceeding
added a null check for the client ID in DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to use ClientDetailsEntityJsonProcessor
clear the achievement in the achievement list after a new one be add to the list .
initialize ` userName ` , ` productName ` , ` driverClassName ` , and ` driverVersion ` with empty strings in ` MutableDatabaseInfo
rename ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottomSheetDialog
added a LongBuffer array and methods for reading long values in ByteBuffersDataInput and ByteBuffersIndexInput to optimize memory usage and improve performance
added sec and nsec fields to UnixFileAttributes and refactored file time conversion logic to improve clarity and maintainability of time representation
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection of humongous regions to
added visibility management for the search bar in AllAppsContainerView based on user preferences to improve user experience by hiding the search bar based on
updated the method call from ` router ( ) ` to ` routes ( ) ` in ` EnvRouterFeature . java ` to align with the
added null checks for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during processing
added a new action class ` ReloadPageAction ` to manage page reloading in the menu to enhance user experience by allowing users to reload the
changed log level from info to warn for certain log messages in ` SQLManager . java ` to provide a warning level for non - existent entries
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to reflect the latest release
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided before proceeding
use serviceloader . load ( ) instead of factoryregistry . lookupproviders ( )
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent potential memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and implemented logging in ` HiveViewImpl ` and ` HiveView
updated feature settings and variable types in DocumentFactory , XMLSAXHandler , ComplexElementHandler , and DocumentFactoryTest to enhance type safety and
replaced ` JdbCommand . cont ( ) . waitForPrompt ( ) ` with ` jdb . contToExit ( 1 ) `
added a new ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to provide a way to retrieve
updated variable names from ' runnable ' to ' entry ' for clarity to improve code readability and maintain consistency in naming conventions
updated the HTTP port property from " port " to " vertx . httpPort " to ensure the correct HTTP port is used for testing purposes
changed buttonTable ' s capture listener from ` addCaptureListener ` to ` addListener ` to ensure the listener is properly registered for the buttonTable
updated the default batch size from 10 to a dynamic value based on available processors to improve resource management by adjusting the default batch size based on
[ hotfix ] log error when fail to establish resource manager connection in taskexecutor
initialized ClassFile to null and modified exception handling in LambdaRewriter . java to improve code clarity and handle potential exceptions more gracefully
updated error message in IllegalArgumentException for min and max validation to improve clarity of error messages for better debugging
updated the ` onMessage ` method signatures to include the ` owner ` parameter across multiple classes to enhance message handling by associating the message with the
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` , along with their implementations to provide a standardized way to manage
rename multiple assertion classes for consistency and clarity to improve code maintainability and readability
# 113 - enh : add setbeanid ( ) method to ebeanserver ( bean , object id ) ; add test
use getaddtositedescriptorxsl ( ) instead of hardcoded path
added a list of RequestMatcher instances to the HttpSecurity class to enhance flexibility by allowing multiple request matchers
implement hashCode ( ) and equals ( ) in ContactResource class to ensure proper comparison and hashing of ContactResource instances
move the getrequest ( ) method from abstractprocessor to abstractprocessor and remove it from abstracthttp11processor
updated log messages for clarity and consistency in FileManager . java to improve readability and provide clearer error messages during saving operations
reset mockControl in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper resource cleanup and optimize operations during t
added imports for LambdasWithInterfaces and LambdasWithInterfaces , and updated import statements in SyntaxTests . java to ensure compatibility with
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
tika - 3352 -- use fallbackparser instead of emptyparser for parserdecorator
fix npe in fmlsecuritymanager . checkclasscontext ( ) .
reordered parameters in AccountUtils , IndexedForest , and CustomPopup classes to improve code readability and maintainability
updated the parameter key from " swap " to " rename " in TestCoreAdminApis . java and modified the method signature in CoreApi
added a new test method ` testJsxComment ` to ` JsLexerJsxTest ` and modified ` Parser ` and ` Dumping
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for debugging purposes
added error handling for missing Buck configuration in BuildEndToEndTest , CxxEndToEndTest , and CxxEndToEnd
added physical memory size checks in TestStringBufferAndBuilderGrowth . java to ensure test does not exceed available memory limits
updated the ` MapToLocalDateConverter ` to use a ` ConversionService ` instance instead of a shared ` ConversionService ` to improve code
added a success flag set to true in HiveMetaStoreClient . java to ensure successful operation in the HiveMetaStoreClient
updated string comparison from ` = = ` to ` equals ( " * " ) ` in ` ResourceReferenceInfo . java ` and modified the
updated conditions to check for both " vine . co / v / " and " amp . twimg . com / v / " and
mark the AreaReference class as deprecated to indicate that the method should no longer be used in favor of an alternative implementation
refactor ElementType and Target classes for improved clarity to enhance maintainability and readability of the code
updated assertions and reference kind handling in MemberName . java to improve clarity and correctness of reference kind validation
changed the default value of ` __ submitKeyUpdates ` from ` false ` to " true " and added synchronization around the ` runChange `
modified the conditional check for MouseEvent in EditNodeTextField . java to ensure proper handling of mouse events
camel - 1640 : fix issue with bean component not be able to find bean type static method .
updated multiple classes related to benchmarking and communication to improve performance and maintainability of the benchmarking framework
updated exception handling in AgentRunnerTest to improve clarity and consistency to enhance code readability and maintainability by suppressing unchecked warnings
updated the ` getDescription ( ) ` method implementations to include descriptive descriptions for various classes to improve clarity and consistency in the documentation of the
refactored face addition logic in ObjLoader . java to improve clarity and efficiency to enhance code readability and maintainability by reducing
refactor ProcessEngine class to improve code structure to enhance maintainability and readability of the code
rename variable ` reentrantLock ` to ` lock ` in multiple classes to improve code readability and maintain consistency in naming conventions
updated the ` getBomReference ` method to include ` mavenPackaging ` as a parameter to enhance the functionality of the ` PrintMaven
updated back ( ) method to accept event component as a parameter to ensure proper handling of the back event
reorder conditional checks for certificate verification in SASLAuthentication . java to improve code readability and maintainability
updated generic type parameters in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to improve type safety and clarity in handling nullable arrays
replaced instances of ` NutchConf ` with ` getConf ` in ` Fetcher ` , ` Generator ` , and ` Injector `
replaced ` removeBoardsPane ( ) ` with ` tab . deselected ( ) ` in ` SheetAssembly . java ` and
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide a way to retrieve the session ID for better
added null checks before setting time intervals for nodes and edges in ImportContainerImpl . java to ensure that time intervals are only set when they are
removed the log level info command from the MockServerContainer command to simplify the command execution by eliminating unnecessary logging information
updated error logging to include the exception message to improve error reporting for better debugging
use crawldatametadata instead of plain robotshonoringpolicy in dispositionprocessor
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
updated file path checks in DefaultPackageScanResourceResolverTest to use File . separator for cross - platform compatibility to ensure compatibility across different operating systems
added imports and implemented alternativePath method in ExpectNewDemo . java to handle potential runtime exceptions when creating alternative input streams
updated input initialization to use the first filter from the input object to ensure proper handling of input filters during parsing
added a protectionDomain parameter to the method signature in BufferAlignmentAgent . java to enhance the functionality of the class by integrating protection features
added dispose method to WaterRipples class to ensure proper resource cleanup to prevent memory leaks
added a configuration option to disable external table optimizations and optimizations to improve performance by disabling unnecessary optimizations and optimizations on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
modified wallpaper offset settings in Launcher and Workspace classes to adjust the wallpaper offset for better user experience
changed return value from false to true in SybaseASADatabase and modified sequence retrieval logic in SequenceSnapshotGenerator and CreateSequenceGenerator to ensure
nifi - 1748 : putsql should only commit / rollback when autocommit be set to false
added error handling for creating parent directories in SnapPuller . java and test cases in TestReplicationHandler . java to ensure proper directory creation
updated the ID in the AppTarget builder from " id : launcher " to " launcher : launcher " to improve clarity and consistency in the
refactor framer ' s frame method to accept an output buffer instead of returning it directly to improve memory management and allow for more flexible
removed unnecessary parameters from multiple constructors in OAuth2 authentication filter classes to simplify constructor usage and improve code readability
updated the description of the ` delimiter1 ` variable and its assignment in ` GenericUDFStringToMap . java ` to clarify the
updated PlainFormatter to use ChronoUnit for instant formatting to improve precision and consistency in time representation
updated timeout duration from 1000ms to 3000ms and refactored the close ( ) method to include retry logic to improve reliability of agent
hhh - 15595 classloadingstrategyhelper no longer need to use reflection to be compatible with java 8
refactor Mockito class implementation to improve code readability and maintainability
updated log message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify the purpose of the log
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable tests that require at least one sample result
updated the error message from " rows and columns must be greater than zero " to " rows and columns must be greater than zero " to cl
updated string concatenation and return statements in DecisionNode . java and added error handling in WagonCART . java to improve code readability
added functionality to order BoundSheetRecords by sheet position and implemented sorting for BoundSheetRecords to improve data organization and ensure consistent ordering of BoundSheet
refactor calculations in ThrustCurveMotor to use startThrust and endThrust variables instead of averageImpulse to
updated InputSystemJme instantiation to accept an inputManager parameter to improve flexibility by allowing custom input management
reordered conditional checks for ` useExplicitIdentityHashCodeField ` and ` setHashCodeFieldOffset ` in ` UniverseBuilder . java ` to
block : remove deprecate getmesh ( ) , which be no longer use .
[ hotfix ] [ yarn ] fix the keytab issue in yarntaskmanagerrunner
added a new option ` EMPTY _ WORD _ OPTIONS ` and modified matcher logic in ` LineReaderImpl ` to handle empty word options to improve
updated pushViewReplicaUpdates method to include writeCommitLog parameter to ensure correct handling of replica updates when writing commit logs
updated clipboard handling logic in CaptureActivity and added default button ID handling in ResultHandler to improve user experience by enabling automatic opening of web content
added a test for batching in JoinedTableTest and implemented additionalProperties method in JoinedTableTest to ensure proper batching behavior and
updated error handling in JpaPersistenceService to differentiate between EntityExistsException and other errors to improve logging clarity and provide more informative
deprecated the ` format ` method in ` CucumberOptions ` and updated related plugin usage in ` RuntimeOptions ` and ` RuntimeOptionsFactory
removed the save ( ) method from the PMS class to streamline the code by eliminating unnecessary save operations
refactor back key handling logic in ExtendedEditText . java to improve code readability and maintainability
corrected the calculation of the ` newCapacity ` variable in ` AbstractStringBuilder . java ` and added a new ` Capacity . java ` file with
replaced the goHome ( ) method with onNoteSaved ( noteTmp ) in DetailFragment . java to handle note saving functionality instead of navigating home
added support for parsing endnotes in XWPFDocument and updated XWPFParagraph to utilize it to improve handling of endnotes for
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager . java and updated test method call in CasEventsReportEndpointTests .
added a test method for verifying GDAL version retrieval in BridjOGRDataStoreTest . java to ensure that the version information is
added a new file ` Lifecycle . java ` that implements network error handling to improve user experience by providing feedback on network errors
added logging and error handling for HTTP 404 responses in DeviantartRipper . java to improve error reporting and ensure proper URL download
removed unused imports and modified loop structure in BodyTubeShapes and RocketFigure classes to streamline code and improve readability by elimin
added support for retina surface scaling in PJOGL to enhance rendering flexibility for different screen sizes
show offline info on creation if pub be unavailable ( # 1193 )
replaced PackedInts with BlockPackedWriter for writing values and introduced a block size constant to improve performance by utilizing block packing
replaced the ` Collection < StatusRoute > ` with a ` SortedSet < StatusRoute > ` for the ` routesByStatus ` collection to
removed data list management and stream handling in GoAwayTest . java to simplify data processing and improve code readability
added property introspection support for ` java . util . Map ` in ` ReflectionUtils ` and introduced ` FluentSetterBean ` for fluent bean management
updated the ` post ` method in ` BlockingHttpEndpoint ` to return a ` HttpResponse ` instead of a ` Runnable ` to improve type safety
( chore ) camel - test - infra - file : fix unit test
update print statement to use lastAppearedTaskId instead of mLastAppearedTaskTarget to improve clarity in tracking the last
add option to disable image scaling and pdf conformance
updated TSServiceImpl to conditionally include aggregation function name in the column list to enhance functionality by allowing aggregation of paths based on the application '
replaced ` LuceneTestCase ` with ` WithNestedTests . AbstractNestedTest ` in multiple test classes and added a cleanup method to
added functionality to enable or disable XCap support in the PresencePanel to enhance user experience by enabling or disabling XCap features based on
add a new parameter ` ` handleexception ' ' to the ` ` dispatcher ' ' class to allow the user to decide if to send an
added stopEditing methods to CodenameOneImplementation , TextArea , and AndroidImplementation classes to manage text editing state to improve user experience by
[ hotfix ] [ test ] fix npe in controlrate when group attribute be not set .
updated method parameters and logic in ` ComponentConfigDialog ` , ` RocketComponentConfig ` , and ` RocketComponentPresetChooserDialog `
added error handling and logging in ChatAnnotation . java to improve error reporting and ensure thread safety when sending messages
added a condition to check if the test is running on Windows only to ensure that the test is only executed on MS Windows to avoid errors
added SQL _ SERVER _ SNAPSHOT constant to TransactionIsolationLevel . java to enable SQL server snapshotting for improved transaction management
replaced the ` put ` method with an ` offer ` method for adding new recids and added a timeout check to ensure proper handling of
use runtime . version ( ) instead of jrecompat . getinstance ( ) .
added a null check for the command class before creating a new instance of RegisteredService to ensure that commands are only executed when the command class is
change default disk _ failure _ policy from best _ effort to ignore . patch by jbellis ; review by jbellis for cassandra -
changed method visibility from public to package - private in RipperInterface . java and RipStatusHandler . java to enhance encapsulation and
filter out 127.0 . 0.1 from ipv6 address when connect to peer .
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner ` to simplify the interface by eliminating unused method
updated the import statements in PinotSegmentRebalancer . java and modified the computePartitionAssignment method to include a new ClusterDataCache instance to
danielwagnerhall : remove deletecontainer since it ' s no longer need .
danielwagnerhall : fix parsing of command with multiple argument
add retry to createglossarytests to make test more resilient
updated schema references to use ` Components . COMPONENTS _ SCHEMAS _ REF ` instead of hardcoded names to improve maintainability and
refactor EntityDeletedEvent to use JsonUtils for JSON serialization and deserialization to improve code readability and maintainability by using more descriptive variable
added GOP value matching logic in FormatConfiguration . java and updated relevant imports in DLNAMediaInfo . java and LibMediaInfo
added a new file TestProfileReturnTypePrinting . java with methods for testing return types to facilitate performance testing of return type printing
added locking mechanism for multi - dimension configuration updates to ensure thread safety when accessing shared resources
added locking mechanism for acquiring and releasing columns segment operator in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and
simonstewart : remove @ ignore from firefoxprofiletest
added return annotations to methods in HasAndroidDeviceDetails . java and updated the return type of getSystemBars ( ) to improve clarity and
do n ' t add dead bug to project stats
[ netbeans - 5272 ] import panel : use label . disabledshadow instead of label . disabledcolor for gtk
remove duplicate @ Override annotations in CacheControlImpl . java to improve code clarity and maintainability
added a check to return a date in the future when there are no by days in the ScheduledAction to ensure that the current date is returned
refactor upload button functionality to utilize a menu for enabling upload tasks to improve user experience by allowing users to upload multiple media files directly
refactor multiple classes related to message expression functionality to improve code organization and maintainability
added ` loadMetaData ` method implementation in ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading exchange metadata from
added a custom serializer for Hadoop Writable types in CrawlDbReader to enable serialization of Hadoop data types in JSON output
testjaspicbasicauthenticator : remove unused test class ( testjaspicbasicauthenticator )
added a configuration pid " discovery . mdns " to the DiscoveryService component to enable dynamic configuration for the MDNS discovery service
chatviewerfragment : fix crash when click on empty message .
added a worker thread to the ForkJoinPool in TestBPIndexReorderer . java to improve thread management during concurrent execution
updated assertions in RoleCommandOrderTest to check for both DATANODE and NAMENODE roles to ensure that the test correctly verifies the presence of
refactor methods related to table information handling in PartInfo . java to improve clarity and ensure table information is properly managed during serialization
standardized spacing in conditional statements across multiple Java files to improve code readability and maintain consistency
added a transformation matrix for logo rendering and enabled texture flipping to correctly position and display the logo sprite in the opposite vertical orientation
[ hotfix ] [ python ] ignore built - in python aggregate in streamphysicalgroupwindowaggregaterule
[ java ] remove pending echo flag from endpointstate .
add a method to get unreachable token owners and rename some method in storageproxy to reflect this change
mondrian : make sure x = = x ^ 2 be not change to multiplication
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to improve content type management and ensure proper content type is
replaced static variable ` _ display ` with instance variable ` display ` and introduced a null check for ` localEnv ` and ` display `
refactor RecommenderJob and AbstractJob classes for improved clarity and organization to enhance code maintainability and readability
refactor locking mechanism in EnvironmentImpl to use ReentrantReadWriteLock instead of Object to improve concurrency management and prevent potential deadlocks
added a test method to verify the behavior of the read identity provider in different identity zones to ensure that the correct handling of zone - specific identity
replaced the job instantiation with a new ExpireJob in ObjectTypeNode . java and modified timestamp handling in PointInTimeTrigger . java to
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
send heartbeat to all broker when rebalance change
add ` ` ca . detached . mkdir . mode ' ' property to config ` ` cairo . detached . mkdir . mode ' ' ( #
[ java ] add test to make sure that the follower remain stable when there be a slow follower .
change default label pattern to ` ` [ auth ] [ year ] ' ' instead of ` ` [ author3 ] [ year ] ' '
updated dependency handling in DBinaryDescription , DLibraryDescription , and DTestDescription to utilize CxxPlatforms for parsing time dependencies to
refactor the management of the OAuthClientService and its lifecycle management in GoogleCloudAPI and GoogleTTSService classes to improve resource management and
camel - 16400 : fixed file consumer not be able to consume file with dynamic file name
added a new boolean field ` reopenReaders ` to ` SolrConfig ` and updated its usage in ` SolrCore ` to allow configuration of reopen
[ freeplane ] add dialect attribute to mapwriter .
added methods for currentDate and currentTimestamp in the Update class and corresponding tests to enhance functionality for handling date and timestamp updates in MongoDB
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor ` Condition ` to an interface and simplify assertions in ` AddConfigWidgetTest ` , ` RequestPinItemTest ` , and `
replaced TermQuery with ConstantScoreQuery and modified expected value calculation in TestFacetsCollector . java to improve query boosting and ensure accurate
removed multiple unused Java classes from ConcurrentClassLoadingTest . java to clean up the code and improve readability
updated the ` providesUploadController ` method to include ` direct _ nearby _ upload _ preferences ` and added a method to retrieve shared preferences
added support for the " sysdummy1 " mode in the database compatibility tests to ensure compatibility with both DB2 and Derby databases
refactor logging statements in TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration classes for improved readability and clarity to enhance maintainability
added logic to track and retrieve the last ID in POIXMLProperties and updated related tests to ensure correct handling of custom properties and improve test
[ geotiff ] add test for double . neg _ infinity and double . isfinite
refactored execution logic in CliDriver . java and updated session handling in SessionState . java to improve error handling and ensure proper UUID generation
replaced Executor with Scheduler in MockRestAdapter to improve concurrency handling and error management
refactor selectByRuleIdSet method to use a partitioned list of ruleId sets to improve code readability and maintainability by lever
added ` addExitDescription ` method to ` ExitStatus ` and removed stack trace printing from ` AbstractJob ` and ` AbstractStep ` to
do n ' t allow right click on a multiblock that do n ' t have the right click .
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity by using a more descriptive variable name
removed unnecessary import statement for Collections in PlotConfiguration . java to improve code readability and maintainability
refactor DefaultIOSInput to use UIAlertController instead of UIAlertView for improved text input handling to enhance user experience by allowing dynamic
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method for clarity to improve code readability and
added an assertion to verify that the message for the given item is null to ensure that the service is not returning unexpected messages for items
replaced ` potentiallyConvertMapKey ` with ` potentiallyEscapeMapKey ` and modified return logic in ` MappingMongoConverter . java ` to
updated Timber logging statements in NearbyMapFragment . java to improve readability and consistency of log output
camel - 16400 : camel - core - optimize to reduce stack frame in use during startup
added null check for terms in FuzzyLikeThisQuery and created a new test for non - existing fields to improve robustness by avoiding
refactor ` writeApplicationsLinks ` method to accept a boolean parameter for tabling lists to improve code readability and maintainability by reducing
[ ds - 3952 ] use identifierservicefactory instead of dspace api to get the identifier service .
updated the usage of ` bytes . length ` to ` bw . getLength ( ) ` in ` VectorColumnAssignFactory . java ` to ensure
changed the method signature of getDisplayScript from abstract to concrete implementation to provide a default implementation that does not require an interface implementation
replaced instances of ` keyToPress ` and ` keyToRelease ` with a new ` sequence ` array in ` RemoteWebDriver `
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
added synchronization when there are no active interfaces in NetworkConfigurationWatcher . java and added null checks for dbusConn in NetworkManagerListenerImpl . java
refactor HSSFWorkbook to encapsulate nested object retrieval logic into a separate method to improve code readability and maintainability by encapsulating
added import statement for Shdr in ShaderNodeLoaderDelegate . java to utilize Shdr functionality in the loading process
replaced instances of ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl . java ` to ensure consistency in
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font symbols
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
refactor Calendar handling in LiveTvGuideActivity and ProgramListAdapter to use current guide start date instead of a single start date to improve
updated method invocation to use Whitebox for method resolution and added new classes CommonParentTest and Parent to improve method resolution and enhance testing capabilities for
added dlopen calls for " libfreetype . so " and " libfontmanager . so " in JREUtils . java to
[ j2kt ] fix trig operator for multi - variable function .
loop safepoint elimination : allow non - overflowing guard
[ java ] fix class . isinstance ( ) to correctly detect class . isinstance ( )
added a new class ` LocalizedString ` and modified ` Attr ` and ` Resolve ` classes to utilize it to improve localization support and
added a new boolean property ` disableClasspathSearch ` and its getter / setter methods in ` ServerConfig ` to control the behavior of classpath search
change variables to be final and use Arrays . copyOf for array assignments to improve immutability and code clarity
change default value of the ` retries ( ) ` method from ` 0 ` to ` 2 ` in ` Reference . java ` and update the
added support for reading and deserializing settings in TexturePacker to enhance flexibility in configuring texture packing settings
updated AchievementsFragment to use AppCompatTextView for displaying uploaded images and used by the wiki to improve UI consistency and clarity
added mock and logger lifecycle methods to the TranslatingJavacPhaseTracerTest class to enhance testing capabilities for annotation processing and parsing processes
added a new ` CategoryInfo ` class and modified the ` CategoryInterface ` to include a ` prop ` parameter to enhance the functionality of the
updated error messages for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error reporting
added accessibility features and improved timeout handling in TaskbarStashController to enhance user experience by enabling automatic visibility of the taskbar
added a condition to check for the ' ^ ' character in the signature parsing logic to ensure proper handling of the ' ^ ' character in the
updated access flags handling in ClassVisitorDriverFromElement . java and added multiple test cases in StubJarTest . java to ensure proper functionality and
updated IntervalFilter to require a non - null input parameter and added null checks in LowpassIntervalsSource to enhance null safety and prevent potential NullPointerException
added tests for ` EntrySetIteratorLastHashNext ` and ` NoSuchElementException ` in ` MapInterfaceTest . java ` to ensure proper functionality of
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility for the TreeMap class
change image creation timestamp from milliseconds to second in ImageData . java to ensure accurate representation of image creation time
changed the list of grobcovs from " grobcovCx " to " grobcovC1 " and
added import statements for EncryptionUtils and used it to delete private and public keys in AccountRemovalJob . java to ensure proper key management for accounts
do n ' t hardcode ` ` keep - alive ' ' and ` ` proxy - connection ' ' header
fix npe in postjoinmapoperation when map have no interceptor and lite member join
added multiple inlining processor classes for TEXT , JAVASCRIPT , and CSS templates in StandardDialect . java to enhance template processing capabilities for better
removed the spillEnabled parameter from several constructors in BaseHybridHashTable , BinaryHashTable , and LongHybridHashTable to simplify
refactor environment variable retrieval logic to use Optional for better null safety to enhance robustness by avoiding potential NullPointerException when accessing system environment variables
ww - 4352 fix nullpointerexception when extension be null .
added SerializableMode import and adjusted closing brace formatting in PluginSwitch . java to enhance serialization support and improve code readability
do n ' t throw a DependencyInjectionException when the field injection point be declared nullable .
added support for additional SQL isolation levels in select statements to enhance compatibility and flexibility in database operations
added new constants for HIVE _ SERVER2 transport mode and HTTP path in HiveConnection . java to improve code readability and maintainability by
added the ` isCacheable ` method to ` GlobalOrdinalsWithScoreQuery ` that returns ` false ` to provide a default implementation
added a new file TestStrangeControl . java that tests the StrangeControl class to demonstrate the behavior of StrangeControl
updated file names from " . json " to " . jsfile " and " . jslib " in JsFile . java and JsLibrary
added selection start and end properties with getter and setter methods in ShadowEditText . java to enable flexible selection management in the ShadowEditText
refactor the startGRPCServer method to use a try - with - resources statement for better resource management to improve resource management and ensure proper shutdown
updated the ` use ` method to accept a ` String ` path instead of an empty string and added validation for the ` path ` parameter to
added a null check for the fst variable in FreeTextSuggester . java to throw an IllegalStateException if lookup is not supported at this time
updated line separator handling in ` T4975569 . java ` and improved error handling in ` T6729471 . java `
added support for loading and logging ABI writer classes in JavacInMemoryStep . java to enhance functionality by allowing the use of AB
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings about boolean method is always inverted
avoid npe in pullmessageservice when shut down
refactor EnergyEndpointer class for improved clarity to enhance maintainability and readability of the code
refactor column key handling in ComponentPresetChooserDialog to use a list of displayed columns instead of an array to improve code readability and maintain
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase to improve code cleanliness and reduce unnecessary dependencies
fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the file Constants . java and DistanceUtils . java to remove unused files to streamline the codebase
replaced the usage of the diskDelimiter pattern with a direct substring extraction for key extraction to simplify the code and improve readability by elimin
fix build - time initialization on jdk 22 +
added a new test method ` testCreateInline ` to ` RoleBindingTest ` and refactored the ` create ` method in ` Role
added debug logging statements for session cookie configuration in UaaSessionCookieConfig . java to improve traceability of session cookie configurations
update file name generation to use the current day of the month instead of a fixed log day to ensure accurate file name generation based on the current
corrected variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve code readability and maintain consistency
added error handling for invalid options in JavapTask and created a new class T8033711 for javap execution to improve robust
replaced calls to ` Collectors . toList ( ) ` with ` toList ( ) ` in multiple Java files to simplify code and improve readability
updated log level from error to warn in TaskDriver . java and modified error handling logic to return null if the shutdown flag is set to false
[ hotfix ] [ network ] make max required buffer per gate configurable for tiered storage
replaced the static final integer SUCCESS _ CODE with a static method isNotSuccessStatus in multiple services to improve code readability and maintainability by
enable OpenGL20 support in Cuboc and CubocDesktop classes to enhance compatibility with newer OpenGL features
remove unnecessary check for voidType in JimpleBody . java to simplify code logic and improve readability
refactor OutputMacroExpander to use Arg instead of StringArg for improved command line argument handling to enhance code readability and maintainability
fix test which randomly fail on slow machine
added additional conditions to check if the input file path does not contain backslashes to ensure proper handling of file paths across different operating systems
[ # 7868 ] instructor : instructor : show comment in instructorfeedbackresponsecomment ( # 7868 )
removed unnecessary whitespace in the ` Container ` class to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java that implements object escape testing with class A to facilitate testing of object serialization and
replaced direct stream operations with IOUtils . read for skipping and reading bytes to improve code readability and leverage Apache Commons IO utility for
added error handling and logging for connection pool initialization in ConnectionPool and JdbcProxy classes to improve error reporting and provide clearer logging for connection pool
changed catch block from Exception to Throwable in CoreContainer . java to handle broader error handling scenarios
hbase - 16465 llapblockcache . evictblocksbyhfile ( ) should return 0 if no entry in the cache exists
removed unnecessary check for zero task count in RecentsView . java to simplify code and improve readability
added instance configuration change listener to HelixBrokerStarter and increased sleep duration from 1000ms to 5000ms in HelixServerStarter to
added ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` classes and modified ` remoteInit ` method in ` Coinm
improve error message if ` ` $ { basedir } ' ' reference to ` ` $ { basedir } ' '
pdfbox - 4892 : avoid duplicate key for cosobject , a suggest by valerybokov
add support for setdisplaydata ( ) to ptransform ( # 11937 )
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat
updated security property to disable unsupported algorithms for certificate path validation to enhance security by restricting encryption algorithms for improved security
added checks for sub - command and sub - command groups in OptionData . java to ensure correct handling of sub - commands and groups in option
updated module - info . java files for mmm and ppp modules to improve module organization and maintainability
added error handling and updated connection ensurement in IOSImplementation . java to improve connection management and provide clearer error messages
updated the initialization of sCheckingEvents in LauncherInstrumentation . java and ensured mFinished is reset in LogEventChecker . java to
refactor exception handling in FileSinkOperator to improve error logging and resource cleanup to enhance error management and ensure proper resource cleanup when exceptions occur
added diagnostic output to SchemaGenerator to display diagnostic information during task execution
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by
updated DataSourceMonitorTests . java for improved test coverage to enhance reliability of data source monitoring functionality
added a mechanism to track loaded resource paths in ClasspathMethodScanner to optimize resource scanning by avoiding duplicate scanning
[ hotfix ] [ test ] fix npe in testserviceutil when testinstance be null
added null check and improved response handling in RoutingInBoundHandler . java to ensure proper handling of null values and enhance response management
[ ekey ] add natip in ekeyconfiguration and fix npe in ekeyhandler
updated imports and refactored buffer allocation in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , Deserializer , and Serializer classes to
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP header and body buffer length in HttpConnection . java and implemented a new test case in RFC2616BaseTest . java
refactor subscription handling in MultiTimeout . java to utilize AtomicReference and AtomicLong for upstream and requestedInitial to improve subscription management and ensure
make leveledmanifest more resilient when there be no compaction candidate
added a test annotation to the TestOrcTimezone1 class to enhance test coverage for timezone functionality
updated the ` parseMetricAndTimerSystemProperties ` method to accept multiple substrings for ` enabledMetrics ` and ` enabledTimers ` to
added error handling for JSON processing in PinotSegmentRestletResource . java and simplified return statements in TraceContext . java to improve robustness
updated the renderer retrieval logic in JTable . java and added a new test class Test6888156 . java to ensure proper handling of
added a conditional check for the existence of the SHELL file before adding it to the arguments to ensure that the IDE service uses the correct
changed the number of subscriptions deleted from 10 to 1 in DatabaseCleaningService . java to optimize resource management by reducing the number of subscriptions
replaced ` LinkedList ` with ` LinkedHashSet ` for ` testInstances ` in ` MockitoExtension . java ` and added ` ClassWithDependency
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
replaced ` deleteFilesAfterClose ( ) ` and ` fileMmapEnableIfSupported ( ) ` methods with ` transactionDisable ( )
modified iterator initialization and added a reset method in SortedIntList . java , and created a new test class SortedIntListTest . java to
added unregister method call in DefaultRemoteProxy and modified exception handling in JMXHelper to improve resource management and enhance error handling clarity
[ hotfix ] [ rocksdb ] set rocksdb writebuffer size to 64mb
removed the first parameter from the constructor of the Style class to simplify the constructor by eliminating unnecessary parameters
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to improve handling of message encoding in the request
removed JSON graph logging for portable pipeline in SamzaRunner . java to streamline output and improve logging clarity
use mouseinput . button _ left instead of vector3f . zero for the sound sound .
[ hotfix ] [ doc ] fix checkstyle violation in looprotatebadnodebenchmark
updated the ` convertToMongoType ` methods to include ` TypeInformation < ? > ` parameter across multiple classes to enhance type handling and support nested pol
show ' i ' instead of ' i ' for complex input box
simonstewart : fix an issue where an empty key could not be send to an active element .
added methods to create and scale a scaled image with specified dimensions and scaling behavior to enhance image scaling flexibility by allowing negative target sizes and improve
removed unused methods ` extendArgumentCheck ( ) ` and ` extendWrapStore ( Engine engine ) ` from ` DBMaker . java ` to
fix issue with shift state not be update in multi - tap
removed the DETECTED _ ACTIVITY constant and related methods from multiple classes to streamline the handling of activity detection in backward compatibility
update package imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket
removed the import of Buildable from AaptPackageResources . java to streamline dependencies by eliminating unnecessary dependencies
added comments to ` CodeException ` , ` ConstantInvokeDynamic ` , ` ConstantMethodHandle ` , and ` ConstantMethodType ` to clar
updated the error message in WebSocketUpgradeHandler to include the HTTP status code to provide clearer context on the error for better debugging
reformatted code for better readability in P11Cipher . java to improve code clarity and maintainability
refactor Mockito class implementation to improve code readability and maintainability
removed redundant conditional checks for plot ownership in Merge . java to streamline code by eliminating redundancy
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline code by eliminating
replaced imports from com . sun . speech . freetts with de . dfki . lt . unitselection . featureprocessors .
refactored ` stripQuotes ` method to utilize ` PlanUtils ` for string manipulation to improve code organization and maintainability by centralizing
refactor rendering methods in DLNAResource to improve clarity and structure to enhance maintainability and streamline the rendering process in the application
added a list of remote artifact repositories to the resolution group to ensure all relevant repositories are included in the resolution group
camel - 14263 : camel - cxf : close the spring application context to avoid leak
refactor PhysicsClient to improve code readability to enhance maintainability and ease of future updates
added JUnit @ Ignore annotation to SessionTest . java to address frequent failure in tests
added a File object instantiation for the specified file name in ZipFile . java to ensure proper handling of file names in zipfile processing
added a deprecated ` handleAll ( ) ` method to the ` TryType ` class to indicate that the method should no longer be used in
fix bug : channel uid should not be initialize by default .
added logging functionality to GenericDAOImpl and introduced StackTraceUtils for stack trace management to improve debugging capabilities by logging call stack traces
added a test annotation to FormLoginIntegrationTests . java to enhance test coverage for form login functionality
refactor function argument handling in FunDefBase and ParenthesesFunDef classes to differentiate between parentheses and non - parentheses to improve
updated SQL query to select multiple cluster configurations and improved logging for cluster - specific configurations to enhance error handling and provide clearer logging for cluster
corrected the spelling of " supressWarnings " and added a conditional check for " jdk . internal . misc . Innocu
updated JsonTreeReader to throw an exception for unexpected json elements during parsing to improve error handling and provide clearer feedback when encountering unexpected JSON
added option to consume all arguments after " -- " in TestCommand . java and implemented a test for it in ExternalTestRunnerIntegrationTest .
added dedup ( ) and indexSolr ( ) methods to SolrDeleteDuplicates and SolrIndexer classes to enhance the functionality of Solr operations by allowing dynamic
[ hotfix ] [ table ] make flink planner configurable in streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure a clean state for database operations
updated progress handling in Progress . java and RSSReader . java to include a display percentage and improve progress display logic to enhance user experience by allowing
added a check to verify if the parent file exists before proceeding to ensure that the parent file exists before proceeding with operations
add a few more method to ioutils to allow write to a file or an outputstream .
modify output statements to include newline characters for runOptions , sketch name , and exportClassPath to improve formatting of output for better readability
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for its root box and dots per
added generic user search functionality in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance LDAP authentication
added port handling functionality to NettyHttpServer , DefaultRouteBuilder , Router , and FilteredRouter classes to enable dynamic port configuration for HTTP
updated SnmpTargetHandler to check if the handler is initialized before updating the status and refactored related tests to improve code clarity and
[ # 7013 ] instructor : edit question : show only instructor with submit permission
added @ Incubating annotation and marked the AvailableSettings class as deprecated to indicate that the class should no longer be used and should no longer
refactor file resolution logic in FileResolverImpl . java and add a new test class WarFileResolverTest . java to improve handling of
updated the string format for newFlushedSize in DocumentsWriterPerThread . java to include documentstores to improve clarity of log output
updated the method call from ` func _ 149739 _ a ( ) ` to ` getUnlocalizedName ( ) ` in ` Example
changed the condition from stripWhitespaceX and stripWhitespaceY to stripWhitespaceX and stripWhitespaceY in ImageProcessor . java to ensure proper handling
increase the number of locks in FeedRefreshUpdater from ` threads ` to ` threads * 1000 ` to allow for a longer number of locks
updated the ` deserializeFrom ` method to include ` exactSearch ` parameter in ` TsFileSequenceReader . java ` to enable exact search functionality
removed the ` SimpleDateFormat ` parameter from the ` makeResultFromDelimitedString ` method in ` CSVSaveService . java ` to simplify the
added preferred size setting for the pane in NavigationShareTab . java to improve UI responsiveness by adjusting the preferred size based on the
refactor BeiderMorseFilter to use State instead of OffsetAttribute for improved state management to enhance code clarity and maintainability by
refactor multiple Upnp - related classes to improve code organization to enhance maintainability and readability of the Upnp module
fix warp lens collided at wrong position
updated JsonTest . java to include a test factory method and modified import statements to enhance test readability and ensure proper exception handling during JSON serialization
refactor MutableContextDataSupplier for improved clarity to enhance maintainability and readability of the code
updated exception handling in CoreContainer to catch Throwable instead of Exception to improve error logging and provide more informative log messages
updated the KubernetesMockServer constructor to use HTTPS instead of a hardcoded true value to enhance security by allowing HTTPS connections
compute stamp for foreigncallnode in case of math . lower ( ) .
updated HTTP method allowance from METHOD _ NOT _ ALLOWED to GET / HEAD / OPTIONS and modified response headers to include POST / OPTIONS to
tika - 3352 -- fix for tika - 3353 - use locale . us in decimalformat .
replaced instances of ` throw new SolrException ( ErrorCode . BAD _ REQUEST ) ` with ` rsp . setException ( SolrException ) ` and
added try - catch functionality to the ReflectorClassWriter for handling exceptions to improve error handling by ensuring correct exceptions are thrown during reflection
added a new method ` clamp ` to the ` Vector2 ` class to calculate the maximum value of a given minimum and maximum to enhance vector
added client - specific OAuth2 authentication handling in ChainedTokenGranter . java to ensure that the requested scopes are not set when the
refactor BC _ instanceof implementation to improve code readability and maintainability
replaced setSaveFlags ( SAVE _ ALL ) with a static final Logger instance in EditorBottomSheetBehavior . java to improve logging capabilities
updated UaaUrlUtilsTest to use JUnit 5 annotations and added pollution prevention extension to enhance test structure and prevent unintended
hhh - 14827 : use basicdomaintype instead of generic type in nativequeryimpl and nativequeryimpl
added a WeakHashMap to store font boolean information and modified return logic to improve memory management and avoid potential memory leaks
use intarraylist instead of intbigarray in typedset . size ( )
simonstewart : fix the remote webdriver test to work with the remote driver
refactor BrokerRequestUtils to improve code structure to enhance maintainability and readability of the code
refactor instance management in InjectorBuilderImpl to use a map for injectable instances to improve the order of instances being injected in the correct order
updated the method calls in ` BuildTargetToRawTargetNodeTransformer ` to use ` buildTarget . getBasePath ( ) ` instead of `
add null check for the value before parsing to ensure that a default value is used when the input is null
fix a bug where the keep - alive manager be n ' t initialize when the protocol provider be stop .
updated the DEFAULT _ LOAD _ FACTOR from 0.67F to 0.67 in IntHashSet . java to ensure the default load factor
added ` getAllDataTypePhysicalVariations ` method to ` VectorizationContext ` and modified ` Vectorizer ` and ` VectorPTFDesc `
move io . google . zxing and io . google . zxing . stringsresourcetranslator from com . google . zxing
updated conditional logic in OverviewState . java to include a check for the ENABLE _ OVERVIEW _ ACTIONS setting to ensure correct behavior
added JPA entity annotation to BaseActivityEventEntity to enable database interactions within the application
added tracing functionality to NavBarSwipeInteractionHandler and TouchInteractionService , and modified SYSTEM _ TRACE to false in TraceHelper to enhance
added a new file ` InvalidOptions . java ` to implement command - line option testing for javap to facilitate testing of Java
added a condition to log an error if the number of supported display bounds changes to ensure that the application logs an error when the number of supported
refactor ` getClientIdAndClientSecret ` method to move it from ` OAuth20UsernamePasswordAuthenticator ` to ` OAuth20Utils ` for better
disable unwrap servlet exception by default
added logic to set the status to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure proper handling of shortcut status updates
camel - 1645 : fixed seda component so it can be configure with size = 500 or unbounded .
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to the App class and implemented them in the Kernel class to enable batch updates
added HTTP client configuration and validation in ThirdEyeApplication . java to enhance HTTP client management and ensure proper configuration
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enable sorting of job instances based on specified criteria
modified the ` CryptoFacilitiesTradeService ` to implement the ` cancelCryptoFacilitiesOrder ` method and return null instead of throwing an exception
ggb - 2272 hide the keyboard when click on a click in av
use nfi ' s ` memcpy ` instead of ` byte [ ] ` in sulong heap
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve readability and maintainability of the authentication process
allow tooltips to be block tooltips
updated DefaultDateTypeAdapter to accept a customizable time style and modified related methods to enhance date formatting flexibility and improve date handling
updated player UID representation from " < UID : " to " ( " in ListCommand . java to improve clarity of player identification in the
added a check for empty lists in the List class to ensure proper handling of empty lists in the application
added exception handling for InvocationTargetException in ParametricCallable . java to improve error management by throwing a wrapped CommandException
updated the ` getLikeExpression ` method to include a boolean parameter for differentiating between LIKE and regular expressions to enhance flexibility in handling different
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide a consistent way to
updated the runChild method in LuceneTestCase to manage locale changes to ensure correct locale handling during child execution
refactor multiple Java classes for improved consistency and organization to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method to improve code readability and maintainability by encapsulating context handler logic
added a test method for referring the route builder in OSGiBlueprintTestSupport . java to ensure correct functionality of route builder references in
[ hotfix ] [ test ] fix intermittent failure in testexecutestreamcommand
refactor ` returnTypeSubstitutable ` methods to accept a ` Warner ` parameter for better type handling to improve clarity and maintainability
added throttleType enum and modified processThrottled method to accommodate different throttle types to enhance flexibility in processing different character sets and improve
removed unnecessary variable assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to streamline code and
refactor Annotation and AnnotatedElement classes for improved clarity to enhance code maintainability and readability
added a new interface ` Model ` and updated ` Sheet ` and ` Workbook ` classes to implement it to provide a standardized interface for
camel - 15836 : camel - http - filter should use constant instead of string literal . thanks to stu hood for the
added a configuration option to clear the entity manager in JpaItemWriter and JpaItemWriterBuilder to enable flexible control over entity management
added null checks for shortcut information and intent in InstallShortcutReceiver , Launcher , and Workspace classes to enhance robustness by preventing potential NullPointerException
updated TwoDimensionalCollectionValuedMap instantiation to include a boolean parameter to enhance flexibility in handling different data structures
changed the exchange host and exchange name from " btc - e " to " wex " and updated the exchange name from " BTC -
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and modified null check in EncodedTreeReaderFactory . java to
added null check for files in SegmentInfos and implemented a test for IndexReader after deletion to ensure robust error handling when no segments * file is
( chore ) camel - fhir : fix integration test for elastic search
refactor return statement to use a temporary variable for percentValue and add bounds checking to improve code readability and prevent potential negative values
updated limit check from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 16400 : camel - core - optimize routescollector to reduce stack frame in use during startup
update hl chunk position calculation to account for initial start time
updated test classes to extend from LuceneTestCase instead of TestCase and added a call to super . tearDown ( ) to improve
added a new ` StatefulMapper2 ` class and modified ` OutputHandler ` and ` OutputHandler ` to set the next input in the
removed null check before setting bitmap shaders for fill and stroke in Area and Line classes to streamline code by eliminating unnecessary null
updated blockchain initialization and database existence checks in Blockchain . java and BlockchainTest . java to improve blockchain management and ensure proper database existence checks
trim whitespace from the matched group value in SQLPlusSupport . java to ensure that whitespace is preserved before processing
set the socket async to false in the apr connector . fix http : / / issues . apache . org / activemq / browse
ggb - 1882 fix wrong divider location on tablet
added health check metrics and updated health check method in PinotControllerHealthCheck . java to enhance health check accuracy and provide more detailed health checks for
set the visibility of the sharedAvatars view to GONE in the LocalFileListAdapter to hide the sharedAvatars view when the
fix checkstyle issue in geogebra / mebis / mebisresources . java
fix checkstyle issue in net / protocol / udp / ping / sendreceiveudppong . java
added logging level check in LogInterceptor to ensure command execution only occurs when logging is not fine
replaced CountDownLatch with assertWaitUntil for span verification in EventBusTracingTestBase . java to improve test reliability by using a
updated Locale handling in QueryParser to use Locale . getDefault ( ) and added getter / setter methods to improve locale management and provide getter / setter
refactored code to replace ` Arrays . asList ` with ` Collections . singletonList ` and changed ` HashSet ` to ` LinkedHashSet ` to improve
jbrules - 1342 : fix build for beta - node and add test
added a new class ` OcspUnauthorized ` and modified the ` OCSPResponse ` case handling in ` OCSPResponse . java ` to
added serverState variable and modified sleep logic in SSL . java to improve server state management and ensure proper handling of server failures
avro - 113 . add source . open - connection . count ( ) to source counter .
add a builder to allow field definition to be pass into the executionstrategy
refactor ` createDefaultJavaPackageFinder ` method to return ` ImmutableSet < String > ` instead of ` ImmutableSet < String > ` to improve code
replaced the Writer initialization with PrintWriter in ScriptExecutable . java to improve output formatting for better readability
[ hotfix ] [ test ] fix flaky test in filesourcetextlinesitcase
added support for DataTable in JRubyStepDefinition to enhance integration with Cucumber ' s DataTable functionality
updated visibility settings and refactored API calls in SearchImagesRenderer . java and ApacheHttpClientMediaWikiApi . java to improve visibility handling and
refactor ReadSentimentDataset . java for improved readability to enhance code maintainability and readability
enhanced error message in FormulaParseException for better clarity to improve error reporting for formula parsing errors
added methods to get and set the bind address in the WebSocketClient class to enhance WebSocket connection management by allowing dynamic binding of socket addresses
[ java ] close clusteredmediadriver before close it in consensusmoduleharness .
refactor width and height handling in WidgetGroup to use a unified setSize method to improve code readability and maintainability by reducing redundancy
updated sessionFixationAttribute comparison to use Boolean . valueOf for clarity to improve code readability and prevent potential null pointer exceptions
fixed crash when launch a digital channel on macosx
danielwagnerhall : add backoff to chrome to make it faster .
added URI template handling to TraceExchangeFilterFunction and updated ClientResponseWrapper constructor to include HTTP method and HTTP route to enhance traceability and flexibility
use integer . min _ value in precompactedrow to avoid deadlock
updated rendering intent return values in ICC _ Profile and ColorConvertOp classes , and added a new test class for invalid render intents to
add ` ` on ' ' parameter to ` ` on ' ' button in contribution question
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
added SuppressFBWarnings annotation to KafkaExactlyOnceSink . java and removed Serializable interface from KafkaRecord . java to suppress findbugs warnings for
added support for PGConnection in PooledConnectionImpl and created a test for PGConnection in BaseDataSourceTest to enhance connection handling and ensure proper
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log level from warn to info and changed log level from warn to trace in TokenAuthenticationHandler . java to improve logging clarity and reduce
removed the @ Deprecated annotation from Hazelcast . java to clean up the code and improve maintainability
updated the handling of unlimited key JCE requirements in AmbariManagementControllerImpl and refactored command reporting in AbstractServerAction to
added support for reading and writing iterators in NamedListCodec to enhance functionality for handling various data types in NamedListCodec
fix possible npe in migrationmanager . assigncompletely ( )
added schema inclusion rule to ApiExample . java to enable public schema inclusion for improved data organization
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test accurately reflect
fix ( sdo ) : make sure that the coordsequence be valid when create the linear ring
added methods to retrieve base name and dimension count in ConstantPool to enhance the functionality of the ConstantPool class by allowing retrieval of base name and
added a method to set debug evaluation output in multiple classes to enable debugging of formula evaluations for improved debugging
refactor : migrate test to junit 5 ( # 4552 )
removed an unnecessary parameter from the ExoPlayerProfile instantiation in LegacyMediaManager . java and modified the condition in PlaybackController . java to
added a return statement to the DynamicStyleBar class to optimize performance by avoiding unnecessary execution
added SLF4J logging statements to Utils . java for database property settings and resets to enhance debugging capabilities by providing insights into database property
refactor ReactiveAuthorizationManager to improve code structure to enhance maintainability and readability of the code
updated conditional check to include boolean type in MethodEmitter . java to ensure proper handling of boolean types during object processing
rename llvmstackframenuller , llvmfunctionstartnode and llvmbitcodefunctionvisitor to llvm
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a new test suite class CaffeineCacheDefaultConfigurationTestSuite to verify transaction - aware cache proxy functionality to ensure correct caching behavior
added a method ` calculateBoundingBox ( ) ` to calculate the bounding box of a mesh to provide a way to calculate the bounding box based on
added a target hash function option to the TargetsCommand class to enable users to choose between sha1 and murmurHash3 hashing files
refactor DefaultConfigurationProperties to improve configuration handling to enhance code readability and maintainability
added high light color and alpha settings for chart elements in ListViewMultiChartActivity and modified highlight paint alpha in BarChart to improve visual appear
updated the mapping of ` pgSgPathPlanMap ` to ` sgPathPlanMap ` to ensure the correct path plan mapping is used
[ hotfix ] fix checkstyle violation in infinispanremoteproducerit
added a check to remove existing artifact files and refactored artifact fetching logic in MavenArtifactFetcher and MavenDependencyResolver to use file locking to
updated the fragment shader to include a conditional check for GL _ ES to ensure compatibility with OpenGL ES features
updated method parameters from SortedSet to Set in RSGroupInfo . java to improve performance by using a more efficient data structure for server management
added error handling for loading a JSP page and changed log level from warn to debug to improve robustness by avoiding potential runtime exceptions and
updated version handling in CustomAnalyzer and added a test for version aware filters in TestCustomAnalyzer to ensure compatibility with different Lucene versions and improve
added a test method to ` ShadowPackageManagerTest ` to verify the retrieval of package archive information from ` setPackageArchiveInfo ` to ensure
replaced direct method invocation with MethodUtil ' s invoke method and added package access checks to enhance security and ensure proper access control during reflection operations
updated import statements and added progress update methods in GradleBuildService and Main classes to enhance progress tracking by including task and project configuration events
removed synchronized block from AndroidWebDriver . java to improve performance by avoiding unnecessary synchronization
do n ' t throw poolinitializationexception if failtimeout be set to 0 .
removed the parameter ` timeOut ` from the ` getResult ( ) ` method and added an error method in the ` sendHttpRequest ` method to
changed the ` isNative ` field to be ` transient ` and modified the ` addEntry ` method call to use ` false ` instead of
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ruleenablehandler to ruleenabletactionhandler ( # 2635 )
fix javadoc warning in javax . servlet . jsp
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity on authentication request details and enhance debugging information
updated method names from ` getBasicSourceOptions ( ) ` and ` getBasicSinkOptions ( ) ` to ` getBasicSinkOptions ( ) ` and
added null check for repository before checking if the registrant is ownership to improve error handling and provide clearer feedback when the repository cannot be found
added support for font file extensions " . otf " and " . OTF " in SunFontManager to ensure compatibility with additional font file
updated the logic for identifying and matching JavaType names in AnnotationMatcher . java to improve clarity and maintainability of type matching logic
updated error message from " OFF " to " SEVERE " in Grep . java to provide more detailed error reporting for better debugging
updated debug logging to check if debug level is enabled before logging messages to improve performance by avoiding unnecessary string concatenation when debug logging is not enabled
camel - surefire : fix npe in plugin . thanks to jooby for the patch .
added a condition to check if moving to the default screen on the home intent to ensure that the app does not move to the default screen when
updated maximum bitrate configuration from " 110 " to " 30 " to increase the maximum bitrate for better performance
replaced the method ` getOptions ( ) ` with a direct iteration over ` optionsMap . values ( ) ` to simplify the code by elim
trim whitespace from the description returned by the method to ensure consistent formatting of the returned description
updated the output filename in XOMParserTest . java from a file path to a regular file name to ensure the output file is correctly formatted
remove pid from processbesunoderrunner log message ( # 1188 )
added methods to retrieve loaded music and sound data in MusicLoader and SoundLoader classes to improve accessibility of loaded music and sound data
removed unused imports and updated type declaration in OnBeanCondition . java to improve code clarity and ensure type safety
added ScreenRecordRule imports and annotations to RequestPinItemTest . java to enable screen recording for testing purposes
disable the ` lrPauseButton ` when ` lrPauseButton ` is not null in both ` CPUFeature . java ` and ` MemoryFeature
refactor preference handling in Preferences . java to use a single mAccountsPrefCategory variable instead of a local variable to improve code readability and
send an " available " presence to the client only if it ' s available .
modify StringBuilder initialization in ObjectInputStream to ensure proper capacity allocation based on utf length
disable stats export by default in integration test
refactor InterruptedException class to improve code readability to enhance maintainability and facilitate future updates
refactor ServiceTicket class to improve code readability to enhance maintainability and facilitate future updates
refactor SSL connection handling in ConnectionCheckOperation . java to improve clarity and structure to enhance code readability and maintainability by consolidating
updated conversion logic in ArgumentArrayMessageMapper to handle both String and Map types to improve clarity and correctness in determining if a payload string
added a conditional check for IndexableDSpaceObject before accessing its properties in SolrServiceCommunityCollectionItemFilterPlugin . java to ensure proper
replaced ` sExemptOfPasscodeActivites . add ( AuthenticatorActivity . class ) ` with ` i . setFlags ( Intent
refactor : remove @ deprecated annotation in patternparameterconfigurator . java ( # 3995 )
changed the return type of ` beginDraggingWidget ` from void to boolean and added a check for ` image . getDrawable ( )
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added a null check for the root variable in DynamicStyle . java to prevent potential NullPointerExceptions when root is null
move confusion matrix to a separate file so that it can be use by testclassifier
rename variable to avoid confusion ( no functional change )
added unit tests for Bluetooth connection and connection states in ShadowBluetoothHeadsetTest . java and modified BluetoothHeadset . java to
corrected a typo in the method name from " # autowire " to " # autowired " in PropertyBindingSupportTest
updated the set of objectMethods to include " clone " , " equals " , " hashCode " , " toString " , and added a new
added null checks for counters object in IntegrationTestBigLinkedList . java to prevent runtime errors during generator and write verification
return a not _ implemented error code when we can not get instance info .
updated the method parameter name from ' service ' to ' serviceId ' in the setRegisteredServiceFilter method to improve clarity and correctness in
added null check for getActivity ( ) before invoking showStorageIssue ( ) to prevent potential NullPointerException when getActivity ( ) is null
rename ` LOGGER ` to ` logger ` in multiple classes to improve code readability and maintain consistency in naming conventions
added methods to set and get the string type in DatabaseAdaptor and updated JDBCSessionDataStore to use this new variable to enhance flexibility by allowing
updated test cases in UIMAUpdateRequestProcessorTest . java to replace language references with suggested categories to improve clarity and accuracy of document
refactor thread name management by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods in ` SessionState
updated TaskletAdapter . java file to improve functionality to enhance task execution efficiency and maintainability
drools - 2200 dmn : fix npe when evaluate dmn model with negative value
fix miss texture map issue on macos
added a tooltip text to the showCGCP checkbox in the RocketPanel to improve user experience by providing context - sensitive information
replaced usage of ` owner . getTypes ( ) . add ( ) ` with ` owner . addType ( ) ` in EnumFactory and Interface
add text and description for reload , hot reload , and restart action ( # 1193 )
make sure we use the template for the spreadsheet label , not just the simple label
changed the type of the BRIGHTNESS _ FACTOR constant from int to double to improve precision in the calculation of the BRIGHTNE
improve parsing of history by add context to the entry
added an ` isAdmin ` parameter to the ` createUser ` method and implemented ` listUsers ` and ` userIsAdmin ` methods to enhance user
added return type validation for indexedWriteMethod and writeMethod in IndexedPropertyDescriptor and PropertyDescriptor classes , and created a new Test6723447
( chore ) camel - dynatrace : use placeholder instead of string concatenation
renamed parameters in ` execute ` and ` run ` methods from ` Runnable ` to ` Runnable ` in ` Context . java ` and updated
bump common for fix for itemstack with no capability .
updated the assertion in LifecycleUtilsTest to compare execution ID instead of a default value to ensure the test accurately reflects the expected execution ID
added checks for contract types and updated contract retrieval logic in multiple servlet files to ensure proper handling of smart contract creation and improve contract management
added multiple package - info . java files for several packages and modified module - info . java files to include new package - info . java files
removed synchronization from the add method in DocumentsWriterDeleteQueue . java to improve performance by avoiding unnecessary synchronization
added duplicate handling for JavaFileObject in JavadocTool . java and refactored test execution in T7091528 . java to improve performance
updated the default value of STRIP _ IPV6 from " true " to " false " and adjusted the host assignment logic accordingly to disable
updated the ` LoginServerTokenEndpointFilter ` to accept a list of parameters for adding new users instead of just username and password to enhance flex
added a constant for the language key " c " and modified language checks in LanguageFactory and CPPParserTokenManager to include it to enhance
replaced the usage of ` ThreadPoolExecutor ` with a new ` MoreExecutors ` class for better concurrency management to improve code maintainability and
added cache control and expiration headers to the FormAuthenticator class and updated response assertions in ConstraintTest to enhance HTTP response handling and ensure proper caching behavior
updated error logging to include exception message to improve error reporting for better debugging
updated imports and test class definitions in HSSFTests . java and TestEmptyDocument . java to improve test organization and enhance readability of
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added a null check for the output file before retrieving its absolute path to avoid potential NullPointerExceptions when output is null
added external resource control priority settings in Java2DRenderer to enhance access control management for better resource management
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure that the build does not fail on Windows to improve stability and prevent
changed the ` HotspotThreadMBean ` field to be ` final ` and modified the ` main ` method to throw an exception to improve
added a check for empty comments in the TabsAndIndentsVisitor class to ensure that whitespace checks are only performed when there are comments to
updated metric values for collection and shard rates from 5.0 to 100.0 in SimDistribStateManager and TestTriggerIntegration to improve
updated string comparisons to be case - insensitive in DatabaseChangeLog , RanChangeSet , and AlreadyRanChangeSetFilter to be case - insensitive
added a method ` getString ` to return a value from the map or a default string to enhance functionality by providing a default value when the key
updated date and time formatting logic in TweetActivity . java to accommodate locale - specific date and time display based on user settings
do n ' t throw an exception if there be no active connection .
refactor focus request logic in DetailFragment . java to improve code readability and maintainability by encapsulating focus logic
updated the classpath setting logic to handle cases where the canonical path contains a space to ensure proper formatting of the canonical path for better compatibility
ggb - 1343 fix race condition in coordmatrix . solve ( )
int - 113 , int - 113 , int - 113 , int - 113 , int - 113 , int - 1
updated SQL queries in PostgresConnector and TaskAttempt classes to use a new join method to improve code readability and maintainability by centralizing
updated filter handling in AquaFileChooserUI to check if the filter contains the selected file filter before setting the file filter to ensure the
fix intermittent unit test failure due to synchronization issue
updated the ` toString ( ) ` method to return " TRUE " or " FALSE " for Boolean objects and added a new test for the `
updated import statements in PGtokenizerTest . java for consistency to improve readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator and add a new test for nested anonymous classes in TypeScript transpilation to improve cl
added SQL sequence creation for auto - increment columns in PostgreSQL to ensure proper handling of auto - increment columns in PostgreSQL
updated byte reading logic in DataInput . java to ensure correct handling of negative byte values
updated assertions in ImageParserTest to check dimensions for vertical and horizontal physical pixel spacing to ensure accurate metadata validation for image parsing
updated parent reference from ` getParent ( ) ` to ` getParent ( ) . getParent ( ) ` in ` Component . java ` to ensure proper
reformatted code for improved readability in multiple Java files to enhance maintainability and clarity of the code
use engine _ free instead of engine _ finish , add engine _ init
refactor iteration event handling in InterleaveControl , CounterConfig , UserParameters , GenericController , and GenericController classes to improve clarity and
added resource release for HttpContent and fileUpload in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent
added a call to deleteLogs ( ) in TestRecovery . java to clean up temporary logs before tests are executed
modified URL loading logic in BrowserActivity to handle URLs containing " twitter : / / " to improve user experience by launching a new activity when
added a HeliosClient instance and awaitd host status in DeploymentGroupTest . java to ensure host status is awaited before proceeding
changed the logResult parameter from false to true in VisibilityController . java to enable logging of label listing results for improved functionality
updated the logging level from 0 to 25 in RestTemplateRetryTests . java to increase the maximum number of auto retries from zero to 25
removed console output statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to improve code clarity
added support for handling the " fraction " resource type in the resource loader to enable parsing and parsing of fraction values in the application
removed file write confirmation check from BasicFrame . java to streamline the code by eliminating unnecessary confirmation checks
added checks for tag group ID and artifact ID in ` findNewerDependencyVersion ` to ensure that the dependency version is correctly retrieved from the
hbase - 25827 throw quotaexceededexception when table do not exceed table limit ( # 2698 )
refactor multiple classes related to token management and attribute handling to improve code organization and maintainability
updated TestFuzzPreLoop . java for improved functionality to enhance performance and maintainability of the code
added a check to ensure f0 is non - negative to prevent invalid values from being initialized
updated catalog retrieval logic and added null checks for primary key and foreign key columns in TableRetriever to enhance robustness by preventing potential NullPointerExceptions
improve performance of b2cconverter . getconverter ( )
added functionality to allow or disable empty pages based on SharedPreferences to improve user experience by preventing unnecessary processing when no pages are available
added a warning log message about the deprecation of cucumber - needle to inform users about the use of cucumber - cdi2
refactor ShadowThemeTest and ShadowArscAssetManager to use Resources . newTheme ( ) instead of activity to improve theme management and enhance
updated failure messages in VerifyFast . java to use Arrays . toString ( ) for better readability to improve clarity of failure messages for better
no effective change - code cleanup - remove duplicate @ dbmigration annotation
added a condition to check if the property node is an IdentNode and implemented getter and setter functions in ScriptObject to ensure proper handling of prototype
updated the shuffle method in TestFilterDirectoryReader to include a random seed to enhance randomness of readers for improved performance
updated displayName assignment logic in UsersAndGroupsSearchProvider . java to differentiate between remote and known users to improve user experience by providing clearer
updated path handling in CookieRetrievingCookieGenerator to ensure a default value is used when the path is blank to improve robustness by preventing
remove unnecessary closing braces in multiple Java files to improve code readability and maintain consistency
changed the variable from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java ` to
updated the comparison logic in ValidationResult . java from ` compareTo ( pageNumber ) = = 0 ` to ` compareTo ( ve . pageNumber ) ! =
added a condition to check if the focused widget is equal to the current instance in the UIDropdown class to ensure that the focus state is
fix checkstyle issue in util / soundutil . java
refactor ` ApplePackageDescription ` and related classes to utilize ` getAppleCxxPlatformFlavorDomain ( ) ` for
added a SQL test for the ` show ololo ` statement in ` ClickHouseStatementTest . java ` to ensure that the SQL command
rename ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to clarify
rename EnglishPTBTreebankCorrector class for consistency to improve clarity and maintainability of the code
added a new file ` TestGetLoggerNPE . java ` to test behavior of ` Logger . getLogger ` with security policies to ensure that
added a data field and a method to retrieve it in PathSharingContext . java and modified sharedMap initialization in ScriptedProcessor . java to
[ gr - 3640 ] fix classcastexception in espressonodembolexception .
added support for " NEXT VALUE FOR " and " NEXT VALUE FOR " in NextValExpression to enhance flexibility in handling multi - row values
improve error message when a resource bundle be not pre - cached
updated the logic for clearing pending writes in BoundedLocalCache and added a test for clearing pending writes in BoundedLocalCacheTest to improve
added " Leverage _ Level " parameter to QuoineExchange and introduced " orderDirection " field in QuoineNewMarginOrderRequest
added bound initialization for properties in PropertyDescriptor . java and created a new test class Test7192955 . java to ensure properties are correctly bound
replaced the ` failsafeWidth ` and ` failsafeHeight ` constants with a ` SetDisplayModeCallback ` interface in ` Lw
added null check and reset logic for buttonsAwatingRelease in Tabs . java to ensure proper cleanup of buttonsAwatingRelease when the parent
updated wrap width calculations in LineCell . java and changed wrapWidth to Double . MAX _ VALUE in StyledTextAreaSkin . java
updated error message formatting in XSLTErrorResources _ it . java to improve clarity and consistency in error reporting
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
danielwagnerhall : use string . format ( ) instead of string concatenation
replaced the use of ` getNamespaceContext ( ) ` with a direct call to ` getNamespace ( prefix ) ` to simplify the code and improve
added support for nested joins in multiple test classes to enable configuration of nested joins in the application
api : fix admin can be specify by root admin only
added caching for class and platform class paths in ` SourceFileManager ` and modified constructor in ` CompletionProvider ` to include a cursor parameter to
added default values for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest ' s assertThat
add @ nullable annotation to outputhandler and make it nullable .
fix ( ilp ) : fix symbol file mapping bug ( # 2693 )
removed debug print statements for termFilter and otherTermFilter to clean up the test output and reduce unnecessary console output
removed the Reflection class and updated its imports in the jooby . internal . guice package to streamline the codebase by elimin
refactor ` ThreadlessExecutor ` to remove dependency on ` sharedExecutor ` and introduce ` isFinished ( ) ` and ` setWaiting
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter . java and added new test cases in TestDateTimeParsing . java to improve error handling and ensure correct parsing
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` in ` CompressionParameters . java ` and update related references to improve cl
added a case handling for WILDCARD in Types . java and created a new file T7034495 . java with generic interfaces to address
replaced a ` do { } ` loop with a ` while ( key ! = null ) ` loop in ` LotsOfEvents .
updated conditional checks in TransclusionDecideRule . java for Hop . NAVLINK and Hop . REFER characters to ensure correct
do n ' t print micronaut version if it ' s not available
added assertions to verify the handling of the " Print _ Area " and its associated records in the HSSFEvaluationWorkbook to ensure proper functionality
updated the description retrieval logic in MindIconFactory to handle cases where the name starts with a slash to improve the accuracy of the icon description
modified the ` onHomeIntent ` method to include a ` boolean internalStateHandled ` parameter to enhance functionality by allowing the method to handle internal
refactor dependency tree handling in CxxBuckConfig . java to improve code readability and maintainability
added ` showDetails ` methods to various activities for displaying file details based on the active tab to enhance user experience by allowing users to select the
rename function names from " $ apply " to " apply " across multiple files to improve clarity and consistency in naming conventions
added randomization for bytes in MinimalEncoder and updated expected values in HighLevelEncodeTestCase to ensure data integrity and correctness in encoding
updated the formatting of parameters and descriptions in SourceBuilder . java to include " - " as a delimiter to improve readability and provide clearer
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure the adapter updates when data changes
added a method to set the default WAL sync mode in ShadowSQLiteConnection to enhance flexibility in setting database synchronization settings
updated type checking in ` RemoveJavaDependenciesAdapter . java ` and added assertions in ` Collections . java ` in ` Collections . java ` to
camel - 15836 : camel - aws2 - crt : remove unused method from defaults3ccrtasyncclient
updated error messages for corrupted stream out - of - bounds length in ParserTest . java to improve clarity and accuracy of error reporting
add the collection content to the exception message when the collection be not find .
make bailout and graalinternalerror handle more robust .
ggb - 1342 fix for npe in web ( bug fix )
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook method in YoBit and updated related calls in YoBitMarketDataService and Yo
replaced instances of ` GotWrongOOMEException ` with ` HeapOOMEException ` across multiple files to standardize exception handling and improve
added StreamReadConstraints configuration to StandardDataFlow . java to enforce maximum string length limits for JSON processing
updated the method of retrieving the engine string to handle an empty string as a fallback to improve robustness by preventing potential null pointer exceptions
rename ` FullIterator ` to ` WheelIterator ` and update error message formatting to improve code readability and maintain consistency in naming conventions
improve error message for miss bug pattern .
[ hotfix ] [ test ] increase timeout for localchunkprovidertest to 10 second
changed the visibility of the uncomplete check lists menu item from true to false to ensure the menu does not hide the uncomplete check lists menu
updated DefaultResultSetHandler to resolve discriminated results map and introduced a new Contract class with corresponding tests to improve result mapping handling and ensure correct
added null check for defaultHome and improved receiver unregistration logic to ensure proper handling of null values and avoid potential null pointer exceptions
removed the import of VertxGen annotation and its usage in PumpImpl . java to streamline code by eliminating unnecessary annotations
removed unnecessary casting of ` mContainerActivity ` to ` FileDisplayActivity ` in ` FileDetailFragment ` and ` OCFileListFragment `
trim whitespace from tokens in ConfigAttributeEditor and add a test for trailing and leading spaces in ConfigAttributeEditorTests to ensure proper handling of leading
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , and SelfClassWithAux classes to improve code organization and maintainability
substitute unnamed module reference in jdk9 +
modified the handling of the ' r ' case in DatabaseMetaData . java to differentiate between SYSTEM TABLE and TABLE types to ensure correct identification of
chore : deprecate tier _ enterprise _ plus _ value and update documentation
updated the RQST field description from " - 1 " to " 1 " and changed exception type from MetaException and NoSuchObjectException to
added a new module - info . java file that defines exports and requires for the com . speedment . runtime . core module to provide module
update flush state handling and fill interception logic in SslConnection . java to improve connection stability by ensuring proper flushing behavior when encrypted output is
updated Log4j2LogDelegateFactory and Log4j2LogDelegateFactory to improve logging functionality and enhance error handling in logger initialization
refactored conditional checks for server VM and JAVA _ JRE _ BIN and JAVA _ JRE _ BIN in multiple files to enhance code
refactor multiple operation classes to improve code organization to enhance maintainability and readability of the codebase
added " org . postgresql . ssl . LibPQFactory " to the PGProperty class to enable SSL - related functionality for PostgreSQL connections
disable intermittently fail test in testinterprocesssemaphorereleaseedges
refactor theme key iteration to use a sorted list to improve readability and maintainability of the code
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to support OSV terminal functionality to enhance terminal
added support for additional file extensions " . gr " and " . grs " in ClassType . java to ensure compatibility with additional file types
replaced HashMap with TreeMap for combinedVectors and combinedVectors in DrillTestWrapper . java to improve performance by using a sorted order for vector
added a condition to the loop to iterate over both names and values in XPathEntityProcessor . java to ensure that the loop does not exceed the
refactor WebSocketPolicy class structure to improve code readability and maintainability
changed instance variables and methods from static to instance variables in ShadowTelephonyManager , ShadowWifiManager , and ShadowTelephonyManager
standardmessageresolver : add option to skip resolution of message that do not require a context
updated generic type declarations for MethodVisitor , ClassVisitor , and CheckClassAdapter in AsmUtil . java to improve type safety and avoid unchecked
added two new classes , LoggingAuditService and UaaAuditService , for logging user authentication and non - existent users to implement audit logging capabilities
added nullability annotations and improved temperature handling in TadoZoneStateAdapter , AirConditioningZoneSettingsBuilder , and TadoZone
skip generation of intercepted bean definition for abstract class
camel - 14850 : camel - http - allow to configure http proxy host and port via system property http . proxyhost and http .
updated the maximum encoding version from 1.1 to 1.2 in TemplateDTO . java to ensure compatibility with the latest features and improv
added jdkSerialFilter ( ) method to System . java to enable serialization of static properties in the system
camel - 15836 : camel - core - optimize to reduce object allocation by pool size .
replaced calls to ` forceFinishScroller ( true ) ` with ` forceFinishScroller ( ) ` across multiple classes to simplify the
updated the method parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` and applied environment variables to enhance configuration management
added error reporting methods to ValidationReport and updated validation logic in DisallowValidator and RefValidator to improve error handling and provide clearer feedback on
updated inlineQsb assignment to use closestProfile ' s inlineQsb and added new constants for different display options to improve flexibility in managing
updated the ` createClassPath ` method to include ` throws Exception ` and changed the encoding of the ` location ` string to ensure proper handling of
updated regex patterns in TransformSteps . java to replace ' 10 ' with ' ( . * ) ' to improve clarity and accuracy of the
fix npe in toolkit . getproperty ( ` ` retina ' ' ) , also add null check in pgraphicsjava2d
replaced hardcoded timeout values with a configurable timeout variable in ` FaultToleranceTest . java ` to improve flexibility and maintainability of the
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to ensure the Docker image URL is correctly configured for environment management
[ drools - 1342 ] fix system . gc ( ) call in knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code readability and maintainability
replaced the method ` createHardLink ` with ` copyFile ` in ` SnapshotTaker . java ` to facilitate file copying
rename method ` appendToDescription ( ) ` to ` getDescription ( ) ` across multiple classes to improve clarity and consistency in naming conventions
[ api ] fix npe in lstm and add device check in functioninfo
added a condition to check if the XML is an instance of Xml . Document before visiting its contents to ensure that only XML documents are processed
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` in ` NotesHelperTest ` and ` ReminderHelperTest `
added GasLimitRule and ParentGasLimitRule to the CommonConfig class and removed conditional checks before adding them to the rules list to streamline
changed the visibility of the setupData ( ) method from public to private and added a static block to ensure the setupData ( ) method is
renamed the ` autocommit ` variable and related functionality to ` runInTransaction ` in the ` ChangeSet ` class to improve clarity
added null check for listener and endStream in TripleServerStream . java to improve error handling and prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] update restart strategy documentation to include site . basurl
add a new test method ` testIssue154 ( ) ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure
refactor Common class to improve code structure to enhance maintainability and readability of the code
added context layers for launching an app and improved logging in Launchable . java to enhance debugging and monitoring capabilities during app launching
[ flink - 21684 ] [ table - planner - blink ] fix typo in streamexecdeduplicate ( # 15122 )
[ hotfix ] [ kafka ] log exception when send kafka message to topic
added persistent property accessor factory implementation in SimpleElasticsearchPersistentEntity and implemented isImmutable method in SimpleElasticsearchPersistentProperty to enable configuration of persistent property accessors
geopointSys1D . setcoord ( t , t ) should set undefined if it ' s infinite
added scrolling functionality and logging for scroll events in AskGestureEventsListener . java to enhance user experience by improving scrolling behavior based on gesture
added key comparison logic in NGramEstimator . java to ensure consistent ordering of elements based on their keys
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align
updated method calls in StatsLogCompatManager to retrieve folder icon details to enhance functionality by providing additional context about folder icon information
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file TestSkeletonPredicates . java with methods for testing loop predicates and array manipulation to facilitate testing of loop predicate behavior
refactor SelectionHighlighter to improve equality and hash code comparison to enhance code clarity and ensure proper handling of different types of ViewModelInfo
added a new ` StringResultConverter ` class and modified ` AsmRuntime ` and ` AsmUtil ` to utilize it to improve
camel - 19751 : disable test that do not work on apache ci
updated condition from " ! = 0 " to " = = 0 " in JansiWinSysTerminal . java to ensure proper handling of
added null checks and buffer capacity handling in BufferUtils . java to ensure proper buffer management and prevent potential NullPointerExceptions
updated the data directory path assertion in TestSolrDiscoveryProperties . java to ensure compatibility with different file path separators
updated platform checks for Windows and macOS in AutoUpdaterServerProperties . java to ensure compatibility with macOS and add support for pre - 10
updated Lock constructor to accept a string lock name instead of a File object to improve clarity by using a more descriptive name for the lock
updated the launcher object reference from appIcon to allApps and changed the method for retrieving the visible bounds to improve clarity and accuracy of the
updated references from ` this ` to ` ClientDatagramEndPoint . this ` for consistency and clarity to enhance code readability and maintainability
updated the SQL query in JdbcStepExecutionDao to use ' order by ' instead of ' oreder by STEP _ EXECUTION _ ID
updated button handling logic in LwjglInput . java to ignore unknown buttons to improve user experience by ignoring unknown buttons
added tests for ` submit _ approve ` and ` submit _ reject ` in ` TaskRestRepositoriesIT . java ` to ensure that the
replaced instances of ` logger ` with ` LOGGER ` for consistency across multiple classes to standardize logging practices and improve maintainability
updated method visibility from public to package - private in SsoAccessTokenProvider and added a new test method in SsoAccessTokenProviderTest to enhance
skip test that fail on window on github
added methods to return null responses for various alarm suppression requests in GreetResourceMockedTest and OciMetricsCdiExtensionTest to
reordered conditional checks for the default close operation in JFrame . java to improve code readability and maintainability
refactor connection handling in LibraryScanner to use a try - with - resources statement to improve resource management and avoid potential null pointer exceptions
replaced instances of ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to ensure consistency in metrics context
refactor file listing logic in OCFileListFragment to handle cases where filesCount and foldersCount are less than zero to improve clarity and
changed default configuration from " yes " to " no " and changed the return type of loadKeys ( ) from an array to an Iterable to
refactor SourceVersion class for improved clarity to enhance maintainability and readability of the code
added a new test class ` ThreadFactoryTest ` to validate the thread factory functionality to ensure that the thread name and group names do not start
updated lockPeriod retrieval to include dynamicStore parameter and added support for maximum delegate lock period to enhance flexibility in lock period management based on dynamic
added initialization of TicketModel in EditTicketPage . java to ensure a fresh TicketModel is used for ticket management
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow the feature to be enabled for
updated constructors in multiple assertion classes to include a class type parameter to enhance type safety by ensuring correct type casting for assertions
added new menu item constants and implemented quote functionality in TweetActivity to enhance user experience by allowing users to quote tweets
minor change to make sure current interrupt be finish before start a new thread .
refactor mediacodecaudiorenderer to support direct playback instead of passthrough
added a conditional check for the result before offering and accepting failures in the ServerHTTP2StreamEndPoint to ensure failure handling only occurs when the
updated German and French error messages in XSLTErrorResources _ de . java and GermanErrorResources _ fr . java to improve cl
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety during concurrent access
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapterTest ` , and ` RestAdapterTest `
reformatted code for better readability in ComponentPresetManager . java to improve code maintainability and clarity
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration and updated column qualifier handling in tests to ensure unique column names
fix for ticket : 284 -- update example input text and audio effect only when the user click on it .
added session validity check and exception handling in Session . java and updated test cases in SessionHandlerTest . java to ensure proper error handling for invalid
hhh - 14663 : remove obsolete exceptionhelper class that be no longer use
change key size from 256 to 255 in JceX25519Domain . java to optimize key generation for improved security
added a codec to Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene 4.0
[ hotfix ] add debug log for empty header list
added support for RSA / ECB / OAEPPadding algorithms in the OperatorHelper class to enhance security by enabling OAEPPadding
replaced instances of ` DARWIN _ AARCH64 ` with ` MACOS _ AARCH64 ` across multiple files to ensure compatibility
updated exception handling in DebugSourcesResolver to include SecurityException for better error reporting to improve error handling and provide clearer logging for source resolution failures
removed conditional check for non - UNIX OS in AbstractTest . java to streamline the code for better readability and maintainability
updated error logging in FileUploadUtils and modified the return value of the JERSEY _ ADMIN _ IS _ PRIMARY setting in ControllerConf
replaced instances of ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory cleanup to improve memory management and ensure proper memory
updated the USE _ PIPELINE _ DOWNLOADER constant from false to true to enable the use of the download pipeline in the fast - sync
updated DST _ OFFSET setting in SimpleDateFormat . java and added a new test class Bug7130335 . java to ensure proper handling of
refactor variables in AllAppsView . java to use local variables for iconCount and iconCount to improve code readability and maintainability by
server : fix npe in vr when vr fail to start
refactor StringBuffer implementation to improve performance and readability of the code
added a line to assign the rule UID to the rule object to ensure the rule is associated with the correct UID
added null check for listener before unsubscribing from the registry to avoid potential NullPointerException when listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified the ` toJson ` method to
make access to access table public in instrumentationbranchspacescommand . java public
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to provide clearer context about the absence of resources at specified locations
minor refactoring : move readcommand ( ) to dorun ( ) so that it can be reuse .
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
added a new boolean parameter ` effectiveClusterVersion ` and ` isUpgradeSuspended ` in the ` AmbariManagementControllerImpl ` class
chore : update copyright year to match current year
removed the initialization of wfields from the writer to streamline the code by eliminating unnecessary variable declaration
updated EncryptionJwtCryptoProperties and OAuthProperties to set encryption and signing key sizes to ensure proper configuration of encryption and signing keys
hbase - 17460 addendum : replace usage of ` ` length ' ' with ` ` getcolumnfamilycount ( ) '
replaced the ` AllowedResourceAliasChecker ` with a lambda expression in the ` addAliasCheck ` method to simplify the alias check logic for
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info files to improve code organization and maintainability
added a ` reset ` method to the ` Cluster ` interface and implemented it in ` ClusteredServiceAgent ` to enable resetting of the idle
updated the incrementation of currentChunkID in ChunkedWriter . java to ensure the correct chunk ID is used for writing
added a new file AbstractJobExecutor . java that implements the JobExecutor interface to provide a standardized way to execute job execution in a batch
replaced the return statement with a break statement in the replay method to improve clarity and control flow in the recovery process
rename ` hugeStaticBase ` to ` staticBase ` for clarity to improve code readability by using a more descriptive variable name
added a method to retrieve service IDs based on discovery status in AbstractConsulClient to ensure that service IDs are only retrieved when discovery is enabled
replaced ` Float . floatToIntBits ` with ` new SecureRandom ( ) . nextInt ( ) ` for the " hashSalt " field
added error reporting for permanent bailouts during runtime compilation parsing and introduced a mechanism to verify runtime compilation framestates during bytecode parsing to improve error
updated currentStart and baselineStart to include aggTimeBucketMillis to ensure accurate tracking of time values during comparison
added checks for abstract methods in ` CallsRealMethods ` and created tests for abstract methods in ` CreateMocksWithConstructorTest ` to ensure
refactor checkPackageAccess method to accept Class instead of String for improved type safety to enhance security by ensuring only valid package names are processed
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup methods to improve test structure and ensure proper
updated variable names and font handling in ContributionListPanel . java for consistency and clarity to improve code readability and maintainability by using
added functionality to handle the " has - touch - interaction - service " request in QuickstepTestInformationHandler and TestInformationHandler to enable testing
removed unnecessary try - catch block in ConnectAction . java to streamline code for better readability and maintainability
updated method signatures and variable types from String to BuildTarget in TargetsCommand . java to improve type safety and clarity in managing build targets
added new classes ` ArrayHelper ` , ` Comparables ` , ` Enums ` , ` Primitives ` , ` Objects ` , and
added handling for the ' & ' character in addition to ' | ' and implemented home / end functionality to enhance input processing capabilities and improve user
simplified the iteration over connected plots by removing synchronization to improve performance by eliminating unnecessary synchronization
refactor intent creation in Utilities . java to use a chooser for launching activities to enhance user experience by providing a chooser for folder
removed the public modifier from the constructor of the Roster class to allow the constructor to be accessible from other classes
added basic constraints extension to the certificate generation to enhance security by enabling basic certificate validation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address issue with incorrect transform offsets
simplified the assignment of precisionStep in TrieDateField . java and TrieField . java to improve code readability and maintainability by
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to streamline the codebase by eliminating unused state handling
added a new file ` ArrayLength . java ` that tests the ` getFields ( ) ` method for an array type to ensure that the `
wait for the hazelcast process to be destroy before shut down it
replaced the @ Singleton annotation with @ ApplicationScoped and modified the save method to initialize application settings to enhance security by ensuring application settings are only
updated assertions and newValue logic in Safepoint . java to ensure correct handling of negative values
updated threadNameField to use " Ljava / lang / String " instead of " [ C ] " and changed return type from charArray
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hns
fix for stroke ( ) bug in java2d
[ calcite - 2272 ] expand window and group by expression with dynamic star ( calcite - 2273 )
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class for finding synthetic children to enhance the functionality of
added import statements for Messages and set a status code of 0 in HTTPServer . java to enhance user experience by providing a clear warning message for
remove deprecate getmodifiers ( ) and replace with getmodifiersex ( ) with getmodifiersex ( )
node cost : fix wrong cycle for count leading and trail zero on amd64
[ camel - 14540 ] fix nullpointerexception when disposition notification be not set
refactor Locale class for improved locale management to enhance code readability and maintainability
added a clearLogButton and its functionality to the ErrorConsoleController , modified ErrorConsoleViewModel , and LogMessages classes to include a clear
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of animation controller
updated Debug , CaptionMap , DummyCaptionMap , and LocalizedCaptionMap classes to utilize LocaleHolder for improved localization support to enhance
added connection pooling functionality and adjusted execution count in multiple test classes to improve resource management and resource management during tests
danielwagnerhall : add opera blink support to session
added error handling for file download failures in ManageJournalsPanel . java to improve user experience by providing feedback on file download failures
added new Lifx product models and updated existing ones in LifxProduct . java to enhance the application with new features and improvements for
added asynchronous request setup and completion handling for replica creation in OverseerCollectionProcessor . java and CollectionsHandler . java to improve replica management and
modified the ` PGSQL _ PK _ BYTES _ LIMIT ` , ` PGSQL _ PK _ SUFFIX ` , and ` PGSQL _
updated LogPanel initialization to use the repository ' s HEAD if the objectId is empty to ensure the correct repository identifier is used for logging purposes
changed the unit of the bone ' s parent tail from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to
added a ` browserDestroy ` method to ` AndroidImplementation ` and renamed the ` deinitialize ` method to ` destroy ` to improve clarity
added a method call to wait for active collection in AutoScalingHandlerTest to ensure proper synchronization of the active collection before proceeding
refactor loop structure in ScreenTerminal . java and remove unused imports in Tmux . java to improve code readability and maintainability by
updated the method to check for controller states in SoftResetAction . java to improve accuracy in determining whether the controller should be reset based on its
disable on - disc stream cache to speed up texture pack reloading .
updated parentFolder assignment logic in Request . java and RequestV2 . java to ensure correct retrieval of DLNA resources based on the media
rename ` ` ispersistent ' ' to ` ` persistent ' ' in network offering
refactor FileOutputStream initialization to use a custom close method to ensure proper resource management and prevent potential memory leaks
added error handling for forbidden HTTP responses in StandardGitHubRepository . java to improve robustness by catching 403 responses
log4j2 - 1278 fix broken unit test
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern for version number from 2 to 3 to ensure compatibility with the latest versioning features
updated tooltip delays in ExtractionModelFrame . java from 500ms to 7000ms to improve user experience by managing tooltip display delays
refactor ProjectCommand to include passedInTargetsSet for improved target processing to enhance flexibility in target management during project generation
added timezone setting and assertion to TimeTest . java to ensure correct formatting of time values in UTC
refactor MediaSessionConnector class for improved session management to enhance performance and maintainability of media session handling
do n ' t use jssefactory for ssl support
updated the accuracy display string in GpsLoggingService to use the accuracy of the current location instead of the altitude to ensure accurate display of accuracy
added a conditional check for futures enabled in BinanceExchange and updated BinanceAccountService and BinanceTradeService to utilize this feature to
refactor admin account management to use course table instead of account list
added a method to set the accept queue size based on the maximum worker threads to improve performance by adjusting the queue size based on the maximum
replaced direct calls to getClass ( ) . getName ( ) with a constant PROPERTY _ DISABLE _ WATCHER in PathWatcherService .
http : / / issues . apache . org / activemq / browse / amq - 2290 - add support for ssl composite
replaced ` parseError ( e ) ` with ` validationError ( e ) ` in ` DrillSqlWorker . java ` and updated
updated the calculation of the duration in GCInspector . java to handle cases where the duration may be zero for a faster collection
[ javaparser ] fix illegalargumentexception when getjavadoccomment on method with linecomment
replaced the ` reserveMemory ` method with a ` readReservedMemory ` method in ` WhiteBox . java ` and added a check for
added calls to ` ungroupedAggregateRegionObserver . checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java
hbase - 2594 add procid to hbaseadmin ' s help message
camel - 14263 : camel - cxf - allow to configure the service class for the soap service factory bean .
refactor YamlChangeLogSerializer to use a list of maps for storing change sets to improve code readability and maintainability by utilizing a
updated print statements in SchemaPrinter to include newline characters to improve formatting of output for better readability
refactor DebugRoadRegen and SchematicHandler classes for improved chunk regeneration and clipboard handling to enhance code clarity
replaced ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragmentNowPlayingRow ` and ` HomeFragmentFooterRow
added the ` @ GenericGenerator ` annotation to multiple Java classes and imported it from the Hibernate library to enhance the functionality of the Hibernate
removed the country parameter from the getSystemTimeZoneID method and related code to simplify the method signature and improve code readability
updated the ` BZip2Codec ` and ` TestBZip2Codec ` classes to include position and remaining data in the output stream to
move startlogger ( ) from appw to appframe , and move it to appw
added a constant VALUE _ TYPE _ EMPTY in Type . java and modified Value . java to use this constant to improve code readability and maintain
updated equality checks in GroupManager to use ` . equals ( ) ` instead of ` = = ` to improve readability and maintainability of
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code structure to enhance maintainability and readability of the code
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating instances of ` TargetNode ` to improve flexibility in creating
fix typo in method name of columnfamilystore and cfstorembean
added a custom ` ArtifactVersionAdapter ` to the ` MetadataCollection ` class and modified ` ModMetadata ` to be transient to enhance JSON serialization
modified the handling of the key - value pair in the NativeArray class to ensure proper deletion of elements from the object if they already exist
updated file handling in FileUploader to use the remote parent file ' s ID instead of the local file ' s storage path to improve clarity
added a new file UTF8ReaderBug . java to test supplementary character handling in XML parsing to ensure proper parsing of supplementary characters in
added unit test base on user forum issue
updated subscription streams from " ethbtc @ depth " to " ethbtc @ depth20 " in BinanceIntegration and BinanceUs
added a ` resetAllocation ( ) ` method to the ` Wrapper ` class and called it in ` SimpleParallelizer ` to reset allocation state
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct calls to System . getProperties ( ) with synchronized blocks for thread safety to ensure thread safety when accessing system properties
refactor ModelUtils to improve code structure to enhance maintainability and readability of the code
refactor methods in AbstractDoubleArrayAssert to improve code readability and maintainability
updated width and height calculations in Legend . java to include checks for the length of mLabels to prevent potential index out - of - bounds
added testDelay ( ) and testAbort ( ) methods to CodeFirstSpringmvcIntf and TestResponse classes , and modified setUp
replaced ` get ( fieldName ) ` and ` get ( fieldName ) ` with ` getValues ( fieldName ) ` and updated the loop for adding
replaced the use of CxxLink with BuildTargetSourcePath in Omnibus . java to simplify the code by using a more
add chat message when versioning be disabled in commanddownloadlatest
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` field in ` MediaFolder
updated command - line argument from " - b " to " - " in AidlStep . java and GenAidlTest .
add test case for findbugs issue # 71
added a TODO comment to test the functionality of the FakeHttpLayer class
replaced error handling with revokeLeadership method in EmbeddedLeaderService . java to improve clarity and functionality of leader management
[ hotfix ] [ client ] use single instead of stream to reduce ( ) in compositediscoveryclient
rename ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ config ] add description for jobmanager . job . computation - over - failed - tasks
renamed ` updateNoWidgetsView ` to ` updateRecyclerViewVisibility ` and updated related visibility logic to improve clarity and maintainability of
fix test failure when woodstox be not on classpath
refactor test setup in AuditAliasCommandIntegrationTest to use a separate setup method to improve code organization and ensure proper initialization of the ProjectWorkspace
removed unnecessary logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to improve code clarity and reduce unnecessary
( chore ) camel - cxf : disable test that do not support document - literal
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging failures during periodical refresh failures
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and modified the `
added a method to check the default background fill in HSSFCellStyle . java and modified color handling in HSSFPalette . java
updated ZonedDateTimeFormatterBenchmark . java for improved performance measurement to enhance the accuracy of ZonedDateTime formatting benchmarks
refactor DistributedUpdateProcessor to introduce a new method ` shouldBufferUpdate ` and add a test class ` DistributedUpdateProcessorTest ` to
added a null check for the rocket ' s stage in addition to the motor ' s null check to ensure robustness by preventing potential
make / editreplace / / editscript work with / / editreplace / / / editscript and / / editreplace / / / edit
refactor ExtendedMasterSecretExtension class for improved clarity to enhance maintainability and readability of the code
changed the variable declaration of ` processor ` from non - final to final in ` AndroidInput . java ` to ensure immutability of the
added an error listener to handle end - of - stream scenarios in WritableKeyProcessor to ensure proper handling of end - of - stream scenarios during
added " CUBE " to MySQLDatabase . java to enable compatibility with CUBE database connections
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the cleanup process
rename ` ExperimentalRobolectricTestRunner ` and related test classes to ` MultiApiRobolectricTestRunner ` and update
replaced reflection - based field access with direct access to the HttpClient object to improve code readability and reduce dependency on reflection
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the output stream in RawMessageContentRedirectInterceptor to prevent potential NullPointerException when the input stream is null
ggb - 233 fix npe when open the av view
updated the ` jailerMain ` method to include a ` fromCli ` parameter and modified the exception handling logic accordingly to enhance functionality by
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added functionality to store and save the unread pull status in shared preferences to enhance user experience by allowing dynamic updates to the pull unread status
fix a bug in the isnullnode to check if the parent object have a kind . object .
updated parameters and methods in Box2DTest , Pong , and OrthographicCamera classes for better graphics management to enhance flexibility and
updated layout manager initialization and added null check for mCommentsRecyclerView in ViewPostDetailFragment . java to ensure proper layout management and prevent potential
changed log level from trace to warn for background operation abort logging to improve log severity for better debugging and monitoring
added debug output for method instance name and flags in JimpleBodyBuilder . java and modified the condition to check if the method instance is abstract
ggb - 2271 fix for mouseup on ie10 +
updated the ` getNotificationUsers ` method to include a ` deviceId ` parameter and modified the logic to filter notifications based on their device ID to
use srtm . cgiar . org / srtm _ v41 / srtm _ data _ getiff to
removed unused listeners and set bottomPanel to null in MotifFileChooserUI . java , and added a new class bug6520101
add a try - catch block to the ui router so that it do n ' t swallow exception
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods to accept ` Class < T > ` as a parameter and improve exception
updated the visibility of the transportSpinner based on the makingShortcut flag to improve user interface responsiveness by hiding the transport spinner when the
added null check for ` attributes _ field ` in ` Attr . java ` and created new classes ` T7043371 . java `
modified backPressed ( ) methods to return a boolean indicating success or failure to handle back button events across multiple fragments to improve responsiveness and
added support for long view index in QueryServices and related options to enable or disable long view index functionality in the application
corrected a typo in the string append method from " v " to " v " to ensure consistency in string formatting
updated private key path handling in PrivateKeyParserTests . java to ensure the path is clean before processing to enhance security by preventing sensitive information from
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
replaced instances of ` Version . LUCENE _ 40 ` with ` TEST _ VERSION _ CURRENT ` in ` IndexWriter ` and
hbase - 2649 add option to disable column family check during table creation ( hbase - 2649 )
[ java ] use log subscription id instead of channel for log recording .
replaced direct calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " , "
added a conditional check to return early if the first element of the JSON node is " i " to optimize performance by avoiding unnecessary processing for
refactor Procedure class to improve code readability to enhance maintainability and facilitate future updates
updated resource bundle loading to include default locale and system class loader to ensure correct resource loading for different locales and environments
[ j2kt ] add normalizationpass for kotlin array creation in kotlin
updated the PerSegmentSingleValuedFaceting . java to improve term enum handling and count counting logic to enhance accuracy in counting faceting based on
refactor authorList assignment to use Objects . firstNonNull for better null safety to enhance code robustness by ensuring authorList is always non -
added static jdk . unsupported field to module - info . java and created OSGiTest . java for testing import package dependencies to ensure
refactor service enablement checks to use a dedicated method for clarity to improve code readability and maintainability by centralizing the logic for
hbase - 22878 htable . waitforallalloperationsandreset should not clear buffer on fail ( chunhui
fix : add test for annotation with any element in anonymous class ( # 2279 )
added a method ` hasUserData ( ) ` to the ` SimpleFeatureImpl ` class and its corresponding test in ` SimpleFeatureImplTest `
removed ` HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify error handling by eliminating
refactor RelyingPartyRegistration class to improve code structure to enhance maintainability and readability of the code
added a method to enable logging in the JavaCompiler class to set the logger ' s level to ALL for all handlers
added a new file ` InJavaSourceSet . java ` and modified ` UsesJavaVersion . java ` to use ` Optional ` instead of
updated resource loading for the " WFPC2u5780205r _ c0fx . fits " file in TestGDAL
added a static method ` createGetter ( Object obj , String attribute ) ` to the ` ReflectionHelper ` class to facilitate the
removed the default preference check for external storage usage in DirectUpload . java to simplify the conditional logic for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` and modified ` IndexWriter ` handling in ` IndexerOutputFormat ` ,
createvolume : do n ' t allow disk offering id to be pass to createvolume api
added null check to content assignment in ToHtml . java and updated assertion in BaseTestCellComment . java to ensure content is always non -
added checks and logic for handling ` Period ` instances in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure proper handling
added a new file ` Issue382 . java ` to handle specific error types for HTTP endpoints to ensure correct handling of specific error types in
replaced the custom signum method with a static import of Integer . signum and simplified the retrieval of the last annotation to improve code readability and
added a condition to hide the text holder if a specific condition is not met to improve user experience by preventing unnecessary text display
fix : fix a bug in astparentconsistencychecker and jdtimportbuilder . getfield / getfield / getfield / getfield
simonstewart : use getprofile ( ) instead of getprofile ( )
add bucketpickup hook for liquid block ( # 54688 )
fix intermittent ci failure
updated the timezone setting from " PST " to " America / Los _ Angeles " to ensure compatibility with the current time zone
refactor ` existingObservation ` to ` distinctObservation ` for improved clarity and consistency to enhance code readability and maintainability
updated the initialization of TEST _ NIGHTLY , TEST _ WEEKLY , TEST _ AWAITSFIX , and TEST _ BADAPPLES
renamed the method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and refactored logger creation logic to improve clarity
[ gr - 3640 ] add miss ` ` deny access ' ' for class in graalcontext .
implement updatepixels ( x , y , width , d , ... ) in pgraphics2 . getimage ( x , y , ... )
updated HiveUtilities to verify transactional properties for both table and partition to ensure accurate verification of transactional properties for improved data integrity
refactor overlay handling logic in Workspace . java to improve clarity and maintainability to enhance the control over scrolling behavior based on the last overlay
hhh - 14829 : hibernate - engine - jdbc - batchbuilder should support batching and non - batching
make analysiserror . shouldnotreachhere ( ) more descriptive
added a new test class ` MockWithStaticStateDemo ` and a corresponding test method ` spyingOnAClassRetainsState ` to
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure proper parsing and deparsing of
modified SecurityUtil to handle null UGI context and exception handling to improve robustness by ensuring proper execution of actions when ugi is not initialized
updated error handling in OpenALMusic . java to store the error code in a variable before throwing a GdxRuntimeException to improve error reporting
camel - 16400 : camel - quartz should use resolveparameter ( ) instead of reslovestringparameter ( ) .
updated the logic for creating SQL types based on precision and scale in RexNodeConverter . java to ensure correct handling of precision and scale values
update WebAuthnMultifactorDeviceProviderAction to use Optional for retrieving vendor and device properties to improve null safety and prevent potential NullPointerExceptions
updated the expected value in the updateAccount method from " testName " to " now " to ensure the test reflects the current time of
replaced ` AxialStage ` with ` RocketComponent ` and updated selection logic in ` BasicFrame ` and ` DesignPanel ` to
added a longRunningTime parameter with getter and setter methods in Args . java to allow configuration of the long running time for improved control over
added a new class ` Ideas _ 2012 _ 05 _ 21 ` and modified ` RefComparisonWarningProperty ` to use ` AT _ M
refactor HttpServerProvider and ScriptEngineManager to use java . util . ServiceConfigurationError instead of sun . misc . Service to improve error handling
( chore ) camel - xss decimal binding : use decimal . toplainstring ( ) instead of decimal . tostring ( )
simplified assertion statements in TestRestClientRequestImpl . java to enhance readability and maintainability of the test code
added a condition to check if the reference database is equal to the comparison database before proceeding with unique constraint validation to ensure that unique constraints are
refactor ` addAndroidConstants ` method to improve readability and streamline proguard configuration handling to enhance code maintainability and clarity by
replaced direct calls to ` assertEquals ` with ` await ( ) . atMost ( 5 , TimeUnit . SECONDS ) ` in multiple test
added user _ args , is _ daemon , and timestamp to the ImmutableMap in ChromeTraceBuildListener and its test to provide additional context about the
svm : fix concurrentmodificationexception when load resource bundle from module .
updated log message from " match limit " to " match order " in HepPlanner . java to improve clarity and accuracy of log
added a new file ` TheRockMetaDataDemo . java ` to demonstrate the usage of exchange metadata with currency pairs to provide
changed the class declarations from ` public ` to ` public strictfp ` in FloatingDecimal and FormattedFloatingDecimal classes and added a test
removed the unparseIdentifier method call from column name appending in ColumnStatsSemanticAnalyzer . java to simplify the code by directly appending the column
added a test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified the ` contextFreeTemplate ` method to accept a
added a condition to check if the method is not synthetic in InstantiateStaticClass . java and introduced a new test method in Bug1282 .
replaced ` projectFilesystem . getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify
added pending rescues handling and unregistration logic in IkStepDefinition . java to improve error handling and manage pending resources more effectively
changed ` equals ( ) ` and ` hashCode ( ) ` methods from ` final ` to non - ` final ` in multiple type classes to
added a new method ` getSyncLevel ` to retrieve the default SyncLevel and modified the ` SyncLevel ` enum to improve error handling and
[ hotfix ] [ test ] fix flaky test in controlcommandstest
added a condition to exclude the RECOVERY state in the recovery logic to ensure that recovery operations are not performed on specific slice states
pdfbox - 4892 : fix checkstyle violation in opencv _ core
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` , and modified ` makeProcessExecutorParams ` to
[ hotfix ] simplify transientblobcleanuptask to not rely on internal blobserver detail
api : fix typo in networkmanagerimpl . java : 1 : 1 nat - > static nat
refactor PasswordEncoder and StandardPasswordEncoder classes for improved consistency to enhance code maintainability and readability
added conversion logic for row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of row types
refactor BetterBlockPos class to improve code readability to enhance maintainability and facilitate future updates
updated the method to retrieve the servlet context using the class loader to ensure the correct class loader is used for the servlet context retrieval
refactor version handling to use a dedicated method for determining nightly build status to improve code readability and maintainability by centralizing version
added logic to remove trailing / ' s characters from SQL statements in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing / ' s in
add findbugs . nullderef . assumensp property to disable assumption for null value analysis
fix jolokia test which fail on slow ci server
updated BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN values , and refactored text
added a method to add a multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to enhance multif
reformatted method signatures in MaxRectsPacker . java for improved readability to enhance code clarity and maintainability
[ drools - 725 ] fix checkstyle issue in util / kbase / kmodulexsdtest . java
added help page management methods in PMS , modified help page handling in HelpTab , and LooksFrame to enhance user experience by allowing dynamic
added GeocodeProviderFactory and Constants interface files to implement geocoding functionality for the Omni Notes beta package
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to align with the correct package structure for
refactor test cases to use try - catch instead of ExpectedException for better exception handling to improve clarity and reliability of exception handling in
[ py4j ] do not delete object from memory when it ' s not in protocol . java .
updated condition checks in ` SegmentsInfoRequestHandler . java ` and refactored document creation in ` CollectionsAPISolrJTest . java `
updated the calculation of numPredictiveAppCols to account for phone devices to ensure correct number of predicted application columns based on device type
added a static method ` hasScalarSubqueryInput ` to ` JoinUtils ` and refactored its usage in ` DrillJoinRel
fix build craft not be able to remove item from blockcontainer . close # 1193
updated layout parameters for drag target bar in DeviceProfile . java to improve layout responsiveness and alignment of the search bar
changed the method call from ` run ( ) ` to ` start ( ) ` in ` YahooSession . java ` to ensure proper
initialized ` ms ` to null in ` HiveMetaStore ` and modified client shutdown logic in ` HiveMetaStoreClient ` to ensure proper cleanup
updated the ` getDisplayScript ( ) ` method to accept a ` Category . DISPLAY ` parameter and added a test for default display locale behavior to
updated import statements to use ZkStateReader ' s BASE _ URL _ PROP and CORE _ NAME _ PROP to ensure consistency in property
replaced ThreadLocalRandom with a custom Random instance in StoreDirectTest . java to simplify random number generation logic and improve code readability
added a check to determine if the launcher is ready before attempting to backup files to ensure that backup operations are only performed when the launcher is ready
updated error messages in IllegalArgumentException to include the value of " space " to improve clarity of error messages for better debugging
camel - 16400 : added unit test base on user forum issue
rename methods and variables related to bar space from ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and
refactor ShadowProcess class to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - core : update test to use temporaryfolder
added multiple logger configurations in Grasscutter . java to enable more detailed logging for better troubleshooting
changed the ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` methods to static and
updated condition in Launcher to check for workspace state and added a method to get the current state in Workspace to ensure proper handling of workspace state
rename multiple assertion classes for consistency and clarity to improve code readability and maintainability
added a cacheable check before notifying a new template in SnippetTemplate . java to ensure that notifications are only triggered when the cache is enabled
added a new constant SCOPE _ SOLR _ CORE and updated related methods in DataImporter and ContextImpl to support core scope management in the
updated the database table creation statement to include a primary key column to ensure the database schema accurately reflects the primary key associated with the measurement
rename -- permissions - config - path to -- permissions - config - file in pantheoncommand and pantheoncommandtest
refactor session creation logic in HttpSessionContextIntegrationFilter . java for improved clarity and error handling to enhance code readability and maintainability
added a new file TestIfWithDeadRegion . java that contains a method to retrieve a string from a supplier to facilitate testing
rename english ud to english usd for clarity .
refactor tests in SnowflakeIdGeneratorTest to use HighResolutionTimer for concurrent access testing to improve performance and reliability of concurrent access testing
added a static UI setting in AppSettings and modified MainFragment to conditionally hide the toast bar based on its value to enhance user experience by
refactor the Privilege return statement to use a lambda expression instead of an anonymous anonymous class to improve code readability and ensure proper resource
replaced ` setParameter ` and ` setParameterIfAbsent ` methods with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler . java ` , and
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to use localized messages instead of hardcoded strings to improve localization support
tika - 1353 -- add mime type for poi - ooxml and poi - ooxml - ooxml , and
added logging functionality and improved type safety in the Runner and FeaturePathFeatureSupplier classes to enhance debugging capabilities and ensure type safety during feature loading
camel - 16400 : camel - eip - documentation - enricher - eip - documentation - enricher - maven - plugin
add - dcassandra . skip _ schema _ check = true to skip schema check during migration
added debug logging for stored audio notifications and playback devices in DeviceConfiguration . java and PortAudioAuto . java to improve traceability of audio device
added WebSocket configuration to ShenyuConfig and modified ReactorNettyWebSocketClient to accept it to allow configuration of the maximum frame payload
fix : cachevalidationlistener do not wait for test to finish
updated content length handling in MoreIndexingFilter . java to ensure only non - empty values are added to the document to avoid potential errors
refactor synchronization code into a separate method ` solvingTerminated ( ) ` to improve code readability and maintainability
added a new method ` internalCreateTimeseries ` to handle potential ` PathAlreadyExistException ` when inserting a non - existing time series to
added a method ` check ` to return the result of a boolean to provide a way to check the status of the authentication process
changed access modifier of several methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
api : do n ' t finalize the owner of the private gateway if it ' s in reserve state
removed compliance check from HttpParser and initialized _ valueString to an empty string to simplify the code and improve readability by eliminating unnecessary compliance
refactored thread completion initialization to use a static method ` threadCompleteInitialization ` to improve code readability and maintainability by reducing red
added ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created a corresponding test class ` EnvironmentTest ` to enable testing of external
[ jbrules - 3248 ] add test case to demonstrate mvel type coercion
removed unnecessary import statements and improved code formatting in LoggingConfig . java and DbgPacker . java to enhance code readability and maintain
added exception message to the logger in ActionNode . java to improve error reporting for better debugging
fix issue with tel : protocol not work on window . http : / / github . com / codenameone / codenameone / issues
refactor visibility logic for shared file in FileListListAdapter to improve readability and maintainability of the code
deprecated the HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated its usage in TestTxnCommands3 . java to
updated the ` confOverlay ` handling and logging keys in ` ExecuteStatementOperation ` , ` Operation ` , and ` SQLOperation `
replaced instances of ` Lists . newArrayList ( ) ` with ` Arrays . asList ( ) ` and replaced ` Lists . newArrayList ( ) `
updated assertion from ` getName ( ) ` to ` getTypeName ( ) ` in ` OGRDataStoreTest . java ` to ensure consistency in type
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to simplify the method signature and improve code readability
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 14263 : camel - netty - http should use http : / / instead of http : / / localhost : http :
testnonblockingapi : use log instead of system . out . println
added a check to ensure the row index does not exceed the connection list size to prevent potential index out of bounds errors
[ java ] add a rule to detect method with the same name as the enclosing class .
added ExtendedPlatformComponent class and modified ManagementFactory to utilize it for retrieving MX beans to improve management capabilities by integrating ExtendedPlatformComponent
replaced single quotes with double quotes in SQL strings to ensure compatibility with SQL standards
updated response paths in BleutradeDtoTest , BleutradeDtoTestSupport , and BleutradeExtendedDtoTest classes
refactor TextEscapeUtils to improve code readability to enhance maintainability and facilitate future modifications
added a filter parameter to the FilteredQuery creation in AbstractSpatialFieldType . java and updated its usage in TestSolr4Spatial . java to
removed progress display for main form visibility in GpsLoggingService and added a post for updating results in AutoEmailHelper to improve user experience by
replaced ArrayList with HashSet for inlinks and added an iterator method to improve performance and prevent concurrent modification issues
[ tradfri ] remove service ' s service ' s service ' s last scan timestamp when service be stop .
modified the ` testFilterForPartition ` method to accept a boolean parameter indicating server - side filtering behavior to enhance flexibility in testing partition retrieval
added " Abandoned " status to requestWorkflow , bugWorkflow , proposalWorkflow , and milestoneWorkflow , and updated the list of statuses to include
removed the default value of ` columnAliasPrefix ` from multiple platform classes to simplify the code by eliminating unnecessary dependencies
replaced instances of Text with BytesWritable in LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer to improve data handling
show a warning if the user run on a 32 - bit jvm on a 64 - bit system .
refactor conditional checks in PdfCopy . java for better readability and logic flow to enhance clarity and maintainability of the code
added a new daemon option ` DAEMON ` to the ` OptionEnum ` and integrated it into the ` TerminalClient ` to enable
added a new file ` FlushIndexTask . java ` that implements a task to flush the index buffer to facilitate the flushing of
include bmt threshold when create sstablewriter for binary memtable
added support for SEASONS output in MediaLibraryFolder . java to enhance functionality by allowing SEASONS output in addition to TEXT
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket using an IPv6 loopback address to facilitate testing
updated grid size points in GridSizeMigrationTask . java to correct the dimensions of grid size steps
updated references from ` getName ( ) ` to ` name ` in ` SerializerPojo . java ` to improve consistency and clarity in accessing
added support for read - only context management in the Context class to enhance transaction management and prevent operations from being executed in read - only scenarios
refactor LookAndFeelCommand to improve code readability to enhance maintainability and facilitate future feature additions
updated calculation of lastRunEnd and changed the condition from " offset = = childOffsets . length - 1 " to " offset = = child
added support for EOFException in GracefulStopTest to ensure proper handling of EOFException in test cases
refactor connection and listener management in NetJavaImpl . java to improve code readability and maintainability by reducing unnecessary locking mechanism
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
updated account asset optimization setting in DynamicPropertiesStore . java to ensure correct configuration of account asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC and initialized it to zero to optimize memory management by controlling garbage collection
added validation for transaction prototypes in TransactionCapsule . java to ensure proper handling of invalid protocol buffer exceptions
[ java ] remove strictexception checking , which be no longer need .
updated resource retrieval and logging messages in HelpContent . java to improve localization handling and provide clearer error messages
added a new file ` ProcessorInfo . java ` to determine the number of available CPU cores to provide a mechanism to determine and mask CPU usage
add an option to generate a stylesheet for html output .
make logger . config optional for backwards compatibility
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve clarity and functionality to enhance the handling of service component recovery events and ensure
updated SleuthTagPropagationAutoConfiguration to create a handler by default using Spring ' s user configuration to improve flexibility in configuring handler
refactor dependency type assignment logic in RustCompileUtils . java to use a switch statement to improve readability and maintainability of the code
updated the ` oauth2LoginLinks ` method to accept an additional ` queryParams ` parameter and added error handling to enhance the functionality of the `
hbase - 11313 hbase . hfile . getfirstkey ( ) should check if first kv exist before seek to the first
hhh - 16400 - introduce new generationtiming . issalways ( ) and deprecate old generationtime . value ( )
add parameterized test for layer norm ( nan )
refactor ` showShareFile ` method calls to use ` getFileOperationsHelper ( ) ` instead of direct calls to ` getFile ( ) `
added a new test class ` LiquibaseUpdateMojoExecutionTest ` for testing the ` LiquibaseUpdate ` execution to
convert the proxyType string to uppercase before setting it to ensure consistency in proxy type handling
add mod _ minecraftforge . java to make sure we get dungeon loot try to make them initialize .
refactor JdbcDatabaseSnapshot to improve key handling and filter logic to enhance readability and maintainability of the code by introducing a counter for
added a container with a border and a label to the CSSBorderTest class to enhance the visual appearance and appearance of the CSS component
added conditional configuration and exception handling for retry policies in ` LoadBalancerAutoConfiguration ` and ` RetryInterceptorAutoConfiguration ` , and introduced ` Retryable
change layout parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout to improve layout consistency by using MATCH _ PARENT instead of FILL
updated the calculation of parentTaskName to use current time instead of nanoseconds to ensure accurate tracking of task execution time
added error handling for parsing Add Service requests in ServiceResourceProvider . java to improve robustness and provide clearer error messages when parsing invalid service
refactor conditional logic in IndexDatabase to improve clarity and structure to enhance readability and maintainability of the code
make sure ca do n ' t handle negative input in ca
refactor AnonCipherWithWantClientAuth class for improved authentication handling to enhance security and maintainability of the authentication process
added @ Deprecated annotations to multiple methods in ProducerTemplate . java to indicate that these methods are outdated and should not be used in new code
refactor JLayer class to improve code readability to enhance maintainability and facilitate future updates
make evictiontest more tolerant to slow machine
refactor ` encodeInternal ` method to use ` saltedPass ` instead of ` input ` to improve code clarity and maintainability by
replaced local variable ` viewTreeObserver ` with direct reference to ` mTaskRecyclerView ` in ` IconRecentsView . java `
refactor Response class to improve response handling to enhance code readability and maintainability
use long . max _ value instead of long . min _ value in sstablemetadata . readtimestamp ( )
add a preferred size of 200x60 to the security dialog to improve the appearance and aesthetics of the application
added a null and empty check for replies before compressing replies in multiple classes to ensure that replies are only compressed when they are not empty
replaced the custom ` toString ` and ` equals ` methods in ` HitbtcBalance ` with custom ` equals ` and ` hashCode
fix ( sql ) : fix in clause for query with in clause
change return statement from ' s ' to ' addrs . toString ( ) ' in RetriesExhaustedWithDetailsException . java to improve
replaced the closeOpenFile ( ) method with a direct call to OpenCookie . open ( ) to streamline the code by elimin
updated HTTP client imports from Apache HttpClient 4.0 to Apache HttpClient 5.0 in JsonToGrpcApplicationTests . java to support newer
pipewood : fix energy loss in wood pipe
added a check to delete the temporary output file if it exists to ensure that the temporary output file is deleted if it exists
updated the constructor name from " tid " to " id " in BitstampWebSocketTransaction . java and added new test cases in BitstampStreaming
added time limit checks in ReplayProcessor and ReplaySubject classes and corresponding tests in ReplayProcessorTest and ReplaySubjectTest to ensure
updated expectedCitation string formatting in CitationStyleGeneratorTest . java to improve code readability and maintain consistency in formatting
added new columns and modified SQL insert statements in MediaTableFiles . java to improve database schema management and ensure compatibility with HDR format
g3d - 324 : show definition for equation in exam with feature flag show _ definition _ for _ equation _ in _ exam
added a null check for the component in the SIPCommTextFieldUI class to prevent potential NullPointerExceptions during execution
hbase - 22479 add caching for meta scan when startrow = = null and scanroot = = false
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes for improved performance to enhance efficiency and maintainability of mathematical operations
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to provide a mechanism for enabling transient taskbar
[ hotfix ] [ runtime ] fix javadoc in accessexecution and archivedexecutionvertex
added a condition to set density based on scale in IOSGraphics . java to ensure density is set correctly when scaling is 3
rename ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity by accurately reflecting the purpose of the
hbase - 16405 regionstatestore should log the exception , not just the error
refactor assertTrueEventually to use a lambda expression for better readability to improve code readability and maintainability
updated logging statements in AsyncHttpConnection . java and refactored test classes in AsyncContextTest . java and SelectChannelTest . java to
added a boolean parameter ` showArrow ` to the method signature of ` SearchUiManager ` to enhance the functionality of the ` SearchUiManager
added a conditional check for ` isMVStore ( ) ` in ` Database . java ` and updated lock mode handling in ` TestRowLocks
skip a test that fail on linux / amd64 only
added type checks for Integer , StringValue , and IntValue , and modified return logic for better handling of input types to improve type safety and ensure
updated primary key validation logic in CreateTableStatement . java to provide clearer error messages for missing or multiple primary keys
added conditional logic to set drawable resources based on LMP status in multiple classes to ensure proper visual representation of button icons based on the device '
improve error message when there be no view to query
added new methods for adding content type options , XSS protection , HTTP strict transport security , and frame options to the HeadersConfigurer class to
refactor methods in ObjectEnumerableAssert for improved readability to enhance maintainability and facilitate easier debugging
[ grid ] rename smoketest to distributedcdptest and add documentation
added type attribute to @ aggregateroot annotation in test
added support for prebuilt _ libraries _ directories in Python in - place binary descriptions to ensure proper handling of prebuilt libraries during
added client authentication handling in NetServerOptionsConverter and updated HttpServerOptions to use a default ClientAuth value to improve flexibility in client authentication configuration
updated directory paths in HiveConf and MetastoreConf to include the user ' s name to ensure consistency in directory structure across different environments
updated task view management logic in RecentsView . java to handle primary and secondary task views to improve accuracy in determining task view IDs and
add a timeout to the test to prevent intermittent failure
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
rename variable ' controller ' to ' flowController ' in multiple classes to improve clarity and consistency in naming conventions
[ flink - 20613 ] [ table - planner - blink ] fix exchange count be wrong when use full outer time join node
added a usage of ClassLoaderHandler in the module - info . java file to enable the use of ClassLoaderHandler in the application
refactor solve methods in SolutionBusiness and SolverAndPersistenceFrame to improve clarity and functionality to enhance code readability and maintainability by
added JsonIgnore annotation to ApplicationSettings . java to exclude certain JSON fields from serialization
changed the condition from checking if the throwable is null to checking if it is not null to ensure that the code executes only when the throwable is
refactor query information retrieval to use a local variable for clarity to improve code readability and maintainability
fix auto workbench not work when there ' s no recipe .
fix ( gl200 ) : skip hdop if there be no data
rename ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` in ` AvroRecord
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
[ work ] add initializable factory to the container .
use longtasktimer . sample . start ( ) instead of meterregistry . start ( ) . start ( ) . start ( ) . start
changed the type of SYNC _ DELTA _ RATE from float to double and updated related calculations to improve precision and correctness in
[ thymeleaf ] add deprecation warn for unwrapped fragment expression find in template .
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread - safe access to the attributes map
http : / / issues . apache . org / activemq / browse / amq - 2372 - fix for amq -
added new color constants and modified the ` extractInto ` method to return fallback colors based on color hints to enhance color handling capabilities and improve fallback
add data folder to src folder list if it exist in sketch project
modified the ` appendContent ` method to include a boolean parameter for title inclusion to enhance the functionality of the ` appendContent ` method by allowing
removed the instantiation of SessionRegistryImpl to simplify the code by eliminating unnecessary object creation
added logging for reconnection completion and failure in NettyStreamingService to improve error handling and provide clearer feedback during reconnection failures
replaced instances of ` Factory ` with ` Proxy ` in multiple test files to utilize the internal ` JavassistProxyFactory `
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` for thread management to improve performance by using a more efficient collection implementation
simplified exception message construction in SocketExceptions . java and updated exception handling in ExceptionText . java to improve code readability and provide clear
added a check to ensure the view directory is under the repository directory before proceeding to prevent errors when the view directory is under the repository directory
remove drag - and - drop functionality from tab header area ( # 1748 )
added ` - XX : + UseCompressedOops ` and ` - XX : + UseCompressedClassPointers ` flags to multiple Java
removed error logging for invalid update log states in PeerSync . java to improve error reporting for non - active or replaying updates
deleted the ConnectionHook . java file to remove unused code that is no longer needed in the project
solr - 12313 : remove unused ` ` waitforreplicasinsync ' ' field from testinjection
camel - 17836 : camel - swagger - java should use ` ` type ' ' instead of ` ` string ' ' for array type
updated version handling in ApexLanguageModule and added a method in TestAccessEvaluator to improve version management and ensure proper access control
refactor multiple Java classes for improved consistency and organization to enhance maintainability and readability of the codebase
refactor AggregateEngine to use a singleton instance and update thread pool creation to improve thread management and enhance thread management
updated WebSocketAsyncConnection to accept a ByteBufferPool parameter to enhance flexibility by allowing different buffer pools for WebSocket connections
added scrollToPositionWithOffset calls to the rvThumbnails layout manager to adjust the scroll position based on the current index to improve user experience
fix ( sql ) : fix ` ` min ( x ) timestamp override by other column alias ' '
refactor animation handling in LauncherAnimUtils and add new transition animation methods in LauncherStateTransitionAnimation to improve animation responsiveness and
added a conditional check to disable the default user agent in the HttpClient configuration to ensure that user agent settings are properly configured based on configuration settings
added pubsub hubbub functionality to FeedRefreshUpdater and ApplicationSettings classes to enable control over pubsub handling based on application settings
changed the visibility of the finalize method from public to protected to allow subclasses to access the finalize method for better encapsulation
added a check for synthetic classes in the ` isAnonymousOrLocalClass ` method and updated its usage in the ` CalculateAbiFromClasses
add a dspacewebapp class that do n ' t need to be implement by the rest api
added null check for leftTableAlias in CalcitePlanner and a new method to retrieve table aliases in RowResolver to ensure that a valid column
[ hotfix ] fix checkstyle violation in jobgenerator
updated logging levels from info to warn for broadcasting transactions and improved error handling to enhance clarity of log messages and provide more context for
increase test timeout for basicmaptest . put ( ) .
removed unnecessary whitespace in HiveClientConfig and TestHiveClientConfig to improve code readability and maintain consistency in formatting
added an enum ` TlsClientCertPolicy ` and refactored client certificate handling in ` GitBlitServer ` to use it to
removed a delay mechanism for sending a new alert message in KrakenFuturesStreamingService . java to simplify the subscription process by eliminating
added HTTP headers support to the ProxyWebSocketHandler to enhance WebSocket request handling by allowing customizable WebSocket protocols
added debug logging for fetchReq in HiveQueryResultSet . java to improve traceability of query result fetching process
updated formatting of dimensions and label in HolidayEventFormatter . java to improve readability and consistency of output formatting
refactor ` FinalizePrivateFieldsTest ` to ` ignoreInnerClass ` and rename ` InnerClass ` to ` InnerStaticClass ` , and
updated UnexpectedJobExecutionException class to improve error handling to enhance reliability of job execution failures
deleted ` jdk . internal . loader . extra ` and modified ` AquaLookAndFeel . java ` and ` Aqu
updated maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer to use maxCost instead of maxFreq
added a mapping for GeoDegeneratePath class to the classRegsitry map to enhance the handling of geodegenerate paths in the
removed the preFill parameter from several pool constructors in ParticleEffectPool , FlushablePool , Pool , and ReflectionPool classes to streamline the construction process and improve clarity by defaulting preFill to false
added new state update conditions in TaskbarLauncherStateController and modified flags in TaskbarStashController to enhance taskbar functionality when the app is not in launcher mode
added null check for ` StyleInfo ` before comparing ` li . getDefaultStyle ( ) ` and ` style ` to avoid potential ` NullPointerException `
fix the marqueelabel in the status tab so that it do n ' t resize the panel .
refactor file icon retrieval logic in FileTreeViewHolder . java to improve code readability and maintainability by reducing redundancy
updated assertions in ParallelUniverseTest to check for " v18 " and " large - land - v18 " instead of " isEqualTo
added synchronization to the retrieval of suite results in XMLReporter to ensure thread safety when accessing the results map
[ native ] add test for native probability function
added a call to deregister the ShutdownThread in ClientContainer to ensure proper resource cleanup and prevent potential memory leaks
hhh - 14827 : add drop temporary table after use to the sybase dialect
simonstewart : do n ' t convert color to rgb a it ' s not support in htmlunit
refactor multiple Java files related to Solr core , XMLWriter , DocIterator , FunctionQParser , and QueryParsing to improve code organization and
refactor LinksIndexingFilter to improve code readability to enhance maintainability and facilitate future updates
updated hex string formatting for reserved memory values in VirtualAllocCommitUncommitRecommit . java to improve clarity of memory allocation details for better
do n ' t refresh source info when there ' s no ad group
refactor equality check in MultimapSubject to use a boolean variable for better readability to improve code clarity and maintainability by suppressing
changed the string resource for wave frequency from deg _ text to unit _ hz to provide a more accurate representation of the frequency unit in the
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the manual creation of the TreeMap with a constructor that initializes it directly from includedLabelSets to simplify the code and improve readability by
added NORMAL _ 4F element and modified vertex format handling in VertexLighterFlat . java to improve code clarity and ensure proper null safety
added span visibility tags for gRPC messages in multiple client and server interceptor classes to enhance tracing capabilities for improved client and server communication
refactor time zone handling in ScheduledTrigger to use TimeZone . getTimeZone ( ) instead of ZoneId to improve code clarity and maintainability by
added AsyncBucket and InMemoryExtension classes and modified related methods in Bucket4j , ConfigurationBuilder , and Bucket4j to use it to
added regex pattern matching for class path retrieval in resexhaust003 . java to improve robustness by ensuring the correct class path is used
fix for bug # 288514 : abstractconnector do not handle interruptedexceptions on shutdown .
refactor OngoingStubbing class for improved readability to enhance maintainability and facilitate future updates
added an optional webServer parameter and modified the daemon creation logic to use it to improve flexibility and control over web server reuse based on configuration
updated variable name from productConstructor to constructor in HttpClientUtil . java and added SolrHttpClient initialization in SolrTestCaseJ4 . java to improve
added a check to ensure the thread allowlist is not empty before clearing it to ensure that the thread allowlist is cleared only if it is
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests ` to ensure the processor uses the correct item writer
dmndt : do n ' t run overlap query if hit policy be not collect
add a new test method ` testSlidingWindowsCombine ` to ` CombineTest . java ` to verify the functionality of sliding windows combining
added a conditional check for ` allAppsDirty ` before binding apps in ` LauncherModel . java ` and improved log message formatting to
added a check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to ensure the test accurately verifies the running state of the
updated import statements and formatting in the Solution . java file to improve code readability and maintain consistency in formatting
added imports for AccessController and LWCToolkit , and refactored property retrieval logic in AquaMenuBarUI . java to
add ` ` fall ' ' flag to ` ` setrawlocation ' ' to control fall distance
refactor query handling in SimpleJpaRepository to improve clarity and functionality to enhance query accuracy and ensure correct result validation
updated BlockUtil to set difficulty , parent hash , nonce , and number from genesisBlockArg to enhance the builder to utilize additional properties
rename loopsafepointinsertionphase to safepointinsertionphase to avoid confusion .
added null and empty checks for children in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve robustness by preventing potential
changed class and method visibility from package - private to public in ArtifactResolver . java to allow access to these methods from outside the package
added thread termination and disposal logic in ClientConnectionHandler and BulletPhysics , and improved error logging in ChunkProcessingPipeline to
added validation to ensure maxBufferedDocs is at least one to prevent illegal argument exceptions when maxBufferedDocs is less than one
added logic to manage and restore the login state in the LoginActivity class to improve user experience by ensuring the login process behaves correctly during configuration
added null checks for elements and values in Pump . java and implemented a new test for UUID sorting in PumpTest . java to ensure
changed access modifiers of several methods and fields from private to protected in HttpShardHandlerFactory and LBHttpSolrServer to enhance encapsulation and
changed the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy and added unit
added Jetty server handler setup in TestJNDI . java to enable proper management of JNDI context handlers
reformatted code for consistency and clarity in SortedDynPartitionOptimizer . java to improve code readability and maintainability
changed the return value of the NioEventLoop check from instanceof NioEventLoop to true to ensure that the method always returns true for
updated the logic for setting the number of nulls in StatsUtils to ensure that the number of rows is updated correctly based on the new row count
camel - 16400 : camel - jbang - add option to export kamelets from camel - kamelet to yaml .
updated OSMJob to utilize the OpenStreetMap authentication mechanism and improved error handling to enhance security by ensuring the OpenStreetMap upload
[ test ] remove debug print statement from graal api test
added client authentication configuration to IoTDBRestServiceConfig and updated its usage in IoTDBRestServiceDescriptor and RestService to allow configuration of client
updated the way mock candidates are injected in PropertyAndSetterInjection . java and added a new test class ChildWithSameParentFieldInjectionTest .
move bloomuriuniqfilter to bloomfilter64bit and bloomfilter32bitsplit to use spring ' s initializingbean
updated getCursorAdapter ( false ) from false to true in HomeFragment . java and added a refresh preference in TweetPager . java to
updated the intermediate header height ratio from 1f to 75f to improve layout responsiveness for better user experience
updated import statements and introduced a new RecompilationEvent class for handling recompilation events to improve logging clarity and provide a clearer
added a new configuration property ` HOST _ SYS _ PREPPED ` and updated related classes to utilize it to manage system preparation status
added a new boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method and created a corresponding test class to enhance the logging
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5645 : fix issue
added properties for entity and score in StaticPipeline . java to enable configuration of entity and score in the pipeline
updated filename handling and improved file path construction in Frame . java and WhoopsModule . java to enhance file path management and enable conditional
[ geos - 7038 ] catalogrepository . lookupstore ( ) should return null if datastore do not exist or not qualify
refactor assertions logic in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` to
( chore ) camel - activemq : fix test to not depend on thread . sleep
replaced instances of ` writeMeasurementScheams ` with direct usage of ` measurementSchemas ` in multiple classes to simplify code and improve
updated loop structure and memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to ensure accurate memory
updated log4j jar path from ` slf4j - log4j12 ` to ` slf4j - reload4j
[ hue ] fix the flakiness of huebridgehandlerosgitest
changed package structure of multiple activities from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities `
[ drools - 1276 ] ignore fail test when droals - 1276 be fix
added a constructor to PullRequestMergedEventsStream that reads Avro schema from a file to facilitate the retrieval of the Pinot schema and
refactor AbstractExpressionPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] fix checkstyle violation in taskslot
replaced instances of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` Netty
added error handling for lock release in MoveTask . java to improve robustness by catching LockException when releasing the lock
replaced properties loading with resource bundle retrieval for GEM _ PATH and RUBY _ VERSION to improve resource management by using ResourceBundle instead of
transaction : use empty _ byte _ array instead of zero _ address
removed unnecessary initialization of classInfo in ClassGraphClassLoader . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix flaky test in jobmanagerstartuptest
fix : add datastream . v1 alpha1 to the list of supported datastream resource ( # 1193 )
added a Bundle to set additional properties in FileDisplayActivity to enhance the functionality of the FileDisplayActivity by allowing additional configuration options
changed the control flow from break to continue in the ParticleEmitter class to ensure that the loop continues iterating when the particle is null
updated expect statements in ` AmbariManagementControllerImplTest ` and ` AmbariManagementControllerTest ` to reflect the correct number of
removed nullable nullable from the SERVICE column in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry . java
updated Bug4823811 . java file with new functionality to enhance performance and maintainability of the code
updated the argument handling in RmStep . java to use the path relativizer for pattern deletion to improve path management by ensuring the correct
updated ` requestFullState ` method to accept a boolean parameter indicating initial request status to enhance flexibility in handling initial requests for better control over
added attribute property and updated related methods in ShibbolethCompatiblePersistentIdGenerator . java to enhance the functionality of generating persistent IDs based on
updated the @ Inject annotation in RequestValidationService . java to improve dependency injection consistency
refactor keyboard handling in UiThreadHelper to use a Bundle for logging messages to improve code readability and maintainability by centralizing log message
reformatted code for improved readability and consistency in the FileNodeProcessor , MManagerBasicTest , and MTreeTest classes to enhance
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a test case for ioutils . slurpfile and ioutils . slurpfilenoexceptions .
added @ FunctionalInterface annotation to multiple classes and made the client variable final in GrpcChannelsProperties . java to enhance method visibility and enforce
refactor span retrieval logic into a separate method ` spanWithName ` to improve code readability and maintainability
added support for the DateWritable type in Hive schema conversion to enhance data handling capabilities for date types in Hive
updated the string splitting method to use Patterns . COMMA _ SEPARATOR instead of hardcoded whitespace to improve readability and maintainability of the code
ggb - 2271 show error message in dialog on invalid input
refactor column count validation logic in SemanticAnalyzer . java to improve clarity and maintainability of column mismatch checks
refactor conditions for updating max scores in WandScorer . java to improve clarity and correctness of max score update logic
refactor Correspondence class to improve code structure to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT and event classes to improve code clarity and maintainability by
updated ` curPixVal ` initialization in ` XRSolidSrcPict . java ` and added ` WhiteTextColorTest . java ` to
fix a bug in the biomedictionary . getsubtypes ( ) method that return an empty list instead of null .
corrected the spelling of " withinTolerance " to " exceedsTolerance " in the BoundedLocalCache class to improve code readability and
added stability annotations and updated import statements in TaplTestsLauncher3 . java to improve test visibility and clarity for better debugging
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure logFileSuffix is not empty before proceeding to avoid potential errors when the suffix is empty
refactor PythonBuckConfig class for improved readability to enhance maintainability and facilitate future updates
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest . java and modified return logic in ShadowApplicationPackageManager .
fix meiligao protocol decoder ( fix # 584 )
added null check for tile before accessing its properties in PowerDiode . java to prevent potential NullPointerException when tile is null
refactor cache management by introducing a separate ` TrimCache ` class and updating cache size display to improve cache management and provide user feedback on
chore ( render ) : update dependency com . google . api . client to com . google . common . collect
updated access control factory methods to throw NotAuthorizedException instead of returning false to improve error handling by throwing a specific NotAuthorizedException for unauthorized access
added a new abstract method ` schedulePeriodically ` and updated method signatures to include an ` @ SuppressWarnings ` annotation to improve code clarity and
replaced refreshListOfFilesFragment ( false ) with onItemClicked ( ) for handling file click events to improve user experience by ensuring the
added a conditional check for multiple streams and improved error handling in StreamUtil . java to enhance robustness by ensuring only one stream is available
refactor ` create _ table ` and ` create _ temp _ table ` methods to accept ` CreateTableRequest ` instead of ` EnvironmentContext
added an ` aborted ` flag and synchronized the ` start ( ) ` and ` abort ( ) ` methods in ` FixedRateFragInsState
updated indentation handling in multiple parser classes to include a minimum indent value of 4 to improve parsing performance by preventing unnecessary indents
add support for wifi autoplay on autoplay when user try to connect to wifi .
removed the check for ` isControlFrame ( ) ` before verifying ` isFin ( ) ` in the ` FrameGenerator ` class to
added visibility setting for the collapse handle in WidgetsBottomSheet to improve user interface by ensuring the collapse handle is visible
added two new files , Issue475 . java and XSS . java , implementing HTML and JavaScript escape functionality in the Jooby
added a check to return early if the units to scroll are zero to optimize performance by avoiding unnecessary processing
changed the condition from checking if the contract list size is greater than 1 to checking if it is not equal to 1 to ensure correct handling of
added ` add ( ) ` and ` put ( String key , enum value ) ` methods to ` JsonArray ` and ` JsonObject ` classes to
added hashCode ( ) method to IPPPrintService and created TestRaceCond class to ensure consistent hash code generation for print services
replaced instances of ` getIVersion ( ) ` with ` getVersion ( ) ` in ` DB2iDialect ` and ` DB2z
added a condition to check if the transaction ' s platform fee is greater than zero before enabling the connection check to ensure that transactions are only
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
clear first sub sample before queue the input buffer .
removed the ' public ' access modifier from multiple classes and methods to enforce package - private visibility for better encapsulation
added import statement for Retrofit in Part . java and PartMap . java to enable Retrofit functionality in the application
refactor JSON handling logic in JsonBuildHelper and ParamsBuildHelper to improve clarity and structure to enhance code readability and maintainability while
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the AbstractFloatingView class to enhance functionality by allowing additional taskbar behavior
fix : update gapic - generator - java with mock service generation fix ( # 602 )
updated alpha calculation logic in ClipAnimationHelper . java and added hasRecents field in RemoteAnimationTargetSet . java to improve animation respon
removed an argument from the createRenderScript method call in AllAppsView . java to simplify the code by eliminating unnecessary parameters
refactor PMD class to improve code readability to enhance maintainability and facilitate future development
added a method to check if a system bundle is a system bundle and refactored related code to use this method to improve code readability
updated import statements and formatted code for improved readability in IntegrationTestSparkBulkLoad . java to enhance code clarity and maintainability
keychaingrouptest : use a constant instead of a hard - coded value
refactor rocket configuration handling in Overview . java to use a more consistent variable name and improve readability to enhance code maintainability and
updated the method to retrieve the AgentAttache by storing it in a variable before returning its value to improve code readability and maintainability by
added null check before converting the value to Data in DefaultRecordStore . java to avoid potential NullPointerException when value is null
kvm : throw discoveryexception instead of return null when host discovery fails
updated the handling of ` NO _ NAME ` and ` NO _ VALUE ` attributes in the ` ParamAction ` class to improve clarity and
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept a mock object instead of an InvocationContainer
added a method to strip method parameters from the method name in the LocationOpener class to improve method line extraction by removing unnecessary parentheses
updated version name and code for the GreatVoyage application to reflect the latest changes and improvements
use set instead of arraylist for allow command in outputfilter
[ geot - 5792 ] update symbol symbolizer to use new key for label cache
ggb - 2272 center popups when feature overlap
[ hotfix ] [ test ] fix typo in error message
replaced an anonymous inner class for handling task launching with a dedicated ` StartingWindowListener ` class to improve code organization and maintainability by
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to document the functionality of the MBeanServer class
updated exception handling in CheckPackageAccess . java to use PackageAccess and PackageDefinition SecurityException to improve clarity of error messages and ensure proper package
increased the timeout duration for the executor service termination from 30 seconds to 90 seconds and added an assertion to ensure the test does not terminate
changed loggingEnabled from a boolean to a Boolean and added a null check before setting it to ensure logging is only enabled when it ' s not
added @ JsonIgnore ( true ) annotations to Schema . java to exclude certain fields from serialization
increased the test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete
updated method signatures and variable names in SimpleNaiveBayesClassifier . java for improved clarity and consistency to enhance code readability
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and introduced ` CheckHelperAuditModule ` in the Guice injector to
refactor Prototype class implementation to improve code readability and maintainability
added a check to determine if the table is transactional to ensure that the table is transactional before proceeding with operations
[ java ] remove unused method in recordingwriter . writefragment .
update cea decoder and subtitle to use offset _ sample _ relative instead of 0 .
fix kairos datastore test to use ' alias ' instead of ' metricname '
updated currency pairs in VaultOfSatoshiBaseService . java to replace all instances of " CAD " and " DOGE " with
hhh - 14836 - fix resource leak in unit test
updated KafkaSender import statements from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to
added integration tests for GWT binary building in a new file ` GwtBinaryIntegrationTest . java ` and an ` A . java `
updated mouse event handling logic in BrowserContentPane . java and changed variable names in SQLConsole . java to improve clarity and error handling in
reordered code in EnhancedRandomImpl . java and updated test cases in EnhancedRandomImplTest . java to improve code readability and
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to manage XML security properties more efficiently
added new files ` InterfaceWithDefaultMethod0 . java ` , ` InterfaceWithDefaultMethod1 . java ` , and ` Subtype . java `
update regex patterns from " LIKE " to " GLOB " in SqliteFieldPredicateView . java to allow for more flexible matching of
change access modifier of getdmnprofiles method from private to protect to allow subclass access
fixed - rscript . loadall ( ) and rscript . loadall ( ) method be n ' t execute on slave node . #
simplify code and improve assertion in static object .
updated debug log messages to include the number of targets instead of just the number of targets to improve log readability and provide more detailed information during
fix memory leak in fmloutboundhandler . sendproxy ( )
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and updated thread pool initialization in WebServer to allow dynamic configuration of
refactor shortcut management logic in LauncherModel . java to improve clarity and efficiency in managing removed shortcut information
remove unnecessary type check for String in DefaultHttpClientBinderRegistry to simplify code for better readability and maintainability
removed navigation case for the home screen in DetailFragment . java to streamline navigation functionality for better user experience
added a check for ` hasAndroidMarket ( ) ` before including ` includesPlayServices ` in ` AndroidImplementation . java ` to ensure
refactor TableBlockParser to correctly handle whitespace and zero - length headers to improve readability and correctness of table rendering logic
added bridging header support to NewNativeTargetProjectMutator , ProjectGenerator , and related classes to enhance flexibility in managing bridging
refactor PotentiallyDeadCode . java to improve method handling and source path management to enhance code clarity and maintainability by using a unified
added diamond detection functionality in mmm Attr . java and created new classes DiamondRedundantArgs . java and T6939
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest (
removed unnecessary import of Utils and logging of cachemetrics in SolrCacheHolder . java to streamline code by eliminating unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper exception management during authentication
updated the comparison logic in Test6796786 . java to use the negative value instead of the zero value to ensure accurate comparison of zero
updated logback configuration paths in JoobyMojo and Main classes to include the " logback . dev . xml " file to
added a new file JaasEventCheck . java to handle Jaas authentication events to facilitate event checking for failed and successful authentication
refactor QuickstepTransitionManager to use a list of views to animate instead of individual views to improve code readability and maintainability by redu
updated string distance comparison in ConjunctionSolrSpellChecker and added unit tests in ConjunctionSolrSpellCheckerTest to ensure correct exception handling
replaced HashMap with Map for fetchers in ShadowSystemServiceRegistry . java to improve performance by using a more efficient data structure for fetchers
[ hotfix ] remove unused constant in defaultleaderelectionservice
changed the visibility modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
add a configuration property to control the timeout of the modify storage pool command .
updated JDBC _ TABLE and JDBC _ SCHEMA parameters in AbstractJDBCConnectorProvider to ensure correct JDBC schema is used for database connection management
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to improve code readability and maintain consistency
updated schemaTypeCache to use a synchronized map and replaced synchronization with computeIfAbsent to improve thread safety and simplify schema creation logic
update header handling logic in StaticServerHttpHeadersWriter and add a case - insensitive test in StaticServerHttpHeadersWriterTests to ensure headers are
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable tests that rely on available files only within CMU
added a method to create a storage directory in TestCollector . java to ensure the storage directory exists for testing purposes
set chunked streaming mode to 1024 in StarTreeJobUtils to improve performance by reducing the number of HTTP requests
jsonschema : introduce basicsyntaxchecker , multipletypesyntaxcheckertest , singletypesyntaxcheckertest , and basictypesyntaxcheckertest
hbase - 16405 : fix the import of hbase - protobuf to use the hbase - thirdparty package
added a new ` Node ` class and a test method ` beansWithRecursiveStructureMustNot cause stack overflow exception ` in ` BeanPopulator
added IOException declaration to the getRemoteName ( ) method in AccountingTransceiver . java to handle potential IOException during remote name retrieval
updated exception handling to include IllegalArgumentException in UserAccountManagerImpl . java and refactored client creation in ClientFactoryImpl . java to improve error
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance flexibility in handling method security aspect settings
updated import statements and added hostname verification configuration in mmm Connection . java and ppp Connection . java to enhance security by enabling hostname verification
removed the final modifier from the ` item ` variable and added a ` remove ` method in ` OHLCSeries ` , along with a corresponding
replaced invocation . invoke ( ) . joinInternal ( ) with invocation . invokeUrgent ( ) . joinInternal ( ) in Client
refactor joint management logic in World . java to properly destroy and remove joints to improve resource management and ensure proper cleanup of joints in
added null check for filterpattern and filterstring in searchfilter .
[ hotfix ] [ test ] move sourcereadertestbase class to testutils package
added exception handling for missing document and parent folder in DocumentsStorageProvider . java to improve robustness by preventing potential NullPointerExceptions during document
added new files ` HookDefinition . java ` , ` JavaHookDefinition . java ` , and ` JavaHookTest . java ` to implement
refactor buffer management logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by encapsulating
updated the ` setExoOptions ` method to include a ` allowTs ` parameter and modified its usage in the ` videoDirectPlayProfile
added functionality to remove user identifiers from the identifier collection to ensure proper handling of user identifiers in the DMR decoder
added a constant INVISIBLE color and refactored the toString method in Color . java , and updated imports in RailButtonShapes . java
updated null handling logic in CountAggregationFunction . java and added a new test in NullHandlingIntegrationTest . java to ensure correct handling of null
initialize the deep variable to - 1 in InternalTransaction . java to ensure proper initialization of deep state during transaction processing
escape the XML name in the buffer to ensure proper handling of special characters in XML names
updated file initialization to use a configurable work directory instead of hardcoded " work " to allow dynamic configuration of the work directory for better flexibility
[ drools - 1342 ] deprecate a rule with ` ` deprecation ' ' attribute
use codebuffer . position ( ) instead of create a dummy label .
refactor TimeRange to use static final constants for minStamp and maxStamp to enhance immutability and maintainability of the TimeRange class
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future updates
refactored the metric connection logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing duplication
reformatted conditional statements in DetailFragment . java and added a view touch listener in GalleryActivity . java to improve code readability and ensure proper
do n ' t drain tank on sneaking , if the player be not remote .
updated CsharpLibrary and PrebuiltDotnetLibrary handling to support both RuleAnalysisLegacyBuildRuleView and PrebuiltDotnetLibrary to
of - 237 : add support for ' get ' iq type in pep service .
added a null check for runtime when intrinsicGraph is null to ensure that runtime is not null before proceeding
added a condition to check if ' active ' is not empty in MetricTrackingWindmillServerStub and updated the refreshActiveWork call
pdfbox - 4892 : store last object key in bf search , a suggest by valerybokov
added constructors to LwjglAppletApplication and modified canvas behavior in LwjglNativesLoader to enhance the applet ' s functionality
updated the string representation method in EnvironmentAndSystemPropertyClientProviderStrategy to handle null DockerClientConfig gracefully to improve robustness by avoiding potential NullPointerException
refactor LDAP authentication handling to improve password policy application logic to enhance security by ensuring LDAP password policies are applied correctly
refactor Int2ObjectCache implementation to improve performance and reduce memory usage
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated its usage in ` LdapUtils ` to enhance
refactor Readable class to improve readability to enhance maintainability and ease of future updates
updated JsoupNonVisualRegressionTest to use TestSupport for page break handling to improve code readability and maintainability by using a
updated menu item icon references in CaptureActivity . java to use android ' s icons instead of hardcoded strings to improve clarity and consistency in
updated JRE _ IS _ MINIMUM _ JAVA8 and JRE _ IS _ MINIMUM _ JAVA9 constants to incorporate
updated the ` IS _ JDBC41 ` assignment logic to check for ` Integer . MIN _ VALUE ` and handle ` AbstractMethodError ` and
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filtered classes in Enclosed . java to improve performance by using a more efficient list implementation
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , and AbstractCasView classes
rearranged parameters for png , jpg , and gif in ChartProvider . java to improve code readability and maintainability
fix work directory for bibtex _ db file
simplified the return statement in JavacParser and added a new test class ExtraSemiTest to improve code clarity and ensure
added timestamp handling and updated repository methods in User and UserRepositoryTests to support ' after ' and ' before ' keywords in user queries and improve
updated Test15FloatJNIArgs . java file to improve test coverage for floating - point functionality
updated import statements and modified string formatting in mmm plugin . java and ppp plugin . java to improve code readability and maintainability by
corrected the substring method in MockProcessContext and added a test for fake encryption and decryption in TestMockProcessContext to ensure correct handling of
[ java ] ensure that aeronarchive do not call reentrant on callback .
added a null check for the dependency before merging it in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
added a timeout of 10 seconds to the @ Test annotation in SslBytesServerTest . java to improve test stability by preventing timing -
refactor Peer class to improve code readability to enhance maintainability and ease of future updates
updated method names from ` toImmutable ( ) ` to ` toHistoricalIndexSegment ( ) ` and added new methods in ` StreamProvider
updated FailureWatcher to check for null exportedData before calling writeTo to avoid potential NullPointerException when exportedData is null
refactor popup positioning logic in RecyclerViewFastScroller . java to improve readability and maintainability of the code
updated method names and added a check for tool window instantiation in BuckWSServerPortUtils and BuckEventsConsumer to improve clarity and
added a conditional check for Windows platform before creating a JCheckBox for preventSleep to ensure that the " preventSleep " checkbox is only added when
updated servlet imports from javax to jakarta in HttpConfigurationAuthorityOverrideTest . java to align the code with the latest Jakarta EE standards
refactor window size calculations in QuickstepAppTransitionManagerImpl and FloatingIconView to account for vertical bar layout to improve layout respons
added fullScreenExclusiveModeState functionality to XWindow and XWindowPeer classes to manage and manage window visibility based on full - screen mode
fix playeddurationstr ( ) and add test
added ` addCredentials ` method to ` DagUtils ` for managing credentials in ` MapWork ` and ` ReduceWork ` to enhance the
( chore ) camel - core : use entryset ( ) instead of keyset ( )
trim whitespace from the current thread ' s name when setting the thread ' s name to ensure the thread name is consistent and avoids potential issues with
updated the error message in GpsMainActivity to clarify that the error message refers to a file instead of a description to improve user
[ hotfix ] fix checkstyle violation in job
added a new abstract class ` Unused ` and a test method to verify the behavior of the ` AutoValue _ Main _ Unused `
updated the key for HBASE _ MASTER from " hbase _ master _ host " to " hbase _ master _ hosts " and added
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused components that are no longer needed in the project
updated ` performJoin ` method to return a list of ` GenericRecord ` instead of a single ` GenericRecord ` to allow multiple output records
updated MAX _ DELEGATE _ LOCK _ PERIOD to allow a maximum value of 10512000 and modified related logic to accommodate
fix issue with npe when network rate be 0 .
removed unused constructor and updated the applySpecification method in CmcExchange . java to streamline code and improve clarity by eliminating unnecessary
updated configuration handling in ` GossipLocalNode . java ` and changed configuration file names in ` Constant . java ` to improve clarity and consistency
make tpc enable / disable configurable via system property hazelcast . client . tpc . enabled
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple API application classes to ensure compatibility with
refactor the division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and
refactor the handling of the ` key ` variable in ` NamedObjectList . java ` to improve clarity and initialization of the ` buffer `
updated cleanup methods to use ` cleanupEmptyTableDir ` instead of ` cleanupEmptyDir ` across multiple compactor classes to improve clarity and
updated AsyncCache and Cache classes to improve caching mechanism for better performance
added RCFileInputFormat registration in SerializationUtilities . java to enable support for RCFileInputFormat in Kryo serialization
added methods ` typeOf ` and ` categoryOf ` to the ` TypeMapperComponent ` class for retrieving column types and categories to enhance type mapping
added error handling for invalid host header parsing and updated test cases for invalid host headers to improve robustness and ensure proper error reporting for invalid host
refactor ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use Robolectric ' s ReflectionHelpers instead of libcore ' s TimeZoneFinder
refactor ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to improve handling of outgoing values and
refactor ` SegmentCoreReaders ` and ` SegmentReader ` to use ` si . name ` and ` si . dir ` instead of `
added a method to check if a main thread profile exists and updated related classes to utilize it to improve performance by optimizing the existence of
added a validation check to prevent annotation definitions in a Buck rule with required _ for _ source _ abi being absent or set to true to
updated constant names for Greek , Irish , UAX29URLEmail , and Turkish filters to use lowercase instead
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
replace lucenesearchrequestprocessor with discoverysearchrequestprocessor since dspace 4.0
added a list of time zone identifiers and removed specific locale entries from the date and time lists to ensure accurate representation of time zones in the application
updated SurfaceSyncGroup instantiation to include a specific name to improve clarity and specificity of the SurfaceSyncGroup
updated GridFsTemplate and GridFsTemplateIntegrationTests to remove unnecessary casting and improve code readability to enhance code clarity and maintainability by
added unit tests for retrieving column indexes and updated ShadowDownloadManager to manage total size and bytesSoFar to improve test coverage and ensure accurate retrieval of
refactor character insertion logic in TextField . java for clarity to improve readability and maintainability of the code
added a check to return early if the target is equal to the current instance to optimize performance by avoiding unnecessary processing
added a method to determine if a block is terminal based on the last non - null variable node to improve handling of variable nodes in the block
added hashCode ( ) method in IntervalXYDelegate and XYSeriesCollection classes and updated equality checks in XYSeriesCollection to use HashUtilities to ensure
move clientqueuedisruptiontest to cleanup after each test
updated formatting in CloudWatchAppender . java and renamed test method in RegisteredServiceScriptedAttributeFilterTests . java to improve code readability and cl
replaced ` GsonBuilder . serializeSpecialDoubleValues ( ) ` with ` GsonBuilder . serializeSpecialFloatingPointValues ( ) ` method to
added calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` to
added checks for non - empty subtags before canonicalizing and appending language tags to ensure only valid language tags are appended to the buffer to avoid
add kvm . ssh . to . agent config to enable / disable ssh - to - agent for kvm
removed the ` public ` access modifier from constructors and methods in ` ScheduledAction ` and ` SchedulerWhen . java ` to enhance encapsulation and
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to align with the new package structure
added a condition to check if the string does not contain a hyphen in the filter to ensure that the filter does not contain a hyphen in the
updated sort column label text from " natural order " to " natural column order " and added dmStats method in DataBrowser and Desktop classes
replaced ` Arrays . copyOf ( input , 6 ) ` with ` Arrays . copyOf ( input , 6 ) ` in ` Utils . java
replaced direct call to ` write ` with HTML encoding for ` remoteAddr ` to ensure that the remote address does not contain spaces in the URL
fix itemstatetriggerhandler to check for ` ` smarthome / items / ' ' instead of ` ` / ' '
removed unnecessary synchronization around date formatting in FastHttpDateFormat . java to improve performance by reducing unnecessary synchronization overhead
refactor file moving logic to use a concurrent pool for better management and error handling to improve resource management and error handling during file moving operations
added two overloaded trigger methods in WrapTimer . java to enable scheduling of timer tasks based on a specified period
updated Type checks in TypeStringUtils to include LOCAL _ DATE , LOCAL _ TIME , and LOCAL _ DATE _ TIME to ensure correct handling of additional
added a verbose error logging option to the AbstractStatusReporter to enhance error reporting by providing more detailed error information
updated ClickStartHandler initialization to include menu visibility check and added menu toggle functionality to enhance user experience by ensuring menu is only toggled when
cloudstack - 7013 : do n ' t allow vpn connection to be esitable between different account and vpn gateway
updated error handling logic in CursorReadingTask and added a new test case in CursorReadingTaskUnitTests to ensure error handling is only triggered once
pdfbox : do n ' t try to create thumbnail / text if pdf be encrypt
[ 3.0 ] fix npe in curatorzookeeperclient . close ( ) ( # 10709 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code readability and maintainability
replaced ` getSelectedItemId ( ) ` with ` id ` in ` ContentUris ` and added a call to ` ContentResolver . delete (
refactor Java6Assertions and Conditions classes for improved clarity to enhance code maintainability and readability
changed the parameter type of ` replaceOrderBulk ` from ` Collection < ReplaceOrderCommand > ` to ` List < BitmexPrivateOrder
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and add ` enterFunctionNode
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to use it to retrieve the long value
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to demonstrate concurrent modification exceptions with multi - th
send an offline roster message when a user leave the roster session .
updated ` MapOperator ` and ` PartitionDesc ` to use ` getOverlayedProperties ( ) ` instead of ` getProperties ( ) ` to
updated the formatting of the loadHandle method call in FunctionObjectCreator . java to improve code readability and maintain consistency in formatting
added null check for ` extTypeCustomDesers ` before initializing it in ` MessagePackFactory ` to prevent potential NullPointerException when ` extType
remove system . setproperty ( mockserver . loglevel , " warn " )
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the ` createJetty ` method in ` AbstractSolrMorphlineZkTestBase . java ` to
changed the type of scoreMap and termScoreMap from Float to String and updated associated references to improve clarity and organization of score - related
updated conditional checks in U64 . java to use less than zero instead of bitwise AND to improve accuracy of data comparison logic
added headline styling options to the MainViewModel to improve the visual presentation of text elements in the UI
updated the condition for notifyChange to include a check for the didSupportDarkText variable to ensure that the notification updates correctly based on the
[ hotfix ] [ checkpoint ] optimize the checkpoint request decider logic
reduced the maximum number of concurrent tasks and updated the pool size constants in Parallel . java to improve resource management and allow for more flexible
replaced ` filter ` with ` anyMatch ` for matching providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to
added tests for Windows ServerCore container failures in OpenCVImageFactoryTest to ensure tests fail correctly on Windows platforms
http : / / issues . apache . org / activemq / browse / amq - 2372 - allow to configure the prefetch
[ pytorch ] fix exception throw by python proxy .
added a new annotation ` @ Issues ` to the ` Issue ` class with a repeatable annotation to provide a method - level annotation for
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest
updated socket connection logic to conditionally use a resolved address based on the " socksProxyHost " system property to improve flexibility by allowing
[ hotfix ] fix checkstyle violation in slotstatus
removed unnecessary import of ClassUtils from ReflectionUtils . java to streamline code by eliminating unnecessary dependencies
replaced instances of ` HashSet ` with ` LinkedHashSet ` for ` excludeProtocols ` , ` excludeCipherSuites ` , and ` selected _ protocols
added a static resource variable and logic to return it if the resource matches the specified location to optimize resource management by avoiding unnecessary lookups
added a constant for the size of the plaintext segment in the StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel classes
added a test for invalid fallback routes in the circuit breaker to ensure that the circuit breaker correctly throws an exception for invalid fallback URIs
added SSL connection support to the HttpClient to enhance security by enabling HTTPS connections with hostname verification
updated the size limit setting in PerformanceTest . java and removed the resetBytesReadCounter call to improve memory management and ensure proper handling of
added the ` preferAES ` property with getter and setter methods to the ` ProtectionPolicy ` class and removed it from ` StandardProtectionPolicy
( chore ) camel - opentelemetry : use logger instead of system . out
added a test method ` testLoadBalancerInstanceOperations ` to the ` ElbIntegrationTest ` class to verify the behavior of instance creation and health
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity by
added a try - catch block around the createFile method to handle potential InvalidPathException to improve error handling and provide clearer feedback when the file
hhh - 14850 - fix ` ` timeouts do n ' t work on oracle 11 ' '
updated texture file handling and error reporting in TextureUnpacker . java to improve robustness and provide clearer error messages when the atlas image file
added locking mechanism for updating service and component states in AmbariManagementControllerImpl . java to ensure thread safety during concurrent access to the cluster
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the ResultSet does not close a query , and modified the close logic in HiveStatement to ensure proper resource management and
removed unsupported input stream features and refactored test cases in ChunkingTest . java to improve input stream handling and enhance test coverage for large
added logic to remove pre - deleted databases from the schema response in ClusterSchemaManager to ensure that only valid databases are retrieved from the consensus manager
modified the handling of the " chunkedWriter " in the Http1xUpgradeToH2CHandler to ensure proper management of the chunkedWriter
updated the logic to check if the current item ' s ID matches the base item ID and added a delete confirmation dialog in FullDetailsFragment to
added a new interface ` RuleBank ` and refactored ` RuleFinder ` to implement it to improve rule management and encapsulate rule -
tighten up jcatlscrypto to catch exception
added new files TestMonomorphicObjectCall . java and Object . java for testing and object manipulation functionalities to facilitate testing
refactored the ` removeMetaDataSource ` method to ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop
hbase - 15827 fix npe in memstore . shouldseek ( scan , scan ) ( addendum )
[ hotfix ] [ runtime ] rename local _ state _ root _ directories to local _ state _ sub _ root
modified the ` AlterTimeSeriesStatement ` class to accept a boolean parameter for altering views to enhance flexibility in controlling the behavior of
[ java ] fix problem with condition . matchtext ( ) and add unit test .
added a try - catch block around the retrieval of the routing table builder to handle potential exceptions and return null to improve robustness by preventing
refactor parameter handling in HttpClientIntroductionAdvice to use putIfAbsent for better null - checking and insertion to improve code clarity and
( chore ) camel - jms : use char [ ] for password in test
api : fix search for domain by name / domainid / domainchildren when domain name be specify in listdomainchildren command
replaced the ` toSortedListWithCounts ` and ` isUniformDistribution ` methods with ` equals ` and ` isUniformDistribution ` methods
updated the parameter name in the ` initialize ` method from ` status ` to ` original ` and set warnings from the original to improve clarity
sulong : use currenttimemillis ( ) instead of currenttimemillis ( ) in llvmamd64syscall
replaced direct calls to ` readObject ` with a variable ` var ` in ` PrettyPrinter . java ` to improve code readability and maintain
updated LRUDictionary to initialize indexToNode only if it is null and reset its next , prev , and container properties to ensure proper resource management
modified filtering logic in DatagramSocket . java and changed read method in DatagramChannelImpl . java to improve handling of datagram packets and
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestQueryDNS . java to utilize the latest JUnit 5
added a new class NutchServerInfo with properties for configuration , jobs , and running jobs to provide a structured way to manage job information
replaced offset and position length attributes with AttributeSource in EdgeNGramTokenFilter . java to improve attribute handling for token processing
add a timestamp option to the settingscolumn , which allow write all column with the given timestamp .
refactor DSAParameterGenerator to use BigInteger . ONE for better readability and consistency to enhance code clarity and maintainability by using consistent
updated methods in NumberUtils and Numbers to utilize Float64ArrayNative and Float64ArrayNative for improved precision and performance to enhance
updated masking logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking of byte values
added constraint violation checks in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to data integrity
( chore ) camel - core : fix the issue that consumermanageprocessor # rewriterequestforstatictopic do n ' t
added methods for adding tabs and refactored tab creation to improve tab management functionality and enhance code readability
replaced array initializations with zero - length array initializations in multiple classes to improve code readability and performance by eliminating unnecessary array
[ hotfix ] [ runtime ] add taskmanagerruntimeinfo to mockenvironment
refactor conditional checks in MavenVisitor to use if statement to improve readability and maintainability of the code
updated mock app secret , name , config , and name updates from " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE
added a new file ` FormatCheckingTest . java ` to validate Java class name format errors to ensure that the application correctly handles illegal class names
updated line number assignment in CodeGenerator . java to use the original line number instead of the statement ' s line number to ensure accurate line number
added a try - catch block around the property retrieval operation in ConfigHelper . java to handle potential exceptions during configuration retrieval
added static createToggle methods for creating RadioButton instances with specific icon and command parameters to enhance functionality by allowing toggling of radio buttons with
updated LRUCache to initialize the cache with a specified size and changed CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 to improve cache
int - 113 , int - 113 , int - 113 , int - 113 , int - 113 , int - 1
add null check for symbolicName and set it to an empty string if it is null to ensure that symbolicName is not null and avoid potential
implement modecontribution . load ( ) for usemode = ' ' ' -- external ' '
added error handling for the shutdown hook addition in IOManager . java and improved logging in YARNSessionFIFOITCase . java to
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` to improve clarity by using a more d
added null check for notPropagatedHeaders and updated selective header propagation logic in AbstractMessageProducingHandler to ensure proper handling of non -
refactor CompareMode class for improved readability to enhance maintainability and facilitate future updates
added ` HasTests ` interface and implemented ` getTests ( ) ` method in ` RustBinaryDescription ` and ` RustLibraryDescription
updated placeholder and error resource references in FileMessageVH . java to improve clarity and consistency in naming conventions
refactor OnExitTest class for improved clarity to enhance maintainability and readability of the test code
added an ` onUserPreferenceChanged ` method to ` TaskbarManager ` to recreate the taskbar when the user preference changes
refactor heap dump methods to support both J9 and J9 JVM JVM dumping to improve compatibility and support for JVM JVM dumping in
( chore ) camel - mybatis : ensure session be close even if commit fails .
simonstewart : fix a bug in the ie driver that do n ' t support window selection .
updated Java version from JDK 5 to Java 5 for - loop and enhanced iterator pattern definitions to improve compatibility with Java 5 for - loops and enhance
added a method to set the application state to UNAVAILABLE in JmxApplicationProvider . java to ensure that the application is in an unavailable
updated position and limit handling in ByteBuffer , Heap - X - Buffer , and StringCharBuffer classes to improve buffer management logic to ensure proper handling
replaced ` toUri ( ) . toString ( ) ` with ` toString ( ) ` in ` ConditionalResolverMergeFiles . java ` to
refactor setEmpty methods across multiple classes for consistency and clarity to improve code readability and maintainability by centralizing the handling of empty
changed enum declarations from package - private to public for Protocol and Transport in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
added a new Document instance and updated test assertions in TestMultiPhraseQuery . java to improve document handling and ensure consistency in test validation
do n ' t send pending ticket for offline payment
added synchronization and error handling for the onTimeout listener in HttpChannelState . java to ensure thread safety and prevent potential deadlocks during timeout events
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to use debug level and added
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
update read method to use LOCAL _ QUORUM instead of QUORUM when consistencyForPaxos is set to LOCAL _ QUOR
added a condition to check for Home model in the HeosDiscoveryParticipant class and set a default serial number in the HeosPlayerHandler class
added a new ` Wait ` class and updated ` PlainSelect ` and ` SelectDeParser ` to utilize it to manage wait time in
added attribute handling for nodes and edges in Neo4j to improve attribute management for nodes and edges
added a null check for ' from ' and ' serverName ' in SessionManager . java to prevent potential NullPointerException when ' from ' is null
nifi - 1746 : move rocksdbmetronome to nifi - controller - repository , deprecate rocksdbmetron
updated the method to retrieve the " IS _ GRANTABLE " value from the results object to enhance flexibility by allowing dynamic retrieval of the
updated URL validation logic in JavascriptContext . java and added a logging statement to enhance debugging capabilities and improve code clarity
camel - cxf : disable headless test on macos
hbase - 16405 loadtesttool do n ' t modify column if it ' s already create
added the implementation of the Disposable interface to the Texture class to enable disposable functionality in the Texture class
added null checks for ` tldBundleLocation ` and updated references to ` WebappRegistrationHelper ` and ` WebBundleDeployerHelper ` to
check goquorum compatibility config only on mainnet ( # 1193 )
replace IOException with Throwable for error handling in HttpInput . java to improve error handling by ensuring all errors are suppressed
added a condition to exclude " JP " from the country check in LocaleTest . java to ensure that the code correctly handles cases where the
updated API operation references from ` Wrapper ` to ` HostResponseWrapper ` and ` ViewPrivilegeResponseWrapper ` to improve clarity and consistency in
added boost comparison and modified hash code calculation in FilteredQuery . java to improve query performance by accounting for boost values
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 1353 add symbol table to the text editor ( for debug )
added a new Java file ` TestCMSClassUnloadingDisabledHWM . java ` and modified ` AllocateBeyondMetaspaceSize ` to
fix npe in spongeforgeeventfactory when entity be empty
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` and related classes to ` ColumnMapItemPreparedStatementSetter ` and ` ItemPreparedStatementSetter ` ,
fix compactionstest to use identityqueryfilter
added null check for the ' type ' attribute in MiniAapt . java and created a corresponding test case in MiniAaptTest . java
added support for the SPEL operator in the OperatorEnum and created a new SpELJudge class to enhance the functionality of the operator
[ hotfix ] [ table - planner ] fix checkstyle violation in localexecutionplanner
bugfix # 20632 , use java . awt . eventqueue instead of javax . swing
updated multiple Java files related to Conscrypt to improve code organization and enhance readability
updated variable declarations for start _ offset and length from ` 0l ` to ` 0L ` in ` ShadowArscAssetManager9 .
updated fullOptions to include " - source " and " - target " with value " 6 " instead of " - source " and " -
changed access modifier of ` extractMetadataColumns ` method from private to public in ` DynamicSourceUtils . java ` and introduced ` MetadataOnlyProjection
updated AboutActivity to use sorted localized names from the application ' s language look - up table to improve the organization of localized names for better
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added conditional logic to set the " should _ refresh " preference based on the live streaming setting to ensure that the " should _ refresh " preference
added exception handling to the MappingException in AuditConfiguration . java to improve error reporting by including the exception cause
( chore ) camel - core : fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in ` CompositeType ` , ` DynamicCompositeType ` , and ` CompositeTypeTest ` to use ` AbstractType <
added a new method ` supportsTransport ` to ` GitClientApplication ` and modified ` RepositoryUrlPanel ` to check transport support to enhance transport
updated the getDelegatorName method implementations in multiple input consumer classes to provide a clearer and more descriptive description of the input consumer classes
updated version management logic in ChangeParentPom . java to handle null MavenMetadata and allow version downgrades to improve robustness by preventing
added a check for the " Disabled " condition in the TestLargePageUseForHeap . java file and updated log statements accordingly to ensure proper
cloudstack - 7803 : fixed event migration when usage db do n ' t exist ( cloud _ usage db do n ' t exist
updated the ` getTestParameters ` method to throw an ` IOException ` and modified the path handling for ` sampleConfDir ` to ensure compatibility with
added a new test class ` TestObjectStreamClass ` for serialization and deserialization of ` ObjectStreamClass ` to facilitate testing of
updated condition checks in ZoneAwareDiscoveryFilter . java to return true when data center information is null to improve clarity and correctness of the
changed log level from error to warn in OpenTracingTracer . java to provide more detailed logging for tracing data capture failures
added a toString ( ) method to the Generator class to provide a readable string representation of the generator ' s registered state
refactor URI handling in ` mmm URI . java ` and add new test cases in ` mmm Test . java ` to improve code
added a null and empty check for resources in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to ensure
updated response validation logic to handle null responses and improved logging messages to enhance error handling and provide clearer feedback during API response extraction
removed conditional logic for initializing ByteBuffer in VertexBufferObject based on Android version to ensure compatibility with newer Android versions and improve performance
refactor SybaseASADatabase class for improved readability to enhance maintainability and facilitate future updates
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated related methods accordingly to enhance flexibility in projection handling during
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` StringDistance ` object for
added FLAG _ MUTABLE and FLAG _ IMMUTABLE constants and modified PendingIntent creation logic to support immutability of PendingIntent
added methods to append read column IDs in HiveFileFormatUtils and updated HiveInputFormat to use this new method to improve code clarity and
replace ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java `
added multiple ` DisplayTemporaryToast ( ) ` calls in ` SavedExperiments . java ` to display temporary toasts to improve
added version resolution logic in ` ServiceModule ` and a corresponding test in ` ServiceModuleTest ` to ensure that the service version is correctly set
added a new test class RawSerializationTest for Gson serialization to ensure correct handling of various collections and parameterized objects during JSON serialization
simonstewart : rename seleniumserver to sslcertificategenerator so that it can be use for test
modified the loop to iterate over replies using an index - based iteration instead of an enhanced for - each loop to improve performance by avoiding unnecessary
increased the timeout duration for the ResourceAccessException assertion from 3 seconds to 60 seconds to allow more time for resource access exceptions to complete
added a new test method ` testNGramFilterPayload ` to the ` TestNGramFilters ` class to validate the functionality of the N
refactor AclImpl to improve code structure to enhance maintainability and readability of the code
added tests to verify randomness of arrays of different sizes in EasyRandom to ensure correctness of randomness of arrays in the EasyRandom class
cloudstack - 6892 : catch and log exception when vm be in stopped state
added a ThreadLocal variable ` __ tryWriteAgain ` and modified the handling of ` _ runCompleteWrite ` to manage the ` tryWrite
reformatted code for consistency and added a method to check if an actor ' s parent visibility is visible to improve code readability and provide a
added logging for failed rolling update step in RollingUpdateOpFactory to improve error reporting for deployment failures
[ hotfix ] [ table ] fix the javadoc of sinkprovider # of ( )
added error handling for BadCredentialsException in DaoAuthenticationProvider and created AuthenticationFailureUsernameNotFoundEvent class to improve user authentication failure reporting and provide
updated AtMostXVerificationTest . java file to improve test coverage for verification scenarios
updated default QTYPE from " lucene " to " LuceneQParserPlugin . NAME " and added new command - line arguments for L
updated SimpleDateFormat instances to include Locale . US to ensure consistent date formatting across different locales
added a new method ` isInitialized ( ) ` to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a
updated the parameter name from ' idToken ' to ' shouldHaveIdToken ' in the test _ fetch _ token _ from _ authorization _
added transaction management methods in DatabaseAdapter and modified transaction handling in GncXmlHandler to enhance transaction management and improve error handling during bulk operations
replace byte array handling with ByteArrayOutputStream for reading input data to improve performance and simplify data processing
refactor exception handling logic in MessagingTemplate . java to improve clarity and structure to enhance code readability and maintainability by reducing red
added an override for the isAcceptable method in AutoFormatVisitor to check if the source file is an instance of CompilationUnit to ensure proper
set maximum buffered documents and RAM buffer sizes in TestIndexWriterMergePolicy . java to improve performance by limiting buffer size for better resource management
added a method to update witnesss and implemented a test for updating witnesss in ManagerTest . java to ensure witness data is correctly updated and
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by gracefully handling cases where no elements are available
flumeshell : remove log level parameter from flumenode . logversion ( ) and flumemaster . logenvironment ( ) .
updated authentication assertions in BasicAuthIntegrationTest and refactored StreamRunner in DaemonStream to improve test coverage and enhance thread management in DaemonStream
changed the implementation of the ` nodes ` variable from ` HashMap ` to ` LinkedHashMap ` to maintain insertion order and maintain insertion order
add an errormapper to jerseysupport to allow jersey to handle internal error
refactor header validation logic to use a dedicated validation method to improve code readability and maintainability by centralizing header validation logic
added a switch - case structure to handle specific system property keys in System . java to improve clarity and maintainability of system property management
changed method parameters from String to CharSequence in StringSubject . java and added new test cases in StringTest . java to enhance flexibility in handling
add miss intrinsics to checkgraalintrinsics test
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory to use a different DataSource instance based on the ` forCompactor ` condition to ensure that the correct data source is used
refactor DeploymentOptions class to improve deployment configuration handling to enhance code maintainability and readability
updated the method signature of ` updateTextButtonWithDrawable ` to accept a ` Drawable ` instead of ` Drawable . ConstantState ` and adjusted
refactor InputStream handling in XmlParser and YamlParser to use StringReader instead of InputStreamReader to improve code readability and performance by using a more efficient
added support for the COALESCE function in RexNodeConverter and registered it in SqlFunctionConverter to enhance the functionality of coalesce
camel - 14263 : camel - hl7 - migrate camel - core to v3.0 . 3 , fix camel - core -
updated class loader management in JavassistProxyFactoryFactory to ensure proper context class loader is used during proxy factory generation
modified the DefaultDateTypeAdapter constructor to include the ' final ' keyword and changed the serialize and deserialize methods to be synchronized to enhance thread safety
refactor method signatures in DocumentUtil . java for improved readability to enhance code clarity and maintainability
refactor HttpClientRequestBase to simplify URI handling and query management to improve code readability and maintainability
added filtering logic for old entries in FeedRefreshUpdater . java to ensure that only valid feed entries are processed to improve data integrity by avoiding
hbase - 26978 log warn on fail to close wal file on failure ( chunhui )
refactor the ` getValues ` method in ` NodeMap ` to implement a new ` NodeMapIterable ` class to improve code readability and
updated import statements and variable names for clarity in DiscoveryClientRouteDefinitionLocator . java to improve code readability and maintain consistency in naming con
added a null check for fields before adding operations in MongoRecordReader . java and modified return logic in RexToMongoTranslator . java to
add ' admin ' to the admin list if it do n ' t already exist
replaced usage of MultiFields with SolrIndexSearcher in IGainTermsQParserPlugin , SignificantTermsQParserPlugin , TextLog
modify the return statement in ConstantBeanHolder to include the bean ' s name and hash code to improve clarity of the returned string representation of
removed unnecessary line number check and simplified return statement in GroovyParserVisitor . java to streamline code logic and improve readability
remove uninterruptible hashcode ( ) method from frameinfoqueryresult and javalangsubstitutions
test : increase timeout for seda block when full
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to
updated the calculation of read length in MessageUnpacker . java to ensure proper handling of buffer size during reading operations
updated import statement for Nullable from micrometer . common to micrometer . core in HttpClientTimingInstrumentationVerificationTests . java
added a condition to filter the database column with the user ' s serial number to ensure that the database only contains the user ' s serial number
use getbackpressureforasyncsendsize instead of getbackpressureforasyncsendnum
do n ' t add whitelisted resource for classfiles only
fix baremetal foreign key issue during upgrade from 4.0 . 1 to 4.2 . 2
removed the IJava2DRenderer interface and its implementation from the Java2DRenderer class to simplify the codebase by eliminating unnecessary interface
added onTearDown method to DefaultAudioSink to invoke onOffloadBufferEmptying when the audio track is stopped to ensure proper handling
added a scheduled thread pool executor for upstream tasks in the UpstreamCacheManager to improve the efficiency of upstream tasks by allowing scheduled tasks to be executed
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated assertion message in Recording . java to include an additional context to improve clarity of the assertion failure for better debugging
updated FilestorePage and RootPage to include admin role checks and improved message formatting to enhance security by ensuring only users can view fil
( chore ) camel - elasticsearch - rest : ignore failing test
refactor the accept method to check for the declaring class before comparing it to the superclass to improve code readability and prevent potential null pointer exceptions
updated button text resources from " leftButtonAltcoin " , " rightButtonAltcoin " , and " rightButtonFiat
camel - 16400 : camel - restlet should return 404 instead of 500 when route do n ' t match on uri prefix
add miss ` @ nullable ` annotation to ` createnextblock ( address , address , coinbasevalue ) ` method
removed Serializable interface from BTreeMapJava and updated test cases in ConcurrentSkipListMapTest and JSR166Test to improve serialization handling and
added null check for exception cause before logging error messages in RuleEngineImpl . java to improve error logging clarity by avoiding null pointer exceptions
reordered conditional statements in Main . java for clarity to improve code readability and maintainability
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter .
deleted the PlainVerifier . java file and updated imports in DefaultJwtSigningAndValidationService . java to remove unused code to streamline the codebase
added a condition to close system windows when the tab is triggered from an alternative tab to ensure proper handling of recents when the tab is triggered
refactor dialog handling in DialogFragmentIT to utilize BottomSheetDialog and OCFileListBottomSheetDialog to improve dialog management and ensure proper
updated charset parsing to use UTF - 8 encoding in RestAdapter . java to ensure proper handling of character encoding when parsing content types
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper initialization of the TextField component
replaced manual serialization code with utility methods from TestUtilities to streamline serialization process and improve code readability
updated method names from ` previousClause ` to ` previousUntilLastClause ` and modified ` PreviousFill ` initialization in ` GroupByFillDataSet
updated the handling of negative array sizes and added argument reading logic in JAXWSExceptionBase . java to improve error handling for negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 4552 )
increased the timeout duration from 10 seconds to 60 seconds to allow more time for tasks to complete before proceeding
[ hotfix ] [ test ] use pipelinedregion scheduling strategy by default
added title handling methods and updated implementation annotations in ShadowActivity , ShadowAlertDialog , ShadowDialog , and ShadowToast to improve title management and
replaced Apache Commons Logging with Apache POILogger for logging in POIFSFileSystem to improve logging functionality and maintain consistency with Apache PO
refactor alarm handling logic in InstarHandler . java to use alarmCode and objectCode for better clarity to improve code readability and
add remove latency to localmapstats when map . delete ( ) be call
refactor status handling in Option and Response classes to use a switch statement to improve code readability and maintainability by using a switch statement
updated CheckResourceKeys to use a dynamic JavaFileManager location for javac to improve flexibility in locating Java files for better resource management
add project name to create a flutter project for stable channel support ( # 5373 )
added a new test class ` DeprecatedStubbingTest ` for testing stubbing behavior in Mockito to ensure proper functionality and behavior of stubbing
updated import statements in ITBraveServletFilter . java to use javax . servlet . DispatcherType instead of javax . jetty . server
fix a bug report by lgtm . com when there be an extra np tag in the tree .
add a system property to disable rsa key exchange by default
updated variable names from ' output _ reader ' to ' reader ' in multiple Java files to improve code readability and ensure proper resource management
delete the access token when the service be remove
replaced ` AGGRESSIVE _ EASE ` with ` EMPHASIZED ` in ` TaskbarEduView .
added handling for UpdateRegionLocationPlan in ConfigPhysicalPlan and improved logging messages in ProcedureManager and RegionMigrateProcedure to enhance logging clarity
added a new file ` FileDialogLeakTest . java ` to test the garbage collection of ` FileDialog ` to ensure that the `
hbase - 2590 move testopentableincoprocessor from org . apache . hadoop to org . apache . hadoop . h
trufflefeature : do not allow uninterruptible @ uninterruptible annotation .
[ hotfix ] [ table - common ] remove unused split method in pbcodegenrowdeserializer and pbcodegenrowserializer
update condition from checking if the dimension ' s disi is null to checking if it is not null to ensure correct handling of non - null
fix fakemediasource to always refresh the manifest when there be no read stream .
added JVM version checks in Constants . java and updated helper logic in Helper . java to ensure compatibility with Java 9 and above
updated FileReporter initialization to explicitly cast null to String and File types to improve type safety and clarity in test cases
changed the condition from checking for end - to - end encryption keys to checking if the end - to - end encryption keys exist to ensure that
added home button functionality to the action bar in DirectMessageConversation to enhance user experience by allowing users to navigate to the home screen
added GET _ USER functionality to RpcServlet and updated protocol version from 5 to 6 to support user retrieval and improve error handling for anonymous users
added a conditional check for the " os . arch " system property in TestJdbcPluginWithMSSQL . java to ensure compatibility with supported
replaced direct usage of ` startClass ` with ` originalStartClass ` in the ` notFound ` method call to improve code clarity by
updated exception message and added local handling for parameter register numbers in DexBody . java to improve clarity of error messages and enhance local registration
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
mac v nurse rostering : fix the swing lookandfeel to ` ` metal ' ' on all example to avoid mac ' s native laf which be untested and incorrect
updated regex pattern for version string in AppPage . java to ensure correct formatting of version string in versioning
refactor animation listener registration in LauncherAppTransitionManagerImpl . java to improve code readability and maintainability by using local variables for alpha
dumpedprivatekey : fix typo in error message
fix wrong field name for newofferpayload in editofferpayload
modified the initialization of milestoneParameters to use conditional creation based on whether the milestone is open or not to improve clarity and functionality by distinguishing
pipeitemswood : increase battery size to avoid oom
added a new method ` getClusterKey ` and modified the ` getStateMachineClusterInstance ` to include additional parameters for cluster name and revision to enhance
set ` downgradeAllowed ` to true in ` UpgradePack ` and add a new test case in ` UpgradePackTest ` to allow down
updated XML scanning methods to use NameType . ATTRIBUTENAME instead of NameType . ATTRIBUTE to improve clarity and consistency in handling XML
add configuration option to emulate system load library .
replaced direct usage of ` LauncherModel . APP _ NAME _ COMPARATOR ` with a getter method ` LauncherModel . getAppName
replaced ` closeEntry ( ) ` calls with ` putNextEntry ( ) ` and ` closeEntry ( ) ` in ` DefaultPlatform
updated the ` doTest ` method signature and assertion message format in ` TestSecretKeyCredentialHandler . java ` to improve clarity of method parameters
camel - 17836 : camel - route - builderfinder now use springcamelcontext instead of springapplicationcontextaware to avoid reflection
[ hotfix ] [ doc ] fix typo in metricoptions description
hbase - 16400 testfulllogsconconstruction . testfulllogreconstruction fail on slow ci server ( hudson
added a private boolean field ` reuseAddress ` and updated constructor and methods in ` DatagramSocketOptions ` to enable the reuse of socket options
fix ` ` server shut down ' ' message to be more descriptive
danielwagnerhall : remove deprecate locatable interface
updated error messages in VersionInfo . java for clarity to improve user understanding of schema field requirements
rename equalityPredicateColumns to predicateColumns for clarity to improve code readability and maintainability by using more descriptive variable names
refactor handshake handling in HandshakeHandler . java for consistency to improve code readability and maintainability
updated formatting of closing braces in Navigator . java to improve code readability and maintain consistency
changed access modifier of constants from private to package - private in RecordReaderFactory . java and added a new test class RecordReaderFactoryTest .
added support for " greater _ than _ equal " and " less _ than _ equal " queries in MongoQueryCreator to enhance query functionality for
refactor group by expression handling in CalciteSqlParser . java to improve code readability and maintainability to enhance maintainability by reducing
refactor MappedByteBuffer and FileChannelLinesSpliterator to manage buffer reference counting and unmapping to improve resource management and prevent potential memory leaks
replaced direct calls to ` l . getValidator ( ) ` with a local variable ` validator ` for better readability to improve code maintainability
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and updated the ` testCircuitBreaker ` method to use it to improve
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags to simplify intent configuration by eliminating unnecessary flags
updated the property name from " webui . submit . ajax " to " webui . submit . upload . progressbar " in SubmissionController
updated the display name of the test from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to improve test
made the ` addExportedCount ` and ` getExportedCount ` methods synchronized to ensure thread safety when accessing shared resources
updated import statement from ` IntRangeUtil1 . requireNonNegative ` to ` IntRangeUtil . requireNonNegative ` to ensure consistency in
updated HttpParser to handle encoded HTTP headers and improved error messaging for illegal characters to enhance robustness of HTTP header parsing and ensure correct handling
updated the layout resource used in ConfigurePagerActivity from trends _ activity to configuration _ activity to align the activity with the new configuration layout
updated log message format in SLWTTextListing . java to improve clarity on the position of the SLWT found in the
refactor ForceLeaderTest and HttpPartitionTest to handle tlog replicas more efficiently to improve test reliability by allowing more time for leader
refactor Thread class to improve code readability to enhance maintainability and ease of future updates
added new template file suffix constants and a ` forceTemplateMode ` flag in ` AbstractConfigurableTemplateResolver ` to enhance template processing flexibility and
camel - 16400 : camel - cxf - do n ' t set the namespace attribute when use the cxf namespace .
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated output formatting in ToChar . java and added test cases in TestFunctions . java to improve readability and ensure correct behavior of the SQL
added validation for transaction lists and write IDs in GenericUDTFGetSplits . java to ensure compatibility with the latest Hive configuration settings
replaced empty list initialization with Collections . emptyList ( ) for column names and columns to improve code readability and eliminate unnecessary object creation
bugfix : do n ' t crash if there be no data to load
updated the ` SSTDeserializer ` class to include a check for ` ContinueRecord . sid ` in the ` manufactureStrings ` method
added a default grid column constant and modified grid column retrieval logic in AppPreferencesImpl and ExtendedListFragment to improve code maintainability and ensure consistent
updated the return message in Platform . java and ComparisonFailureWithFieldsTest . java to indicate line - break character mismatches to improve clarity
added a boolean field ` waitingForKeys ` and updated related logic in ` DecoderInputBuffer ` , ` ClippingMediaPeriod ` ,
updated API API paths in OkexV3 . java to align with the latest API specifications
reordered conditional checks for x1 and y2 in LineUtilitiesTests . java to improve code readability and maintainability
added error logging for varargs and old array syntax in JavacParser and created new classes VarargsAndOldArraySyntax and T656
log warn if ` defaultdrmsessionmanager ` be use on wrong thread
added support for parsing METHOD and MEMBER types in VariableContext . java and corresponding tests in TestVariableContext . java to enhance the parsing functionality
added tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure proper error handling for invalid JSON inputs in the
refactor buffer limit setting in Piece . java and SharingPeer . java to improve readability and maintainability of the code
added HttpClientProperties to manage HTTP response timeouts in NettyRoutingFilter and GatewayAutoConfiguration to allow configurable timeout behavior for HTTP responses
updated ` CxxLibraryFactory ` and ` NativeLinkTargetGroup ` to use ` NativeLinkTarget ` instead of ` NativeLinkTargetGroup
camel - 16400 : added unit test base on user forum issue
added support for handling RexFieldAccess in ASTConverter and updated RexNodeConverter to utilize it to improve the handling of field access
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
add proxy . noproxy ( ) to prevent proxy . noproxy ( )
updated certificate handling logic in PKCS12KeyStore . java and renamed constants in StoreSecretKeyTest . java to enhance certificate management and improve clarity in
added reflection access checks and updated related method names in Bootstrap and ReflectionCheckLinker classes to enhance security by ensuring proper access control for reflection classes
removed the ` public ` access modifier from the constructor of the ` CollisionMap ` class to allow instantiation of the ` CollisionMap `
add deprecate annotation , null check and comment to getrawinputfromtransactioninput
refactor logging level checks from if - else statements to switch - case structure to improve code readability and maintainability by using a switch statement
cloudstack - 7803 : remove unused parameter ' region _ id ' from db
added support for handling EncryptedDocumentException in OldExcelExtractor to improve error handling for unsupported file encryption scenarios
add -- add - exports = com . oracle . svm . nativeimage . builder / com . oracle . svm . core . j
removed unnecessary whitespace in the visibility setting of the image holder to improve code readability and maintain consistency
increased the number of attempts in the scheduler from 10 to 50 and adjusted sleep duration from 10 to 1 to improve test reliability by
modified file handling in ShadowContext to create a named directory if type is null and updated directory deletion logic in ContextTest to enhance flexibility in
refactor exception factory initialization to use Class . forName for better readability to improve code maintainability and reduce boilerplate in exception handling
increased WAIT _ TIME _ MS from 10 , 000 ms to 60 , 000 ms to allow more time for operations to complete
updated import statements and added AUD extension handling in ConnectOAuth2RequestFactory , ConnectRequestParameters , and ConnectTokenEnhancer classes to
remove default value of ' breakOnFirstError ' from KafkaConfiguration to simplify configuration by removing unnecessary default value
added a new constant selectableItemBackground with a value of 0x10a13 to provide a customizable background color for selected items
consolidated multiple import statements into a single wildcard import and added a method to place stop orders to streamline import statements and implement a placeholder
updated event type assignment logic in TxnSetOperation . java to ensure correct event type assignment based on record presence
add ` ` resumablerandomaccessfilelistener ' ' for http client
updated class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
update HSSFDataFormat to manage format sizes and formats based on the current index code to ensure correct handling of format records in HSS
[ hotfix ] [ kafka ] deprecate unused method in flinkkafkaproducer
updated compression length check to use maxCompressedLength instead of a fixed value to ensure that the compression length does not exceed the maximum defined maximum
add a new class for the idempotent redis processor so it can be use by camel - spring - data
fix vanilla bug where vanilla do n ' t use metadata .
[ mng - 5641 ] do n ' t delegate to local repository in legacylocalrepositorymanager
added task manager initialization checks and improved logging in LocalInstanceManager , JobManager , and TaskManager classes to enhance error handling and provide clear
added command - line arguments for deploying artifacts in AbstractArtifactResolutionException . java to improve error handling by providing guidance on deploying artifacts
updated methods to use ` FileStorageUtils . getInternalTemporalPath ( ) ` instead of ` FileStorageUtils . getTemporalPath ( ) `
refactor FeedEntryStatusDAO to use a new method for querying FeedEntryStatus instances to improve code readability and maintainability by utilizing
added execution logic for Vert . x threads in ContextImpl and refactored test cases in BlockedThreadCheckerTest to improve thread management and
updated the ` instantiate ` and ` convert ` methods to include a ` formatterString ` parameter and added a null check for the output argument to
updated file reading logic in LoadContactsTask . java to handle different Android SDK versions to ensure compatibility with newer Android versions while maintaining compatibility
refactor ` setRemoteAddress ` and ` setRemoteHostname ` methods to use ` this ` keyword for clarity to improve code readability
added a null check for realClass in Robolectric . java to ensure that a valid shadow class is not annotated with @ Implements to
disable tlsmutualauthentication if tlsmutualauthenticationrequired be true
added a test to verify that requesting plain HTTP endpoint over HTTPS throws SSLException to ensure proper exception handling for SSL - related issues during HTTP requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance accessibility of consumer and producer in the application
updated the formatting of the code in PageChangeListener . java and modified frame rendering in FrameRenderer . java to improve code readability and maintainability
corrected a typo in the warning log message from " email " to " SMS " to improve clarity and accuracy of the warning message
# 164 - enh : add @ draftqueryoptimise to beandescriptor . findall ( )
added error handling for resource temporarily unavailable in MultipartBody . java to improve reliability and robustness of file transfer operations
fix checkstyle issue in generator / objects / zipfolder / zipfolder . java ( # 1358 )
refactor multiple Java classes including EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters to improve code organization and maintainability
fix attach file action not work directory ( # 5649 )
added LoadOptionsBuilder to manage schema info level and load options in AccessTest . java to improve configuration flexibility for schema crawling options
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
replace exception throwing with returning null in TestReader . java to simplify error handling by avoiding unnecessary exceptions
added methods to set properties using values from a prototype object to ensure consistency in object initialization from prototype values
replaced direct instantiation of ConnectionInfo with a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
[ hotfix ] fix checkstyle violation in datastreamjob
replaced the try - with - resources statement with a try - with - resources statement and added error handling for ErrnoException to improve resource management
camel - 3640 : camel - cxf should use classhelper . getrealclass ( ) to get the class name .
updated the logic in HTTP2ServerConnectionFactory to check for both " h2 - 14 " and " h2 - 14 " protocols to ensure
refactor method symbol handling in LambdaToMethod and add lambda detection in ClassFileVisitor to improve code clarity and maintainability while ensuring correct lambda
loosen the restriction on where the whnp appear to handle quotation mark and transition word such a so
increased the timeout duration in the copyURLToFile method from 5000 to 60000 to allow for more time for the file to be copied
added a method to set the slop parameter in the QueryParser class to ensure proper handling of phrase slop in query parsing
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow more time for long press events to
change default port for flume and hadoop sink from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink
add a method to schedule game preview , screenshot , loadgame , and createlastgame in parallel
updated visibility logic in EditShareFragment to include an option check for editing options to ensure proper handling of edit options when editing is not available
limit the progress value of the DepthController to a maximum of 1.1 f to ensure that the progress does not exceed the maximum of 1
remove packetreceived from clientsession , componentsession and session . packetreceived ( packet )
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for the service before accessing its metadata to prevent potential NullPointerExceptions when the service is null
add ` ` hidden ' ' property to pantheoncommand to hide account level permission
added a method to exclude the class " androidx . room . CoroutinesRoom $ Companion " from instrumentation to avoid unnecessary instrumentation
added logging functionality to the ` isSupported ` method in ` NegotiateAuthentication . java ` to improve error handling and ensure thread safety when checking
removed the ` setInitScript ` method from ` InitializingDataSourceFactoryBean ` to streamline the initialization process by eliminating unnecessary resource
camel - 14836 : camel - core - allow to configure thread name for the jms reply queue . thanks to jooby
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added methods to open and close mc blocks for tagged PDF documents to ensure proper handling of text tags in the PDF document
log4j2 - 1343 added test for pattern selector in flow
simonstewart : make it possible to run iehta test under selenium rc
renamed the ` thank ` method to ` MwThankPostResponse ` and added a new class ` MwThankPost
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` to implement it to enhance socket management capabilities in the application
updated revokingStore initialization and enabling / disabling logic in mmm Manager . java and ppp Manager . java to ensure proper
added new test cases for implicit joins in HQLTest . java to ensure correctness of query results for multiple queries involving implicit joins
replace line breaks in expected and actual strings with line separators to ensure consistency in line endings across different operating systems
refactor IndexWriter to use a collection for file references and update related methods to improve file management and ensure proper cleanup of resources
changed method modifiers from ` @ final ` to ` @ Final ` in ` BaseError . java ` to enforce the ` @ Final ` annotation
added validation for the consumption user resource percentage in ConsumeUserResourcePercentActuator . java to ensure the percentage value is within the range of 0
added a condition to check for the ` show _ old _ login ` resource before showing legacy login to ensure compatibility with legacy login display based on
rename the class ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to clarify the purpose of the benchmark test
updated response page navigation in EditTeamPage . java to ensure correct navigation to the UsersPage
updated debug logging message to include exception details to improve clarity of error messages for better debugging
refactor connection handling in ConnectionManager to ensure proper shutdown of server socket channel to improve resource management and avoid potential memory leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the Rocket class
added a method to create dynamic partition specifications in BaseSemanticAnalyzer . java to improve code readability and maintainability by encapsulating dynamic partition
make round _ half _ up _ factor and round _ half _ up _ factor configurable and add debug output
added ` visitDirectory ` method to ` JarDirectoryStep ` and updated ` DirectoryTraversal ` to include directory entries to enhance directory traversal functionality and
added a new file ` JWKSetEditor . java ` that extends ` PropertyEditorSupport ` to handle JWKSet text input to provide a custom
refactor ` finish ` methods in ` OrdsBlockTreeTermsWriter ` , ` BlockTreeTermsWriter ` , and ` VersionBlockTree
add truffleboundary for partial evaluation of klass in espressonode and toespressonode .
changed the default value of ` byIP ` from ` true ` to ` false ` in ` Fetcher . java ` to disable thread fetching
updated conditional check for queryTimeout in StatementUtil . java to ensure proper handling of query timeout values
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java and modified genPath
refactor methods in ReplicaPosition class for improved clarity to enhance maintainability and readability of the code
server : do n ' t run stats update task immediately if the initial delay be negative .
updated interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use a constant FINAL _ FRAME to improve code readability and
adjusted the height of the navbar ' s visible bounds based on the display density to improve the visual appearance of the navigation bar based
added a new module - info . java file for the org . eclipse . jetty . http3 . server module to define module dependencies
[ zeppelin - 1342 ] fix npe in jsontype when value be null
simplified the assignment of the ` ctx ` variable in ` ResourceResolverBean . java ` to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in checkpointconfig
updated the method signature of ` reportInnerClassReferences ` to use ` Element ` instead of ` TypeElement ` to improve type handling and support for
updated command string construction in TimestampCheck . java to include a space to ensure proper formatting of VM options for testing purposes
replaced the use of FluentIterable with Java Streams in ChromeTraceBuildListenerTest . java to improve code readability and performance by utilizing
[ 3.0 ] do n ' t register the dubbo service to registry ( # 9098 )
do n ' t close session if security otr be disable
added new properties for node label outline size , transparency , and color in PreviewProperty . java and modified renderProcessing method to accept additional parameters to
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated a boolean value from false to true in the Win32FontManager class to enable conditional behavior for font management
added null check before visiting a tree in TreeVisitor . java to prevent potential NullPointerException when the tree is not initialized
add error handling policy to jdtbatchcompiler when the jdtcompiler be not in classpath .
added content alignment point and text anchor properties with their respective getters and setters in LabelBlock . java to enhance label rendering flexibility by allowing custom
refactor Class and Parameter classes to improve code readability and maintainability
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
updated the type of the isLoopback variable from boolean to Boolean and added null checks for the networkInterface to improve robustness by avoiding
added Locale parameter to DateUtils and updated its usage in Rfc1123DateDeserializer and KrakenServerTimeJSONTest to ensure date parsing
fix flaky test : download file with extension . pdf
nifi - 1742 : add property to output no hit in json query
[ vmware ] fix decimal overflow in quota relate table ( # 5368 )
refactored switch cases in Election . java for improved readability to enhance code clarity and maintainability by using try - catch
remove uncheckrun ( ) call from readfilesp # onfirstnull ( )
refactor widget handling logic in PageChangeListener . java for improved readability and maintainability to enhance clarity and maintainability of the widget
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` HSSFWorkbook `
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session unregistration to improve error handling and
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated status message from " reachable = false " to " reachable " in HueLightHandler . java to clarify the status of the
add fmlclienthandler . isloading ( ) and fmlclienthandler . isloading ( ) . fix # 74303 ( #
add ` ` [ gray ] mil [ ] ' ' , ` ` [ gray ] mil [ ] ' ' , ` ` [
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code readability and
added parameterized tests for querying records with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure correct functionality
added tests for JSON serialization and deserialization of nested maps in MapTest . java to ensure correct handling of nested maps in JSON format
added offset checks for x2 and y2 in GeometryUtils . java to ensure coordinates do not fall below the offset
refactor FileDisplayActivity and ReceiveExternalFilesActivity to utilize SortingOrderDialogFragment for sorting order functionality to improve code readability and
improve error message if testplan can not be find
refactor method names in GeneratedEntityTranslator and JdbcManagerSupportImpl to use ` Lazy < DbmsType > ` and ` Lazy < Db
modified argumentIdent assignment logic to handle non - strict identifier types to ensure proper handling of invalid argument types and avoid potential null pointer exceptions
updated the default protocol setting in JettyHttpComponent9 . java to use the protocol from the configuration object instead of a hardcoded value to
set displayVolume to true in VolumeVO . java to enable display of volume information by default
modified the ` version ` method to accept a boolean parameter and updated its usage throughout the ` JavahTask ` class to enhance flexibility
refactor condition checks in ChangeLogParameters to improve clarity and functionality to enhance readability and ensure proper handling of global change logs
changed log level from warn to debug for missing transactions in JtaTransactionManager to reduce log verbosity and reduce log verbosity
hhh - 14827 skip setoperationtest test due to basicformatterimpl cause exception
removed duplicate calls to startHandshake ( ) and setSoTimeout ( ) for sslSocket to streamline socket timeout management and ensure socket timeout is
updated status bar height calculation in multiple fragments to account for popup state to ensure proper handling of status bar height based on popup state
updated the CHA option from false to true in EspressoOptions . java and made DefaultClassHierarchyOracle . java and NoOpClass
http : / / issues . apache . org / activemq / browse / amq - 263 - fix classloading issue in activ
refactored JodaTimeRangeRandomizersTest to use JodaTimeLocalDateRangeRandomizer and JodaTimeLocalDateTimeRangeRandom
updated resource URLs for Jakarta EE 9 , Jakarta EE 5 , and Jakarta EE 5
fix : allow readiness . isready ( ) to return true when node be not ready
fix regression introduce in http : / / code . google . com / p / mybatis / issues / detail ? id = 3
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to update RPC _ VERSION from 1 to
added a security manager check before checking package access in ObjectStreamClass and ObjectStreamField to ensure package access is only checked when a security manager
removed unused imports and modified methods in Utils . java and XLCDCommunicator . java to streamline code and improve readability by
refactor DefaultMetricsTagProvider to use a HashMap for tag creation instead of an ImmutableMap to improve code readability and maintainability by using a
fix checkstyle issue in net / selenium / clientdriverrunner / clientdriverrunner . java
changed the default setting of opt2 from Level . OFF to Level . ERROR to improve error handling by setting the default option to ERROR
changed instance variables to final in IconNormalizer . java and improved logging format in the log statement to enhance immutability and enhance code read
added a boolean flag ` firstCallPrepareDo ` and modified method invocation logic in ` PrepareInterceptor ` to allow configuration of the first call prepare
refactor workspace and overview mode logic in Launcher . java and update state handling in Workspace . java to improve code clarity and ensure correct
replaced ` asEagerSingleton ( ) ` with ` asProvider ( ) ` for ` Auth ` and ` AuthWithStoreFeature `
updated incomingAssociations method to include a boolean parameter for ignoring invisible associations to enhance flexibility in handling associations based on user preference
fix npe when delete private ip capacity of a pod
update the documentation for the async profiler in ProfileServlet . java to clarify the usage of the UI section on Linux 4.6 +
added a new class ` RequiredRefFieldModel ` and modified ` ModelResolver ` to correctly handle required properties to ensure that required fields are correctly
rename ` CasCoreConfigurationWatchConfiguration ` , ` CasCoreEnvironmentBootstrapConfiguration ` , and ` CasCoreStandaloneBootstrapConfiguration ` classes to
refactor FeatureFlags class for improved readability to enhance maintainability and ease of future updates
updated StringBuilder initialization and modified hueId handling in ConfigStore . java , and added a new test in CommonSetup . java to improve performance and
added image loading functionality for picture data in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper handling of image resources when picture data is
updated documentation for compaction behavior on full CRUD tables to clarify that compaction on insert - only tables will always run via queries regardless
added a null check for the storage path when checking if the waiting message is down to ensure that the activity does not proceed when the storage path
refactor resize threshold checks to use a dedicated method ` checkResize ( ) ` across multiple classes to improve code readability and maintainability by
refactor LDAPConnectionService to improve code structure to enhance maintainability and readability of the code
deprecate the @ xmlattribute ( required = true ) in favor of @ xmlattribute ( deprecate )
added debug logging statements to TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol to improve traceability of event handling and navigation
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated assertions in TestMultiSearcher to compare lengths of hits2 and hits3 instead of hits to ensure accuracy in testing the length of hits
added a new file ` LucenePackage . java ` that defines a class for accessing the Lucene package to provide a way to access the
corrected the calculation of sizeInBytes by subtracting the value of existing . sizeInBytes to ensure correct handling of size values in the RAM directory
updated calculations in StatsRulesProcFactory , GenericUDAFBloomFilter , GenericUDAFEvaluator , and BloomKFilter to use final
added a null check for the drawer toggle before invoking animation updates to prevent potential NullPointerException when the drawer toggle is not available
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method parameter to suppress the warning about the unused parameter in the method
added logic to determine whether to scan modules based on class loader overrides in Scanner . java to improve flexibility in scanning modules based on class loader
[ msbib ] fix export format for non - corporate field ( # 11937 )
refactor core recovery cancellation logic in CoreContainer . java for improved error handling and logging to enhance reliability and maintainability of core recovery
replaced direct calls to ` System . currentTimeMillis ( ) ` with a new method ` currentTimeMillis ( ) ` for time measurement to improve code read
simplified the condition for clicking the first element in the found list to improve code readability and maintainability by eliminating unnecessary
[ hotfix ] [ table - common ] fix typo in pgproperty description
added support for trust resolver , role hierarchy , and permission evaluator in SecurityExpressionRoot to enhance security configuration flexibility by allowing customization of the
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize is always at least primeSize to prevent
replaced direct usage of ` File ` with a new method ` getUsableSpace ` in multiple classes to improve code readability and maintainability
updated the ` combine ` method in ` DistinctSqlAggregation ` to combine multiple values instead of a delegate to enhance the functionality of the aggregation
added a test method to verify post - login activities on successful authentication in UserServiceTest to ensure that post - login activities are executed correctly for
extractorspanishstrippedverb now accept a path for the dictionary .
refactor CharArraySet to simplify code and improve type checking to enhance readability and maintainability of the code
updated error messages and refactored audio and video track type checks in muxerWrapper . java to improve clarity of error messages and enhance
replaced instances of ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule . java ` and updated related tests
updated character encoding from UTF - 8 to UTF - 8 and refactored string handling in StringDictionary to improve compatibility with UTF - 8 encoding
changed the case name from " Logical Analyzer " to " Logic Analyzer " and replaced multiple application icons with a single tile icon resource to
added instance variable ` instanceClassName ` and ` instanceClass ` to manage instantiation of ` Vector ` to optimize performance by avoiding unnecessary instantiation of
removed syncMetaLeader ( ) method from CMManager . java to streamline leader synchronization process
show ' no response ' instead of ' answer ' on contribution question
added TestLoggingExtension to DiagramRendererTest to enable logging functionality for better debugging
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 395 : add
added support for the VIOMI Internet electric water heater ( 60L ) in MiIoDevices . java to enable support for
refactor SSL session data retrieval to use a local variable to improve code readability and maintainability
added a new file CreateNewSpreadsheet . java to demonstrate the creation of new Excel sheets with comments to facilitate
replaced ` Duration ` with ` long ` for time - to - live ` in ` CacheProperties ` and updated related methods accordingly to improve
replaced ` CONTENT _ URI ` with ` CONTENT _ URI _ NO _ NOTIFICATION ` in ` LauncherBackupHelper ` , ` Launch
updated the test version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the latest
updated synchronization from lucidaFontName to this in SunFontManager . java to ensure thread safety when accessing shared resources
added a condition to check if the character is an ' < ' character in DocClassUtil . java to ensure proper handling of specific character cases
removed String . format from the return statement in Workspace . java to simplify the return statement for better readability
added a validation error message to display an error message if no validation errors are found to improve user experience by providing feedback when no errors are found
updated import statements and introduced a new method to configure web resources in the IntegrationTestContextLoader class to improve resource loading functionality and ensure proper context
updated scroll handling logic and improved null checks in multiple classes to enhance responsiveness and prevent potential null pointer exceptions
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated method signatures in ` StatsService ` and ` DefaultStatsService ` to use ` String `
updated expression replacement logic in CellContentConverter . java to include newline characters to ensure proper formatting of string literals in cell content processing
simonstewart : fix regex test that fail on window
mondrian : fix typo in mondrianproperties . java
added error handling and stack trace printing in ProcessTools . java and updated conditions in CustomLauncherTest . java and LocalManagementTest . java to
removed the testEmbeddedImage method from TumblrRipperTest . java to streamline the ripper functionality for embedded images
added a conditional check for symbol slots before converting storeType to ensure conversion only occurs when the symbol has a slot for the specified storeType
optimize chunk to init their output before open the datasource
replaced the import of ` IndexWriterConfig . OpenMode ` with ` IndexWriterConfig . PrintStream ` and added a ` toString ` method
tika - 1342 -- add support for dynamic service loader in tika - config . xml
added package - info checks and updated imports in DocLint . java and DocLintTester . java to improve error reporting for unexpected comments in
added a new constant IMPORT _ CMD and updated condition checks in DataImportHandler and DataImporter to support an additional import command in the import process
add a test to ensure that inner classes are not modified when ignore definitions are true to ensure that the change type functionality behaves correctly when ignoring
removed unused import of android . util . Log from JettyService . java to improve code cleanliness and reduce unnecessary dependencies
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and modified its logic to include it to enhance item
danielwagnerhall : add / quitquitquit to stop jetty server
fix an npe in sulong realtime segment ( # 11937 )
added a check to skip processing if Teredo is present on Windows to optimize performance by avoiding unnecessary processing for Teredo NIC
fix for http : / / issues . apache . org / activemq / browse / amq - 2638 - add contact dialog
replace bean definition registration with bean component registration for USER _ DETAILS _ SERVICE _ FACTORY to ensure proper registration of the USER _ DETAILS
modified the drawBitmap method to accept a null parameter instead of its position to simplify the drawing process by eliminating unnecessary positioning
fix ` ` ( dd ) ( ddmmyy ) ' ' to ` ` ( dd ) ( ddmmyy ) ' '
changed visibility of ` getFontPath ` methods in ` SunFontManager ` and ` X11FontManager ` classes from public to protected to allow
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should not be used in new code
[ hotfix ] [ test ] fix exception handling in clientmapstoretest
added a configuration option to keep empty sentences in document processing to improve performance by reducing unnecessary processing when empty sentences are present
updated the ` createArtifactSubdirectory ` method to return a boolean and added error handling for errors to improve error reporting and provide clearer error
replaced static final instance of ` systemProvider ` with instance variable ` javaCompilerService . NO _ MODULE _ COMPILER ` in `
added null check for resources in DirectAgentAttache . java to ensure proper handling of null answer values and avoid potential NullPointerExceptions
added exception handling to the sendEmail method in Emails . java to improve error handling and logging for email sending failures
added new api package - info . java and improved error handling in PipeItemsObsidian . java to enhance API documentation and ensure robust
updated DateFormatEvaluator and FileListEntityProcessor to accept a Locale parameter and modified test cases accordingly to enhance flexibility in parsing date maths based
added a boolean flag ` includeDecals ` and its getter / setter in ` StorageOptions ` , and implemented a ` JCheckBox ` in
updated the ` generateDocumentation ` method to include a ` null ` parameter and added a suppression annotation in the ` getImplementedDatabases ` method
refactor performance logging in HiveProtoLoggingHook and improve test assertions in TestHiveProtoLoggingHook to enhance logging accuracy and ensure accurate logging
updated warning messages in SolrIndexConfig . java and DocExpirationUpdateProcessorFactory . java to improve clarity and consistency in logging messages
update class file version check to use the current runtime feature to ensure compatibility with the latest version of the application
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP authentication to ensure proper functionality and validation of LDAP user attributes
replaced ` OrcInputFormat ` with ` BasicStatsNoJobTask ` in ` TaskCompiler . java ` to utilize ` Basic
fix an npe in saveallaction ( # 2296 )
refactor VisibleAdvance class to improve code readability to enhance maintainability and facilitate future updates
fix ( kubernetes - client ) : do n ' t reconnect when start node
added a condition to check for dynamic number columns in both EdgeDataTable . java and NodeDataTable . java to ensure compatibility with dynamic number columns in
added null checks using ` Objects . requireNonNull ` for ` groupId ` , ` artifactId ` , and ` getVersion ` in ` ResolvedGroupArtifactVersion
added null check for apiInfo before assignment to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes for improved header management to enhance code maintainability and readability
added lighting and disposal methods for textures and shaders in PhotoPanel and FlameRenderer classes to enhance texture management and improve
updated scene size from 460 to 520 in FxWindow . java and added context menu functionality in InsnListEditor . java to
added bounds checking for the next character in CSSParser . java to ensure proper handling of character lengths and avoid potential ArrayIndexOutOfBoundsException
added a check for the " isDecorated " property in UIServiceImpl . java to enable or disable the default look and feel decoration
removed unnecessary ' this ' keyword from method calls in HostRoleCommandDAO . java to improve code readability and maintain consistency in method references
updated test function names and their return values in LJ1200Message . java to improve clarity and consistency in naming conventions
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve readability and maintainability to enhance code clarity and maintainability
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to improve color management by using a more appropriate
refactor String class for improved readability to enhance maintainability and ease of future updates
added SLF4J logger imports and initialized Charset and UniqueTicketGenerator in multiple classes to improve logging capabilities and enhance code maintainability
added a new method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide a way to retrieve global entries from
added multiple assertions to the ` sendcoin ` method in ` MultiSign34 . java ` to ensure proper functionality of the ` sendcoin `
updated JUnit imports from ` org . junit . Test ` to ` org . junit . jupiter . api . Test `
updated classpath separator to use system ' s path separator to ensure compatibility across different operating systems by using the system ' s path separator
changed the access modifier of the ` augmentSuccessViewModelObjects ` method from static to instance to allow for instance - level access to the method
added assertions to verify presence of fields in the metamodel for ' id ' and ' name ' to ensure that ' id ' and ' name
removed the ` conf ` parameter from the ` Outlink ` constructor across multiple files to simplify the instantiation of ` Outlink ` by elimin
removed the ` LexicalContext ` parameter from ` ensureUniqueNamesIn ` , ` copyFinally ` , and ` equals ` methods across multiple
updated the return statement to include modifiers and removed unused imports in the UseLambdaForFunctionalInterface . java file to improve type expression handling and
removed the ` appendClassSelector ` argument from the ` createFileSet ` addition in ` TestNGAntTask . java ` to streamline the
removed unsupported log statement for root input type in HiveCardinalityPreservingJoinOptimization . java to streamline code by eliminating unnecessary
fix potential npe in registryevent . getmap ( ) due to miss mapping in registrymanager . active ( ) .
reordered variable assignments for x3 and y3 in Intersector . java to improve code readability and maintainability
added default methods for SBE decoding length , limit , and encoded length in MessageDecoderFlyweight to indicate that these methods are not implemented
add test for elasticsearch cluster health check
copy the message byte array before parse it in WorkingReceiver . java to ensure that the correct buffer is used for parsing peer messages
added version ID support and refactored cluster definition handling in ClusterDefinition . java and GSInstallerClusterProvider . java to improve clarity
camel - 14263 : camel - ftp - remove the setconfiguration method from the endpoint
[ zeppelin - 5271 ] load dependency should not fail when set dependency
8210435 : do n ' t add local variable spot if they be dce ' ed by the compiler
added basic certificate constraints check in ForwardBuilder and created a new class BuildEEBasicConstraints to ensure proper handling of basic constraints in certificate processing
added a method to initialize the database after the first connection in JdbcPostgresqlDAO to ensure data is preserved for PostgreSQL versions 9.5 and
updated WebSocket configuration to set a maximum message size and added a validation for input buffer size to ensure the WebSocket input buffer size does not exceed a
refactor the undeleteAll and rollbackUndeleteAll logic in SegmentReader . java and add corresponding tests in TestIndexReader . java to
added null check for scopes in ClientRegistration . java and updated corresponding test cases in ClientRegistrationTests . java to enhance robustness by preventing
added null checks for orderBy before adding it to expression and explanation to avoid potential NullPointerExceptions when orderBy is null
[ hotfix ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t allow vm to be clean up when delete snapshot
replaced direct call to ` LogUtils . initHiveLog4j ( ) ` with a temporary variable ` initLog4jMessage
added a check for non - empty tasks before accessing the first element in AssetManager . java to ensure that processing only occurs when there are tasks
do n ' t fail the pubsub deletion if the node can not be delete .
[ te ] fix npe when delete a relation by type ( # 1748 )
fix pretty clear bug on code 128 and 39 reader : reject empty barcodes a a false positive .
replaced TreeSet with LinkedHashSet for storing CipherSuites to maintain insertion order of cipher suites
added a method to check for control characters in Escaper . java and updated the expected string in InternationalizationTest . java to improve
updated SQL provider method handling to support CharSequence as a valid return type and changed return type to String to improve flexibility in SQL source creation and
updated import statements and modified logic for aliasChildren handling in InternalMNode . java to improve code clarity and prevent potential null pointer exceptions
added a new method ` getLayoutTransitionOffsetForPage ` in ` PagedView ` and modified the scroll delta calculation in ` Workspace ` to
renamed variable ` synthetic ` to ` pruned ` and modified the handling of ` synthetic ` and ` printedTemplate ` in ` JavaTemplate .
added a method . setAccessible ( true ) to the WidgetInterceptor class to ensure the method is accessible for better accessibility
added a conditional check to avoid setting the literal initializer for the " database . server . id " field to ensure that the literal initializer is only
updated the Mozilla version in AbstractRipper . java from Macintosh and Intel Mac OS X 10.7 to WindowsNT
added a web interface menu item to display the current server ' s URI to enhance user experience by providing a direct link to the web interface
refactor value assignment and creation logic in HandleGetter . java to use actualValue for better clarity to improve code readability and maintainability
added exception handling for record building in EncryptedSlideShow . java to improve robustness by handling potential ArrayIndexOutOfBoundsException
[ hotfix ] [ checkpointing ] fix log issue in mmappageiov1
added a call to ` loadBattlePassManager ( ) ` before calling ` loadBattlePassManager ( ) ` to avoid
updated Docker image version from 1.0 . 0 to 1.1 . 0 and added additional options for agent forwarding and TCP forwarding in the
added a large array and forced garbage collection in ThresholdTest . java to improve memory management and prevent potential memory leaks
updated logging conditions in StdErrLog . java and modified test assertions in StdErrLogTest . java to ensure correct logging behavior and improve test
fixed - rremoteservice . getremoteriveclient ( ) method do n ' t return remoteservice object . #
added methods ` isSelected ( ) ` and ` setSelected ( boolean value ) ` to the ` MultiButton ` class to enable handling of the "
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align with the new next
[ hotfix ] fix checkstyle violation in brokercontroller
refactor RedisReactiveHealthIndicator and its tests to use ReactiveRedisConnection for better resource management to improve connection handling and ensure proper cleanup of
replaced the method ` getBrandColor ( ) ` with ` getThemeColor ( resourceId ) ` and updated the background color setting in ` Program
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
updated type adapters in ToolingApiLauncher to use new instances of Default to enhance flexibility and maintainability of the type adapter registration process
updated the value of the variable ` 55 ` to ` 155 ` in the ` TestPayloadCheckQuery ` class to ensure accurate representation of
updated ConsoleReader to improve character handling and added a new test for reading lines with masking to enhance functionality and ensure correct behavior when masking
added user information to the exit status message in BaseCommand . java to enhance user feedback during command execution
move test class to graalvm . compiler . api . test to graalvm . compiler . api . test
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
added a condition to check if the system property ` one . util . streamex . emulateJava8 ` is disabled before using ` Java
updated texture files from " wheel . png " and " cloudconnected . ogg " to " sys . png " and modified music duration to
updated the registration and unregistration logic for the mCloseSystemDialogsReceiver to ensure proper resource management and prevent potential memory leaks
updated import statements in HostsRemovedEvent . java to ensure proper usage of Cluster class in the code
added support for allowing introspection in ClientDetailsEntity and updated related logic in ChainedTokenGranter and IntrospectionEndpoint to enhance client
replaced calls to ` write ( ) ` with ` writer . write ( htmlEncode ( ) ) ` and added a new method ` html
added link annotations for PhraseQuery , PhrasePrefixQuery , and SpanQuery in the query documentation to improve clarity and organization of query
updated size checks from ` size ( ) = = 0 ` to ` isEmpty ( ) ` for better readability to enhance code clarity and
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation methods to improve readability and maintainability of the code
changed method parameter types from generic type A to Object in multiple classes to improve type safety and flexibility in assertion methods
updated the package and import statements for ThrowingFunction and modified its method signature to include generics to improve type safety and clarity in handling exceptions
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods to use instance methods instead of static methods to improve code read
fix : fix initialization of final field in anonymous inner class ( # 1193 )
updated BitmapDrawable instantiation to use Robolectric ' s newInstance method to improve compatibility with Robolectric ' s Bitmap handling
renamed the methods ` isValidSEnding ` and ` isValidEnEnding ` to ` isValidEnEnding ` in ` DutchStemmer
updated PageMarkerResources drawable from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current page
added a volatile counter for reinvocations and updated logging messages to include the number of reinvocations to track the number of reinvocations
update the calculation of topPadding in DefaultLookAndFeel . java to use inner height instead of the current height to ensure accurate positioning
added a break statement in the Recognize class to ensure proper termination of a loop in the Recognize functionality
added preference management for home screen visibility and haptic feedback in multiple classes to enhance user experience by enabling haptic feedback during drag
refactor formula handling in ExcelBatchReader and add tests for text and numeric formulas in TestExcelFormat to improve code clarity and ensure
fixed bug 1188372 - immutablefield no long report an anonymous inner class .
added a user agent field to CommaFeedConfiguration and updated HttpGetter to use it to allow dynamic user agent configuration based on application settings
updated the ` @ XmlAttribute ` annotation to be required in ` AvroDataFormat . java ` to ensure that the ` @ XmlAttribute `
changed log level from info to debug for file not found logging to improve log granularity and reduce log verbosity
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to use OfflinePlayer ' s uniqueID method to ensure compatibility with the latest version of
camel - 16400 : camel - core - optimize routescollector to reduce stack frame in case of error .
added a vertexColor property and modified rendering logic in PShape3D . java to allow customization of color representation based on user preferences
updated SchemaDotFormatter and DiagramRendererOptionsTest to include primary key filtering and modified related methods to enhance functionality to support filtering of primary key
replaced the use of Shadow . extract with matrix . getValues in ShadowMotionEvent . java to streamline the code by eliminating unnecessary
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
refactor class definition handling in GroovyEngine . java to improve clarity and structure to enhance code readability and maintainability by eliminating
( chore ) camel - hawtio - hawtio - plugin : move plugin init and destroy from hawtio
removed redundant command print statement from NativeCodeGenerator . java to streamline output by eliminating redundancy
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve
added a new test method to validate expected causes in ThrowableAssert _ hasCause _ Test . java to ensure that the test correctly verifies expected causes
updated variable names for flattening and packing in AutomaticDependencies . java to improve clarity and maintainability of the code
rename ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to clarify the purpose of the scope
danielwagnerhall : fix marionette setting of firefox profile in firefoxdriver .
camel - 1550 : camel - core - add route . description property to allow to configure the route description .
refactor JavacTreeMaker to improve code structure to enhance maintainability and readability of the code
added a line to set the weight of the edge in the ImporterCSV class to enhance the functionality of the CSV importer by allowing dynamic weight
refactor cost calculation in QuotaManagerImpl to use a dedicated method for calculating tariff cost per month to improve code readability and maintain
updated SQL queries in DatabaseMetaData . java to include additional fields from pg _ attributedef and pg _ attributedef to improve data retrieval accuracy and
add a check to make sure binarized sentence be not build by parser
updated the ` toString ( ) ` method to include detailed information about the user object to improve debugging by providing more context about the object ' s
updated message body extraction logic to handle null values to improve error handling and provide clearer feedback when the message body is null
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory # fromexecutionvertex to # fromexecution
updated rostermanager . isgroupvisible ( ) and rosteraccess . cansubscribing ( ) to check for group visibility .
added a classpath reference in AbstractJRubyMojo . java and removed unnecessary @ Override annotation in CucumberMojo . java to
updated method handle assertions and added a new method ` userMethod ` in ` MethodHandlesTest ` to ensure correct type comparison and improve test coverage
added imports for StopFilterFactory , NamedSPILoader , and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , and LegacyHTML
updated width and height comparisons from greater than to greater than or equal to in URLImage . java to ensure correct handling of image dimensions by comparing
added a check to ensure the class name does not start with " META - INF / " and modified the logic for appending unique package names to
added background task handling for image downloads in ImageDownloadService . java to ensure images are only downloaded in edt mode for improved user experience
updated assertions and log messages in StackWalkerTest . java to account for version checks to ensure compatibility with the latest OpenJ9 features and improve
changed the visibility of the addViewportJob method from protected to public to allow external access to the method from other classes
simplified command - line argument syntax and removed unused partitions parameter to enhance code readability and maintainability
removed server restart settings and run checks in TestDatabase . java to improve server stability during tests
added null and empty checks in NodePathsConvertOperator and modified return logic in SchemaQueryMergeOperator to improve robustness by preventing potential NullPointerException
add a way to get the total harvesting time for a call info frame .
adjusted font dimensions for particle properties in ParticleEditor . java to improve visual consistency and readability of particle properties
added logic to handle the " keyserver _ port " configuration in UpgradeCatalog240 . java and updated related test cases in UpgradeCatalog240Test
added transparent color to the SvgViewerFactory class to enhance the visual appearance of the SvgViewer by setting the background to transparent
removed ` @ Config ( minSdk = M ) ` annotation from ` ShadowKeyguardManagerTest . java ` and ` ShadowKeyguardManager
refactor ` containsExactly ` method to accept variable - length arrays instead of individual elements to enhance flexibility in checking array containment
updated Bandwidth builder to include capacity and refillGreedy limits , and modified key handling in Bucket4jFilterFunctions to ensure proper
updated GermanAnalyzer , GermanStemmer , and WordlistLoader classes to enhance text processing capabilities for German words
updated the Generator class to accept a set of hooks and modified the transformation logic in multiple files to enhance functionality by allowing specific hooks to be evaluated
added error handling for NoClassDefFoundError by setting supported to Boolean . FALSE to improve robustness by preventing application crashes due to
updated ` TraceFilter ` and ` TraceWebFilter ` to utilize ` SpanAndScope ` for span management to improve span management and ensure
updated exception handling in AbstractUpdateCommandStep to provide a fallback message when the cause is null to improve robustness by avoiding potential null pointer
updated SolrServerException instantiation to include the base URL to improve error reporting by including the base URL in the thrown exception
updated landscape behavior in HSSFPrintSetup to differentiate between landscape and non - landscape mode to ensure correct display behavior based
modify return statement to handle null values gracefully to improve robustness by preventing potential NullPointerExceptions
added validation to check for invalid argument names in ArgDesc . java to ensure that invalid argument names do not cause runtime errors
added background location listener functionality to the AndroidLocationPlayServiceManager to enable dynamic location updates based on the current activity and listener class
updated the conditional check for primitiveType from ` primitiveType ! = GL10 . GL _ POINTS ` to ` primitiveType = =
trufflestring : fix equality check for zero length array .
added a method to set the command list in ComboBox to ensure the command list is correctly set based on the current state
nifi - 5792 : escape forward / back - sign and dollar sign filename in tls - toolkit
updated ZkCLI shell commands to include localhost configuration to ensure compatibility with the latest Zookeeper API changes
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` equals ( ) ` instead of
added a conditional check for remoteGrpcStatus before posting a severe message to ensure that the build failure message is only sent when the remote
refactor method signatures in XYItemRenderer and related classes for improved readability to enhance code maintainability and clarity
added a new entity ID to the tick ' s entity in the ForgeChunkManager class to ensure that the tick ' s entity is properly
added a method to convert various EGL error codes to hex string representations to improve error handling and provide clearer error messages for various EGL
add a method to get a list of supported locale for the feature registry . fix for http : / / issues . apache . org / activ
updated server URI handling in RFC2616BaseTest . java to use " http : / / myhost : 1234 " instead of the server
added a method to addToHelperList in Construction . java to enhance functionality by integrating helper list management
added a condition to skip the first element of the " [ " escape sequence in GlyphLayout . java to ensure proper handling of empty input cases
added security permissions and refactored context class loader management in Transport . java and TCPTransport . java to enhance security by ensuring proper context class
refactor file synchronization logic in ReceiveExternalFilesActivity to handle null folders gracefully to improve robustness by ensuring a valid folder path is used and
fix npe in testng when there be no service loader
removed a debug log statement in BarrowmanCalculator and modified the deltap calculation in TubeCalc to improve logging clarity and simplify the
updated column handling logic in TimelineControllerImpl . java to differentiate between node and edge tables to ensure correct column addition for nodes and edges
added registerextracomponents ( ) method to basebrokerstarter to allow subclassing of brokeradminapiapplication
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` and modified the ` explainPlan
peergroup : do n ' t select peer that do n ' t support yet .
add cycle detection in order to prevent infinite loop
updated the ` configNodeSimpleConsensusSnapshotTriggerThreshold ` getter and setter methods to use a ` Supplier < RatisConfig . R
updated multiple Java files to improve code structure and consistency to enhance maintainability and readability of the codebase
added a conditional check for the ManagedService annotation before unregistering and registering the JMXHelper to ensure proper registration and unregistration of ManagedService instances
tika - 1352 -- fix for tika - 1353 . add support for zip entry with non - unicode name .
added a new class TestSplitThruPhiDivMod with methods for testing division behavior to demonstrate problematic division behavior in a
added methods to lookup generic types and their superclasses in TemplateRegistry . java to improve the handling of generic types in the template registration process
reduced the size of the ByteArrayOutputStream from 512 to 1028 to optimize memory usage for improved performance
added additional locale entries for Chinese , Hindi , Korean , and Farsi symbols in PlayerSettingsScreen . java to
increased the size of the byte array in TransferCompletionHandler from a fixed count to a dynamic size of 8192 to optimize memory allocation for
rename windowfocuslistener to windowadapter so that it do n ' t interfere with the popup menu .
added a null check for the source node before throwing a SemanticException to improve error handling by providing a clearer error message when the source node
added scaling and extent calculation for the skeletal mesh in SkeletonRenderer . java to ensure proper rendering of skeletal materials based on
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to standardize the Solr home directory configuration for better test consistency
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in the application context
removed the ` getAccount ( ) ` method from ` UserListItem ` to simplify the code by eliminating unnecessary functionality
added unit tests for installing packages in ShadowPackageManagerTest . java and updated logic in ShadowApplicationPackageManager . java and ShadowPackageManager
refactor AvailableSettings class for improved clarity to enhance maintainability and readability of the code
added TransactionCapsule and ReceiptCapsule classes to the TransactionTrace class to enhance transaction management capabilities within the application
add ` ` shuffle member list ' ' property to client property to enable shuffle member list .
replaced Text with CrawlDatum in SegmentReader . java to utilize CrawlDatum data type for improved data handling
refactor JsonDeserializer class implementation to improve code readability and maintainability
updated ` CONFIG _ NAME ` and ` CONFIG _ DEFAULT _ PATH ` constants , modified ` fetchSize ` in ` QueryProcessExecutor ` to
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify that the
removed unused import of ExecutionContext from TaskletStep . java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure proper initialization of the title variable
added handling for empty response bodies in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that the response body is not null
deprecate ` embeddedserverinstance ` in favor of ` embeddedserverinstance `
added registermacevents ( ) method to jabrefframe and use it in macadapter .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity
modified the return statement to return the enum value when the type is an enum to ensure that the method returns the enum value when the type is
made the ` hideUnprivilegedObjects ` variable final in ` PgConnection . java ` to ensure immutability of the ` hide
fix test so that it do n ' t fail on slow machine
added a condition to save Giphy Android 11 video URLs if the Android version is Q to ensure compatibility with devices running Android Q and above
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 395 : add
refactor multiple classes related to ticket management to improve code organization and maintainability
replaced manual logger retrieval logic with ` computeIfAbsent ` to simplify code and improve readability
hbase - 17462 : remove unused class dataoutputoutputstream in hbaseobjectwritablefor96migration ( addendum )
updated Hive statistics configuration in TestAcidOnTez . java to disable auto - gathering to optimize performance by reducing the number of
changed log level from info to debug in MavenEnhancePlugin . java to provide more detailed logging for enhanced classes
replaced hardcoded provider name " AndroidOpenSSL " with a dynamic retrieval of " Conscrypt " to improve flexibility and maintainability
added Captor annotation processing for instances of Captor in MockitoBeforeTestNGMethod to ensure that Captor fields are not
added error handling for missing test cases in TestSuiteBuilder to provide clearer error messages when no test cases are found
refactor GroovyAutoComplete . java and GroovyLanguage . java to improve prefix computation logic and enhance import statements to enhance code readability and maintain
use graphhopperosm instead of deprecate graphhopper
[ java ] fix issue where http client fail to connect to a remote server .
changed mHideSysUiScrim from final to non - final and added functionality to control visibility of the system UI scrim based on
added cancellation logic to Call and OkHttpCall classes to ensure proper cancellation of calls before enqueuing
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve readability and maintainability to enhance code clarity and maintainability
updated the RequestMatcher interface to extend from the Spring Security framework ' s matcher to enhance compatibility with Spring Security ' s request matching capabilities
added a new abstract class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr ` to include ` IF `
update j2kt integration test to match new j2kt api
added unit tests for the ` applyQualifiers ` method in ` DeviceConfigTest ` and updated the ` setDimensions ` method in ` Device
replaced IOException with RuntimeException in ExternalViewReaderTest . java and modified timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource for the COLUMN _ ICON from a logo to a mipmap icon to enhance the visual appearance of the column
added errorBuilder . setContentText ( content ) to FileUploader . java to set the content of the error builder to improve error handling by providing
modified the implementation of ConcurrentHashMap to improve thread safety and performance
added methods to adapt user trades and trades from AbucoinsFill objects and updated related classes to utilize these methods to improve tra
removed unnecessary event check in PlotSquared . java and modified return statement in Claim . java to streamline plot removal logic and improve code clarity
simonstewart : fix the htmlunit driver to use the browser version of the ie driver
added handling for " varbinary " and " java . sql . Types . VARBINARY " in BlobType . java to ensure correct database data
refactor cookie version handling in SetCookieSupport . java to improve clarity and correctness of cookie versioning logic
synchronize the initialization of simple type map in libfficontext to avoid concurrent modification exception
updated InboundBuffer to use ContextInternal and VertxThread instead of Context to improve thread safety and ensure proper context validation
updated the ` killSwitch ` method to accept a timeout parameter and added a new ` deadServerNoTimeout ` method to improve timeout handling and
corrected the file name from " UniocdeData . txt " to " UnicodeData . txt " to ensure consistency in naming con
camel - 8274 fixed the unit test error of cxfmessageheadersrelaytest
refactor multiple UI components related to Synth to improve code organization and maintainability across the project
added handling for BoosterSet in ComponentAssemblySaver and changed return value in BoosterSet to false in BoosterSet to ensure proper
added support for proxy authentication in jabref ( # 1188 )
updated metrics key references from ` BLOCKCHAIN __ FORK _ COUNT ` to ` BLOCKCHAIN _ FORK _ COUNT ` and modified
replace InternalError throwing with returning false in Class . java to improve error handling by providing a default return value instead of throwing an exception
replaced MortBay logging with Apache Commons Logging for improved logging consistency to enhance code readability and maintainability by using a
simplified the request handling in NettyRoutingFilter by removing the chunked transfer encoding check to improve code readability and reduce unnecessary complexity
added clearAttributes ( ) method to PatternTokenizer . java to ensure attributes are cleared before processing new data
added polling period parameter and improved error handling in VerificationAfterDelayImpl and After classes to enhance the verification process by allowing customizable polling period
added compaction functionality to SessionState and updated related logic in SemanticAnalyzer and QueryCompactor to improve performance by controlling compaction status during query operations
[ zeppelin - 3641 ] add jar file to zeppelin . sh and zeppelin
hbase - 17474 fix typo in hbaseadmin . gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated ` calcXBounds ` methods in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` to include modulus
added error handling for XML reader parsing in a finally block to ensure proper resource management and prevent potential memory leaks
release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` and ` Java
added null and closed check for the result set before closing it to prevent potential NullPointerException and ensure proper resource management
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 to ensure compatibility with newer database versions
fixed bug 138372 - ustringbufferlength no longer throw an npe .
removed error logging from RemoteSparkJobMonitor to streamline error handling by eliminating unnecessary logging
modified the createDb ( ) method to return a connection object instead of void to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and corresponding test classes to improve code organization and maintainability
hbase - 17474 skip large compaction if max _ compaction _ size _ max _ size be set to off - peak
added JSON handling for BitstampDepositAddress and created a new DepositAddressJSONTest class to validate JSON unmarshalling and response validation
replace IllegalStateException with response . abort in BufferingResponseListener . java to improve error handling by providing a more informative exception when the buffer capacity
updated the method to use absolute path for linkPath in ProjectView . java to ensure proper handling of absolute paths for deleted directories
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` instead of ` Event ` and changed ` operationType ` to ` InvocationType ` to
added a loop to check if the network interface supports multicast before returning it to improve robustness by ensuring only valid network interfaces are processed
updated checksum validation logic in ChangeSet . java to iterate over all valid checksums to ensure consistency in checksum validation by using a loop
added a clone method to the BufferedChecksumIndexInput class to provide a placeholder implementation for cloning input
replaced the use of Math . sqrt with a simple less than or equal to radius in the return statement to improve accuracy in determining if the
added a conditional check before setting mFrequencyBand in P25Channel . java and overridden methods in P25ExplicitChannel . java to ensure frequency
rename ` tapSquare ` and ` tapSquareCenterX ` and ` tapSquareCenterY ` variables to ` tapRectangleWidth ` and `
set default reuse _ on _ write to false by default
added a new query parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` class and implemented date formatting in the ` Util `
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests to enhance the functionality of `
refactor error handling in FileActivity and add synchronization broadcast receiver in FileDisplayActivity to improve clarity and functionality of file synchronization handling in the
added method ` quiche _ conn _ stream _ writable ` in ` ForeignIncubatorQuicheConnection ` and ` Jna
added a boolean parameter to the method call in JavascriptContext . java to enhance flexibility in handling JavaScript execution
replaced instances of ` Align . left , 1 ` with ` " " ` in multiple instances of ` TableCell ` to simplify the code
added a new class ` TracingAutoConfiguration ` to facilitate tracing configuration in the UAA module to enable better monitoring and monitoring of
updated the way the first paragraph is displayed in Submissions . java to improve code readability and maintainability by using a dedicated variable
updated the ` getPrunedQueryableSegments ` method to accept a list of ` list < IndexSegment > ` and modified related logic to
refactor VertxBufferTest class for improved readability to enhance maintainability and facilitate future updates
refactor message submission logic in MessageSubmissionChunk . java and add unit tests in TestMessageSubmissionChunk . java to improve readability and ensure
changed the visibility of ` mContext ` from private to protected in ` PredictionAppTracker . java ` to allow subclasses to access the `
removed unnecessary imports of SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation to improve code clarity and reduce unnecessary dependencies
add a new ` MongoDataIntegrityViolationException ` class and update ` MongoTemplate ` to throw this new exception to provide more specific exception handling for data integrity violations in MongoDB operations
[ hotfix ] fix checkstyle violation in jobcoordinationservice
replaced the ` bitsToHumanReadable ` method with ` bytesToHumanReadable ` and introduced a new ` mimeType2HUUman
replaced the use of ` newMergePolicy ` with ` newTieredMergePolicy ` in ` TestUpgradeIndexMergePolicy ` and added
added a conditional check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
update error message for CPU binaries in CpuNDArrayFactory . java to improve clarity on CPU instructions and hardware extensions support
updated the ` loadSettingModels ` method to accept an ` InputStream ` parameter and modified the contextInitialized method to accept an additional ` InputStream `
added null checks for incoming fields , terms , DocsAndPositionsEnum , and LeafReader in FilterLeafReader . java to ensure robustness
fix default key size for non - negative oid .
updated exception handling in NetSocketReader and SoftEndOfStreamException to provide a more descriptive error message to improve error reporting by providing clearer
removed unnecessary @ Inject annotations from multiple Java classes to streamline dependency injection by eliminating unnecessary dependencies
updated assertions in ` BundledDistributionTest . java ` and added new assertions in ` PostgreSQLTest . java ` to enhance test coverage for database
[ hotfix ] [ stream ] allow user to specify the job name for the pipeline
modify scale calculation in OverviewState . java to account for two - panel layouts to ensure correct scaling behavior based on device profile ' s layout
change ice plain biome to be swarmer ( # 3995 )
removed unnecessary zone parameter from getMinTime and getMaxTime methods in DataUpdateManager and StorageUtils to simplify method signatures and improve code readability
[ j2kt ] allow ` ` this ' ' reference to be qualify .
fix xhamster ripper so it do n ' t complain about xhamster . com
fix checkstyle issue in entity / world / glowworld . java ( # 113 )
modify table name assignment logic in OracleDialect . java to handle cases where the schema is not null or empty to ensure the correct table name is
fix an npe in the console console filter ( # 4373 )
added a new parameter ` mNumberOfAllFiles ` to the ` FileMenuFilter ` constructor and implemented file selection logic to enhance user experience by
[ java ] use termlengthmask instead of termwindowlength for term offset calculation .
fix checkstyle issue in block / entity / guildupdateownerevent . java
updated inPortalTicks increment logic to handle cases where inPortalTicks is less than 80 to ensure inPortalTicks does not decrement to a maximum
updated spacing and text color handling in ClusterMonitorTileSkin . java and added compression functionality to improve visual clarity and usability of chart display
refactor multiple codec template classes to improve code organization to enhance maintainability and readability of the codebase
change variable types from int to long for length calculations in Base64 . java to prevent potential integer overflow when handling large binary data sizes
removed null check for header in RendererConfiguration . java to simplify the logic for checking if the renderer is null
cloudstack - 7803 : do not allow volume to have the same disk offering on vms with custom service offering .
refactor imports in HitbtcAdapters and Order classes for improved clarity and organization to enhance code readability and maintainability by
fix idle count bug in realtime consumption ( # 4327 )
updated the service description from " jruby " to " jrubyscripting " in JRubyScriptEngineFactory . java to improve clarity
rename variable ` name ` to ` displayName ` for clarity to improve code readability and maintainability by using a consistent variable name
updated condition in ParticipateAssetIssueActuator . java to handle negative exchange amounts to improve validation logic for better handling of exchange amounts
added a loop to limit the number of iterations to 10 in FeedUtils . java to optimize performance by avoiding unnecessary iterations
added a test method ` testHDF4 ` to ` HDFParserTest ` for HDF4 file parsing to ensure compatibility with newer Java versions
[ calcite - 6092 ] allow time ( 0 ) not null to be cast to time ( 0 )
removed unnecessary whitespace in conditional statements to improve code readability and maintain consistency
added methods to quiet close all AutoCloseable objects in CloseHelper . java to improve resource management and prevent potential memory leaks
updated the positive button resource in RemoveFileDialogFragment from a string resource to a common yes resource to improve user experience by providing a clearer
added null checks before drawing images in Pixmap . java to prevent potential NullPointerExceptions when srcWidth or dstWidth are zero
replaced ` ReflectionHelpers ` with ` java . security . ProtectionDomain ` and updated method invocation for ` defineClass ` to improve compatibility
updated regex pattern for hostname validation in GUIUtil . java and added corresponding tests in GUIUtilTest . java to improve regex validation logic and ensure
replaced boolean conflict detection with a long conflicts counter in CachedRowSetWriter . java to improve clarity and maintainability of conflict handling logic
use pubspec . yaml instead of version string ( # 1193 )
added a condition to check if the reference is the same as the current reference in ReferenceMemory . java to ensure proper handling of reference references and
added logic to inject seed URL files and improved error handling in the Injector class to enhance robustness by ensuring only valid seed files are processed
added a condition to check if ` hideOriginal ` is true in the ` FloatingIconView ` class to ensure that the original view remains
updated the calculation of ` maxNodes ` and modified the condition in ` FullUnrollMaxIterations ` to ensure it does not exceed the maximum
added support for checking and logging texture coordinate types in CombinedTexture and UVCoordinatesGenerator classes to ensure proper handling of unsupported texture coordinate types and
added error logging for file deletion in EncodeActivity . java and improved input validation in DecodedBitStreamParser . java and MatrixUtil .
added ` seek ` and ` close ` methods to ` TracingConsumer ` and ` TracingProducer ` classes to facilitate the handling of
updated the substring method to use ` oldPrefixLength ` instead of ` locate ( ' / ' , handle , 0 ) + 1 ` to
replaced the manual addition of elements to a list with a constructor that initializes it directly from a collection to simplify the code and improve readability
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used in favor of a new one
added a nightly build warning message for users when running a nightly version of Universal Gcode Sender to inform users about potential issues
add sorting of response by recipient and return user body text if team name be null .
updated the return statement in UnnecessaryThrows . java to clarify the removal of unnecessary ` throws ` declarations
deleted ` CacheApplication . java ` and refactored ` CommonsApplication . java ` to replace ` CacheApplication ` with ` Commons
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet to improve code readability to enhance maintainability and ease of future updates
updated configuration update logic for KitKat and above in RuntimeEnvironment . java to ensure compatibility with devices running KitKat and above
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` and a corresponding test in ` StackManager
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
[ hotfix ] avoid npe when delete a non - existent index
added package imports for internal resolver helpers and readers in CheckPackageAccess . java to enhance package access management for XML resolver components
renamed ` save ` and ` persistExecutionContext ` methods to ` add ` and ` updateExecutionContext ` across multiple classes to improve cl
added handling for LoopExitNode in GraphUtil . java to ensure proper processing of loop exit nodes during graph processing
updated RecyclerView references and related methods in SearchAndRecommendationsScrollController . java to use WidgetsRecyclerView instead of RecyclerView to
added a check for terminal support in ConsoleReader . java to ensure proper handling of unsupported terminal cases
changed data types of ` fiveSeconds ` and ` timeAllowed ` from ` Long ` to ` Integer ` in ` CloudExitableDirectoryReader
added a validation check for session validity in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure that session data is only flushed when
refactored index change handling in ChangedIndexChangeGenerator . java to improve null safety to enhance code robustness and prevent potential NullPointerExceptions
replace Vector with ArrayList for storing RadioButton instances and add action listener methods to enhance flexibility in managing RadioButton instances
updated UserManagerCompat to support both NYC MR1 and NYC MR1 cases and created new UserManagerCompatVM
added methods to retrieve database major and minor versions in MockDatabase , AbstractDatabase , and HibernateDatabase classes , and modified ReorganizeTable
updated ActionGraphCache to include lastActionGraphAndResolver for improved handling of mismatched rules to enhance clarity and maintainability of the
added LockDatabaseDesc and UnlockDatabaseDesc classes to provide detailed information about locking and unlocking database operations
refactor RankingTopComponent , RankingUIModel , and RankingToolbar to use setter methods and improve code readability
added handling for DisconnectMessage in HandshakeHandler . java and updated logging messages in NodeImpl . java to improve connection status reporting and ensure compatibility with
added a test for setting and deleting a storage group in IoTDBAuthorizationIT . java and updated the AuthorityChecker . java to include the
chore : rename documentai / v1beta1 to documentai / v1beta2 ( # 119 )
updated type validation logic to include a flag for variable declarations and improved type checking to enhance type validation accuracy and provide clearer error messages when
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to enable handling of test execution lifecycle
[ java ] update countermanager to use utf - 8 for label charset .
updated the ` toString ( ) ` method in ` MultiSteps ` and ` SendEmail ` classes to use parameterized logging to improve readability and
added null check and cloning of joinKeys in JoinDesc . java to ensure that the joinKeys array is not modified when it ' s
updated WebAuthnConfiguration to use PrincipalResolver for authentication handlers to enhance security by associating authentication handlers with the default principal resolver
updated the ` addSettingsFromFile ` method to accept an ` ImmutableList < Path > ` for search paths to enhance functionality by allowing additional search paths
added ' final ' keyword to several lists and sets in Oracle . java to enforce immutability and improve code clarity
[ hotfix ] [ doc ] disable unaligned checkpointing option until rescaling
throw unsupportedoperationvisitor instead of unsupportedoperationvisitor in order _ by and map _ value _ constructor
add log to help debug build failure
added a check to ensure lValue is an instance of LocalVariable before throwing an exception to improve error handling by throwing an exception for invalid local
added MySQL - specific handling for " timestamp " column in CreateTableGenerator to ensure proper handling of timestamp data for MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper context class loader management during execution
added a condition to set an ejection delay for the first stage in SimulationListHandler to ensure proper handling of ejection delay when stage
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related methods in ` SpringApplicationTests ` to improve
refactor TransactionUtil2 to improve code structure to enhance maintainability and readability of the code
refactor ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance flexibility by
updated string concatenation and added null check for DocCollection in ClusterState . java to improve clarity and provide a meaningful message when the collection is
replaced ` getStyle ( ) ` with ` getAllStyles ( ) ` in ` TextArea . java ` to ensure consistent alignment setting across styles
added foreign database and schema name properties to ForeignKeyColumn , ForeignKeyColumnMutator , and related classes to enable configuration of foreign database and schema names for
[ java ] throw a timeoutexception when fail to join leadership .
replaced static import of Shadows . shadowOf with a private method Shadow . extract in ShadowActivity . java and ShadowBluetoothDevice .
added validation for selection root and improved path handling in FileSelection . java , along with a new test case in TestBugFixes .
add item . onarmortick ( ) , deprecate in 1.20 . 1 since 1.20 . 1
refactor Export . java and IOUtil . java to use ByteArrayOutputStream instead of FileOutputStream for better memory management to improve performance and ensure proper handling of
added null check before invalidating options menu in SingleUploadFragment to prevent potential NullPointerException when accessing shared activity
updated widget binding logic to handle options correctly to ensure proper binding of widget options when available
added new capabilities for air pressure , air quality , CO2 , and VOC measurements in EcobeeSensorThingHandler . java to enhance sensor functionality and provide more detailed environmental data
reformatted code for improved readability and consistency to enhance maintainability and adhere to coding standards
added environment variables for AAPT and AAPT2 in Genrule . java and updated test cases in GenruleTest . java to ensure correct
dump access table only if truffleinstrumentBranches . value be true .
added null check before disposing of the message object to prevent potential NullPointerException when the message is not initialized
added ` @ Getter ` annotation to the ` db ` field and modified the visibility of the ` init ` method in ` TxCacheDB
updated log warning messages in CoreContainer . java for clarity to improve user experience by providing clearer guidance on logging behavior
replaced printStackTrace ( ) calls with fail ( ) and return statements in CategoryPlotTests . java to improve error handling and provide a clearer
replaced ByteArrayOutputStream with SmallByteArrayOutputStream and modified dial message in IOSImplementation . java to improve memory management and prevent potential null pointer exceptions
[ add ] shader . getattribute ( vertexbuffer . type ) now use intmap instead of hashmap to store attribute
removed " territory = en _ US " from the JDBC connection string in AbstractDIHJdbcTestCase . java to simplify connection configuration by
changed the type of ` firstExchangeTimestamp ` and ` lastExchangeCompletedTimestamp ` from ` Date ` to ` Object ` and added a check
added default language support and improved output messages for Java classes in TestHtmlTag and TestUseOption to enhance localization support and provide clearer
updated the condition to check if the result is not incomplete and the size of items exceeds 10 to ensure that the completion check does not exceed the
updated command - line argument for time column in HybridClusterIntegrationTestCommandLineRunner to support a different time column name to enhance flexibility in
refactor output format handling in SiteSnapshotVariationsTest . java and OutputOptions . java to use a dynamic file extension based on the output
updated condition to check for non - QSB enable status to ensure proper handling of non - QSB modes in the hotseat bar
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and simplified equality checks in ` SceneKey ` and ` Gltf
added a private field ` _ date ` and modified the ` setDate ` method in ` AbstractGenerator ` , ` Generator ` , and ` Http
replaced instances of Adler32 with CRC32 in Store . java to standardize naming conventions and improve code readability
[ vmware ] do n ' t set xen . heartbeat . interval to ' any # of seconds ' by default
added a new warning constant ` ZERO _ AREA _ FIN ` and modified geometry warning logic in ` FinSetCalc . java ` to enhance
( chore ) camel - elasticsearch : fix serialization of documentmetadata
hhh - 14850 - h2 and oracle : add truncate ( ) and datetruncate ( ) function to h2 and oracle dialect
updated error handling in MetricUtils to differentiate between memory pool error and gauge conversion errors to improve error reporting and provide clearer error reporting for
added a JavaScript usage parameter to the ensureSignedUp method and improved error handling in UserContext , FileAccess , and FileTreeNode classes to
updated type annotations to use ` RUNTIME _ PROTOTYPE _ TYPE ` and ` Types . PROTOTYPE _ FACTORY _
updated the BACKFILL endpoint from " / generateAnomaliesInRange " to " / replay " to align the endpoint with the new API
updated return statements in PrecompiledContracts . java to use a new DataWord ( 1 ) instead of a new DataWord ( ) . getData
refactor badge handling in AllAppsContainerView to use BubbleTextView for better item management to improve code clarity and ensure accurate badge
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated start method calls for altContext and otherContext in ResourceHandlerTest . java to correct behavior after the context handler collection is started
removed unnecessary condition check for workspace _ CUSTOM in Cling . java to simplify code logic for better readability and maintainability
trufflejdkservices : remove assert that lookupmodule be not null
added @ Ignore annotation and updated the method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to ` shadow
updated import paths for ItBitExchange from v1 to itbit across multiple demo files to align with the new package structure for improved organization
ww - 3442 fix for profile activation and scope interceptor to use parameter . isdefined ( )
added private constructors to Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes to enforce singleton pattern and prevent instantiation
added try - with - resources around deserialization in RegionsApiUtil . java to ensure proper resource management and handle potential IOException during deserialization
updated serialization and deserialization logic for Vector and Hashtable in mmm Util . java and mmm Resources . java to improve compatibility with externalizable classes
added a table name parameter to the warning log message for invalid retention times to improve logging clarity by including the table type in the warning message
updated condition to check if the fragment list length is greater than zero to ensure that the fragment list does not contain leading or trailing whitespace
updated the file path reference in ResourcePackFileNotFoundException to ensure the correct file path is used for error handling
refactor the handling of TransformerBuilder instances in PartitionToolbar . java for improved clarity and functionality to enhance code readability and maintainability
removed unnecessary condition for showing as grid in RecentsView . java to simplify code logic for better readability and maintainability
refactor ` calculate ` methods to return ` BMIViewObject ` instead of ` Map < String , String > ` to improve type safety
removed the Comparator from the thenComparing method in QueryCommand . java to simplify the comparison logic for better readability
updated block damage calculation in Entity . java to account for HayBale to ensure accurate damage adjustment based on block type
updated environment variable handling in WindowsProcessAddressSpace . java and added legacy command line detection in J9DDrImageProcess . java to improve
add support for custom plugin properties in the OptionsParser and related tests to enhance plugin property management by allowing dynamic configuration of plugin properties
updated the condition to check if the hashTable is not empty before proceeding with the join type validation to ensure proper handling of empty hashTable
fix ( sql ) : fix conversion of java . sql . timestamp to string
[ java ] clone archive context to avoid memory leak .
added a condition to check if the compilation threshold is not already compiled in LambdaForm . java to ensure that the code only executes when the compilation
added two new test methods , " testImage2 " , " testImage2Joined " , " testImage2 " , " test
renamed ` getInitialValue ` to ` getOverridenDefaultValue ` and added ` addChangeListener ` method to ` TogglableFlag `
updated logging statements in DockerClientFactory . java to use placeholder syntax to improve readability of log messages for better debugging
added a conditional check to return early if the current platform is Android to optimize performance by avoiding unnecessary operations on Android devices
updated assertions in RoutesTest to use assertThat with containsString for better readability to enhance code readability and maintainability by using more conc
added new functional interfaces BytePredicate , ByteToLongFunction , FloatPredicate , FloatToLongFunction , ShortPredicate , and ShortToLongFunction to provide specific functional programming constructs for byte , float , and short data types
changed the return type of getSubsColor ( ) from int to String and updated related methods to handle string values instead of integers to improve flex
added a conditional check before deregistering the invocation registry to ensure that invocationRegistry is only deregistered when the future is complete
replaced the method of appending control frame bytes to the queue with a direct output method to simplify the code and improve clarity by directly using
added a check for the " redirected " flag in the intent before starting the WelcomeActivity to ensure that the WelcomeActivity is only launched
added ShadowCheckedTextView class and integrated it into Robolectric to enable testing of CheckedTextView functionality within the Robolectric
added Serializable interface to ParserState class and changed member variables to transient in AccessorProperty and Property classes to enable serialization of ParserState instances and
added " identrustdstx3 [ jdk ] " to the list of certificate types in VerifyCACerts . java to enhance
removed redundant calls to context . setAttribute ( TEMPDIR _ CONFIGURED , null ) in WebInfConfiguration . java to streamline code by
correctly parse occupant ' s nickname in multichat operation .
added a new parameter ` context ` to the ` QuicSession ` constructor and removed ` volatile ` modifier to enhance flexibility in session management
updated MergeScheduler , mergePolicy , and maxFieldLength to use writer . getConfig ( ) instead of writer . setMergeScheduler ( ) and
reformatted conditional statements in ICU4JImpl . java and updated variable names in TextPosition . java to improve code readability and maintainability
added handling for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange . java and modified return statement in AbstractDatabase . java to
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future updates
do n ' t throw an exception if the service provider metadata be not writable .
changed visibility of ` printer ` and ` createPrinter ` methods in ` GraphPrinterDumpHandler ` and ` IdealGraphPrinter ` classes to
added BigDecimal import and updated order ' s average price calculation in HuobiAdapters . java to ensure accurate representation of order ' s average price
updated projection operations to use the target field instead of the name to ensure accurate mapping of projections and improve type safety
modified the player addition logic to check if a player is already in the viewers list before sending a packet to improve efficiency by avoiding unnecessary
added ConstantState implementation to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve memory management and drawable state handling
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 533 : do
fix protostuffobjectoutput . writeobject ( null ) throw npe ( # 10350 )
pdfbox - 4892 : add miss space ; fix typo
refactor BarrowmanCalculator to improve code structure to enhance maintainability and readability of the code
do n ' t show ax when there ' s only one number
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` methods to improve code
updated the returnToWorkspace method call in XmlWorkflowServiceImpl . java to ensure consistency in workspace item handling
updated SSL connection handling in CustomUrlJob . java and added CustomUrlTrustEverything . java for secure connections to enhance security by enabling
use the correct clock rate when the codec be not g722
refactor TextureAtlas class to improve texture management to enhance performance and maintainability of texture atlas functionality
updated the method to return the module name instead of the product name and added a method to set the module name in the AppleLibraryBuilder
[ hotfix ] [ test ] fix race condition in testslot
# 113 - enh : add support for findids ( ) with inheritance ( # 113 )
updated WebSocket response handling by changing variable names and assertions in WebSocketServletRFCTest . java to improve clarity and ensure correct response header validation
[ wasm ] [ wasm ] make sure to clear the reference stack when the function be an extern reference .
add ttl option to log collection ( # 1193 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related methods in CustomChangeWrapper and CustomPreconditionWrapper to
updated DeploymentExceptionTest to use Jetty ' s Server and HandlerCollection instead of QueuedThreadPool to improve server management and resource management in tests
added exception handling around Fresco initialization in CommonsApplication . java and modified vector drawable creation in NearbyController . java to improve
added null and empty check for objectName before trimming to prevent potential NullPointerException when objectName is null or empty
updated error message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve
[ hotfix ] [ table - planner ] make planner / executor / planner class static final
updated variable names and improved null handling for X500Name in KeyTool . java and Resources . java to enhance code clarity and prevent
added a deprecation annotation to RuntimeOptions . java to indicate that these methods should no longer be used in future development
replaced ByteBuffer encoding with string . getBytes ( utf8Charset ) to simplify code and improve performance by directly encoding the string
added a new interface PermissionEvaluator in the org . springframework . security . expression package to provide a mechanism for permission evaluation in the application
added a new option ` ERASE _ LINE _ ON _ FINISH ` and modified the ` doCleanup ` method in ` LineReaderImpl
updated condition to check if the server is not in onlineServers instead of checking if it contains the server name to ensure that the server is not
replaced instances of SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ MERKLE _
refactor ExpandWar . java to use URLConnection and URLConnection for better resource management to improve code readability and maintainability by standardizing
handle httpclientexception and httpclientexception in fullnettyclienthttpresponse . decode ( byte [ ] byte , int ) . fix #
changed the layout of the spinner wrapper from center to centerAbsolute to improve the accuracy of the spinner ' s position
[ hotfix ] [ network ] fix potential interruption in networkbufferpool # requestmemorysegments
refactor MBeanServer management in TestJmxIntegration . java to use a new static variable for better clarity to improve code readability and
replaced the use of AndroidJUnit4 with a custom RetryTestRule in AbstractIT . java to utilize the RetryTestRule for
transactionmanager . isautocommit ( ) now also check for exist transaction before commit .
fix checkstyle issue in util / csv / csvtable scan / csvtest . java and add package - info . java
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ stream ] remove redundant lambda expression in streamtasktimertest
refactor URI handling in mmm Request . java and add a test for the CONNECT HTTP method in ppp RequestTest . java to improve
updated the visibility of the KEY _ LAST _ SEEN _ VERSION _ CODE constant and refactored the method to retrieve legacy storage points to
added methods to manage session availability and availability in SessionManager to enhance session management functionality by allowing dynamic priority changes
added ` addPackageToScan ( " liquibase . pro " ) ` to ` ServiceLocator . java ` to enable package scanning for
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` to improve clarity and
updated the ` loadWithNewGlobal ` method to accept an additional ` args ` parameter and modified its implementation accordingly to enhance functionality by allowing additional
replaced instances of ` startIdx ` with ` startIdx ` for improved readability and consistency to enhance code clarity and maintainability by standard
replaced ` length ( ) ` method with ` toIntExact ( ) ` for size calculations in ` HiveClientModule ` to ensure accurate size
rename methods related to randomization depth from ` isExceedRandomizationDepth ( ) ` to ` hasAlreadyRandomizedType ( ) ` to
drill - 3596 : throw unsupportedoperationexception instead of illegalargumentexception when use hive function in window frame
added a line to clear the headers of the proxy request in AbstractProxyServlet . java to ensure that the proxy headers are properly set before processing
added a condition to skip tests if SA attach is not expected to work to ensure that the test runs only when SA attach is expected to work
added null check for bgColor in GraphicsDevice and created TranslucentWindow class with fullscreen window translucency support to enhance robustness
added error handling for null user information in UserInfoActivity . java to improve user experience by providing a clear error message when there are no information available
added custom serialization for precompiled headers in PrecompiledHeaderData . java to ensure precompiled headers are not used on different machine to prevent serialization
[ hotfix ] [ table ] support append mode in kafka connector
added a new file ` MultipleOutputsIntegrationTest . java ` with integration tests for named output groups and source files to ensure the functionality of named
updated regex pattern and added content comparison logic in FileSettings . java to ensure proper handling of setting values during content updates
refactor StatelessFlow and related classes to improve variable handling and logging to enhance code readability and maintainability while ensuring proper configuration management
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added a taskbar mode switch annotation to the TaplTestsQuickstep class to enable persistent taskbar mode for testing purposes
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
improve error message when item model can not be load
added JUnit @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
fix getcurrentsurfacescale ( ) for non - 2x device
refactor RussianLowerCaseFilter class for improved case - insensitivity to enhance code readability and maintainability
replaced serverProps and clientProps with EMPTY _ PROPS in CsvBulkLoadToolIT . java and updated zookeeper server retrieval logic in QueryUtil
replaced File . separatorChar and File . pathSeparatorChar with underscores in displayName to ensure consistent file path formatting across different operating systems
implement seekablestream in wavloader and littleendien to allow seeking of audio file
added a new boolean variable ` repeatFirstLineIndent ` and modified the ` setIndent ` method to control indentation behavior to improve code readability
cast the oid to Object before comparing it to improve type safety and avoid potential ClassCastException
move initialization of metric registry and health registry before call registermbeans ( ) .
loopex : use controlflowanchored instead of controlflowanchornode .
added code to disable focus painting for buttons in WindowsPlacesBar to improve user experience by preventing focus from being painted
updated condition to check for UniqueConstraint and ForeignKey instances in DatabaseSnapshot to ensure proper handling of backing index for unique constraints and foreign keys
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and implemented it in ` AccountAPI ` to
[ ds - 3952 ] throw an exception if the dc . title field in the group do n ' t contain dc . title
make gapinsertiondetector more robust when there be no word
camel - 1640 : added unit test base on user forum issue
updated thread count in FeedRefreshUpdater from backgroundThreads to databaseUpdateThreads and added databaseUpdateThreads configuration in ApplicationSettings to improve thread management and
updated FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to improve performance by reducing
update SystemClassName to include " Ljava / lang / System ; " to ensure compatibility with the latest Java standards
hhh - 13644 : implement getresultstream ( ) on procedurecallimpl to avoid npe
added null check for API properties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing API properties
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text WebSocket frames to provide a standardized way to encode binary and text frame
simonstewart : fix flaky test in firefox
update randomGeo3dShapeGenerator to use random boolean for latitude and longitude calculations to improve accuracy of radius generation based on randomness
added a keepAlive method to the ResourceBundle class to ensure that the ClassLoader is not garbage collected during processing
changed return value from false to true in SQLiteDatabase . java to ensure correct behavior of database operations
added a conditional check for ` Ljava / util / concurrent / ` in ` FindJSR166LockMonitorenter . java
added MkdirStep calls to create output directories in AndroidAar , AppleBundle , ApplePackage , and FatBinary classes to ensure
update error messages and variable assignments in MeshLeveler . java to improve clarity of alignment error messages and enhance code readability
[ drools - 1341 ] avoid kie - pmml parsing and compilation when jpmml be not available ( # 236
updated variable name from locationMode to thermalStatus in ShadowPowerManager . java to improve clarity by using a more descriptive variable name
updated temporary directory creation logic to differentiate between macOS and other operating systems to ensure consistent temporary directory creation across different operating systems
disable memory map buffer on window in prj file reader
added a null check for the organization in the pom . xml file to ensure that the Plugis are required to have a organization in the
removed " u * contributor license agreements . See the NOTICE file distributed with " to ensure compliance with licensing requirements for the NOTICE
deleted the TerminateWebSessionListener . java file to remove unused web session listener functionality
updated the method to use the Java class path for executing child processes to ensure the process runs on the correct Java classpath
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` byte [ 0 ] ` for ` cryptKeyInit ` , ` cryptKey
added a test method to verify that Javadoc does not change to enhance test coverage and address issue # 3198
changed the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the launcher 3 PHYSICS feature
added a div class named ' noPrint ' to the HtmlThreadInformationsReport class to optimize the display of thread information display
update the main version from 3.1 to 4.0 and update the test version from LUCENE _ 31 to LUCEN
added macosx symbolicator and task handles in BsdDebuggerLocal . java and updated platform detection logic in PlatformInfo . java to enhance
fix memory leak in networkdispatchers that could cause memory leak .
do n ' t log networkdispatcher exception on connection reset by peer
[ java ] use admin _ dir _ name if conductorbytebuffers be null .
added a break statement in the TouchImageView class to ensure proper termination of the loop in the method
fix : [ dialogflow - v1 ] add logging _ settings to the list of option for logging .
removed SSL handshake handling from FeedableBodyGenerator . java to simplify the code and improve readability by eliminating unnecessary logic
fix typeutils . isassignableto ( ) for java . lang . object and java . lang . variance . CONTRAVARIANT
use concurrenthashmap instead of nonblockinghashset in memtablespendingflush
added null check for ` tree . errs ` before calling ` memberEnter ` and modified error count logic in ` JavaCompiler ` to improve error
change browser background from NO _ BACKGROUND to NONE to improve user interface responsiveness by disabling backgrounds
changed the dialog ' s cancel method from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java
fix integerstamp . foldstamp ( ) to handle negative value .
added a method to read an InputStream into a byte array and updated the image instantiation to use this new method to improve performance by reducing the
added functionality to define and undefine variables in CaseStmtToken and updated related classes to enhance variable management and improve code clarity
added exception handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by catching invalid cipher provider exceptions
updated AdditionalDependencies in WinGammaPlatformVC10 . java to include psapi . lib to ensure compatibility with additional platform - specific libraries
updated newline handling in StringUtilsTest to use system ' s line separator to ensure consistent line endings across different operating systems
added UTF - 8 encoding settings in TemplateEngineFreemarker and updated alert message format in ApplicationController to ensure proper handling of special
replaced ByteArrayInputStream with String for byte array conversion in CRDGeneratorTest . java to improve performance by avoiding unnecessary byte array creation
bug 60536 - make variable non - static so that it can be use by subclass
added a conditional check for the system property before adding the EmailableReporter to ensure that the reporter is only added when the system property is set
added handling for quoted characters in CommandLineBuilder and updated test cases in CommandLineBuilderTest to improve command line parsing logic and enhance test coverage for quote
removed the public access modifier from several interfaces and classes to enforce encapsulation within the package
added a method to set the number of reduce tasks in the job to optimize task management based on the number of fetchers
fix a bug where the default value of an object field be n ' t handle correctly .
updated the FILEVERSION from " 505365 " to " 532077 " to reflect the new version of the application
updated texture extension checks from " texture _ float " to " GL _ ARB _ texture _ float " in FloatTextureData . java to
bug 60502 - add fileserver . write ( ) and . closefile ( ) method , and update jmeterversion . version number
added a null check for outputDirectory and jarStream before setting the output directory to ensure output directory is only set when both outputDirectory and jarStream are
added performance measurement using PerfStatsCollector in ShadowSQLiteConnection to improve performance tracking for database operations
updated references from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java `
[ geos - 7013 ] add resourceerrorhandling enum for ogc exception report
added a check to ensure ` pos ` is within its bounds in ` RAMInputStream ` and introduced a test for EOFException handling in ` TestR
updated error handling in DefaultServlet and JspServlet to include specific error messages to improve error reporting by providing specific context when a resource is missing
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for worker threads and added a new AccessControlContext class to
updated the CHECK _ EVERY _ N constant and modified memory check logic in Caches . java to improve memory management and provide more detailed logging
hbase - 27979 testsplittransaction should not use hregion # openhregion
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
added a parameterized test for JAAS demo in DemoModulesTests . java to verify the functionality of JAAS in a specified environment
added conditions to check if spanX and spanY are both 1 and spanY before calculating the center of the cell to improve layout accuracy by
refactor CacheOffHeap class for improved performance to optimize memory management and reduce memory usage
improve error message when the database be create with a table that depend on a table with a higher id
added a condition to check if the current layer row is below the current layer height and logged a warning if extra XML gid values are ignored to
fix thread safety issue in inmemorytilecache . setworkingset ( )
added a new file ` Solution . java ` that implements a solution for calculating the minimum and maximum manasas based on input values to implement
add an addresschecker interface to check if an ip be bad
remove check for translucent moving block in multilayermodel . gettranslucentmovingblock ( )
updated tooltip formatting in GuiConfigEntries . java to remove the " [ default : " prefix from the comment and config element comments to improve
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and updated its assignment in `
added null check for recieptents before sending a email to prevent potential NullPointerException when recieptents is null
refactor the isSingle logic into a separate method to improve code readability and maintainability
added a failFast parameter to the client method in DockerClientFactory and modified logging in RemoteDockerImage and ImageFromDockerfile classes to allow
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated ` RobolectricTestRunner ` to include it to
[ te ] fix date overflow bug in historicprocessinstancequeryimpl
replaced ` gradleImporter . importProject ( projectFile ) ` with ` gradleImporter . importProjectCore ( projectFile ) `
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command failure scenarios
refactor TreeMap implementation to improve performance and readability of the code
added methods to enable and disable asynchronous stack traces in the display class to enable or disable asynchronous stack trace functionality for improved error handling
added a method to set the glow color of BubbleTextView and updated Folder to use this new method to allow customization of g
set the style classes of link and desc to " file - row - text " to ensure consistent styling of text elements in the LinkedFiles
updated AbstractJdbc2ResultSetMetaData to return " java . lang . Short " and added a test for class name matching in ResultSetMetaDataTest to
removed exception handling for file deletion in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify the code by eliminating unnecessary
added null check for _ info in HttpConnection . java to prevent potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class that initializes the provider variable to allow dynamic configuration of the ShadowLocation instance
updated the condition for setting maxRam based on deviceRam to ensure maxRam does not exceed 2048 for 32 - bit devices
add localmapstatsprovider . empty _ local _ stats when map have no data
added logging functionality to FileProfileActivator for file existence checks and file existence checks to enhance visibility into file activation process for better debugging
changed the string used in the addToBody method from " noname1234 " to " invalid _ " to improve clarity by indicating that the
changed collections of roles from a list to a set in GuildImpl . java to improve performance by avoiding duplicate entries
updated the limit for the number of uploads in ExpandableUploadListAdapter from 30 to MAX _ NUM _ UPLOADS _ SHOWN to
added multiple assertions to the ` delete ` method in ` DashboardUserMapperTest ` to ensure that the delete operation accurately reflects the expected
update instructorfeedbackresultspagedata to use primaryparticipant instead of recipienttogivertoresponsesmap
sulong : add isautodeerefhandle ( ) and isautodeerefhandlegetreceiver ( ) method to store node
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide a way to retrieve the buffer size for better
simonstewart : add usage help for the ` ` -- headless ' ' option
updated action bar title handling in DrawerActivity . java for improved readability to enhance user experience by providing clearer feedback when old interactions
updated CommandLineParserTest . java file to improve test coverage for command line parsing functionality
added interpolators for animations in ALL _ APPS _ CONTENT _ FADE _ MIN _ CLAMPING _ THRESHOLD and ALL _ AP
updated method call from ` toUnderscoreSeparated ( externalName ) ` to ` toUnderscoreSeparated ( javaNameFromExternal ( externalName ) )
added native method declarations and a new class NSObject in CWrapper . java to facilitate frame management and object release functionality in the
added constant value checks in mmm Checker . java and created a new ValueTest . java file to ensure proper handling of constant references and validate
refactor MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code organization and maintainability
optimize code : fix constructor to determine illegal logic problem ( # 3197 )
refactor JiraConfiguration class for improved readability to enhance maintainability and facilitate future updates
updated string literals in UploadBuild . java to improve readability to enhance clarity of error and coverage status messages
update bounds calculations in DeviceProfile . java to include search bar offset to improve layout responsiveness by accounting for search bar offset
do n ' t schedule disconnect if idletimeout be zero .
refactor activity launching logic to run on the UI thread to ensure UI thread safety during launching activities
removed the ` getSourceGroupOptional ` method and its associated logic from ` AppleSource ` to streamline the code by eliminating unnecessary
increased the timeout duration in the trigger firing mechanism from 22 seconds to 32 seconds to allow more time for firing events and increase the wait
fix the size of all - null block return from float reader
fix npe in abstractnodecostsearch . getbestSoFar ( ) when distfromstart square be true
added a check to skip processing for " com . codename1 . ui . Form " and " com . codename1 . ui .
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java
added a check to retrieve the latest commit point if it is null to ensure a valid commit point is used for replication operations
added unit tests for ` getImei ` and ` getMeid ` methods in ` ShadowTelephonyManagerTest ` and implemented slot
added debug logging for HTTP request headers and request entity in SimpleHostRoutingFilter to improve debugging capabilities for HTTP requests
added a ` destory ( ) ` method to various classes and implemented it in the ` IndexSegment ` , ` BitmapInvertedIndex `
[ bugfix ] [ test ] fix npe in normalmessagereceivereadandreceiveit
replaced Charset . forName ( " UTF - 8 " ) with StandardCharsets . UTF _ 8 in OutputStreamWriter initialization to improve code readability and maintain
hbase - 15836 bulkload throw npe if the file do not exist or there be an error
add a new ` commission ` field to ` DefaultWithdrawFundsParams ` and update its usage in ` RippleWithdrawF
removed the import of StreamTerminator from AutoClosingReferenceStream . java to streamline the code by eliminating unnecessary dependencies
consolidate multiple catch blocks for exception handling in LoadSolrBuilder and SolrLocator classes to improve code readability and reduce redundancy in error handling
added a check to prevent invoking abstract overloaded methods in the Java to TypeScript translation process to improve error handling and provide clearer feedback when
added StacklessLogging and refactored the sweepDisk method call in TestFileSessions . java to improve logging capabilities and ensure proper resource management
modified the ` SqlDataType ` and ` SqlDataType ` classes to implement ` Serializable ` and changed the visibility of entity maps in ` Entities `
rename SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added a null check for the claimRequestString before parsing it to improve robustness by handling potential null values gracefully
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve compatibility with the Hive framework ' s built - in
updated the ` processTypeHintForNestedDocuments ` method to handle null source cases and added unit tests for null values in ` UpdateMapperUnit
replaced instances of ` CoreAdminResponse ` with ` CoreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and
initialize transformers and locators lists with new ArrayList instances to ensure proper initialization of transformers and locators lists
modified string concatenation syntax in AbstractQuerydslProcessor . java to improve readability of error messages for clarity
[ gr - 36400 ] improve error message for bailout exception .
updated method names from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency
camel - 17836 : camel - mail - use objecthelper to dump the mailmessage to avoid npe .
fix regression introduce by http : / / issues . apache . org / activemq / browse / amq - 2638 -
updated the return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure the method correctly identifies the property name as a property
move the wave generator to an intent instead of a toast message
added null checks and logging in KeyedProperties . java and SheetOverlaysManager . java to improve robustness by preventing potential NullPointerExceptions
test : add log and exec to podit test
added a test method to verify the behavior of ` useFactory ( null ) ` in ` TestReplicationHandler . java ` to ensure that the
call super . dispatchmethodKernelOkra ( range , args ) in GraalKernelTester . java to ensure proper dispatching of the
added sorting functionality to the records list in DefaultDnsClient and implemented Comparable in DefaultMxRecord to improve the organization and ordering of record objects
refactor thread creation in XToolkit to use a privileged action for improved security to enhance thread management and ensure proper synchronization during shutdown
added validation and selection for Linux 6 in SelectBox and UITest classes to ensure proper validation and user interaction with the dropdown
replaced IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by capturing stack traces
added a new parameter ` parentSplit ` to the ` createState ` method and modified its logic to handle parent split states to enhance state management
changed the connectionState variable to be volatile and modified the return statement to ensure thread safety when accessing connectionState
updated the default polling period from 10 to 1000 and added integration tests for the polling endpoint to allow more time for polling operations and improve test coverage
refactor memory allocation methods in MemoryStack . java and MemoryUtil . java for ASCII , UTF8 , and UTF16 encoding to improve memory
added handling for ` DocletAbortException ` and ` IOException ` in ` HtmlDoclet ` and ` AbstractDoclet ` classes to improve
[ java ] unusedmodifier : false positive with enum
refactor method references to use method references instead of lambda expressions across multiple Java files to improve code readability and maintainability
updated the @ Parameterized . Parameters annotation to include a name of " ssl = { 0 } " to improve clarity of the parameterized test '
added error handling for illegal format exceptions in TransformationHelper . java to improve robustness and provide clearer feedback during transformation failures
updated the variable used to retrieve active connection permissions from ` userPermissions ` to ` activeConnectionPermissions ` to ensure accurate accessibility of active connection
replaced direct equality checks with Apache Commons Lang ' s EqualsBuilder for better readability to improve code maintainability and reduce boilerplate
added null check for outputRoot in FileProcessor . java to prevent potential NullPointerException when outputRoot is null
pdfbox - 4071 : add annotationfilter to allow filter of annotation that should n ' t be add to the page
refactor StackTraceCleaner to improve stack trace handling to enhance performance and maintainability of stack trace management
updated content type assignment logic in PluginServlet . java to differentiate between CSS and JavaScript file formats to ensure proper content type is set based on
hhh - 14836 skip test that fail on oracle
updated the parameter name from ` slot ` to ` slotSize ` and modified the logic for initializing the ` stats ` array to improve clarity
added ` getStats ( ) ` method to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` DocBuilder ` classes , and
[ scb - 2372 ] add long polling to kie client ( # 2373 )
added accessibility features and refactored gesture handling in PagedView , BaseOverview , and LauncherInstrumentation classes to improve user experience
removed duplicate instantiation of UnlocksDialog in UI . java and added a button to the PausedDialog . java to improve code clarity and
clear the drag event ' s drop status in PlayerEventListener to ensure the event ' s drop state is reset before processing new data
added a new constant DEFAULT _ PARAM with a value of " inputName " to define the default parameter for stream processing
updated the exception type in the test method from MalformedURLException to IOException to improve error handling by providing more specific exception types
updated printBoth to use chunk type instead of a hardcoded value and added a buffer flipping in LocalTsFileInput to improve clarity
added a ImmutableSet to exclude specific headers from Swift . h in UmbrellaHeader . java and updated related tests in ProjectGeneratorTest .
reformatted the method signature of onHttpError in GrizzlyAsyncHttpProvider . java to improve code readability and maintain consistency
added encode ( ) method call to RequestPlugin . java to ensure data integrity during request processing
[ mondrian - 1212 ] fix npe in native query on db2 .
added validation for null or blank password in LdapAuthenticationProviderImpl . java and created a corresponding test class TestLdapAuthenticationProviderImpl . java to
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper handling of complex writers during processing
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress serialization warnings for better performance and maintainability
removed the ` public ` modifier from the ` ClassGraphClassLoader ` class and updated the null check logic to enhance code clarity and prevent potential
added schema error handling and modified return statement formatting in ErrorResponseException . java to improve error reporting and provide clearer output for empty location scenarios
added a constructor to EventSourcingRepository that accepts an EventStore and SnapshotTriggerDefinition as parameters to ensure that the EventStore is not
refactor symbol handling logic in binary node processing to improve code readability and maintainability
updated search text handling in ` SearchedPeopleCursorAdapter ` and ` QustomDialogBuilder ` to ensure proper formatting of search text to
fix ( connector ) : add standby mode for essentia connector
tmi - tiff : use ` tiff baseline ` instead of ` tiffextension ` for planar configuration
close itemlist tag to prevent memory leak
improve efficiency of laser and crafting table .
added two new classes ` SigInt ` and ` SigIntBarrier ` to handle signal handling in a concurrent environment to provide a mechanism for
refactor graph handling in ExporterGEXF to support hierarchical graph representation to improve flexibility in graph representation by accommodating hierarchical graph
refactor TCTLSeparatedProtocol to replace byte - based string handling with Text - based handling to improve compatibility with Apache Commons
[ # 7868 ] : fix bug in rubric response with invalid index ( # 7868 )
updated CatalogComparator to check schema and catalog case instead of DB2Database to ensure correct comparison of schema and catalog case
simonstewart : make browsermobproxytest more resilient
do n ' t use string . format on ` ` [ { 1 } , { 1 } ' ' , { 2 } } ' '
removed redundant call to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline code by eliminating redundancy
refactor InternalByteArray and TruffleString classes to improve code readability and maintainability
[ hotfix ] fix compilation error in graph . foreachedge and outedgesfunction
updated multiple assertion classes for consistency and clarity to improve maintainability and readability of the assertion framework
deleted the file ` ClassA \ 314 \ 201 . java ` and added a new file ` DiacriticTest . java `
[ java ] replace countdownlatch with wait for completion in cluster membership test .
added error handling for workspace readers in DefaultMaven and improved null checks in DefaultGraphBuilder to enhance robustness by preventing potential null
updated SSL scheme check from ` startsWith ( " https " ) ` to ` equals ( " https " ) ` in ` ServiceRegistryConfig `
refactor Mockito class implementation to improve code readability and maintainability
removed unnecessary whitespace from the constructor of Jdbc3Connection to improve code readability and maintain consistency in formatting
added ensureInstance ( ) method to ServletHolder . java for thread safety to improve clarity and encapsulation of servlet instantiation logic
updated BinanceExchange and BinanceBaseService to improve server time handling and logging to enhance code clarity and maintainability while ensuring accurate server
added binding check for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " in Tomcat
added null check for the component form before deregistering animation to prevent potential NullPointerException when the component form is null
updated the ` decodeResource ` , ` decodeByteArray ` , and ` drawBitmap ` methods to accept ` BitmapFactory . Options ` as a
[ java ] add configuration for number of message and use executor for aeron subscription .
added functionality to prevent multiple clicks and improved text formatting in the TimelineArrayAdapter to enhance user interaction by allowing click and long - click
added " text " data type to unmodifiableDataTypes and refactored conditional checks in NumberType and ColumnSnapshotGenerator to improve data type handling
remove @ ignore from entryprocessorbouncingnodestest ( # 3683 )
updated host state checks from isHardDeletableState ( ) to isRemovableState ( ) in AmbariManagementControllerImpl . java
added a null check before adding the result to the inbox in CreateBridgeServlet . java and updated the test cases in CreateBridgeServletTest .
refactor the ` isRobots ` and ` isValidRobots ` methods in ` CrawlServer ` and ` PreconditionEnforcer ` to
replaced direct calls to ` ni . getDisplayName ( ) ` with a local variable ` dName ` in multiple files to improve null safety and
added a default shader parameter to the SpriteBatch constructor and modified the ImageButton class to utilize it to enhance flexibility by allowing custom
added properties to set synchronous commit option to enable synchronous commit functionality in TestUtil . java
added elementTypeCoercer to coercing collections and updated the fillSortedSet method to handle duplicate elements to improve type coercion and
updated confirmation message handling in RemoveFileDialogFragment and RemoveFilesDialogFragment to differentiate between folder and local files to improve user experience by providing
added a check to ensure the index is within the range of 256 to prevent potential index out - of - bounds errors
increase the port number for fragment storage registration from 666 to a fixed value of 1024 to allow more flexible port allocation for fragment storage
replaced the assertion for cluster clusters with an empty map assertion to ensure that the cluster returns an empty map when no clusters are available
[ hotfix ] remove unused logger from yarnentrypointutils # loadconfiguration
init the logo , color , and style in the validation and repaint method of sipcommframe
removed the ShadowHtml class and updated its usage in RobolectricBase and HtmlTest to simplify the codebase by eliminating unnecessary shadow
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing ` StarTreeRecordStoreFactory ` to implement
updated Jetty logger configurations in HttpClientLoadTest . java to differentiate between HTTP3 and QUIC levels to enhance logging capabilities for HTTP /
changed the visibility of the ` addListeners ` method from private to package - private in ` MockSettingsImpl . java ` and added a new
[ hotfix ] [ doc ] aligns javadoc with method signature
updated imports from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty .
[ # 7018 ] instructor : enroll : add an option to edit student detail in the course course
use try - with - resources to avoid resource leak
camel - 1145 : camel - core - add port support to camel - test - infra - camel
added libraryTarget as a parameter and refactored jar parameter retrieval methods to enhance dependency management and improve code clarity
remove ` ` validating - cerficates ' ' from trust manager comment
api : listcapacity api : remove override method from listcapacity api
added a case for CLOSED in IteratingCallback . java to handle the case when the callback is canceled
added an ` isAuthorized ` boolean field and modified the constructor parameters in ` AccessControlContext ` , and added a method in ` ProtectionDomain
refactor OSGiDeployer to handle app binding and deployment events more robustly to improve error handling and ensure proper registration of non -
added handling for " tiff " codecV and " container " in DLNAMediaInfo . java to ensure correct MIME type is
refactor variable declarations and initialization for better clarity in ` OptimizedCallTarget . java ` to improve code readability and ensure proper synchronization
added a new file ` CubocDesktop . java ` and modified ` Cubocy . java ` and ` Map . java `
refactor PolicyMonitor initialization to use target directory instead of test resource directory to improve clarity and maintainability by aligning directory structure with target
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure all files are removed from the trash bin list
updated the class reference from ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) ` to ` com . sun .
add checkglobalnode to check if global variable be already in the global storage or not .
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and added hash code assignments for component information to enhance event processing by
make burningmanpresentationservice tolerant to max _ burn _ target _ lower _ floor .
refactor UniqueConstraintSnapshotGeneratorSnowflake to utilize H2Database for managing unique constraints to improve code readability and maintainability by
updated the handling of the ` insertStatementBuilder ` in ` DMLTransformer . java ` to differentiate between empty ` insertStatementBuilder `
updated import statements and changed the PGT URL from " http " to " https " in ServiceValidateControllerTests . java to ensure compatibility with
updated ` getDefaultValidFunctionName ` method to include ` isStatement ` parameter and refactored function body handling to improve function name validation logic and
refactor JarLauncher to improve code readability to enhance maintainability and facilitate future updates
updated type parameters in several classes to use generics for better type safety to improve type safety and eliminate unchecked warnings
do n ' t send hole punch packet for telephony if we do n ' t support it .
added a test method for updating PGobjects in the ResultSetTest class to ensure correct handling of PGobjects during database updates
updated the password reset endpoint to return an unprocessable response for users with non - UAA origin to improve error handling and provide clearer
replace retrieval of the second child node with direct retrieval of the document element to simplify code and improve readability by using the document element directly
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
rename timeInSec and prevTimeInSec to timeMillis and prevTimeMillis in Isochrone . java and SPTResource . java
only try to bind to light relay if it ' s valid .
added a new ` Chainer ` class and updated ` CollectionSubject ` and ` CollectionTest ` to use it to improve the handling of chained
refactor Model class to improve code structure to enhance maintainability and readability of the code
updated the recordedTime increment from a fixed value of 619315200000L to a fixed value of 619315200000L to
added a condition to resize the status if the terminal type is Windows to ensure proper resizing behavior for Windows - specific terminal types
updated host version state handling in UpdateDesiredStackAction . java and modified the current state in RepositoryVersionState . java to ensure proper state management
move jre _ bundle _ deploy . jar from ` ` third _ party / java _ src / j2cl / jre ' '
updated collections from HashSet to LinkedHashSet in multiple Java files and modified the return type of the setSettingsBuilderAdvice method to MavenExecutionRequest to
remove unnecessary try / catch block in operationserviceimpl . getoperation ( )
reformatted the method call for better readability in KnativeEnvironment . java to improve code readability and maintainability
corrected the spelling of " commitlog _ archiver " to " CommitLogArchiver " to ensure consistency in naming conventions
added connection method calls in CloudSolrClient and implemented a test for cloud client uploads in TestCloudSolrClientConnections to ensure proper error handling and
synchronize access to allbindings to avoid concurrent modification exception
added methods to clear files and cache in ShadowContext . java and updated file handling logic in RobolectricTestRunner . java to improve
added LinkedHashSet and TreeMap to the list of classes in SecureXStream . java and updated test cases in XStreamPersisterTest . java to support
[ drools - 5802 ] allow kiehelper to build kiebase without the xml round - trip ( # 485 )
updated block type checks for Farmland in BlockEventListener . java to improve robustness by ensuring soil can only be dry based on the
added a default implementation of the ` getLocalIp ( ) ` method to provide a default implementation that returns null to provide a default implementation for the
update JdbcStepExecutionDao to use serialization for OBJECT _ VAL and add a test for storing integer values to ensure proper deserialization of integer values and
updated comments in various dictionary classes for consistency and clarity to improve code readability and maintainability
added " libs " and " python37 " to the resource list and updated the extension and preload resource to support additional Python scripts and ensure proper
added a refresh button to the JTable in PluginTab to enhance user experience by allowing dynamic updates to the plugin list
changed log level from info to warn for reloading , saving , and trimming history files to reduce log verbosity and improve error handling
[ vmware ] fix npe in vmwarestorageprocessor when vm be not attach to a vm
camel - 16400 : camel - sftp : use sshd . stop ( true ) instead of sshd . stop ( ) to
rename ExperimentalMockitoJUnitRunner class to improve clarity and consistency in naming conventions
updated serial handling in GpsSettingsActivity , Session , and HttpUrlLogger to use the new GetBuildSerial ( ) method to improve consistency
refactor SwapGBuffers class to improve code readability to enhance maintainability and ease of future updates
added null checks for spatial and skeletonControl before removing it to ensure proper handling of null values and avoid potential NullPointerExceptions
added methods to set smart reply lists in ShadowRankingTest and updated ShadowRanking to use reflection for setting channel and smart reply lists to
[ java ] do n ' t list all segment file when stop a recording .
updated the initialization of carrot2ResourcesDir in CarrotClusteringEngine . java to ensure correct retrieval of LEXICAL _ RESOURCES
added null check for testRect in WindowsTreeUI . java and created a new class bug8004298 . java to address potential NullPointerException
updated ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to reflect the latest AS
improve error message when map file do not contain column vector
added ClientInfo to SurrogateAuthenticationEventListenerTests to include client information for testing purposes
set isUserView to false in CardPresenter . java to reset user view state before proceeding
updated references from ` GraphvizJavaExecutorUtility ` to ` GraphvizUtility ` and removed unused methods in ` GraphvizJavaExecutorUtility `
replaced direct calls to ` metricService . getOrCreateHistogram ` with local variable ` constructBatchHistogram ` and ` syncLogTimePerRequestHistogram
added a new module - info . java file for the SQLite connector to define module dependencies and exports
added a delay of 500 milliseconds in StreamResetTest . java to improve responsiveness during test execution
removed conditional check for web . type in PermissionsManager initialization to streamline code by eliminating unnecessary type checks
updated DateParser and TestDateParser classes to improve date parsing functionality and enhance test coverage
added an import statement for Context and implemented the getDepth method in SpringLoadedState to provide a default depth value of 0.5 f for better
replaced manual array copying with a constant for the minimum size in BinaryDecoder . java to improve code readability and maintainability by utilizing
[ hotfix ] fix checkstyle violation in executiongraph
removed unused swipe layout components and updated notification handling in NotificationActivity and NotificationRenderer to streamline the user interface by eliminating unnecessary notifications
updated exception handling in DefaultExceptionConverter and modified test assertions in ExceptionsTest and EndpointTest to improve clarity of error messages and enhance test coverage
fix : npe in glowcontainer islocked ( # 1119 )
replaced MethodHandle with getDeclaredMethod for setting the target field to improve method accessibility and simplify exception handling
updated integer handling in MathTest . java to use intValue ( ) for better type safety to ensure proper conversion of integer values from integers to integers
replace StringUtils . join with direct concatenation of strings in BaseEmailContentFormatter . java to simplify the return statements for better readability and maintainability
added logic to display a panel containing a simple panel based on the presence of a property sheet to enhance user interface by improving visibility and layout
updated condition to check for null location in ServerCallable . java to improve robustness by preventing potential NullPointerException when location is null
updated BuilderFactory , Pipeline , and PipeliningTest classes to improve code structure and maintainability
added a check for null DSA key parameters before generating a public key in BasicChecker . java to ensure valid key parameters are provided before proceed
refactor ignored media type checks in MediaTypeRequestMatcher to use a dedicated method to improve code readability and maintainability
updated debug logging to include task number and task attempt ID in LlapBaseInputFormat . java to improve logging clarity and provide more context
updated @ SpringBootTest annotation to include properties for bean definition overriding to resolve potential bean definition conflicts during testing
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
changed package declarations from ` btcmarkets . service ` to ` btcmarkets . btcmarkets ` across multiple files to improve package organization
added a new test method ` issue151 ` to the ` FencedCodeBlockParserTest ` class to ensure that missing BRs or
added a new file CompatibilityTest . java with methods for loading and verifying properties from a XML file to facilitate testing
added new utility classes for push registration and security functionality to facilitate the management and reinitialization of push notifications in the application
refactor TableRebalancer to use a loop for determining the number of replicas and simplify the logic for determining replica counts to improve code clarity
bump version to 2.7 . 0 and release note
log4j2 - 1343 fixed line separator issue on window .
improve handling of read timeouts in apr / native .
initialized friction , restitution , density , and isSensor variables to zero in FixtureDef . java to ensure default values are
updated method signatures and variable names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to handle potential IOException during execution
added unit tests for font and link tags in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure correct retrieval
fix typo find by codespell on fossies . org
added permission handling for CALL _ PHONE in Launcher . java and introduced a new API version check in Utilities . java to ensure proper phone
updated the return value from 32 to 36 in SimulationPanel . java and modified the PlotDialog . java and BasicEventSimulationEngine . java
changed visibility of BUF _ SIZE _ LONG and TOLERANCE from public to private and modified the result calculation in GeoEncodingUtils to
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to provide a way to check if the Docker
added a new constant VPX in CodecTypes . java to define the VPX codec type
added a coordinator address option to the DistBuildRunCommand class and updated related classes to allow users to specify a remote coordinator thrift server connection address
added a new method ` match ` in ` FsUtils ` and refactored timer management in ` WrapTimer ` to improve path matching functionality
added a condition to check if the entity value is greater than zero before adding it to labelValues to ensure that only valid values are added to
ggb - 2335 show ` ` possiblygenerically true ' ' for ` ` true ' ' when the ` ` true '
removed the @ Test annotation from TestPerfBenchMarkDriver . java to enable the testing of the performance benchmark functionality
added materialization time handling in ObjectStore and a test for updating creation metadata in TestObjectStore to ensure accurate materialization information is maintained
added handling for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging for missing native dependencies
improve response code to show all message , not just the first one
update break weight logic in GlyphView . java to use GoodBreakWeight instead of BadBreakWeight to improve clarity and accuracy of break weight
refactor sync handling in RCFile . java to use a buffer for improved efficiency to enhance performance by reducing the number of bytes read
added @ AwaitsFix annotation for SOLR - 13028 in AutoAddReplicasPlanActionTest . java to address a known issue
refactor step and processor data handling to use a LinkedList for better organization to improve clarity and maintainability of the data structure
removed unnecessary parameters from the ` setToSortedDataFlavorArray ` method and refactored the ` DataFlavorComparator ` implementation to simplify
hbase - 13434 add - infoport to testthriftservercmdline ( addendum )
added an EOF check in the RegExpScanner class to ensure proper handling of end - of - file conditions
refactor metrics and timers handling to use sets for storing enabled metrics and timers to improve efficiency by reducing redundant calls to Boolean . getBoolean (
fix a nullpointerexception when the chat room ' s nickname be null .
improve error message for miss sketch file
refactor refresh token creation logic into a separate method to improve code readability and maintainability by encapsulating refresh token creation logic
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] remove dead code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` that returns null in ` ShadowNativeImageReaderSurfaceImage ` to provide a placeholder implementation
updated SSL URI for BTCChinaMarketDataService to ensure proper connection to the BTCChina API connection
pmd - ant task : use file . separator instead of ` ` file . separator ' '
added new classes ` OauthController ` and ` Oauth2PluginTest ` for OAuth2 - related functionality to enable integration testing of the OAuth2
refactor SemgrexPattern class for improved performance to enhance search efficiency and reduce execution time
add ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and remove duplicate ` flatMap ` methods from ` EntryStream `
added error logging for invalid parameters in RestCodec . java and improved exception handling in ExceptionToProducerResponseConverters . java to enhance error reporting
updated the logic in RobolectricClassLoader to allow both org . specs2 and scala to be run with Maven Surefire to
inverted the condition checking if ` sdp ` is not in ` transmittableAudioEncodings ` to ensure correct handling of non - transmittable
replaced ` SequenceNextValueFunction ` with ` DatabaseFunction ` in ` CreateTableGenerator ` and added a test for default values in `
added methods to check feature counts for three GML documents in NormalizedMultiValuesTest . java to enhance test coverage for new feature collection structures
added a volatile boolean field ` wasInvoked ` to ` NetworkTestUtils ` and modified variable names in ` UaaHttpRequestUtilsTest ` to
added a check to ensure the processor is configured before expanding regex mappings in ColumnarDataSource and updated return statements in RowProcessor and BinaryResponseProcessor
updated the ` CustomSeekProvider ` class to use a constant for seek length and refactored the ` splitIntoThirtyParts ` method
added ` XLCDCommunicator ` and ` XLCDController ` classes and modified ` FirmwareUtils ` to use it to
[ drools - 1342 ] fix kie - maven - plugin to work with xerces ( # 2296 )
updated retry logic in EventQuery classes to check if the message is not empty before proceeding to ensure that the retry mechanism behaves correctly when
[ hotfix ] [ test ] use thread . join instead of thread . awaitthreadstates
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
updated resource constants for FREEZE _ V2 , UNFREEZE _ V2 , and DELEGATE _ RESOURCE from 20000 to
updated the method signature of ` command ` to throw ` ConfigurationException ` and modified the ` save ` and ` reload ` calls to improve error handling
deleted the SpringTransactionHooks . java file and changed the target class from SpringTransactionHooksTest . java to AbstractSpringTransactionHooks . java
refactor methods in AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValueTarg . java ` to demonstrate the handling of uninitialized strings in Java to
added support for provided dependencies query in AndroidLibraryDescription and modified dependency pattern checks in GraphEnhancementQueryEnvironment to enhance dependency resolution and improve
add a new BooleanFlag to enable synchronization of keyboard open and close animations when transitioning between home and all apps to improve user experience by allowing
added a static boolean flag ` sSavedBugreport ` and modified the logic for saving anomaly messages to improve performance by avoiding unnecessary logging
added a constant for " cinepack " format in FormatConfiguration . java and utilized it in LibMediaInfoParser . java to support
added camera bobbing animation functionality to the Player class to enhance player movement responsiveness during gameplay
replace ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java ` to
deleted ` HSQLDBServerFilesFilter . java ` and refactored file listing logic in ` TestUtility . java ` to improve code
walletappkit : do n ' t restore from seed / key if restorefromseed = = null
replaced ` getApiDataVideoVersion ( ) ` with ` getApiDataSeriesVersion ( ) ` and added a logging statement for missing titles to
added a method ` visitMethodInvocation ` to check for the existence of a specified class type before returning the method invocation to ensure that method invocations are
updated array size and indexing logic in AmbientCubemap . java to use a constant value to improve code readability and maintainability
[ netbeans - 3952 ] show a warning if the profile mode be not configure properly .
added logic to return masked number for zero values in multiple udf classes to ensure correct data representation for zero values in GenericUDFMasks
refactor tests to use TemporaryFolder for better resource management to improve code readability and maintainability by centralizing temporary file creation logic
added itemstack . isitemstackdamageable ( ) and itemstack . gethassubtypes ( ) method to itemstack .
fix line _ width render crash ( # 167447 )
danielwagnerhall : set ` ` browser . startup . page ' ' to ` ` 0 ' ' in firefox
added a condition to check for HTTP / 1.1 connection upgrade status in Http1xClientConnection . java to ensure proper handling of HTTP
rename the task accept parameter from " compile " to " process - classes " to clarify the purpose of the task for processing classes
replaced the shutdown method with the closeIdleConnections method to improve connection management by allowing idle connections to be closed more efficiently
added a check to ensure the aggregate function suffix is not present before creating a new metric to avoid unnecessary metric creation when the suffix does not exist
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use this new method to improve flexibility in managing full
added a new file ` Solution . java ` that counts the number of occurrences in a given integer to provide a solution for counting the number of
initialize the SocketChannel variable to null in ClusteredAgentManagerImpl . java to ensure that the SocketChannel is properly initialized before use
refactor MutisignOperationerGodicTest . java for improved readability to enhance maintainability and clarity of the test
added error handling for NoSuchElementException in StaxEventItemReader and created a new test for restarting at the end of a file to improve robust
updated import statements and modified text paint handling in ShadowTextView . java , and added null check in TestAttributeSet . java to improve code
updated import statements from ` com . nimbusds . jose . shaded ` to ` net . minidev . json `
updated platform detection from " Linux " to " AIX " and added a mapping for " / usr / lib64 " to ensure compatibility with
server : fix vr ip access to use router control ip instead of router private ip
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate synchronous execution of Runnable tasks
remove test that be break by previous commit .
replaced direct casting to int with Math . round for various calculations in PortraitPagedViewHandler . java to improve code readability
removed unnecessary whitespace in KMeansDriver and FuzzyKMeansDriver run calls to improve code readability and maintain consistency in formatting
update ClassSize alignment calculations in KeyValue . java to improve memory usage and prevent potential null pointer exceptions
camel - 16400 : camel - core - optimize to reduce stack frame in use during rout
added support for handling ` ConditionalTask ` in ` SparkCrossProductCheck ` to enable processing of conditional tasks in the execution flow
updated action handling in Launcher , LauncherAppState , and LauncherModel to include forceReload ( ) to ensure proper reloading of
updated conditional logic in ` LoginInfoEndpoint ` and added new test cases in ` LoginInfoEndpointTests ` to ensure proper handling of JSON responses
added a method ` toDescriptiveString ( ) ` to the ` AssignmentManager ` class to provide a readable representation of the state and server
added a new field ` result ` to the ` HuobiAccountInfo ` class and updated related methods to include it to enhance the handling
added support for the " PERIOD " reserved word " PERIOD " in MariaDBDatabase and created a corresponding test case to ensure proper
[ beam - 16400 ] add miss configuration for portable worker ( # 16400 )
added new launcher shortcuts and bug fixes for Android 7.1 in VersionChangeLogs . java to improve user experience by providing clearer guidance
changed the visibility of the NUM _ MILLIS _ IN _ DAY constant from private to public to allow access to NUM _ MILLIS _ IN
removed a print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] check for aeron client in consensusmodule . conductoragentinvoker to ensure that aeron client be
updated validation logic for implicit lambda parameters and improved type creation in ` Attr . java ` , while adding a new class ` NoWarnOn
refactor menu item visibility and enablement methods in FileMenuFilter and FileDetailFragment to improve code organization and enhance menu item management functionality
added additional btc _ deposit and btc _ withdrawal types to BTCETransHistoryResult . java and updated corresponding test assertions to
replace List with Set for series and exceptions in RetryFilterFunctions . java to improve performance by avoiding duplicate elements
marked the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
updated condition in LastQueryExecutor and added a new test for unseq time exceeding sequence time in IoTDBLastIT to ensure correct handling
corrected the newline character from " \ r \ n " to " \ n " in the HTTP request string to ensure proper formatting of HTTP
added a static block to set the SLF4J logging property to " ERROR " to enable logging of HTTP wire errors for better error handling
added a call to setSafeArea on titleBar to ensure safe area access to the title bar
reversed the iteration order of the loop in OverflowSeriesImpl . java from an enhanced for - loop to a reverse for loop to improve
added a SQL statement to rename a column and assert its content in AlterTest . java to ensure correct parsing and deparsing of the alter
make abstracthikariconfig . copystate ( ) public to allow access to this method from other class .
fixed - rexecutorservice . executecallables ( ) method return a completablefuture instead of a future
add a constant for the file splitting suffix and update references to use this constant to improve code readability and maintainability by centralizing file handling
[ hotfix ] [ table - common ] fix checkstyle violation in orc
added a null check for ` nameArg ` before assignment to ` valueArg ` in ` CompareFunctionsProcessor . java ` to ensure proper handling
updated the ` reduceScopeForLimitedSpace ` method to accept an expected size parameter and modified the disk space check logic to improve clarity
updated the ` toString ` method signatures in ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to
added checks to return early if the state handler is invalidated in AbsSwipeUpHandler and unregistering task stack listener in TaskAnimationManager to
added getLockTimestamp and setLockTimestamp methods to AppPreferences and modified PreferenceManager to use preferences instead of static context to improve lock timestamp management and
refactor artist retrieval logic in MediaInfoParser . java to use a dedicated method to improve code readability and maintainability by centralizing artist
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is not initialized
nifi - 1741 : fix npe in splittext when there be no header file
added support for loading and loading a KeyStore for Windows - specific key store types in HttpsConnectorFactory to ensure compatibility with Windows - specific key
increased the default check timeout from 400 to 1 , 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to
added a condition to check for the result code of FILE _ NOT _ FOUND in FileSyncAdapter . java to ensure proper handling of file
added animation parameters and methods to the Slider class for improved animation control to enhance the control over the animation duration and duration in the application
replaced instances of ` eol ` with ` lineSeparator ` in ` LineSeparatorProcessorTest . java ` to ensure consistency in variable naming and improve
change max width and max height from 512 to 1024 in TexturePacker . java to improve texture packing performance and reduce memory usage
added a test for negation of Ternary in the UnwrapParenthesesTest class and updated the type check in UnwrapParentheses to
camel - hazelcast : fix potential npe in hazelcastqueueconsumer . poll ( ) when message body be null .
added TextFeedbackTest . java and modified TestRunner . java for improved test execution to enhance test coverage for text feedback functionality in the application
replaced Math . round with Float . compare for score comparison in DefaultSolrHighlighter to improve precision in score comparison logic
updated DENSITY constants in AddAndScaleMultiImage . java and ResourceEditorApp . java to accommodate new screen densities and
fix array copy snippets to use correct killexception
log4j2 - 1343 : fix log4j2 - 1343 bug in defaultlogpublisher . publish ( time )
added support for remote SCM system configuration in Configuration and RuntimeEnvironment classes to enable or disable remote SCM functionality based on user input
updated the state check in MieleApplianceHandler to include additional states to ensure proper handling of additional states during appliance operations
replace usage of ` StatsLogCompat ` with ` SysUiStatsLog ` for logging events to standardize logging functionality and improve consistency across the
corrected the spelling of " log " to " LOG " in LocalZookeeper . java to improve code readability and maintain consistency in
added unit tests for ProjectGenerationEvent states in EventSerializationTest . java to ensure proper serialization and deserialization of project generation events
ggb - 1883 add preview point to select tool ( not only the first point )
updated JavaCompiler . java for improved functionality to enhance performance and maintainability of the code
added a check to prevent execution of random reads when the remaining time is less than or equal to zero in IntegrationTestTimeBoundedRequestsWith
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added additional flags " -- gc - sections " and " -- nocopyreloc " to the list of flags in NdkCxxPlatform
updated the ` SpringCloudCircuitBreakerFilterFactory ` to expand fallback URIs and added a new test for it to improve fallback URI handling and ensure
danielwagnerhall : fix checkstyle issue in ` ` test ' '
[ bug - fix ] xssf : sst / si / t and sst / sst / sst / sst be
added a method to retrieve account networks via HTTP in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to
added a check for available text width before layout in SwingUtilities2 . java and modified the GTKLookAndFeel initialization in Test6
replaced the initialization of ` flatteningIterator ` and refactored the ` next ` variable in ` FlatteningIterator ` to improve code
replace " < b > " tags with empty " < / b > " tags in title and body in NotificationUtils . java to ensure that
doc : generate sample code in the java microgenerator ( # 7 )
update instructorfeedbackeditquestionionsuitest : reload and delete any exist question
updated return values and conditional checks in HSSFSheet . java and added assertions in BaseTestSheet . java to ensure correct row number retrieval
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to ensure proper handling of malicious intents and improve state management
[ java ] fix race condition in sequenceragent . processpendingsessions ( ) .
refactor hashCode methods in AbstractParquetMapInspector for improved clarity and consistency to enhance code readability and maintainability by standardizing
added functionality to flush the QuicSession and release the buffer if the connection is remotely closed to ensure proper resource management and prevent potential memory
changed the SplitReader interface to extend AutoCloseable and removed the close ( ) method from SplitReader . java to allow the SplitReader interface
removed the deepCopy ( ) method from GsonBuilder to streamline the code by eliminating unnecessary dependencies
sulong : use llvm . not _ found constant instead of null in llvm . llvm . llvm
refactor file opening and closing logic in RestClientRequestImpl . java to streamline asynchronous file handling to improve code readability and maintainability
modified the dispatchStatusString method call in GrblController . java to ensure consistency in status string handling
updated ClassLoader usage in MockFactory and added SearchingClassLoader for better class loading management to improve class loading efficiency and maintainability by utilizing a
test : add test case for jme3 refresh flag bug
added a condition to check for LEFT _ SEMI _ JOIN type in the condition check to ensure proper handling of LEFT _ SEMI _ JOIN
simplified response completion checks in HttpReceiver and HttpSender to enhance code readability and maintainability by eliminating unnecessary variable declaration
rename arraylengthoffset to arrayoopdesclengthoffset to avoid confusion .
http : / / issues . apache . org / jira / browse / amq - 4892 - use fixed - count subscription recovery
refactor multiple Java classes for improved consistency and clarity to enhance maintainability and readability of the codebase
added a check to ensure ` appCtx ` is running before stopping it to prevent potential errors when the application is not running
changed the return type of the drawItem method from void to GlyphLayout to improve flexibility by allowing the method to return a GlyphLayout instead
refactor metrics retrieval in SpringmvcClient and improve exception handling in CodeFirstSpringmvc to enhance metrics management and provide clearer
removed the static final long SAFE _ ACCOUNT _ AGE _ DATE and updated the return type of the accountAgeWitnessMap to simplify
reformatted code for better readability in StructureHeader . java and StructureReader . java to improve code readability and maintainability
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and related tests to enhance interceptor management for resource URL providers in the webflow
added dexreturninliner to dexbody . transform ( ) and dexassignmenteliminator . transform ( ) , which
refactored enrichedruledto to make it easy to enrich the rule
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java and added a new symlinkDir endpoint in AliasCheckerSymlink
[ hotfix ] [ table - common ] remove sqldialect from executioncontext
refactor ` rDotJavaPackages ` to ` rDotJavaPackagesSupplier ` and introduce a ` hasRDotJavaPackages ` flag
[ java ] add test case for package declaration
added a configuration property for minimum cross compaction unseq file level in IoTDBDescriptor to enable dynamic configuration of the minimum cross compaction unseq file
[ hotfix ] [ runtime ] move activeresourcemanager to flink . runtime . resourcemanager . active
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated URI handling in ZipResource . java and added a new test class ZipResourceTest . java to improve robustness and ensure correct URI parsing
refactor ExpandableUploadListAdapter for improved readability and structure to enhance maintainability and clarity of the code
refactor configuration retrieval in RobolectricTestRunner to support merging parent classes and method annotations to improve clarity and functionality of config merging
updated block and item registry initialization to filter out null registry names to improve robustness by preventing potential null pointer exceptions
refactor ` afterAppAuthChanged ` , ` afterPluginChanged ` , ` afterRuleChanged ` , ` afterSelectorChanged ` , and
added enum handling for number types in JSONPojoConvertor and improved color management in JSONPojoConvertorTest to enhance functionality and
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users about the deprecation of
changed the type of ` originalPayload ` from ` String ` to ` byte [ ] ` and modified the payload parsing logic to improve memory efficiency
added orientation correction functionality to GyroControl to improve user interaction responsiveness during device orientation changes
updated BIOME _ LIST _ SIZE from a fixed value to a dynamic value based on the length of the biome gen array to improve
replaced instances of ` println ` with ` print ` in ` GetInterfaceTest . java ` and made interfaces public in ` Foo ` and
removed duplicate declaration of the environment variable in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a standardized way to collect
added a preload parameter to the MMapDirectoryFactory class to control the loading behavior of the map directory based on user settings
added custom metrics for various components in BukkitPlatform . java to enhance monitoring capabilities for various components in the application
refactor QuickConnectREST class for improved clarity to enhance maintainability and readability of the code
added aspect ratio and default card image drawable in CardPresenter . java to enhance visual representation of port folders in the application
[ ds - 3952 ] do n ' t increment auth method count if it ' s not implicit .
updated cloning logic in VectorHashKeyWrapper to handle empty arrays for long , double , decimal , byte , and byte arrays to improve robustness
added tests for the " system . nanotimeJit ( ) " method in the TimeChangeTest class to ensure that the JIT
added trimming of whitespace from the input line in MultiPartFilter . java and printed the request parameter in MultipartFilterTest . java to ensure
add livingexperiencedropevent to allow drop player experience .
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler for clarity and consistency to improve user experience by providing clearer error messages
remove unsupportedoperatortypesvisitor since we do n ' t need it
added RdepsFunction functionality and improved state checks in GraphEnhancementQueryEnvironment . java , along with corresponding tests in GraphEnhance
refactor Character class to improve code readability to enhance maintainability and facilitate future modifications
added a check to determine if the rocket is the entire rocket before setting the selection index to ensure the selection option reflects the correct
replaced usage of ` Arrays . toString ( ) ` with direct usage of ` byte ` in the ` assertEquals ( ) ` method to
added time boundary handling for offline and realtime tables in BaseBrokerRequestHandler to improve robustness by ensuring valid time boundary information is present for hybrid
no need to add socketref to poller when it ' s already in use .
updated EightmusesRipper . java to improve album title processing and add logging for full - sized images to enhance user experience by
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple files to standardize method
added a condition to check if the profile is a phone and its orientation is not landscape to ensure proper layout behavior for phone devices in land
updated assertions to use ` QueryImpl . class ` instead of ` getValue ( PROPERTY ) ` in ` PartTreeJpaQueryIntegrationTests `
replaced direct calls to ` Files . readAllLines ` with a new method ` readMatchingLines ` in ` SubSystem . java ` to
added dynamic method invocation for ` getResultStream ` in ` JpaQueryExecution ` to enable dynamic retrieval of the ` getResultStream ` method for
added null check for entity in PhysicsProcess . java to ensure robustness by avoiding potential NullPointerExceptions
added test for entry processor with predicate to clear map when value attribute be index
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated color handling in Utils . java and modified htmlMessage in UtilsTest . java to improve color representation and enhance HTML message formatting
disable menu item and normalize name if input be empty
updated the path for the link tree in Aapt2Link . java to use a dynamic path format and added recursive traversal steps to improve path
replaced instances of ` new Capture ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java `
do n ' t clear the geos selection when it ' s change
added handling for EmptyStackException and simplified exception handling in YsldValidator . java to improve error management and provide more informative runtime exceptions
added ` isCanceled ( ) ` method implementations across multiple classes to provide a consistent implementation of the ` isCanceled ( ) ` method across the
added a default implementation of the ` isAnnotationPresent ` method across multiple classes to provide a consistent way to check for annotation presence
added a default implementation of the removeAllWidgets method in UILayout to provide a placeholder implementation for future use
[ hotfix ] [ test ] add testappender to the yarn test
opensslcipher . getoutputsizeforfinal ( ) now return the max value of the input length .
added logic to force a transcode of high - resolution media streams in Fire TV Stick devices to improve performance by reducing unnecessary trans
[ beam - 8470 ] make source and dataset mock class static so that it do n ' t interfere with other class
updated import statements and modified listener handling in GpsLoggingService . java to improve clarity and functionality of listener management
modified the ` putString ` method to accept a ` byte [ ] ` instead of a ` boolean [ ] ` and updated the logic for determining
added support for handling BaseItemDragListener in FolderIcon to enhance drag - and - drop functionality for better user experience
added ` createEmptyArtifact ` method to various connector classes and modified return logic in ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and
removed unnecessary whitespace in RabbitMQPublisherImpl . java to improve code readability and maintain consistency
simplified the condition for loading video links in VideoViewerActivity . java to enhance code readability and maintainability by eliminating unnecessary
camel - 16400 : camel - sftp : fix issue with relative path on window .
[ hotfix ] [ test ] fix flaky test in baseweatherconsumertest
changed variable name from ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by
fix double plant not be able to place block in different plan
replaced ` tree . setFocusable ( false ) ` with ` tree . getRequestFocusEnabled ( false ) ` in ` TranscodingTab .
do n ' t swallow exception when fail to start vm
removed the ` requireLicense ( ) ` method from ` DB2TestSystem ` and updated conditional logic in ` DockerDatabaseWrapper ` to stream
changed the visibility of the units variable from final to non - final and added a setter method for unit management in DoubleModel . java , and
added a new static final CurrencyPair for BTC / ZMW to support trading operations on the BTC / ZMW tra
added sample configuration for PBR lighting in TestPBRLighting . java to enable dynamic adjustment of the number of samples based on the
removed the " job . step " prefix from multiple tasklet assertions in StepWithSimpleTaskJobParserTests . java to simplify test cases by
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to improve code clarity and enforce immutability
[ giac ] fix sign in ggbabs ( )
hive - 18514 : add service output for ranger to wm ddl operation ( sergey shelukhin , review by thejas m nair )
[ drools - 1342 ] fix decimal type coercion for bigdecimal and biginteger ( # 2373 )
added " org . eclipse . jdt . " to the WebAppContext to hide Jdt usage by Jetty
modify the return value of the useAuthCache ( ) method from super . useAuthCache ( ) and cacheSPNEGO ( ) to
added capitalization to the namespace assignment in PageTitle . java to ensure consistent capitalization of the namespace
added directconsumernotavailableexception for backwards compatibility
added a null check for the ZooKeeper object before setting it to null to avoid potential NullPointerException when the ZooKeeper instance is not initialized
updated progress bar step message in Loader . java to improve clarity and accuracy of the loading process
added a method to execute a Runnable on the UI _ HELPER _ THUTOR thread and replaced direct calls to mVibrator
added a method to update the last remote stream ID in HTTP2Session . java to ensure the session reflects the current remote stream ' s
add text antialiasing option to header and toolbar
[ java ] : do n ' t use termwindowsize a it ' s not necessary .
refactor : remove static import of enums in ctannotationimpl . java
refactor ExoPlayer class to improve code readability to enhance maintainability and facilitate future updates
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ( Rectangle x , y , 1 ,
added a new method ` newPrintStream ` to handle custom encoding for output streams to improve flexibility by allowing custom encoding for output streams
updated vibration duration from 1 to 25 milliseconds in TouchableMovementMethod . java to improve responsiveness by allowing a longer vibration
update dependency com . google . appengine : google - appengine - api to v1.1 . 2 , add some java . net
added an empty constructor to the WebSocketClient class to improve code readability and ensure proper initialization of the WebSocketClient
danielwagnerhall : fix i18n test for firefox
rename handleunresolvedelement ( ) to handle load constant exception .
added a call to restore the authentication system state in XmlWorkflowServiceIT . java to ensure proper handling of authentication state during tests
added a comparator for string comparison in CoNLLUFeatures . java to enable case - insensitive comparison of strings in the features collection
refactor ` parse ` method to accept a list of ` JavaFileObject ` instead of an ` Iterable < JavaFileObject > ` and introduce
danielwagnerhall : add unit test for toggle option in multi - select
added a validation check for the length of keys in HighestKvno . java to ensure that the count of keys is at least 9
updated attribute retrieval in HDF5BatchReader to handle potential HdfException to improve error handling and provide clearer logging for unsupported attributes
make bigqueryio . expand ( pcollection < t > , pdone ) return presult instead of pdone . in ( pcollection
updated XML element name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added Swagger implicit parameters to ProcessGroupResource to
added a new file ` TestMultiANewArray . java ` to implement tests for multi - dimensional arrays in Java to ensure proper handling of
fix : remove unused configuration parameter ' secondary . storage . vm '
refactor synchronization logic in SyncBlockChainMsgHandler to use a local variable for headID and headNum to improve code readability and maintain
set the theme of the preview viewer to the preferences theme to ensure the preview displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle timeout in the ConnectorTimeoutTest class and modified the idle timeout in ServerConnectorTimeoutTest to ensure that the HTTP
add a property to the coref dictionary to make it easy to configure .
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a
updated parameter type in JpaPagingItemReaderIntegrationTests and changed assertion message in JobLaunchingGatewayParserTests to improve code clarity
changed log level from warn to debug for child node improper name logging to reduce log verbosity for better debugging
refactor color extraction logic to use a dedicated method for retrieving the wallpaper and its hotseat palette to improve code readability and maintain
added methods to set default data table entries and cells in TypeRegistry to enhance flexibility in managing default data table transformations
added an assertion to check if newAvailableShared is less than or equal to initShared to ensure that the shared state is correctly initialized before use
chore ( regen ) : regenerate with update license year
added a private boolean field ` projectGenerated ` and its getter method in ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator
removed unnecessary whitespace in conditional statement to improve code readability and maintain consistency
added GET and POST routes for contact form handling and introduced a new Contact class with associated methods to enhance the application ' s functionality for displaying contact
guac - 527 : use objectpermissionset instead of permission to store permission .
updated the RELEASE _ VERSION constant from 20 to 21 to reflect the new release version
[ drools - 1340 ] fix typo in method parameter name ( # 1358 )
updated method names and queries to use " alias like " instead of " like " to improve clarity and functionality in querying metric configurations
replaced manual closing of perDocConsumers with a utility method using IOUtils to improve code readability and ensure proper resource management
refactor ` AbstractDataChangedListener ` , ` HttpLongPollingDataChangedListener ` , and ` RuleServiceImpl ` classes to improve code
added an OnClickListener to the overflow button in the ExpansionViewHelper class to ensure the menu is displayed when the overflow button is clicked
updated failure messages to provide clearer context for null and non - null references to improve clarity of failure messages for better debugging and understanding
ggb - 1748 update line height of help button in algebra view
move protobufferutilitiestest to io . bisq . core . util and add test
fix ` ` set divider position ' ' and ` ` set side pane width ' ' bug
add a workaround for cross reference in the aux file
make geoserverfeaturesource and geoserverfeaturelocking use metadatamap instead of map
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity by indicating the purpose of the
show the contact node on the contact list when a contact be add or remove .
updated import statements in ShellCommand . java and ShellFactoryImpl . java to use the correct package structure to ensure compatibility with the latest SSHD
added a test method to clean up the audit log table based on its position in the database to ensure that the audit log table is clean up
changed the return type of the inject method from Class < T > to Object and added a suppression warning to improve type safety and suppress unchecked
added regex patterns for parsing empty and invalid comment lines in ACLFileParser to improve error handling and ensure valid comment lines start with ' # '
updated imports and method signature in MapRDBFormatMatcher and MapRDBSubScan classes to enhance functionality and align with new requirements for file system operations
added a ` ancestorDimensionValues ` map and updated logging statements in ` StarTreeNodeImpl ` and ` TestStarTreeNodeImpl ` to enhance
added user unlock check before dumping plugin manager state and improved closeOpenViews method to enhance user experience by ensuring views are only closed when
changed variable name from widthStr to positionStr to ensure consistency with naming conventions
refactored certificate validation logic in PKIXValidator . java to improve clarity and structure to enhance maintainability of certificate validation logic
[ hotfix ] [ hadoop ] add archunit test for the test code
updated package declarations for AlibabaDubboIntegrationBootstrap , ApacheDubboIntegratedBootstrap , and ApacheDubboPlugin
cloudstack - 7803 : vpc api : do n ' t skip project network when list public ip range
updated method name from ` remove ` to ` get ` in ` RuntimeTypeAdapterFactoryFunctionalTest ` to improve clarity and accuracy in
added a flag to store undo information for properties and implemented corresponding getter and setter methods to enable or disable undo information storage for properties in the application
replace direct access to " sun . java2d . xrgradcache " with a privileged action in XRCompositeManager . java to
updated StreamCloseTest to use Awaitility for checking stream session size to improve reliability of the test by allowing more time for stream session
added ` doAfterFlush ( ) ` method to ` DocConsumer ` , modified ` DocFieldProcessor ` , and ` TermVectorsConsumer `
added deprecation warning handling and modified property processing in ConfigurationMetadataGenerator . java and AbstractJpaProperties . java to improve handling of deprecated properties and
refactor ` capacity ` and ` mask ` variables in ` BiInt2ObjectMap ` and ` Int2ObjectHashMap ` classes to improve
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and refactored file renaming logic to use a
do n ' t swallow exception in parallelniosender . send ( )
added a null check for the context in SchemeAndroidIDE . java to prevent potential NullPointerException when context is null
use the current thread ' s context class loader in the native image generator runner
changed the return type of the ` modifyGrantedAuthorities ` method from void to List and updated its usage in the ` SwitchUserAuthorityCh
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and created new classes ` JaxrsSpringIntegrationTest `
add support for setquerytimeout ( ) and setquerytimeout ( )
added DataProviders for general and supplementary character tests in XslSubstringTest . java to enhance test coverage for substring functionality in different scenarios
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for the ` NEXT VALUE FOR ` function in ` MariaDBDatabase ` and updated sequence handling in ` CreateSequenceGenerator ` to
updated error messages in MappedResizeableBuffer . java and UnsafeBuffer . java for clarity and consistency to improve code readability and maintain consistency
replaced BrokerResponse imports with TableDataManagerProvider and set server metrics in multiple test classes to utilize offline metrics for improved data management
added a condition to check for " jsse . enableMFLNExtension " in addition to " jsse . enableMFLExtension "
refactor ObjectIterator and related classes for improved type safety and clarity to enhance code maintainability and facilitate easier manipulation of
updated character count calculations in Compose . java and TweetFragment . java from 22 to 23 to correct the character limit for shortened URLs
added datapoint _ ttl property to cassandradatastore and updated writebuffer to use it
modified the ` checkForAndKillXcodeIfRunning ` method to accept a ` boolean enablePrompt ` parameter and updated related logging and error handling
added a method ` getTerrainAtCell ` to retrieve the terrain at a specified cell coordinate to provide a way to access the ter
added default value printing in Pretty . java and created a new class T6665791 . java with a test class for annotation processing to
added error handling for missing quest encryption keys JSON in ResourceLoader to improve robustness by logging an error message when the resource file is missing
added a condition to check if the push is not active before verifying if the push is supported to ensure that push functionality is only allowed when
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
removed the sign operation for local witnesses in BlockUtil . java to streamline the code by eliminating unnecessary signing logic
updated return logic in FileSystemView . java to handle empty root cases and added security checks in Win32ShellFolder2 . java to improve robust
update row height calculation and rename method ` copyContent ` to ` copyLastRow ` in ` PdfPRow ` and ` ColumnText `
added a SparseArray for managing undo notes and refactored note removal logic in ListFragment to improve performance and maintainability of the undo functionality
[ # 7013 ] fix bug where question be not save in the database ( # 7014 )
added a null check for ` data ` in the ` getTransferData ` method to ensure that ` data ` is not null before proceeding
no effective change - remove unused pstmtdelegate and standardpstmtdelegate
refactor widget padding retrieval to use ` AppWidgetHostView ` instead of a custom ` Padding ` class to improve code maintainability and
refactor static MethodHandle initialization in NashornBeansLinker to use a static initialization pattern and add a new consStringFilter method to
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
renamed the CountDownLatch variable from ` latch ` to ` goAwayLatch ` and updated the timeout assertion to improve clarity and
replaced calls to ` assertThat ( ) . getMessage ( ) ` with ` assertThat ( ) . hasMessageThat ( ) ` in
replaced ThreadLocal instances with direct assignment of currentBook to improve memory management by avoiding unnecessary object creation
refactor ` vote ` method to accept ` Class ` and ` Object ` instead of ` MethodInvocation ` to improve type safety and provide clear
removed unused import statements for GachaHandler and Tools in DataLoader . java to clean up the code and improve readability
updated ` postUpdateLog ` methods to accept an ` int rowsAffected ` parameter and modified logging behavior to include row count information to enhance logging
ggb - 1882 fix for slider width and height issue in web
set default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration to 60 to allow for more flexibility in frame rate
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper resource management during transaction operations
replaced DefaultWebSocketFrame with ChannelFutureListener . CLOSE in DefaultHttpServer . java to improve WebSocket frame handling by adding a listener for close
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and added new test classes for handling ` OnStateMachineError ` to
settingsactivity : fix background color when system dark mode do n ' t match app dark mode
updated import statements in RMEThingHandler . java to use OpenHAB ' s StringUtils and added a null check for the line variable to
added an ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class to enable accumulation of sum and count based on a string
[ hotfix ] fix checkstyle violation in put
replace VALID _ CACHE _ SET with REGEXP _ CACHE for caching regular expressions to improve performance by reusing compiled regular expressions instead of recomp
added a static method ` reset ( ) ` to the ` GameThread ` class to provide a way to reset the ` gameThread ` instance
added a login method to the DigestAuthenticator class to check if the realm matches the login service name to ensure that the login method behaves correctly
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and efficiency to enhance code readability and maintainability by consolidating parameter
updated InfoStatus messages to include the variable ' lc ' instead of ' hiddenSingleton ' and improved the toString method in LoggerContext to enhance
replaced ` waitPoint . countDown ( ) ` with ` this . wakeup ( ) ` in ` CommitLog . java ` and
added a condition to check if the Android version is not O and implemented the AutoCompleteAdapter in UserAutoCompleteHelper to ensure compatibility with older
updated schema info level from minimum to basic in SchemaCrawlerTest . java to align with the latest schema information standards
replaced XMLStreamWriter with BufferedOutputStream for XML output stream management to improve performance by reducing unnecessary output stream operations
updated character encoding handling in TestPayloads . java to use UTF - 8 instead of UTF - 8 to improve robustness and correctness of
fix mc - 103516 : fix entity not be able to connect to a world .
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter "
[ drools - 1342 ] fix serialization of accumulate in protobufmarshaller
fix switch / cases indentation see camel - 14540
changed the visibility modifier of the class PDFCloneUtility from public to package - private to allow access to the class from other packages
added support for dynamic HTTP method and headers in RemoteEndpointServiceAccessStrategy to enhance flexibility by allowing custom headers for endpoint URLs
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to encapsulate the creation of ` ResponseBuilder ` for better
added notification for command start in AsyncBackgroundTaskManagerTest to ensure the task starts before proceeding
refactor ` PreviewItemManager ` to add ` recomputePreviewDrawingParams ( ) ` method for improved handling of drawable size calculations to enhance
replaced the tokenizer and filter factory implementation with CharFilterFactory in LukeRequestHandler . java to enhance support for character filtering functionality in the
replaced null checks for ' plot ' , ' generator ' , and ' hotspot ' with a new method ` ParamChecks . nullNot
updated the ` createSubContext ` method to accept an ` Optional < Verbosity > ` parameter for verbosity control to allow customizable verbosity behavior
added a check to convert the schema to uppercase if it is not null and the database type is Oracle to ensure consistency in schema handling across different
updated the context description construction in AsyncLoggerAllThreadContextImplementationsTest . java to include the class name of the context to improve clarity
added a new file TestShrinkToOneRegion . java containing a main method that calls System . gc ( ) to facilitate garbage collection
replace custom package string splitting with Splitter ' s on method to improve readability and maintainability of the code
replaced ` utf8ToString ( ) ` with direct usage of ` context ` in ` AnalyzingInfixSuggester ` to
updated the handling of local attachments in PushsaferMessageBuilder . java to improve clarity and accuracy of the encoding process
added a method to display label histogram information in ModelExplorer and SequenceModelExplorer , and changed the output hash in StripProvenance to JSONResult
pdfbox - 4071 : remove unneeded null check , a suggest by valerybokov
changed the visibility modifier of the FORMATTER function from ` private final static ` to ` private static final ` across multiple test classes to allow for
replaced Apache Commons Logging with Java ' s BigDecimal and added null checks in evaluate methods to enhance precision and prevent potential NullPointerExceptions during rounding
refactor configuration retrieval to use ConfigParser for injectionEnabled and useIncludedLibrary to improve code readability and maintainability by using a centralized method
changed class declarations from package - private to public for Test1 and Test2 classes to allow access to these classes from other packages
updated player event notifications to use " deny . no _ enter " instead of " no _ permission _ event " and changed variable names for cl
added session parameter to the ` getAdditional ` method in ` ConditionAndOr ` and ` ConditionInConstantSet ` classes to enhance functionality by allowing
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` and
added randomness for box and circle creation and reset frictions in the Box2DCharacterControllerTest to enhance test coverage and ensure
added tests for exceeding maximum size limits of globalbuffersize and memorysize in flight reorder options to ensure that configuration values are validated correctly and
removed checks for " must be a power of 2 " and " must be a multiple of 8 " in ObjectAlignment and Options classes to simplify
added functionality to retrieve and set the target package from the Android manifest to enhance the instrumentation tests by allowing dynamic package extraction from the manifest
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
update acceptableThrowawayItems initialization to use an ArrayList instead of an array to improve the handling of acceptableThrowawayItems in the settings
replaced calls to ` mh1 . < boolean > ` , ` mh1 . < char > ` , and ` mh2 . <
updated formatting of code in MessageHandler . java for consistency to improve code readability and maintainability
refactor Inflection class to improve code readability to enhance maintainability and facilitate future updates
added methods to get and set the locale in the EvaluationContext class to enable configuration of the current locale in the EvaluationContext
removed unused import of Plugin in SummaryPrinter . java to streamline code by eliminating unnecessary dependencies
added a break statement in the DrawerActivity class to ensure proper termination of a loop in the DrawerActivity
updated import statements in MongoQueryCreator . java to use wildcard imports and modified debug logging to include the query object to improve code readability and
added a new constant ` XWORK _ LOGGER _ FACTORY ` in ` XWorkConstants ` and modified ` LoggerFactory ` to use it
updated method names in AdminAddPeerWithP2PDisabledAcceptanceTest for clarity to improve readability and understanding of the test
rename ` @ ConditionalOnMissingBean ` to ` @ ConditionalOnMissingBean ` for LivenessStateHealthIndicator and ReadinessStateHealthIndicator
make localpstoreprovider thread - safe when enablewrite = false
changed the visibility of the deleteFiles method from public to private to enhance encapsulation by restricting access to the method
replaced instances of ` Provider ` with ` ServiceProvider ` in ` ServiceLoaderSpliterator ` and ` TypeUtil ` to improve clarity
simplify javainteropreflect . findfield and javainteropmessageresolution . setfield and javainterermess
added methods to check if multiple toolchains have been created to ensure the Android SDK changes are invalidated when the toolchains are present
do n ' t remove the context if it have not be add to the engine .
updated condition checks in AbstractCheckDescriptor to use contains instead of indexOf for better readability to improve code clarity and maintainability by using more
updated linker flags in PrebuiltCxxLibrary and related tests to use exported linker flags to improve clarity and functionality of linker management in the
replaced ` onConfigurationChangedInternal ( ) ` with ` updateRecentsRotation ( ) ` in ` AbsSwipeUpHandler . java
updated type checks in multiple classes to use wildcard generics for better type safety to enhance type safety and prevent potential unchecked warnings in class references
abstractblockchain : include the hash of the block header in the tostring ( ) method .
use getstorepathphysic ( ) instead of getstorepathcommitlog ( ) in defaultmessagestore
refactored the instantiation of JvmGcMetrics and JvmHeapPressureMetrics to remove the try - with - resources statement to improve code read
add get message count and get message hit time to compactionlog
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new code
added a method to check for the presence of a system UI object and modified key event command execution in the launcher UI test to enhance functionality by
changed logger from static to instance variable and made principals , sessionIds , and sessionIds fields final to ensure immutability and enhance code safety
added checks in InMemoryCookieStore and NullUriCookieTest to ensure that the removeAll method returns false when the cookie jar is empty to improve
fix ( bonsai ) : check for null before update
changed the parameter type of ` getText ` from ` String ` to ` CharSequence ` in multiple repository classes to allow for more flexibility in text
[ java ] unignoring a couple of test in marionette
added error handling for connection return in SocketConnector . java to improve robustness by logging exceptions during connection return
renamed ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and updated references accordingly to improve cl
added synchronization to the heartbeatExecutorService in DbTxnManager . java to ensure thread safety when accessing shared resources
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and added ` wrapWithTracingAndCancellation `
added a new method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to ensure the first line is displayed when
added new work directory configuration for MapReduce in TestInformationSchemaWithPrivilege . java to ensure correct directory paths are used for testing purposes
refactor graphics configuration retrieval logic to handle null parent cases to improve robustness by avoiding potential null pointer exceptions
tika - 1353 -- fix test case for oom in legacy mode
camel - 17836 : camel - core - optimize pipeline to reduce stack frame in use during rout
updated PrintTagList . java to handle command - line arguments and improved tag management to enhance command - line argument handling and provide clearer
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
http : / / issues . apache . org / jira / browse / amq - 4792 - add test case for eofexception
[ java ] simplify startfromtruncatedrecordinglogtest by use connectclient instead of startclient
change ` arc ` variable type from ` int ` to ` float ` and adjust its usage in ` LineBorder . java ` to improve precision
added a check for empty gallery images in PostGalleryTypeImageRecyclerViewAdapter to prevent potential errors when processing empty images
added ` DEPLOYMENT _ ID ` column to the ` CreateDatabaseChangeLogTableGenerator ` and removed the ` NotNullConstraint ` constraint to
pdfbox - 4071 : use interactive form instead of fdf for example
removed the ` moreColumnOk ` parameter from the ` getIndex ` and ` canUseIndex ` methods in ` AlterTableAddConstraint .
added provisional engine management to QuickfixjComponent and updated related tests to utilize these engines to enhance flexibility in managing multiple Quickfix
added a new boolean field ` displayZoomControls ` and modified the ` setMixedContentMode ` method to accept a ` mixedContentMode `
added corporea block , brick , slab , corporea slab , and corporea slab . close # 161
refactor ConnectionFactory class for improved connection management to enhance performance and maintainability of connection handling
added a method ` EnableDisableMenuItems ( ) ` to set icon for menu items based on user settings to improve menu item visibility based on
updated the message resource from ` file _ list _ empty _ headline _ server _ search ` to ` file _ list _ empty _ favorite
hhh - 14836 - fix test failure cause by hibernate 2.7 . 0 upgrade
updated MotorMountConfigurationPanel to use subpanel instead of ' this ' for creating a new MotorMountConfigurationPanel to improve
updated LINE _ SEPARATOR initialization from System . lineSeparator ( ) to System . getProperty ( " line . separator " ) to ensure consistency in line separator
added getter and setter methods for creator and subject in POIXMLProperties . java and updated test cases in TestPOIXMLProperties . java
reformatted the doStop ( ) method call in HandlerWrapper . java to improve code readability and maintain consistency
[ java ] avoid infinite loop on empty cnc file .
rename ` NonMarkedFoo ` and ` MarkedFoo ` classes to ` FooCommand ` and ` FooCommand ` , respectively ,
added methods to check and de - class names based on the presence of the " jmods " class in the classpath to ensure proper handling of
updated ` TreeBackedElement ` , ` TreeBackedEnter ` , ` TreeBackedPackageElement ` , and ` TreeBacked
updated tokenRequest initialization in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest with request parameters
[ hotfix ] fix arrayindexoutofboundsexception in abstractfrompropertyvaluerangedescriptor
added synchronization methods to ZKAssign and ZooKeeperWatcher classes to ensure proper synchronization of ZooKeeper nodes
[ add ] check for egl _ no _ context in glutil # getcurrentcontext ( )
[ drools - 1342 ] fix npe when remove activation from ruleflowgroup
added a return statement to the HystrixDashboardConfiguration class to ensure proper termination of the method execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertion in IoTDBPipeIT . java to improve error handling and
move clientqueuedisruptiontest to cleanup after each test
refactor : replace signatureprinter with defaultjavaprettyprinter in ctreferenceimpl
changed the visibility of the validateInstance method from public to protected to allow subclasses to access and override validation logic
updated import statements for GeoPointField , GeoPointTokenStream , and TermEnum in GeoPointInPolygonQuery and GeoPointNumericTermsEnum
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` to use it instead of mocking ` Buildable
fix nullpointerexception cause by itemstack . isempty ( )
updated references from " rule path " to " rule timeseries " in ` TSParser . java ` and ` SQLParserTest . java ` to
added a check to return 0 if the velocity is less than the threshold in TubeCalc . java to ensure that a non - negative velocity
replaced calls to ` getBucket ( gcsUri ) ` with ` _ storage . create ( BlobId . of ( ) , path ) `
removed redundant call to ` VertxUtils . blockCloseVertxByName ( " transport " ) ` in ` TestHighwayTransport . java
mondrian : dbtriggerbasedhistoryddl - drop history view if exists and column name be not null ( e . g .
updated test parameters from 2 to 3 in CarrotClusteringEngineTest . java to increase test coverage for the clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need to be rewritten
updated ` ParserCacheCommand ` to use ` ParserStateObjectInputStream ` for deserialization and added a new class ` ParserStateObjectInputStream ` to
added null checks and default value for objectQuotingStrategy in ChangeSet and DatabaseChangeLog classes to ensure proper handling of object quoting strategy based on
changed MetainfoParser . parse ( zipFile ) to MetainfoParser . fromXmlStream ( zipFile ) in SliderAppsViewControllerImpl .
deleted the CsrfControllerAdvice . java file to remove unused configuration to streamline the codebase
added a method to quote path lists in AntCompiler . java to improve path handling by ensuring paths are properly quoted
added a scrim animation feature to the launcher for resuming from action screen off to improve user experience by providing smoother transitions during app
updated the integer parsing logic in TypeInferenceUtils and added new test cases in TypeInferenceUtilsTest to improve type inference accuracy and enhance test coverage
regenerate client with updated copyright year ( # 4382 )
added support for parsing various Windows path prefixes in WindowsPathParser . java and corresponding tests in PathOps . java to ensure proper handling of path
replaced InetSocketAddress instantiation with direct instantiation of MulticastSocket to simplify the code and improve readability
removed duplicate calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
changed return value from nBits to nBits . clone ( ) in IndexColorModel . java to ensure that the returned values are not modified
changed the visibility of the ` deriveCollectorName ` method from private to protected in ` ProfilerCollector . java ` and added new test cases in
refactor type hint logic in MappingMongoConverter to use a dedicated method to improve code readability and maintainability
added performance measurement for proxy factory creation in ProxyMaker to enhance performance tracking for proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting and provide more context for connection issues
refactor reinflateWidgetsIfNecessary ( ) method to be accessible from Workspace and LauncherModel classes to improve widget management by encapsulating
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog window to ensure proper functionality of file dialog
lwjgl2 : do n ' t call display . update ( ) in lwjglabstractdisplay when it ' s renderable
add a test case to show a picture in the instructor student list page
added environment variable handling to TestIgnorance . java to improve test execution by excluding certain tests based on environment variables
removed the pointer parameter from the fling method signature to simplify the method signature by eliminating unnecessary parameters
added null check for pageable in QueryDslJpaRepository and implemented a test for null pageable in QueryDslJpaRepository
added a new method ` computeMemorySize ( double fraction ) ` to the ` MemoryManager ` class and corresponding tests in ` MemoryManagerTest
try to fix test which randomly fail on slow ci server
refactor SnowballAnalyzer to improve code readability to enhance maintainability and facilitate future updates
update previousIndex initialization and remove unnecessary null checks in StreamingAggTemplate . java to improve code clarity and ensure proper handling of batch processing
bytecodeparser : throw graalerror when plugin need to be null check .
added a default method ` stream ` to ` StreamSupplierComponent ` that utilizes ` computeIntensityDefault ( ) ` to enhance stream processing capabilities
updated log messages to reflect that the watched file was fully played and added a retry mechanism to improve error handling and provide clearer feedback on
updated methods in InjectorProxy and StandardInjectorProxy to accept constructor arguments and changed access modifiers in InjectorTest to public to enhance flexibility in creating
[ hotfix ] [ table - planner - blink ] remove unnecessary close ( ) call from flinkstreamingcreatefunction
added unit tests for various SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest to ensure proper functionality and error handling for
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of
updated test data in NamedSetTest . java to include Quality Distribution and Deliberate error information to enhance clarity and accuracy of test
added a condition to handle WebSocket reconnecting in DeconzBridgeHandler . java and updated connection state management in WebSocketConnection . java to improve
replaced ` setAttribute ` with ` removeAttribute ` for ACEGI _ SECURITY _ AUTHENTICATION _ KEY and ACEGI _ SECURITY _
hbase - 15836 testregionreplicareplicationendpoint # testreplicareplicareplicationendpoint should retry create table with retries (
added initialization and configuration for PMS in FormatRecognitionTest . java to ensure proper handling of PMS settings during recognition tests
cloudstack - 3552 : add vm data disk template creation event to objectindatastoremanagerimpl ( # 3558 )
updated test annotations and imports in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 and SpringJUnit4ClassRunner to
added @ Override annotations to multiple authentication service classes to ensure proper method overriding and improve code clarity
updated table and column names from ` metricVal ` to ` metricVal1 ` in ` AppendOnlySchemaIT . java ` and modified associated
added a check to ensure deleted documents match the segment document count to prevent runtime errors due to incorrect document counts
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5635 : add a
[ java ] add a small length of 0.9 for staves w / no starting barline .
changed the default value of ` handleFileUploads ` from ` true ` to ` false ` in ` VertxPlatformHttpServerConfiguration ` to
added a test for the default CSRF protection matcher in CsrfFilter to ensure proper handling of access denied methods in the CSRF filter
replaced the static class ` Fields ` with a local variable ` field ` in ` HotSpotMethodHandleAccessProvider ` to improve code
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions
fix fileio . withwatermark ( ) to respect watermark
( chore ) camel - sqm : make ctedefinition field non - final
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable handling of ResultSetMetaData in the query compilation process
updated the argument name from " -- out " to " -- root " in JsLibrary . java to ensure the correct root path is used for
update angle slider position from 180 degrees to 180 degrees in RailButtonConfig . java to improve accuracy of angle representation for better user experience
updated drawEncloser position from y8f to y9f in OverlayRenderer . java and refactored save handling in Saves
added support for expression language in KerberosProperties to enable support for expression language in the application
removed conditional checks for remoteMountPointComponent before setting its translation and rotationDegrees in ThirdPersonRemoteClientSystem . java to streamline code
updated ` setupViews ` and ` setupViews ` methods to include ` ScrimView ` for improved animation progress handling to enhance the
[ flink - 16405 ] [ state - backend ] add option to disable periodic materialization
added a ` value ` field with getter and setter methods to the ` ProtocolParameter ` class and updated the ` List ` and ` ParamTag
add a test case for chunking with header .
added a boolean flag ` isBumped ` and modified the ` parseDetails ` method to return a boolean indicating success or failure to improve error
added " Content - Type " header with value " application / x - www - form - urlencoded " in SwitchToPostInterceptor and Search
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging for ignored setFetchSize method in PhoenixResultSet . java to improve error handling and provide a warning log when it is
initialize net with null parameters in AndroidDaydream . java to ensure proper initialization of AndroidNet instances
[ hotfix ] [ table - common ] fix checkstyle violation in llaprealsegmentdatamanager
removed the ' false ' parameter from the ` getDepositAddresses ` calls in ` KrakenAccountService . java ` to simplify the
removed the import of PrefixTreeCodec from TableMapReduceUtil . java to streamline the code by eliminating unnecessary dependencies
added a boolean flag to handle inflation failure in DesignerActivity and made the root variable final in XMLLayoutInflater to improve error handling
refactor PushbackInputStream to improve code readability to enhance maintainability and facilitate future updates
make loweringphase only process lowerable node when necessary .
updated the error message format from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to accurately
makefiles . makefile support \ r \ n and \ \ with \ \ n
replaced direct usage of reader ' s deleted documents with MultiFields ' s getDeletedDocs method to improve consistency and reduce potential null pointer exceptions
replaced ` super . setTransformRefresh ( ) ` with ` setBoundRefresh ( ) ` in ` SimpleBatchNode . java ` to
[ gr - 3640 ] remove dependency on isguaranteedsafepoints ( ) from sharedmethod .
added framebuffer size callbacks for window size changes in LwjglWindow . java to enable proper handling of window size changes and ensure proper
updated animations in LauncherAppTransitionManagerImpl to use ' mRecentsTransX / 2 ' instead of ' v . getTranslationX (
refactor ` LiteralNode ` to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and update related methods accordingly to improve handling of
added methods to set file length in FSDirectory and IndexOutput classes and updated totalSize calculation in CompoundFileWriter to improve file management and ensure correct
updated manifest handling in AndroidNdkScriptGenerator , AntScriptGenerator , and LwjglDebugStarter classes to improve manifest management and
camel - 15836 - camel - aws2 - s3 : use sourcebucket / sourcekey instead of copysource / copysource to
added permission check for " * " role in RuleBasedAuthorizationPlugin and updated collection request handling in TestRuleBasedAuthorizationPlugin to enhance security by
updated ZookeeperClientServerRegisterRepository to include event type handling and improved null and empty checks for data to enhance the registration process and ensure
renamed methods and classes related to deep stubs in ReturnsDeepStubs . java for clarity and consistency to improve code readability and
modify contract call value handling to return a default value if there are no call values to ensure that a zero value is returned when the contract is
fix checkstyle issue in util / bibentry / bibentry . java ( # 1358 )
updated the PBE algorithm from " PBEWithHmacSHA1AndAES _ 128 " to " PBEWithDESede " and
pdfbox - 4892 : improve tiff validation , a suggest by valerybokov
added validation for job parameters in CommandLineJobRunner to ensure that only valid job parameters are provided to improve error messaging for invalid job parameters
updated assertions in SmtpTests . java and MailTests . java to check for " foo " instead of " \ r \ n " to
updated case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for incrementing and updating sequence IDs to improve thread safety and maintainability of sequence ID
added a new file ` Test . java ` containing a class ` Test ` with a method ` sum ` to calculate and print the sum of
updated the minimum and maximum SDK version in ShadowWifiManagerTest and changed private variables to protected in WifiUsabilityStatsEntryBuilder to
added a new file ` Solution . java ` that implements a solution for sorting an array based on a specified index to provide a solution for validating
use concurrenthashmap instead of map to avoid npe
refactor taskbar recreation logic in TaskbarManager . java to improve readability and maintainability to enhance code clarity and maintainability
refactor SyncFutureCache class for improved synchronization logic to enhance performance and maintainability of future caching
updated DUBBO protocol version from 2.0 . 1 to 2.0 . 2 and loWEST _ VERSION _ FOR _ RESPONSE _
[ java ] uselessstringvalueof : fix false positive with string literal
add a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the behavior
[ hollowproducer ] add target max type shard size parameter to hollowproducer .
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
refactor CompilationTask to improve code structure to enhance maintainability and readability of the code
updated database parameter handling in DDLTask . java and TestSemanticAnalysis . java to improve clarity and ensure correct location is displayed in test
added a call to ` ClearDatabaseChangeLogTableStatement ` in ` AbstractJdbcDatabase ` to enable clearing of the database change log table for
updated RestClient and CallPath to handle versioning and improved path comparison logic to enhance functionality to support versioning in REST requests and enhance
updated error messages and synchronized the ` close ` method in ` PhoenixDriver . java ` to improve clarity in error reporting and
rename toolbarmenu . mesurement to toolbarmenu . measurement , fix javadocs
added file deletion and screenshot tests in FolderPickerActivityIT and modified visibility settings in FolderPickerActivity and UploadFilesActivity to enhance test coverage and
[ gr - 3640 ] fix nullpointerexception when run in dev mode .
added a check for the length of the copy string in StringHelper . java and created a test for removing leading and ending quotes in StringHelperTest .
updated JpaQueryCreator to handle both NOT _ LIKE and NOT _ CONTAINING types and improved exception message formatting to enhance code read
do n ' t send push _ branch _ id if authentication delay > 25 second
added a dispatch call for processing P25 messages in P25MessageFramer to enhance message processing by properly dispatching messages
added null check for handler before calling checkClosed ( ) in WebSocketImpl . java to ensure proper handling of WebSocket handlers when the socket is closed
[ ds - 3952 ] fix discoveryit and indexeventconsumer so that it do n ' t have to call restoreauthsystemstate
updated widget padding calculations in AppWidgetResizeFrame . java , Launcher . java , and LauncherAppWidgetHostView . java to use
added a method to hide all apps in the taskbar and invoked it during overlay closure to improve user experience by ensuring the taskbar closes appropriately when the overlay is dismissed
removed synchronization from the launch method and replaced a sleep with a join method to improve thread management and ensure proper termination of the launcher
updated the calculation of the Point object by incorporating the canvas ' s coordinates to ensure accurate positioning by accounting for the canvas
replaced notificationManager ' s notify method with startForeground method and added a condition to stop the foreground if the upload size is zero to improve
fixed bug 1371930 - excessive public count no longer throw a runtimeexception when use static final
hbase - 2598 testthrifthbaseservicehandler should increase the number of retries in case of failure
change log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity and improve performance
added error handling for FileNotFoundException in ResourceUtils . java and changed log level from debug to trace in AbstractCipherExecutor . java to improve error logging
added BittrexTickersResponse class and updated BittrexMarketDataServiceRaw and BittrexMarketDataServiceRaw to
refactor enumConstants handling in EntityEntry . java to improve type safety and encapsulation to enhance code clarity and maintainability by centralizing
replaced Class < ? > references with Object in multiple session registration methods to improve type safety by using Object instead of Class
added Unicode escape sequences to the character array in FileUtils . java to enhance character encoding compatibility for improved text readability
added stylesheet management methods and updated content retrieval logic in ResourceService , ResourceHandler , and DefaultServlet to enhance flexibility in managing stylesheet resources and
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before use
changed the method call from ` ObjectParameterStrategy . java ` to ` PointerParameterStrategy . java ` in ` X86MethodGenerator . java
changed the database type check from Postgres to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockroach
removed the condition checking for enum names in ObjectStreamClass . java to simplify the class name validation logic
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and created a new class ` SymbolNotFoundError
refactor document retrieval logic in BinaryResponseWriter . java to handle single and multiple field cases to improve flexibility in document retrieval based on the
added WebSocket ping and pong handling in WebSocketImplBase . java and implemented a test for pause functionality in WebSocketTest . java to enhance WebSocket control
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in regular expressions
added cache configuration for DNS resolution in DnsResolverProvider . java and updated related tests in HostnameResolutionTest . java to improve cache management and enhance
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration . java to ensure that messaging tracing functionality is only applied when the messaging class is available
mondrian : fix for mondrian - 977 , mondrian - 977 , mondrian -
updated import statements in IDELanguageClientImpl , EditorTextActionMode , and IDEEditor classes to streamline dependencies and improve code organization
added a condition to handle ' / ' in XMLLightweightParser to set the status to VERIFY _ CLOSE _ TAG to ensure proper parsing
set the visibility of the TouchCharInput to GONE to improve user experience by preventing unintended behavior
added null check for the current user before comparing IDs to prevent potential NullPointerException when the current user is null
refactor JSObjectLinker to handle index - based assignment correctly to improve code clarity and ensure proper assignment of members based on the index
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to use a unified setSuffix method to improve code clarity and
added @ Deprecated annotation to SecurityConfig . java to mark the class as outdated to indicate that the class should no longer be used in future development
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used in future development
deleted the JoglDebugAdaptor . java file and modified its usage in RocketFigure3d . java and GuiceStartup .
added ` toString ( ) ` methods for ` ExtraFieldPropagation ` and ` AWSPropagation ` classes to improve string representation of ` ExtraFieldPropagation
updated ` mNotification . contentIntent ` to use ` PendingIntent . FLAG _ UPDATE _ CURRENT ` in both ` FileDownloader . java
added a private method ` set ( ) ` and modified the ` nextOrd ( ) ` implementation in ` Lucene80DocValuesProducer `
refactor DateTimeFormatter class for improved date formatting to enhance code readability and maintainability
removed unnecessary class loading for shell folder manager in WToolkit . java to streamline code by eliminating unnecessary class loading
added null and empty checks for the administrator credential principal and keytab in the setAdministratorCredentials method to ensure that the administrator credentials must be
added a constant for maximum screen width scale and updated width calculation for tablet and two - panel devices to ensure the widget width does not exceed available
added pgl . beginrender ( ) and pgl . endrender ( sketch . windowcolor ( ) ) in psurfacejogl
refactor Hashing class to improve code readability to enhance maintainability and ease of future updates
updated the ` accept ` method to use ` Files . getBaseName ( ) ` instead of ` String ` for file name matching to improve accuracy
updated the ` addToListIfNeeded ` method to include a ` contentDescriptionInt ` parameter and added a new ` iconContentDescription ` field to
remove unused variable newType and its initialization to streamline code by eliminating unnecessary null checks
increased the ACTIVITY _ START _ DELAY from 500 to 800 milliseconds to improve responsiveness by allowing more time for
added a constant WEBAPP _ HOME to the SolrJettyTestBase class and updated the JettyWebappTest to use it to improve
set selectedMotorSet to null and clear selection logic in ThrustCurveMotorSelectionPanel . java to ensure proper handling of motor
added BufferUtil import and called clearToFill method to ByteBufferPool to ensure buffer data is cleared before use
[ api ] fix bug in process notification rule .
updated LDAP configuration keys from " authorization " to " authentication " to align with the new authentication standards
added deleteExchange and queueDelete methods in DurableOnTransient . java to ensure proper handling of exchange deletion and queue deletion
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
refactor connection handling in PingService and ServerInfoService to use a listener for error handling to improve error reporting for connection failures and provide clear
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
[ hotfix ] fix checkstyle violation in quartz2adapter
added exception handling to the lookup method in SulongLibrary . java to improve robustness by handling IllegalStateExceptions
updated schema references from Spring Security 6.2 to 6.3 across multiple files to ensure compatibility with the latest Spring Security features and improv
updated ` newNameResolver ` method to accept ` Args ` instead of ` Helper ` and modified ` DiscoveryClientNameResolver ` to utilize `
added a check to ensure newAnnotations is not empty before converting them to JCAnnotation and introduced a new method for determining the earlier position to ensure
added " com . sun . naming . internal . " to the import statements in CheckPackageAccess . java to ensure proper package access for internal
changed the strict variable from false to true in StaxEventItemReader . java to enable strict mode for event processing
added an ` isExhausted ` boolean to the ` OfflineSorter ` class and modified the ` readPartition ` method to accept it to
refactor ActionResetingPool to improve code readability to enhance maintainability and facilitate future updates
added a check for whether the light is in XY mode before converting it toHSBType to ensure proper handling of non - XY color modes
refactor ` getFolderCreationRadius ` and ` getFolderCreationRadius ` methods to accept an array of target cells and improve folder creation logic to enhance
added import for FileDisplayActivity and replaced direct calls to showLoadingDialog ( ) in FileDetailFragment and OCFileListFragment to streamline
added null checks for uigestureFile before loading LogReader to avoid potential NullPointerExceptions when uigestureFile is not present
updated name comparisons in FieldNamingPolicyTest to use Locale . getDefault ( ) for case - insensitivity to ensure consistent behavior across different locales
added listeners to the result object in XmlSuite . java to enable listener management for improved test coverage
added a new method ` loadWithNewGlobal ` to manage global context loading to enhance functionality by allowing dynamic loading of global context
added JSON serialization methods to ` StarTreeIndexSpec ` and updated ` TableConfigTest ` to use these new methods to improve JSON handling
added import statement for ObjectPostProcessorConfiguration in HeadersConfigurer . java to enable ObjectPostProcessorConfiguration for improved security configuration management
replace double quotes with single quotes in string replacement methods across multiple files to improve code readability and reduce potential errors in string replacement operations
[ drools - 1342 ] fix npe when use in operator with null fire
added FieldCache import and commit method in TestDistributedSearch . java to ensure that there ' s more than one segment and avoid FC
add test case for boundary message event on process instance and sub - processes
add support for resolve static call in pointer analysis .
http : / / issues . apache . org / jira / browse / amq - 4238 - add a messagegrouphashbucket
added constants for slot IDs and replaced boolean fips with slotId in Secmod . java to improve code readability and maintainability by using
added alignment parameter to the add method in Layout . java and modified the mouse button method in GdxRenderer . java to enhance flexibility in
[ hotfix ] [ test ] ignore unalignedcheckpointitcase for now
added imports and a conditional check to return null for certain classes in JDK13Services . java to enhance functionality by ensuring only valid classes are processed
added a check for the existence of a keyword in the keywordToReference map before adding it to the map to ensure only valid keyword references are
camel - 16465 : fix a bug in the multicast eip that cause the size of the exchange pair to be set to zero .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to improve code cleanliness and maintainability
escape equal character in statsd metric ( # 644 )
add a udp port to the member object to allow the client to broadcast on the same multicast address .
renamed ` OperatorMulticast ` to ` OperationMulticast ` and updated references accordingly to improve clarity and consistency in naming conventions
increased send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time for
added a try - finally block around the assertion and latch countdown in VertxTestBase . java to ensure proper resource management and prevent potential
added a synchronized ` destroy ` method to reset the cached event listener registry in ` SessionFactoryServiceRegistryImpl ` to ensure proper cleanup of the
danielwagnerhall : fix unit test for firefox
[ pytorch ] add test for tuple and map of tensor ( # 1193 )
added a task stack change listener to clear the force invisible flag during a pinned animation in RecentsView to enhance user experience by managing the
pdfbox - 4892 : improve performance of defaultsplitcharacter . checkdatepattern ( )
camel - 14263 : camel - cxf should set property on factory bean if not already set
refactor pending animation handling by extracting logic into a separate method to improve code readability and maintainability
added debug logging and adjusted play time calculation in LauncherAnimationRunner . java to improve debugging and ensure accurate play time handling for animations
added a conditional check for the BailoutOnException option in C1XCompilation . java and introduced a new BailoutOnException
updated signup and password fields to null and changed assertions from " / create _ account " and " / forgot _ password " to null
[ hotfix ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
change the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and introduce a new method ` getOnlyFormat ` to
added NoDataContainer to the GeoTiffReader and its test to enable garbage collection of no - data data in the image rendering process
sulong : fix npe in sulong write with no source section
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and `
replaced the ` blockUntilConnected ( ) ` method with a ` CountDownLatch ` listener to ensure proper synchronization of connection states in the
added null checks for ResultSet and CallableStatement in ArrayTypeHandler to enhance robustness by preventing potential NullPointerExceptions
replaced the RegexpTunnel class with a direct method for retrieving the prefix from the REProgram class to improve flexibility and maintainability of the
updated the application picking method to use the Application class instead of null to ensure compatibility with the latest application configuration
[ drools - 725 ] avoid npe when use a mutable global during incremental compilation
replaced Preconditions checks with TransactionUtil validation for asset name , URL , and description in AssetIssueActuator . java to ensure only valid asset
make copypast work even if there be no parent
updated label and description in LGWebOSActions and LGWebOSUpnpDiscoveryParticipant , and modified status messages in LGWeb
replaced individual node setting methods with bulk addition methods for seed , active , and trust nodes to enhance code readability and maintainability by redu
updated assertions in BaseTokenStreamTestCase to include additional context and changed thread handling logic to improve test clarity and ensure proper error reporting for
log4j2 - 1343 : add modulate option to timebasedtriggeringpolicy .
refactor ` performItemClick ` and ` findIndexOfItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView `
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a method to handle ` loopScope ` and implemented ` afterMethodScope ` in ` GraphDecoder ` and ` PEGraphDecoder ` to
refactor HttpSessionDestroyedEvent to use getSession ( ) and enhance attribute handling to improve session management and enhance test coverage for security contexts
add a test for changing the service name in Zipkin to the manually provide one to ensure that the service name changes correctly in the Zipkin
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory , and modified spooling - to - jar logic
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming con
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow more time for lock acquisition to complete before
added a new cache capacity parameter to the ConfluentSchemaRegistryDeserializerProvider class and updated related methods to use it to improve cache management and
renamed the JCheckBox ' remind ' to ' checkAtStartup ' and updated its tooltip text to improve clarity and user experience by
added multiple method declarations for various key and value strength types in NodeGenerator . java to enhance the functionality of the NodeGenerator to include additional parameter
hhh - 14650 - fix bug in cascadingactions when entity be transient
added support for the ` __ proto __ ` property in the ` ScriptObject ` class to enable proper handling of prototype properties in the script execution
changed the default read mode from heap to mmap in CommonConstants . java and modified how the ImmutableSegmentImpl is instantiated in ImmutableSegmentLoader .
added import for ByteArrayTemplate and modified return logic in ArrayTemplateBuilder . java to utilize ByteArrayTemplate for byte - based template handling
added Hipchat configuration to the SamlServiceProviderProperties and created a new class CasSamlSPHipchatConfiguration to enhance SAML service provider
replaced the List of commandRegistryUrls with a Set of commandRegistryUrls and updated resource retrieval logic to ensure unique command registry URLs and improve
updated warning log message to include context for uncovered HTTP methods and added debug logging for uncovered HTTP methods to improve clarity of
camel - 16400 : camel - ftp - allow to log in via ftp . thanks to jooby for the patch .
camel - 14836 : camel - activemq - do not create transaction manager when session be not transacted
cloudstack - 7803 : fix npe in vmwareresource . java when host name be different from host name
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to
deprecated multiple token type constants in UAX29URLEmailTokenizer and updated their usage in tests to ensure compatibility with the latest Lucene version
removed the ` Map < Object , Object > ` interface from the ` ScriptObject ` class and updated references accordingly to simplify the class structure and
refactor EventBusMetrics class for improved clarity to enhance maintainability and readability of the code
refactor : move i18nutil . getsupportedlocale ( eperson ) to i18nutil . epersonlocale ( ep
remove @ postconstruct from javerstransactionaldecorator and implement initializingbean directly
removed null check for pgTypeName before adding it to the _ pgNameToSQLType map to simplify code by eliminating unnecessary null check
added multiple server settings for multiple handlers in ScopedHandlerTest . java to ensure proper server configuration for multiple handlers
make calltimeoutexception a no - op in wait - notify
replaced ` StringUtils . isBlank ( ) ` with ` StringUtils . isEmpty ( ) ` for username and password validation to improve code readability and
updated permission check to compare against " * " instead of an empty string to enhance clarity in permission validation logic
rename ` encoding ` to ` sourceCharset ` and update related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity and
changed the data type of postLogin from byte [ ] to String in HostBean and HostDatabase classes to improve flexibility in handling postLogin
refactor simulation and parameter handling in GeneralOptimizationDialog . java for improved clarity and consistency to enhance code readability and maintainability
camel - 17836 : camel - jbang - allow to turn off context reload in camelcontext .
updated log level and logger configurations in CommonTestUtils . java to improve logging configuration and enhance logging clarity
[ hotfix ] [ test ] fix checkstyle violation in processexizessanitycheck
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added support for input stream content type checking in RequestBody and created a corresponding test in RequestBodyTest to ensure proper handling of unsupported input streams
added a check for enabled embedded settings in the EmbeddedNeo4jServer and updated related logic in DefaultBeanContext and TypeArgumentQualifier to
movementdebugcommand : restore the player ' s health and movement speed when the player go through the player .
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and modified its implementation to accommodate a half - length
refactor GsonParser to simplify cache string handling and improve timestamp validation logic to enhance code readability and maintainability by reducing unnecessary string concatenation
added comments to parameters in ApacheHttpClientMediaWikiApi . java to clarify sorting behavior for better debugging and tracking
replaced instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` across multiple files to standardize transaction
refactor PipeTaskCoordinator to use PipeTaskCoordinatorLock instead of ReentrantLock and introduce a new PipeTaskCoordinatorLock class to
modify DependencyJar creation logic to conditionally use preinstrumented jars based on system property to allow users to choose between preinstrumented jars and
modified the conditional check from ` ! isSilent ` to ` isSilent ` in ` ExecDriver . java ` to ensure proper handling of silent
added validation to ensure DYNAMIC _ FIELD can not have a default value or be required to prevent runtime errors due to unsupported attributes on dynamic fields
do n ' t randomly read repair command if it ' s not necessary
replaced ImmutableSortedSet with Iterables and updated the method for adding system include roots to improve code readability and ensure correct handling of include directories
modified ` AdaptableX509CertSelector ` to initialize ` startDate ` and ` endDate ` as non - null and added ` isSKID
log4j2 - 1343 simplify nosqlappender to use abstractappender . parseint ( string , 0 )
marked GuiScreenEvent as deprecated to indicate that this feature should no longer be used in 1.16
modified methods for adding , removing , and adding new categories in CategoryEditSearchRecyclerViewAdapter to improve category management functionality in the RecyclerView
# 163 - add servercachetype . load ( ) and getloaded ( ) to cache bean ( # 163 )
updated massOverriddenBy and CDOverriddenBy assignments to be set to null for each child of the RocketComponent to ensure proper
refactor ` JavaCompilerService ` , ` SynchronizedTask ` , and ` JavaDiagnosticProvider ` to use ` post ` instead of `
refactor ` Task ` class to use a ` Supplier < V > ` for improved flexibility to enhance code readability and maintainability
refactor WanReplicationServiceImpl to use a mutex for thread safety and encapsulate the StripedExecutor initialization to improve thread safety and ensure
added null checks for location and table location in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
refactor lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java for improved readability to enhance code clarity
added a new test file ` FilesTest . java ` and a static method ` delete ` in ` Files . java ` to validate file deletion
removed exception handling around socket closing in ServerSocketAdaptor and SocketAdaptor to simplify resource management and improve error handling
update class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replace currentWorkingDirectoryList . clear ( ) and addWorkingDir ( f ) with addWorkingDir ( f . toString ( ) ) to
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of
changed the visibility of the static String variable from public to private to restrict access to the static string for better encapsulation
updated Java command - line arguments for CSV and JSON jar files in SimplePostTool . java to ensure compatibility with the latest Solr API changes
apps - 3246 make sure max and min command always have symbolic toggle
refactor client container startup and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and
updated conditional check from ` type ` to ` type ` in ` Linux . java ` to ensure correct handling of null values in the application type
ensure that the web application context be clean up after each test
added a method to retrieve search strings from a query URI and updated resource retrieval logic to enhance search functionality by allowing users to specify a search string
hide the neutral button in the SetupEncryptionDialogFragment to improve user experience by preventing unnecessary visibility changes
hhh - 14829 : add parameter to itemdaoimpl # countitems and itemdaoimpl # countnotarchiveditems
updated SQL statements to use double quotes for table and column descriptions to improve readability and maintain consistency in SQL syntax
added exception handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error management and logging for better debugging
refactor multiple Java classes to improve code structure and enhance readability to enhance maintainability and clarity of the codebase
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use parameterized HTTP methods and changed method names for clarity to improve code read
updated dismiss delay from 20000ms to 10000ms in ExtractionModelFrame . java and DataBrowser . java , and added tooltip text in
add an option to disable run single test method with junit 5 .
change exception handling from HumanReadableException to RuntimeException in WorkerShellStep . java to improve error handling clarity and provide more specific runtime exceptions
[ hotfix ] [ table - common ] introduce experimental annotation for flink - core
[ hotfix ] fix checkstyle violation in streamcepstrumsource
update index handling in List . java to ensure proper bounds checking to prevent index out - of - bounds errors
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure compatibility with the JQL parser ' s expression syntax
added confirmation and requiredType to the DebugPaste command to enhance user experience by providing confirmation options for debug paste commands
replaced calls to ` . get ( ) ` with ` . orElseThrow ( ) ` in multiple configuration classes to improve error handling by throwing
ggb - 227 fix focus problem on the first element in the form
updated imports and refactored ` GoBinaryDescription ` to use new ` AbstractGoBinaryDescriptionArg ` and ` AbstractGoBinaryDescriptionArg
added logic to retrieve the application environment environment and logback classpath if it exists to improve logging functionality by allowing dynamic configuration of application environment
refactor ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduce ` SecondDummyRetryListener
fix ( e ) : add decimal to counter output ( # 498 )
refactor Contribution class to use final fields for email , author , and commits to improve immutability and clarity of the Contribution
replaced a for loop with a do - while loop to append a period at the end of the string to improve performance by avoiding unnecessary
refactor how elements are retrieved and instantiated from the fields map to improve type safety and avoid potential ClassCastException
updated error messages in StaxEventItemReader to include resource URL to improve clarity of error reporting for better debugging
jme3 - testmultirendertarget now use pointlight [ ] instead of geometry . sphere .
updated ` DelegatedAuthenticationClientLogoutAction ` to handle null ` currentProfile ` and added a debug log statement to improve error handling and provide
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the correct namespace declaration is
added BigInteger and DSAParameterSpec handling in KeyStoreManager . java to enhance security by integrating cryptographic operations and parameter specifications
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
add engine version to process definition when deploy a process
updated property names in ` SpecificCompiler . java ` for clarity and consistency to improve code readability and maintainability by using more descriptive
updated thread verification logic in CEntryPointSnippets . java and added new methods in VMThreads . java to enhance thread verification capabilities and improve
added null check for the map before accessing its values in GenericUDFMapValues . java and created a new test class TestGenericUDF
rename ' interceptors ' to ' handlerInterceptors ' in EndpointWebMvcAutoConfigurationTests . java to improve clarity by accurately reflecting the
add config property to disable oil well generation and spout
added functionality to check for the existence of the " . clean - me " directory in the ImportContext and JobQueue classes to ensure the cleanup
[ ci ] fix npe in memoryrealm . readxml
removed unused import statements from CRLDistributionPointRevocationCheckerTests . java to streamline code by eliminating unnecessary dependencies
added constants for ZIP file extensions and EXTT flags in ZipConstants64 . java and updated ZipEntry . java to include these constants to enhance zip
refactor ` newFileSystem ` methods to improve file validation and error handling to enhance robustness by ensuring only valid file types are processed
replaced ` createHorizontalStrut ` with ` createHorizontalGlue ` in ` IfControllerPanel . java ` to improve readability and
added an @ Override annotation to the connection initialization in FailoverUpdateURIsTest . java to ensure proper method overriding and maintain consistency in connection
added Gson @ SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enhance JSON
[ add ] databaseadapter . deletescreenbook ( ) - delete book only if the file be delete
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
fix off - by - one error in ajp response message processing .
do n ' t start / stop the admin console server when shut down the admin console .
removed duplicate unregisterHandlers ( ) method and refactored related code to improve code readability and maintainability
added configuration properties for device ID transformation method , ID table enablement , and ID table log file in IoTDBDescriptor to enhance configuration flexibility
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and introduced a new DelayingSearchComponent class to improve test performance and enhance
updated the condition for determining if the access error is not null to ensure that the test accurately verifies the status of the access error
refactor script handling in Transaction and TransactionTest classes to use a consistent variable for the witness script to improve code readability and maintainability by
updated the expression to include " / schema / types / fieldType " alongside " / schema / types / fieldtype " to enhance schema
updated the Completer logic to include a check for NullCompleter instances and added a new OptionCompleterTest class to enhance the completer functionality
fix the bug that s3utils . listobjects do n ' t return the object list correctly
changed the type of ` sourcePeerId ` and related methods from ` String ` to ` int ` across multiple classes to allow for better data
refactor file upload logic to handle zip file uploads more robustly to improve robustness and error handling during file uploads
updated the alpha value of the replyButton from 0.5 f to 1.0 f to improve the visual appearance of the reply button
[ hotfix ] [ test ] fix test failure in accesslogsupporttest
marycachetest : move testfiles - deleteme to tmp directory
removed null checks for subscribers and initialized the subscribers list directly to simplify code and improve readability by eliminating unnecessary null checks
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed initialization exception handling in AbstractSaml10ResponseView . java to
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve logging consistency and error handling
added a condition to check if the asset directory exists in dev mode and updated tests for static directory handling to ensure proper handling of file paths in
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend
updated the default format string from " value - tag - index " to " value - index " to ensure consistency in naming conventions
fix dijkstrabi and douglas . minprecision hint not work
set native secp256k1 and altbn128 to true by default ( # 1193 )
rename DuclsSandboxTest to SandboxTest in multiple test files to improve clarity and consistency in naming conventions
camel - 3563 : camel - cxf do not log stacktraces to stderr .
make forwardpropagatetree public so we can use it
changed the grouping parameters in the SQL query from ` 0 , 0 , [ 0 , 100 ] ` to ` 20 , 20ms ` to
improve error message if $ { project . basedir } be use in profile activation
refactor Style class to improve code readability to enhance maintainability and ease of future updates
added zoom functionality for the back key in ShareActivity to enhance user experience by allowing zoom out fab to enhance user experience by allowing users to
added a condition to skip reading and ignoring deprecated fields in Json . java to ensure proper handling of deprecated fields during JSON processing
added animation listeners for showing and hiding the send layout in the LauncherFragment to improve user experience by providing visual feedback during floating - compose
updated method call syntax in Utils . java for consistency to improve code readability and maintainability
added Progressable parameter to multiple utility methods in Utilities . java to enhance progress tracking during file operations
[ hotfix ] fix typo in error message in sourcecoordinatorprovider
remove a contribution from the panelByContribution and update panel order and color to ensure the contribution is removed from the panel by its contribution and
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and update references accordingly to improve clarity and consistency in naming con
added a default value for dPath in RegularFileObject . java to ensure dPath is set to the user ' s home directory if it is
fix e - ac3 output channel count when no value be specify .
log4j2 - 1343 - improve mapfilter to not use getdata ( )
refactor VerificationInOrderWithCallsTest class for improved readability to enhance maintainability and facilitate future development
updated the return statement to use the x - coordinate of the axis instead of the z - coordinate to ensure accurate representation of the axis ' s
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to ensure consistency in naming
add a test to verify that listener be connect at startup
bugfix # 59555 - fix completion documentation for union and functio
refactor support for one - handed mode in RecentsAnimationDeviceState to improve code readability and maintainability by centralizing support logic
added onDetachedFromWindow method to cancel ongoing tasks in AppsCustomizePagedView to ensure proper cleanup of running tasks when the
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter constructors to allow customization of dictionary resources
removed redundant count checks and set thrown flag to false in ResultSetTest . java to streamline exception handling logic by eliminating unnecessary count checks
updated the message initialization in GradleBuildService to use an empty string instead of a hardcoded debug message to improve clarity of the
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for ` preventedByLocking ` and introduced ` isMVCCAn
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by encapsulating tooltip text logic
increased the timeout duration in the await statement from 5 seconds to 10 seconds to allow more time for the zipkin server to be up
fix deviantart ripper to not try to login to deviantart .
refactor GOOGLE _ SIGNATURES and GOOGLE _ PRIMARY _ KEY constants in PackageUtils . java to improve clarity and
update solutionBusiness initialization to use commonApp . createSolutionBusiness ( ) instead of commonApp . solutionBusiness to ensure proper creation of the solution
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes
added email description to templateData in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to enhance functionality by including email
replaced the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` to ensure consistency in accessing the data
modified the ` getISO3Language ( ) ` method to check the length of the language string before retrieving it to ensure correct language handling and
refactor ChangeLog parsing and validation logic in Liquibase . java to improve code readability and maintainability by encapsulating validation logic
added a check to return early if the screen pinning is active in OverviewCommandHelper . java to optimize performance by avoiding unnecessary processing
added customizable text and description for the " No chart data available . " to improve user experience by allowing customizable text display
synchronize HTTP response methods and add checks to prevent header modifications after they are sent to ensure thread safety and maintain response integrity after headers are written
refactor chunk handling logic in NettyResponse . java and NettyResponseTest . java to improve code readability and maintainability by central
added HTTP scheme headers to the Http2TestBase and TestHttp2Limits classes , and updated test cases to reflect the new scheme to ensure
feature - redissonlocalcachedmap . keys ( ) , redissonlocalcachedmap . values ( ) , redissonlocalcachedmap .
camel - 14263 : camel - jpa - allow to configure entitymanagerfactory and transactionmanager during camelcontext start . thanks to
replaced ` fallSpeed ` with ` jumpSpeed ` in ` PhysicsCharacter . java ` to ensure consistency in jumpSpeed assignment across
added a condition to check if reparsedFunction is null when no syntax extensions are present to ensure proper handling of syntax extensions when reparsedFunction
updated logger variable names and improved order handling in BitstampPusherService . java to enhance code readability and maintainability by using more
added deprecated methods for old upload segment URIs in FileUploadDownloadClient . java to ensure compatibility with the latest API changes
updated the ` findOne ` method to include a filter parameter to enable filtering of records based on specified criteria
camel - 16400 : camel - juel - do not fail the predicate if the value of the header be not an array .
added bounds checking for alpha value in RecentsView . java to ensure alpha values are within the valid range of 0 to 1
corrected the string concatenation for the version attribute in the import package string to ensure correct formatting of the version string
refactor DataSyncConfiguration class to improve data synchronization logic to enhance performance and maintainability of data synchronization
added import and initialization for JavaSnippetRepository in JavaLanguageServer . java to ensure proper initialization of the JavaSnippetRepository
modified the condition for updating sums in StarTreeRecordStoreCircularBufferImpl . java to include a loop for each time bucket to ensure that
updated URLs in ChromeDriverService and ChromeOptionsFunctionalTest from " http : / / code . google . com / p / chromed
camel - 14263 : camel - pg : use try - with - resources to avoid potential resource leak .
replaced the import of ` com . sun . syndication ` with ` com . rocketetools . rome . rome
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 645 . fix
refactor Dialog class for improved readability to enhance maintainability and ease of future updates
removed the constructor of EnhancedRuntimeException that accepts a Throwable cause to streamline the code by eliminating unnecessary complexity
try to fix intermittent failure in socketappendertest
camel - 14263 : camel - core - optimize to reduce dependency on camel - example - event - admin
updated method signatures and exception handling in ByteArray . java to include an additional parameter to enhance method functionality and improve error handling
added a method ` disableInputProxy ( ) ` to disable input proxy during touch events in ` RecentsAnimationWrapper . java ` to
camel - 6770 : camel - restlet : enable restlet test until camel - 6770 be fix .
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method to simplify the method signature by eliminating unnecessary parameters
move module - info . java from ` com . hazelcast . tests ` to ` com . hazelcast . test . modulepath ` (
added a new method ` getSourceDirs ( ) ` to ` JavaServerConfiguration ` and modified the ` getCompiler ( ) ` method to include
updated menu item ID from ` menu _ open _ web ` to ` menu _ mute _ hashtags ` in ` TweetPager
rename methods from ` nodeIsAncestorOfItself ` and ` nodeIsDescendantOfItself ` to ` nodeIsNotAncestorOfIt self
fix an issue with the player ' s position when there ' s no player .
added PathNotExistException handling to data type validation logic in InsertNode . java to improve error reporting for non - existent measurements during insertion
updated the closing brace formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ stream ] make mailboxexecutor nullable in operator factory
hbase - 15836 add table state check to hbase - master when region server be unauthorized ( rajesh )
updated method reference syntax and improved error message formatting in GatewayMetricFilterTests . java to enhance code readability and provide clearer output for
updated the constructor of BlockJUnit4ClassRunner to accept a Java class reference instead of a TestClass to ensure compatibility with the correct class
[ drools - 1342 ] fix kiewatcher . delete ( ) to use lasttimedata instead of remoteitems
updated calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to improve layout responsiveness by accounting
[ hotfix ] [ core ] make coreoptions . parent _ first _ logging _ PATTERNS internal
updated references from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure consistency
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the merging process for
hhh - 8898 change the session api to enable auto - closeable when run on java7
refactor GetLocations class for improved clarity to enhance maintainability and readability of the code
updated exception handling to only print stack trace when the exception is null to improve error handling by avoiding unnecessary stack trace printing
changed the exception handling in ` Contents . java ` from throwing ` UncheckedIOException ` to a more general ` IOException ` to simplify error handling by
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android versions
ruby flavor : fix syntax error
updated logging level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
( chore ) camel - nio2 : remove useless conditional usecaches
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for cityDatabase , countryDatabase , and maxmindDatabase to
update instructorfeedbackresultspageuitest : fix test failure
updated the ` useEncodedQualifierListOptimization ` method to accept a ` Scan ` parameter instead of a ` PTable ` to enhance flex
changed method visibility from public to package - private for several methods in ApprovalStore and ApprovalsControllerService to enhance encapsulation and
added a mechanism to cancel a notification if the download process has not finished to improve user experience by preventing further notifications during the download process
updated method names from ` getOpenView ` to ` getAnyView ` and modified conditional logic in ` TaskbarDragLayerController ` to improve
updated project version from 1.0 . 11 to 1.0 . 13 and year from 2008 to 2009 to reflect the latest version
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
refactor GsonBuilder class for improved readability to enhance maintainability and ease of future updates
add a null check for the center geo before adding it to the fixed points list to prevent potential NullPointerExceptions
remove espresso home option for java on truffle ( espresso ) inside a graalvm .
doc ( javadoc ) : fix typo find by codespell on fossies . org
changed the visibility of ` timeToDieInSeconds ` from protected to private and simplified session management logic to enhance encapsulation and improve code readability
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to improve code cl
initialized variables ` sz ` and updated ` result ` initialization in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and `
modified the call to triggerMediaScan to include the file object as a parameter to enhance the media scan functionality by associating it with the file
removed conditional printing of test results based on verbosity settings to simplify test result processing by eliminating unnecessary verbosity checks
added methods to set custom G - code settings in MainWindow to enhance user experience by allowing custom G - code settings
hhh - 10811 - fix character encode issue with enver ' s xml mapping when jvm encoding be n ' t utf - 8 .
refactor JsonElement class implementation to improve code readability and maintainability
added exception handling for unsetting the system property in TestBadConfig . java to ensure proper exception management during tests
added a method to remove the current fragment and hide the action bar in GpsMainActivity to improve user experience by ensuring the action bar is
add a list of spanish token to the tokenizerannotatoritest
updated ` RemoteMediaHandler ` , ` RemoteRawHandler ` , and ` RemoteUtil ` to use ` Range . Byte ` instead of `
updated the gcode file path and enhanced the G - code parsing logic in VisualizerCanvas . java and GcodeViewParse . java to
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " while
updated assertions in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java for consistency to improve readability and maintainability of
added a conditional check to close the exchange client if the query is complete and the output stage is null to ensure proper handling of query results when
fix file path integrity check for gradle folder ( # 8868 )
removed the import of SolrClient and the shardToClient map from ChaosMonkey . java to streamline the code by elimin
added null check for file input before accessing the database configuration store to prevent potential NullPointerException when the file is null
updated formatting of the add method in NestedRepositoryTreePanel . java to improve code readability and maintain consistency
add a constructor to the extensiontypeheader that accept a length of - 128 to 127 .
pdfbox - 4892 : add ` ` throws ioexception ' ' , a suggest by valerybokov
changed the default value of ` pushOnShutdown ` from ` false ` to ` true ` and added corresponding getter and setter methods to enable push
added trigger callback functionality and error handling in ReactiveStateMachineExecutor . java to improve error management and logging for state machine events
added a test to verify that multiple Python executables can be set on the first path to ensure that the correct executable path is used when multiple
added a default button to the root pane in the InitialAccountRegistrationFrame to improve user experience by ensuring the correct signin button is displayed
added a new configuration option TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
improve error message to include exception
rename package ` org . axonframework . util . reflection ` to ` org . axonframework . util . util ` , and move
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` Oidc
removed the private Vector2 center field from Circle , Ellipse , Polygon , Polyline , and Rectangle classes to streamline code by elimin
simplified the conditional check for the pcollection variable in RegisterAndProcessBundleOperation . java to enhance code readability and maintainability
refactor SslContextFactory to improve SSL configuration handling to enhance security and performance during SSL connections
replaced instances of ` @ Ignore ` with ` defaultMaxExpectations ( ) ` and ` maxLogEntries ( ) ` in ` Configuration
update return value from " access _ confirmation " to " access _ confirmation _ error " to improve clarity and specificity of the error message
added a new class ` ConsumerClassLoaderFilter ` and updated ` ReferenceConfigTest ` and ` ReferenceConfigTest ` to utilize it to enhance
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method and updated its logic to
updated method names from setRolloverIcon and setRolloverPressedIcon to setRolloverPressedIcon and setRolloverPressedIcon to improve
updated ` TaskViewUtils ` , ` TaskViewSimulator ` , and ` RecentsView ` to use ` setGridTranslationY
refactor assertions logic in Assertions . java to improve code readability and maintainability
added null checks and return statements for ` currentDateTimeFunction ` across multiple database classes to ensure consistent retrieval of ` currentDateTimeFunction ` across different
[ # 2551 ] simplify profile path in cse _ run . log ( # 2583 )
updated the ` DigitalWellBeingToast ` and ` TaskView ` classes to include a ` contentDescription ` parameter to enhance
do n ' t wait for meta server connection when there ' s no meta server connection .
refactor LineNumberTagAggregator and TestDominance classes to improve code organization and maintainability
use default conversion for item to avoid nullpointerexception
refactor BidirectionalOneToOneNPlusOneTest to utilize Hibernate ' s IntegratorProvider and add a new test for fetching
remove extra empty screen from the workspace and update search page index logic to ensure proper handling of empty workspace screens and improve search page index
updated HashMap and HashSet initialization in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve memory efficiency and prevent potential
updated string formatting in GoogleLineChart . java and GooglePieChart . java to use double quotes instead of single quotes to improve consistency in
refactor wait logic in SendingAccountor . java for improved clarity and error handling to enhance code readability and maintainability while
[ iotdb - 4892 ] add position to walprettyprinter to allow seek to the end of the file
increased the port number in the NettyTransceiver initialization from 1 to 0 to ensure that the transceiver starts on the
sort log event before generate a report
added a test method to ` CSVFileLoggerTest ` to verify behavior with double quotes in CSV line descriptions to ensure correct handling of double quotes
minor refactorings to make it easy to run the slow itest
do n ' t send iq message to remote server .
removed the @ JniImpl annotation from VM . java to clean up the code and improve readability
updated the logic for calculating the last time and replaced hardcoded boolean values with constants from the Protocol class to improve code readability and maintainability
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java and removed
updated package reference from " other _ package " to " other _ package2 " in AstTests . java to align with the new package structure
[ minestom ] fix worldborder . setradius ( ) and add integration test
hbase - 2598 hbase . getwalgroupsreplicationstatus ( ) should return an empty map if we do n ' t
[ web ] remove the login view after a successful login .
refactor routing table mark data resource online calls to use a dedicated method to improve code readability and maintainability by centralizing instance configuration generation
changed the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
add a test to ensure that we get the correct error message when a maven project contain a reference .
simplified the conditional check in PropertyMap . java to enhance code readability and maintainability
updated the ` getControllerId ` method to accept a ` configId ` parameter and modified related logic to enhance the handling of ` controllerId `
replace sessionFactory . close ( ) with session . close ( ) to ensure proper resource management by closing the session
removed the condition for generating refresh token in the OidcConsentApprovalViewResolver to simplify the validation logic for refresh token generation
removed a debug print statement from Http2SolrClient . java to clean up the code and improve readability
replaced a lambda expression with a NoopGetter enumeration in BaggagePropagation . java to improve code readability and maintainability by using
refactor conditional resource chain logic for improved clarity to enhance maintainability and readability of the code
added a condition to check if treeRoot has children before processing to ensure proper handling of root nodes in the BarrowmanCalculator
replaced ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java ` to ensure
updated log messages and added intent result listener handling in FacebookImpl . java to improve clarity of log messages and ensure proper execution of the login
updated the return value in ShadowICU from " h : mm a " to " skeleton " and modified test assertions in ShadowICUTest
removed the check for device lock status in TouchInteractionService to simplify the logic for determining if the device is currently locked
cloudstack - 7803 : fix npe in volumeapiserviceimpl due to diskofferingvo be null
replaced FileChannel with AsynchronousFileChannel and added position tracking in the write operation to improve performance and support asynchronous file operations
reformatted the ` SigInt ` and ` SigIntTest ` classes by removing unnecessary whitespace to improve code readability and maintainability
ggb - 2273 draw text on the right and left side do not update the min editor width
change return value from - 1 to 0 in the Asset class to correct the logic for returning a value of 0
replaced hardcoded integer and lambda expressions with static final constants in ComputeBenchmark . java to improve code readability and maintainability by reducing
added an onRefreshListener to the UploadListFragment to notify changes to the adapter on refresh events to ensure the adapter updates correctly when data is
refactor bibdatabasecontext to use optional < path > instead of file to avoid npe
replaced multiple instances of ` emitters . items [ i ] ` with a single ` emitters . get ( i ) ` method to
refactor Tomcat class to improve service and engine retrieval logic to enhance code clarity and ensure correct service and engine management
updated string formatting in BuildRuleFactoryParams and Console classes to improve readability and consistency of error messages
added a condition to check if the playback state is not playing before proceeding to ensure proper handling of playback state during playback
replaced the method for retrieving the service component desired state entity from ` findByPK ` to ` findById ` to simplify the retrieval of the service
refactor inner class field clashes handling and add a new test for inner class field clashes to improve code readability and ensure correct behavior
added logging filter and follow redirect filter configuration to DockerClientFactory and DockerClientProfile to enable configuration of logging and follow - redirect filtering based on
refactor display change handling in XToolkit to ensure proper locking and unlocking of graphics environment to improve thread safety and prevent potential deadlocks
hhh - 10183 - add support for sql server 2008 in nationalized scalar test
do n ' t close the input stream in ziphelper . close ( ) , close it in opcpackage . close ( )
changed the visibility of the storeClassFile method from private to public to allow access to the method from other classes
updated the assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues
updated error messages in CGIHandler . java and added JavaVMCallbackHandler in JavaVM . java to improve clarity of error messages and
added additional newline characters " \ n \ 033 [ m " and " \ n \ 033 [ 0m " to the conditional check
refactor ` multiFetchSourceFiles ` and ` createFetchSourceFilesRequest ` methods to use ` Set ` instead of ` List ` to
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to optimize performance by avoiding unnecessary
updated test method names and logic in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to improve cl
replaced ` FileUtil . createData ( ) ` with ` FileUtil . createFolder ( ) ` in ` MacroService . java `
improve javadocs for implicitcast , typessystem , and implicitcast .
refactor JsonObject class to improve data handling to enhance performance and maintainability of JSON processing
updated idle timeout condition in SelectChannelEndPoint . java and modified idle time handling in HttpConnection . java to ensure proper idle time validation and improve
fix farmland . cansustainplant not be call on the client . close # 750
added support for multi - tenant tables and updated related queries to enhance database functionality to support multi - tenant indexing and improve test coverage for primary keys
updated SimpleDateFormat to use Locale . US and added a new class B6791927 to ensure consistent date formatting across different locales and validate cookie
removed multiple redundant calls to db . close ( ) in DbHelper . java to streamline database closing process and improve code readability
increased the timeout duration for polling messages from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests to allow for longer polling times
[ feature ] use tracera in economy configuration ( if enable via command line )
fix code area key binding for save _ database and save _ all
refactor ObjectMapper initialization to use a static block and set line separator to ensure consistent line separator handling across different operating systems
updated path normalization logic in NativeEnvironmentRepository . java to ensure compatibility with Windows environment paths
refactored multiple test classes to use a single Application instance instead of a single Application instance to improve code organization and maintainability by centralizing
[ java ] remove record log validation from consensus module .
[ it ] update itsystemtest to use errorgroupname instead of groupname
disable testfuzzoptimizations for travis and mvstore
replaced the initialization of the reverseImage variable from SharedPreferences to streamline code by eliminating unnecessary shared preferences initialization
refactor condition checks to use ` equals ( ) ` instead of ` equals ( ) ` for better readability to improve code clarity and
[ chore ] add predicate to exclude id meta and meta of triple . ( # 1748 )
updated JUnit 4 imports and annotations to JUnit 5 in AuthenticationSuccessListenerTests . java to ensure compatibility with the latest JUnit 5 features
fix settypes to use indexof ( ) instead of indexof ( )
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated the way the trigger time is formatted in AbstractAlertNotifyHandler . java to ensure the trigger time is formatted with the default time zone
added a method to create and handle abstract method error throwers in MethodHandleResolver . java to enhance error handling for method accessibility and provide
camel - 16400 : camel - core - optimize to avoid invalid ognl validation
removed unnecessary empty check for ` toExplore ` in ` AbstractParser . java ` to streamline code by eliminating unnecessary complexity
camel - 16400 : camel - jclouds : use iohelper to copy input / output stream to avoid concurrentmodificationexception
camel - jbang - fix camelconsultest so it work with the late osgi bundle .
added a check for the ACC _ STRICT access flag on the default method in Check . java and created a new test class CheckACC
[ java ] increase timeout for channelvalidationtest to avoid flakiness .
added a new file ` FileExtensions . java ` that defines ` CLANG _ SOURCES ` , ` CLANG _ HEADERS ` ,
replaced the custom ThreadLocalDateFormat with a static instance of ISO8601CanonicalDateFormat and updated the initialization of the FORMAT _ THREAD _ LOCAL
[ gr - 18686 ] deprecate usecgroupmemorylimitforheap and usefasttlacerefill .
added display name functionality to the client properties and updated related classes to utilize it to improve user experience by allowing customization of the display name
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing a specific exception type
removed unnecessary whitespace in the apply method call to improve code readability and maintain consistency
fix ( http ) : fix issue with http / 1.1 and http / 2
fix npe in forgeeventfactory . getcapabilities ( ) when parent be null
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling by eliminating unnecessary exceptions
[ hotfix ] deprecate submitorderedcompletionservice in favor of asynccompletionservice
updated HyphenationTree . java to adjust the length variable during Hyphenation creation to ensure correct length handling during Hyphenation construction
add a 1.5 second sleep to make sure that the service be available before start the server .
move resource management service to java . swing package so that it can be use by other plugin .
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED constant in ParameterBinder . java to clarify the
added a new variable ` providersChanged ` and initialized it to ` false ` in ` ConfigurationManager . java ` to reset the state of providers
added a method to quote tokens in the SemanticAnalyzer class to ensure proper handling of quoted identifiers in the token rewrite stream
updated font name validation logic in FileSystemFontProvider . java to handle missing ' name ' entries to ensure proper handling of missing ' name ' entries
updated type casting and added suppression warnings in SolrResourceLoader . java to improve type safety and suppress unchecked warnings during class loading
modify the condition for determining the current actor ' s position in the Window class to ensure correct positioning of the actor within its parent hierarchy
added null check for appManifest before retrieving its targetSdkVersion to prevent potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog classes to improve JSON serialization and deserialization configuration to enhance code readability and maintainability while ensuring
added userName property and its getter / setter methods to Driver , HiveSemanticAnalyzerHookContext , and HiveSemanticAnalyzerHookContextImpl classes
added setter methods for TransformerSource , URL , URL , and InputStream in XsltBuilder , and updated instantiation in XsltComponent to improve flex
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , TaskExecutorTestHelpers , TestFirstInFirstOutComparator , and Test
updated expected file size calculation in ShadowAssetManagerTest and removed redundant variable declarations in ShadowDownloadManagerTest to simplify code and improve readability by
fix potential npe in coyoteadapter when request . getmappingdata ( ) return null .
removed unnecessary tracing and improved log message formatting in ThroughputLogger . java , and updated test delay in ThroughputLoggerTest .
8274272 : java : + unlockdiagnosticvmoptions do not work on debug build
replaced instances of ` MeterStatisticsManager . statisticsOperationMap ` and ` MeterStatisticsManager . statisticsOperationMap ` with ` MeterDetailStatistics
updated logback configuration handling in FrameworkLauncherExtended . java to resolve the logback configuration file dynamically to improve flexibility in logging configuration by allowing
added nullability annotations to method parameters in CipherExecutor , CookieRetrievingCookieGenerator , CookieValueManager , CasCookieValueManager , and Cas
replaced instances of ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` in ` Escaper
added try - with - resources syntax to ` startContainerWithCommand ` and ` waitUntilReadyAndSucceed ` methods to ensure proper
rename the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a shield address in RpcApiService to enable tracking and management of shield addresses within the RpcApiService
changed return type of readConsoleInput ( ) from byte [ ] to String across multiple terminal classes to simplify input handling by returning an empty string
updated regex patterns in TestStabilityRule . java and changed the sRunFlavor variable from PLATFORM _ PRESUBMIT to
added a condition to decrement ` mvToMatch ` based on the score of ` bestTextFragment ` in ` DefaultSolrHighlighter . java `
modified the ` tryToLogin ` method to accept username and password as parameters to enhance security by allowing authentication with specified credentials
refactor ` HandlerSceneEntityDrownReq ` and ` PacketSceneEntityDrownRsp ` to use ` killEntity ` and `
http : / / issues . apache . org / activemq / browse / amq - 2175 - fix camel - jms -
removed wrapCollection ( parameter ) from the update method call to simplify the code by eliminating unnecessary wrapping
added logging for unknown currencies and improved currency handling in BTCEAdapters . java to enhance error handling and provide clearer logging for unknown
amq - 5875 - rework the patch a bit to only call createdemandsubscription when we have a match to avoid trcking state in error via the bridge subscriptionmap * from configuredemandsubscription
change default value of averageCharTolerance and spacingTolerance from 0.5 f to 0.3 f to improve accuracy of spacing and average character
modified the startController method to accept a boolean parameter for tenant isolation and added tenant creation methods in ClusterTest and HybridClusterIntegrationTest to
changed the return type of the response value from ImmutableMap . builder ( ) to a direct cast to Map to simplify code and improve readability by
added a check to ensure attrs ' s size is greater than or equal to 4096 to avoid potential NullPointerException when attrs is empty
added ` getProjectJdkName ( ) ` , ` getProjectJdkType ( ) ` , and ` getProjectLanguageLevel ( ) ` methods
changed the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify that the
added user details to the ` GrantedAuthorityEffectiveAclsResolver ` tests and updated method names for clarity to improve test readability and
replace reflectionmodel . newclassdeclaration ( object . class , reflectionmodel . object . class , object . class , object . class ) with
added button count management to the XToolkit class to ensure that the application does not exceed a defined maximum number of button support
updated import statement for assertEquals from ` jdk . testlibrary . Asserts . assertEquals ` to ` com . oracle . java .
added a new MessagePackFactory class with multiple factory methods for different input / output streams to enhance flexibility in creating different input / output streams
added new tag keys for " is _ desert " , " is _ cave " , and " is _ underground " , while
renamed the method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in naming conventions
added conditional logic to set the layout based on the horizontal state of the component to improve UI responsiveness based on the horizontal state of the
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matcher ( ) ` with ` matcher . matches ( ) ` for
replaced instances of ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` Android
[ java ] close commit position counter in clusteredserviceagent when it be close .
no effective change - add test and fix for http : / / issues . apache . org / activemq / browse / amq -
improve error message if the address be not a valid ip : port or hostname
bug 9452 : listcapacity - when the host > 200 the host _ id and storage _ pool _ id start colliding , to workaround that also compart the capacity type .
replace ` openInput ` method with ` fileLength ` method in ` NRTCachingDirectory . java ` to improve file handling by ensuring the
modified the ` JavascriptCompiler ` class to include a ` generateClass ` method with a ` ClassWriter ` and ` ExpressionContext ` parameter to enhance
removed synchronization from the UISettings class and modified the store method to synchronize on the UISettings class to improve performance by reducing unnecessary synchronization
added a check for native text input support in TextField . java and changed the access modifier of the fireDataChanged method from private to public to
refactor error handling in SpannerIO to include schemaChangeErrString and emulatorErrorString for improved clarity to enhance error reporting
use diamond operator , a suggest by valerybokov
updated the array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java with serialization tests to ensure correct
updated nonce claim retrieval method and improved logging messages in OIDCAuthenticationFilter . java to enhance code readability and provide clearer error messages
added a condition to check for relationship fields in DCInputSet to ensure proper handling of relationship fields in the input set
added support for server slogan in the capabilities table and updated related references to improve user experience by integrating server slogan features and
refactor menu item tinting logic in DrawerActivity . java to improve readability and maintainability of the code
replaced fail ( ) method with assumeNoException ( ) in SolrRequestParserTest . java to improve test reliability by ensuring the test
added a check to return early if there are no missing symbol events in MissingSymbolsHandler to optimize performance by avoiding unnecessary processing when there are
added new data entries " Data 3 - 4 " and " Data 5 - 4 " to the StringHelperTest . java file to enhance test coverage
added warning logging for empty data providers in Parameters . java to improve debugging by providing informative warnings when the data provider returns an empty array or
( chore ) camel - core : replace usage of collections . empty _ list by collections . emptyset ( )
[ freeplane ] fix node selection style for old map version
updated variable name from mass to restitution in PhysicsRigidBody . java to improve clarity by using a more descriptive
added AutoFtpActivity and FtpHelper classes for automatic FTP testing to enhance testing capabilities for FTP communications in the application
refactor token handling in BaseSemanticAnalyzer to use a local variable for clarity to improve code readability and maintainability by reducing
added getter and setter methods for component state in ImageViewer , OnOffSwitch , Component , and GenericSpinner classes , and implemented component state management
added a new class ` RemoteExecutionEnabled ` for enabling and disabling remote execution in the ` BuildableSerializerTest ` to enable remote
pdfbox - 4892 : fix typo ; improve javadoc
updated file reading methods to use UTF - 8 encoding instead of FileReader to ensure proper handling of character encoding during file reading
added assertion to check if working score variables are not stale in AbstractScoreDirector to ensure that shadow variables are not stale during scoring process
updated the configuration key from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " to align
added SLF4J logging to various Datagram packet - related classes to improve debugging and traceability of message content handling
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated directory removal logic in ` File
added assertions to verify the presence and presence of the transaction hash in the PollingTransactionReceiptProcessorTest class to ensure that the transaction hash is
make schemaregionbasictest . testdeletetimeseries public , deprecate in favor of schemaregionbasictest . testdelet
add a null check for newFormat . sampleMimeType in MediaCodecRenderer . java to ensure that a valid sampleMimeType is provided before proceeding
replaced ` notify ( ) ` calls with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` annotation to the ` @ AllArgsConstructor ` annotation to enable
added SQLFeatureNotSupportedException check for creating an index on a view to prevent unsupported operations on views in the database
added a new class Website with properties for name , URL , and URI to facilitate the management of Java Net types in the
added a setup method to set the default locale in BSFormatterTest to ensure consistent locale settings for tests across different locales
improve error message for badly download jar file
replaced ` containsString ` with ` equalToIgnoringCase ` for sha1sum assertion in ` MultiPartParsingTest . java ` to
added a check for single parameter tokens in SimpleExprGenerator to ensure proper handling of single parameter tokens in the expression generation
added a volatile boolean flag ` createdVertx ` and modified the conditional check to ensure ` vertx ` is only created when it ' s
updated the ` writeAttributes ` method to accept a ` NodeModel ` instance instead of ` null ` to enhance type safety by using the correct
corrected a typo in the log message from " Synchroned " to " Synchronized " and added null checks for file retrieval in File
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in ` CategoryREST ` and ` FeedREST
replaced instances of ` MavenTestingUtils . getTargetPath ( ) ` with ` MavenPaths . targetDir ( ) ` and refactored resource
updated imports and refactored validation logic in RegisterServerConsumerExecutor . java and URIRegisterExecutorSubscriber . java to improve code clarity and
updated the playback state check in GwtMusic . java to account for unused sound states to ensure the sound playback state accurately reflects
added a new permission ` PERMISSION _ ADMIN _ SUDO _ AREA ` to the ` MainCommand ` class and defined it in the `
updated query options handling in ServerRequestPlanVisitor . java and modified test cases in QueryRunnerTest . java to enhance query execution capabilities and improve
updated file name comparison in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to
updated assertions in ResourcesTest to use a predefined string for label attributes to improve readability and maintainability of the test code
replaced the native method ` NMTWaitForDataMerge ( ) ` with ` NMTOverflowHashBucket ( ) ` and added
[ hotfix ] [ serializer ] migrate eitherserializersnapshot to javaeitherserializersnapshot to improve compatibility
updated AddressResolverOptions to use DEFAULT _ NDOTS _ RESOLV _ OPTION and DEFAULT _ ROTATE _ OPTIONS _ PATTERN for
added a call to the superclass ' s __ associate method in RequestRockerTemplate and created a corresponding test in RequestRockerTemplateTest to
pdfbox - 4892 : avoid npe , return empty string instead
updated XML schema URLs from " liquibase / parser / core " to " www . liquibase . org / xml /
move commonmimetypelocator to test source so we can use it
changed the repository state from INIT to NOT _ REQUIRED across multiple classes to indicate that the repository version should not be required
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to ensure accurate comparison of schema types during the change log generation process
replace junit . Test with testng . Test in TestBackwardAnoamlyFunctionUtils . java to utilize TestNG annotations for
added a new file ` ProgressiveJPEGTest . java ` to test the rendering of JPEG progressive data to ensure the application correctly handles and
replaced alpha test settings with alpha discard threshold settings and initialized material properties in MaterialLoader . java to improve the handling of material properties and ensure
improve error message for native - image building on window
added a null and length check before setting the size in the Label class to avoid potential NullPointerExceptions when the text is empty
increase the precision of readVarInt ( ) from 1 to 1 , 000 , 000 to ensure that the readVarInt ( ) returns
added a private constructor to the PushUtils class and made it final in multiple files to enforce singleton pattern and prevent instantiation
replaced the method of obtaining the length from ` curConfig . getBounds ( ) ` to ` curConfig . getLength ( ) ` to
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code by eliminating unnecessary type casting
updated the regex pattern in the load method call from " . * CSV " to " ( ? i ) . * CSV " to improve flex
added conditional checks in ` TaskbarStashController ` and updated references in ` InvariantDeviceProfile ` and ` FloatingIconView `
replaced ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( ) ` in ` Node
add a test to make sure we can not target both jdk 1.5 and 1.3
replaced PowerMockito with MockitoJUnitRunner for mocking QuotaTariffVO in QuotaResponseBuilderImplTest . java
added error and output streams to TestSchemaToolCatalogOps . java to improve error handling by allowing standard output to be set
added DFSClient as a parameter to various methods in FanOutOneBlockAsyncDFSOutputSaslHelper . java to enhance authentication capabilities
updated MongoQueryMethod and MongoRepositoryFactoryBean to include RepositoryMetadata as a parameter to enhance flexibility in handling repository metadata during query resolution
add a wrapper class to make it easy to use custom property source .
updated import statements in MetaDataEndpointImpl . java to include new constants and remove obsolete ones to streamline code and improve maintainability by elimin
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry logic in TxnHandler . java to
rename variable ' xl ' to ' xAxis ' for consistency and clarity to improve code readability and maintainability
added methods to check if a character is printable and implemented a validation method for system names to ensure only valid characters are printed , enhancing
rename selenide . in ( ) to selenide . using ( ) for clarity
[ mng - 5641 ] do n ' t include plugin in the list of exception when build a maven project
return value fix ( double instead of math . round ( double ) )
updated the RESOURCES constant to use a conditional check for the existence of " google - cloud - vision " directory to ensure the application uses
changed return value from " STUB " to null in ModeledConnectionRecord . java and updated ActiveConnectionRecord . java to return the remote
[ ds - 3952 ] add admin button to community list servlet for admin user
added a counter for long and short compaction threads in the thread pool executor to track the number of compaction processes for better debugging and monitoring
updated the method for retrieving the package name in WallpaperChooser to ensure the application uses the correct resource package for better resource management
replaced the method to retrieve players in a plot with a new method ` getPlayersInPlotVisible ` to improve clarity and functionality by
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest class for improved readability to enhance maintainability and facilitate future updates
replace hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _ IMPL to
updated attribute name from " referencedContainer " to " referencedContainer " in SchemeGenerator . java and added tests in SchemeGeneratorTest . java to
removed conditional checks for key and IV in UploadFileOperation . java to streamline key and initialization vector handling for improved security
[ flink - 243688989 ] [ test ] add @ stability annotation to workprofiletest
removed unnecessary check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary checks
replaced ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` G
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and added new classes ` LockFreeBucket _ finalFields
add ` ` tpstats ' ' to nodetoolprobe
updated max bitrate settings to accept user preferences to ensure proper bitrate settings are applied based on user preferences
refactor trace ID checks in ZipkinHttpSpanExtractor and add new test cases in TraceFilterTests to enhance code readability and ensure correct
createofferdatamodel , duplicateofferdatamodel , editofferdatamodel , and duplicateofferdatamodel implement getuserpaymentaccounts ( ) to
remove reflection from dartservercompletioncontributor . getlookupelement ( ) . withtypeiconrightaligned ( )
added a method to set the project in LauncherUtils to ensure the project is correctly set for improved user experience
updated ` JsBundle ` , ` JsBundleBuilder ` , ` JsLibraryBuilder ` , and ` JsTestScenario ` to include ` Project
refactor multiple Java classes related to Envelope and Databinding to improve code organization and maintainability
refactor MetricsDSLContext class for improved readability to enhance maintainability and ease of future updates
removed the VersionConfig interface and modified the VersionBuckConfig class to simplify its implementation and improve performance by eliminating unnecessary interface
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException when binding shadow classes
changed the visibility of the validateTypes method from static to public and updated the exception message to reflect the change from AST to LST to enhance
fix : update gapic - generator - java with mock service generation fix ( # 399 )
added SLF4J logging imports to SimulationStatus . java to enable logging capabilities for simulation status updates
updated the Y - axis version from 138 to 150 and changed the font size from 9 to 14 to improve the visual representation of the application
refactor notification addition to run asynchronously to ensure notifications are added on the UI thread for better responsiveness
updated mock behavior in ReturnsElementsOf . java to return a list of integers to enhance the test ' s fidelity by providing specific returned values for better validation
updated error message to clarify that partition dropping for non - string partition columns is only allowed to improve user understanding of partition column
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to verify the indexing of stored fields in
added a method to retrieve the version code from MainApp and updated references in FeatureList to use it to improve code organization and maintainability by
camel - 14263 : bean component should not throw ambiguous exception when request body do not match the method body parameter type .
updated references from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to
added constructors to IndexBufferObject and VertexBufferObjectWithVAO to manage buffer disposal to improve buffer management and ensure proper disposal of
added a transition for " forgotPassword " to the login form in PasswordManagementWebflowConfigurer to enhance user experience by providing a clear
refactor JerseyClientConfiguration class for improved clarity to enhance maintainability and readability of the code
int - 113 , int - 113 , int - 113 , int - 113 , int - 113 , int - 1
updated variable names in ` InstanceOfPatternMatchTest ` and ` RemoveRedundantTypeCastTest ` to use ` o ` instead of `
added methods to manage column and row indices in StringDict and Table classes to ensure proper handling of empty string arrays and improve data integrity
added ` @ Deprecated ` annotations to ` Container ` , implemented ` AutoCloseable ` in ` GenericContainer ` , and created a ` with
changed log level from info to error in MediaInfo . java and updated test methods to throw ConfigurationException in RendererConfigurationTest . java to improve error
added a schemapattern option to the BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector classes to allow users to specify a schemapattern
avoid npe if no id be available for a ssl session .
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve code readability and maintainability
refactor Base64 class implementation to improve performance and readability of the code
add support for read i64 _ managed _ single _ context assumption to llvmglobalcontainer .
simonstewart : ignore test that fail on the iphone
updated FlowBuilder and FlowJobBuilderTests files to improve code organization and maintainability
updated the ` AttributeResource ` and related classes to replace ` ResName ` with ` int ` for resource ID instead of ` ResName `
refactored TLS file resolution logic in ` DefaultDockerClientConfig ` and introduced a new method in ` DockerContextMetaFile ` to improve code
polish ` ` make sure simplereactiveelasticsearchrepositorytests run before each test
added a loop to capture the upper bound of the type variable in ` Attr . java ` and created a new class ` T64502
added logging level configuration and methods to set the logging level in LoggingFlags and LoggingOptions classes to enable configurable logging levels for better control over logging
added logging statements and modified the ` deleteItemsFromDatabase ` method to accept a collection of ` ItemInfo ` instead of an ` Iterable `
added ` allFilesOption ( ) ` method to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
added deprecated methods for ` forEachOperation ` and ` hasMatching ` in ` MutationOperationGroup ` to indicate that these methods should no longer be
updated the calculation of numPredictiveAppCols to account for phone devices to ensure correct number of predicted application columns based on device type
updated String initialization to use UTF - 8 encoding to ensure proper handling of character encoding in string processing
added a new file RequestMatchers . java and its corresponding tests in RequestMatchersTests . java to provide utility methods for matching request matchers in a
do n ' t select the input box if the button do n ' t change
updated calculations for height and width in the ProgressBar class to account for background height and width adjustments to improve layout accuracy by accounting for bottom
[ native ] use external _ functions . json in native native query runner
changed fields of extra _ L0 , extra _ L1 , extra _ L2 , and extra _ L4 to final and added a
added a condition to check if the state handler is invalidated in the gesture state check to ensure proper handling of gestures when the handler is
updated layout metrics calculations for landscape and portrait orientations in CellLayout and Workspace classes to improve layout responsiveness and accuracy for better
added a condition to check if the redir file is " / robots . txt " in HttpRobotRulesParser . java to ensure proper handling
[ netbeans - 3952 ] fix netbeans warning icon for javac .
replaced " continue " and " close " button with " createWorld " and " return " button in the AdvancedGameSetupScreen class to
updated null check in UDFOPDivide . java and added a new test class TestUDFOPDivide . java to ensure
refactor code formatting and add a check for ABANDONED status in FlowJob and StopAndRestartFailedJobParserTests to improve code
updated the bean definition to use " FilterProcessUrlRequestMatcher " and " requiresAuthenticationRequestMatcher " instead of " filterProcessesUrl " to
added onDestroy ( ) method to unbind the upload service connection in ShareActivity and ContributionsActivity to ensure proper cleanup of resources after activity des
corrected variable name from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency in
refactor multiple Java classes for improved consistency and organization to enhance maintainability and readability of the codebase
added request timeout configuration to RaftServerConfigKeys to ensure proper timeout handling for RPC requests
updated logging level from error to debug in TsFileResourceManager . java and modified test cases in ResourceManagerTest . java to improve error handling
added system properties to the model source setting in MavenModuleLoader to ensure that the model source includes system properties for improved functionality
added metrics tracking for readiness check status in ServerMeter and HealthCheckResource classes to enhance monitoring capabilities for readiness checks in the application
add miss model handler for animatedtorch ( # 1193 )
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when closing the writer
added a method to retrieve Hive configuration from a specified directory and updated references to use this new method to improve flexibility in configuring Hive configurations
added a new link to " Muting Users " in the FeaturesActivity to provide users with their respective links
added initialization for jdk . reflect . useDirectMethodHandle to disable direct method handle usage in reflection
hbase - 16465 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ flink - 11937 ] [ yarn ] add plugins folder to ship file when no plugins folder be specify in the yarn
updated method calls in BuildTranscriptHMM . java and TrainerDictionary . java to use getWord ( ) instead of getPronunc
updated JSON string formatting in JsonUtilsTest . java to improve code readability and maintain consistency in formatting
added extra data for tweet ID in TimeLineCursorAdapter and TimelineArrayAdapter , and updated Compose to retrieve it to ensure accurate tracking
log a warning when a message listener be terminate due to underlying ring buffer data be lose
do n ' t throw an ioexception when there be no class to analyze
replaced the import of ` Key ` with ` PublicKey ` in ` KeyFetcher . java ` to ensure compatibility with the latest security features
replaced the existing boolean variable ` isIncompatible ` with a new boolean variable ` isIncompatible ` in ` DLNAResource . java `
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and specificity
pdfbox - 4892 : check for empty array before use , a suggest by valerybokov
http : / / issues . apache . org / activemq / browse / amq - 2372 - fix for amq -
enable off - heap format by default and update default version for star tree format
limit the title length of the content to a maximum of 2048 characters to ensure the title does not exceed a maximum of 2048 characters
updated JColorChooser and BasicColorChooserUI to utilize a preview panel from ColorChooserComponentFactory to enhance flexibility in displaying the preview
changed log level from info to debug in DefaultBuildExtensionScanner . java to provide more detailed logging for extension checks
added a null check for the reusable bitmap before attempting to decode it to avoid potential null pointer exceptions during bitmap decoding
added a layout parameters field and a method to retrieve it in FakeView . java to provide access to the layout parameters for better view management
added a check to prevent illegal state exceptions when the cursor is already closed to ensure proper error handling and prevent operations on a closed cursor
pdfbox - 4892 : remove unneeded code , a suggest by valerybokov
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a new private field ` ts ` with getter and setter methods in the ` Message ` class to enable tracking of timestamp values for improved
[ opengrok ] add exceptionmapperutils to convert exception to json response
changed the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
[ graphhopper ] fix miss parameter in isochrone endpoint
removed the ` public ` access modifier from multiple test classes by removing the ` public ` modifier to enhance encapsulation by restricting access to the
refactor CSRF attribute handling into a separate method ` setCSRF ` to improve code readability and maintainability
make eclipseloaderpatchertransplants use the name of the shadowclassloader . class for bootstrap mode .
[ drools - 725 ] add numeric disabled flag to decision table parser ( # 2271 )
changed log level from info to debug for default value logging to improve logging granularity for better debugging
added null checks for axes and buttons in Lwjgl3Controller . java and modified controller management logic in Lwjgl3Controller
updated import statements for ObjectFactory in WeldFactory and WeldFactoryTest to align with the latest Cucumber library structure
refactored port forward saving logic in PortForwardListActivity to improve code readability and maintainability
added functionality to control whether to snapshot data in GlobalConfiguration to enable configuration of snapshotting of Liquibase data in the application
modified the event handling logic in SyncedFolderObserver . java to check for a non - null file before creating a job to improve robustness
refactor LocationMarshaller class for improved clarity to enhance maintainability and readability of the code
simplified condition checks for trackpad gesture events in StatusBarTouchController . java and updated gesture handling logic in TouchInteractionService . java
refactor ` VectorReader ` from an interface to a regular class ` ColumnVectorBatch ` to simplify the class structure and improve code organization
updated import statements from ` org . mockito . ArgumentMatchers ` to ` org . mockito . Matchers ` across multiple test files to
refactor PathSourcePath methods to use getRelativePath directly instead of getRelativePathName ( ) to simplify the code and improve readability by eliminating
updated RecordReader and related classes to accept RecordReaderFileConfig as a parameter to enhance flexibility by allowing dynamic configuration of record reader settings
added a null check for the extractor before instantiation in ControllerMethodInvoker . java and updated annotations in Param . java and Params . java to ensure
server : fix max _ secondary _ storage _ per _ domain in case of unlimited / unlimited resource
fix potion shift event not fire in inventory effect renderer
deprecate cold _ reads _ to _ omit option and remove it from uncheckedoptions
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to stop the leech instance to ensure proper
fix ( broker ) : add label _ is _ retry in popmessageprocessor ( # 5368 )
refactor KeyboardAddonSettingsFragment to improve code structure to enhance maintainability and readability of the code
changed the test annotation from ` @ Test ` to ` @ Ignore ` in ` ShadowDateUtilsTest . java ` to mark the test as
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and change ` Event
added upgrade request and response handling in UpgradeConnection and JettyTrackingSocket , along with corresponding tests in ClientConnectTest and JettyTrackingSocket
added timeout functionality to AndroidImplementation . java to enhance connection management by allowing configurable timeout settings
refactor methods in GitblitClient and RepositoriesPanel to return user and team permissions instead of using RpcUtils to improve permission handling and simplify
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure proper parsing and deparsing of quoted cast
updated assertions to check if the file is root or not and added a method to check if the file is writable or executable based on its operating
added logging functionality and refactored executor selection logic in FixedThreadExecutor . java to enhance thread management and improve code readability
added null check for field before checking if it contains " catalogname " to prevent potential NullPointerException when field is null
updated event type references from ` CasEventListener ` to ` InitializingBean ` in multiple configuration classes to ensure compatibility with the latest Spring framework and
refactor animation end handling into a separate method ` endAnimation ( ) ` in ` ShadowAnimation . java ` to improve code readability and
added a custom close method to the DeflaterOutputStream to ensure proper resource management by closing the deflater
added a new file ` gsp001 . java ` to test that JVMTI GetSystemProperty can retrieve system properties at early phase
refactor BeanDefinitionInjectProcessor to utilize ` concreteClassMetadata ` instead of ` annotationUtils ` to improve code readability and maintainability by
[ jme3 ] export cameramode and lightcontrol via jmeExporter instead of jmeImporter . read ( ) .
updated PopupNotificationPanel to create a new PopupNotificationPanel with a custom panel title and improved error logging to enhance user experience by
remove redundant exception class in infer . java
added a method to retrieve the feature value to provide access to the feature value for external use
changed the parameter type of the ` after ` method from ` int millis ` to ` long millis ` in the ` after ` method to allow
added properties ` onBuild ` and ` executionDriver ` with their respective getters and setters to ` ContainerConfig ` and ` Info ` classes to
updated icon setting logic in Toolbar . java and FlowLayout . java to differentiate between left - to - right and right - to -
added a boolean flag ` enablePositionIncrements ` to the ` StopFilterFactory ` class and modified the instantiation of ` StopFilter ` to
updated EmailsTest and SystemErrorEmailReportTest to use an InternetAddress instance instead of a hardcoded string to improve code clarity and
added a new variable ` mTryShareAgain ` and set it to false in ` FileActivity . java ` to control the sharing behavior during
added functionality to determine if the Jansi Native Pty is used based on the version of the Jansi native pom to ensure compatibility
refactor BandwidthProcessor to use bytesSize instead of a hardcoded value for better clarity to improve code readability and maintainability by
replaced direct calls to ` get ( ) ` with ` await ( ) ` in ` Issue410Tests . java ` to ensure that
updated URLs in EaseeBindingConstants . java to use a constant for API base URLs to improve maintainability and readability of the API
[ hotfix ] [ kafka ] increase kafka startup retry in kafkaitonit
updated matchers in SearchResultMatcher to use is ( itemName ) instead of anyOf ( ) for better clarity to enhance readability and maintainability
added SSL - related imports and implemented SSL certificate verification in OkHttp . java to enhance security by enabling SSL for client and server certificates
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController for improved clarity and functionality to enhance user
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` instead of `
added nullable fields for stdout and stderr in ShellStep . java and improved null - checking for workingDirectory in ShellStep . java to ensure
increase timeout for asyncappendertest from 1000ms to 2000ms
updated the escapeDatabaseObject methods to accept both catalogName , schemaName , and objectName as parameters to enhance flexibility by allowing specification of the object
added a boolean field ` inputChanged ` to track input change status in ` MaterialRenameDialog . java ` to ensure the input field reflects
added a test for state change behavior in ShadowDisplayTest . java and implemented state change functionality in ShadowDisplay . java to ensure that state changes
[ geos - 7013 ] add directinvocationservice interface to provide a way to invoke direct method from a service .
gwt : add keycodes . key _ x , key _ y , key _ x and key _ y : ^ x and ^ y
updated SQL query construction to conditionally include ' pg _ catalog . pg _ depend dep ' and ' pg _ class ' based on server version
( chore ) camel - core : fix checkstyle violation in queuechannel
updated method signatures and variable names in FileUtils . java for clarity and consistency to improve code readability and maintainability by using more descriptive
added handling for Jenkins nodes in the RemoteCollector initialization to support monitoring and non - aggregation applications in the collector server
refactor attribute resolution in HeadersBeanDefinitionParser to use resolveAttribute method to improve code readability and maintainability by centralizing attribute resolution logic
refactor eof handling and log warning messages in ProtobufLogReader . java to improve error handling and provide clearer context for end - of -
removed duplicate destroy methods in DefaultApplicationDeployer and added shutdown logic in NacosRegistry to ensure proper resource cleanup and handle potential exceptions during
fixed switch / cases indentation see camel - 14540
updated GoAwayGenerator and GoAwayBodyParser to handle SPDY versioning to ensure compatibility with the latest SPDY API
refactor AuditEvent initialization and JSON output in AuditEventTests . java for improved readability to enhance code clarity and maintainability while
added checks to return 0 if the input is less than FLOAT _ ROUNDING _ ERROR and adjusted the return value of Math . cbrt
fix ` ` / defaults / ' ' path issue on forge
refactor code to store the absolute path of the DX executable in a variable before adding it to the builder to improve code readability and
added unit tests for ` PointRangeQuery ` instances in ` TestPointQueries . java ` to ensure correctness of equality checks for ` Point
hbase - 16400 testhfilecleaner should not use hfile _ archived _ dir / namespace / table / region
added a condition to check if the file name matches the file name before setting the file label to ensure the label reflects the correct file size
[ hotfix ] do n ' t swallow exception in jedisclustercommand
[ hotfix ] set chainingstrategy to always in rowtimeminibatchassgineroperator
replace RegExpBasedFilterInvocationDefinitionMap with PathBasedFilterInvocationDefinitionMap and add new test cases for regular expressions and Ant paths in FilterInvocation
added benchmarks for various hash map operations in QMap - related benchmarks to improve performance benchmarking of hash map operations
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B
added checks for empty fields and refactored method name matching logic in GroovyEngine . java to improve robustness and maintainability of the code
ggb - 1343 set drawable to false for angle [ point , point ]
added TCP _ KEEP _ ALIVE configuration to HiveConf and modified server transport initialization in HiveServer to allow configurable TCP keepalive behavior during
corrected a typo in the method name from ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` to
no effective change - code cleanup - remove unused import
replaced custom ThreadFactory and Period formatting with lambda expressions in RealtimeSegmentRelocator . java to improve code readability and maintainability
createvpccmdbyadmin : do n ' t set success flag when start vpc
updated windowAlpha calculation to ensure it is non - negative and modified progress check in FloatingIconView to ensure windowAlpha is non - negative
updated fatal error message to reference Spring Security 4.0 instead of 3.2 to ensure compatibility with the latest Spring Security version
refactor multiple assertion classes and remove unnecessary check for proto3 in ProtoSubjectTest . java to improve code readability and maintainability
added ' final ' modifier to several fields in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes to ensure immut
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to include configuration handling to
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve handling of explicit line endings with wildcard
replaced multiple instances of logger initialization with direct logger calls to simplify code and improve readability
replaced instances of ` updatePurgedShardNodes ` and ` purge _ time ` with ` deletePurgedShard ` and ` deletePur
added support for version " 17 " and " 17 - preview " in JavaLanguageModule to enable support for the Java version 17 in the application
[ log4j2 - 1342 ] add a timeout to wait for compression job to finish .
[ hotfix ] [ runtime ] fix potential nullpointerexception in volatilereadnode
added a method to retrieve an unmodifiable list of steps and corrected formatting in the getStep method to improve code readability and maintain consistency in formatting
removed redundant fields fromBase58 and toBase58 in TronJsonRpc . java and updated their initialization in TronJsonRpc . java
refactor currency pair creation in BitstampAdapters . java for clarity to improve code readability and maintainability
fix flaky test for longtasktimer and meterregistrycompatibilitykit
[ euphoria ] avoid duplicate partitioning in euphoria - euphoria - euphor
changed the type of ` value ` from ` String ` to ` CharSequence ` and added support for ` ListPreference ` in ` HostEditorActivity
rename databaseversionhandler from incompatibledatabasehandler to databaseversionhandler .
added a maximum number of tweets in the query condition to limit the number of replies in query processing
updated the refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for map refresh operations
remove duplicate tail page addition in Queue . java and add a test for persisted byte size in QueueTest . java to ensure that the queue correctly
fix checkstyle issue in net / glowserver . java
refactor the grow method to improve code readability and maintainability to enhance maintainability and reduce redundancy in buffer resizing logic
added import statement for DataOutputStream in GdxSetup . java to enable writing data for improved data handling
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide a way to retrieve the submitted file name
added markReadForLoad ( ) method to LauncherFragment . java to enable reading functionality during fragment loading
modified the ` main ` and ` instrumentJar ` methods to include ` throws ClassNotFoundException ` and handle ` NegativeArraySizeException ` to improve error
added a new method ` checkForSpillPossibility ` and implemented its logic in ` HashAggTemplate . java ` to ensure proper handling of
replaced occurrences of ` info . info . getDocStoreSegment ( ) ` with ` dsName ` in ` IndexWriter . java ` to
added a default name ID format and a check for an empty supported name formats in SamlProfileSamlNameIdBuilder . java to ensure that
added error handling for password change abortion in ChangePasswordPage . java to improve user experience by providing feedback when password change fails
updated the closing brace formatting in Deadlock2 . java to improve code readability and maintain consistency
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file which contained methods to check font size between MetalLookAndFeel and the system look - and
added validation for filter begin and end dates in RRD4jPersistenceService to ensure data integrity by preventing invalid dates and improving logging
added checks to return early if numVectors is less than or equal to zero to optimize performance by avoiding unnecessary processing
test : migrate executablereftest to junit 5 ( # 4952 )
added null checks before setting view and glassPane in JLayer . java and created a new class bug6994419 . java to
camel - 16400 : added wiretap support to camel dsl . thanks to jooby for the patch .
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new option ` TOPN ` in ` PlannerSettings ` and implemented its validation in ` PushLimitToTopN ` to enable
[ java ] remove unused aerondirectoryname from agent test .
fixed - rbatch . setqueued ( true ) and rbatch . setblockingcommand ( ) method do n ' t work properly . #
remove extra file accidentally commit with hive - 3679 . ( kevinwilfong )
updated the device reference from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` in the ` createModel ` method to
updated ` onCreateOptionsMenu ` and ` onMenuItemSelected ` methods in ` SimulationViewer . java ` to ensure proper menu inflation
refactor CertificateValidator class for improved certificate validation logic to enhance security and maintainability of certificate validation logic
make hawtio home directory configurable via system property hawtio . dirname .
added a condition to handle empty comments in the Space . java file to ensure proper handling of whitespace when comments are empty
changed variables to be volatile in multiple dictionary classes to ensure thread safety and prevent potential concurrency issues
removed stack trace printing from Throwable in ContextHandler . java to improve error handling by avoiding unnecessary stack trace printing
move customitemdroptest to integration . regression and add a test for it .
added a boolean field ` ifNotExists ` and modified related methods in ` DDLTask ` , ` DDLSemanticAnalyzer ` , and `
nfsstoragesstorageresource . read ( ) should use inputstream . read ( ) instead of inputstream . read
[ java ] remove unused control request stream id from echoservicenode and basicAuctionclusteredServiceNode
added spatial operator support for OGC and FES in CapabilitiesTransformer and corresponding tests in GetCapabilitiesTest and WFSTestSupport to enhance
added import for LuceneTestCase and annotated BasicDistributedZkTest with AwaitsFix to address issue SOLR - 2161
modified the condition for checking client preface matching in Http11InputBuffer . java to improve robustness by ensuring proper handling of preface parsing
[ java ] set cluster ingress exclusive to false by default .
replaced single key string constants with an array of keys for HBase cache configuration to improve flexibility in configuring job properties by allowing multiple keys
added methods to track and update the current record number in the exception context to improve clarity and encapsulation of record counting logic
added filtering logic to remove invalid year entries from mergedItems in CategorizationFragment . java to improve data integrity by preventing invalid year entries
updated drawColor ( 0x00000000 ) to drawColor ( 0 , Mode . CLEAR ) in CacheableTextView , CellLayout
remove check for OpenGL ES 2.0 in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering methods
added ActionContext import and set context to null in BackgroundProcess . java to ensure proper context management during action execution
updated the ` getUnescapedName ` method to accept a database name parameter and modified related logic to handle database names to improve table name handling and
added connection timeout configuration and changed the count variable to be final to improve connection management and enforce immutability of the count variable
added multiple test cases for ` approx _ percentile ` queries in ` TestHiveAggregationQueries . java ` to ensure proper functionality and validation of
updated the default idle timeout from zero to 30 seconds and refactored idleTimeout and writeTimeout initialization to improve clarity and ensure consistent timeout
updated the method to retrieve shares using the user ' s platform account instead of the current account to ensure compatibility with the current user ' s platform
updated Inet6Address . java to use generics for enumeration and added null check for scope _ id to enhance type safety and prevent potential NullPointerExceptions
refactor button enabling / disabling methods in PlaybackControlView . java to improve clarity and maintainability of button state management
updated session handling to check for session ID instead of session object to improve session management by ensuring only valid session IDs are processed
replace ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to
make useexceptionprobability default to false by default
updated color assignment logic in PredictedAppIcon . java to differentiate between themed and non - themed icons to improve visual
guacamole - 586 : remove mysqluser . touserwithblobs ( ) , use new init ( ) method instead .
added " centre " alias to the aliases list in the Middle class to support additional center - related functionality in the application
added dependency injection for DirectUpload in CommonsApplicationComponent . java and made DirectUpload class public in DirectUpload . java to enable dependency injection
adjusted spacing for left and right axes in BarChartActivity and BarLineChartBase , and improved formatting in BarLineChartRenderer to
added class _ ABI _ FLAVOR , source _ ABI _ FLAVOR , and verified source ABI flavor to
added a new query parameter for operation event status type in OnlineHubService . java and modified the services list initialization in CompositeLogService .
added debug logging and visibility annotation handling in DexAnnotation . java to improve debugging capabilities and ensure visibility annotations are only added when no annotations are
( chore ) camel - jms : rename @ startbundle and @ finishbundle to @ setup and @ teardown .
modified the way the classpath is constructed by introducing a variable for better readability to improve code clarity and maintainability by separating classpath
updated the file separator handling in PackageResourceLoader . java to ensure consistent path formatting for resource loading
[ hotfix ] [ table - common ] fix npe in dataset . min ( ) and maxby ( )
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable tests related to issue b / 243855320
added ` escapePercent ` method to ` ShouldHaveMessage ` and updated error message formatting in ` ShouldHaveMessage _ create _ Test ` to
fixed - jcache . close ( ) method throw illegalargumentexception if jcache . cachemanager . geturi ( ) return null . #
fix log level for already claimed exception in command context
added an empty block to the ALPNClientConnectionFactory instantiation in HTTP2Client . java to ensure that the ALPNClientConnectionFactory is only instantiated
fix entitypropertiespacket to use the base value of the attribute instead of the max value
fix ( sonos ) : check if the speaker be initialize before use it ( # 3649 )
increased the timeout duration for countDownLatch from 500 milliseconds to 5 seconds in multiple test classes to improve test reliability by allowing more
changed log level from info to debug in LightThingHandler . java to provide more detailed logging for better debugging and troubleshooting
use a fixed thread pool in case of rejectedexecutionexception
updated method signatures and error messages in Reporter and ReturnsSmartNulls classes to include an object parameter to improve clarity and functionality of error reporting for
changed the type of the ` frame ` parameter from ` Frame ` to ` DataFrame ` in the ` generate ` method to improve type safety and
refactor multiple package - info . java and module - info . java files for improved organization to enhance maintainability and readability of the
orc : fix npe in orc page source factory when column name be empty
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine ` class to enhance functionality by allowing
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
corrected the calculation in finderPatternFinder and updated test values in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase
simplified the validation check for leadingIncludePaths in PreprocessorDelegate . java to enhance code readability and maintainability
[ wasm ] fix nullpointerexception in stringtemplate . isvectormultiplication ( )
simonstewart : add ` ` find ' ' , ` ` find ' ' , and ` ` all ' ' to the list
fix e - ac3 output channel count when no value be specify .
added a ` getFormula ( ) ` and ` setFormula ( ) ` methods to the ` XSSFName ` class and modified the
updated the target value in HighDimensionsTest from 60000 * scaleFactor to 90000 * scaleFactor to adjust the target value for better scaling
updated condition to check for zero length instead of one in SimpleTypeGT . java and added a new test for pattern schema parsing in GML
added a new test class ClassPathXmlJobRegistryContextTests to validate job registration and retrieval in the job registry
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 - camel - restlet : fixed the issue of camel - restlet not be able to validate the request body .
camel - 14263 : camel - log - allow to configure the showout property on the log endpoint
refactor trace event submission into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by encapsulating metadata
added checks to ensure only non - canceled , non - filled , and non - rejected order statuses are added to limitOrders to prevent processing of
added pixel offset calculations and validation in LCMSImageLayout . java to improve image layout accuracy and ensure correct handling of pixel sizes
refactor timestamp handling in Event and JrubyEventExtLibrary classes to improve clarity and maintainability of timestamp management
added a condition to return a resource if the path ends with a " / " in the ContextHandler . java file and created a test for
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER
renamed variable ` amt ` to ` scrollAmount ` and modified horizontal scrolling logic in ` JEditTextArea . java ` to improve code
add null check to prevent nullpointerexception in graphdecoder . readstate
test : migrate sniperprettyprinterjavaprettyprinter to junit 5 ( # 3995 )
replaced direct instantiation of URLOutputStream with a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added Entity annotations to the Mail class to facilitate entity - related functionality in the database
updated default values for " includeTablespace " from false to true and added additional command - line options to enhance flexibility in configuring tables
added getter methods for metadataBuffer and valuesBuffer in CountersReader . java to provide access to these buffers for external use
added logic to clear non - empty file data in ScanBatch . java and a new test for handling empty JSON directories in TestJsonReader .
updated failure comparison logic in StringSubject . java and modified test assertions in StringTest . java to improve clarity of failure messages and enhance test
added a regex pattern for matching library names in LibUtils . java and modified the conditional check in LibUtils . java to improve clarity and
updated exception handling in JrtJavaBasePackages . java and PackageHelper . java to catch a broader range of exceptions to improve error handling
hbase - 11313 addendum add checkdfssafemode ( ) to ensure file system be in safemode ( #
updated error message formatting in TranslatingJavacPhaseTracer . java to improve clarity of error reporting for better debugging
remove plugins from plugin cache , it be no longer need .
fix jabber contact presence status change when the contact have change .
remove the requestdetails . withresourceandparams ( string , requesttype , requesttype , requesttype , set < string > paramnames )
added a new file ` AccountInfoFetchIntegration . java ` to implement integration tests for fetching account information from the BTCE exchange
added mouse wheel functionality to VDUInput and vt320 classes to enable keyboard navigation for improved user experience
updated library path handling in Natives . java to improve clarity and maintainability of library path management
no effective change - remove deprecated @ columnhstore annotation
add ` ` player _ skin _ flags ' ' to metadataindex , fix # 688
fix fail load balancer test on window
add miss null check for member in mapservice . getentryevent ( )
replaced direct system property retrieval with privileged access for OS version to enhance security by enabling access to the OS version property
updated file suffix handling in TemplateEngineFreemarker to use a configurable file suffix to improve flexibility and configurability of the
updated hashCode and hashCode calculations in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to
added animation callbacks and modified variable declarations in ToolbarPanel . java to enhance animation handling and improve code readability
use new easybind api , do n ' t use the deprecated one
added declaredPlatforms field and modified related methods in various description classes to incorporate CxxBuckConfig for platform management to enhance
replaced instances of SimpleParameterAccessor with ParameterAccessor in multiple files to align with the new naming conventions and improve code clarity
added a null check for the passwordAttribute before setting it in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added handling for arrays in DataUtilities and created a corresponding test in DataUtilitiesTest to ensure correct instantiation of default values for byte and String arrays
refactor SSL engine creation logic to use hostName based on client authentication status to improve clarity and ensure correct host name verification based on client authentication
updated assertions from ` assertEquals ` to ` assertTrue ` for cache hits in ` TestFSTableDescriptors . java ` to improve test
danielwagnerhall : remove redundant cookie deletion from ie driver
added a boolean flag ` mHasEndedLauncherTransition ` and modified the return condition in ` AbsSwipeUpHandler . java ` to ensure
added meta charset attribute to HTML tags in HTMLListWriter and HTMLWriter classes to ensure proper character encoding for HTML elements
refactor IndexReader to improve code structure to enhance maintainability and readability of the code
updated the maximum length of the stats key prefix from 200 to 150 in HiveConf . java and refactored path separator handling in multiple classes
added a new class ` bug6337518 ` and modified ` comboBox . add ( arrowButton ) ` in ` BasicComboBoxUI
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and facilitate future development
refactor UserInfoActivity to improve code structure to enhance maintainability and readability of the code
added HomeContentProvider imports and updated broadcast sending in multiple services to ensure consistent notification of content changes for improved functionality
added functionality to manage the " stayPressed " and " focus " state in BubbleTextView and Launcher classes to improve user experience by
updated ` getFallbackResponse ` methods to include an ` Throwable ` parameter across multiple classes to enhance error handling capabilities by providing more context in fallback
removed the condition checking for ` env . _ compile _ only ` when ` env . _ dest _ dir ` is not null to simplify the
added null checks for tags before accessing their lengths in ChannelUri . java to prevent potential NullPointerException when tags are null
updated JAVA _ REGEX _ SPECIALS to include a period character and modified test cases for SQL pattern matching to enhance regex functionality and improve test coverage
added functionality to save and restore the action bar title in FileActivity and updated the action bar title in FileDisplayActivity to ensure the action bar
update type conversion from ` Iterables . getOnlyElement ` to ` Iterables . getLast ` in ` PythonDslProjectBuildFileParser . java
updated the scheduled time from " * " to " 0 " in CleaningService . java to allow for a zero hour instead of a wildcard
updated TransactionalValidationListener to handle partitioned tables and improved path retrieval logic to enhance table validation and error handling for partitioned tables
enable polling functionality in ReplicationHandler and SnapPuller classes to improve user experience by enabling polling functionality
changed the data type of generatedKey from int to long and updated SQL execution logic to handle generated keys to ensure accurate key generation and improve SQL
updated variable name from ' proxy ' to ' _ rc ' in SimpleReferenceCache . java to improve code readability and maintain consistency in variable
improve error message for failed test inlining
improve default keep - alive timeout for esh - http client
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
changed exception handling from Exception to Throwable in Dispatcher . java and modified test cases in DispatcherTest . java to improve error handling and ensure proper resource
camel - 16400 : camel - cxf - allow to configure the cxf data format when use camel - cxf
added a case for the ' ~ ' character in ClientUtils . java to enhance the functionality of the ClientUtils class
camel - slack : increase default consumer poll wait time to 10 second .
add harvesting event to blockutil . dropblock ( ) , close # 3643
updated the layout dimensions in TranscodingTab . java from 4 to 5 and added a space before the encoded audio passthrough checkbox to improve layout
added a new file ` bug8057791 . java ` to implement a GUI test for the Nimbus look and feel of
refactor flag assignment logic in LambdaToMethod . java and introduce a new interface LambdaInterfaceStaticField . java to improve clarity and
fix http : / / issues . apache . org / activemq / browse / amq - 2373 - add websocket method factory
changed the condition from checking if ' to ' is not empty to checking if ' to ' is not null to improve null safety and prevent potential
refactor ParquetFixedWidthDictionaryReaders to conditionally use ` bigIntVector . Mutator ` when using dictionary to improve readability and
updated layout handling in PortraitPagedViewHandler to differentiate between landscape and portrait orientations to improve layout responsiveness
added a new annotation ` @ Log ` and an ` LogInterceptor ` class for logging purposes to enhance logging capabilities for better debugging and monitoring of
modified the string concatenation for thread state information in QueuedThreadPool . java to improve clarity in thread state representation during debugging
added a new ` implementation ` parameter and updated related methods in ` CacheGenerator ` , ` CacheProvider ` , and ` CacheTestCase `
updated the ` createReferenceMap ` method to include ` totalFrameSize ( ) ` as a parameter to include the total frame size for better
refactor TypesafeConfigurator to improve type safety handling to enhance performance and maintainability of the code
add karaf integration test for camel - graphql
renamed the main method to bug1 , bug2 , and bug3 in RFE2891944 . java to improve clarity
removed URL encoding for keys and values in HttpClientIntroductionAdvice . java to simplify code and improve readability by eliminating
refactor unsupportedPlatformTool to an unsupportedPlatformTool class to improve clarity and encapsulation of unsupported platform tool functionality
updated loopCount initialization and logging format in RecoveryStrategy . java to improve clarity and accuracy of retry attempts logging
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
[ drools - 725 ] use random index for kieaddressmanagertest and abstractaddressmanagertest ( # 2
updated column and row specifications in VLCVideo . java for improved layout flexibility to enhance user interface clarity and usability
updated URLs from " bisq / bisq / issues " to " https : / / bitsquare / bitsquare / issues " across multiple
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory to include " . m2 " and refactored file loading logic in MBoot . java to improve directory structure and
added a call to ` glBindBuffer ( GL20 . GL _ ARRAY _ BUFFER , bufferHandle ) ` in ` VertexBufferObjectWith
refactor ServerHttpSecurity class for improved security configuration to enhance performance and maintainability of security features
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to disable tests that are not ready for execution
added default headers management in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration flexibility by allowing custom headers
added new exception classes for handling password validation errors in the Thingsboard API to improve error handling and provide clearer feedback on password validation issues
deleted the NoOpConfigPathGetter . java file to remove unused code that is no longer needed
replaced codec . base16Decode with Bytes . fromHexString for signingKey assignment to improve code readability and performance by using a more efficient
updated FloatUtil . java to use CSSName for floating - point values and adjusted the positioning of the inline block based on the current style
planner - 263 : add support for planningfactproperty and planningcollectionproperty , planningfactproperty , planningfact
updated RestUtils to use MultiMap instead of CaseInsensitiveHeaders and changed the visibility of the getDefaultHeaders ( ) method to private to improve header
use charset instead of string for encode in proxyserver , realm , simpleasynchttpclient , proxyserver , realmbuilder , http
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
replaced usage of Long . valueOf ( ) with Long . compare ( ) for comparisons in ExpandableUploadListAdapter and FileStorageUtils to
change log level from error to debug for all http client
updated import statements in LegacyAuthenticationHandlerAdapter . java to improve clarity and organization of authentication handler classes
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
added a check to ensure the filter ' s owner ' s public key matches the owner ' s public key before removing it from the network to
pgp : move bcpginputstream . wrap ( inputstream ) to bcpginputstream . wrap ( inputstream )
modified data output stream handling in MinimalLockingWriteAheadLog . java to ensure proper resource management and prevent potential resource leaks
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and modified assertions in ` HiveBaseResultSet `
updated test cases in FocusTransitionTest . java to improve test coverage for focus transitions
updated GWT import from ` org . gwtproject . core . gwt ` to ` com . google . gwt . core . g
added a condition to check if the sourceTask is an instance of MapRedTask before attempting to retrieve job counters to enhance error handling and prevent
added a null check for the readListener variable in HttpInput . java to ensure that the readListener is not null to avoid potential NullPointerExceptions
added change listener functionality for component color changes in the AppearancePanel to enhance user interaction by allowing custom color changes
updated TaskHelper constructor to use ' hidden ' instead of ' false ' for improved control over task visibility
http : / / issues . apache . org / activemq / browse / amq - 2635 - fix test failure
pdfbox - 4892 : add try - finally to ensure resource be release
updated import statements in BoundSql , SqlSource , and LanguageDriver classes to utilize DefaultParameterHandler for improved parameter handling functionality
lsra optimization : only set spill state if the loop depth be less than or equal to the actual spill depth .
add a new file ` micronautastbuilder . java ` to provide a builder for Groovy code compilation to facilitate the
refactor PgResultSet to use a separate closeInternally method for better resource management to improve code readability and maintainability by centralizing resource
initialize ` serviceAdvisorType ` to ` ServiceAdvisorType . PYTHON ` to ensure default value is set to ` ServiceAdvisorType . PY
refactor resolver management in GenericDatumReader to use ThreadLocal for thread - safe access to improve performance by avoiding multiple instances of Resolving
changed the data type of subpaths from Collection to List and updated related methods to use ArrayDeque instead of Stack to improve performance and memory management
updated byte array usage in SendCoinShieldTest to use a random byte instead of a fixed size to improve test reliability by avoiding
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` for setting personalisation based on date and locale to enhance
removed redundant code lines in CodeGenerator . java to improve code readability and maintainability
removed the ` percent ` parameter from the ` scroll ` method calls across multiple classes to simplify the method signature and improve code readability
changed the visibility of the pointer variable from private to public and added reset methods to the FlatRecordReader class to allow external access to the pointer
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` and update references accordingly to clarify the purpose of the class and
replaced specific type imports with a wildcard import and modified type handling logic in CastExpression . java to improve code readability and maintainability by
replaced the use of ` ArrayList ` with a boolean flag ` acceptsAll ` for better readability to improve clarity and maintainability of
added a new boolean variable set to false in TaskView . java to control the behavior of the task rendering process
added ` isAutoIncrement ` method to ` LiquibaseDataType ` and updated ` CreateTableChange ` to include it to support auto -
added a default value for the errorText variable in ExceptionResponse . java to provide a clearer error message when an error occurs due to Internal
updated imports and command - line arguments in DeadListenerTest . java and LocalManagementTest . java to improve code clarity and enable performance data
replace ` add ` with ` push ` for ` currentStatus ` and ` boosterStatus ` in ` BasicEventSimulationEngine . java `
added AJP connector setup and port configuration in GitBlitServer . java and updated Build . java to download JETTY _ AJP
added type coercion for intersection types in TransTypes . java and created a new class Intersection03 . java to ensure correct type co
rename ` EmbeddingTest ` to ` EmbeddingITest ` to clarify the purpose of the test class
added a native method to start a toolkit thread only once to improve performance by avoiding unnecessary thread creation
make compress in parallel for bundlecontentsubstitutenormalizationsupport ( ) .
papplet . setsurface ( ) do n ' t hide the surface on window
updated the temporary file path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability
added new configuration parameters ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` to enable or disable HTTP services based on configuration to
added a new property ` service ` to ` GoogleCloudFirestoreTicketDocument ` and implemented ticket counting logic in ` GoogleCloudFirestoreTicket
log4j2 - 1373 add comment on @ since versioning convention in generated code
updated the @ ScalarFunction annotation to allow nullable parameters and added tests for jsonFormat to ensure proper handling of null values in JSON functions
updated BadgeRenderer , IconPalette , ShadowGenerator , NotificationKeyData , and PopupContainerWithArrow classes to incorporate a
changed the method modifier of ` getConfiguration ` from ` final ` to non - final in ` FreemarkerManager . java ` to
added a test method to validate the behavior of ` setExcludedPackageNamePatterns ` in ` OgnlUtil ` to ensure that invalid package exclusion
updated deviceUdid assignment logic to differentiate between macOS and iphone platforms to ensure accurate identification of device Udid for tests across different
replaced error logging with warning logging and updated response handling in DefaultHttpClientFilter . java , while updating test cases in TestDefaultHttpClientFilter .
refactor context binding and execution handling in AllAppsView . java to improve code clarity and ensure proper execution of state changes
added a TEXT _ BURN constant and modified text paint settings based on its value to enhance text rendering control based on the TEXT _ BURN
added JUnit teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper database cleanup after tests are executed
added a line to retrieve a parser by name in SecurityNamespaceHandler . java to ensure the correct parser is used based on the specified name
added a new test method ` fastpath ` in ` BoundedLocalCacheTest ` and modified the condition in ` BoundedLocalCache ` to
refactor ` RawConnection ` to extend ` WebSocketConnection ` and implement ` complete ( FrameBytes < C > frameBytes ) ` and `
added new test cases for multiple assertions in SoftAssertionsPerfTest . java to ensure correctness of assertions in the test suite
added ` TEST _ FAILURES _ EXIT _ CODE ` constant and modified ` execute ` method to check its exit code to ensure proper handling of
updated the handling of the x - advances array in GlyphLayout . java to include a conditional check for markup rendering to improve code clarity
refactor score assertions in TestBooleanRewrites to use Java Streams for better readability and performance to improve code clarity and maintainability by
replace ` getEnclosingClass ( ) ` with ` getSuperclass ( ) ` for anonymous classes in ` TypeHandlerRegistry . java ` to ensure correct
add playerconnection . flush ( ) , remove unneeded type check
added a check to prevent multiple invocations of ` mStarted ` in ` Launcher . java ` and ` LauncherAnimUtils . java `
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java and added a condition to check for NOT _ APPLICABLE to streamline import statements and enhance
changed the default return value of the ` getBoolean ` method from ` false ` to ` true ` in ` RendererConfiguration . java ` to enable
add support for method with a generic interceptor type in the bean definition processor to enhance flexibility in handling interceptor types based on annotation types
added assertions and verification for the existence and existence of tables and partitions in FolderPermissionBase . java to ensure proper handling of table operations and verify
added a boolean parameter to handle provider registration state changes in the GlobalStatusServiceImpl class to improve handling of status publishing based on registration state changes
updated the random color generation logic in PastelColor . java to use a calculated base color value to improve the accuracy of the color representation
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
updated bitmap handling in HolographicViewHelper to create original and outline bitmaps to improve the visual representation of the view ' s state
refactor request method handling in CloudClient to use HttpMethod . fromString for better clarity and error handling to improve code readability and maintainability
add a way to infer the position of a phrase that contain a phrase in multigrampreprocessor .
removed unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
updated HivePassThroughOutputFormat handling to check for HIVE _ PASSTHROUGH _ OF _ CLASSNAME to improve compatibility
rename ChunkListener , AfterChunk , and BeforeChunk classes to improve clarity and consistency in naming conventions
updated the boundary check for the ` ch ` variable in ` DOMBuilder . java ` to ensure that the ` start ` and ` length `
refactor conditional statements in ClusteringCoefficient . java and update edge retrieval methods in EigenvectorCentrality . java , and update
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file named PublicStaticInterfaceMethodHandling . java that includes a class implementing an interface with static and default methods to demonstrate the handling of static and default methods in interfaces
camel - 1640 : camel - core - allow to configure the key selector in camel context .
replaced instances of ` Throwable ` with ` ThreadDeath ` in ` LogResolverBean . java ` and ` ResourceResolverBean . java
refactor multiple Java classes related to key and certificate management to improve code organization and maintainability
updated JGit version from " 201106090707 - r " to " 201109151100 - r " and modified the
updated variable name from ` clientId ` to ` clientKey ` in ` HttpClientIntroductionAdvice . java ` to improve clarity
int - 113 , integrationnamespacehandler now register a transformer bean definition for the ' transformer ' element .
replace BACK _ FACTOR and REWIND _ TIME constants with REWIND _ TIME and adjust conditional checks accordingly to improve clarity and accuracy of
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and overridden it in ` Button ` to
updated usage formatting in UtilityCommands . java and modified how command usage is printed in DocumentationPrinter . java to improve clarity of usage output and
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in attribute
removed setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource . java and updated size retrieval in RewriteCrossSpaceCompaction
remove duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor rule synchronization logic in ProjectPropertiesModelImpl . java for improved clarity and efficiency to enhance code readability and maintainability while ensuring
fix a bug in abstractsootfieldref . getfieldunsafe that return null if the field be not phantom field .
use custom naming convention for elastic meter registry ( fixes # 284 )
added listener and command creation methods to IController and TinyGController , and updated BackendAPI to use IController instead of AbstractController to
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to ensure that the rendering logic works correctly with
replaced System . out . println calls with TTY . println calls in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to
refactor multiple Java classes to improve code structure and readability to enhance maintainability and clarity of the codebase
changed the condition from checking if frameLength is equal to zero to checking if frameLength is less than or equal to zero to ensure that frame
updated return statements in IntFloatMap and IntIntMap to return values instead of zeroValue to improve clarity and consistency in handling zero values
updated ImageDownloadService to use Runnable for setting and revalidation to ensure UI updates occur on the UI thread to improve responsiveness and ensure
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerException when the registered variable is null
removed the native ` hasNextSibling ( ) ` method from ` AttributeNode ` , ` DocumentNode ` , and ` IeNavigator ` classes
fixed - npe in redisdistributedmapcacheclientservice if redis cluster node return null
updated logging statements in MobFileCache . java for enabling and disabling the MobFileCache to improve visibility and clarity of
refactor ColConvCCMTest class for improved readability to enhance maintainability and facilitate future updates
refactor variable handling to use ` allowCovariantReturns ` and ` syntheticNameChar ` variables to improve code clarity and maintainability by
pdfbox - 4892 : improve type safety and add new constructor
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new class ` X
added a return statement to the GenericFileConsumer class to prevent further processing during file operations
added an EventQueue invocation in bug6638195 . java to ensure UI updates occur on the Event Dispatch Thread
updated maxSize calculation to use maxBinaryMessageSize instead of getMaxBinaryMessageBufferSize to ensure accurate size adjustment based on policy settings
updated steeringValue adjustments from ` - . 5 f ` to ` - = . 5 f ` in multiple test files to ensure
replaced the use of ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to improve security by using a standardized comparison
updated date handling in JdbcSerDe to utilize local date and timestamp types to improve accuracy and accuracy of date and timestamp representation
updated VERSION constant from 2 to 3 and modified metadata handling logic to support version 3 and improve metadata reading efficiency
added conditional configurations for Flyway and FlywayInitializerJpaDependencyBean in FlywayAutoConfiguration . java and updated related tests
added a sorted method to the ClassesImpl class to ensure the class hierarchy is maintained before processing
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor methods in SharedInformer class to improve code readability and maintainability
refactor memory scope handling in TestCloseScope0 . java to support different memory scope implementations based on versioning
increased the timeout value in the test method from 500 to 5000 to allow more time for tests to complete
updated CaptchaChannelProcessorTests . java for improved test coverage to enhance accuracy of Captcha processing tests
added logic to update the owning collection of an item if the change occurs to ensure that the item ' s owner is not the same as the
added a retry mechanism to limit the number of attempts to save the registry cache file to a maximum of 3 times to improve reliability by prevent
updated the parameter name from ' mergeDirectory ' to ' directory ' in the TrackingDirectoryWrapper instantiation to improve clarity by using a more
implement [ 1.5 ] unusedimports : add test case
added validation for insert overwrite queries on bucketed Iceberg tables to ensure that insert overwrite functionality does not work on bucket partitioned Ice
updated assertions in BootstrapTests to reflect the correct number of keys and added checks for legacy SAML keys to ensure compatibility with the default identity zone configuration
updated methods to check for non - static fields in anonymous and non - static fields to ensure that non - static fields are not treated as anonymous
removed synchronization from the getAddressVector method and updated variable names for clarity to improve code readability and maintainability by using a consistent naming convention
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE _
added IOException handling to the release method in multiple lock factory classes and introduced a new LockReleaseFailedException class to improve error handling and provide clearer
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to organize
added a conditional check for unary operators in SpelExpressionTransformer and modified return statements in LiteralNode , OperatorNode , and related classes to improve
added TypeValidation . DISABLED to ByteBuddy initialization to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` and added a new class ` Err
updated lock handling in LockModePessimisticReadWriteIntegrationTest to throw a PessimisticEntityLockException and set global in
refactor ` setSystemProperties ` method to remove the ` LogFile ` parameter and update its implementation to streamline the method signature and enhance
refactor the request method to accept a first connection and handle multiple redirects to improve connection handling and error management for HTTP redirects
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants . java and updated MicroserviceFactory . java
change method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure consistency in
updated database path regex and database prefix handling in BaseAndroidTestCase . java and modified database deletion logic in GeocodeHelperTest . java to
update return statement to retrieve unread count from HomeDataSource to ensure accurate tracking of unread counts for the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for the virtual thread pool
added a limit parameter to the getAllOrder method and introduced a limit for limiting the number of orders to ensure that the method does not exceed
added null check for the user before retrieving user settings to prevent potential NullPointerException when the user is null
updated the method to retrieve the absolute file path and added a new test for matching relative wildcard paths in LocalFileSystem to ensure accurate file path matching
added maximum width and height limits for the instance ' s bounds to ensure that dimensions do not exceed defined limits
added logging functionality and a deprecated method for setting connection manager timeout in CommonsHttpSolrServer . java to improve error handling and provide clearer
removed exception handling for document creation errors in PrintController . java to streamline error handling by eliminating unnecessary exception handling
refactor ` hashed _ filename ` calls to use ` map ` instead of ` Optional ` for better readability to enhance code clarity and
added checks for empty words and number formats in SpellChecker . java and implemented tests in SpellCheckerTest . java to improve spell checking
corrected formatting of the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
added methods to manage and display file actions in the FileDisplayActivity class to enhance user experience by allowing contextual actions on the file list
added daemon mode to the ReplicationHandler and improved error handling in the SnapPuller class to ensure graceful shutdown of the puller and
updated the update method call in StoreCachedTest . java to ensure consistency in data handling
updated the constructor of ` StreamerLoader ` to use ` theMaterials ` instead of ` materialHolder ` and removed ` MaterialColumnParser
updated dependencies in DependencyBank . java to include more descriptive descriptions to enhance clarity and understanding of dependencies in the project
added maximum recycled views for various item types in the RecyclerView pool to improve user experience by managing maximum recycled views based on
add a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure the build process works
fix baritone not be able to start when there ' s no valid waypoint .
added imports for ` ParsedNode ` , ` ParsedNodeException ` , and ` ResourceAccessor ` in ` CreateProcedureChange . java ` to
added null handling support in FilterOperatorUtils and new test cases in NullHandlingEnabledQueriesTest to enhance filter functionality and ensure correct handling of null
added validation checks for bootstrap method parameters and their types in JDynamicInvokeExpr . java to ensure bootstrap methods have the correct number of arguments and
change the port number for the jms service from localhost / myservice to 9000 / myservice to allow the test to run on a different
removed the call to ` runtimeOptions . getFormatters ( ) . clear ( ) ` in ` CucumberInstrumentation . java ` to
changed the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` and updated
modify workspace label visibility logic in DeviceProfile . java to ensure workspace labels are only hidden when necessary to improve layout responsiveness by preventing
refactor assertions in ReplicationFactorTest to use a unified ` assertRf ` method for clarity to improve readability and maintainability of
sulong : fix initialization problem in llvm when use pre - initialization .
removed the @ Ignore annotation from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced Integer . valueOf with Integer . parseInt for value parsing in VisualScoreTagTest . java to improve performance by avoiding unnecessary boxing
updated error messages for clarity and changed file tree walking to use Integer . MAX _ VALUE instead of - 1 to improve error reporting and
refactor segment name checks to use dedicated methods for high and low level consumer segment names to improve code readability and maintainability by centralizing
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to enhance
updated the method to return the current time instead of the current date to ensure accurate date representation by using the clockReader ' s current time
added " - target " and " x86 _ 64 - none - linux - android " to the return statement in TargetCpuType . java
added a method to delete all files associated with a specific account in the FileDataStorageManager to improve file management by ensuring all files are deleted
updated help command formatting in SchemaCrawlerCommandLine . java to improve readability and clarity of help output
added a static factory method to create a suite description and updated the description comparison logic to use a unique ID instead of the display name to improve
replaced the decoding method from ` Decode ` to ` decodeBarcode ` in ` SnapshotThread . java ` to simplify the code by using
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor and eliminate unnecessary dependencies
added unit tests for the range pasting functionality in GWCZoomContextFinderTest . java to ensure that the GWC zoom context
added dependency tracking configuration to JRubyScriptEngineConfiguration and modified its usage in JRubyScriptEngineFactory to conditionally activate dependency tracking based on
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure accurate
catch alreadyexistedexception when try to create a new keyspace . patch by jbellis
improve performance of splash screen by cache the image
updated tuner configuration handling and error logging in multiple classes to improve clarity and ensure proper resource management during tuner operations
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enhance functionality by allowing tests
added a conditional statement to set ` includeString ` to " db : hsqldb " to ensure proper database configuration for tests
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace . materializehostexception ( ) should not be call on empty stack trace .
make graalservices . load ( service ) always export jvmci to avoid reflection
added test case for duplicate command handler resolver
[ flink - 20865 ] [ stream ] add fine - grained - shuffle - mode . all - blocking option to batch job
fix entityfish hook not apply to world . onblockstatechange ( ) .
camel - 14263 : camel - ftp - create an aws - sftp component base on sdk v2 , fixed some javadoc warning
rename methods from ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
ganglion : when compress package name leave the last element of package unchanged to make metric more readable
added a check for empty items in the AppsContainerRecyclerView to prevent processing when no items are available
added a conditional bean definition for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration to ensure that the REPOR
log4j2 - 1343 xmllayout now support mdc property .
added support for an " omitHeader " parameter in multiple writer classes to conditionally remove specific response headers based on user preferences
updated the method to retrieve property names from ` getPropertyNumber ( ) ` instead of ` _ id ` and added a new test class ` Test
updated return statement to use Description . getBuildRuleType for consistency to improve code readability and maintainability
updated method removal in SootClass to use a separate scene variable to improve code readability and ensure proper resource management
add null check for disputes - per - trade - id , disputes - per - payout , disputes - per
added a ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and updated method signatures in ` DatabaseSchemaCrawler ` and ` Table
wallet : set ` ` not _ have _ in _ chain ' ' confidence type to ` ` not _ set _ in _ chain ' '
refactor body argument handling in HttpClientIntroductionAdvice to improve clarity and functionality to enhance readability and maintainability of the
craftinghelper : skip condition for json file that do n ' t start with _
hbase - 2643 hregion # close ( ) should log a warning if the region open fails
refactor null and length comparisons in Credential . java for improved readability to enhance code clarity and maintainability by reducing redundancy
[ java ] do n ' t check for image subscription in the client when a subscription be not present .
replaced reflection - based process destruction logic with a direct call to ` process . destroyForcibly ( ) ` to improve code
added oracle support to the conditional check in TestDefaults . java to ensure compatibility with Oracle database connections
camel - 1640 : fix mail consumer to check if the mail store be connect to the mailstore .
added token validation in the parser to check if there are more tokens in the document to ensure that the query does not consume tokens that have not
camel - 16850 - camel - aws2 - translate : list all the available language in the enum - start with ` ` a '
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the instantiation of ` HMMModel ` in ` Voice
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes , and created corresponding tests to enable email domain
added read and connect timeout configuration constants and methods to retrieve their values in the Configuration class to improve flexibility and configurability of timeout settings
do n ' t call processdeferredconcepts ( ) if there be no data to save
added RedisCategory import and JUnit category annotation to RedisServiceRegistryTests . java to categorize tests as Redis - related for better organization and
updated ` FindDeprecatedMethodsTest ` to use ` @ ParameterizedTest ` and ` @ NullAndEmptySource ` for type pattern handling to improve
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` to ensure proper rendering of the
removed unused import statements in multiple classes to improve code cleanliness and reduce unnecessary dependencies
replaced ` setEventSignature ` with ` getEventSignatureFull ` in ` ContractEventTriggerCapsule ` and added a new method in ` Log
updated filter condition to exclude filenames ending with underscores instead of contains to improve filtering accuracy for file operations
replaced the clearRect method with fillRect and set the background color to improve rendering performance by using the current background color instead of the background
added an else clause to the package compilation process in PackageBuilder . java to ensure that compilation errors are only reported when invoker lookups are present
removed unnecessary print statements from multiple Java files to improve code readability and reduce unnecessary console output
added a condition to check for NaN score values before assertions in TestFieldCacheSort . java to ensure that scores are only validated when they are
updated the initialization of oldKeys to use a copy of the entity keys to ensure immutability of the oldKeys set before modifying it
added a check for zero time strings in ColumnSnapshotGenerator and implemented a test for date default values in MySQLIntegrationTest to ensure proper handling of
rename ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and ` taker
changed ` vsContext ` from ` Map ` to ` Map < ? , ? > ` in multiple collector classes to enhance type safety and prevent
[ drools - 3509 ] always read model ' s attribute when create a new kiesession from a kiecontainer
updated HiveMetaStoreClient instantiation to use ' this . conf ' instead of ' conf ' to ensure proper context is used for HiveMetaStore
added a conditional check to return early if the modalness matches the current modalness to optimize performance by avoiding unnecessary processing when the modalness
added unit test for codec capabilities in ShadowMediaCodecListTest . java and implemented native global settings in ShadowMediaCodecList . java to ensure
request focus on confirm button when enter key use ( # 5460 )
added validation for width and height in SunVolatileImage and improved error handling in X11SurfaceDataProxy and XRPMBlit
updated the thousands separator from a period to a non - breaking space in the FormatData _ uk . java file to ensure proper formatting of
replaced int array with AtomicInteger for thread - safe operations in AsyncStressTest and StressTest to improve concurrency handling and ensure thread safety
added beta flavor visibility handling and toast messages in AchievementsFragment and LeaderboardFragment to improve user feedback when achievements are unavailable
added access , name , and description properties to SearchMethodVisitor to enhance the functionality of the SearchMethodVisitor by providing context - specific information
added sleep statements in IoTDBInsertWithoutTimeIT . java and modified exception handling to include InterruptedException to improve code readability and handle potential int
updated formatting of code in DLNAResource . java for consistency to improve code readability and maintainability
changed the name attribute from " batch - config " and " stream - config " to " batch - config " and " stream - config "
refactor transaction management methods in TableReader and TableReaderTxnScoreboardInteractionTest to improve transaction handling and resource management to enhance code clarity
use ssl . keymanager . algorithm or ssl . trustmanager - type if available
refactor ` getSingleSourceApplicableTest ` method to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to improve code readability and
fix tab key issue in blockmania
rename ` AccessSpecifier . PACKAGE _ PRIVATE ` to ` AccessSpecifier . NONE ` across multiple files to clarify the purpose of the property
renamed the method ` unHandled ` to ` unhandled ` and updated error logging for overridden types to improve clarity of method purpose and enhance
updated variable assignments for stripes and stripeStats in OrcInputFormat . java to ensure correct retrieval of stripes and stripe statistics based on
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
updated URLs for myhentaicomics from HTTP to HTTPS in MyhentaicomicsRipper . java to enhance security
added command - line argument ' v ' to display the current jar version to provide users with an easy way to access the jar version
use splittoken ( ) instead of split ( ) for export list
added keyboard rotation handling and input connection functionality in ConsoleActivity and TerminalView to improve user experience by ensuring proper rotation preferences are used based on keyboard
changed the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` to
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 15836 : camel - jolokia - allow to specify the class name of the headersmapfactory when use jolokia
updated closing brace formatting in JavaCompiler . java and Diagnostic . java to improve code readability and maintain consistency
int - 113 , int - 113 , int - 113 , int - 113 , int - 113 , int - 1
corrected the index used in the expecting method call from ` i + 1 ` to ` i 2 ` to ensure the correct index is used
updated class loading logic in ` AbstractScriptProcessor . java ` and ` InvokeScriptedProcessor . java ` to improve error handling and ensure proper
updated PooledConnectionImpl to support both PGStatement and CallableStatement classes to enhance compatibility with PostgreSQL for enhanced connection management
refresh the size estimate when the test be run
changed log level from error to warn for no more memory fragment limit message to provide a more appropriate log level for debugging purposes
avoid auto - compaction when it ' s expire
fixed - rblockingqueue . pollfirst ( ) and rblockingdeque . polllast ( ) method throw illegalargumentexception . # 3
[ hotfix ] [ runtime ] remove unused ` ` format ' ' parameter in jobinspectcommand
refactor Engine class to improve code structure to enhance maintainability and readability of the code
refactor child sorting logic in ChildHolder . java to improve readability and maintainability of the code
refactor aclclient to use sessioncredentials instead of remotingcommand
changed the condition from checking for numIndexDims to checking for numDataDims to ensure correct handling of data dimensions in the BKDWriter
[ hotfix ] do n ' t print stacktraces to stderr in notebookserver
use ' lt ' instead of ' funn ' for list element in expressionnodeevaluator
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor . java
cloudstack - 7803 : improve error message when volume attach to vm before create snapshot policy
removed the public access modifier from several methods in ItemWriter . java to enhance encapsulation by restricting access to these methods
updated the mock variable name from an empty string to a test string in the RoombaHandlerTest class to improve clarity and specificity of
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced FSDirectory with RAMDirectory in TestNorms . java to improve performance by using a more efficient directory implementation
updated line height calculation to use a static variable for consistency to improve rendering efficiency by maintaining the smallest line height during drawing operations
refactor WalletAppKit class to improve code readability to enhance maintainability and facilitate future updates
[ netbeans - 3322 ] remove hat _ js _ nashorn and hat _ js _ nashorn engine
remove chat transport menu item from the button group when it ' s unselected
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
updated the handling of the BSQ block explorer to use Optional for better null safety to improve code robustness by avoiding potential NullPointerExceptions
added attribute management methods in StandardSession and Session classes to enhance session management capabilities
added assertions to verify the presence and presence of a plain bean ' s primary key in the database to ensure that the bean ' s primary key
updated the array size from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to align the initialization with the initial page count
refactor BatchCommandLineLauncher to improve code structure to enhance maintainability and readability of the code
added data source and transaction manager beans for HSQL embedded database configuration to enable in - memory database support for testing and simplify transaction management in the application
changed the implementation of GlowrootLogHttpService from UnauthenticatedHttpService to HttpService to align with the intended HTTP service implementation
pdfbox - 4892 : set composite to nonstrokejavacomposite , a suggest by valerybokov
removed synchronization from ` notifyAll ( ) ` in ` DocumentsWriter ` and added refresh logic in ` DocumentsWriterPerThread ` to
added methods to retrieve and set multiple choice options and validation constraints in UiBinding . java to enhance the UI component ' s flexibility by allowing
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency and clarity to improve code readability and
only update the stored copy of the tree for a full save .
[ hunspell ] make dictionary . parseaffix ( ) thread - safe .
replaced explicit type parameters with diamond operator in KrakenAdaptersTest . java to improve code readability and maintain consistency in variable
removed the import of CharTermAttribute and used it in DefaultIndexingChain . java to streamline token attribute handling for improved performance
updated method implementations in NBJavacTrees . java to improve code readability and maintainability
added a check for unsupported data encoding in VectorizedPrimitiveColumnReader to ensure proper handling of unsupported encoding scenarios
added MarkerFactory import and modified logging logic in HttpSolrCall . java to improve logging clarity and ensure proper context for logging output
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener to ensure proper cleanup of metadata service proxy resources
fix infinite recursion in defaultentityqueryrepository when maxlevel be static constant
updated the message construction in HubChangeExecListener to provide a specific message based on the presence of a changelog ID to improve clarity of error
added a new ` TRY _ HARDER _ HINT ` Hashtable and modified the ` try harder ` logic in ` AbstractBlackBox
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompile
refactor event handling logic in ObjectStore . java to improve clarity and efficiency to enhance code readability and maintainability
simplified the validation logic in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability
refactor temporary block entity handling to use a list of entities to improve clarity and maintainability of the code
[ hotfix ] [ intrinsification ] remove redundant code in intrinsifyarraycopyphase
do n ' t set the logger level to ` ` all ' ' in testcoyoteadapter
removed the ` WantedAnywhereAfterFollowingInteraction ` class and updated ` Reporter ` and ` HasStackTrace ` classes to streamline
added null checks for account and key addresses in AccountPermissionUpdateActuator , PermissionAddKeyActuator , and PermissionDeleteKeyActuator to
make the command order in scriptlauncher thread - safe .
feat : add ` ` lifetime : : v2beta ' ' and ` ` eta : : v2bet ' ' to workflow proto
fix a bug in the basetree that do n ' t have metadatakey . max _ leaf _ records property set .
updated AsmLoader instantiation to accept a ClassLoader parameter to ensure proper class loading based on the interface class ' s class loader
pdfbox - 4892 : improve handling of image with no initial point , a suggest by valerybokov
updated the export statement to differentiate between " export " and " declare " based on the ` isDefinitionScope ` flag to improve clarity
replaced the EmptyServerHandler with an AbstractHandler that copies the request input stream to ensure that the request is properly handled when the server is
simplified the list of listener strings in the inputManager to improve code readability and maintainability
added a final variable ` lhs ` to handle null cases in ` AbstractSqmPath ` to improve robustness by preventing null pointer exceptions
updated package declarations in multiple test files for consistency to improve code readability and maintainability
refactor BufferedImage handling and filter logic in AwtCanvas . java to improve image processing efficiency and support for different image types
[ gr - 3640 ] fix libgraal initialization and add qualifier to compilerconfigurationfactory .
[ hotfix ] [ test ] remove dataflowportabilityapiunsupport from pardotest
replaced the method ` remove ( ) ` with ` poll ( ) ` and added a null check for the response object to improve response handling
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility during serialization
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log warn when max size configuration do not allow any data in the map
updated return messages from " AST " to " LST " across multiple files to reflect the correct terminology for LST elements
refactor calculations and variable declarations in ThreadedAcousticScorer . java for clarity and consistency to improve code readability and
replaced AssertionError with a null return in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated method calls and variable names in ApplicationControllerFluentLeniumTest . java for consistency and clarity to improve code readability and maintain
added ` makeString ` method implementations for ` ParallelIterable ` , ` RichIterable ` , ` AbstractSynchronizedRichIterable ` , `
updated OidcServicesManagerRegisteredServiceLocator to use a default order constant instead of a hardcoded value to improve code clarity and maintain consistency
added a Predicate < ProposedWeakAssociation > to the WeakAssociationsAnalyzer class and modified related methods to incorporate it to enhance
refactor compression logic in Deflater class to improve performance and reduce memory usage
added exception handling for IOException in Font . java to improve error management by throwing IOException when exceptions occur
added a null and empty check for the content variable in VersionTypeBinding . java to ensure that a valid version is returned when the content is
refactor ` onPostExecute ` method to accept a ` List < Place > ` instead of a ` List < Place > ` to improve
changed content type check to be case - insensitive to ensure consistent handling of case sensitivity in content type validation
change openssh - key - v1 format to ` ` openssl . 1 ' ' .
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding behavior to improve flexibility in handling folder name suggestions
updated imports and modified cache usage annotations in InheritanceCacheTest . java to improve code clarity and ensure proper caching behavior for the Post entity
updated import statements in ConnectOAuth2RequestFactory . java and implemented the getUserApprovalRequest method in TofuUserApprovalHandler . java to
fix tag value convention for influxdb ( # 645 )
do n ' t crash if there be no resolution for the quickfix
changed the cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the updated cookie handling mechanism
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated its usage in the ` Subject ` class to improve
added functionality to manage the visibility of the clear all button in OverviewActionsView based on user preferences to enhance user experience by allowing users to
updated ` desiredRepoVersion ` to be ` final ` and modified timeout logic in ` ClusterStackVersionResourceProvider ` and ` HostStackVersion
deleted the MemoryLeakTest . java file which contained memory leak tests to the test class is no longer needed
update the return statement in ServletTester . java to conditionally include the local host ' s IP address to ensure the URL format is consistent
allow plotSquared to hook into mvdwplaceholderapi if enable .
wait for cluster size to be up to date in abstractpartitionassignmentcorrectnesstest
replaced unsupported operation exception with a singleton implementation in FFIProvider . java to improve flexibility in loading the FFI provider based on the
added a new test method ` testHierarchicalWFileList ` in ` BatchProcessTest . java ` to verify the functionality of hierarchical W file
added null checks and updated property retrieval logic in MongoTemplate . java , along with new test cases in MongoTemplateTests . java to enhance robust
change the default value of position from 0 to NODE _ LIST when the input count exceeds the directSuccessorCount
added a new field ` accTradeValue ` and its getter / setter in ` BithumbTicker ` , modified ` BithumbMark
updated logging statements in RealtimeSegmentDataManager and AvroUtils to include segmentName and improved logging format to enhance log readability and maintain
updated ` maxParallelThreads ` to ` MAX _ PARALLEL _ TASKS ` and replaced hardcoded values with a constant value to
replace ArrayList with CopyOnWriteArrayList for headerReaders , dataReaders , and readers in FixedByteMVMutableForwardIndex and FixedByteS
update copyright year to match last edit in pom . xml
added a null check for destinationBuffer in FlipTransition . java to prevent potential NullPointerExceptions during operations
camel - jbang - fix camel - msv unit test which fail on slow ci server
updated conditional check from ` beginCycle = = currentCapsule ` to ` beginCycle > currentCapsule ` to ensure proper validation of the
increased the number of generated values from 6 to 10 in JdbcExpiringCodeStore . java and updated assertions in CodeStoreEndpointsTests
added a condition to check if the object is an instance of UniqueConstraint before matching it to ensure proper handling of unique constraints in the change filter
updated the handling of language codes and improved formatting in MediaDetailFragment . java to enhance code readability and maintainability by simplifying language
do n ' t swallow arrayindexoutofboundsexceptions and classcastexception
added reference and key filters to the ListImagesCmd and ListImagesCmdImpl classes to enhance functionality by allowing filtering of images based on reference and
camel - 16400 : camel - jms - allow to configure bridgeerrorhandler on jms endpoint . thanks to joseph for the
added conditions to check for specific conditions in OpExclusionUtils . java and set all ops to true if no ops are found for exclusion to
added return statements to DatabaseCommand . java to ensure the method returns false before proceeding
added new Politician instances for " President of Umpa Lumpa " , " Prime Minster of Chees
[ zeppelin - 5271 ] fix npe in beanshellinterpreter when initfile be null or empty
camel - 14263 : camel - restlet should use the port from the component instead of hardcoding it in the restlet endpoint
removed unused imports and added a case for BlockID . WALL _ SIGN in SchematicFormat . java to streamline code and enhance
added a system property to set the maximum query length to 100MB in QTestUtil . java and removed configuration from SessionState . java to
updated visibility of fields and refactored HttpConfiguration initialization in WebServer . java and WebServer . java to enhance encapsulation and improve code
updated sink names from " writeHdfs " and " readKafka " to " hdfsSink " and " kafkaSink " across multiple files
updated the logic to determine if the application name is not equal to " spark . app . name " and modified the handling of the " spark
rename variable ' whiteName ' to ' includedName ' in ManagedClassFactory . java to improve code readability and maintain consistency in naming con
danielwagnerhall : add a new maximize window api to the remote server
updated methods in LocalCellProviderFactory , AbstractEmbeddedCellBuckOutInfo , and DefaultProjectFilesystemFactory to include main cell buck -
added an assertion to check if the exception message contains " entity expansions " to ensure that the error message does not contain " entity exp
modify table offset and length assignments to mask values with 0x7FFFFFFF to ensure that the values of 0x7FFFFFFF are not
added a customization method to the DirectMethodHandle class to ensure that the form ' s customized state is correctly set to null
refactor buffer initialization and coordinate checks in LineChartRenderer . java to improve code readability and maintainability
refactor flavor validation logic in AndroidBinaryDescription . java for improved clarity and maintainability to enhance error handling for unsupported flavors and
updated buffer index from offset to i in LwjglGL11 . java to correct the buffer index used for rendering
added new classes ` Property ` , ` PropertySuper ` , and ` TestClassResolutionFail ` for handling ` NoClassDefFoundError `
remove shutdown hook if group property ` ` shutdown . hook . enabled ' ' be set to true
updated the FilterChainProxy class to FilterChjainProxy and modified the VirtualFilterChain constructor to use FirewalledRequest directly instead of
replaced Collections . sort with Arrays . sort for intermediateResult and updated return statements accordingly to improve code readability and maintainability by using a
added checks to ensure the schema is loaded before loading it in MetaDataBasedSQLCompletionProvider and updated mdTable assignment in QueryTypeAnalyser
initialize baseType to null in DatabaseInfoRetriever . java and initialize literalPrefix , literalSuffix , and localizedTypeName in MutableColumnDataType . java to
updated method references in multiple Java files to use { @ link } syntax to improve clarity and maintainability of the code
replaced instances of ` getInstance ( ) ` with direct instantiation of ` ObjectEqualEvaluator ` , ` ObjectContainsEvaluator ` , and ` Boolean
updated configuration paths from " / / osx " to " / / osx _ config " across multiple files to standardize naming conventions
added sound effects functionality to AllAppsView . java to improve user experience by enabling sound feedback during app launches
changed the exception type from Exception to IOException in the main method signature to provide more specific exception handling for better error management
enable granularity for the left axis in BarChartActivitySinus to improve chart display accuracy for better data representation
refactor version comparison logic into a separate method for clarity to improve code readability and maintainability by encapsulating version comparison logic
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added assumption checks for OS support to improve test reliability and
added close methods to various connection classes to ensure proper resource management and prevent potential resource leaks
fix intermittent failure in socketremotetest due to race condition in mockappender
[ beam - 4142 ] check that a resource be a directory .
removed unused import statements from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability
removed duplicate call to unbindHandle in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes for improved clarity to enhance maintainability and readability of the code
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated NavbarButtonsViewController to use configuration for dark theme support to improve the visual appearance of navigation buttons based on the current UI
[ gr - 3640 ] make sure we do n ' t crash on failure .
replaced bootstrapMethodIndex , nameAndTypeIndex , and memberIndex with refKind and memberIndex in ClassWriter . java to improve clarity
added BlockFormattingContext parameter to findBox and findElementBox methods in BasicPanel . java to enhance rendering capabilities by incorporating block
log stderr to console if process close unexpectedly
added null checks and improved error handling in Collections and CheckedListReplaceAll classes to ensure robust handling of null operators and provide clearer feedback
added conditional logic to handle connection writing in SslConnectionTest . java to improve test reliability by allowing conditional execution of the fill logic based on
added listener registration for device configuration changes in DeviceFlag . java and changed visibility of mCurrentValue in FeatureFlags . java to enhance device configuration management
added an import statement for JUnit ' s Ignore annotation and annotated tests in GatewayRSocketIntegrationTests . java to temporarily disable tests related to
removed import of MalformedURIException from StandardRequestHandler . java to streamline code by eliminating unnecessary dependencies
update instructorfeedbackeditpage to fix focus issue
refactor synchronization and subscription logic in KrakenStreamingTradeService . java to improve code readability and maintainability
replaced System . err . println with System . out . println for ignoring Class - Path entries to standardize output formatting for better readability
added a boolean parameter ` randomAccessRows ` to the ` SparseRowMatrix ` constructor to allow customization of the ` SparseRowMatrix `
cloudstack - 7803 : do n ' t send volume _ delete event for volume with no poolid
refactor file input stream creation to use dynamic path based on Hive configuration to improve flexibility and maintainability of the code by allowing dynamic path
use vendored guava . v26 _ 0 _ jre instead of guava to fix build
memorycallgraphbuilder : reset internal state before register cctprovider
added check for null multiuserchatopset in conference chat manager to avoid npe
added file write validation in the save functionality to ensure the file can be write before proceeding
added a new FolderSyncActivity and updated DrawerActivity to handle folder synchronization functionality to enhance user experience by integrating folder synchronization features within the
[ hotfix ] [ test ] use try - with - resources in sequentialchannelstatereaderimpltest
improve spanishtreenormalizer to handle dot - separated word
replaced the pointReader method with heapPointWriter ' s packedValueSlice method in SimpleTextBKDWriter . java to streamline
added LocaleRandomizer and its corresponding test class for Locale - based randomization to enhance localization support in random number generation for locales
tika - 3745 -- add mime type detection for font printer ( # 3649 )
add 9.0 to the list of version in Installer and AutoUpgrade classes to ensure compatibility with the latest version of the software
added ` AccessController . doPrivileged ( ) ` to the ` run0 ( ) ` method in ` TCPTransport . java ` to ensure proper access
updated the read timeout parameter in Http2AsyncParser to use a default value of 0 to ensure that the read timeout is set correctly when the
change default value of WATCHER _ INITIAL _ DELAY from 120 to 600 to increase the initial delay for better monitoring and performance
updated the error message to include the actual primary key name instead of the previous column name to improve clarity of error reporting for primary key constraints
added date formatting functionality to handle custom date fields in ThirdEyeJiraClient to enhance date handling capabilities for better user experience
refactor priority generation to use a priority frame header instead of a lease object to improve code maintainability and simplify the priority frame generation process
added a constant for maximum scalar replacement code size and updated the scalarReplace boolean condition to optimize scalar replacement handling based on the length of the entire
added DATE _ TAKEN to the projectionTest array and updated folderSortOrder and fileSortOrder to include DATE _ TAKEN as a valid
update image drawing coordinates in TexturePacker2 . java to correct positioning of images to ensure correct rendering of images with proper dimensions
added WebSocketUpgradeFilter to JettyWebSocketServerContainer and modified servlet context handling in JettyWebSocketServletContainerInitializer to enhance WebSocket upgrade functionality and
added shutdown calls for validateSignService , TransactionsMsgHandler , and transactionHandlePool , and modified Timer initialization in NodePersistService to ensure proper
added ` RawJsonRequestBodyAnnotationProcessor ` and integrated it into ` JaxrsSwaggerGeneratorContext ` , ` Echo ` , and ` Raw
added a new method ` newTarget ` to create a ` Target ` object with specified target type and extension to facilitate the creation
updated BeanContainer to use ArrayList for list creation and added BeanContainerTests for unit testing to enhance functionality and ensure correct behavior of BeanContainer operations
changed the metric name from " blockCountHitPercent " to " blockCacheCountHitPercent " to accurately reflect the purpose of the metric
camel - 16462 : fixed fileinputstream cache leak when exchange be complete .
updated TeltonikaProtocolDecoder to set device ID for position to ensure proper device ID is used for position processing
replaced ` Files . readFirstLine ` with ` Files . asCharSource ( buildFile . toFile ( ) , Charsets . UTF
added a check to initialize the operator symbol if it is null in the JCAssignOp method and created a new Test class with a method to
added enableAccountHandling flag and modified onCreate method in BaseActivity to control account handling behavior during activity initialization
improve performance of isoschroneresource . getmaxcomponent ( ) by heuristically find the main connected component of a polygon
updated DrillViewTable to accept a list of paths and modified constructor to accept a path parameter to enhance flexibility in view management by allowing
updated the constructor of ` PooledByteBufAllocatorL ` to include default allocation parameters to enhance flexibility in allocator configuration based on system properties
updated the array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java with serialization tests to ensure correct
added LLAP _ IO _ THREADPOOL _ SIZE configuration to HiveConf . java and modified executor initialization in LlapIoImpl . java
enable substitution for sun . security . ssl . debug and sun . security . ssl . ssllogger on jdk 11 +
refactor latitude and longitude range checks in LatLonGrid . java and add a new test method in TestLatLonGrid . java to improve
implement expectedconditions . invisibilityofelementwithtext ( ) and expectedconditions . refresh ( ) .
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and modified its implementation to include it to enhance file replacement functionality by
added a test for the ` getOuterClass ` method in the ` SomeInnerClass ` class to ensure that the ` getEnclosingObject `
added a new configuration option " auto _ generate _ android _ facet _ sources " and updated its value in IjProjectBuckConfig to
refactor message handling in HubChangeExecListener to use dynamic messages instead of hardcoded strings to improve clarity and maintainability of log messages
added properties property handling to the Link class and corresponding tests in QuickLinksConfigurationModuleTest to enable flexible configuration of link properties in the Quick
removed @ EqualsAndHashCode annotations from InitialConfig and YamlConfigFileDTO classes , and added a toString ( ) method to YamlConfigFileDTO to enhance
updated generic type parameters in AwaitableServerClientCallConfiguration to include ReqT and RespT to improve type safety and clarity in the
refactor class loading methods to use ` @ CallerSensitiveAdapter ` instead of ` ClassLoader . callerClassLoader ( ) ` to improve clarity and
updated import statements and refactored token generation logic in RequestItemRepositoryIT . java to enhance code readability and maintainability by using a
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to replace ` LinkedBlockingQueue ` with `
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
refactor ` TimeStepdefs ` to use ` Calendar ` instead of ` HumanTime ` for better date handling to improve clarity and
add spark _ isolated , spark _ recessive and spark _ recessive to the list of supported mod
updated proxy creation to use ` getUri ( ) ` instead of ` ExchangeSpecification ` across multiple services to ensure consistency in proxy creation across different services
updated string concatenation in RecordGenerator . java for clarity to improve readability and maintainability of the output message
camel - 14263 : camel - kafka : do n ' t auto commit on kafka consumer when auto commit be enable .
removed unnecessary lock release call in Liquibase . java and updated outputStatement method in LoggingExecutor . java to streamline lock management and
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and added deprecation warnings in AuthorizeTagCustomGrantedAuthorityTests . java to improve code clarity
refactor synchronization to ensure thread safety when closing files , committing , and flushing operations to improve thread safety and ensure thread safety during concurrent operations
polish ` ` optimize property resolution in spring boot auto configuration ' '
changed the base symbol reference from ` currencyPair . baseSymbol ` to ` currencyPair . counterSymbol ` in the ticker adaptation method to ensure accurate
camel - 16400 : fix the build error of camel - core
replaced UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to
added synchronization to date and number formatting methods to ensure thread safety when accessing shared resources
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated heightmap height scaling from a fixed value to a dynamic value based on the heightScale variable
updated equality check from ` equals ` to ` assertNotSame ` in ` SecurityConfig ` and changed the assertion in ` SecurityConfigTests `
add default value of ` false ` for ` dumpPartitionId ` in ` StdoutSink . java ` to ensure that the default value of `
added UTXO output and outputs handling in UTXOSetTest . java to enhance testing capabilities for transaction output management in the system
[ java ] fix false positive with unused variable name
pdfbox - 4892 : add null check to avoid npe
added a test for job parameter overrides in JsrJobOperatorTests to ensure correct job restart properties are applied during job execution
added a new boolean field ` disallowBatchOnCascade ` and a corresponding method ` isDisallowBatchOnCascade ( ) ` to
refactor principal creation logic in JaasAuthenticationHandler . java to improve clarity and maintainability of the code
refactor core closing logic to use a asynchronous executor for better resource management to improve responsiveness and error handling during core closure
added null check and visibility control for mActionsView in RecentsView . java to ensure proper visibility behavior when mActionsView is not
[ hotfix ] [ runtime ] fix npe in runidincrementer when parameter be null
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added assertions to verify matching devices in SchemaRegionBasicTest to ensure accuracy of device matching results in tests
[ 3.0 ] do not swallow exception when metric collection be not complete ( # 9013 )
added a conditional check for ` max ` before calculating ` mSumChange ` in ` EigenvectorCentrality . java ` and
updated registry creation and lookup logic to use a dynamic port instead of a hardcoded value to improve flexibility and maintainability by allowing dynamic port
mondrian : fix geometrygenerator so that it do n ' t interfere with the old version .
update amplifier value in the Beacon packet from 2 to 0 to correct the amplifier behavior in the beacon processing logic
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable http client health check by default
updated the type of the ` groups ` list from ` List < Class > ` to ` List < Class < ? > > ` and added
added a headful annotation and a timeout for the main method in bug8057791 . java to improve clarity and control over the
modified the scheduler initialization to set daemon threads to allow the application to exit via the main method completion method
remove unnecessary string replacement for version number in lexica botania ' s lexica botania
added reflection access check in JavaAdapterFactory to enhance security by ensuring proper access control
camel - 17836 : camel - mina : enable lazy session creation for camel - jms and camel - jms
updated initialization of IO contexts in CombineHiveRecordReader and HiveContextAwareRecordReader to include an additional RecordReader parameter to enhance flexibility
deleted ClassLoaderHolder and LoaderManager classes to remove unused code to streamline the codebase
added a static method ` configurationChanged ` to ` FileStore ` and modified file existence checks in ` JavaLanguageServer ` to improve file management
added try - catch blocks around registerSessionCallback and unregisterSessionCallback to handle potential exceptions during callback registration and unregistration
removed " src / test / org / apache / lucene / index / index . cfs " and " src / test / nocfs
updated the ` createAndStart ` method to accept a ` BiFunction < ActorSystem , AkkaRpcServiceConfiguration , AkkaRpc
added retry logic to set maximum map attempts to 3 if not retry to improve reliability of mapreduce operations
pdfbox - 4892 : fix typo find by codespell on fossies . org
added a new file ` SslConnectionTest . java ` to test SSL connection behavior to ensure proper handling and initialization of SSL connections in the application
added validation for IPv4 and IPv6 address family in InetAddress and NetworkInterface classes to ensure that only valid IPv4 and IPv6 address types are
added a test for date serialization in a collection of dates in DefaultTypeAdaptersTest . java to ensure proper handling of date objects in JSON serialization
refactor Message class for improved readability to enhance maintainability and ease of future updates
nifi - 5792 : fix bug in putdatabaserecord when firstupdatekey be set to false
corrected the loop condition in TableOutput . java to correct the calculation for running width
pdfbox - 4892 : remove useless null check , a suggest by valerybokov
updated priority for VA _ FORMAT _ STRING _ EXTRA _ ARGUMENTS _ PASSED by changing from NORMAL _ PRIORITY to HIGH _ PRIORITY
[ java ] ignore non - final loop variable in a for - each loop .
updated PDFExporter and PDFExporterTest to use Java . gexf instead of LesMiserables . gexf and modified related
added unit tests for LdapUserDetailsMapper to ensure correct mapping of role attributes and non - string role attributes
add ldap . read . timeout config to make ldap connection timeout configurable
refactor TestDescription class to improve code organization to enhance maintainability and readability of test cases
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the variable related to allocation
added a condition to check if the state handler is invalidated in the gesture state check to ensure proper handling of gestures when the handler is
updated the maximum distance for folder creation from 0.6 f to 0.55 f and removed unused variables to improve the accuracy of folder creation
updated OciConfigConfigSource to use ConfigProviderResolver instead of ConfigProvider to enhance configuration management and improve code clarity
refactor Testjsig class for improved readability to enhance maintainability and ease of future updates
fixed mana not be able to be use in the mana ring / tablet , and the terra picking of an item in the
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the serialVersionUID field and added a @ SuppressWarnings annotation in P11TlsPrfGenerator . java to suppress serialization warnings for better compatibility
replaced ` tsFileNotValid ` with ` isEmptyFile ` and added validation logic for ` tsFileProcessor ` to improve clarity and
added new files ` Switch21 . java ` and ` Switch19 . java ` with methods for pattern matching , null , and guard patterns to
updated error messages in ComparableSubjectTest . java for better clarity to enhance error reporting for better debugging
updated StreamHelper to use Apache POI ' s internal annotations and added a new TestStreamHelper class for XML processing to enhance XML processing capabilities
updated bounds checking for size and improved error message formatting in Int2ObjectCache . java to ensure proper handling of maximum array size and enhance
add ordering to security filter chains and implement a test case to ensure the security filter chains are in the correct order during configuration
removed the ` TimeInForce . GTC ` parameter from the method call in ` BinanceTradeService . java ` to simplify the method
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and add validation for min and max values to improve flexibility and enforce minimum and
changed the constant KEY _ SEP from ' \ 0 ' to ' \ t ' to ensure correct formatting of the key separator in the R
camel - 14263 : camel - spring - boot - allow to configure the jms component . thanks to jooby for the
added error handling in ` SourceUtils ` and created a new test class ` TestGetBound ` to improve robustness of type resolution and ensure
refactor Parquet type handling in LeafFilterFactory to use a dedicated method for creating filter predicates to improve code readability and maintainability by
added a check to ensure the artifact name starts with the SCOPED _ TARGET _ BEAN _ PREFIX before releasing the StepSynchronizationManager to
fix ( http ) : read all ssl certificate at once
refactor ` getDefaultBooleanValue ` method to return a ` String ` instead of a boolean and add a new class ` DnsFallback ` with
ww - 4352 add exception when write tag to theme fails
changed the type of the ' success ' field from boolean to String for the ' url ' field in DepositAddress . java to improve
refactor the Privilege return statement to use a lambda expression instead of an anonymous anonymous class to improve code readability and ensure proper resource
removed " address " and " phone " scopes from the OAuth2 provider to simplify scope management by removing unnecessary scopes
refactor submit logic in ManagedSelector to use a new Start class with CountDownLatch to improve synchronization handling for the selector ' s started state
added BigDecimal constants for hue 65535 and saturation 255 and updated request logic in WLedHandler to improve precision in hue and saturation calculations and
replaced the validation method in VectorizationProvider to use a Set of valid caller names to improve code readability and maintainability by using a
added a method ` caseJSRInst ( JSRInst i ) ` to the ` InstSwitch ` class to enable handling of JSR
resolve http : / / issues . apache . org / activemq / browse / amq - 2638 - add transactionmanager to
refactor database update and update statements in DBMSProcessor . java for improved clarity and error handling to enhance code readability and ensure
update elevation handling in ContactItemInflater for devices running Lollipop and above to ensure compatibility with devices running Lollipop and
renamed ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity by using a more descriptive variable name
added privileged access control for reading and writing files in SandboxFileManager to enhance security by ensuring file operations are executed within a privileged
updated GroovyParserVisitor and GroovyPrinter to handle the " [ " operator and enhanced binary type handling in Groovy to improve parsing and formatting of binary
updated logging message to include the exception class name to improve clarity of error reporting for better debugging
updated character handling to support both compressed and uncompressed formats in RecordInputStream and UnicodeString classes to improve data integrity and correctness in reading and writing
added unit test for downloading a file with Norway characters in its name to ensure correct handling of file names with Norway characters in
replaced RuntimeException with CancellationException in AsyncResource . java and added cancellation checks in FingerprintScannerSample . java to improve error handling and provide
added a null check for statistics before calling handleCache in TimedMemberStateFactory . java to avoid potential NullPointerException when statistics is null
added a test method to verify the removal of objects from an explicit collection in MongoTemplate to ensure that the system correctly handles the removal of objects
update copyright year to 2022 to fix license issue
updated string formatting in Coder . java to use % n instead of \ n to improve readability of error messages for clarity
added a new boolean field ` mIsClearAllButtonFullyRevealed ` and modified scroll handling logic in ` RecentsView `
added COMMON _ HMS _ PROPERTIES map and refactored parameter handling in HiveIcebergMetaHook and HiveIcebergSer
added a method to check if an address is already in use and refactored existing code to use this method to improve code readability and
added a JVM path argument to the argument list in TestNestmateAttr . java to ensure the application uses the correct classpath for testing
replaced the logger reference with a more descriptive verbose schema reference to improve clarity by using a more descriptive variable name
remove unused import and add miss @ override annotation
# 1193 - enh : add support for use savepoint in nested nested transaction ( # 1193
updated fetch size handling in QueryProcessExecutor to use ThreadLocal instead of a fixed integer to improve memory management and prevent potential memory leaks
[ java ] : use noopidlestrategy for the driver conductor in embeddedpingpong .
refactor the handling of blocking calls by introducing a new method ` handleBlockingCall ` to improve code readability and maintainability by encaps
added HDP _ VERSION property handling and logging in SliderAppsViewControllerImpl . java to ensure HDP _ VERSION is correctly set and
replaced instance variables ` loaderClass ` , ` jusl ` , ` jusl ` , and ` loader ` with private fields
added DeepCloner class and modified methodBlock in ParameterizedRobolectricTestRunner and RobolectricTestRunner to enhance object cl
added binding for the JETTY _ SHOW _ STACKTRACE annotation in the ResourceBase class to disable stack trace display for the web server
added a check for OBJECT type in NativeObject . java to return null if the object is not a valid object type
replaced multiple instances of ` sun . jvm . hotspot . types . OopField ` with ` sun . jvm . hotspot .
updated JwkKeyListView to register type adapters for RSAPublicKey and ECPublicKey instead of RSAPublicKey to enhance serialization capabilities for
use only writable boot image heap when spawn isolates be set to false
refactor MBeanServerMXBeanUnsupportedTest class for improved clarity to enhance maintainability and readability of the code
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies by eliminating unnecessary dependencies
replaced the ` Validator ` method with ` validator ( ) ` and added ` getOwnerAddress ( ) ` method in multiple actuator classes to
add a simple example for http : / / issues . apache . org / activemq / browse / amq - 4892 -
replaced direct usage of ` toByteArray ( ) ` with string concatenation for minimum and maximum values in ` binaryClient ` to ensure proper handling of
added support for empty indices for nodes and edges in the Protobuf annotation serializer to ensure that empty nodes and edges are only added when they are not
[ java ] remove correlationid from asynccommandidset when a correlationid be already remove .
added handling for file conflicts in FileDataStorageManager , FileDownloader , and FileUploader to ensure data integrity during file operations
updated generic type parameters in ExecutionContext , AbstractMethodInvokingDelegator , and AbstractTransactionalResourceItemWriter classes to improve type safety and
updated imports from org . apache . solr . common . util . strutils to org . apache . lucene . analysis . core in multiple
added oracle and mysql support in DatabaseFactory to enable remarks reporting and use information schema for improved compatibility
updated the constructor of ` MockMethodInterceptor ` to accept a ` handler ` parameter and added a serialVersionUID in ` SignedSupportingClassProxyFactory
replaced the use of ` new Date ( ) . getTime ( ) ` with ` System . currentTimeMillis ( ) ` for time measurement to improve
[ hotfix ] [ table ] fix classloading issue in executioncontext
added a new ` onBufferChanged ` method and updated ` TerminalView ` and ` TerminalTextViewOverlay ` classes to handle buffer changes to
refactor processConfigFile method for improved readability and handling of null values to enhance code clarity and ensure correct processing of configuration files
refactor freeze logic to differentiate between allowTvmFreezeV2 and allowTvmFreezeV2 to ensure proper handling of
added secure configuration options in TlsConfig and updated TlsUtils to utilize it to enhance security by allowing secure connections to be configured
refactor code to simplify source and class path handling in JavadocTool . java and add a new class T7091528 . java for
updated edge column handling in ExporterGDF . java to use case - insensitive comparison and introduced a new EdgeColumnsGDF class to improve
added cascade option to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the @ OneToOne annotation is always cascading to the
refactor equal ( ) and hashcode ( ) to use arrays . equals ( ) instead of getmessageid ( ) . equals ( )
updated character encoding from ASCII " ? " to Unicode " \ u017D " in AsyncProvidersBasicTest . java to ensure compatibility with
[ hotfix ] [ rocksdb ] remove unused method in rocksdbserializablecompositekeybuilder
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and updated ` SubjectDomainCombiner ` to use it to improve handling of
fix an npe in the brewing and elven trading recipe handler . close # 2333
refactor parsing logic in Parser . java for improved readability to enhance clarity and maintainability of the parsing process
added a method ` showConnectionErrorPopup ( ) ` to ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter ` to
added a new file ` Issue596 . java ` for handling unhandled requests and modified ` HttpHandlerImpl . java ` to check content type
change bitwise operation from bitwise OR to bitwise OR in NodeBitMap . java to ensure proper handling of long values during bitwise operations
refactor imports in ImportLayoutStyle . java to improve code readability and maintainability
replaced the ` gitBashConfigValue ` handling with the ` useStdIn ` parameter in the ` ConsoleUIService ` class to
replaced mocking of AccountManagerCallback with a TestAccountManagerCallback and updated assertions in ShadowAccountManagerTest to improve test reliability and
do n ' t cache enclosingtype in analysistype . getenclosingtype ( )
renamed methods in Pairs and InPairsExpression for consistency to improve clarity and consistency in naming conventions
removed the timeout duration from the set method call in PutAllCallable . java to simplify the code by eliminating unnecessary timeout settings
fix npe in mqclientinstance when consumer be not register
[ java ] generate source identity when create a driver conductor .
added a new file ` TopTabAction . java ` implementing the toolbar interface with a label " lalal " to provide a user interface
camel - 14263 : camel - core - optimize rout engine to reduce stack frame in use during rout .
updated imports and class definitions in AggregateItemReaderTests . java to use JUnit 4 annotations to improve code readability and facilitate
added a generic type parameter ` < T > ` to the Procedure constructor in ` AbstractObjectValueTypeMap . java ` to enhance type safety by
updated import statements and added methods for retrieving Wikidata edits in AchievementsActivity , NetworkingModule , and OkHttpApi
added a validation check for the length parameter in the OfflineSorter class to ensure that the length does not exceed Short . MAX _ VALUE to prevent
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 595 : bug
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
enhanced error message in ` InvalidTopologyTemplateException ` to include the acceptable values of ` CredentialStoreType ` to improve clarity of error
updated random value generation for vector elements in TestVectorUtil . java to ensure values are within the valid range of 1 to improve randomness and
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the comparison logic to improve performance and
added SSL property handling in TestUtil . java and modified test assertions in PGPropertyTest . java to ensure SSL property is correctly set and reflect
danielwagnerhall : enable safe browsing in chrome by default
added null check before cloning ` oldConfig ` in ` BaseMotorMount . java ` and ` RecoveryDevice . java ` to ensure
added a condition to disable transcoding in DLNAResource to ensure proper rendering behavior based on configuration settings
updated ` DataTable ` , ` TableDiffer ` , ` TableDifferTest ` , and ` TableDifferTest ` to handle empty
added a customIgnoreTag constant and logic to remove unnecessary elements from the iterator if the section ' s native code starts with the CustomIgnoreTag
camel - 16400 : camel - jdbc - add optimization lock exception support to jdbcaggregationrepository and defaultjdbcoptimisticlockexceptionmapper
fix @ configurationproperties ( ` ` parent . name ' ' ) and @ configurationproperties ( ` ` parent . name ' ' ) ( #
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and modified the constructor to accept a new LimitlessIDEActivity to enhance
deleted the ClusterNodeInfo . java file to remove unused code from the project
updated return statement in ShieldedTransferActuator . java to ensure consistency in return value
add debug output for the chosen cipher suite in the ServerHandshaker class to improve visibility into the chosen cipher suite for debugging purposes
updated template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single and multiple templates appropriately to improve user experience by
added a nodeLabelMap to manage duplicate node IDs and labels to improve handling of duplicate nodes and enhance error reporting
added a new file R2303044ListSelection . java that implements a list selection test to demonstrate the use of a
[ java ] do n ' t re - create a publication for the same correlation id if it be already in use .
added a null check for mWorkspace in the Launcher class to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure correct handling of compound properties in
updated row counting logic in StatsRulesProcFactory . java to use a new row counts list to improve accuracy in row count computation based on parent
added path URL formatting and improved parameter handling in SpringBootDocBuildTemplate . java , and refactored stream processing in DocUtil .
refactor : remove dead code and make logger final
updated ` DistBuildCachingEngineDelegate ` to ` CachingBuildEngineDelegate ` and modified the creation of ` createBuildEngineDelegate ` to
improve error message when json can not be parse
added a DEBUG flag to the log statement in WidgetsModel . java to control logging behavior based on debug level
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of ` numTerms ` in ` SimilarityBase . java ` and added unit tests in ` TestSimilarityBase . java
added conditional calls to ` mailSender . send ( ) ` in ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests
added new exit and quit methods with corresponding properties to Global . java and removed the old quit method from ScriptingFunctions . java to streamline
updated the instantiation of ` LoanBrokerGateway ` and ` LoanBrokerSharkDetectorDemo ` to use ` ConfigurableApplicationContext ` instead of
rename methods from ` getFirstUnverified ` and ` getLastUnverified ` to ` findFirstUnverified ` and ` findLastInvocationStackTrace ` to
[ vmware ] fix npe in vmware web service when no cookie be find .
updated assertions in ResinAcegiAuthenticatorTests to remove unnecessary whitespace to improve code readability and maintain consistency in assertion formatting
updated ByteUtil ' s bigIntegerToBytes method to specify a minimum value of 32 for r and s to ensure compatibility with larger data sizes
updated the property key from " fml . disabledMods " to " fml . modStates " to accurately reflect the state of
refactor account selection and selection handling in ReceiveExternalFilesActivity to improve code readability and maintainability by encapsulating account selection logic in a
updated IOException message to include host IP and port to improve error reporting for better debugging
added error handling for unexpected empty results in ValidatorContractController to ensure proper error reporting for invalid simulation results
updated TexturePackerFileProcessor to handle empty JSON files gracefully to improve robustness by avoiding potential null pointer exceptions during JSON parsing
removed unnecessary null check for datasource and JNDI in PooledConnection . java to streamline connection management by eliminating unnecessary checks
reduce target allocation from 10 MB to 1 MB and adjust count from 32 MB to 128 MB to optimize memory usage for better resource management
add null check for currentConsole before writing to avoid potential NullPointerExceptions when currentConsole is not initialized
added a method to set credentials refresh delay in Kerberos configuration to improve the responsiveness of the Kerberos authentication process
refactor AlertDialog creation to use a dedicated method ` showInfoAlert ` to improve code readability and maintainability by encapsulating dialog logic
renamed the variable ` priv ` to ` pack ` and modified the ` test ` method to include a ` - package ` argument to enhance
update Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUse
added a check to prevent adding dependencies that are already provided to the dependency list to optimize dependency resolution by avoiding unnecessary dependencies
added a HashSet to manage ZipFileInputStream instances and modified the releaseInflater method to ensure proper resource management and prevent potential memory leaks
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " across multiple files to improve code readability
added methods to run active and idle states based on key ranges and added synchronization to manage thread interruptions and ensure thread safety during execution
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " in BlobServer . java and BlobServerGetTest
replaced ` findAny ( ) ` method with ` findFirst ( ) ` and added a new method ` getAnnotations ( Class < T > )
added support for additional architectures ( ppc64 and ppc64le ) in Bits and ByteArrayAccess classes to enhance compatibility with additional
updated the RuntimeException message in RoboMonitoringInstrumentation . java to include a link to the Robolectric repository to improve error reporting and
increased the timeout duration for waitWithDeadline from MINUTES to Long . MAX _ VALUE in TransactionImpl . java to allow for longer
replaced instances of ` Date ` with ` Instant ` in ` DateUtilTest . java ` to utilize ` Instant ` for improved
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a toast message to indicate that YouTube Player does not work on Lollipop yet to improve user experience by informing users about
added checks for unterminated dollar quotes , identifiers , and blocks in the parser to ensure proper error handling for SQL parsing errors
do n ' t re - enable vibrator when vibrator be n ' t present
updated table border and background color settings , modified column background color assignment , and introduced arrowhead based on nullable primary key to improve visual consistency and
add support for encoded configuration parameters in HiveConf to enable decoding of encoded parameters in SetProcessor for improved data handling
added catch block for StringIndexOutOfBoundsException in PDFParser . java to improve error handling for potential StringIndexOutOfBoundsException
refactor X509Certificate class to improve certificate handling to enhance security and maintainability of certificate processing
handle invalid uri in wavefront config ( # 3903 )
replaced BitmapLruCache with NetworkedCacheableImageView and added image loading functionality to enhance image loading capabilities and improve performance in the
removed the ' target ' parameter from the LauncherAnimUtils . ofFloat method across multiple classes to simplify the method signature and improve code read
updated controllers version references in DependencyBank . java and BuildScriptHelper . java to reflect changes in versioning to ensure compatibility with the latest controllers
refactor methods in LaunchedURLClassLoader to improve code readability and maintainability
updated DataSourceHealthIndicator to utilize requiredSingleResult for querying results to ensure correct column count and improve error handling for incorrect result sets
[ ds - 3952 ] do not cache the response with no - cache header .
updated the warning message format to use Locale . ENGLISH to ensure consistent formatting of warning messages across different locales
refactor SolrQueryParser constructor to accept an Analyzer parameter to enhance flexibility by allowing custom analyzer instances
added copyright notice to Settings , AutoLevelerTopComponent , PendantAction , and FileBrowserToolbar classes , and removed unused import statements
removed unnecessary semicolon in MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper size management for VoidColumnVector in batch processing
updated the parameter name from ' templateName ' to ' req . getName ( ) ' in StatementGenerator . java to enhance clarity by using the
removed a private static method ` isTypeMatch ` and simplified the configuration addition in ` compositeConfiguration ` to improve code readability and maintainability by
[ java ] add an offer method to the sessiondecorator so that it can be use by other client .
updated method names from ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` and ` maxTrustedIndexXForwardedRemoteAddressResolver
add a new annotation type ` @ nobootstrap ` and refactor ` BootstrapInserter ` to check for the presence of ` NoBootstrap `
hbase - 16400 tabledescriptorchecker should use tabledescriptorbuilder . getvalue for maxFileSize , memstore _ flush _ size ,
updated variable names from ` maxCommits ` to ` requestedCommits ` for clarity to improve code readability and maintain consistency in naming conventions
updated method signatures in bug6794831 . java to include InvocationTargetException and changed method invocation to invokeAndWait to improve error handling and ensure
added a static final string ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method in ` CachingBuildEngine
removed unused imports of TxInputUtil and TxOutputUtil from TransactionCapsule . java to streamline code by eliminating unnecessary dependencies
removed a redundant call to markAsDone in HttpProtocol . java to streamline the code by eliminating redundancy
added default configuration handling in TezConfigurationFactory to improve flexibility in configuring Tez configurations
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a ` forget ` method to the ` OpenALAudio ` class and modified the ` stop ` method to handle null cases to ensure that
refactor state management in SimpleBasePlayer and add tests for discontinuity behavior to ensure proper handling of discontinuity events and
added new DecimalFormat and NumberTickUnit instances for different numeric formats in NumberAxis . java to enhance formatting capabilities for improved readability and us
replaced the use of ` TargetGraphAndBuildTargets . builder ( ) ` with ` TargetGraphAndBuildTargets . of ( ) `
removed the ` IndexFileNameFilter ` class and updated its usage in the ` IndexFileDeleter ` and ` IndexWriter ` classes to simplify
add an option to the forgehooks to check the entity ' s bounding box instead of the texture stitcher .
added a default compression level parameter to the ApkBuilder and SignedJarBuilder classes to allow customizable compression levels for improved flexibility in
added a test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify static fields in Java classes to ensure correct
added support for the BYTES data type in MetricFieldSpec and related classes to enhance data handling capabilities for byte data types in the MetricFieldSpec
updated string formatting in multiple failure error tests to include a newline character to improve readability of error messages for better debugging
replaced ` id . hashCode ( ) ` with ` java . util . Objects . hashCode ( id ) ` in ` Trade . java
added caching functionality using CacheManager in SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPaginationConfiguration , and Forum
fix for ticket : 135 -- use locale prefix for pronunciation file
updated SimpleHttp and TestHttpPlugin to handle empty POST requests and added a test for null postbody to improve robustness of HTTP request handling
added a dispatcher to the ClientSideSlb class and updated its tests to shutdown the executor service to improve resource management and ensure proper shutdown of
modify texture positioning logic in TextureRegion . java to differentiate between horizontal and vertical flipping to ensure correct texture positioning based on the
improve error message for miss property on discovery strategy
changed the declaration of contextPath from final to non - final and added a default value if it is null to ensure proper handling of null values and
[ drools - 1342 ] fix npe when use project classloader . reinittypes ( )
added serialization header for the root header in BTreeMap to ensure proper handling of the root header during serialization
added methods to check for ` prefix _ header ` and ` precompiled _ header ` arguments in the ` AbstractCxxSourceRuleFactory `
replaced ` WeakReference < ImageObserver > ` with ` AccWeakReference < ImageObserver > ` in ` ImageWatched . java
changed visibility of ` findNextIndex ` method from package - private to private in ` ObjectSet ` and modified import statements in ` OrderedMap `
update isDirect variable from true to false in VertexBufferObject . java to correct the logic for determining if the buffer object is direct
mary client : fix npe when access audio effect help text
changed return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from ` void ` to ` Vector2
pdfbox - 5764 : fix typo find by codespell on fossies . org
added a null check for the context before removing the close hook to prevent potential NullPointerException when context is null
updated border spacing logic in CellLayout and DeviceProfile classes to accommodate different container types to improve layout responsiveness for folder items in
refactor valueNumeric and defaultValueNumeric initialization to use a new ValueNumeric class to improve code readability and maintainability by encapsulating numeric parsing
updated the condition in FormAuthenticator to check for deferred authentication to ensure proper handling of deferred responses in the login process
updated command - line argument checks in StartArgs . java to use " -- add - to - start " instead of " -- module - start
added default partition value handling in DynamicPartitionFileRecordWriterContainer to improve robustness by ensuring a default value is used when the partition value is
[ hotfix ] [ stream ] add null check for operator factory in streamnode
updated the return statement in DefaultArtifact . java to include classifier in conflictId , groupid , and getType to improve the clarity of artifact identification
camel - 14263 : camel - kafka - add support for kafka consumer rebalance
improve error message when annotation substitution can not be find
rename gmail notification to enable _ gmail _ notifications for jabber account
doc : clarify meaning of ` java . security . cert ` for ` java . security . cert `
increase expected message count in LumberjackMultiThreadTest to accommodate dynamic concurrency based on available processors to improve test reliability
add player . isdead ( ) check to getplayerdisplayname ( )
refactor Exchange class to improve code structure to enhance maintainability and readability of the code
fix api key and secret _ key typo in updateuser api doc
replaced switch - case statements with if - else statements in MfaProvider , IdleTimer , and JdbcMfaProviderProvisioning classes to improve
updated AbstractMetaDataExportMojo . java file to improve metadata export functionality
added handling for SQL integrity constraint violation and improved error messaging for dropping tables to ensure proper dropping of materialized views and provide clear
corrected a typo in the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency in naming conventions
added a new file ` RoboExecutorService . java ` that extends ` RoboExecutorService ` to indicate that the class should no longer be used
added conditions to check if the group is a root group before adding subgroups to the menu to ensure that subgroups are only added when the
updated method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified path validation logic to improve clarity
updated test cases in TestDynamicNumberOfGCThreads . java for improved clarity and functionality to enhance code readability and ensure proper
change return types and methods in CxxPlatforms and KnownBuildRuleTypes to use Flavor instead of ImmutableFlavor to improve type safety
updated SQL statement construction in CreateTable . java and CreateTableDeParser . java to handle create operations and parameters more robustly to improve SQL
chatviewerfragment : set alpha to 64 for the background color .
test : migrate ctiteratortest to junit 5 ( # 4382 )
added clear ( ) method calls in CharTokenizer , KeywordTokenizer , Tokenizer , StandardTokenizer , and DocumentsWriter classes to ensure proper handling of
[ java ] fixed bug in astinitializers that cause a crash on block statement .
updated StateMachineConfiguration and StateMachineFactoryConfiguration classes to remove enums and add null checks for configurationurers to improve error handling and provide clear
danielwagnerhall : remove unnecessary link check from elementfinder . findelement ( ) and add testlocators . class
updated StringConverter to handle both Double and BigDecimal types with maximum fraction digits and added tests for float conversion to ensure correct formatting of floating - point
remove check for current unitofwork in aggregatelifecycle . getcurrentscope ( )
update touchable insets in TaskbarDragLayerController to use REGION instead of CONTENT to improve touch responsiveness during drag - and -
removed a conditional check for the ' ~ ' character in the FencedCodeBlockParser to streamline the code by eliminating unnecessary
added socketTimeout property handling in ConnectionFactoryImpl and BaseDataSource classes to enable configurable socket timeout for improved network reliability
added a sleep delay in ElementAttributeTest . java to handle InterruptedException to improve error handling and prevent application crashes
updated InputStreamReader to use UTF - 8 encoding to ensure proper character encoding when reading HTTP response data
refactor List class to improve code readability to enhance maintainability and ease of future updates
added constructors to ` AsyncFileImpl ` to accept ` URI ` and ` Path ` parameters , and updated error handling in ` AsyncFileImpl
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that these classes are intended to be stable and
cloudstack - 7803 : fix npe in listvirtualmachinemanager api when nuage vsp device be not configure
rename the method ` retryUploads ` to ` retryFailedUploads ` and update its logic to improve clarity in handling failed uploads to enhance code
updated Java version references from 52 to 53 in ConstantPoolTagTests . java to ensure compatibility with newer Java versions
fix error message when recompiling with - xlint
added a method to remove all client headers in AsyncHttpClient to facilitate the removal of client headers in the HTTP client
replace Vector with ArrayList for managing input and output strings to improve performance and eliminate unnecessary type casting
updated the default grid column from 4.0 f to 3f to improve the visual representation of the grid in the application
added a condition to check if ` forViewCreation ` is false in the condition of ` getQB ( ) . hasTableDefined ( ) `
updated date pattern regex and refactored assertions in TestHS2HttpServer . java to improve readability and maintainability of date validation logic
added error handling when reading an object from the snippet reflection to improve robustness by catching potential exceptions during object conversion
simonstewart : fix the firefox driver to work with an insecure ssl certificate .
updated byteOffset calculation to use Math . addExact and added a new test for too many allocations in ByteBlockPool to improve memory management and
changed the visibility of ` firstEncoder ` and ` secondEncoder ` from static to instance and modified the return statement to use ` Locale . ENGLISH
do n ' t swallow exception in tcpclient . close ( )
add ` ` @ suppresswarnings ( ` ` serial ' ' ) ' ' to suppress warning
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` to simplify class structure and
change ` ` save ' ' and ` ` discard ' ' to ` ` return to the main window ' '
added response type validation and error logging in OAuth20DeviceCodeResponseTypeRequestValidator . java and updated error messages in OAuth20AccessTokenEndpointController
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure the correct number of elements is
updated the ` initTableMapperJob ` method to accept a ` Class < ? extends InputFormat > ` parameter and added new helper methods for
removed a redundant call to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to streamline classpath
sulong : throw an error if the language be not available or the language be internal .
added deprecated handling for the ' master ' commit duration in ReplicationHandler to ensure compatibility with Solr 7.1 and enforce mutability of commit duration
hhh - 14850 - rename cachevariable to cacheforeignkey and fix typo
changed the return type of generateECKeyPair and related methods from long [ ] to Object [ ] to allow for more flexibility in key pair
[ hotfix ] [ runtime ] fix job cancelling in restarting
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation in ` RecentsAnimationDeviceState ` to simplify the
refactor lambda expressions in UniFiControllerCache . java for improved readability and efficiency to enhance code clarity and maintainability
updated the thread ID parameters from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and
remove offer from offer list if it have an old offer with the same id .
refactor code to use constants . ssl _ proto _ tls instead of hardcoded string ` ` tl ' '
modified MockitoMethodInvocationControl to handle class mock types correctly and updated SystemClassUserTest and SystemClassUserCases to use ` doReturn
replaced instances of ` DatabaseObject ` with ` PartialDatabaseObject ` in ` NotLoadedException ` and ` FunctionPartial ` , ` Procedure
removed the import of DisplayUtils and added an extra file to the intent in FileDisplayActivity to streamline the code by eliminating unnecessary
added error handling and improved file deletion logic in StoreDirect and StoreWAL classes to ensure proper resource management and prevent potential memory leaks
replaced direct calls to ` stopSwipePipToHome ` with a task snapshot retrieval in ` AbsSwipeUpHandler . java `
added hidden property and methods to manage command argument visibility in LiquibaseCommandLine and CommandArgumentDefinition classes to enhance the command argument ' s
update remote address in LoggingKafkaPluginTest from 8090 to 9092 to align remote address with new configuration requirements
[ geos - 7013 ] move stylegrouphelper . getcatalogfromstyle ( ) to geoserverextension . bean ( )
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to ensure proper permission handling for launching activities and improve shortcut creation
added getId ( ) and setId ( int ) methods to TiledMapLoader , AnimatedTiledMapLoader , and StaticTiledMap
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBC connection to use version " V _ 0 _ 13 " and modified session builder to include version specification to ensure compatibility with version 0.
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo and updated DiffOutputControl initialization to allow configuration of schema inclusion
use put ( ) instead of putifabsent ( ) in jmxregistry
planner - 2271 : add a logger for singlebenchmarkrunnerexception
removed the ' final ' modifier from the doPutRecord method in AbstractCacheRecordStore . java to allow subclassing of the method for better
do n ' t set callbackbridge . physicalwidth and callbackbridge . physicalheight in tools . getdisplaymetrics ( )
added new test cases for handling response content with different delays in FastCGIProxyServletTest . java to improve test coverage for different response
added a method to start the ReadInteractionsService in MarkReadService . java to enhance functionality by allowing the service to launch the ReadInter
added a conditional check for ` lintClassfile ` before logging warnings for ` annotation . method . not . found ` to ensure warnings are only
added logic to set a default email server port if it is null to ensure a valid port is used for SMTP connections
added retry logic for SSLFactory reloading in TlsUtils . java to improve reliability and error handling during SSLFactory reload attempts
updated the date format in ObjectMapperProvider from " HH : mm ' T ' HH : mm ' Z " to " HH : mm : ss
updated error message in the assertion for private classes from Mockito to improve clarity of error reporting for mocking private classes
added support for checking if the line ends on the NL tag in InlineBoxing and LineBox classes to ensure proper handling of line endings
updated filePathString construction to handle null parent cases to improve robustness by avoiding potential null pointer exceptions
removed unused import of DocCollection from TopicStream . java to streamline code by eliminating unnecessary dependencies
refactor ` NinjaServletContextTest ` to use ` createHttpServletRequestInputStream ` for creating ` ServletInputStream ` and add a new test
added a properties property to the AbstractCasEndpointTests class to allow exclusion of certain endpoints in the test configuration
added a validation check to ensure the current graph is a dynamic graph to prevent runtime errors when the current graph is not a dynamic graph
fix : prevent bean from be initialize with @ lazyinit ( ) ( # 5368 )
added support for suppressing exceptions in JSON path expressions to enhance flexibility in handling JSON path responses
removed duplicate instantiation of ControllerLeaderLocator in HelixServerStarter . java to streamline the code by eliminating redundancy
updated usage messages in CLHSDB and HSDB to clarify command usage to enhance user experience by providing clearer guidance on
removed duplicate configuration of chunk provider in ` FaultTolerantStepFactoryBean ` and streamlined listener registration in ` SimpleStepFactoryBean `
[ beam - 8470 ] remove deprecate write class , use io . write instead
refactor ShadowAccessibilityManagerTest to use an instance of AccessibilityManager instead of a shadow instance to improve accessibility management by using a
add an analytics group for usage statistic ( # 4373 )
removed unnecessary SourcePathResolver parameters from JavaSourceJar , JavaSourceJar , Javadoc , and MavenUberJar classes to simplify class hierarchy by
refactor PostgreSQLDatabaseConnector to use a new PostgreSQLEnumDataTypeHelper class for enumerating column values to improve code organization and facilitate
updated log path comparison in LogFileTests to use File . separatorChar to ensure compatibility with different file path separators
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency in accessing map
added support for dropping index tables in HiveMetaStoreClient to ensure proper error handling when attempting to drop index tables
added visibility check for mActionsView in RecentsView . java to ensure actionsView is only updated when visibility is not visible
added a specific syntax highlight for non - Windows environments in Repl . java to ensure proper syntax highlighting for non - Windows environments
replace xss _ request _ parameter _ to _ http _ header with hrs _ request _ parameter _ to _ http _ header and add
changed the method used to retrieve the file path from ` toUri ( ) . getRawPath ( ) ` to ` toString ( ) ` to
updated method call syntax in SelectBox . java to improve code readability and maintain consistency
change the value of _ metaDataComplete from true to false to indicate that the metadata is not complete
changed the return type of ` removeTaskTarget ` from boolean to void and modified bitmap creation logic in ` ThumbnailSearchResultView ` to improve
added environment variable handling for PLATFORM and RELEASE flavors in JsBundleGenrule . java and corresponding tests in JsBundleGenrule
modified variable initialization logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test for
added tests for handling new line characters in comments and Javadoc in the AddImportTest class to ensure proper formatting of import statements and improve code read
added a hubMode field to AbstractLiquibaseChangeLogMojo and updated its configuration in AbstractLiquibaseChangeLogM
removed unnecessary null check for processedItem in JsrChunkProcessor . java to simplify the code by eliminating unnecessary null checks
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure that the
updated the method for setting the thread pool in LuceneTestCase to use a direct reference to DocumentsWriterPerThreadPool to improve flexibility
removed the port number from the SMS address string in GameCanvasImplementation . java to simplify the address construction for better readability and maintainability
added a copy method for deserializing and deserializing JobExecution objects in MapJobExecutionDao to improve job execution management and ensure proper serialization of job executions
added a new file ` DownloadTest . java ` to implement a test for downloading PNG data to facilitate testing of image download functionality
updated language normalization in multiple classes to ensure consistent language representation across the application
replaced ` UDFArgumentException ` with ` UDFArgumentTypeException ` in ` GenericUDFRound . java ` to improve error handling for ROUND functions
updated dependency tag handling in ManageDependencies . java to include a null check for selectedVersion to ensure robustness by avoiding potential null pointer exceptions
added multiple AntPathRequestMatchers for various media requests in SecurityConfig . java to enhance security by allowing requests to access specific resource paths
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a condition to check if the concrete class name matches the class name before creating bean definition writers and modified type resolution logic to ensure proper handling
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable tests that are not ready for execution
[ openwebnet ] use schedulewithfixeddelay instead of scheduleatfixedfixeddelay for energy and thermoregulation ( # 1
[ hotfix ] remove unused code in apr connector
deleted the SunToolkitSubclass . java file to remove unused class to streamline the codebase
updated translation logic in DefaultRenderableSorter and added hasRotationOrScaling method in Matrix4 to improve rotation and scaling handling in matrix transformations
added unit test to ensure that wrapper handler be register before primitive type
added a method to convert a raster to a RGB image when the alternate color space is a PDLab to ensure proper handling of color conversions
updated URLs in CommonsApplication and related classes to use BuildConfig instead of CommonsApplication to improve configurability and maintainability of the
camel - 17836 : camel - health - add health check for component that have extension for connectivity verification - camel - main
add a null check for the block position in the EntityThornChakram class to prevent potential NullPointerExceptions when accessing the block state
added a test for altering a table with indexes extending primary keys in AlterTableWithViewsIT . java to ensure correct handling of primary
updated the offset variable initialization in FileFloatSource . java and modified assertions in TestFunctionQuery . java to improve clarity and functionality of document
removed the ID field from the fields list in MongoRecordReader to ensure proper handling of data integrity during database operations
added disconnect methods in YeelightHandlerBase and DeviceBase , and improved connection termination logic in WifiConnection to enhance connection management
added support for auto _ increment functionality in the parser to ensure compatibility with the InnoDb database schema
fix : add ability to create share index in the share informer factory ( # 3558 )
server : fix npe when update template detail for private template
updated ShadowBitmapFactory to handle RobolectricBufferedImage and improved image size retrieval to enhance compatibility with Robolectric ' s
removed deprecated constants related to shortcut , uri text , and display mode in LauncherProvider and LauncherSettings to streamline code by elimin
[ jbrules - 2175 ] move stocktickstream . dat to org . drools . examples . broker
added a new variable ` legendTop ` and modified offset calculations in ` PieChart . java ` to improve the handling of the legend '
added a check to return early if the world transform detension is zero to optimize rendering performance by avoiding unnecessary processing
add a new file maryscriptcreator . java that can be use to create a mary script .
added a method to store the remote host in the flow file to ensure the flow file includes the remote host from the request
updated compactionLogger initialization and file deletion logic in LevelCompactionTsFileManagement . java to ensure proper resource management and avoid potential memory leaks
updated attribute references from " xlink : href " to " href " in ComponentDescription . java to ensure consistency in attribute usage across the application
camel - 15836 - camel - aws2 - s3 : make s3 stream upload timeout checker configurable
hbase - 22879 add log for regionserver when cluster be shut down
added null check for spans before logging in Slf4jSpanLogger and updated warning messages in DefaultTracer to enhance robustness by preventing
trim whitespace from the active option before adding it to the configuration to ensure that the active options do not contain leading or trailing whitespace
added depth preference handling in DepthController to control wallpaper zoom behavior based on user preferences
updated the assertion in OverseerTest to check the success count of the overseer to ensure that the overseer reflects the
removed the ` getKernelVersion ( ) ` method and modified the return value of ` xattrEnabled ` to always return true to simplify the
refactor ExecConstants to improve code structure to enhance maintainability and readability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality during testing
added a method to set the scan attribute for paging in ScanUtil and updated TableSnapshotResultIterator to utilize this method to improve the handling
added a condition to check if lowRange is less than 1 , 000 , 000 in Request . java and RequestV2 . java to ensure
changed visibility of keySizeEstimator and valueSizeEstimator fields to protected in AbstractCachedSource . java and updated cache size estimation in AsyncWriteCache
fix npe in listhosts api - set zoneid from host ' s uuid
[ zeppelin - 5271 ] fix utf - 8 encode issue in livy interpreter
update filesystem removal logic to include zfs as a parameter to enhance functionality by allowing more flexible removal of filesystems
changed the data type of the ` obj ` variable from ` Object ` to ` String ` in ` HttpRequestBuilder . java ` to improve cl
increased the polling wait time from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 5 ` in ` Soft
fix flaky test : do not fail if all listener fail to take screenshot
refactor multiple Java classes related to dial functionality to improve code organization and maintainability
updated error logging statements in SyncQueue . java to improve clarity of error messages for better debugging
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest version
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a
do n ' t use path . get ( ) for the patchy jar if it do n ' t exist
[ hotfix ] [ test ] use yarnclusterdescriptor instead of yarnclient in yarnitcase
add localmapstatsprovider . statspermap ( ) method to avoid duplicate stats
deleted the AllTests . java file to remove obsolete test suite from the project
added support for non - breaking spaces and zero - width spaces in the AbstractWordConverter class to enhance word formatting capabilities for better user experience
add a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory starvation behavior to ensure that memory
updated method call to use ` getResultMappingsForRowKey ` instead of ` getResultMappings ( nestedResultMap . getResultMappings ( ) ) `
added a boolean variable ` eventHandled ` and set it to true in ` UIText . java ` to enable event handling in the UI
deleted the ` @ Controller ` annotation and renamed ` Weldby ` class to ` WeldModule ` to streamline the codebase by removing
ruby : fix zero - width check when capture group be empty
added a protected variable ` liquibaseProLicenseKey ` and removed its initialization from ` AbstractLiquibaseMojo ` to
mondrian : rename setmemberreader ( ) to setmeasureshaperememberreader ( ) so that it ' s easy to
[ gr - 36400 ] make - g a custom option for debug info generation
mondrian : fix typo in mondrianproperties . java
added functionality to retrieve and manage friend paths in Kotlin - related components to enhance functionality by allowing specification of friend paths for Kotlin
added aliases for BATK , BRAH , and MAND in Character . java and modified main method in CheckScript . java to
updated equality checks for commandId , hostname , role , and roleCommand in ExecutionCommand . java and added a method to convert JSON to Execution
refactor Mockito class implementation to improve code readability and maintainability
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to the SystemScope class to provide a string representation of the object for better debugging and logging
refactor CSS parsing logic to handle percentage and truncation parameters to improve error handling and ensure parameters are within valid range
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to ` LocalIndexIT . java ` and modified ` Local
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` in ` BaseAndroidTestCase ` and updated method names in ` BackupHelperTest
updated toast messages to include additional context for item names to improve clarity and user experience by providing more context in toast messages
removed unnecessary conditions from while loop conditions in RendererUtilities . java and added a new test case in RendererUtilitiesTests . java to simplify logic and
updated KrakenStreamingAdapters to utilize ArrayNode for ask and bid operations instead of JsonNode to improve data handling and ensure accurate representation of
added error handling for duplicate column addition in FileContentProvider . java to improve robustness by logging known issues when attempting to add the same column
removed console output statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
updated ` ConvertJoinMapJoin . java ` to introduce ` computeOnlineDataSize ` method for calculating online data size and memory usage to improve
updated the ` buildView ` method to accept a ` Context ` parameter and added background resource settings for the ` selectableItemBackground ` attribute to
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to
vpc : set vpcid to null instead of long to avoid nullpointerexception
[ hotfix ] [ test ] disable flink savepoint test on flink 1.11
removed the @ Attribute annotation from several integer fields in multiple classes to improve code readability and maintain consistency in annotation usage
updated loop condition to check if the action index does not exceed the size of the actions list to ensure that actions are not processed out of bounds
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex API changes
test : add test for orgunit and orgunit relationship virtual metadata
added null check for spatial before casting and reset numTris to null to prevent potential NullPointerException when spatial is null
updated conditions in ConditionalTokenFilter and FixedShingleFilter classes and added new test cases in TestConditionalTokenFilter to enhance token filtering functionality and
make unsafestorenode and storefieldnode state after the graph be set .
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to verify that the CAS event repository does not contain any event data to ensure that the event repository is not empty before proceeding
removed unused parameters from AuthenticationAttrProcessor . java to streamline code by eliminating unnecessary parameters
added null key validation in MacOSXPreferences and created a new file RemoveNullKeyCheck to ensure that the specified key is not null to
added a runtime exception throw in the setTypeface method of CodenameOneTextPaint to ensure that the method does not throw an exception when
added an ` open ` method to ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS `
danielwagnerhall : remove deprecate fail ( ) method from webdriverrunner
simplified the conditional statement in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use a single instance of ResultObject instead of creating a new ResultObject instance to simplify the code and improve read
updated SQL syntax in CreateTableGeneratorTest . java to include double quotes around column names to ensure consistency in SQL syntax for schema creation
modify filter logic in VectorizationContext to differentiate between primitive and boolean types to enhance filtering capabilities in vectorization processing
changed the type of ` moveSelectorConfig ` from ` ConfigUtils . inheritConfig ` to ` ConfigUtils . < MoveSelectorConfig > `
replaced ` new ReorganizeTableStatement ( catalogName , schemaName , tableName ) ` with ` modifyDataTypeStatement ` to streamline
refactor cluster name handling to use constants from the IoTDBStartCheck class to improve code readability and maintainability by centralizing cluster name
refactor connection handling in PeerGroup to improve error logging and exception management to enhance debugging capabilities and provide clearer context for connection failures
added style handling for multiple style strings in Nano . java to enhance flexibility in styling based on user - defined styles
refactored data fixer to use adventureconverter instead of jnbt
updated return value in NoToStringOnStringType . java from " Use ` String ` to " No # toString ( ) on String " to
8274369 : [ testbug ] runtime / thread / testthreadfailure . java fail with ` ` java . lang . runtime
[ test ] add retry analyzer for dataproviders that fail and skip
change return value from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to ensure accurate retrieval of the
danielwagnerhall : add a couple of method to the webdriverbackedselenium interface to provide a way to
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and added public key algorithm information to simplify the method signature and enhance
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks for opaque dialog and frame properties in Dialog and Frame classes to ensure proper component state and prevent illegal state exceptions when the dialog or frame
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to ensure immutability of the `
updated RedisObjectFactory to use RedisStandaloneConfiguration and improved sentinel configuration handling to enhance Redis connection management and ensure proper configuration for standalone connections
add a delay message to the chat room after a message be add to the chat room .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method to simplify
replace direct creation of share operations with a service - based intent handling to improve code modularity and maintainability by centralizing share operation logic
removed the check for isInjected in BeanDefinitionInjectProcessor . java and added dependency injection in FieldPropertyInject . java to simplify the logic for
updated for - loop conditions in ClassicPlotManager . java to use a variable for minimum build height to improve code readability and maintainability by
[ smack - 399 ] fix npe in integration test framework .
tmi - 10 : add support for read interop subdirs in exif .
added support for the ENABLED _ LS version in VersionTargetGraphMode and modified dependency executor logic in VersionedTargetGraphCache to enhance flexibility in
added video format checks in DLNAResource . java to ensure proper handling of video formats during parsing
refactor AutoMlClient to improve code structure to enhance maintainability and readability of the code
added loading functionality to LwjglNativesLoader and modified LwjglApplet to disable native loading to improve flexibility in loading
updated CSVRequestHandler to support custom escape handling and improved encapsulator validation to enhance flexibility in CSV processing by allowing custom escape characters
added support for checking and validating the ` GrantType . AUTHORIZATION _ CODE ` in the ` ClientRegistrations ` class to ensure that
enhanced error messages in ` Throwable ` and ` SuppressedExceptions ` classes to provide more context for exceptions to improve debugging and provide clearer
added query and assertions to ` DerivedTableIT . java ` and modified the ` OrderedResultIterator ` instantiation in ` ClientAggregatePlan .
added rSquare mapping in RegressionEvaluator and a corresponding test in StreamExpressionTest to ensure correct validation of the R square value of the
added request header handling to ThreadContextMDCServletFilter to enhance the management of request headers in the application
refactor MapWork usage in SparkPlanGenerator to use a local variable instead of casting to MapWork to improve code readability and maintainability
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport classes to improve code readability and maintainability by encapsulating
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for issuer resolution in JwtIssuerAuthenticationManagerResolverTests to enhance
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
do n ' t cache interop function type when the function be not a method .
removed a redundant sleep statement from AbstractBasicMockingIntegrationTest . java to streamline the code by eliminating redundancy
added a new file KernCrash . java that implements a custom font to demonstrate the use of Kerning crashes
added a fail ( ) method call to the LinkedHashTreeMapTest class to ensure that the test does not hang during execution
added a method to retrieve interface IP addresses with a prefix based on network interface availability to enhance functionality by allowing dynamic IP addresses based on network interface
cancel the housekeeper task when the task be cancel .
updated the client address reference in the conditional check from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` to ensure correct handling
refactor assertions logic in Assert . java to improve code readability and maintainability
added a new test file ` Issue247Test . java ` to implement unit tests for the ` MapDB ` functionality to ensure correct functionality
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the doInBackground
added logic to check if the current date is a leap year before validating the max age in the ValidatorTest to ensure that the validation correctly handles
added GrblLookups for processing alarm and error codes and updated error handling in GrblController . java to improve error reporting and
updated the return statement in Workspace . java to include a fallback label for zero screens to improve user experience by providing a clearer and
removed the ` count ` parameter from the ` getBittrexTrades ` method across multiple classes to simplify the method signature and improve code read
replaced direct calls to ` flush ( ) ` with ` stripAnsi ( ) ` in ` ConsoleReader . java ` and modified the
updated the path for the jdkPath variable from " . jdk " to " . jdk " to ensure the correct file path is
refactor method calls to use ` getType ( ) ` instead of ` getDescription ( ) ` for consistency to improve code readability and maintainability
updated JFCModel and related classes to accept a logger parameter for warning messages to enhance logging capabilities and provide more informative warning messages during configuration
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance value is positive to prevent illegal argument exceptions
added methods for creating and dropping views in TestUtil . java and a corresponding test in DatabaseMetaDataTest . java to enhance database functionality and
added conditional checks for stable float and double expectations in NaNTest . java to ensure tests are skipped when they are not expected to run on
added DesktopTaskbarUIController class to manage hotseat icons in the taskbar to enable dynamic visibility toggling of the task
update install button state when there be no task run
refactor file handling methods in mmm and ppp files to improve code readability and maintainability
refactor ` setApplicationContext ` method to use ` Collection < ServerInterceptor > ` instead of ` Set < ServerInterceptor > ` to improve type
updated DomainAwareServicesManager to extend ServicesManager and removed the @ FunctionalInterface annotation to enhance functionality by allowing the DomainAwareServicesManager to
add debug log to resourcepackloader . getmodinfos ( ) . getmodfile ( ) . getfilename ( )
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
added growX ( ) and growY ( ) methods to the Cell class to enhance flexibility in resizing cell elements
refactor DefaultInputHandler to use generics for key and action bindings and streamline key binding logic to enhance code readability and maintainability by
http : / / issues . apache . org / activemq / browse / amq - 2370 - catch exception in testcase
replaced long arrays with byte arrays in MetricsMemoryTester . java and added a memory fail count check to improve memory management by limiting
deleted the JobParametersPrototype . java file to remove unused class to streamline the codebase
added a securityEnabled flag to the MappingsTable and updated related methods to conditionally invoke methods based on its value to enhance security by allowing
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
disable dump to file by default
do n ' t use omx . rk . video _ decoder . avc for amazon device
[ java ] check if logbuffer be connect before update producer limit in network publication .
added a check for ` options . getOutputOptions ( ) . isNoInfo ( ) ` in ` BaseFormatter . java ` to ensure that
[ native ] enable ssl by default in presto driver uri
added DOMOutputOptions to customize DOM subtree building to ensure error output options are set correctly during DOM generation
refactor assertions logic in Assert . java to improve code readability and maintainability
[ java ] add ' retain ' option to publish message .
remove @ JsonIgnore annotation from TestResultSummary . java and update JSON serialization in EventSerializationTest . java to include testCaseName to ensure
[ hotfix ] [ table - common ] add ` ` $ tumble ' ' to sqlgroupedwindowfunction
replaced ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java ` to
introduce ssl _ ctx _ set _ timeout and ssl _ ctx _ set _ session _ id _ context ( ) , and add
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` for improved readability and consistency in
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to utilize ANSI
change log level from debug to trace for no firmware update handler available for a thing with UID
added tests for retrieving null date and timestamp in GetObjectTest . java to ensure correct handling of null values in database interactions
refactor string handling in ` StringSubject ` and ` Subject ` classes for improved readability and consistency to enhance code clarity and maintain
added tests for repository permissions in UserModelTest . java to ensure correct functionality of repository permissions across multiple teams
added a new file Test7088020 . java that demonstrates usage of MethodHandles with missing stack frames to demonstr
refactor audience validation logic to use a set for audience URIs to improve clarity and maintainability of audience validation logic
refactor ` afterAppAuthChanged ` and ` refreshLocalCache ` methods in ` AbstractDataChangedListener ` and ` HttpLongPollingData
updated error handling in StdErrLog to check for null before printing to improve robustness by preventing potential NullPointerExceptions when _ stderr is null
added a new constant ` SEPARATION _ ORDER ` to the ` Warning ` class and modified ` BasicEventSimulationEngine ` to check active
updated the query optimization method to use realtimeTableConfig instead of offlineTableConfig to improve query optimization accuracy by using real - time configurations
updated the SQL statement in PhoenixHBaseAccessor to include split point handling and added conditional logic for enabling or disabling the
[ hotfix ] fix checkstyle violation in savepointv2
added BluetoothClass support to ShadowBluetoothDevice and corresponding test cases to enhance Bluetooth device functionality and ensure proper handling of BluetoothClass
corrected spelling of ' contains ' to ' containsProfile ' in multiple classes to improve code readability and maintain consistency in naming
fix npe when sum ( [ ] ) return null
replaced graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) in DataBridge . java to
updated coreNodeName construction to use nodeProps . getCoreName ( ) instead of nodeProps . getNodeName ( ) to ensure the correct core name is
use updatebackpressure for update the contact list in chatactivity instead of the toolbar
updated TaggerParserPosTagCompatibilityITest . java file to improve test coverage for tagger parsing functionality
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
updated element type checks in ` mmm Types . java ` and added a new class ` ppp T7005671 . java ` with
updated triangle calculations in DelaunayTriangulator . java and replaced EarClippingTriangulatorTest with Delaunay
added @ Override annotation to multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use builder pattern to improve code readability and maintainability
refactor the handling of stack overflow states in StackOverflowCheckImpl . java to improve clarity and maintainability of state management during stack overflow
added shadow methods for SQLiteDatabase and ContentValues in Robolectric and removed deprecated methods from ShadowContentValues to streamline Robolect
replaced calls to ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas .
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` for comparison in ` BKDWriter ` to improve array comparison efficiency and
updated Locale . java to include a script parameter and modified locale initialization logic to enhance locale management and ensure default locale is initialized correctly
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct text alpha is returned for the last set
corrected a typo in the warning message from " Confimap PropertySources " to " ConfigMap PropertySources " to clarify that the
replaced specific test class imports with a method call to UaaJunitSuiteRunner to streamline test suite management and improve clarity in
trim whitespace from nextToken ( ) calls in GzipFilter . java and update test parameters in GzipFilterDefaultTest . java to ensure that whitespace is
updated the assignment of the _ outputType variable to ensure consistency in output type assignment
updated the default implementation string from JDK to JONI in RegExpFactory . java to ensure compatibility with the latest Java standards
refactor ` ViewCapture ` to use ` FutureTask ` and ` Consumer < ViewRef > ` instead of ` Handler ` to improve task
fix for ticket : 16 -- add support for the ` ` style ' ' parameter in the voice api .
added a check to ensure the parent directory exists before creating it to prevent errors when attempting to create a non - existent parent folder
update default node discovery bind IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " to ensure
camel - 16400 : camel - jbpm - in - only / in - out / in - only / in - out / in
pdfbox - 4892 : remove unused import and make class private
updated ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and modified ` AllAppsRecyclerView ` and ` AllAppsRecyclerView `
refactor multiple Java classes related to Dalvik and Dex to improve code organization and maintainability
fix : add ` ` super ' ' and ` ` super ' ' to type parameter in ` defaultjavaprettyprinter ` ( #
added a method to free memory in the OperatorContext class to ensure proper resource management and prevent memory leaks
updated string formatting in QueryByExamplePredicateBuilder . java and modified replacement logic in StringQuery . java to improve readability of error messages and
refactor ConcurrentLRUCache to use AtomicLong for evictionCounter and update stats management methods to improve concurrency handling and enhance cache eviction statistics management
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
do n ' t use getlocalhost ( ) to check if the destination be not an ipv4 address
set the data root and source root in the RuntimeEnvironment to ensure the application uses the correct database configuration
added constructors for MarkedClientEnabled and MarkedServerEnabled in AdminClientBootstrapConfiguration and AdminServerBootstrapConfiguration to log successful initialization in specified
refactor methods in TableEnvironment class to improve code readability and maintainability
removed the ` setStatementTimeout ` method and updated its usage in ` MapperBuilderAssistant ` , ` MappedStatement ` , and ` Executor
removed the ' hangingTscTimeout ' parameter from multiple method signatures in TypeScript2JavaScriptTranspiler and TypeScript2JavaScriptWith
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization for GeoLocationRequest and GeoLocation
replaced instances of ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` and updated error messages in ` ArtifactFilesystem . java ` to ensure
tika - 1342 -- fix for tika - 1353 , add unit test for jxl file
ggb - 212 fix concurrentmodificationexception in updatescript ( )
fix ( nio ) : wait for data to be available before return null .
added checks to ensure that ` actual ` and ` expected ` values are not equal in ` GuavaOptionalSubject ` to improve error messaging for
added VERTICAL _ SWIPE _ INDICATOR to the visible elements return in BackgroundAppState and modified mMidProgress calculation in Sh
added a null check for the navigation object in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
ggb - 2171 : drawimage . setboundingbox ( ) now set the bounding box , not just the label .
rename ErrorOccuredInOnExceptionRoute class for clarity to improve code readability and maintainability
use schedulewithfixeddelay instead of scheduleatfixeddelay for astro discovery job
simplified the assignment of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang during execution
updated import statements in GuiceFactoryTest . java to include specific guice - related classes to enhance dependency injection capabilities for improved testing capabilities
added system feature management functionality to RobolectricPackageManager to enable tracking and managing system feature status
added a new constant ` PROP _ PATH _ POSTFIX ` and modified property handling logic in ` RCAFrameworkLoader ` , along with a
removed logging of the " Started cancellation watch dog " message to clean up the code and improve readability
added a null and empty check for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values
replaced ` needInline ` boolean variables with ` needStartText ` and ` needEndText ` variables in ` BoxBuilder . java `
added asynchronous collection of telemetry data and a method to retrieve the remote IP address to enable asynchronous processing of Telemetry data and retrieve the remote
removed database type check for MySQL in UpgradeCatalog260 . java to streamline code for better readability and maintainability
updated error messages in BaseTableDataManager to provide clearer guidance on permissions to ensure users have sufficient space and write - permissions for directory
updated method signatures in DatasetUtilities . java to improve code readability and maintainability
added a method to append the selector ID to the key string to enhance the key representation for better debugging
fix checkstyle issue in util / gouraudshadingcontext . java
updated taskbar visibility and alpha handling in multiple controllers to improve user experience by managing taskbar visibility and delays
updated variable declarations in KeyExchange . java for consistency to improve code readability and maintainability
added a check to ensure the connection is an instance of JdbcConnection before executing a SQL query to prevent potential ClassCastException when accessing JdbcConnection
refactor error handling in ServerMainTest to use a variable for file index remains to improve code readability and maintainability by avoiding
added methods to retrieve the media recording MIME type in CodenameOneImplementation , MediaManager , and ImageIO to provide a consistent way to
move useshaders ( ) from confighandler to shaderhelper . useshaders ( )
added a condition to the BindableFilter in DruidAdapterIT . java and updated the return value in DruidAdapterIT . java to
removed unnecessary whitespace in the ZkStateReader instantiation to improve code readability and maintain consistency
pdfbox - 4892 : disable xmp feature , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
ww - 2414 - followup on early commit -- recursively replace < < < < < script > > > > > until completely sanitize
rename the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and adjust the logic for determining varargs access to improve
refactor border property checks to use a dedicated method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by encapsulating
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and provide more detailed logging
replaced specific imports with a wildcard import and modified the ` attachProjectToConnection ` method to accept a ` HubRegisterResponse ` object to
replace bitwise operation with Byte . toUnsignedInt for byte conversion in multiple Java classes to ensure correct handling of unsigned values and improve data integrity
[ hotfix ] fix checkstyle violation in opentracingtransactionproducer
updated caching default from DepFiles . ENABLED to DepFiles . CACHE in AbstractCachingBuildEngineBuckConfig . java to improve cache management by
change the rangePannable property from true to false to disable the plot ' s panning functionality
refactor active page checks and view management in AllAppsContainerView . java to improve code clarity and ensure proper management of work mode switch
changed visibility of ` glCaps ` , ` renderer ` , and ` animator ` variables to private in ` Visualizer2TopComponent .
added handling for CancellationException in FunctionTest . java to improve error management and prevent application crashes
changed method visibility from package - private to protected in JarFileResource and JarResource classes to enhance encapsulation and restrict access to these methods
refactor DefaultTrackSelector class for improved readability to enhance maintainability and ease of future updates
added a loop to wait for unseqMerging in LevelCompactionTsFileManagement to improve responsiveness during compaction processes
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to reflect the correct fee currency for user
updated SQL query syntax from " Post " to " post " and modified test method names for clarity to improve code readability and maintain consistency
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
updated the invocation of the onComplete ( ) method in SendHeadersFirstPublisher . java to ensure proper completion handling of the delegate
[ beam - 11345 ] support serialize single encryption key in aws module ( # 11345 )
added support for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to enhance functionality and provide clearer error messages for unsupported value types
refactor methods in TreeBackedProcessorWrapper to use ` javacProcessingEnvironment ` instead of ` inner ` to improve clarity and consistency
removed the import of Annotation and its usage in ParameterInfo . java to streamline annotation handling and improve code readability
added AC3 support and improved playback state management in PlaybackController . java and VideoManager . java to enhance video playback functionality and ensure
added a mapping for " value " to null and set the content as JSON in the HttpResponse return statement to ensure that the HTTP response accurately
added ` @ SuppressWarnings ( " deprecation " ) ` annotation to ` DelegatingStatement . java ` and ` DiskFileItem . java ` to
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` and modified ` DataNodeTemplateSchemaCache ` to
refactor RTimerTree class to improve code structure to enhance maintainability and readability of the code
change package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
add a test case for issue # 358 and fix it
updated client thread and scheduler initialization in ClientConnector . java to include unique names for better debugging and monitoring
replaced protected JScrollPane and JSplitPane with private JSplitPane in ViewResultsFullVisualizer . java to enhance encapsulation and improve
added phone numbers and their descriptions to the ScimUserEndpointDocs class to enhance clarity and usability of the user ' s phone numbers
added private constructors to classes and methods in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles to enhance encapsulation and restrict access to
added null check for responseMap and error logging for HTTP responses in JsonHttpPropertyRequest . java and URLStreamProvider . java to improve error
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the request handling logic
added a condition to check if the parallel variable is not equal to DEFAULT _ PARALLEL to ensure that the parallel variable is not set
fix checkstyle issue in cloudstack - test - java
updated condition in TerminalImpl to include SCARD _ E _ NO _ SMARTCARD to handle both SCARD _ E _ NO _ SM
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress console warnings during test execution
camel - 16400 : camel - bindy : add support for multiple key - value pairs in camel - bindy
disable useowner and usetimestamp by default
updated method signatures to use ThrowingRunnable instead of Runnable to improve exception handling by using a more specific exception type
added null checks for ` via ` , ` viaContext ` , and ` viaFromSeed ` in the ` CrawlURI ` class to
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - sdb component
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in Liquib
bug 62570 - http ( s ) test script recorder : increase validity of root ca use to capture traffic
added smoothDelta and lastDeltaUpdate variables and modified calculations in ThreadHandler . java to improve control over frame timing and track last delta updates
added null check for pagination and improved URL parsing logic in HttpBatchReader and HttpScanBatchCreator to ensure proper handling of pagination when table
added null check for ` ci ` in ` Worker ` and implemented exception handling in ` TestWorker ` to ensure that ` FindNextCompact `
updated fragment state handling in ShadowFragmentActivity to call onSaveInstanceState on each fragment to ensure that fragment state changes are correctly saved and validated during
reformatted code for improved readability in BatchResourceFactoryBean . java to enhance code clarity and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest . java to ensure proper handling of color references in the resource loading process
added error handling for NoResultException in AbstractJPAQuery and created a test for null as unique results in AbstractStandardTest to improve robust
fix bug in collection . getallparents ( ) that cause community to not be add to the list .
updated depthPref initialization to use LawnchairApp ' s instance to ensure compatibility with the current Lawnchair application context
removed an unused import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
changed the parameter type of ` updateTotalEnergyAverageUsage ` from ` long now ` to ` default ` in ` EnergyProcessor
modified the ` toString ` method to handle null values for ` extensions ` and ` nextIncoming ` to improve robustness by preventing NullPointerExceptions
2 . x : fix flatmap . flatmap ( ) not dispose when cancel
added connection manager timeout settings in MultiGetRequest and modified connection manager instantiation in ControllerStarter to improve connection management and enhance error handling for connection
updated the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to update the test class to use the new model
removed duplicate fetchers for SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java , and updated inlineImage method
added a test for output hash calculation when cache is not writable in CachingBuildEngineTest to ensure that output hash is not calculated when cache
camel - 14263 : camel - netty - allow to turn off bytebuf by default . thanks to benjamin
updated the method call to use the table name instead of the old name to improve clarity and accuracy of the partition alteration process
improve error message when vertx instance must be create with prefernativetransport option set to true .
test : move enumtypehandlerserializertest from core to coretypes and add test
refactor StreamEx class to improve code readability and maintainability
set hints for JAVAEE query and lock timeouts in SessionImpl . java to ensure proper timeout settings for query execution
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to provide a singleton implementation of ` ILoggerFactory `
replaced instances of ` familyMap . put ( list , list ) ` with ` family ` and ` set ` in multiple Java classes to
added orientation comparison logic in TaskbarManager to ensure proper handling of window orientation changes
unescape chat room ' s nickname before add it to the room .
added a new test class ` Issue265Test ` and modified the ` longStackPut ` method in ` StoreDirect . java ` to ensure
added multiple @ SuppressWarnings ( " mutable " , " EqualsHashCode " , " ArrayToString " , " BadShiftAmount " , " and "
[ jbrules - 3352 ] fix test to work with jdk 1.5
updated conditional statements in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes to improve code readability and
updated NBWriteServlet and TestWriteListener to accept an ` unlimited ` boolean parameter to enhance flexibility in handling non - blocking writes
test : add test for invalid total difficulty
simplified the action assignment logic in DefaultPlaybackController . java to enhance readability and maintainability of playback state handling
replaced synchronized list creation with CopyOnWriteArrayList for knownLibraries and modified verification cache cleaner to use jceSecurityClass to improve thread safety
added uniform allocation logic and updated position calculations in AllAppsView . java to improve memory management and correct bend distance calculation
added a check for the presence of a colon in the key in the HttpURLConnection class to ensure proper validation of the key format
added a PrincipalResolver qualifier to the AuthenticationMetaDataPopulator constructor in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration . java to enhance the
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse . java to enhance JSON parsing capabilities and improve error handling
added a method to remove trailing slashes from a StringBuilder to enhance string manipulation by ensuring proper handling of trailing slashes
added methods to match patterns in PatternsMatcher class and corresponding tests to enhance pattern matching functionality and ensure correct behavior when no patterns are found
hbase - 22387 improve error message for loadincrementalhfiles ( addendum )
added potion - specific handling for fading potion events in BlockFire . java to enhance block fading functionality for potion - based
updated method call syntax for ` beginOrAdjustReorderPreviewAnimations ` to improve code readability and maintain consistency in formatting
refactor decreaseFactor and decreasePercent calculations for improved readability to enhance code clarity and maintainability
added checks for request readiness in AsyncContentProducer and improved logging in BlockingContentProducer to enhance error handling and provide clearer debugging information
added a null check for the weightField parameter in DocumentDictionaryFactory to ensure that a valid weight field is provided to avoid runtime errors
added plist variable substitution functionality to AppleBundle and created a corresponding test in AppleTestIntegrationTest to improve the handling of binary names and
add a shooting flag to the turret turret and fix a bug with turret .
cast the return type of adaptOrder methods to Object in KucoinAdapters . java to ensure proper type handling for OrderCreateApiRequest builder instances
added a new file ` PreParseGrammarTest . java ` for testing XML grammar preparation to facilitate testing of XML schema parsing in
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java files to suppress warnings related to missing serialization warnings
added font overriding functionality using FontManager in ExtendedEditText . java to ensure compatibility with font settings for improved text rendering
added a null check for currentUser in AuthorizeTag . java and implemented a test case in AuthorizeTagTests . java to ensure proper handling of null
camel - 14263 : camel - cxf - should check if the uri contain unsafe character before encode it .
add setupdata ( ) method to jdbcgeometrytestsetup so it do n ' t interfere with other test
removed the import of DumpHandler from MultipartFilterTest . java to streamline the code by eliminating unnecessary dependencies
[ flink - 16405 ] [ table - planner - blink ] prevent restore attempt for already cancel task in backendrestorerpro
add server . rmi . create property to enable rmi registry creation
replaced ` String . join ( ) ` with ` StringUtils . join ( ) ` in ` CompactionManager . java ` to improve code
added display metrics retrieval and updated test cases for qualifier retrieval to ensure accurate display metrics and improve test coverage for qualifiers
[ java ] add cluster member id to service heartbeat counter .
added conditional logic to handle total thread allocated bytes in TestThreadMXBean to ensure compatibility with versions below 21 and above
updated the return logic in CustomExpression to handle NaN values and modified the hashint initialization to ensure correct handling of negative and positive infinity values and
updated logging statements in AjaxListener . java for improved clarity and consistency to enhance readability and maintainability of debug and error messages
added routes for handling authentication and authorization in the AuthenticityController , along with a new AuthenticityFormTest class , and created a
added assertion to ensure nextNode is alive in LoweringPhase . java and reformatted code in SnippetTemplate . java to improve code reliability
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for the HttpClientRequestImpl class
reorder comparison logic in DefaultTrackSelector . java to improve readability and maintainability of the comparison logic
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the serialization process
ggb - 2333 fixed image crop on the screen .
refactor UnitOfWorkFactory to improve code readability to enhance maintainability and facilitate future updates
added a new variable ` allAppsCellWidthPx ` and updated references in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and `
tika - 1342 -- add content type name to submd if content dispositionfilename be not null
updated the URI construction in ThumbnailsCacheManager . java to use fileId and localId instead of remote path to improve clarity and accuracy of
added support for marking and resetting input streams in the Source class to ensure proper handling of input streams when marking is supported
added @ Deprecated annotation to multiple AsyncProcessor , BehaviorProcessor , and BehaviorSubject classes to indicate that these classes are outdated and should not be used
added configuration property to show or hide error stacks on the error page in Configuration . java and integrated it into AmbariHandlerList .
server : cleanup account / domain when domain cleanup fail , delete account / domain .
removed unnecessary checks for null foreign calls in SPARCArithmeticLIRGenerator . java to streamline code by eliminating unnecessary checks
[ drools - 1640 ] throw unsupportedoperationexception instead of unsupportedoperationexception when use legacy drools 5 . x api ( #
updated ` onRequestPurchaseResponse ` method to call ` Display . getInstance ( ) ` on the UI thread to ensure that the callback is executed
increased the default timeout value from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow more time for tests to
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and ensure correct resource name resolution
deleted files MrefStat . java and MrefStat1 . java to remove unused classes to streamline the codebase
updated scope handling in DependencyInsight . java to check for blank values before returning " compile " to improve robustness by ensuring a default value
added error handling for missing trades and bad status in BTCETradeServiceRaw . java to improve robustness by handling specific error messages
[ hotfix ] use hamcrest assertion instead of junit in integrations / cdi / core
added a method to retrieve payment request URLs in BitcoinURI . java and corresponding tests in BitcoinURITest . java to enhance payment request handling
planner - 383 throw an illegalargumentexception if a collection have a generic type argument .
removed redundant setting of folder information in FolderPagedView . java to streamline code by eliminating redundancy
updated lock ownership check in JfrBufferNodeLinkedList and modified event writer notification logic in JfrChunkWriter to ensure proper lock management and
[ hotfix ] [ table ] fix npe in basicabstracttuple . fromvalues ( )
replaced file reading logic with input resource handling in LintUtility . java to improve flexibility in loading linter configurations from input resources
replaced direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a Runnable wrapper to ensure background
fix inventory . oninventorytick not incrementing index correctly .
added a new case ` OCELOT _ BABY ` to the ` PlayerEvents ` class to handle bABy player events
added multiple @ PublicEvolving annotations to StateTtlConfig . java to indicate that these configurations are intended to be exposed as part of the
added null check for parameter ' x ' in PreparedStatement and Array classes to ensure proper handling of null values in prepared statements
[ hotfix ] [ table - common ] add miss description on archive tool for invalid recordings
corrected the casing of a newline character in the append0 method to ensure consistent formatting of newline characters
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest ` for JSON serialization of ` SiteSnapshotVariations ` to
added a method to remove transaction and block caches and updated imports in BroadTest . java to improve cache management and ensure proper cleanup of transaction
added channel states for enabling and disabling lens mask functionality in Amcrest and Dahua handlers to improve camera configuration management and
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to
updated the ChangeLogIterator constructor to accept a list of ChangeSetFilters instead of a list of ChangeSetFilters to enhance flexibility by allowing
do n ' t exit on guest exception in polyglot launcher .
[ ec2 ] use ` getenvorsystemproperty ` instead of ` getenv ` for ` option _ out _ tracking `
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility during serialization
refactor code to simplify parent handling in SpacesVisitor . java to improve readability and maintainability of the code
# 1193 - enh : add copy ( boolean ) method to servercacheoptions ( # 1193
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to ensure that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` to
rename LIVE _ URI to PROD _ URI and update exception handling in KucoinExchange . java to improve clarity and specificity
updated string concatenation syntax and improved searchPath handling in SpringResourceAccessor . java to enhance code readability and maintain consistency in path formatting
updated MICROGRAM _ PER _ CUBICMETRE and MICROWATT _ PER _ square _ Centimetre
updated the method call from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java
deleted the Tls12SocketFactory . java file to remove unused socket factory implementation to streamline the codebase
fix : remove duplicate entry in bib file ( # 8274 )
added a method to check if Robolectric is running in Robolectric legacy mode to ensure compatibility with Robolectric '
added a conditional check for FirebirdDatabase in DoubleType . java to return a specific DOUBLE PRECISION data type to ensure compatibility with Firebird
added null checks for dataSource and transactionManager in DefaultBatchConfigurer to ensure proper initialization of data source and transaction manager to avoid potential NullPointerExceptions
[ test ] add @ api annotation for unittest stubs
updated command from " ping - c5 www . google . com " to " ping - c5 127.0 . 0.1 "
# 1193 - enh : add try - with - resources in ebeanserver _ savealltest
lucene - 8312 : fix performance regression with non - scoring term query .
[ dataflow ] fix npe in dataflowmetrics when there be no metric update
server : fix npe in listvirtualmachines api
updated the DynamicPartitionPruner to use a target object inspector and added a method to find the target object inspector to improve flexibility in handling
added a method to remove build artifacts from the ArtifactFilesystem and updated the ActionExecutionStep to call this method to ensure that existing build artifacts are
added row selection logic in ThrustCurveMotorSelectionPanel . java to ensure proper handling of selected rows in the table
add a method to assert throw arraystoreexception to make it easy to use .
refactor PropertySource class to improve code organization to enhance maintainability and readability of the code
added environmentName parameter and user agent handling in HttpClientBuilder and HttpClientConfiguration to allow dynamic user agent configuration based on the environment name
refactor session management to use computeIfAbsent for improved efficiency and readability to streamline session restoration process and enhance code maintainability
updated assertions in IssueTest . java to include a descriptive message and changed the type of results in Reporter . java from String to Object to
updated ByteArrayDataSource initialization to handle null content type to ensure correct content type is used when the file ' s content type is null
re - add activationrequestdenied event for activation request
added @ SuppressWarnings ( " serial " ) annotation and modified method signatures in GraphApplet . java to enhance code readability and maintain consistency in method
added a new method ` updateTaskViewsSnapshotRadius ` to ` RecentsView ` and modified the visibility of the ` updateSnapshotRadius
added logging functionality and modified schema generation in StaticMicroserviceVersions . java to improve traceability and debugging of schema generation process
changed the return type of the ` put ` methods in ` ArrayMap ` from void to int to allow the method to access the index for
updated KafkaContainerCluster to use a startup timeout and modified KafkaContainerCluster to use GenericContainer for starting brokers to improve the reliability of Kafka
do n ' t retry the message back if we ca n ' t send the message .
updated header checking logic in StaticServerHttpHeadersWriter and added a case - insensitive test in StaticServerHttpHeadersWriterTests to ensure headers are
added package access check before loading a listener class to ensure proper access control for the listener type
add a custom adapter for the list of applications and an image in the application view to enhance the visual representation of applications and images in the application
updated the ` applyIcon ` method to accept both nullable Task parameters and modified the null check for ` iconView ` to improve robustness by
fix potential resource leak in downloadmanager and downloadtracker
fix a bug in basesqmtosqlastconverter where source select clause do n ' t work correctly
added JUnit test annotations and modified method names in HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to improve
refactor DataInputStreamWithTimeout to implement a polling mechanism using a Future for improved concurrency handling to enhance the reliability of the polling process and
added ENABLED _ TS functionality to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency management
refactor UpgradeCatalog150 . java for improved code organization to enhance maintainability and readability of the code
rename networkparameters . testnet3 ( ) to networkparameters . oldtestnet ( ) for clarity
do n ' t show the first geos when there ' s only one geos in the list
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve onboarding
replaced Apache Commons IOUtils with Apache Lucene ' s BufferedIndexOutput and modified the HdfsIndexOutput class to extend BufferedIndexOutput
pdfbox - 4892 : avoid npe if the clipping path be not complete .
removed synchronization and simplified local address assignment in SocketChannelImpl . java to improve code readability and reduce unnecessary synchronization
refactor row processing in TemplateTransformer to use a new addToRow method to improve code readability and maintainability by encapsulating value addition logic
added a method ` isWindows ( ) ` to check if the operating system is Windows and refactored file renaming logic to use it to
fix ( code 39 ) : fix bug in check _ digit _ encoding
refactor execution type handling in NodeGenFactory . java to improve clarity and correctness of type casting logic
removed unnecessary conditional check for stored fields in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : truncate nanoseconds when parse floor partial timestamp
refactor stack trace handling in LwjglCanvas . java for clarity to improve readability and maintainability of the code
updated the description of the AbstractGCSProcessor class to include an additional word " HTTP Host " to improve clarity of the description of the
replaced assertInitialized method with waitUntilInitialized method in ConnectionPoolTest . java to improve synchronization handling during connection initialization
updated directory retrieval from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to enhance directory management by allowing a single
updated ` FaultTolerantChunkProcessor ` to use ` filterCount ` instead of ` size ` for better tracking of filter counts to improve
updated the formatting of the ` tabbedMethod ` method in ` FileWithTabs . java ` and modified the main method in ` T4
replaced multiple lines of code with a single call to assumeTrue for WindowsTerminal instances to improve code readability and maintainability by using a
remove unnecessary check for userinfo . isadmin in getfeedbacksessionsaction
updated calculations for newSelection and adjusted velocity threshold values in AllAppsView . java to improve user experience by adjusting selection logic and adjusting
bugfix # 206322 , do not use threadinfo . initialize ( false ) when there be no profiled thread
added model loading and refreshing in DataModelManagerDialog , removed encryption method from DbConnectionDialog , and modified connection management logic in ExportPanel
changed ` writeBufferSize ` and ` writeBuffer ` to ` WRITE _ BUFFER _ SIZE ` and replaced string concatenation with String . valueOf ( )
refactor segment size calculation in DocumentsWriter and add a new test for no documents index in TestIndexWriter to improve accuracy of segment size
fix a bug that cause armaturemodifier to throw an npe if the dvert be null .
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
replace direct creation of UnsupportedOperationException with a new instance that does not fill in stack trace to improve performance by avoiding unnecessary object creation
updated the method to calculate the height of lines using a stream to improve accuracy of label height calculation
replaced the singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing
refactor string handling in AVA . java to improve clarity and correctness to enhance readability and maintainability of string quoting logic
replaced Long . valueOf ( s , 16 ) with IdConversion . convertToLong ( s ) and updated trace state handling in ServletHandlerInterceptor
renamed the method ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig ( ) `
updated the substring method call in TestSqlEntityProcessorDelta . java to correctly retrieve the last occurrence of the country code in the substring
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
rename variable ' e ' to ' ev ' for consistency and clarity to improve code readability and maintainability
modified the ` doBefore ` method to include a ` false ` parameter and adjusted the ` IndexSearcher ` instantiation to improve test reliability
added a JFrame with a button to display the number of rows in a GcodeTable to facilitate user interaction with the G
updated WEBAPP _ CONNECT _ TIMEOUT to use configuration value instead of a hardcoded value to improve flexibility by allowing dynamic configuration of connection timeout
updated various Java files for consistency and clarity to improve code readability and maintainability
refactor TestMediaService class for improved test coverage to enhance reliability of media service tests
added a public static string for the help dialog ' s user GUIDE link in the Messages class to enhance the user guidance link functionality for
add MarketsPrintTool class for printing fiat , cryptocurrency , and cryptocurrency options to provide a tool for printing
add validation for hostname component in the EndpointAddressInterceptor class to ensure that the component name does not contain illegal characters to prevent runtime errors
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enable asynchronous registration of security keys for enhanced security
refactor ServerSpanThreadBinder for improved thread management to enhance performance and maintainability of thread binding
updated user pointer reference from ` other . getUserPointer ( ) ` to ` other . userData ` in ` BulletPhysics . java
updated the attribute name from " Location " to " the _ geom " and added " number " to the Csv2Shape builder to improve cl
replaced callGasWord . longValueSafe ( ) with gasCost . longValueSafe ( ) in VM . java and removed unused imports in Program
refactor Parameters class to improve code readability to enhance maintainability and facilitate future updates
added piePlot . setIgnoreNullValues ( true ) to MultiplePiePlot . java to improve handling of null values in pie
refactor loading logic in ResourceBundle . java for improved clarity and efficiency to enhance code readability and maintainability by eliminating redundant
changed the character ' _ ' to ' - ' in TaggedPdfReaderTool . java to correct the casing of the character ' s hyphen
implement allowduringediting for accelerateableaction . isallowedturingediting ( ) and executescriptaction . isallowedt
added a new boolean variable userModified in LoginSamlAuthenticationProvider . java to track user modification status in the authentication process
added a new file ` TestSealedObjectNull . java ` to test the behavior of ` SealedObject ` with null values to ensure
replaced the ` onOpen ` method with ` setResponse ` and ` succeeded ` method in ` ConnectPromise ` to streamline the response handling
added a static final set of Material objects and updated condition checks for SNOW in BlockEventListener . java to improve compatibility with different server versions and
updated Trade handling in CryptsyAdapters and CryptsyPublicTrade classes to include an ID field to improve trade management by associating
added error handling for closing the synchronized MSC connection in HiveStreamingConnection . java to ensure proper resource management and handle potential exceptions during connection closure
fix checkstyle issue in block / entity / glowserver . java ( # 712 )
updated the default icon size and added a new device profile for Nexus 5 to enhance the visual representation of the Nexus 5 device
2 . x : fix refcount reset if connection object be null
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
added a new constant ` WHITESPACE _ AROUND _ TEXTUAL _ OP ` and modified formatting logic in ` FormatToken ` and ` Token
added checks to ensure the file exists and is not empty before writing , and updated test cases for project file overwrite and cancellation to improve file management
added synchronized keyword to several method declarations in MLogWriter . java to ensure thread safety during concurrent operations
http : / / issues . apache . org / activemq / browse / amq - 2298 - add support for mutable log
changed the PADDING property from LengthLike to NonNegativeLengthLike to ensure proper handling of non - negative length values
replaced multiple calls to ` getUser ( headers ) ` with a direct call to ` createContext ( ) ` in multiple resource classes to simplify
refactored methodirbuilder . buildexceptionentries ( ) so that it do n ' t use stream
refactor JUnitRunner and AndroidPlatformTarget to improve code readability and enhance error messaging to enhance maintainability and provide clearer guidance
updated cacheSize calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for improved performance
added a condition to check if ' start ' is zero in InvocationStageTrace . java and modified JSON structures in TestInvocationPublishModelFactory .
added work around for npe when load a keystore with a null key store .
updated port initialization and assertions in UpstreamCheckUtilsTest . java to ensure the server connects to the correct port and improve test reliability
make sure split pane wo n ' t share the same panel if it ' s different than the current one
added conditional checks for OpenGL shaders and tessellation shaders in GLRenderer . java to ensure compatibility with specific Open
refactor PopulatorContext class for improved clarity to enhance maintainability and readability of the code
skip saveall notification for project that do n ' t exist
added UTF - 8 encoding handling for JSON serialization in ZQLJobManager to ensure proper handling of character encoding for JSON output
added a check to ensure ` args [ args . length - 1 ] ` is not null before checking if it ' s an instance of `
replaced hardcoded string values with a constant from the FakeOSSOHeaderDecoder class to improve maintainability and readability of the header
added @ Deprecated annotations to several Java files to indicate that these methods are outdated and should not be used in new implementations
removed logging of missing Apache Derby driver class in DerbyDatabase . java to streamline error handling and improve debugging output
added a timeout of 5000 milliseconds to the test methods in CepEspTest . java and CepJavaTypeTest . java to ensure that
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by redu
updated logic in HubUpdater . java to check if the Liquibase Hub mode is already set before updating the properties file to ensure that
added new version constants for Java and Eclipse OpenJ9 in Constants . java and a corresponding test in TestDDRExtensionGeneral . java
updated logging message formatting in FontFamily . java and added a new DebugFonts . java class to improve clarity of log messages and provide a utility for font debugging
added HTTP version checks in NegotiatingServerConnectionFactory . java and modified import statements in ALPNNegotiationTest . java to ensure compatibility
added RateControl import and set rate control to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable rate control for
added a new file ` Test6741426 . java ` that implements a Runnable using ` JComboBox ` and ` JTextField ` to
updated the error assertion message in CsrfAwareEntryPointAndDeniedHandlerTest . java to include the exception message to improve clarity of
added null checks for dbMgdPath and dbExtPath in conditional statements to ensure that managedDir and dbExtPath are not null before
move s3copyobjectrequest to core . s3 package
refactor category setup methods to remove accentColor parameter and use viewThemeUtils for theming to simplify category setup logic and improve maintainability by
updated the error message in TemporaryFolderUsageTest to include the fileAtRoot to improve clarity of error reporting when the folder path is not
updated generic type references in MappingMongoConverter to use ClassTypeInformation . MAP , ClassTypeInformation . LIST , and ClassTypeInformation . OBJECT
check that address be not empty or null in clientnetworkconfig . addaddress ( )
added " keynectisrootca [ jdk ] " to the list of certificate exceptions in VerifyCACerts . java to enhance certificate
change return type of compute method from void to int in CompiledPipeline . java , and add output count retrieval in WorkerLoop . java to improve
updated mode setting logic in ModeToggleMenu . java to conditionally set menu mode based on popup state and model armed state to improve user
pdfbox - 4892 : fix indexoutofboundsexception in memoryttfdatasource . read ( byte [ ] )
added new files ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` to test the finalizer and heap info of
replaced ` . map ` with ` . doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator `
refactor receiver address handling in BurningManService . java to improve clarity and logic flow to enhance code readability and maintainability
refactor StringSubject class implementation to improve code readability and maintainability
increased the size of the longData array from 1 , 000 , 000 to 1 , 000 , 000 in BatchValidateSignContractTest
rename the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to improve
updated query handling in RetweetActivity and Search classes to replace " @ " with " from : " to ensure consistency in query formatting
added a conditional check for ` forRebalance ` in ` SimulatorDiscoverer . java ` to ensure that rebalance functionality is only applied
added a new method ` importAccount ` to ` YubiKeyAccountRegistryEndpoint ` for importing and saving YubiKey accounts to enable the
updated shader program names from " texture " to " tex " across multiple classes to improve clarity and consistency in texture management
added null check for ` cnt ` in ` paintOnTopLoop ` and implemented safe area padding in ` SideMenuBar ` and ` Tool
refactor AbiWriterProtocol to improve code structure to enhance maintainability and readability of the protocol implementation
added a null check for subName before assigning it to the caption in HierarchyBase . java to ensure correct assignment of caption when subName
change data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to enhance the
added null check for sim and updated variable names in CustomExpression . java to enhance code robustness and prevent potential NullPointerExceptions
replaced the method ` requestBlindVoteListFromNetwork ` with ` missingDataRequestService . sendRepublishRequest ( ) ` to
additional test ... not run during unit test , but useful for stress the pool
updated string literals from double quotes to single quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintain consistency
updated line separators in DefaultJavaPrettyPrinter and added a new constant LINE _ SEPARATORS _ RE in CommentTest to ensure consistent line separator handling
truffle - runtime : replace atomicreference with atomicreferencefieldupdater in singleimplementor . currentsnapshot
added null checks before adding queries to the query list in SimpleFacets . java to prevent potential NullPointerException when filters are null
fix ( core ) : add all child of the bridge to the child of a thing ( # 1193 )
replace calls to ` printHelp ( ) ` with ` error ( ) ` in ` Ktab . java ` to improve error handling and provide
added a check to return the output file if it exists to ensure that the output file exists before proceeding with further operations
added date parsing logic in DateConverter to handle specific date formats to ensure accurate parsing of date strings for better date representation
added assertions and a query method to the PostRepository class for querying a post by its slug to ensure that the PostRepository does not return null
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a check for its value
added a SimpleClientHttpRequestFactory to configure connection and read timeouts to improve HTTP request handling by allowing more time for connection and read operations
added assertions to verify file existence and file name consistency in SourceTest . java to ensure correctness of file handling and provide clearer error messages
remove graalvm . version system property and use it in graalvmlocator
added handling for token and refresh token validity settings in ClientAdminBootstrap to ensure proper configuration of token and refresh token validity settings
update return statement to use android _ api _ version ( ) instead of defaultSdkVersion if androidAPIVersion is greater than zero to ensure compatibility
replaced instances of ` this . placeholderPrefix ` and ` this . placeholderSuffix ` with direct references to ` placeholderPrefix ` and ` placeholder
removed redundant hash formatting from the Subject Public Key Algorithm to simplify the output for better readability and maintainability
updated ZkSolrClientTest to manage collection synchronization to improve the reliability of collection processing in a concurrent environment
added BigInteger import and type addition to simpleTypes in MongoMappingContext . java to support BigInteger functionality in MongoDB mapping context
added a condition to check if the button text equals the view string in the toast display logic to enhance user experience by preventing unnecessary toast display
added a condition to check if MEncoder is not out of sync to ensure proper handling of MEncoder configuration when MEncoder is not out -
increased the maximum number of event loop threads from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow for
changed visibility of several fields and methods from abstract to protected in CountMin4 and updated feedback handling in AdaptiveWindowTinyLfuPolicy
modified the ` getFileFloatSource ` method to return a ` FileFloatSource ` for sorting documents and added a new test class ` ExternalFile
updated error message in FetcherException from " Invalid URL " to " Connection error " to provide clearer context about the error being thrown
added event source ID handling in OpenRocketSaver , FlightDataBranchHandler , and RocketComponentSaver classes to improve event
changed the access modifier of the check method from private to protected in ShapeRenderer . java to allow subclasses to access and override the check method for
added synchronization handling for file operations in FileActivity to improve user experience by providing feedback on file synchronization failures
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for generating PNG images and modified the request header to enhance URL encoding
added a null check for the client property " cn1 $ infinite " in InfiniteContainer . java to ensure that the application does not proceed
updated the total variable initialization and modified the total increment logic in IntHashSet . java to ensure accurate tracking of the total value and correct the calculation
added a lock timeout check before updating an entry in FeedRefreshUpdater . java to handle cases where the feed is not locked and log an error
refactor conditional statements for determining the ' who ' variable in SolarisAclFileAttributeView . java to improve readability and maintain
replaced the use of a list with an array for storing edges and refactored the creation of the tree to improve code readability and
added a try - finally block to close the InputStream in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fixed bug in bibtexparser that cause utf - 8 encode to fail .
added strict property handling in Main . java and corresponding tests in MainTest . java to allow configuration of strict mode in properties file parsing
do n ' t allow custom constraint validation for @ pojos ( # 5368 )
camel - 14263 : camel - http4 : camel - http4 - add verifier to check if a particular service work on a specified
added a method call to wait for things - to - level out in TestCloudPivotFacet . java to improve responsiveness by ensuring
removed redundant length checks for Integer and Long in UBJsonWriter . java to simplify the code structure and improve readability
refactor ApplicationTest class for improved readability to enhance maintainability and ease of future updates
replaced String with StringBuffer for better performance to improve performance by avoiding string concatenation
refactor type references from ` Type ` to ` RoboType ` across multiple files to improve clarity and specificity in managing Robo
[ java ] aeronarchive , recordingdescriptortopector , recordingdescriptortopler should return action . abort if not
added cache key and lookup key validation in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor . java to ensure proper
added a new file ` PutfieldError . java ` to test the behavior of ` Bad ` class to ensure that ` IncompatibleClassChange
fix : do n ' t allow public table to be add to public table ( # 4649 )
add log when memtable have reach memtable _ flush _ after _ mins and memtable _ operations _ in _ millions
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple files
updated the method name from ` encodedLength ( ) ` to ` encodedLength ( ) ` in the Flyweight class to improve clarity
rename TestMethodResultMapBuilder . java file to improve clarity and consistency in naming conventions
added checks for illegal argument exceptions and runtime exceptions in the FindNullDeref class to ensure proper handling of illegal argument exceptions and improve error
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated string resource return values in Utils . java to include spaces for better readability to improve user experience by providing clearer and more descriptive
updated type checks and drawable retrieval logic for DeepShortcutView in Utilities and FloatingIconView classes to improve handling of DeepShortcutView instances and
changed the type of the ` validator ` from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > ` and updated
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
added a new CoverageConfig class to manage coverage - related configurations to enable conditional loading of the coveragedata class in the application
added a check to prevent registering a sticky event if it is already registered to optimize performance by avoiding unnecessary registration of sticky events
added a check for ascii - only strings in the NormalizerBase class to ensure that normalization operations are only performed for non - ascii strings
updated method name from ` isMigrationAllowed ( ) ` to ` areMigrationTasksAllowed ( ) ` in ` JobCoordinationService . java
added error handling and assertions for SQL update statistics in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL
camel - 16400 : camel - cometd : migrate camel - cometd to junit4 - add @ test annotation to
updated ` HR ` and ` attrs ( AttrKind . USE _ CSS , ... ) ` to include ` attrs ( AttrKind . OK
added a line break tag to the output in HtmlCoreReport . java to improve formatting of output for better readability
updated ramBytesUsed calculation to handle null scores to ensure accurate memory usage estimation when scores are not null
added a custom ` StringHolder ` class and a custom ` StringHolderTypeAdapter ` for serialization and deserialization of a collection of ` StringHolder
add extra data to mining parameters in MergeCoordinator to ensure correct handling of extra data during the merge process
added a static final map ` numArgs ` to manage command - line arguments for parsing and writing to improve flexibility by allowing dynamic configuration of
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the codebase
corrected a typo in the variable name from ` configedThreshold ` to ` configuredThreshold ` in ` DefaultMigrationAddressComparator . java
rename parameter ` ` part ' ' to ` ` partorlist ' ' in restclientrequest . attach ( )
updated resource paths in TwitterBootstrapUtils . java from " / org / drools / planner / benchmark / core / statistic / twitterbootstrap /
added a regex pattern for basic category extraction in SpanishTreebankLanguagePack . java to ensure accurate category extraction based on the first letter of
hhh - 14617 - introduce uniqueentityloader . load ( ) with lockoptions . none
hbase - 21722 remove cancelled task from taskpool in regionserversnapshotmanager and regionserverflushtableproceduremanager ( # 2
fix setsize ( ) for zero width and height
move fillpool ( ) call outside the method of hikaripool . close ( )
added assureMatchVersion ( ) method to multiple filter factory classes and initialized luceneMatchVersion to Version . LATEST to ensure compatibility
[ java ] fix proxy generation for interface method with @ get annotation
added a conditional check for the first character of the input before matching a comma to improve robustness by avoiding potential parsing errors
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the subject classes
added a validation check for negative payload length in WsFrameBase . java to ensure that an exception is thrown when the payload length is invalid
move publishsubscribechannel from ' channel ' to ' dispatcher ' , move it from ' channel ' to ' dispatcher ' .
changed the type of ` executionId ` from ` String ` to ` Long ` across multiple classes to allow for a configurable execution ID instead of
added multiple digest updates for width and height in ImageProcessor . java to optimize image processing for improved performance
removed logging of the ZNode version in SolrConfig . java and added imports for various parameters in SolrConfigHandler . java to improve logging cl
updated the delay duration in FileSyncAdapter from a fixed value to a dynamic value based on the current time to avoid too many automatic synchronizations
updated the initialization of afterConversionTime in SegmentV1V2ToV3FormatConverterTest . java to ensure accurate retrieval of the last
refactor path handling in QueryProcessExecutor to use a Path object instead of a String fullPath to improve code readability and maintainability by using
updated URL handling in DefaultPackageScanClassResolver and added a new test case in DefaultPackageScanClassResolverTest to improve robustness and ensure
[ hotfix ] [ table - common ] [ table - common ] [ table - common ] add timestampextractors utility class
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` for LDAP authentication to provide a standardized way to
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to align with the latest SDK requirements
replaced auto - suggest dialog with SimpleFormDialog for custom filename input to improve user experience by displaying a cached file list
added a new test method ` testNewput ` to ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
updated the collection name parameter in the stream method from ' collection . getName ( ) ' to ' collectionName ' to ensure consistency in collection name usage
updated zoom calculation and zoom setting logic in MapOverviewImageMouseHandler . java to improve zoom handling accuracy and maintain consistency in zoom behavior
updated KNearestNeighborClassifier to accept a Similarity parameter and modified related classes to utilize it to enhance the functionality of the KNearestNeighbor
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing by using a constant score range
updated the method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added mtu request tests for BluetoothGatt callbacks in ShadowBluetoothGattTest . java and implemented it in ShadowBluetoothG
refactor the servlet input stream creation logic into a separate method to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and provide a warning log for unsatisfied
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety and performance in concurrent scenarios
updated resource strings to include " all " , " " grouped " , and " summary " options to enhance clarity and understanding of resource
updated condition in JDBCTypeMapping to check for size greater than 1 instead of size greater than 0 and changed assertions in JDBCTypeMappingTest to
added synchronized keyword to addPlayer and removePlayer methods and refactored entity addition and removal methods to use streams to improve thread safety and simplify
replaced the ` isScreenReaderActive ( ) ` method with ` controlCodes ` and ` codeMatcher ` initialization in ` TerminalView .
updated command behavior checks in MenuBar . java and added null check for icon in SideMenuBar . java to enhance functionality to allow users to
refactored the subscription logic in PoloniexManualExample . java and added error handling in WampStreamingService . java to improve
added a contract type check and updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java to ensure proper error handling
replaced variable name ` url1 ` with ` javaUrl ` and added protocol handling in ` UrlBean ` to improve code readability and
added getter and setter methods for the namespacePrefixRef variable in the SoapJaxbDataFormat class to enable configuration of the namespace prefix for
added a new method ` isSameDay ` and refactored assertions in ` TestRange . java ` to improve date comparison logic to enhance code
added JettySolrRunner checks and security status verification in BasicAuthIntegrationTest . java and updated ZkStateReader . java to enhance security
add a price feed to the tradeschartsviewmodel so that the user can choose whether to use a sticky market price
refactor replication configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve code read
updated variable names from ' from ' to ' end ' and modified logic for handling negative and negative end values to improve clarity and correctness
added a FileDataStorageManager to manage file download status and save it to a file in the storage manager to ensure the file is fully downloaded
refactor the initialization of the FileChannel to use a separate RandomAccessFile variable and set the log length to improve code readability and ensure the
added methods to check if a registry is running and a retry mechanism for deleting a file to improve registry management and enhance error handling during file deletion
added ` componentPresetDao . startLoading ( ) ` calls in ` Quick3dMain . java ` and ` TextureTest . java `
removed unused variables and added multiple @ SuppressWarnings annotations in multiple Java files to improve code cleanliness and suppress warnings during compilation
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerException when instances are null
phoenix - 4643 prevent transaction _ read _ committed or transaction _ serialisation from be disable in phoenixconnection
added transaction attribute handling to AbstractStepFactoryBean and updated ItemOrientedStep to use it to improve transaction management and ensure proper rollback behavior
updated CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient and refactored security interceptor implementation to enhance client functionality and
removed visibility and editing of the " add category " menu item in ListFragment and added it to the list in NavigationDrawerFragment to enhance user
renamed method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated method visibility in ` FileDisplay
pdfbox - 4071 : use cosnumber instead of cosinteger for revision number , a suggest by valerybokov
updated font size handling in TerminalView and changed method names in TerminalBridge to improve clarity and consistency in font size management
added a validation check before modifying the fact in ConstantAnalysis . java to ensure that the fact is valid before proceeding with further operations
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
replace direct return of spans with a new ArrayList instance to ensure that the spans list remains unchanged during iteration
removed unnecessary locking mechanism in Liquibase . java to simplify code by eliminating unnecessary locking mechanism
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker and TestInstanceCacheChecker to utilize this new method to
updated foreignKeyName and indexName initialization logic in TableRetriever . java to provide unique names for foreign keys and indexes to improve consistency in naming conventions
camel - 15836 - camel - aws2 - s3 : add uri - endpoint - override option to all the component - aws2
removed currency pair parameter from getBitstampUserTransactions method in BitstampAccountService . java and added error handling in BitstampAccountServiceRaw .
added a try - catch block to handle NoSuchComponentException when retrieving the component instance to improve error handling by returning null when the component is not
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 533 - push
refactor LegacyAddressTest to read test data from a file instead of hardcoding it to a hardcoded value to improve test reliability by
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor push notification setup logic into a separate setupPushWarning method to improve code readability and maintainability by centralizing snackbar logic
do n ' t try to close the channel if we ca n ' t close it .
replace null checks with StringUtils . isEmpty ( ) for better readability and consistency to enhance code clarity and maintainability by using more descriptive
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable tests related to PHOENIX - 2840
nifi - 1748 : add timezone attribute to nifi - web - api for nifi - about and nifi - web -
updated assertions and logic for splitting local ranges in Splitter . java and StorageService . java to improve code clarity and ensure proper handling of
no effective change - code cleanup - no functional change
removed redundant synchronization block in CircuitManagerImpl . java to streamline code by eliminating redundancy
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using a more specific exception type
flume - 2271 : make source / sink / sink and eventdriven source / sink configurable
updated log level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for user authentication failures
refactor ContainerOrderFocusTraversalPolicy for improved focus traversal handling to enhance maintainability and readability of focus traversal logic
use int instead of double for getpointlength ( ) for freehand function
reformatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent for consistency to improve code readability and maintainability
refactor database connection handling in SchemaCrawlerMain and Executable classes to improve resource management and ensure proper closure of database connections
bump default tl version to v1.2 for jdk 16 +
fix typo in exception message in CountersManager . java to improve clarity and accuracy of error reporting
refactor audio handling logic in MediaManager . java to improve clarity and correctness to enhance code readability and maintainability
removed unnecessary debug log statement from HttpConnection . java to streamline logging output for better readability and performance
added support for transient fields in JpaPersistentPropertyImpl and updated related unit tests to ensure proper handling of transient fields in JPA entities
updated the version ID in the UpgradeResourceProviderTest from " HDP - 2.1 . 1 " to " HDP - 2.
truffle : make eval return object instead of symbol .
updated method visibility from private to public in SampleResult . java and modified debug logging in Proxy . java to enhance accessibility of the isBinary
updated the configuration property name from " hive . tez . dynamic . parition " to " hive . tez . dynamic . partition .
removed priority handling from JavaProblem and related classes to simplify code by eliminating unnecessary priority settings
replaced the usage of ` DictionaryIndexConfig . DEFAULT _ OFFHEAP ` with ` DictionaryIndexConfig . DEFAULT ` in multiple files to
updated line separator handling in TableWriterTest . java to use System . getProperty ( " line . separator " ) to ensure consistency in line separator
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate easier debugging
added a boolean field ` ownsTexture ` and a conditional check in ` ParticleEffect . java ` to check if the particle effect does not
added LDAP authentication configurations to HiveConf . java to enhance security by integrating LDAP authentication options
doc ( catalog ) : update doc to reference datacatalog - api - v1beta1
refactor InputMethodManager usage to use Context for soft input toggling to improve code readability and maintainability by using a consistent context
added a new test method to convert primitive data structures to maps in the DataTableTypeRegistryTableConverterTest class to ensure correct conversion of primitive types
updated the size of the file system from 100KB to 10KB and adjusted the file size from 100KB to 50KB to improve memory management
improve error message for ` ` not find ' ' error
refactor ` dropSequences ` method across multiple database classes to implement ` MigrationFailedException ` and update its implementation across database - related classes to enhance
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
store the result of binaryField . createField in a variable ' f ' to improve code readability by storing the result of the field creation
bug fix : do not show freeplane icon for map _ styles and logical stylemodel
added a test method to verify the behavior of the ` findOne ` method after an upsert operation with a non - existing object to ensure that the
hbase - 17462 fix findbugs warn in hbase - runtime
added stats tracking for app launches and improved broadcast intent handling to enhance user experience by tracking app launches more effectively
updated graphics handling in JavaSEPort . java to use Graphics2D to improve rendering performance and resource management
update instructorfeedbackresultspagepagedata to include the current team in the receive team list
make inventory . getwindowid ( ) return 0 when player ' s inventory id be zero .
added a conditional check before breaking the loop in ConfigDescriptionRegistry . java to ensure proper termination of the loop when the configuration description is not found
updated return type handling in ReloadableJava parser visitors to include returnTypeAnnotations to ensure correct retrieval of returnType annotations when returnType is null
refactor the initialization of TileMapRenderer to handle null blended tiles gracefully to improve robustness by preventing potential null pointer exceptions when
removed the ` sunClasses ` attribute from the ` @ Classes ` annotation in ` Probe . java ` to streamline the class loading process
fixed an issue in the area calculation when there be no point on the first segment .
updated lockOnSync initialization and simplified throttleRate assignment to improve code clarity and maintainability
pipeeventbus : add event handler for modify speed ( # 1193 )
increased the timeout value of ZkController from 1000 to TIMEOUT to improve test reliability by allowing more time for ZkController initialization
added a new test method ` passcode _ with _ client _ parameters ` to ` TokenMvcMockTests ` to verify the handling of client
added support for LengthFilter and KeepWordFilter in TestRandomChains . java to ensure proper handling of broken offsets in the analysis process
removed the JUnit Ignore import from RandomPlaneTest . java to clean up the code and improve readability
sulong : fix ( llvm _ 64bitvastart ) : use integer . tounsignedlong instead of integer . to
refactor btCollisionObjectArray and btRigidBody to use instances of btCollisionObject . getInstance instead of a static upcast
added a static final build copyright property and updated the AboutDialog to use this new copyright year to enhance copyright information and improve clarity in
expose getdistributedobjects ( ) method in jetclientinstanceimpl ( # 15973 )
updated calculations for expMOI long , expInertia , expMOI _ tr , and expMOI _ tr in MassCalculator
updated memory semaphore initialization from total memory to max memory to improve memory management by using the maximum available memory instead of the total
[ hotfix ] fix checkstyle violation in standaloneschemafetcher
use burningmanservice . isactivated ( ) to check if burningman be active .
updated JSON input handling in JsonLoaderTest . java to improve clarity and functionality of JSON parsing
update tableSize validation from a fixed value of 1 to a maximum of 0x40000000 to ensure that the required capacity does not exceed the
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to enhance code clarity and prevent potential null pointer exceptions
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the code by eliminating unnecessary annotations
added error handling for security exceptions in FileHelper . java and modified content handling in TextHelper . java to improve robustness by preventing security
added a new constant ` StyleWithMultipleAttributes ` and implemented multiple attribute resolution tests in ` ShadowThemeTest ` to enhance theme functionality by allowing
updated sheet name checks in HSSFWorkbook . java and added multiple sheet creation in TestHSSFWorkbook . java to improve sheet name
replace primaryColor ( ) with elementColor ( ) in ManageAccountsActivity . java to ensure consistent color representation across the application
updated handler initialization in DefaultEventBus . java to handle null replyHandler and modified path resolver in DefaultPlatformManager . java to improve robustness
added binary collation support to MariaDbDbmsType , MySqlDbmsType , and AbstractDbmsType classes and updated related imports and
added a new method ` whenType ` to the ` Tree ` class that returns an ` Optional < T > ` to provide a way to
refactor navigation handling in ItemLauncher to return the user view destination to improve code readability and maintainability by encapsulating navigation logic in a
changed the response type from OK to temporaryRedirect to provide a redirect to the application ' s public URL to enhance user experience by providing a more
[ hotfix ] [ kinesis ] improve error message for non - serializable deserialization schema
( chore ) camel - johnzon : fix javadoc warning in camel - johnzon
refactor ZkStateReader initialization and shutdown logic in LeaderElectionTest . java to improve resource management and ensure proper closing of ZkClient
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity
added a new method ` read ( EndPoint endPoint , Buffer buffer ) ` and refactored the existing ` fill ( ) ` call to
replaced instances of ` BufferUtil . allocate ` with direct calls to ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java
changed the return type of the prepareStreamsToUpload ( ) method from void to boolean and updated its implementation to return a boolean indicating success or
replaced direct calls to ` Integer . compare ` with ` Integer . compare ` for better readability and performance to improve code clarity and
added a new file ` PicOfDayAppWidget . java ` that implements image loading functionality for app widgets to enhance user experience by integrating
server : fix the issue when internal lb service offering id be not specify in the config - internallb . service . offering
replaced ` RelOptUtil ` with ` HiveRelOptUtil ` in ` HiveParserCalcitePlanner . java ` and modified the
[ hotfix ] deprecate old savepoint api in favor of new one
added user and password options for remote JMX connections in NodeToolCmd . java to enhance security by allowing users to access remote Jmx credentials
removed redundant initialization of scratch BytesRef in Stemmer . java to streamline code by eliminating unnecessary variable declarations
updated method calls in AppsCustomizePagedView . java to include mPageViewIconCache as a parameter to ensure proper handling of
ggbapplet . getview ( ) now return 3d view for 3d view , not 3d view
updated rotation positioning logic in GcodeRenderer . java to ensure rotation values are non - negative to prevent invalid rotation values
added a new " WORKSPACE " option to the OptionEnum and integrated it into the TerminalClient to allow users to specify a workspace directory for
updated the test file path from " options . apt " to " options . html " to ensure the test uses the correct HTML file for
updated ScimUtilsTest to use JUnit 5 annotations and added pollution prevent extension to enhance test coverage and improve test reliability
refactor the ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` ModelAndView `
added assertTrueEventually to ensure session closure and second level cache hit count accurately to improve test reliability by ensuring sessions are cleared before
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event processing
rename MultiPaintEventTest . java file to improve clarity and consistency in naming conventions
removed final modifier from mNewScale assignment in WorkspaceStateTransitionAnimation . java to improve code readability and maintainability
refactor SyncFactory class structure to improve code readability and maintainability
added unique key field handling in LukeRequestHandler to ensure unique keys are correctly associated with the schema
added methods to set and retrieve the round border color in Border . java and modified border color handling in EditableResources . java to enhance color
add miss boundary annotation and assertion . neverpartofcompilation in binaryparserexception .
[ hotfix ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerschedulingtest
added logging statements in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes , and modified return values in PingPong
added toolbar menu functionality to the RecentChatFragment class to enhance user experience by providing quick access to recent chat items
modified ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
replaced instances of ` add ` and ` removeTail ` methods with ` push ` and ` pop ` methods across multiple classes to standardize
updated URLs in CommonsApplication from " https : / / test . wikipedia " to " https : / / common . wikimedia
refactor index management by introducing setIndex and updateIndex methods to improve code readability and maintainability by encapsulating index logic
replace usage of ` Collections . sort ( ... , ... ) ` with ` collections . sort ( ... , ... ) ` in multiple files to
added various date and time patterns to the DateTimePatterns array in FormatData _ hr _ HR . java to enhance date formatting capabilities for better
clear focus from clickedView in DetailFragment . java to improve user experience by ensuring the clicked view is clear before proceeding
updated language selection logic in DescriptionsAdapter and modified language handling in SpinnerLanguagesAdapter to improve user experience by ensuring correct language selection based on
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple
added native methods for register global , weak , and access fields in FastGetField . java to enable dynamic registration and access control based on the
added default value handling for UNION and NULL types in ReflectData . java and TestReflect . java to ensure correct serialization and deserialization of null values
increased the offerTimeout value for the Seda blocking bar from 300 to 1000 to allow more time for the block operation to complete
added a null check before remapping the resource class to avoid potential NullPointerException when the resource class is null
chore ( hapifhir ) : add constructor to hapifhirdialect and hapifhir derby
camel - 8274 : http : / / issues . apache . org / activemq / browse / camel - 8274 -
increased the socket timeout from 60 seconds to 120 seconds in BasicDistributedZkTest . java to allow more time for socket operations
added an assertion to verify that the count of tickets is zero and the final price cts is greater than zero to ensure that the count of
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter to improve code structure to enhance maintainability and readability of the code
use getfirstelementchild ( ) . getfirstelementchild ( ) instead of getfirstchild ( ) . getfirstchild ( ) for
planner - 2175 : fix look up strategy for enum - based look - ups
[ java ] wait for node to shutdown before shut down cluster node .
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 135 , log
added a content type assignment for " application / octet - stream " in WebdavEntry . java to ensure proper handling of octet stream content type
added a method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created a corresponding test class ` LazyTraceThreadPoolTask
fix distanceop to skip line that do n ' t match the minimum distance .
renamed the variable ` required ` to ` requiredLabel ` and updated its usage throughout the code to improve clarity by indicating that the
replaced the overridden ` next ( ) ` method with a call to ` updateProgress ( ) ` in ` PurgingPartitionIterator . java
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access
added validation to ensure polygons contain at least 3 points and updated localVertices assignment logic to ensure that polygons contain at least 3 points before assignment
replaced ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) across multiple files to utilize a standardized way to create ObjectMapper instances
ggb - 583 : do n ' t draw curve a a poly if it be not a poly ( partial fix , only for 2d )
modified the handling of Unicode name lengths in ExternalNameRecord . java and added a test for Unicode name parsing in TestExternalNameRecord . java
fix typo in jms destination type description
added logic to exclude " username " and " password " prompts based on the ` returnLoginPrompts ` flag to ensure proper handling of
updated listener removal logic to use removeIf condition to improve listener management by ensuring only unique listeners are removed
added a case to toggle the spinner in the PieChartActivity to enhance user experience by allowing smoother transitions of the chart
kvm : kill vhd process when copy vhd from secondary storage
hbase - 2642 skip normalizing table that have a quota ( hbase - 2643 )
updated import statements and added a resize method in AndroidInput . java to improve code organization and enhance input resizing functionality
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and reformatted the ` @ VisibleForTesting ` annotation to enhance
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to mark the test as ignored due to potential issues with blocking PRs
fix the hopperhock be able to place item in the wrong place . close # 232
added authentication dialog functionality in SsoWebViewClient . java to enhance user experience by providing basic authentication information
refactor TestStressIndexing2 to improve document deletion and query handling to enhance code readability and maintainability while ensuring proper handling of document
[ flink - 22559 ] [ table - planner - blink ] ignore flaky upsertkafkatableitcase . test
replaced ` pg . types . get ( j ) ` with ` pg . types . computeIfAbsent ( j , ... ) ` and corrected
added configuration to allow single values to be deserialized as arrays in DefaultEntityMapper to enhance flexibility in data processing by allowing single values as arrays
updated localization message to include " BE " , " UK " , and " SL . " to provide clearer context for localization updates
updated SHORTCUT _ CATEGORIES to retrieve a string from a resource instead of a hardcoded string to improve flexibility by allowing dynamic
fix ( core ) : add support for instanceof ( and ) operator
nifi - 1746 : added mime . type attribute to flowfile in gethttp when content - type header be present .
transaction with conditional delete and update on the same resource should not fail ( # 5318 )
replaced ` exitButton ` with ` doneButton ` in ` HelpActivity . java ` and added a check for ` searchable ` in `
refactor NatsConfiguration class for improved readability to enhance maintainability and facilitate future updates
refactor ` invalidateStalePartition ` method to accept a ` List < PartitionNameWithVersion > ` instead of a single ` PartitionNameWith
improve performance of viewresultsfullvisualizer by use circular buffer
replaced the icon resource from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple files to align the icon with the
changed ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to use ` getLongVolatile `
updated method names in MocksCreationTest to include underscores for clarity to improve readability and consistency in method naming conventions
added a constant for the data source name in CSVThirdEyeDataSource and changed the visibility of the generateDetectionConfig method in YamlDetectionConfig
increased the timeout duration for the awaiter function from 10 seconds to 30 seconds to allow more time for phaser execution to complete before
removed the ` BuildSlaveFinishedStatusEvent ` class and updated the ` publishBuildSlaveFinishedEvent ` method signature to simplify the event publishing process
fix findbugs encode issue in vmwarestoragemanagerimpl . java and vmwarestoragemanagerimpl . java
test : add test case for deposit workspace item without workflow
added distinct to the classpath stream processing in ClassLoaderSupportImpl . java to ensure unique classpath files are processed before processing
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unnecessary state checks
refactor command - line argument handling in SpecificCompilerTool and add tests for flag ordering in TestSpecificCompilerTool to improve code clarity and ensure correct processing of compiler flags
added a check to ensure the table is not external before attempting to delete a directory to avoid potential errors when attempting to delete external partitions
updated HIVE _ SERVER2 _ ASYNC _ EXEC _ THREADS , HIVE _ SERVER2 _ ASYNC _ EXEC _ WAIT
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
updated UpgradeResourceProvider to use serviceName and componentName instead of a hardcoded string to improve code clarity and maintainability by centralizing task execution
added a new variable ` diff ` in ` OperationSetTelephonyConferencingSipImpl . java ` to store the ` currentConf
fix an npe when clear the log tree ( # 3883 )
updated return statements in ChannelEndPoint . java to include checks for socket states to ensure proper handling of shutdown scenarios when the channel is not open or
refactor SetNullableGenerator class for improved nullability handling to enhance code clarity and maintainability
camel - 16400 : fixed the issue of camel - example - reportincident do not support servlet transport .
replaced specific imports from ServerWebExchangeUtils with a wildcard import and refactored form data handling in NettyRoutingFilter to simplify import statements and improve code readability
added new @ ApiOperation methods for " hello " and " helloWithValue " in multiple service classes and updated method signatures to include a body
refactor ` update ` methods in ` Lwjgl3Application ` and ` Lwjgl3Window ` to remove ` Lifecycle
updated the FG _ FK color value from 0.90 to 0.200 to improve visual consistency by adjusting the foreground color
added a requirement for mp3 format in the SoundManager class to ensure that the audio formats are not required for playback
fix secondaryindexmanagertest failure when index be delete
pmd - plugin : add ` ` version ' ' property to the ` ` pmd - plugin ' ' page
[ hotfix ] [ test ] use optional instead of throwable . getcause in customserializationitcase
refactor MediaFormatUtil methods for improved performance to enhance efficiency and maintainability of media format handling
added an overridden method ` isCellEditable ` to return false in ` GeneralTab . java ` to provide a placeholder implementation for cell editing behavior
added a ` isOnlyPrintCommands ( ) ` method to ` AbstractUnusedDependenciesFinder ` and modified ` DefaultJavaLibraryRules ` and `
added a static integer variable ` tmpCount ` in ` VocalTractModifier ` and updated the ` vscales ` array in ` V
updated import statements for BaseScalarUdfTest in multiple test files to ensure consistency in test utility usage across the codebase
implement hashCode ( ) and equals ( ) methods in UaaAuthenticationDetails class to ensure proper comparison and hashing of object instances
update testskeletoncontrolrefresh to use new animation system
rename nodeutil . isfiltered ( ) to nodeutil . iscounted ( ) for consistency
updated the condition to check if the size of sync block is less than or equal to SYNC _ FETCH _ BATCH _ NUM to ensure
fix type - checking in debugexpressionparser when use inlining .
updated dependency resolution logic in ExcludeDependency . java to include classpath scope checks to improve accuracy of dependency exclusion detection
replaced the ` tmp ( ) ` method with ` dst2 ( v ) ` and added a new ` dst2 ( v ) `
initialized the ` args ` array in ` GridHubConfiguration ` to avoid null pointer exceptions
updated linker argument handling in RustBinaryDescription and added a new test for linker flags override in RustLinkerIntegrationTest to improve linker
[ # 7015 ] fix test that fail on travis ( # 7015 )
added configuration for Hive query name and improved log message formatting for LLAP split generation to enhance clarity of log output for better debugging and
removed unused import of java . io . File from TileAtlas . java to clean up the code and improve readability
bugfix # 227 , add cancelling to gradledaemonexecutor and escapeprocessingoutputstream
updated the ` validateQuery ` method to accept an additional ` arguments ` parameter for improved error messaging to enhance error reporting by providing more context
updated INDEX _ VERSION from 1 to 2 and refactored the getTree method to use MultiSourceReader instead of MultiReader to improve versioning
[ hotfix ] [ kryo ] add kryo registration test for default kryo registration
added null check before removing a property from the configuration to prevent potential NullPointerException when removing a property
refactor boolean conversion logic in MetaStoreDirectSql . java to utilize BooleanUtils for better handling of boolean types to improve code readability
added hideCustomizationDrawer ( ) method to Launcher . java to improve user interface by hiding the customization drawer
added warning handling for term vector keys in TermVectorComponent . java and updated related tests in TermVectorComponentDistributedTest . java to improve
added optimistic type logging and improved log message formatting in Compiler . java to enhance performance and clarity when optimistic type logging is enabled
refactor Expect class to improve code readability to enhance maintainability and facilitate future updates
added UnixSocketConfigurationStrategy to the DockerClientFactory and updated DockerMachineConfigurationStrategy to include it to enable Unix - like socket access for Docker
added flaky test methods ` testEvenLowRateIP ` in ` CloseableDoSFilterTest ` and ` CloseableDoSFilterTest `
camel - 16400 : camel - reactive - stream should throw a more specific exception when there be no active stream .
refactor ` Vectorizer ` and ` TezCompiler ` to use ` MapWork ` instead of ` MapRedTask ` for improved
modified constructors of StringAppender and LogDivertAppender to include a new boolean parameter to enhance functionality by allowing additional logging options
do n ' t throw npe if there ' s no guicomp
[ gr - 36400 ] add weak linkage to the function .
updated multiple Java files related to auto - loading functionality to improve performance and maintainability of the code
no effective change - add test for defaulttransactionthreadlocal . get ( )
added validation for invalid operation handles in HiveStatement . java to improve error handling and logging for better debugging
rename ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _
camel - 14850 - camel - aws : create an aws - secret - manager component - create an aws - secret - manager component -
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed exception message from the error response message in UserREST . java to simplify error message handling for better readability
modified the ` fromContent ` and ` fromContent ` methods to include a ` subTree ` parameter to enhance functionality by allowing sub - tree
updated column width calculation in Sheet . java and added a new test method in TestHSSFSheet . java to ensure accurate column width calculations
added configPath parameter to the Commands . less method call to include the configPath parameter for less command execution
replaced instances of ` Set ` with ` Collection ` for ` tables ` and ` weakAssociations ` in ` DotWriter . java ` and
update default SSHD container image from sha256 to 1.0 . 0 to ensure compatibility with the latest SSH image version
do n ' t throw npe if hostid be null
refactor grouping logic in DefaultGroupKeyGenerator to use BlockSingleValIterator for multi - valued columns to improve code clarity and maintainability
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and modified seek behavior to improve test clarity and
refactor BCSiliconRecipes to use a builder pattern for ingredient stack creation to improve code readability and maintainability
rename method ` put ` to ` putobject ` in ` graphhopperconfigmixin `
updated visibility handling in CellLayout and refactored drag exit methods in Workspace to improve clarity and maintainability of drag - and - drop
refactor ` ModifyRequestBodyGatewayFilterFactory ` to use ` getRewriteFunction ( ) ` for handling empty request bodies to improve code clarity
updated accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder to include package accessibility checks to enhance accessibility validation for package -
replaced instances of ` logger . warn ` with ` logger . trace ` in ` LoggingHandler . java ` to improve logging granularity and reduce
modified the prefix extraction logic in WhiteBlackList . java and added a new test class Issue348 . java to improve handling of wildcard patterns
added options menu functionality and improved item selection handling in GalleryActivity to enhance user experience by allowing users to navigate to specific gallery attachments
refactor MongoDBServiceFactory to use singleton instances instead of a builder pattern to improve performance by reducing unnecessary object creation
added tests for replacing boolean values in InlineConstantMutatorTest to ensure correct formatting of boolean values when true or false are replaced
added a black hole parameter to the decode method in RecordTest . java to enhance the functionality of the decode method by allowing for more control over
fix : update gapic - generator - java with mock service generation fix ( # 399 )
changed the return type of ` getAllUnitStrings ( ) ` from ` Stream < String > ` to ` Stream < Map . Entry > `
clear the witnesses list in ManagerTest . java to ensure proper management of witnesses during tests
add debug log to jdbcpagesink . abort ( )
removed the " stack " property and replaced it with getter and setter methods in NativeError . java to streamline stack management by eliminating
added a condition to check if the path name starts with a dot in DrillPathFilter . java to ensure proper handling of paths that start
refactor onboard - related variable and method names from onboard to autoload in ThirdEyeAnomalyApplication and ThirdEye
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before tests run
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to accommodate a new
changed fThreadGroup to be volatile and made fLookForStuckThread final in Timeout class to ensure thread safety and immutability of
changed the access modifier of the ` getValue ` and ` setValue ` methods in ` ValueResultData ` from ` final ` to ` public `
updated hash code calculation and equality check in FuzzyQuery . java to ensure consistency in hash code and equality checks
removed debug print statement for the target variable in PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed return types of ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` to ` void ` to simplify method signatures
update database driver version from 2.5 . 1 to 2.6 . 0 in test cases to ensure compatibility with the latest version of the
updated the method to retrieve person attributes with a size of zero and changed the principal creation logic to improve clarity and ensure the principal is built
changed log level from info to warn for connection error messages in OpenWebNetBridgeHandler . java to reduce log verbosity and provide more informative
renamed methods and variables from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency
added a constructor to ThumbnailGenerationTask to ensure storageManager is not null and mImageViewReference is not null to prevent potential NullPointerExceptions
updated the loop condition in GroupSelectionQuery . java to limit the number of iterations to 5 to improve performance by limiting the number of iterations
added a new file ` Bug1933922 . java ` to demonstrate recursive compilation and program retrieval to demonstrate
simplified parentheses in comparison and conditional checks across multiple classes to improve code readability and maintainability
updated the validation condition for control characters from 33 to 32 in FileResolver . java to ensure only valid space characters are accepted
added a call to request focus in the Display class to ensure the component focuses when necessary
update test data for new test in instructor home page ui test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated DetailFragment to display a confirmation message if the message is not empty and changed the activity ' s notification method to MainActivity to improve user
added a test for querying and fetching schema templates with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correct handling of schema templates
refactor Dialog class for improved readability to enhance maintainability and ease of future updates
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder . start ( args ) ` for command execution to
updated the local host reference from ` InetAddress . getLocalHost ( ) ` to ` InetAddress . getByName ( " 127.0 . 0.1
refactor subsystem assignment logic to use a helper method for better readability to improve code maintainability and reduce duplication
added assumption checks in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms to improve test reli
rename jvmciversioncheck . validateproperties ( map ) to jvmciversioncheck . getrequiredproperty ( map )
refactor Mockito class implementation to improve code readability and maintainability
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage
updated source retrieval in BinaryParser and PlainTextParser , added charset handling in ParsingExecutionContextView , and modified readBytes method to include context
added support for setting and getting MultiPartFormDataCompliance in HttpConfiguration and introduced a new enum MultiPartFormDataCompliance to enhance flexibility in handling
added support for JDK - 17 in GradleDistributionManager to ensure compatibility with JDK - 17 features
refactor type addition logic into a separate method ` addType ` in ` SnapshotControl ` to improve code readability and maintainability by encapsulating
refactor Term class to improve code structure to enhance maintainability and readability of the code
updated return statement to handle null or empty runWith values to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4892 - add test case to verify that
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
pdf417 : fix localblockbinarizer to use the black matrix of the image
replaced direct usage of ` amount ` with a variable ` mTintAmount ` in ` TaskView . java ` to improve code readability
added a new file ` SumZeroAggr . java ` to implement the ` SumZero ` aggregate function to facilitate the aggregation
[ hotfix ] [ test ] fix checkstyle violation in firstvaluefunctionit and nthvaluefunctionit
hbase - 27458 bucketallocator . getallocatenotfoundexception ( ) should print the bucketallocatorexception
added a null check for propName before adding it to roleObject to avoid potential NullPointerException when propName is null
updated access modifiers to ` @ VisibleForTesting ` and added annotation for testing purposes in ` StatusBarTouchController . java ` , and refact
added a method to log container streams and modified the logContainer method to accept a boolean parameter to enable control over the logging behavior for container logs
add a performance test for mvstore cache
updated LONG value from " L " to " J " in PrimitiveType . java to support additional data types in the primitive type representation
changed the method ` delegatingApplicationListener ` from instance to static to allow the method to be called without an instance of ` DelegatingApplication
camel - 14263 : camel - rest - do not set message body to null when use rest endpoint .
added ` FileDeletingTasklet ` and ` TaskletJobFunctionalTests ` classes for managing and validating file deletion in a batch job to
g3d - 374 : update center / orientation / scale for plane companion view only after size keep drawables change .
lgtm : fix index - out - of - bound error in hashmap and bitutil
updated the ` sendEventToTest ` method to accept an integer state ordinal instead of a string to enhance flexibility by allowing state - specific
added video thumbnail request checks in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video requests based on the user agent
updated error handling logic in ErrorCheckerService . java to improve line positioning and scrolling behavior to enhance user experience by providing clearer error messages
modify titleArea layout behavior based on theme constants for menuButtonTopBool and menuButtonBottomBool to ensure proper alignment of buttons based on their
added " libskia " preload option to Skia . java and updated value assignment in Skia . java to enable loading of Skia
added support for unit test network ID in NetworkParameters . java to enhance functionality to support unit testing in the application
added error handling for missing format arguments in QueryCommand and improved test cases in QueryCommandIntegrationTest to ensure that format arguments are validated correctly
updated variable names and logic in IntIterator . java for clarity and consistency to improve code readability and maintainability
updated ` walkRuleAndAdd ` method to include ` srcRule ` as a parameter and modified dependency traversal logic to include source rule to enhance
[ netbeans - 3952 ] fix module name for class _ output in patch module file manager
[ java ] remove unnecessary check for protocol version in election .
updated the default policy setting for OwnCloudClientManagerFactory based on authentication type to ensure proper session management based on authentication type
add miss ` ` mappedtableresource ' ' error message to readbatch and writetablebuilder
( chore ) camel - jms : clean up connection close logic
refactor AnonymousAuthenticationFilter to utilize a deferred context for improved security context management to enhance code clarity and maintainability by centralizing
updated the ` removeActor ` method to accept a boolean parameter for unfocusing actors to enhance functionality by allowing control over the unfocus behavior
refactor cloudConfig initialization to use a variable for valid configurations to improve code readability and maintainability by reducing redundancy
added logging support and improved connection handling in NettyHttpServer and RoutingInBoundHandler to enhance logging capabilities and ensure proper connection management
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replaced direct call to ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` to improve thread safety
camel - 1640 : camel - groovy - optimize to reduce object allocation .
remove versionless check from plugin manager , use collections . empty _ map instead
changed access modifiers of several methods in CliFrontendParser , ProgramOptions , and ProgramOptionsUtils from package - private to public to allow access to
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
added logic to retrieve the storage alias and certificate chain from the Kerberos key store to enhance security by ensuring accurate certificate chain retrieval from storage keys
danielwagnerhall : throw a webdriverexception instead of a classcastexception when an invalid json be convert to a response
change visibility of updateImage ( ) method from private to protected in ImageButton . java and ImageTextButton . java to allow subclasses to access
add ` dropresources ( ) ` method to ` block ` , fix # 6248 ( # 6248 )
added native methods for spatial location calculator configurations in DataOutputQueue and depthai classes to enable configuration management for spatial location calculations in the spatial location
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replaced the ` keySet ( ) . isEmpty ( ) ` method with a new ` isEmpty ( ) ` method in ` TreeTrie ` to
updated foreground and background methods in AttributedStringBuilder . java to use variable parameters instead of a hardcoded value to improve code readability and maintain
solr - 1640 : disable the fingerprint in peersync when solr . disablefingerprint = true be set to true
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
refactor MongoTemplate and MongoTemplateTests classes to improve event handling and add new test cases to enhance test coverage for MongoDB operations and ensure proper
fix settransactiontest and add logger to collectioncontainer
close the tikainputstream if it be n ' t null
updated the exception handling from ` ApiBag . ExceptionWithErrObject ` to ` ApiException ` in ` TestCollectionAPIs . java ` to
removed unnecessary whitespace in the loadConfig method call to improve code readability and maintain consistency
[ # 7013 ] instructor : fix typo in instructorfeedbackaddactiontest . java and instructorfeedbackcopyactiontest
[ hotfix ] fix checkstyle violation in externalworkerservice
removed the step parameter from HmDatapoint and related classes to simplify the code by eliminating unnecessary step configuration
updated logging messages and added shared and exclusive lock handling in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of log messages
removed an unnecessary call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline job scheduling logic for improved performance
simonstewart : fix the flaky testgettextcontent
refactor logger management to use ThreadLocal for improved thread safety to enhance performance by allowing concurrent access to the logger instance
updated FunctionInitializer and its test class to use MockitoJUnitRunner instead of JMockit in FunctionInitializerTest to improve testing capabilities and
added boxed type handling and improved type comparison logic in multiple files to enhance type inference checks and ensure correct handling of primitive types
updated task view handling in RecentsView and removed digital well - being toast initialization in TaskView to improve task visibility management and ensure proper
hbase - 27979 fix testflushfromclient . testhbasecluster . getregions ( ) to use getregions ( )
added logic to delete a new repository if it has a contract information and save all contract storage keys to ensure the cache reflects the correct contract
updated TOKEN _ ISSUE _ FEE constant and modified balance calculations in TokenIssueProcessor and Program classes to use dynamic properties to improve accuracy
refactor cache management in RealisticRenderStrategy to use URI and URI types instead of RocketComponent and Decal to improve texture management efficiency
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code read
added a boolean flag ` isUnselectedStyle ` and modified the ` getStringWidth ` method in ` Label ` and ` DefaultLookAndFeel
updated ArrayList initializations to specify initial capacity and refactored action list initialization to improve memory management and enhance code readability
removed the ` flags ` parameter from multiple method signatures in ` ShadowApplicationPackageManager ` and added a new constant ` FLAG _ PRIMARY ` in
updated PingRequestHandler . java for improved ping handling functionality to enhance performance and reliability of ping requests
test : add sample with increasing timestamps uri to android test
[ tradfri ] remove isoldfirmware ( ) method in tradfrigatewayhandler
updated the implementation of the AjaxElementLocator class to improve performance and maintainability of the code
updated references from InlineLayout to DefaultLayout in BoxLayout . java and modified display condition in DefaultLayout . java to include " table - cell
updated JsonDecoder to handle both START _ ARRAY and END _ ARRAY conditions to improve JSON parsing logic and ensure correct ordering of fields
updated the listener lambda parameter in BlockCache . java to improve clarity and consistency in location release handling
[ hotfix ] disable flaky savepointtestbase test
[ ci ] add miss test annotation to drools - parser
changed variables from non - final to final in ContextRegisterListener . java to ensure immutability and prevent unintended modifications
refactor ObjectHashSet to use lazy initialization and improve iterator management to enhance performance by allowing lazy initialization of the iterator and enhance test coverage
added batch size checks and default values for batch processing in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure
changed context modes from MODE _ WORLD _ READABLE and Context . MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE in AppSettings
updated logging messages and added abort handling in JdbcProxyGenerator . java to improve clarity of log messages and enhance error management during connection closure
updated workspace animation to use mState instead of getState directly and added accessibility import options based on the current state to improve accessibility support for
changed log level from warn to debug for malformed edits in ProtobufLogReader . java to reduce log verbosity and improve performance
updated scope substring logic in UaaTokenServices and added a test for scope length limits in UaaTokenServicesTests to ensure scope length is
updated import statements in SchemaRetrievalOptionsBuilderTest . java and added a toString method in AvailableJDBCDrivers . java , and renamed TestAvailablePlugins
( chore ) camel - kie - services : add executablecommand interface to allow execution of executable method
( chore ) camel - itest : remove jdbctableservice from camel - jms
added padding retrieval methods for left , top , and bottom in CellLayout . java and modified bitmap creation in Launcher . java to improve layout
modified the initialization of cands to include a conditional check for sb length to ensure cands are only assigned when sb is not empty to improve
updated various classes to replace ` SamlMetadataUIParserAction ` with ` Action ` and added null check for the ` flow ` object to
added a method to check the existence of LDAP ports and implemented port checks in LdapMockMvcTests . java to improve the reliability of port
log4j2 - 1343 change default number of executorservice shutdown from - 1 to 0
updated URL handling in Fetcher . java and modified refreshUrl handling in HTMLMetaProcessor . java to improve URL management and enhance logging clarity
updated SolrQuery from " * : * " to " name : samsang " and modified the assertion message in TestSpellCheckResponse
refactor Console initialization to use Karaf Console API based on parameter types to improve compatibility with different Karaf Console API implementations
blender loader : fix a bug in meshhelper . getverticescolors that could cause an arrayindexoutofboundsexception if the mesh
added a filter to exclude timestamped reports directories and modified the copyDirectory method to include this filter to enhance the functionality of the HTML report generator
refactored test method names and added parameterized test for email validation to improve code clarity and enhance test coverage for email validation functionality
pdfbox - 4892 : remove unused private method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to ensure proper error handling for binding errors to improve robustness and provide clearer
removed a debug print statement from JoglInput . java to clean up the code and improve readability
added a boolean flag ` allowExtractingPrivateFields ` and updated the ` readField ` method to utilize it to control extraction of private
added a replacement for the device name in WebDataHandler . java to ensure the device name is correctly replaced with its device name
refactor lookupConstructor initialization to use MethodHandles . lookup ( ) when Java 8 types are present to improve flexibility in creating instances of Lookup
replaced the deprecated weights method with a new weightsByDouble method in ZParams . java and updated its usage in SortedSetCommandsTest . java
modified the ` writeCustomHTML ` method to include a ` Database ` parameter across multiple writer classes to enhance functionality by allowing database - specific HTML
removed unnecessary type casting for keys in BTreeMap . java to improve code clarity and prevent potential NullPointerExceptions
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to throw ContractExeException for specific exceptions to improve
bugfix # 20619 , add profiler . heap . zerofile system property to disable memory allocation
refactor code to use ` Scope . getCurrentScope ( ) . getUI ( ) . sendMessage ( ) ` instead of ` System . out
increased the size of the buffer from 14 bytes to 13 bytes in HortonworksEncodedSchemaReferenceStrategy . java and removed a
added imports for ChunkListener , ItemReadListener , and ItemWriteListener in multiple batch classes to enhance batch processing capabilities and improve code organization
refactor code formatting and improve property retrieval logic in AbstractProviderModule . java to enhance code readability and maintainability while ensuring correct property retrieval
updated variable names for consistency and clarity in multiple classes to improve code readability and maintainability
updated Test7005594 . java file to improve test coverage for new functionality
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error reporting for entry validation
refactor TopKRollupPhaseOneJob class for improved clarity to enhance code maintainability and readability
server : fix npe if vm be not attach to vm
refactor Gamepad . java to replace mModifierDigitalTriggers with mModifierAnalogTriggers and add GUIScaleListener to enhance
renamed methods ` iteratesOverSequence ` to ` iteratesOver ` and introduced ` iteratesOverAsList ` in ` IterableSubject ` and `
camel - 16400 : camel - http - optimize defaulthttpbinding so we do n ' t have to decode the header first
added JPA assertions to verify the count of stored procedures in the database to ensure that the count function returns zero for various data types and
added a new ` LargeValueFormatter ` class and updated related calculations in ` BarChartActivityMultiDataset ` , ` BarLineChartBase
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR in CommentsParser . java to improve code readability and
remove @ suppresswarnings ( ` ` argument . type . incompatible ' ' ) from platform . java
swapped the spacing in the printLir method call in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency
added a TODO comment for auto - generated methods in NullAssertionValidator . java to address compiler warnings related to method stubs
added a check for ` RuleKeyAppendable ` in ` DefaultRuleKeyBuilderFactory ` to append the " . buck " rule key to
added logic to create a system profile directory if it does not exist and refactored test setup and teardown methods to improve resource management and enhance
refactor thread factory instantiation to use a dedicated method to improve code readability and maintainability
refactor message tracking in HttpChannelOverHTTP and HttpReceiverOverHTTP to use the receiver ' s getMessagesIn ( ) method to improve code
added a method to set the " accept " attribute to " image / * " in ImageFileInputDialog . java to enhance user experience by
updated Elasticsearch client usage to newer API conventions to improve compatibility with the latest Elasticsearch features and reduce deprecated code usage
added detailed logging of witness and witnesses classes in ForkController . java to improve debugging and traceability of the forking process
added a new file ` NullPointerAndEmptyArrayTest . java ` to test the behavior of ` NullPointerAndEmptyArray ` with null
updated methods in BaseIjModuleRule , IjProjectBuckConfig , and AbstractIjProjectConfig to handle generated source paths to
added methods to construct wildcard patterns with an optional delimiter in UaaStringUtils to enhance wildcard matching flexibility in LDAP authentication
added validation checks for ` aliasesToWork ` and ` TableScanOperator ` aliases in ` Vectorizer . java ` to ensure that only valid
updated MockitoJUnitRunner import and modified exception handling in WeatherQueryTest . java to ensure compatibility with the latest Mockito features and
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting firmware settings fails
replaced the return type of the ` getLangs ` method from ` String [ ] ` to ` Set < String > ` and updated the
updated import statements and modified assertion logic in LazyTraceScheduledThreadPoolExecutorTests . java to enhance clarity and correctness of test assertions
hbase - 16421 acquire table lock in takesnapshothandler to prevent race between snapshot and disabletable
[ j2kt ] implement finally via control flow for isnull call .
added a test to verify the modified HTTP RPC endpoint in the Docker explorer to ensure the explorer correctly updates the HTTP RPC endpoint
added a volatile boolean field ` isSuspended ` and updated thread state handling in ` Thread ` and ` Test _ Thread ` classes to improve thread
replaced instances of Javadoc . Author and Javadoc . Since with new Javadoc . Hidden and Javadoc . Serial in Java11JavadocVisitor and Reloadable
camel - 1643 : camel - core - optimize to avoid npe when use multiple camelcontext in the same camelcontext
removed redundant @ Override annotations from multiple security - related classes to improve code clarity and maintain consistency in method security configurations
added module import support in Java2TypeScriptAdapter and updated assertions in EnumTests to ensure compatibility with the new module structure and correct expected behavior
replaced XMLConstants . W3C _ XML _ SCHEMA _ NS _ URI with " http : / / www . w3 . org
added content description handling for badged app notifications in BubbleTextView . java to improve user experience by providing clearer information about badged
added mouse wheel listener functionality in TestMouseWheelScroll . java to handle mouse wheel movement events
replaced the variable name ` docActual ` with ` docActual ` and added closing methods to ensure proper resource management and prevent potential memory leak
updated currency pair references from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
replaced instances of ` VacuumEnvironment . Location ` with ` String ` for location handling in multiple files to improve type safety and
simplified the conversion of Bitfinex symbols to uppercase to improve code readability and maintainability
updated import statements and refactored default value handling in JsonFormat . java to improve code readability and maintainability while ensuring only relevant fields
added handling for enum types in JacksonXmlFormatMapper to ensure proper serialization of byte array values for enums
updated virtual thread constants and refactored thread management logic in VirtualThread . java to improve code readability and maintainability by standardizing thread
refactor DirectoryTaxonomyWriter to use a new variable for term and category terms in termDocsEnum calls to improve code readability and maintainability
refactor VetoableChangeSupport class to improve code structure to enhance maintainability and readability of the code
adjusted the vertical position calculation in BrowserContentPane to account for an additional height parameter
pdfbox - 4892 : remove ` ` throws invalidpasswordexception , ioexception ' ' from method signature
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
make sure help button show in menu , not only in exam mode
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced ` Thread . sleep ( ) ` with ` ThreadHelper . waitUntil ( ) ` for better synchronization to improve responsiveness and
updated version check logic in SwingStartup . java to account for release status and exception handling to improve accuracy of version updates based on release status
added support for including generated file comments in migration configuration to enable users to optionally include generated file comments during migration
updated command descriptions from " < player > " to " < player | * > " in multiple Java files to enhance command usability by allowing
deleted BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filter classes to streamline the codebase
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency in naming conventions
added a condition to check if the parallel class is parallel in TestNGContentHandler . java to ensure proper handling of parallel classes in the test
[ issue # 4682 ] fix potential npe when enableactingmaster be null ( # 4683 )
refactor : remove static import of enums in ctmethodimpl . java ( # 2368 )
added serialVersionUID fields to multiple Java classes to ensure proper serialization compatibility for these classes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code readability and maintainability
updated ShibbolethCompatiblePersistentIdGenerator to accept a separator parameter for SHA - 1 hashing to enhance flexibility in hashing hashing based on
updated the logic to check if the system actions parameter is null before parsing to improve robustness by preventing potential null pointer exceptions
added a new file ` Person . java ` containing a class ` Person ` with a private field named ` name ` to provide a structure for
[ hotfix ] [ test ] remove local address from gossiper . start ( )
updated the method call to use ` toUpperCase ( ) ` instead of ` toUpperCase ( ) ` for time string comparison to ensure consistency in case -
added assertions to validate the properties of time column , time unit , and total documents in SegmentMetadataImplTest to ensure that the metadata reflects
updated color usage in SimulationPlotPanel from java . awt . Color to net . sf . openrocket . util . Color and changed
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to enable
updated the method for retrieving annotation types from ` getAnnotationNamesByStereotype ` to ` getAnnotationTypesByStereotype ` to
danielwagnerhall : fix double overflow issue in firefox
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
updated JTATransactionManager to use a custom JNDI location for JTA TransactionSynchronizationRegistry to improve flexibility in retrieving the JTA Transaction
changed the visibility of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
added a method ` hasFunction ( String function ) ` that returns ` false ` to the ` Library ` class to provide a way to check
replace variable ` enabledCiphers ` with ` result ` and update related references in ` JSSESocketFactory . java ` to improve clarity
[ beam - 8470 ] use millisecond precision for timestamp in bigquery storage api
replaced multiple null checks with requireNonNull for buffer and userCredentials in Identifiers and DatabaseConnector classes to improve code readability and maintainability by
[ graphql ] rename input to inputmap in valuesresolver . coercevalueforinputobject ( )
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure data integrity by preventing out - of - bounds exceptions
added scrollSelectionVisible ( ) method call to ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness during selection
fix false positive with unnecessarylocalbeforereturn
replaced the initialization of scriptEngineManager with a direct assignment of scriptEngine to simplify the code and improve clarity by directly initializing the script
[ geot - 5798 ] remove redundant code in distance similarity calculation ( # 5793 )
do n ' t try to incrementally backup if the sstables be null
added a new method ` relativize ` to ` MorePaths ` to handle path normalization to ensure that both paths are correctly relativized
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper representation of decimal digits when columnSize is null
[ hotfix ] [ test ] do not delete temporary file in deadletterqueuerewritertest
replaced ` ByteArray . toHexString ( ) ` with ` ByteArray . toJsonHex ( ) ` in ` TronJsonRpcImpl . java `
rename ErrorHandlerController to Error403Controller and create new controllers for error handling to improve clarity and organization of error - related controllers in the
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and Windows
updated imports and added new array tree functionality in Tiny . java to enhance functionality to support dynamic array conversion based on the source version
refactor connection acquisition logic to use an iterator for removed entries to improve efficiency by eliminating redundant checks for freezed and master
updated method names and references from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` and ` setLdapDateConverter (
pdfbox - 4892 : add a check for the existence of id _ tree to avoid an npe
updated error message format in JavassistUtils . java to include the class name and class loader to improve clarity of error reporting for
added readerException and writerException fields and modified thread join timeouts in LargeStreamletTest . java to improve error handling and ensure proper thread
updated the page navigation logic in HomeFragment to use dynamic page types based on user settings to improve user experience by allowing dynamic page navigation based on
added a try - catch block to handle potential exceptions when creating native images to improve error handling and prevent crashes due to image rendering issues
replaced the use of ` suppressNode ( ) ` with ` @ SuppressSubnodes ( ) ` in ` BaseParser . java ` to
replaced direct instantiation of ` FDFParser ` with a try - with - resources statement for ` RandomAccessReadBufferedFile ` and `
deleted the file TestDocInverterPerFieldErrorInfo . java to remove unused file to streamline the codebase
added shell command to input key events in AbstractLauncherUiTest . java and removed assertion in LauncherInstrumentation . java to improve input handling
added functionality to map filenames to URLs and serialize it to a JSON file in FileDumper . java to improve file URL handling and ensure proper JSON
reset profilerserver resultnotified flag after shutdown
blender loader : add feature to the loaded feature when load a blender .
updated context ID assertion from " application : " to " application " to ensure correct identification of the application context in tests
updated the expected value of aNewIsbnRandomizer from " 9781797745008 " to " 978179784
updated notification sound setting to use a dynamic URI format to enhance flexibility by allowing customizable notification ringtone settings
added a method ` reportLoopCount ` to report loop count in the ` RootNode ` class to enhance the functionality of loop count reporting in
added a condition to finalize the version for a specific repository type in ` FinalizeUpgradeAction . java ` and modified ` ClusterImpl . java `
api : fix npe in listportableregionbyregionid api call ( # 5696 )
removed redundant call to streamManager . open in ItemOrientedStep . java to streamline code by eliminating redundancy
added a new file ` CountedLoopProblem . java ` that generates a series of integers and validates the output to ensure that the generated loop
[ gr - 16400 ] fix compilertovm . executecompiledmethod ( ) and compilertovmimpl . executecompiledmethodargs (
[ gr - 36461 ] graal hotspot vmtestbase / gc / state / graalhotspotvmconfig . java
replaced ` TransformerSupplier ` with ` ValueTransformerWithKeySupplier ` in ` KafkaStreamsTracing ` and ` ITKafkaStreamsTracing `
show number of point in constant sum feedback question ( # 3649 )
replaced the call to applyToActivitiesIfAvailable ( this ) with a call to applyToActivitiesIfAvailable ( this ) in BaseApplication . java
added thread dump functionality and improved thread management in CloseRace . java to enhance error handling and ensure proper thread termination during shutdown
change return value from ' val ' to ' val . intValue ( ) ' in IntPointField . java and add assertions in TestPointFields
updated arcSize variable to arcSizefraction and adjusted related calculations to improve accuracy in rendering calculations by incorporating a fraction of the width
reduced the width of veryHighWidth from 768 to 640 in AddAndScaleMultiImage . java and updated its value in Image
rename ` minimizeSqlEnabled ` to ` shrinkWhitespacesInSql ` and update related methods to enhance clarity by indicating whether whitespace should be
updated waitForStateTransitionToEnd method implementations in AbstractLauncherUiTest . java and WorkProfileTest . java to improve state transition handling and ensure
added new configuration classes and updated import statements in multiple test files to enhance configuration management and improve code organization
replaced direct calls to ` raf . readLong ( ) ` with a byte array reading method using ` DataIO . getLong ( ) ` to
camel - 16400 : camel - http - allow to turn off debug log for http response code .
refactor Classpath handling in DeclarativeHintsParser to improve clarity and structure to enhance code readability and maintainability by separating
add ` ` audio ' ' and ` ` voice ' ' script scope provider ( # 1193 )
added methods to get and set layer manager in AnimComposer and modified AnimEvent to utilize these methods to improve the management of layer
added a check to return early if the queue is empty in DeferredHandler . java and removed unused methods in Workspace . java to improve performance by
added null checks for mapOp and mapWork , and replaced Exception handling with Throwable handling in TezProcessor to improve robustness by avoiding
refactor ` CylinderRegion ` to use ` Vector2D ` for center and introduce a new ` setCenter ` method to
replaced manual exception handling with JUnit ' s ExpectedException rule in TestBadUseCases . java to improve clarity and maintainability of
refactor QueryExecutorImpl to handle null subqueries and add a new test for multi - execution in StatementTest to improve query execution handling and
disable customization of security environment by default
added " rctag = android% 20edit " to the GET endpoint in ReviewInterface . java to enhance API functionality by allowing an additional
updated test cases in Test . java to improve test coverage and reliability
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity by using a more descriptive variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
add a call to writeSectionDefinition ( ) in the RtfDocumentHeader class to ensure proper handling of section definitions in the document header
added location distance calculations and a warning log for too large jump detection in GpsLoggingService . java to improve user experience by preventing unnecessary
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 7 )
refactor InsightFilter to use WeakReference for rootNameFn and sourceFilterFnHash instead of boolean flags to improve memory management and prevent
replaced binary search with direct addition of apps to the data and added lists to simplify the code and improve readability by eliminating unnecessary
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` in ` SettingsActivity ` and removed the ` ThemedPreferenceActivity
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
removed redundant assert statement in FST . java to improve code readability and maintain consistency
added an assertion to check if the security policy file exists and is a file to ensure that the security policy is valid and provide clearer error
camel - 14263 : camel - olingo2 - allow to configure olingo2 component . thanks to martin
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for operations to complete before proceed
removed the exception from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging by eliminating unnecessary exception details
add an option to publish an image via http to xmpp
camel - 16400 : camel - netty : fix the npe issue of camel - netty
balancereplaydatasource . spliturl ( ) throw illegalargumentexception if jdbc : clickhouse : / / localhost : 80
added a system property to disable JSR199 compilation in FragmentActivator to improve performance by avoiding unnecessary compiler settings
add support for null string handling in CSVRecordReader and its configuration to enable proper formatting of null values in CSV records
added LiquibaseService annotation to multiple connection classes to enable the use of Liquibase services in the application
updated references from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java ` to ensure compatibility with Java source
add ` ` / command ' ' and ` ` / state ' ' topic for command and state trigger
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to align exception
updated SolrXmlConfig to replace " zkCredientialsProvider " with " zkCredentialsProvider " and added deprecation comments to indicate that the
fixed mana tablet not be able to damage in creative . close # 332
added a method to set the identifier collection in the P25P2DecoderState class to ensure the current call event has a valid identifier collection
removed imports of DictionaryCompoundWordTokenFilter and HyphenationCompoundWordTokenFilter from TestRandomChains . java to streamline code by elim
updated thread pool executor name format in ScryptUtil . java to improve readability and maintain consistency in naming conventions
refactor GeneratedCode class for improved readability to enhance maintainability and facilitate future updates
updated assertion to check for a non - null definition parameter to improve error handling by providing clearer context about the assertion failure
set the visibility of the shareWithMeIcon view to GONE in LocalFileListAdapter . java to improve user interface by hiding the share
updated the link to Bootstrap CSS from " http " to " https " in multiple files to enhance security by using a secure link to the Bootstrap
updated RouterFilter and RouterServerListFilter to enforce non - null headers and changed header loading method to check for empty instead of null to improve
enhanced assertion message in TestIndexWriterMergePolicy . java to include additional context to improve debugging information for assertion failures
added @ Deprecated annotation to multiple Java classes to indicate that these classes are outdated and should not be used in new implementations
added null check for context before context awareness in CrawlerSessionManagerValve and updated test cases in TestCrawlerSessionManagerValve to ensure
modified the ` getJspApplicationContext ` method to use a privileged action if security is enabled to enhance security by ensuring the method operates on the
added minL and maxL variables and updated length calculation logic in RocketComponentConfig . java to improve accuracy in calculating component length based on
updated nonce service binding to include singleton scope to enhance security by restricting the NonceService to a single scope
added functionality to update child links in the FileWrapper class to enhance security by ensuring child links are properly updated
refactor method signatures and parameters in SpringCloudPlugin . java for improved readability and consistency to enhance code clarity and maintainability by
[ hotfix ] [ test ] increase delay from 100 to 500 in test
add an option to disable the override of shift - only code
[ hotfix ] [ runtime ] improve heartbeat monitor logic to check if a node be the leader of a cluster coordinator .
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated filter condition to check if the identity is a reference instead of a name to improve clarity and accuracy in identifying identity references
updated method signatures to replace ` AbstractCommandOptions ` with ` boolean ` for no - caching behavior to simplify parameter handling for better readability and
try to fix intermittent test failure on slow ci server
updated method call argument handling in PatchExtensionMethod . java to improve clarity and maintain consistency in argument management
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for managing loaded native libraries
http : / / issues . apache . org / activemq / browse / amq - 2103 - add support for ' apply -
removed unused ` x509PublishUrl ` and ` x509ViewName ` variables from ` ClientKeyPublisherMapping ` and ` JwkViewResolver
modified the way SolrIndexReader is assigned based on the number of readers to ensure the correct reader is used when there is only one reader
replaced the custom ValueSourceParser with a custom Double2Parser for maximum and minimum values to enhance the functionality of the ValueSourceParser by
simplified return statement in the Container class to improve code readability and maintainability
removed unused variables and modified the next ( ) method signature in TokenSources . java to improve code clarity and remove unnecessary exception handling
cloudstack - 7892 : add uuid to the list of vlan / user
updated ` CasMultifactorAuthenticationWebflowConfiguration ` and ` CasWebflowContextConfiguration ` to use ` ObjectProvider < FlowBuilderServices
updated connection parameters and refactored SQL execution methods in WriteJdbcPTest . java to enhance connection management and improve code clarity
removed the conditional check for " editor . laf " before setting the look - and - feel in DefaultPlatform . java to simplify the
updated references to ` getStateEntity ( ) ` and ` getDesiredStateEntity ( ) ` to ` stateEntity ` and ` desiredState
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability
added a condition to check if the running state is not running in RootFolder . java and updated the status line assignment in NavigationShareTab .
cpucallgraphbuilder : use current threadid instead of a hard - coded threadid
ggb - 220 : use default toolbar for perspective , not all tool .
added ` NetworkAddressChangeListener ` to the ` HomekitImpl ` class and updated warning messages for clarity to enhance network address management and improve
replaced the lease retrieval method with a lease renewal time retrieval method in TestHDFSEventSinkOnMiniCluster . java to
replaced ` Optional . < SourcePath > ` with ` Optional . absent ( ) ` for ` arg . prefixHeader ` and ` arg
added null check for exception message before handling fatal IO to prevent potential NullPointerException when the message is null
changed the ` nextID ` variable to be ` volatile ` and modified the ` getSize ` method to use ` nextID ` instead of `
resolve http : / / issues . apache . org / activemq / browse / amq - 2175 - fix intermitt
refactor ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , ` SourcePathArg ` , and `
replaced StringBuffer usage with direct string concatenation in IllegalArgumentException to simplify code and improve readability
added support for custom index field names in ` OrdinalMappingAtomicReader ` and updated test cases in ` TestOrdinalMappingAtomicReader `
updated the ` toEpochMilli ` method to handle negative seconds and nanoseconds correctly to ensure accurate calculation of milliseconds for negative and positive time values
changed the method call to ` getAttribute ` from ` getBufferType ( ) ` to ` getBufferType ( ) . name ( ) ` in both
added functionality to manage and check if scripts are blocked in CopyPaste . java to ensure that the application does not block updates during paste operations
8274276 : c2 : assert ( int < = 0 | | int > > = - 2147483648 < = int
[ audio ] fix potential deadlock in audio recorder / channel state management .
refactored code to avoid use of for - each loop
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor console handling in Main . java and add version command functionality in VersionCommand . java to improve code organization and maintainability by encapsulating
replaced the ` validateToken ` method with a new ` validateHash ` method in ` InputStreamBinder ` and removed it from ` Nextcloud
added EOFException handling in Http11InputBuffer . java to improve error management for eof scenarios
added unit test for defaultgroupprovider . deletemember and . deletememberfromnonexistsexception .
( chore ) camel - ftp : remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to remove unused code to streamline the codebase
updated references from ` ImmutableSortedSet < BuildRule > ` to ` ImmutableSortedSet < SourcePath > ` across multiple Java library classes to
added new files ConstructorArgsDemo . java and FinalDemo . java , and renamed StupidFinal . java to FinalDemo . java ,
make directtemplatefeaturecollectionfactory thread - safe
updated the assertion condition in WriteResponseHandler . java to include a threshold of 2 * DatabaseDescriptor . getReplicationFactor to ensure that the response
added a null check for the index number in the ItemRowAdapter class to prevent potential NullPointerException when accessing item properties
rename the variable ` areAnchestors ` to ` areAncestorsShown ` and update related logic in ` MapView ` and ` Proxy
added a check to return early if the application width is less than 12 to optimize performance by avoiding unnecessary processing
updated comparison from ` = = ` to ` equals ( ) ` in ` ChangeLogParameters ` and added a new test for non - global
changed loggers from static to final in LogFactory . java to enforce immutability of loggers map
updated return statement to use getBasePlot ( false ) instead of a direct reference to the plot object to improve clarity and functionality of plot management
updated createUploadDir method to include an initialCreation parameter to control logging behavior based on whether the directory should be created or not
added a boolean parameter ` sendStatus200 ` to several classes to enable controlling status sending in HTTP communications
added a condition to check if the comment string length is greater than zero before processing a multi - line comment to ensure that comments are only processed
added imports and modified file type management logic in BuckModule . java to enhance file type management by ensuring associations are removed based on the default
consolidated multiple import statements into a wildcard import and changed return types of multiply methods from ToLong to ToInt to improve code readability
added a new constant ` RTM _ OS _ ERROR ` and modified error messages in ` TestUseRTMLockingOptionOnUnsupportedCPU
formatted code for consistency and readability in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code structure to enhance maintainability and readability of the code
added a mockitoPackageImport method to the AbstractModbusOSGiTest class to facilitate the import of ChannelTypeUID
fix arrayindexoutofboundsexception when invoke guest to host reflective call .
initialize ` systemContext ` in ` AndroidTestEnvironment ` and implement ` FontsContractReflector ` for context management to ensure proper context management
added milliseconds method to TimeGranularity and modified date handling in PinotDataSourceDimensionFilters and PinotDataSourceMaxTime to improve time granularity handling
added null check for ` _ try . getFinally ( ) ` and refactored control flow analysis logic in ` ControlFlow . java
updated array comparison logic in Assert . java and modified test cases in ArrayEqualityAssertTest . java to improve error handling and provide clearer feedback
added default case handling in WindowClickLogic . java to improve clarity and correctness of stack size calculations
corrected a syntax error in the index calculation in MeshBuilder . java to ensure proper handling of negative index values
nifi - 1396 : fix npe in process scheduler when controller service provider be not available
added support for processing Java annotation processors in KotlincToJarStepFactory and created a test for it in KotlinLibraryIntegration
updated RESCROLL _ DELAY from 750 to 150 and modified page snapping logic in PagedView to improve drag - and -
added shortcut permission checks and refresh functionality in LauncherModel and DeepShortcutManager to ensure shortcuts are refreshed correctly based on the presence of shortcut host
added case statements for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance search functionality in the console
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure proper handling of null core names
added marker selection functionality in NearbyMapFragment to manage bottom sheet visibility when the marker changes
added exception handling to print stack trace in FileSyncAdapter . java to improve error reporting for debugging purposes
refactored memory check logic in TestMemoryAwareness to use OutputAnalyzer for better error handling to improve robustness of memory management tests by
refactor the refill and feed retrieval logic in FeedQueues . java to improve readability and ensure only non - idle load feeds are processed
log warn if ` defaultdrmsessionmanager ` be use on wrong thread
updated ` AndroidBinaryDescription ` and ` AndroidBinaryBuilder ` to use ` Locale . US ` for packageType and resourceCompressionMode to ensure
updated XML _ MIME type from " text / xml " to " application / xml " across multiple files to align the file type with the application
updated variable references from ` configFile ` to ` INSTANCE . confFile ` in ` Args . java ` to ensure consistency in accessing the configuration file
updated waitUntilReadyAndTimeout from " sleep 5 ; exit 1 " to " exit 1 " to simplify test execution by eliminating unnecessary
changed IntMath to LongMath and updated condition checks in HiveExpandDistinctAggregatesRule . java to improve precision in calculations by using long instead of
added multiple checks for headless environment in mmm and ppp Toolkit . java to ensure proper handling of headless environments in the application
added a condition to check if the current recipe matches the current recipe ' s world before applying the smelt check to ensure that the smelt
add move thread count description to solver ' s default solver
fix ( fhirresourcedao ) : search with revinclude return wrong resource
added a new test file ` Issue582Test . java ` to implement a test for sorting features in a MapDB database to ensure correct
[ native ] add e2e test for decimal overflow
refactor LoadingCache class structure to improve code readability and maintainability
added a rule for " avoidNonConstructorMethodsWithClassName " in NamingRulesTest . java to enhance test coverage for non - constructor method naming
danielwagnerhall : handle stale element reference exception in expectedconditions . isselected ( )
added a method ` hasView ` to ` DatabaseSnapshotGenerator ` and modified ` ViewExistsPrecondition ` to check for existing views to improve
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added translation calculations and logging functionality for task view animations to improve animation responsiveness and facilitate debugging
changed FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a static method ` walk ` in ` TempFSTTermsReader . java ` and modified ` TempTermOutputs . java ` to improve
updated the ` create ` method signatures to include ` SolrQueryRequest ` as a parameter to enhance functionality by allowing query - based processing in the
added trigger statements for handling null values for post and announcement fields in the database to ensure proper handling of null values during database operations
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to improve clarity and maintainability of comparator management
updated expected query strings in PhoenixQueryBuilderTest . java to include double quotes around column names to ensure compatibility with SQL Server ' s
added Spark initialization call to the init method in RequesterTest . java to ensure Spark is properly initialized before proceeding
added methods to save and retrieve total storage pool , fee , limit , and used storage in DynamicPropertiesStore . java to enhance storage management capabilities
added support for streaming files from the source directory in the AssetsController and updated related tests to utilize NinjaProperties for better resource management and
updated mapMark key retrieval method to use a helper function to improve code readability and maintainability
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance the handling of default value expressions
removed ` throws IOException ` from method declarations in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to
updated file loading and logging statements to use the full path instead of the full file name to improve clarity and maintainability of the code
updated image file creation logic to use equality comparison for format and format to enhance flexibility in handling different image formats
[ somfytahoma ] use thing . getuid ( ) instead of thing . getridgeuid ( ) . getid (
disable flaky test on github
updated OpenWireConnectionTimeoutTest . java to include trust store and server keystore properties to enhance security configuration for SSL connections
updated warning logs to include stack trace and added handling for NaN values in the DynatraceExporterV2 class to improve logging clarity
added removal of session ID from sessionIdToSessionInfo to ensure proper management of session - related information
added hostname setting for empty alerts in HeartBeatHandler and improved formatting in AlertReceivedListener to ensure unique host names are used for
simplified the logic for determining if a buffer has been flushed in ChannelEndPoint . java to improve code readability and maintainability by redu
resolve split - packages : move everything from kie - api under org . kie . api and move resource directly under org . kie
added tests for seek - to - mode functionality in ShadowMediaPlayerTest . java and modified seekTo method in ShadowMediaPlayer . java to
rename ` createTask ` methods to ` createThrowingTask ` across multiple classes to clarify the purpose of the task creation process
added border settings for tabCloseButton based on AQUA LAF status to improve UI appearance for better user experience
added POST request and connection timeout settings in TSPTimeStampService . java and improved test assertions in TestSignatureInfo . java to enhance HTTP
[ drools - 1342 ] add wildcard type permission to xstreamutils for jdk 1.5 compatibility
added error logging for non - generic diamond types in mmm Attr . java and created a new DiamondRaw . java file
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in reloptutil
updated input validation logic for ID and value in Http2Settings . java to ensure values are within the valid range of 0 to prevent potential errors
deleted the file ` Issue664Test . java ` to remove obsolete test cases to streamline the codebase
added a test case to verify that disposed sessions do not operate on a disposed session even if the session is created from a pool to
added start and end methods to the jsonWriter for the root object in GeoJsonWMSBuilder . java to ensure proper handling of the JSON
updated the ` setIndex ` method to use ` intValue ( ) ` for setting the selected index to ensure proper handling of integer values for the index
added ` canCurrentlyManuallyUnstash ( ) ` method to ` TaskbarStashController ` to check for manual unstashing
camel - 15836 : camel - core - route - coverage : remove customid attribute from route report
modified the ` getEventMismatchMessage ` method to accept a boolean parameter to control the wait time for event mismatch messages to enhance flexibility by allowing
added a new file ` HeaderFixer . java ` that implements header file processing to facilitate the processing of package - specific headers
added functionality to send a loading complete broadcast if the first load is complete to enhance user experience by allowing users to easily trigger the first load action
deleted the file SuperJumperAndroid . java to remove unused components from the project
modify ` SystemTableScan . java ` to return whether the table is distributed and refactor query formatting in ` TestStarQueries . java ` to
removed keyValuesProviderAware and ObservationConventionAware interfaces from the Observation class to streamline the code by eliminating unnecessary interfaces
remove miss resource location from registry when remapping
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast integer values to long to ensure accurate calculation of integer values
added caching mechanism for date and format strings in HSSFCellStyle . java to optimize performance by reducing redundant calls to getDataFormatString
updated the query in RemoteAuthenticationEndpointTests to filter users by username to ensure only relevant users are retrieved from the server
change condition from ` def . needsInput ( ) ` to ` def . finished ( ) ` in ` DeflateCompressor . java
updated log message to include workspace and page index in Launcher . java to improve logging clarity and provide additional context for the launcher ' s
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file which contained deadlock - related tests to remove obsolete or deadlock - related functionality from the project
bugcontentprovider : do n ' t show marker that do n ' t exist anymore .
added a " Reopen in Browser " menu item and implemented server opening logic to enhance user experience by allowing users to open URLs from the browser
added a new error message for duplicate output specifications and improved exception handling in the SemanticAnalyzer class to enhance error handling and provide clearer feedback
added null predicate checks to the addEntryListener method in BasicTest . java to ensure proper handling of null entries in the entry adapter
fix arrayindexoutofboundsexception in coordinatearrays . reverse ( )
updated the method call from ` setOpen ( ! isOpen ( ) ) ` to ` setOpen ( ! isOpen ( ) ) ` to ensure
added a boolean variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to track the state of the
replaced ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to streamline
added a line to set the destination of the message in the NetworkRouteTest class to ensure the message dispatches the correct destination of the message
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE to ensure compatibility with maximum message handling limits
add miss ` @ override ` annotation to avoid compiler warning .
updated buffer addition logic in HttpClientRequestImpl . java and improved buffer handling in HttpTest . java to enhance buffer management and ensure correct padding
updated string replacement logic in GetMavenDependenciesTask . java to include " ( ? < ! solr - ) analysis - " to ensure correct
pdfbox - 2852 : remove unneeded type check , a suggest by valerybokov
removed unnecessary debug print statement from ReferenceUtil . java to streamline code by eliminating unnecessary console output
fix field visibility predicate to respect parent node
added solidityJsonRpcHttpPort and solidityNodeHttpJsonRpcEnable parameters and updated their initialization in multiple classes to allow dynamic configuration of
added a type check before removing the drop target from the drag controller to prevent potential ClassCastException when handling drop targets
refactor stub jar creation logic into a separate method to improve code readability and maintainability by reducing duplication
added new features for Setup wizard and Workflow helper in StartPageTopComponent . java and updated existing features in StartPageTopComponent . java to
added a new MeteredFlusher to the optionalTasks schedule in CassandraDaemon . java to ensure proper flushing of the metered flusher
removed unnecessary type casting for Boolean in OnlineTestCase . java to improve code readability and reduce unnecessary type casting
updated return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to improve clarity and accuracy of user graphical
refactor onIdleTimeout handling in HttpChannelState . java for improved readability and error management to enhance code clarity and ensure proper
updated CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to improve thread safety in endpoint creation
updated the table header separator pattern to support multiple columns and improved matching logic to enhance flexibility in parsing table headers and ensure correct rendering behavior
updated return value from 32.0 f to 31.5 f in Camera . java to adjust the camera precision for better visual representation
added a preference to disable starting on boot up in GpsSettingsActivity and modified return statements in Utilities and GeneralLocationListener to streamline boot
updated the client secret encoding from 128 to 512 bytes to accommodate larger client secrets for improved security
updated error message to include " enablePassingNulls ( true ) " for parameter names in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race conditions
updated the ` getInputPinotFS ` and ` getOutputPinotFS ` methods to return ` LOCAL _ PINOT _ FS ` and
added locale check and date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is consistent for non - English locales
added MetalLookAndFeel import and set it in UIManager to enhance UI appearance by integrating MetalLookAndFeel
refactor ping task management by introducing a pre - destroy method and modifying message sending logic to improve thread safety and ensure proper shutdown of the
removed the call to ` throwable . getMessage ( ) ` from ` ShenyuResultWrap . error ` to simplify the error handling by
rename variable ` module ` to ` from ` in ` ModuleTable ` , ` PackageTable ` , and ` ModulesHelperVM ` classes to
added handling for CmdLineException and improved error logging in PinotAdministrator . java to enhance error handling by logging specific command line exceptions
replaced ` super . equals ( ) ` and ` super . hashCode ( ) ` with ` isEqualTo ( ) ` and ` isEqualTo
refactor variable declarations in CustomPlaybackOverlayFragment . java and ImageButton . java for clarity and consistency to improve code readability and maintain
update zoom level minimum and maximum values for map zoom controls in BasicMapViewer . java to improve zoom functionality by allowing a longer zoom level
refactor adminUsers and adminUserGroups initialization to utilize ImpersonationUtil for process user and group management to improve code maintainability and
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in UnixFileSystemProvider and WindowsFileSystemProvider ,
added ArgumentExtractor support to DelegatedClientAuthenticationAction and updated service resolution logic to enhance service management by integrating argument extraction capabilities
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to enforce immut
fix tilesizechanger not destroy the tile cache when the size be change .
removed duplicate calls to removeAllViews ( ) in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline the code by eliminating redundancy
refactor cleanFeedsWithoutSubscriptions method to improve clarity and structure to enhance maintainability and readability of the cleanup process for feeds without
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with variable ` auth ` in ` ImmutableAssertionTests . java ` to
nifi - 1748 : fix unit test to use temporary folder instead of file system property
make conic through 5 point in conic fine - grained mode work again
reformatted EOF checks in RandomAccessReader . java for consistency to improve code readability and maintainability
added @ SuppressWarnings annotations in Fields . java and MockitoBeforeTestNGMethod . java to suppress unchecked warnings and improve code clarity
refactor CImage and CPlatformWindow classes to improve image handling and memory management to enhance code readability and maintainability by centralizing image
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to align with the
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in ` ClassParser . java ` and ` JavaClass
replaced manual null checks with ` java . util . Objects ` for better readability and consistency to enhance code maintainability and reduce potential null
rename astdisambiguationpass . resolveclassfromcanonicalname ( ) to astdisambiguationpass . resolveclassfrombinaryname ( )
added verification for additional view locations in NinjaDefaultTest to ensure proper handling of different HTML view configurations
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve clarity in naming
updated padding calculations in DetailFragment and changed list view position offsets in ListFragment to improve layout responsiveness and ensure proper positioning in the
refactor exception handling in ZkStateReader . java for improved readability and consistency to enhance code clarity and maintainability by standard
added null checks for field and field names in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure that
api : do n ' t allow static nat service in the network if there be no static nat rule
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added functionality to remove extra empty screen from the workspace to improve user experience by preventing unnecessary screen updates
added support for fixed width in BitmapFont by introducing a fixedWidth flag and modifying the xAdvances logic based on its value to improve
try to reduce the number of nested view , and remove scrollview when possible . issue # 254
added preEvent , preTransition , postTransition , and stateMachineError methods to AbstractStateMachineFactory to enhance state machine functionality by providing interceptor
updated configuration description handling in ConfigDescriptionProvider . java to improve clarity and maintainability of configuration management
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase to include Windows - specific path handling
refactor facet sorting logic to use a boolean variable for clarity to improve code readability and maintainability
refactor properties handling in CheckstyleReport . java to use a local variable for overriding properties to improve code readability and maintainability by central
added logic to stop Jetty instances and improved error message formatting in DeleteInactiveReplicaTest . java to enhance clarity of failure messages and
added a file name parameter to the newInstance method in FileActionsDialogFragment to allow users to specify the file name when creating a FileActionsDialog
updated reorder direction logic in CellLayout to include an invalid direction constant to enhance flexibility in handling different drag - and - drop modes
updated variable names from payAccountId , recAccountId , from , and to in InnerTransferRequest . java and modified API endpoint paths in AccountAPI
fix jettestsupport . assertjobrunning ( ) and writejdbcptest . testfailjob _ withnontransientexception ( ) (
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to
replaced specific imports with a wildcard import and added new visitIdentifier method implementations to streamline import statements and enhance identifier processing functionality
added a method to set the action text color to the primary dark color to improve the visual appearance of the authentication action in dark mode
added ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , ` MockManager ` , and ` MockManagerImpl ` to
rename methods from ` addTestStepsForPickleSteps ` and ` getBeforeHooks ` to ` createTestStepsForPickleSteps `
adjust javadoc for handler method validation after int - 682 change .
added a ` cancelClient ` method to ` RpcServer ` and modified ` startDriver ` to call it to handle client cancellation to ensure proper
added ` getImplicitPreCoercionValue ( ) ` methods to various parameter info classes and updated related logic in ` Skylark
initialize ` lastDisplayedUser ` with ` Optional . empty ( ) ` to ensure ` lastDisplayedUser ` is not null to prevent
added an ` findAll ` method to ` QueryDslMongoRepository ` and a corresponding test in ` AbstractPersonRepositoryIntegrationTests ` to enhance
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions when the consensus implementation is not initialized
planner - 527 : exit the warm - up loop in case of a failure
add xread ( ) and xreadgroup ( ) method to redis multistage pipeline ( # 3748 )
refactor LinkedBufferInput and StreamInput classes to remove unused variables and improve code clarity
added WebSecurity configuration to CasWebAppSecurityConfiguration and modified CasWebSecurityConfigurerAdapter to use WebSecurity instead of HttpSecurity to enhance
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to include
added methods to register and register ContentProviders in ShadowContentResolver and updated ContentProviderController to utilize it to improve content provider registration and enhance
updated the ` AttributeReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to enhance type safety by using a more specific
added configuration for connection keep - alive in SingleConnectionManager to ensure proper connection management based on connection settings
[ java ] rename flow control supplier to flow control supplier so that it can be use by the driver conductor .
ggb - 388 : fix npe for locus with no point in 2d
added exception handling for IOException in HttpServerTestBase and improved buffer flushing logic in WebSocketConnectionD13 and WebSocketMessageD13Test to enhance
added support for multiple Selenium driver types and improved screenshot handling in HttpWebClient . java to enhance compatibility with different selenium environments and enhance
replaced JUnit assertions with AssertJ assertions in multiple test files to improve code readability and leverage AssertJ ' s assertThat for
remove trufflelanguage . getcontextreference ( ) since it be deprecate .
initialize the Throwable variable to null and modify exception handling logic in StubberImpl . java , and add new test classes for handling bad exceptions to
updated condition checks in Actor . java and Group . java to throw an IllegalArgumentException for non - ascendant actors to improve error handling by providing
refactor location permission handling in LocationPickerActivity and ContributionController to utilize LocationPermissionsHelper for better location access management to enhance user experience
http : / / issues . apache . org / activemq / browse / amq - 263 - add a jmx example for
added cookie specification to the request configuration in GetHTTP . java to enable standard cookies for HTTP requests
simplified the intersection logic in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering logic to improve audio
added monitoringUrl parameter to ScrollingPanel and SystemInformationsButtonsPanel constructors to enhance monitoring capabilities by allowing users to specify monitoring URLs
added a new configuration option for service creation timeout in Kubernetes to provide a configurable timeout configuration for service creation
updated the icon setting logic in NearbyListFragment to handle different place descriptions to improve user interface clarity by providing appropriate icons based on
added a null check for the package before processing its package to avoid potential NullPointerException when the package is null
added a new file PrintInlining . java that prints " Passed " to provide a simple Java program to demonstrate the
test : add support for nest brace in javadoc tag ( # 1193 )
[ java ] remove unused field in archivetest .
updated EdgeDataTable to use getEdgesAndMetaEdges instead of getEdges to improve data organization by associating edges with meta edges
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to improve code cleanliness and reduce unnecessary dependencies
updated playback speed logging from ` % d ` to ` % f ` in ` VideoManager . java ` to provide more detailed logging for playback
do n ' t send room remove event if the cluster be not start .
changed ' minimize ' configuration from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to optimize resource allocation for better resource management
added flipY and generateMips settings for the key in TextureHelper . java to enhance texture functionality by enabling mip - based
replaced instances of ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParserDecorator ` and updated event handling to
[ j2kt ] add support for library normalization pass in j2cl transpiler .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory `
[ hotfix ] [ runtime ] fix checkstyle violation in memorymanager
added temporal annotation to ConsoleSessionVO . java to support timestamps in the ConsoleSessionVO class
added Hbs and HbsTest classes for template handling in the io . jknack . handlebars package to facilitate the
updated visibility handling for HintMessage and refactored setupMessage and setUpAvatar methods to improve code readability and maintainability by reducing
changed the iteration method from keySet ( ) to values ( ) in ImportCsv . java to ensure accurate iteration over the values of the headers map
# 1188 add test for wait until alert dialog work
added a null return check for distinct column indices in ReduceSinkDeDuplication . java to prevent unnecessary processing when distinct column indices are too
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 595 : add
chore ( deps ) : update license year for generated file ( # 4382 )
replaced " websocket - server " and " websocket - client " with " jetty - websocket - server " and " jetty - websocket
changed the return type of the attributes collection from a mutable map to an unmodifiable map to improve immutability and encapsulation of the attributes collection
do n ' t repaint the header when there ' s no code change
replaced instances of creating new instances of ` Double ` , ` Float ` , and ` Integer ` with direct return statements across multiple classes to
changed the method used to retrieve the timestamp from the result set from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` to ensure
updated the conditional check in HtmlJndiTreeReport to include " javax . naming . Context " as a valid class name to ensure proper handling
added a switch statement to handle different database names in StorageUtils . java and updated logging format in Manager . java to improve code readability and
updated edge type check from " double " to " mutual " to ensure correct handling of mutual edge types in the GEXF importer
added FLAG _ SLIPPERY constant and updated its usage in StatusBarTouchController . java to improve touch responsiveness in the
fix truffleconstantfieldprovider . getarraydimension ( ) to handle array field .
added methods to get and set the Google Drive folder path in PreferenceHelper and updated related classes to use these preferences to improve user experience by
ggb - 2271 shuffling of suggestion in av
added @ Nullable annotation to multiple assertThat methods in Truth . java to improve null safety and clarity in assertions
updated bit manipulation logic in ArrayUtil . java to use bitwise operations to improve readability and maintainability of the code
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to conditionally instrument constructors to ensure that ` ApiException ` is
added mechanism to manage waiting for anti - connection actions in StreamIn and StreamInitiateVerbHandler to improve the management of waiting for anti - connection
added methods to manage keyguard secure status in ShadowKeyguardManager and updated KeyguardManagerTest to use it to improve keyguard management functionality
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization
updated string splitting logic to replace ' > ' with ' > ' and added a conditional check for the number of ` overrideParts ` to improve
rename the test method from assertEmptyThrowsMutipleFailureExceptionForManyThrowables to assertEmptyThrowsMultipleFailureExceptionForManyThrowables to clar
modified the checkDrained ( ) method in AsyncFileImpl . java and added a new test in FileSystemTest . java to ensure that
increased LIGHTS _ NUM and LIGHT _ INTESITY , changed light shader from " light " to " vertexpath "
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple integration test classes to utilize the project
changed the type of ` featurePaths ` from ` String ` to ` PathWithLines ` in ` CucumberFeature . java ` to
refactor Gson , JsonArray , JsonObject , and JsonObject classes to improve code readability and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to address issue # 2022 . 1 related to null
added a call to close the ParcelFileDescriptor directly on the real object to ensure proper resource management and prevent potential memory leaks
added thread - local implementation for managing prefix indices in BasisLibrary to improve thread safety and maintainability of prefix index management
added debug logging for HttpConnection in TestDistributedStatsComponentCardinality . java to facilitate troubleshooting of HTTP connection
added ` throwIfImmutable ( ) ` method calls to ` IntList . java ` to ensure that modifications to ` IntList ` are not
added nullability annotations to the ` onApplicationEvent ` method and updated ` ManagedChannelBuilder ` to use ` PluginEnum ` to improve code
rename package ` org . jline . demo ` from ` org . jline . demo ` to ` org . jline . demo .
in insightinstrument , insightpercontext , insightobjecttest , insightobjecttest , insightobjecttest and insightobject
added platform - specific handling for writing XML files in GenerateManifestStep . java to ensure proper formatting of output files on Windows to improve compatibility and
fix for sf bug # 3531161 : redundant null check of nonnull value
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry . java and improved null checks in ThingResource . java to enhance null safety
throw cancellationexception instead of throwable in masterjobcontext . getcancellation ( )
pdfbox - 4892 : init stream if cropbox be null
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ` ENABLE _ ALL _ APPS _ IN _ TASKBAR ` in ` FeatureFlags . java ` to provide
replaced direct initialization of FragmentActivity with Robolectric ' s buildActivity method to improve performance by utilizing Robolectric '
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and added a new method ` getDecimalCoords ` to improve clarity
rename ABCase classes to TestABCase across multiple files to improve clarity and consistency in naming conventions
renamed the parameter ` num ` to ` value ` in the ` saveEnergyPriceHistoryDone ` method and added a null check for
refactor the handling of rocket changes in OpenRocketViewer to ensure sims are updated before setting the handler to improve clarity and
add a new file ChangeDependencyGroupIdAndArtifactId . java to implement changes for Maven dependency groupId and artifactId to enhance the management of Maven dependencies
refactor path handling in IndexingJob and add validation in SegmentChecker to improve code clarity and ensure only valid segment paths are processed
updated comparison operator from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to
refactor PreprocessorDelegate to use Supplier for managing replacement paths and source path maps to improve code readability and reduce duplication in path handling logic
rename JsonExamples class to Examples class to improve clarity and consistency in naming conventions
added debug logging statements for input and output streams in ViewExtractor . java to improve traceability and facilitate troubleshooting
refactor FindsByLinkText class for improved readability to enhance maintainability and facilitate easier debugging
added a new file ` Main . java ` containing a class ` Main ` with a main method to demonstrate Java oop entry
fix incorrect xcap key for xcap / xcap / xcap _ usage _ sip
removed redundant continue statements in NativeScanner . java to improve code readability and maintainability
changed package and import statements from ` net . pms . test ` to ` net . pms . configuration ` in ` RendererConfigurationTest
replaced ImmutableSet . Builder with Supplier for managing queried dependencies and exported dependencies to improve performance and reduce memory usage during dependency resolution
updated method call from ` stream ( ) . count ( ) ` to ` size ( ) ` in ` DistBuildArtifactCacheImpl . java
added content encoding handling in ExtractingDocumentLoader to ensure proper content encoding is used for document processing
updated SQL statements to use parameterized statements instead of string concatenation to improve query performance and reduce potential SQL injection vulnerabilities
fix thread crash when clicking in a non interactive inventory slot ( - 1 )
( chore ) camel - maven : add option to ignore remote repository from transitive dependency
removed the redundant @ Inject annotation from ContactsPreferenceActivity . java to streamline the dependency injection process for background job management
updated ColorsActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android versions
added null check before closing selection in NIOTransport . java to prevent potential NullPointerException when selection is not initialized
added a condition to break the loop if the matcher ' s start and end are the same and the current index equals the string length to ensure
updated the @ IntegrationTest annotation to include a specific port configuration to ensure the integration test runs with a specific port configuration
added a new UDF named " reverse " to the FunctionRegistry and implemented it in the UDFReverse class to enable the reverse operation in the Hive
replaced occurrences of ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` across multiple files to ensure consistency in context path retrieval across
refactor Tracer class for improved performance to enhance efficiency of tracing operations
[ hotfix ] disable flaky rocksdb test in rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java to enhance code readability and maintainability
added synchronization to the clear method in StarTreeRecordStoreCircularBufferImpl and implemented a corresponding test in TestStarTreeRecordStoreCircularBuffer
updated forecastMinutes , forecastHours , and forecastDays values in OpenWeatherMapOneCallHandler . java to increase the granularity of the forecast
added timeouts to multiple test cases and updated fetch time handling in AbstractPageOperationTemplateTest to improve test reliability and clarity in fetching timeout
updated RemoteTargetGluer and FloatingHeaderView classes to improve handling of split task IDs and add suggestion mode functionality to enhance user experience by
updated CucumberPropertiesParser to use ` splitAndThenFlatMap ` and changed return type of ` parseRerunFile ` to `
add livingwood and quartz chisel to botania creative tab . close # 232
updated assertions in TestRadioButtons to expect a size of 2 instead of a fixed value to ensure that the test accurately reflects the expected
added support for file size options in RCFileCat . java and introduced a method to get the number of rows in RCFile . java to
refactor multiple Java classes to improve code structure and organization to enhance maintainability and readability of the codebase
added multiple checks for NND arrays in JnaUtils . java to improve error handling and provide clearer error messages when an ndarray is already
[ hotfix ] fix checkstyle violation in blobserver
fixed bug 1188372 - false positive for unused private method
updated variable names from lexicalScope to lexScope for consistency to improve code readability and maintainability
added a test for the SFTP auto - startup configuration in InboundChannelAdapterParserTests to ensure that the SFTP Autostartup
added methods to retrieve the level , root , and itemBoundables in Node , Quadtree , and STRtree classes , and modified STRtree
modified version parsing logic to differentiate between minor and minor versions to ensure compatibility with different version formats
add a check for non - empty tags before updating them in the ActiveItem to ensure that tags are only persisted if they are not empty ,
added a new method ` parseDateTimeStringToEpochMillis ` in ` DateTimePatternHandler ` and a new ` fromDateTime ` method in ` DateTime
refactor disassemble method to use a dedicated method for caching values to improve code readability and maintainability by encapsulating disassembling
refactor Log4j2ConfiguratorServlet for improved logging functionality to enhance logging capabilities and maintainability
replaced initialization of HiveException and AuthorizationException with direct return statements to simplify code and improve readability by eliminating unnecessary object creation
updated the way the ` cppCommandPrefix ` is joined in ` CGoCompileStep . java ` and added a new test for C
fix ( kubernetes - client ) : add @ buildable annotation to allow custom resource to be buildable
removed the @ Override annotation from the Only class to streamline the code by eliminating unnecessary overrides
added a timeout constant for HTTP connections in three hours to improve connection stability by allowing longer timeout duration
added new pipeline names to the PerBuildStateFactoryWithConfigurableAttributes and updated the event scope in RawTargetNodeToTargetNodeParsePipeline to
add ` ` enable all but trace ' ' to the list of constraint mapping for selenium server
removed the @ Singleton annotation from the ApplicationController class to simplify the configuration and improve code readability
added handling for OwnCloudAccount to determine the username based on the display name to improve user experience by ensuring a valid username is used for
added BatchStatus import and implemented a test for resuming a paused job instance in SimpleJobLauncherTests to ensure proper job execution behavior when paused
added a null check for cacheConfig in HttpSyncDataService . java and refactored data refresh logic in DataRefreshFactory . java to
[ grid ] make dockersession public and add call to executewebdrivercommand ( ) in localnode
fix : use ` ` java . lang ' ' instead of ` ` java . lang ' ' in compilation unit context
pdfbox - 4892 : use nonsequentialparser instead of pdfparser , a suggest by valerybokov
reformatted the initialization of ` DistributedRowMatrix ` and ` args ` in ` TestDistributedLanczosSolverCLI . java `
refactor HttpServerTestBase class for improved readability to enhance maintainability and facilitate future development
refactor test cases in PortletApplicationMapTest to improve clarity and correctness of key retrieval logic to enhance test reliability and ensure correct
added tests for the ` @ DynamoDbIgnoreNulls ` annotation and implemented inner bean lists in ` NestedBeanIgnoreNulls ` to ensure that
add rautoconfigurationcustomizer interface to allow customization of spring . redisson . spring . starter . spring . spring .
fix bug in indicatortouble ( ) ( # 1193 )
added execInContainerWithUser method to ExecState and modified ExecInContainerPattern to support user - specific commands to enhance container execution flexibility
refactor WebSocket listener checks to use ` interestedInByteMessages ` and ` interestedInTextMessages ` to improve clarity and maintainability of
add unit tests for attribute conjunctions and negated attributes in SemgrexTest . java to ensure correctness and correctness of semantic graph
added a broadcast intent to clear pull unreads in HomeFragment to enhance user experience by allowing immediate pull unloading
removed conditional checks for pre - gingerbread and over - gingerbread in TouchImageView . java to simplify the code for
added flush ( ) method to the defaultprofilevalidationsupport bean so that we do n ' t leak data
( chore ) camel - core : do not start veto if start fails
added FloatingActionButton functionality to manage the visibility and visibility of the FAB menu in ShareActivity to enhance user experience by allowing users to
added support for inline date formatting in ToDateTokenizer and updated related tests to enhance date parsing functionality and improve test coverage
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading
updated error messages in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java to replace " tecken " with "
added a condition to check if the server is checked before binding to the OperationsServiceConnection to ensure that operations service is only bound when the server
updated return statements to use getBeginLine ( ) and getEndLine ( ) instead of getBeginColumn ( ) and getEndColumn ( ) to ensure accurate
added waitFor ( ) method to ManagedThread and updated processor and errorProcessor handling in CxxPreprocessAndCompileStep . java to ensure proper
added a new property ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and modified ` CoreAuthenticationUtils ` and ` CasPersonDirectory
fix max - size - per - node for map - store eviction
added support for enabling SSL protocols in the Netty web server to enhance security by allowing dynamic configuration of SSL protocols
replaced AtomicBoolean with AtomicReference and updated related logic in SetOnce . java to improve thread safety and maintainability of the code
updated the return statement in QueryDslMongoRepository to handle null properties and added a test case in SpringDataMongodbSerializerUnitTests to
updated assertions in RoundRectBorderTest to check for equality and equality with self to ensure correct behavior of rounding rect borders and improve test clarity
added a check for empty GenesisConfig and improved error handling in Cluster . java , modified BftAcceptanceTestParameterization . java
simonstewart : remove test that run multiple web driver in parallel
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' array
changed the conditional check from ' windows ' to ' ! windows ' in ProcessInformationsPanel . java to ensure correct handling of non - Windows
added empty ( ) method and refactored maxN , greatest , and least methods in MoreCollectors . java to improve code read
added null checks and improved WebSocket client extension handling in Bitmex streaming services to enhance stability and prevent potential NullPointerExceptions during market data
added validation for latitude and longitude in GeoPointField to ensure only valid latitude and longitude are used to improve error handling for invalid coordinates
refactor methods in OozieProxyImpersonator and WorkflowFilesService to improve clarity and consistency to enhance code readability and maintain
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
updated the ` getTableDocument ` method to accept a boolean parameter for managing dependent tables to enhance flexibility in handling table document retrieval based on whether
added logic to limit the number of consecutive uploads without coordinates in UploadActivity to improve user experience by notifying users when there are no coordinates to
added caching functionality for profile data retrieval in ProfileResources . java to improve performance by reducing redundant calls to query profile data
refactor JpaMetamodelEntityInformation to improve identifier derivation handling and property value extraction to enhance clarity and maintainability of property value
phoenix - 1343 add index and view timestamp check during upgrade to ensure that last _ modified _ timestamp ( ) reflects
add an option to disable jersey customization of exceptionmapper registration
added a boolean parameter to the method call in EntryEditor . java to control the behavior of the storeFieldAction functionality
updated nativeCreateNSWindow method to include an owner pointer parameter to enhance functionality by associating native window pointers with the owner ' s NS window
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME in FileContentProvider . java to ensure consistency in table name
added a new " STOCK " type to the Tile class and updated event firing logic to include it to enhance the gameplay experience by
fixed - rbucket . set ( ) and rmap . read ( ) method do n ' t work properly if codec be specify . #
fix findbugs issue with complex generic signature and generic container .
refactor LauncherBackAnimationController to utilize BackProgressAnimator for improved back animation handling to enhance user experience by managing progress animations during
changed the ` _ initialPageNo ` variable from ` final ` to ` int ` and added logic to adjust ` _ contentLimits ` to
fix crc16 calculation and increase total operation count
added comment parsing functionality in FormattedSqlChangeLogParser to support comments in change logs
replaced the instantiation of ` JarArchiver ` with a direct reference to ` jarArchiver ` in ` MavenArchiver . java `
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing more specific
simplified conditional checks in TSServiceImpl . java and added a multiAggregationTest method in DaemonTest . java to improve code readability
added support for reading pixel data from a ByteBuffer in GwtGL20 . java to ensure compatibility with GWT backend and improve error handling for unsupported
updated method names in OutputMemoryTest , PrintR , and VarDump classes , and added a new test for debug information in OutputMemoryTest
added error handling for cases where ByteBuddy could not instrument all classes within the mock ' s type hierarchy to improve error reporting and provide clear
[ gr - 29013 ] print class initialization trace even when an error be n ' t encounter .
removed the query level timeout parameter from the method signature in BaseBrokerRequestHandler . java to simplify the method signature for better readability and maintainability
refactor ` TopicRouteService ` to use ` Caffeine ` instead of ` CacheBuilder ` to improve cache management and enhance error
mbtilesdatastore : disable read - only connection pooling
updated regex pattern for invalid source and target releases in FindBuildToolFailures . java and added error message in FailureLogAnalyzerTest . java to
updated URI construction and added location check in DetailFragment . java to ensure proper location access and improve user experience when location is unavailable
added a null check for inheritedParameterContexts in StandardParameterContextDAO to avoid potential NullPointerException when accessing inheritedParameterContexts
refactor ClassLoader methods for improved clarity to enhance maintainability and readability of the code
added functionality to set and retrieve origin response headers in ProxyRequestHelper to ensure proper handling of origin response headers for improved request processing
added a new ProfileSettingDrawerItem instance to the GpsMainActivity to enhance the functionality of the profile setting drawer functionality
add a new parameter ` ` org . apache . jasper . xml _ validation ' ' to enable xml validation in the servlet context .
danielwagnerhall : fix the firefox driver so that it work as expect .
added maxRows handling and validation in IoTDBStatement . java to ensure fetch size does not exceed the maximum allowed limit
refactor ` isCountOptimizable ` to ` allActionsAreOptimizableFilters ` for improved clarity to enhance code readability and
added node and mouse event handlers for node and mouse clicks in StandardVizEventManager to enhance user interaction by enabling node and mouse interaction
refactor memory management in ManyToOneRingBuffer by introducing a zeroBuffer method to improve code readability and maintainability by encapsulating memory
add getter / setter for xorgroup in terminalnode .
removed getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource . java to streamline the code by elim
refactor SourcePathResolver to use a unified method for obtaining relative paths to improve code readability and maintainability by consolidating path resolution
fix ( dstu2 ) : correctly encode and parse dstu2 identifier
changed the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method to static and modified its implementation to check for encoded URL parts to enhance
rename test suite configuration to test suite execution for clarity and consistency in naming conventions
refactor CxxPlatform retrieval logic in HaskellBinaryDescription . java to improve code readability and maintainability by encapsulating platform retrieval
added imports for Apache Lucene ' s IndexReader , Similarity , and Field classes in multiple Java files to enhance documentation clarity by including
updated method names and added null checks in ConcurrentLinkedStack to improve clarity and ensure proper handling of null values in stack operations
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before initializing mDirs to prevent potential NullPointerException when mDirectories is null
updated condition to check if overview state is not enabled and first layout is not active to improve gesture handling logic for better user experience
added multiple package - info . java files for various Apache Lucene packages to provide package - level documentation for better organization and clarity in the
added a translation key for the visibleAutoLeveler text in the AutoLevelerTopComponent to improve user experience by providing a clearer and
added optimization callback calls in DirectUpdateHandler and DirectUpdateHandler2 , and implemented event listener management in UpdateHandler to enable post - optimize functionality
updated decompressor and compressor initialization to use a boolean parameter and explicitly set a dummy byte to zero to improve flexibility in compression handling by allowing
added a check for user data in Shaderc . java to ensure data integrity during shaders
added a condition to check if the meta store is local in the retry limit check to ensure retries are only attempted when the local meta store is
updated exception handling logic in HeliosSoloLogService . java to exclude TimeoutException and ConnectionClosedException to improve error logging clarity and
refactor methods in Subject class to improve code readability and maintainability
use different reference type for serializer adapter in serialization service ( # 15973 )
updated color distance calculations to use absolute values and added a new test for finding similar colors in HSSFPalette to improve accuracy of color distance
chore ( regen ) : regen ( regen ) : regen ( regen ) : regen ( regen )
danielwagnerhall : add unit test for find element by numeric id in xpath library
added an ` flags ` parameter to the ` registerReceiver ` methods across multiple classes to allow for more control over the registration of receivers based on
updated FFmpegTest to use Mockito ' s Answer implementation for loading the " ffmpeg - version " file to improve test reliability by
updated OggInputStream and OpenALMusic classes to manage a previous input stream to improve resource management and prevent potential memory leaks
replaced hardcoded failure message with a constant to improve code readability and maintainability
[ te ] fix anomaly migration when there be no anomaly
refactor toast handling in BaseActivity and DetailActivity to use a dedicated showToast method to improve code readability and maintainability by central
updated the method used in Request creation from ` method ( ) ` to ` httpMethod ( ) ` and ` requestTemplate ( ) ` to improve
added validation for LDAP names and updated referral handling in LDAPCertStore . java to improve error handling and ensure valid names are processed correctly
refactor ` retain ` logic into a separate ` retain ` method for payload and rSockets to improve code readability and maintainability by
renamed the class ` AdapterViewTest ` to ` ListViewTest ` and added a new test method ` performItemClick ` to improve
[ hotfix ] [ test ] fix checkstyle violation in checkpointfailuremanageritcase
deleted the GenericItemUIProvider . java file to remove unused components from the project
add a ` ` select object ' ' field to the ` ` sipcommselectorbox ' ' class to allow the user to select an object
added the @ Isolated annotation to the FileSystemPool class in MetaInfConfigurationTest . java to enhance the accessibility of the FileSystemPool class
added binding address to serverConnector in HttpServer . java to enhance server connection configuration for improved reliability
updated token validity settings for heart mode in DynamicClientRegistrationEndpoint . java to accommodate different grant types based on client configuration
added a new ` CloverInstrumentationFilter ` class and modified the ` Not ` condition in ` SplitLogCounters . java ` to enhance
[ miio ] add support for smartmi evaporative humidifier ( zhimi . humidifier . cb2 )
mineprocess : fix break detection with mining duration of zero
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that Ambari may not be
simplified the condition for checking missing values in the IntHashSet class to improve code readability and maintainability
added serialization support to RuleAdministrator to enable serialization of RuleAdministrator instances
refactor ` allowedOrigins ` and ` allowedTimingOrigins ` to use ` Set < String > ` instead of ` List < String
updated G3D test files to replace " g3d / cube _ anim . g3dj " with " g3d / kn
added error handling for invalid solidified position in Manager . java to improve robustness by preventing invalid solidified position values
hbase - 14819 fix npe in execresult . getregion ( ) when value be null ( hbase - 14819
added a method to check user access and modified error handling to include null response check to enhance security by preventing potential NullPointerExceptions when the response
replaced the ` writeTo ` method with ` getStubClassBytes ` in ` ClassMirror . java ` and refactored the ` Stub
added internalLinkText to the FileDetailSharingFragment to display the appropriate string resource based on whether the file is a folder or a file
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting across different locales
changed the condition from checking if the SATURDAY is equal to checking if it is not equal to the SATURDAY to ensure
updated hideInput ( ) and hideIme ( ) methods in AllAppsContainerView . java and LauncherAllAppsContainerView . java
fix test failure due to inmemoryeventstorageengine change
refactor BsdFileStore to use BsdNativeDispatcher for retrieving mount point names to improve code readability and maintainability by encapsulating
add test case for issue # 1599 method call resolution problem
added x , y , and z parameters to the " spawn " command and implemented parsing logic for command arguments to enhance command functionality by allowing optional
added MIN _ CONTENT _ DIMEN constant and refactored methods to use getContentAreaWidth ( ) instead of getDesiredWidth (
make the graph variable final in graalcompilertest . java and remove debug dump from hotspotcryptosubstitutiontest . java
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added plugin check classes to the failed checks list in UpgradeCheckRegistry . java and reformatted the upgrade table addition in UpgradeCatalog280 .
refactor Environment class to improve code readability to enhance maintainability and facilitate future updates
added LuceneTestCase import and BadApple annotation to RecoveryAfterSoftCommitTest . java to address issue SOLR - 7421 related
modified home path construction in CodenameOneImplementation . java and removed warning handling in HashtableContent . java to improve path consistency and eliminate unnecessary
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
simplified import statements and updated resource accessor initialization in LiquibaseEntityResolver . java and XMLChangeLogSAXParser . java
added Security . setProperty ( " jdk . tls . disabledAlgorithms " , " " ) to ComHostnameVerifier and JavaxHostnameVerifier
replaced ` CxxDeps . EMPTY ` with ` CxxDeps . of ( ) ` in ` AbstractCxxDeps . java `
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` , and added a new
updated the visibility modifier of the resizeThreshold variable in Int2ObjectHashMap . java to improve code clarity and maintain consistency in naming
replaced conditional check for ` mInfo . title ` with ` TextUtils . isEmpty ( mInfo . title ) ` for setting folder name hint
updated method calls to include " uaa " as a parameter in UaaResetPasswordServiceTests to enhance test flexibility by allowing specific client
changed access modifiers of two methods from public to private in ShadowSQLiteDatabase . java to encapsulate methods to limit their visibility within the class
updated string concatenation to conditionally return - 1 for closed state in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to ensure proper handling
refactor MimetypeIconUtil to improve code readability to enhance maintainability and facilitate future feature additions
corrected the spelling of " supportsViewFor " to " supportsViewsFor " across multiple view provider classes to improve code readability and
added a new test method ` negatedInstanceOf ` to ` UnnecessaryParenthesesTest ` and updated the ` unwrapParentheses ` logic
added a boolean variable ` built ` and modified the instantiation logic in ` Location . java ` to improve performance by avoiding unnecessary object creation and
replaced direct Base64 encoding with Base64Utils ' s encodeToUrlSafeString method for modulus and exponent in TokenKeyEndpoint to improve
updated imports and changed statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the annotation
added a null check for the result variable in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value
refactor the ` setUpRevampedTweet ` method to improve clarity and structure to enhance readability and maintainability of the code
added conditional logic to display the verified text view based on the user ' s theme setting to enhance user experience by allowing the verification text view to
changed the visibility of the instance variable and modified the constructor of the AbucoinsDigest class to enhance encapsulation and ensure the instance variable cannot
camel - 14263 : camel - mongodb - add autowired = true to camel - mongodb component . thanks to david
added a sourceIndex parameter to the AttributeMapping constructor and updated related classes to allow users to specify an index for attribute mapping
log corrupt column statistic when alter partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , EastAsianWidth , and TerminalKeyListener classes to improve code organization
[ geos - 7013 ] escape html for email in geoserverhomepage
fix ( api ) : enrich engine reflections with subsystem
updated feature handling in JoinModeller to use a dynamic variable for the number of features to improve clarity and maintainability of the code by
added a check to ensure the command string is not empty before processing it to avoid potential errors when processing invalid input
added conditional logging for debug and trace messages in SingleNodeKafkaResumeStrategy to improve performance by avoiding unnecessary string concatenation when logging is not
replaced direct reference to ` ACTION _ SET _ PLAYBACK _ SPEED ` with references from ` PlaybackStateCompat ` to
updated ` IgnitionConfigurationHandler ` , ` MotorMountHandler ` , ` FlightConfigurationID ` , and ` ParallelStage
tika - 1353 -- fix for tika - 1353 -- check for ascii name length and unicode char length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to address compatibility issues with JDK 1.7 and 1
refactor lock file creation into a separate method to improve code readability and maintainability
updated version check from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added multiple sync interval entries to
added a check to return null if the username equals the FEDERATION _ USER to ensure that the application does not attempt to authenticate to
truffle : do not allow parameter of type truffleobject in execute method .
replaced ` Collectors . toList ( ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest
do n ' t print an error when the filter chain be disable .
refactor Collection and Map classes for improved organization to enhance code readability and maintainability
removed unused import of Version from CreateIndexTask . java to streamline code by eliminating unnecessary dependencies
added handling for missing primary keys in the MissingPrimaryKeyChangeGenerator class to ensure correct schema and catalog / schema settings for different database types
added ` MetastoreException ` to method signatures and modified exception handling in ` MsckOperation ` , ` TestMSCKRepair
[ hotfix ] retry kafkaproducer transaction recovery if already commit
fix ( rpc ) : remove receipt handle in forwardmessagetodlqactivity ( # 5396 )
added a services list to the DockerComposeContainer class and modified the runWithCompose method to accept a list of services to enhance flexibility in
refactor code to use a new utility method for copying collections in Export . java and StructContextDecorator . java to improve code readability and
removed HTMLCleaner and SimpleHtmlSerializer imports and simplified return statement in FeedParser . java to streamline XML processing by eliminating unnecessary
removed conditional check for DISABLE _ ALL _ APPS in Launcher . java and modified cell layout retrieval in Workspace . java to streamline
change data types of energy - related variables and methods from int to double in MeterRealtimeBodyDataDTO . java to improve precision in energy
added a new file ` bug4150029 . java ` that implements a file chooser with temporary directory creation and file chooser to
added support for managing Spark configuration updates in HiveConf and SparkClient classes to improve resource management and control over Spark connections
added long press indicators to AppIcon and AppIconMenuItem classes and modified Launchable to accept a long press indicator to enhance user experience by providing
added handling for empty poly data in WKBWriter and updated test cases in WKBWriterTest to enhance functionality and ensure correct handling of empty
refactor UnflavoredBuildTarget creation to use a builder pattern for improved flexibility to enhance code readability and maintainability by
added a new file MultiplyByMaxInt . java that contains a method to multiply an integer by its maximum value to facilitate
removed the call to onActionViewCollapsed ( ) and set the drawer indicator enabled based on the current file to improve user experience by enabling
updated package and import statements in TestRAMDirectory . java to improve organization and clarity of the code structure
replaced instances of FixedBitSet with BitSet in Automaton . java and Operations . java to simplify code and improve performance by using a
drools - 3745 dmn : improve error message for no expression define on node
replaced instances of " @ ContainerFor " with " @ Repeatable " in multiple Java files to align with the new naming conventions and
updated the console message to include the duration of the file being sent to enhance clarity by indicating the duration of the file being sent
updated the way class names are retrieved and checked for package access in OpenMBeanAttributeInfoSupport . java to enhance security by ensuring proper package access
fix readresponseresolver and quorumresponseresolver to not throw exception if there be too many response .
update freeSize by subtracting roundTo16 from s to ensure accurate free size adjustment
modify touch event handling in AnyKeyboardView and AnyKeyboardViewBase to accept MotionEvent as a parameter to improve touch event management by ensuring touch
replaced instances of SslContextFactory with SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer classes to ensure compatibility with the latest Ssl
removed the privileged socket implementation from PG _ Stream . java to simplify the socket creation process by eliminating unnecessary security checks
refactor InputTest class to improve code readability to enhance maintainability and facilitate easier debugging
modified finishRecentsAnimationOnTasksAppeared and AbsSwipeUpHandler to accept a Runnable parameter and added pause blur pause functionality to
added null check for curLatLng before removing the current location marker to prevent potential NullPointerException when curLatLng is null
updated the ` removeSecret ` method to retrieve the client ID from ` clientDetailsService ` instead of directly using the ` client ` object to
updated SQL query formatting in SqlSourceBuilderTest . java to improve readability and maintainability of test cases
resolve http : / / issues . apache . org / activemq / browse / amq - 2175 - wait for thread to
added unit tests for handling unknown key exceptions in SlidingGanttCategoryDataset to ensure robustness of the SlidingGanttCategory
updated filterConditions to return an empty list if conditionDataList is null and added return statements in ZookeeperSyncDataService to improve null safety and
add clonefields ( cloner ) to lightcontrol so that it can be override by custom cloning field
updated conditional logic for hiding stack traces and improved string concatenation in StdErrLog . java to enhance code readability and maintainability while
added debug logging and improved context handling in HttpSessionEventPublisher to enhance debugging capabilities and ensure proper context retrieval
added a semantic check for the CREATE CQ statement from v0.14 to ensure compliance with the semantic of the CREATE CQ statement
[ hotfix ] fix typo in flinkIoTDBSink . java
simplify custom simplification when a custom simplification be enable .
updated the method call to include the context parameter in the fileIcon setting to ensure the correct context is used for displaying file type icons
updated the method to read the schema name from ` schema . getName ( ) ` instead of ` readIdentifierWithSchema ( ) ` and added
add support for timestamp field in bigqueryio ( # 11977 )
added implementation of ` findViewWithTag ` in ` ShadowView ` and ` ShadowViewGroup ` , along with corresponding tests in ` ViewGroupTest
updated for - each loop to use generics for enumeration types to improve type safety and eliminate unchecked cast warnings
updated import statements in IndexTool and IndexTool classes to improve code organization and maintainability
added JSON _ VALUE and JSON _ CREATOR constants and modified value retrieval logic in JavaUtil to enhance enum value handling and improve annotation processing logic
svm : fix resource feature when classpath be a jar
updated CUDA _ R _ 32F , CUDA _ C _ 32I , and CUDA _ C _ 32U constants in c
updated the ResourceLoader class to include file filtering for layout directories to enhance flexibility in resource loading by allowing multiple layout directories
fix redstone torch not be attachable when use shaders .
added support for VARBINARY data type in RelToStageConverter to enhance data processing capabilities for VARBINARY data types
added import statement for DateHelper in NoteAdapter . java to utilize date utility functionality for improved date handling
updated backup handling logic in the Backup . java file to improve error messaging and provide clearer feedback on backup load failures
mow - 129 fix position of simple panel in applet
removed the creation of a temporary file and simplified the file creation process in ShadowParcelFileDescriptor . java to simplify the file creation process and
int - 113 , int - 113 , int - 113 , int - 113 , int - 113 , int - 1
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to improve clarity in
canonicalization of ` ( x ^ y ) = = ( x ^ y ) ` and ` ( x ^ y ) = = ( x
added a constant STRING _ ARRAY to the TypeFactory class to provide a way to retrieve the type of a String array from the type system
refactor IME hiding functionality in AllAppsContainerView and LauncherAllAppsContainerView to improve code readability and maintainability by
add a patch to force bit density to fix network issue , and resize below if necessary
updated assertion messages in TimelineMetricCacheSizingTest and TimelineMetricCacheTest for clarity and consistency to improve readability of assertion
add gl _ max _ texture _ size to the minecraft ' s snooper to optimize texture size
[ java ] move trystoplogrecording ( ) out of the try / catch block .
added a condition to reset startPosn when the transformation is in progress to ensure accurate positioning during transformation operations
add querycontext # isskiptree ( ) and # isskiptreedisable ( ) to disable star tree optimization
added a lockNearbyView variable and modified refreshView and setupPlaceList methods to control the refresh behavior based on whether nearby places need
add maptransformer . of ( map ) , map . inverse ( map ) , and map . bimap ( bimap ) . get (
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for loading launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance functionality by allowing optional launcher widget span information
updated ` StageSelector ` and ` StageAction ` classes to implement ` StateChangeListener ` instead of ` ChangeListener ` to enhance event handling capabilities
added methods for setting and resetting calling UID and PID in ShadowBinder to enable proper management of calling process ID and PID in the Robolect
refactor ExpectationFailure class to use a private constructor and implement equals and hashCode methods to enhance object - safe comparison and hashing functionality
removed warning log for no support for deserializing messages in BitcoinSerializer . java to improve logging clarity and reduce unnecessary warnings
replaced conditional calculations for width and height in ImageReplacedElement . java to ensure proper scaling of image dimensions when they are - 1
added support for escaped character sequences in Markdown rendering to ensure proper formatting of special characters in markdown output
refactor password handling in SharePasswordDialogFragment by introducing a dedicated method for sharing files to improve code readability and maintainability by encaps
refactor mapping methods to use a dedicated MappingMethods class instead of static final methods to improve code readability and maintainability by centralizing method
changed access modifiers of methods and variables from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test .
added new options for slider AM keytab configuration in LlapOptionsProcessor . java to enhance usability by allowing users to specify slider AM key
modified the tearOutGraphViewContainer method to accept a JFrame parameter and updated animation control logic to enhance the functionality of the graph view
added synchronization and improved shortcut management in LauncherModel . java to ensure proper loading and shortcut management during workspace loading and loading
updated NodeManageMemoryMergeOperator , NodePathsConvertOperator , NodePathsCountOperator , and NodeManageMemoryMergeOperator to use a final Set
renamed the ` ValidationReport ` class to ` JsonValidationReport ` and modified the ` add ` method in ` IssueInterface ` to enhance
added a method ` safeProviderName ` to safely retrieve the cipher provider name to improve error handling and provide clearer debugging information when the cipher provider
replaced instances of ` getDynamicConfiguration ( ) ` with ` getFlinkConfiguration ( ) ` across multiple files to align with the new configuration
changed log level from WARNING to OFF in CCJSqlParserUtil . java to reduce logging verbosity for better debugging
remove unnecessary line breaks in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to these constants from outside the class
removed the @ Ignore annotation from CovariantOverrideTest . java to indicate that the test does not implement it covariant override
refactor ` curly ` and ` Curly ` methods to use ` Qtype ` directly instead of individual parameters to improve code readability and
camel - 15836 : camel - core - reloadstrategy should load all route from the same resource , not just from the camel context .
added space minimum and maximum settings to the X - axis of the scatter chart to improve chart readability by providing consistent spacing around axis labels
add a space between the " as INTERVAL " and " as INTERVAL " in ExpressionStringBuilder . java to ensure proper formatting of INTERVAL
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` State
added a check for the presence of the " UTF8 " key in the properties file to ensure that a valid UTF8 key is present in
updated system output handling in TestReproduceMessage . java and modified test annotations in LuceneTestCase . java to improve error reporting and
added logging for long - press events on AllApps items in StatsLogManager and ItemLongClickListener to facilitate tracking and tracking of
added a null check for the log variable in StoreWAL . java and created a new test class Issue112Test . java to ensure proper
added a condition to show sector land info only if the sector preset is not null to enhance the visibility of sector land information when the sector land
updated generic type parameters in ` getTypeAt ` and ` getTypeAt ` methods across multiple classes to enhance type safety and eliminate unchecked warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
updated the ` buildNearbyRandom ` method to accept a boolean parameter and changed the return value of ` betaDistributionNearbyRandom ` to
remove temporary cache removal from minecraft .
update visibility settings for SQL view container and WMS layer import container in NewLayerPage . java to improve UI responsiveness by disabling
initialize the Availability _ availability variable to a default value of UNAVAILABLE to ensure that the variable defaults to unavailable when the availability state is unavailable
updated PbftDataSyncHandler and related classes to use BlockCapsule directly instead of a long block number to improve code clarity and
chore : migrate phishingprotectionservice v1beta1 to grpc _ service _ config ( # 4382 )
changed the ` _ freeSpaceReclaimDisabled ` variable to ` _ freeSpaceReclaimQ ` and modified the ` freeSpaceReclaim
changed KDCOptions constants from public to private static final and updated their usage in KdcOptions . java to improve visibility and consistency of K
refactor JsonWriter initialization and initialization in Json . java to improve code clarity and ensure proper handling of the writer instance
updated variable names for consistency and clarity in the ProfilePager class to improve code readability and maintain consistency in naming conventions
rename paintBackground method to paintComponentBackground in Slider . java to improve clarity and consistency in naming conventions
added a method ` valueFromClassConstant ` to retrieve the value of a constant from its class name to enhance configuration flexibility by allowing dynamic
added error logging for KafkaService initialization in KafkaService . java to improve debugging and traceability of service initialization failures
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE from a Set to an ImmutableSet to include additional resource types for better resource management
change ' channel ' property name to ' channel ' and add ' auto - createChannels ' option to message bus .
added functionality to retrieve and index keywords from meta tags in HTMLDocument . java and created a corresponding test in TestDemo . java to enhance document
updated the SDK version check from S to R to ensure compatibility with newer Android versions
modified the initialization of the _ addresses variable in MemcachedSessionDataMapFactory . java to include a conditional check to ensure that the addresses list is only
updated the instantiation of ` CorrespondenceSubclassToFactoryCall ` to use the class reference instead of a new instance to improve clarity
refactor Builder class to improve code structure to enhance maintainability and readability of the builder implementation
use ebook . de / tools . ebook . de / isbn2bibtex instead of manas . tungare . isbn
make sure we do n ' t crash if the context be not active .
added null check for the text object before firing data change events to prevent potential NullPointerExceptions when the text is null
add an option to make the sentiment model a bit easy to understand .
added line trimming to the SuffixURLFilter class to improve URL processing by removing unnecessary whitespace
added a check in HandlerCombatInvocationsNotify to return early if the player is in Godmode to optimize performance by avoiding unnecessary
ggb - 2271 remove duplicate call to unregisterpopup ( ) in textinputdialogw
updated LinkedHashMapCache and BoundedLinkedHashMap constructors to remove the ' maxSize ' parameter and modified concurrency level settings in TCache to simplify constructor
removed unnecessary calls to ` _ channel . close ( ) ` and adjusted the buffer length assignment in ` ChannelEndPoint . java ` to improve code
added null check for keyIndex in FixAcidKeyIndex . java and refactored KeyIndexBuilder instantiation in OrcRecordUpdater .
added Locale import and modified exception handling in DirectUpdateHandler2 . java to improve error message formatting for better localization
[ gr - 3640 ] add support for store check guard on writenode .
improve checkreachability in exceptiondispatchblockmapping to avoid infinite loop
do n ' t return high variance for non - voting user designation
replaced the use of ` BuildTarget . copyOf ( ) ` with direct assignment of ` BuildTarget ` in multiple Java files to simplify code
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
refactor defaultsdkprovider to allow plugins to customize .
fix : use confidenceprogressindicator instead of progressindicator in createofferview
updated the user agent check from " Cling / " to " UMS / " in multiple files to accurately identify and utilize the
add a force iteration option to tilebuilder . iteratebpt ( )
added new constants for message types and modified the onCreateViewHolder method to handle different view types to improve code readability and maintainability by
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
add an ' $ -- ' to the list of conj relation to make it easy to understand
removed the canvas parameter from the insert method and added padding handling in TexturePacker to simplify method signatures and improve image processing efficiency
replaced the ` getVisitors ( ) ` method with a new ` apply ( Refactor < S , T > ) ` method in `
added methods to retrieve child elements by name and recursive names in Xml . java to enhance XML manipulation capabilities by allowing retrieval of child elements by name
set the " Content - Charset " header to " UTF - 8 " in HttpSolrServer . java and corresponding tests in BasicHttpSolrServer
updated ` SystemUiController ` to use a new ` SystemUiControllerFlags ` annotation and modified ` UI _ STATE _ ALLAPPS `
removed the private ClientConfigurationService clientService variable from IntrospectingTokenService . java to streamline the code by eliminating unnecessary dependency
enhanced exception message in HiveRecordSet . java to include specific error details to improve error reporting for better debugging and troubleshooting
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unnecessary fields
rename ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` and update corresponding configuration retrieval to improve clarity
added score comparison to the merge method in TextFragment to ensure that the score remains unchanged when merging text fragments
removed the private Digester field from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure maximumUnimprovedStep
added a check to return early if no currently opened editors are available to optimize performance by avoiding unnecessary processing
replaced direct calls to ` Mockito . verify ( mock ) ` with ` Mockito . verify ( mock ) ` in ` BDD
replaced ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` to improve clarity
refactor ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a single string to improve asynchronous handling of the
added logging to abstractsplitbraintest . testsplitbraintest . testsplitbraintest and abstractsplitbraintest . test
added null checks before adding the logout filter in DefaultLoginPageConfigurer and ServerHttpSecurity to prevent potential NullPointerExceptions when the logout configuration is
[ giac ] fix giac output for degree = = 0
added logging functionality to DockerComposeContainer and created DockerComposeLogConsumerTest to enhance logging capabilities and ensure proper handling of output consumers
updated the generic type parameter in the testMapping method from Class < ? > to Class < ? > to enhance type safety and improve type safety
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a way to create a ` ThrowingSupplier `
replaced a break statement with a return statement in ConsoleActivity . java to ensure the method returns a boolean value indicating success or failure
camel - 14263 : camel - platform - http - add support for buffer body in post request .
added methods to handle platform - specific path separators in MorePaths . java and updated CopyStep . java and AarWithLibsIntegrationTest
added a null check before processing parameters in the authorization context to avoid potential NullPointerException when parameters are not provided
added a new method ` throwExceptionIfFail ( ) ` and modified the ` load ` call in ` NativeLibraries . java ` to handle failure
updated SDK version from " 4611349 " to " 4514284 " in SdkConfig . java and added tests in ShadowTextTo
queuetransactionlog : add hashcode ( ) and equal ( ) to avoid duplicate key
add property to allow disable sql without profile
added a try - finally block around the write operation in ConnectHandler . java to ensure _ data is always set to null after writing to the
refactor CREATE _ REGISTRIES to use EventGenerator instead of Supplier to improve type safety and clarity in registry event creation
updated date formatting from ' date ' to ' calendar ' in DateUtils . java and removed an assertion in FontParsersTest . java to ensure
updated the ` loadValue ` method to call ` super ` and modified the ` getThreadInfo ` method to include a stack trace depth parameter to
added transaction log handling for precommit operations in UpdateLog . java and adjusted sleep duration in LeaderTragicEventTest . java to improve
updated the job file reference from FastAsyncWorldEdit - P2 - V6 to FastAsyncWorldEdit - 1.17 to ensure compatibility
refactor file existence check and add null check for input path in SegmentGeneratorConfig . java to enhance robustness by ensuring the output directory exists
added methods to calculate normal vectors for DefaultObj and DefaultObjFace in ObjUtils . java and updated TriangulationHelper . java to use
updated JdbcAuditService to include identity zone ID in the query to ensure accurate retrieval of audit events based on the identity zone ' s ID
refactor SpanCollector class to improve code readability to enhance maintainability and ease of future updates
added a null check for the cursor session before accessing its info to prevent potential NullPointerException when accessing the session
refactor TransactionIsolationLevel class for improved clarity to enhance maintainability and readability of the code
corrected the spelling of " printLVgroups " to " printLogicalVolumegroups " in OshiController .
added thread name setting for the current thread in TestSession . java to improve clarity of the thread ' s context for debugging purposes
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
removed the creation of ComponentKey instances from the return statement in LauncherExtension . java to simplify the code by returning an empty list instead of
added a new OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance user experience by integrating
replaced the ` scaleHotseatWithWorkspace ( ) ` method with ` getHotseatScaleAndTranslation ( Launcher launcher )
added a check to exclude JUnitRule elements from stack trace filtering in DefaultStackTraceCleaner to ensure that stack trace elements are not filtered above
replaced instances of ` dstnull ` and ` srcBuffer . hasArray ( ) ` with ` dstByteArray ` and ` srcByteArray `
refactor balance listener management in DepositListItem . java to use a private variable to improve code readability and maintainability by reducing
updated color conversion logic in RealisticRenderer to differentiate between STICKER and non - STICKER edge modes to ensure correct color representation
added null check for httpClientResponse in HttpClientBeanPostProcessor and updated log initialization in multiple test classes to ensure robustness by avoiding potential NullPointerException
fix ( gl200 ) : remove pattern check for sentence .
updated last playback event timing logic in FullDetailsActivity . java to improve playback timing accuracy to enhance user experience by tracking playback events more effectively
added a method to check if an element is an elliptic node and improved attribute handling in SpanishXMLTreeReader . java to
added a condition to clear the " iso " language if the value is empty in InstallItem . java to ensure proper handling of empty language values
updated the ` ReactiveLoadBalancerClientFilter ` to correctly override the scheme based on the service ' s security status to ensure the service ' s scheme
http : / / issues . apache . org / jira / browse / amq - 4238 - fix memory leak in defaultm
make debuginfobase # fullfilepathfromclassname non - final
refactor comparison logic in ShadowBackupManagerTest to use a lambda expression instead of an anonymous class to improve code readability and reduce boiler
rename ` ` us ' ' to ` ` en ' ' for non - us locale
remove unnecessary null check for redeemData in LocalTransactionSigner . java to simplify the code logic for better readability and maintainability
add minecraftforgeclient to support texture override for forge .
added a return statement to the TxCacheDB class to optimize performance by avoiding unnecessary execution
updated import statements from ` com . sun . xml . internal . org . objectweb . asm ` to ` jdk . internal . org
refactor FastDictionary class to improve performance to optimize data processing efficiency
do n ' t close the nio connection if it ' s already close .
updated FlightEvent parameters and modified the epsilon calculation in FlightEventsTest . java to enhance the accuracy of flight events and improve accuracy in
feat ( protobuf ) : update vendored grpc version to vendored grpc 1.1 . 26
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the correct namespace declaration is
update instructorfeedbackresults page data to include session name and course id
added shortRules list and updated defaultRules initialization in DefaultPasswordValidator . java to allow alphabetic and numeric sequences in long passwords to enhance
simonstewart : increase the default remote control limit to 20
removed the JUnit Test annotation from ProxyClassSerializationTest . java to clean up the test code and improve readability
updated string concatenation syntax in DLNAMediaInfo . java to use " format = bgr24 " instead of " + " to
remove speculative guard movement phase from hotspot and truffle compilation .
added checks for multiple authentication managers and disabled bean definition overriding in the AuthenticationManagerBeanDefinitionParser to ensure that multiple authentication managers do not throw exceptions
updated conditions for handling host and server fields in ForwardedRequestCustomizer . java and added corresponding test cases in ForwardedRequestCustomizerTest
set the StringBuilder ' s length to zero in ConsoleReader . java to ensure the StringBuilder is reset before processing
changed access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists from other classes
updated version numbers for OpenIDE - Module - Specification - Version and modified project properties for improved compatibility to ensure compatibility with newer versions and maintain
hbase - 14827 add a configuration parameter for hbase . server . netty . tl . wrapsize to configure the size of
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to use JUnit 4 assertions and added new test cases for incorrect line and range lengths to improve test coverage and ensure
updated ` OpenSamlAuthenticationRequestFactory ` to allow dynamic protocol binding and added validation for protocol binding to enhance flexibility in protocol binding configuration and
refactor DepthController to use AttachedSurfaceControl for applying SurfaceControl transactions to improve code clarity and maintainability by utilizing the Att
update version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure
hbase - 15836 addendum change bulk load pre - pre - create and pre - cleanup to create table ( hbase -
updated subList method to limit the size of unSeqMergeList and corrected measurement ID references in MergeTaskTest to improve clarity and correctness
camel - 14263 : camel - core - allow fileinputstream to be convert to inputstream . thanks to jooby
added a login method to the ShardManager class and modified the DefaultShardManagerBuilder to conditionally call the login method to enhance security by allowing
removed an unnecessary semicolon in the DeleteGlobalRef method call to improve code readability and maintain consistency
rename the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve clarity and consistency in
added a check for the completion status before terminating the response in HttpSender . java to ensure that the response is only terminated if it is marked
added check for user student when check for giver in feedback response comment logic
added support for disabling linked profiles and updated profile path handling in BMPImageReader to improve profile management and enhance compatibility with different
updated the ` setSimpleCuboid ` method parameters in ` ClassicPlotManager . java ` from ` ex + 1 ` to ` ez
improve error message when pmd be not find in this package .
refactor grid presenter initialization and add a method to set grid sizes based on poster size settings to improve code readability and maintainability by
changed return values from false to true in ContributionsListFragment . java to reflect the correct functionality of the method
added a test for skipping distinct queries in DistinctPrefixFilterIT . java and modified the scan logic in BaseResultIterators . java to
added unit tests for acrobat checkbox group properties in PDButtonTest . java to ensure correct behavior of checkbox properties in the acrobat
added a method to retrieve the last modified timestamp of a file to provide a way to retrieve the last modified timestamp of a file
added validation for the " metaTable " property in HiveIcebergStorageHandler to ensure accurate file format validation for AVRO tables
add ` ` no ' ' and ` ` restore default currency ' ' popup for cash deposit
changed catch blocks from IOException to Throwable in WriteFlusher . java to handle broader error handling scenarios
added a new boolean variable ` mStartedEnterAnimation ` and modified animation logic in ` IconRecentsView . java ` to improve animation handling
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to facilitate the use of an active key ID
updated action labels and descriptions from " send a text mail " and " send a HTML mail " to " sendmailWithAttachments " and "
changed the ` isActive ` variable from non - volatile to volatile to ensure thread safety when accessing the ` isActive ` variable
[ hotfix ] [ table - common ] remove unnecessary isdesc ( ) method from orderbyexpressioncontext
[ fix ] cast to charsequence to avoid classcastexception
added a condition to check if the application name matches the OWNCLOUD _ APP _ NAME before proceeding with the date check to ensure
hbase - 2595 addendum allow hbase . rootdir . perms to be configure in hbase - site . xml (
replaced ` httpServletRequest . getLocale ( ) ` with ` httpServletResponse . getLocale ( ) ` in ` JakartaServletWebExchange
refactor Instant class to improve code readability to enhance maintainability and ease of future updates
changed the return type of ` getStateFormat ( ) ` from ` int ` to ` String ` and added a null check in ` CollectionsHandler
removed the type variable from the logging statement in CentralAuthenticationServiceImpl . java and modified the conditional check in AbstractTicket . java to improve
pdfbox - 4892 : handle illegalargumentexception in addition to profiledataexception
simplified the conditional check for file existence in AbstractFileResourceSet . java to improve code readability and maintainability
updated PluginParameterExpressionEvaluator to accept PathTranslator as a parameter and modified related methods to enhance path translation functionality and improve code maintainability
move protobuf coderegenerator to extensions . protobuf , and add protobufcoderegeneratorregistrar to make it easy to
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer . java and added a new test for querying signed numeric literals
updated the ` generateLaunchLugFromRASAeroRailGuide ` and ` generateLaunchLugFromRASAeroRailGuide
removed the implementation of the getNonceFactory method in BitmexStreamingExchange to provide a default nonce factory that returns null to simplify the code
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] use default timer interval in driverconductortest to avoid clash with other test .
set ` initializeLoadedClasses ` to false in ` ScanSpec . java ` to disable initialization of loaded classes by default
added focus management in FullTextSearchPanel to ensure the search field focuses correctly
refactor NioParams initialization in TlsConnectionLogging . java to improve code readability and maintainability
updated the assertion in StatementTest to check for a random value to ensure that the test accurately verifies the behavior of the result set
updated assertion message in TestSolrConfigHandler . java to include server URL to improve clarity of error reporting for expected values
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests . java ` to
updated the density handling in FilterResourcesStep . java to use a new variable for better readability to improve code clarity and maintainability by
added ` elementPrefix ` method and refactored UI update logic to use it to improve code readability and maintainability by encapsulating UI
removed unused import of DisplayMetrics and modified the condition for displayInfo rotation check to streamline the code by eliminating unnecessary density checks
8274322 : c2 : assert ( object [ ] > = 0 ) fail : assert ( object [ ] > = 0
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix annotation to address
fixed - npe be throw by redissonexecutorservice . getnextstartdate ( ) method during execution of a scheduled task . # 3
refactor credential update logic in FileDownloader and FileUploader to improve code readability and maintainability
added null check and closing logic for StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
added default value for received byte , received packet , transmitted bytes , and connection num in NetMetrics . java to ensure robustness by prevent
added nonce parameter and assertion for token claims in TokenMvcMockTests . java to enhance security by verifying the correct nonce value for token claims
refactor Chart - related classes for improved organization and consistency to enhance maintainability and readability of the codebase
added methods to set the width and height of the formLayeredPane and disabled its layout to improve UI responsiveness by ensuring the form
added a new method ` maxY ` to calculate the maximum height based on the owner ' s Y coordinate to ensure proper vertical positioning of the
modified the ` openDatabase ( ) ` and ` openSharedDatabase ( ) ` methods to return a boolean indicating whether the database connection has been
replaced direct access to DOCKER _ COMMAND with a reference to Platform . DOCKER _ COMMAND in DockerTestUtils . java to
added null check for input files before initializing parameters in TestIsartorValidationFromClasspath . java to improve robustness by handling cases where no
updated the ` drawLeaveBehind ` method to accept a color parameter instead of using a hardcoded value to enhance flexibility by allowing custom
show an error message when the canary plugin do not work with android studio
added a null check for the table name before retrieving it to avoid potential null pointer exceptions and log a warning if the table name is invalid
added support for enabling and disabling modules in the StartArgs class to enable and disable module persistence features based on user input
updated argument validation logic in GeminiMarketDataService . java to allow for more than one argument to ensure proper validation of the last
replaced HashSet with LinkedHashSet for the ' questions ' key to maintain insertion order in the flow scope
add a unit test that verify that a single role can be add to the map .
added multiple JSP setup files to the AuthCheckFilter to exclude specific JSP setup setup resources from the application setup
refactor scheduled runnables management in the Scheduler class and add tests for execution order in the SchedulerTest class to improve code clarity and
updated method signatures from using String [ ] to varargs in multiple runner classes to enhance flexibility by allowing variable - length arguments for command execution
refactor reading the input stream in XMLParser to handle end - of - stream condition to improve error handling and prevent potential end - of -
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address text overflow issues
added pivot point adjustments for mArrow in DeepShortcutsContainer . java to improve arrow positioning based on icon icon positioning
fix checkstyle issue in util / jabref / jabrefexecutorservice / fileupdatemonitor . java ( # 1193 )
modified the ` updateThumbnail ` method to include a ` refreshView ` parameter and updated related logic to enhance the functionality of thumbnail updates based on
pdfbox - 4892 : fix typo find by codespell on fossies . org
added a boolean parameter to the InternetAddress constructor in EmailFormatSpecifier . java and improved hostname validation in HostnameFormatSpecifier . java to enhance
updated references from ` this ` to ` this ` in multiple activity classes to improve code readability and maintain consistency across the codebase
updated the maximum document ID handling in the MatchEntireSegmentDocIdSetBlock and SizeBasedDocIdIterator classes to improve clarity and
modified the ` promptToOpenFile ` method to accept an existing file name parameter and updated file opening logic accordingly to enhance file management by allowing
updated widget page sleep delay and refactored page count updates in AppsCustomizePagedView . java to improve responsiveness and
added coordinate transformation logic for active rocket components in FlightConfiguration . java and adjusted expected length in FlightConfigurationTest . java to improve
polish ` ` use direct : ' ' instead of ` ` seda : ' '
added Locale . ROOT to DateTimeFormatter initialization in TimeHelper . java to ensure consistent date formatting across different locales
[ ds - 3952 ] filter out hidden metadata field in dspaceobjectconverter
added a test method to verify behavior when dimension and metric names are missing in StarTreeConfig to ensure that the configuration builder correctly handles missing
camel - 16400 : added support for dynamic recipient list in camel - spring
refactor InlineLayoutBox and HoverListener classes to improve layout handling and repaint logic to enhance code readability and maintainability while ensuring correct
replaced the ` DetectAuthenticationMethodOperation ` implementation with a new ` OperationsServiceConnection ` implementation to enhance the authentication process by integrating a
