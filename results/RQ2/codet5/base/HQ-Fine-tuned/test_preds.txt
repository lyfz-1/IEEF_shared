refactor SocketAppender initialization to set remote host and port directly to improve clarity and ensure proper configuration of the socket instance
refactor BasicAuthPlugin to encapsulate prompt headers retrieval into a separate method to improve code readability and maintainability by reducing duplication
removed the use of RecordDescriptor . msgLengthOffset in ManyToOneRingBuffer . java to simplify the code by directly accessing the msgLength offset
cloudstack - 4892 : fix overcommit ratio not be calculate when vm detail be null .
added flags field and its getter method in ShadowPaint , and updated PaintTest to validate antiAlias status to enhance functionality to support anti - alias
updated the title for the MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content
updated the condition for reporting bugs in DetectorsTest . java to handle cases where Eclipse was used to compile the project to improve clarity
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4894 ,
added a new interface ` RemoteInputListener ` and modified the constructor of ` RemoteInput ` to accept a ` RemoteInputListener ` to enable
reformatted conditional statements in OrcEncodedDataReader . java for improved readability to enhance code clarity and maintainability
[ homeconnect ] only filter home connect thing handler if it ' s enabled
added null check for ` bs ` before calling ` removeAllPolicies ` and ` addPolicies ` methods to avoid potential NullPointerExceptions when ` bs `
updated assertions in tests to use matches instead of isEqualTo for Java 9 and later versions to ensure compatibility with Java 9 and later versions in JSON
added JSON serialization and logging for DAG information in TezTask . java to facilitate easier debugging and monitoring of DAG information
updated time calculation in ComputedSummary . java to use tagTime instead of headerTime and added getHeapTime method in HprofHeap .
replaced the old
removed unnecessary conditional checks for multi - threaded locking in MVTable . java to simplify code logic for better readability and performance
[ issue # 1560 ] fix commitlog offset size limit ( # 1561 )
added a check to ensure associated folder is not open before retrieving it from the workspace to avoid potential null pointer exceptions when the folder is marked as
added a test method to verify sorting of PGProperty names in ascending order to ensure that PGProperty names are sorted in ascending order for proper functionality
removed the constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN from Common . java to streamline the
changed the parameter type from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget . java ` and modified the ` getUninstall
updated assertion in RequestBuilderTest to use ` getMessage ( ) ` instead of ` hasMessage ( ) ` to improve clarity and consistency in error
replaced the ` NearbyMapFragment ` with ` NearbyListFragment ` and updated related fragment references to improve clarity and
updated the parameter name from ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity and consistency
added a new configuration option ` sendZeroAnomalyEmail ` to the ` EmailConfiguration ` class and updated ` EmailReportJob ` to skip
[ hotfix ] [ kafka ] fix the open method in flinkkafkaproducerbase when restore the state
added methods to retrieve User and Geofence objects from the database to enhance functionality for user management and geofence retrieval
added a default constructor with a maximum length of 2MB in BlockingResponseListener to optimize request handling by limiting the buffer size for better performance
refactor memberBroadcastsReceived method to accept a byte array instead of a single channel data array to simplify data handling and improve clarity in
replaced System . out . println with logger . info and added a try - finally block for resource management to improve logging clarity and ensure
updated the URL in the test assertions from " https : / / example . com / " to " https : / / example . com /
refactor ConfigMetadataProviderTest for improved readability to enhance maintainability and clarity of test cases
updated import statements in ListFragment . java and modified the parameter name in updateNoteReminder method in SnoozeActivity . java to
added a AcceptAllFilter class and refactored directory stream handling in files , WindowsDirectoryStream , and WindowsPathParser classes to improve path
refactor JdbcTestDataSet to improve code structure to enhance maintainability and readability of the test code
added ClassNotFoundException handling and refactored type resolution logic in multiple classes to improve error handling and maintainability of type resolution logic
added validation logic for Docker image tags in GenericContainer . java and created DockerImageName . java to ensure that the image name includes a valid tag
updated the login failure message from ` login _ failed _ username ` and ` login _ failed _ password ` to ` login _ failed _ wrong
added ` setAutofocus ( " autofocus " ) ` method to multiple form classes to ensure proper focus behavior for components that require focus
added unit tests for IdentityZone and SamlConfig in SamlIDPRefreshMockMvcTests . java to ensure correct behavior of IdentityZone
added checks for non - digit and non - digit lists in ComparableVersion . java and updated test cases in ComparableVersionTest . java to ensure
updated mode settings and adjusted return values in Sheet . java and UIManager . java to ensure proper layout and padding properties are applied to improve UI
updated package structure for ParallelUniverse and related test classes from ` org . jetbrains . annotations . TestOnly ` to ` org
replaced direct usage of ` changeReturnType ( BoundedLocalCache . class ) ` with ` MethodType . FACTORY _ CALL ` in
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to align the
added functionality to draw self loops in the ProcessingPreview class to enhance the visual representation of self loops in the graph
updated the value of ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to clarify the method ' s
added a line to reset the drag handle indicator ' s translation position to zero to reset the drag handle indicator ' s position for better user experience
removed unnecessary log statements in CollectionViewer , CommunityViewer , and ItemViewer classes to streamline log output for better clarity and performance
updated configuration messages in HiveConf . java to clarify behavior during query optimization to provide clearer guidance on how filters are pushed down
added a conditional check to skip finding itself in ScanningAppProviderRuntimeUpdatesTest to address issues related to finding itself in the build server
added support for Jetty ALPN client bundle in TestJettyOSGiAnnotationParser to enhance OSGi integration with Jetty al
fix activiti optimisticlockingException when update process instance lock time
refactor Transaction class to improve code structure to enhance maintainability and readability of the code
removed the CustomFieldBehavior annotation from the GenruleBuildable class and excluded it from the rule key to clarify that Genrule execution
simonstewart : make the firefox custom profile launcher work on window
added a check for existing column mappings before adding them to the colFamToDynamicColumnsMapping to ensure that duplicate entries are not added to
[ hotfix ] fix checkstyle violation in hadoopoutputcollector and hadooptupleunwrappingiterator
added a check to ensure the table is instantiated with derived columns and indexes when the client version is below minimum _ splittable _ system _ catalog
add logic to update instructor ' s student if it ' s not already there
updated import statement for TestCellReference from org . apache . poi . xssf . util to org . apache . poi . ss .
added a check for block hardness in the LensPiston class to ensure that the block ' s hardness is within the defined
added a new file LongPointerPressTest3049 . java that implements a UI test for long pointer press functionality to verify network error handling
truffle : do n ' t inline the calldirectmethod if inlining be disable .
refactor null checks in BaseBuilder and XMLConfigBuilder for improved readability to enhance code clarity and prevent potential NullPointerExceptions
simplified the conditional check in ListBlockParser and added a new test for deeply indenting lists to improve code readability and ensure
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it to improve code organization and maintainability
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to mark tests as ignored due to issue # 1070
[ wasm ] fix testcaselogger . savemessage to not use string . tojsstring .
updated formatting in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the video format is a video before proceeding to ensure that web subscription functionality only applies to video formats
added security configuration to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing unnecessary certificate verification
server : do n ' t allow local storage pool to be create in local vm ( # 4649 )
updated cache logging to include cacheEntry object and improved string formatting in QueryResultsCache to enhance logging clarity and ensure accurate representation of cache entries
added an option to skip updating the model after managing dependencies to improve the efficiency of dependency management by allowing users to skip model updates after managing dependencies
added a test for sending an intent with a request code in ShadowActivityTest and implemented the send method in ShadowActivity and ShadowPendingIntent to
added FBO enabling and disabling logging and refactored graphics creation logic in RocketFigure3d . java to improve rendering
added synchronization to controller listener management in HydrawiseAccountHandler to ensure thread safety when accessing shared resources
solr - 9893 : disable testcoreadminapis . testeasymock that do n ' t work with java 9
updated year retrieval logic in TimestampUtils and added DateTimeFormatter for local time formatting in SetObject310Test to improve accuracy of year retrieval and enhance
add a null check before disconnecting the jabber connection to avoid potential NullPointerException when disconnecting the jabber connection
updated the variable name from " cur . ws _ commit _ id " to " cur _ ws _ commit _ id " in TxnHandler .
updated BufferedInputFilter to use ByteBuffer instead of ByteChunk for better memory management to improve performance and maintainability by utilizing a more efficient buffer
added a method ` toSync ` in ` AsyncUtils ` to convert a ` CompletableFuture < T > ` to a synchronous version to enhance asynchronous
added ActionGraphBuilder to multiple compiler factories and updated related method calls to utilize it to improve the flexibility and maintainability of the compiler
added a test for handling hidden file inputs in the upload process to ensure that the upload functionality correctly handles hidden file inputs in the application
removed unnecessary import of Date and added exception handling for creating tables to streamline code by eliminating unnecessary dependencies
added a check to return the local Maven directory if the file does not exist to ensure that the method returns the correct local Maven directory when the
ggb - 2338 hide the hidden label for algebra element if it start with ` ` hidden ' '
refactor metadata initialization to check for null before creating a map to avoid potential NullPointerExceptions when metadata is null
replaced ` setFlags ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` addFlag ( C . BUFFER _ FLAG
hhh - 14263 : do n ' t sort entity if it ' s not sorted by id in reordering
updated error messages in Reporter . java to clarify missing method calls to improve clarity and accuracy of error reporting
added null check for backupFolder before logging to avoid potential NullPointerException when accessing backupFolder
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the creation of a void array using reflection to facilitate
added @ AddToRuleKey annotation to the ` toolType ` field in ` ClangCompiler ` and ` GccCompiler ` classes to
added a constant PINCODE _ TIMEOUT and modified the time comparison logic to use it to improve code readability and maintainability by centralizing
implement ` isSampled ( ) ` method in ` PrometheusMeterRegistryTest ` and ` PrometheusExemplarsSample ` classes to
added @ Ignore annotation to multiple test classes to temporarily disable tests that require mongodb server
http : / / issues . apache . org / jira / browse / amq - 4748 - fix test case for consumeunc
updated table name check from ` getName ( ) ` to ` isArtifical ( ) ` in ` MetaDataSource . java ` to ensure
updated file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer . java and LaunchMapper . java to improve cl
refactor session attribute handling in MongoSessionManager . java to improve null and empty checks to enhance code robustness and prevent potential NullPointerExceptions
replaced surfaceHolder . setFixedSize ( 320 , 240 ) with surfaceHolder . setSizeFromLayout ( ) to ensure the surface is
replaced the manual await and countDown calls with a local variable for stopping latch to improve code readability and avoid potential NullPointerExceptions
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 16400 : use system . currenttimemillis instead of stopwatch . taken ( ) to calculate message history duration
refactor error handling in DelayedMonoPublisherTest to use lambda expressions to improve readability and maintainability of the code
updated the assertion in WebsocketTest to check for an instance of WebSocketHandshakeException to improve error handling by providing clearer failure messages
added View . OnLayoutChangeListener implementation to the AllAppsTransitionController class to simplify the layout change handling and improve code readability
refactor variable names from ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability
int - 1188 add support for set default output channel on xpath router
changed the default value of cacheSeconds from an integer to a DurationCapable and added it to CasCoreWebConfiguration to improve configuration flexibility
updated OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to
removed the append ( buffer , true ) method from ByteBufferPool . java to simplify the buffer appending process by eliminating unnecessary operations
added a check for the presence of the " alt - rt . jar " in the " sun . boot . class . path " system property
updated JdbcScimUserProvisioningTests to use upper case for user names and updated associated email addresses to ensure accurate deletion of users based on their
replaced ` Arrays . asList ` with ` ArrayList ` and added ` DebugNonSafepoints ` to the ` FlightRecorderProfiler
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` imageDropHappened `
added a condition to check if the content view has content in HttpParser . java and implemented a chunked PUT test in ProxyServletTest . java
refactor AtmosEndpoint class to improve code structure to enhance maintainability and readability of the code
added support for " printf " and " print " target method names in Java2TypeScriptAdapter . java to enhance type handling for print statements
added a new file TestCapacityUntilGCWrapAround . java to test garbage collection capacities for 32 - bit platforms to ensure that the
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a check to update the end time if the resource is stamped at the start to ensure that the end time accurately reflects the
added unit test base on user forum issue
tmi - jpeg : do n ' t throw iioexception when icc _ profile chunk be invalid
fix torra rod and terraform rod not respect the item ' s flying state
updated JoobyModule , SpringModule , and JoobyExtension to ignore Config and Environment classes during bean registration to improve flex
fix a bug where the parent classloader of the web application do not match the container ' s classloader .
log additional namemap entry when nameupdater . properties file be find
added initialization of ` started ` variable in ` EllipsoidRegionSelector . java ` to ensure ` EllipsoidRegionSelector . java `
updated URLs from " http " to " https " in JavaSEPort . java and added a defaultCodenameOneComProtocol in Desktop
[ geos - 8470 ] wfs : throw a wfsexception for invalid sortby attribute in getfeature
updated the null check for grantTuple [ 0 ] in AbstractJdbc2DatabaseMetaData . java to ensure proper handling of null values to avoid potential
added imports for GraphicsConfiguration and GraphicsEnvironment , and modified image handling in DiagramGenerationTest . java to ensure correct rendering of images with transparent
added a null check for sidedDelegate in FMLCommonHandler . java to ensure proper error handling when attempting to install FML without attempting
refactored DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
fix locktest . testlocknotfoundexception when wait on lock .
added methods for whole word tokenization and joining tokens in StringUtil . java to enhance tokenization functionality for better user experience
use senderror ( 404 ) instead of sendstatus ( 404 , " Not found " )
refactor SystemHighlighter to use commandIndex instead of commandIndex for better handling of command parsing to improve code clarity and maintainability by
update version and version date constants to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING " to reflect the
updated buffer position to use dimensionSize instead of idx to ensure correct positioning of the buffer based on dimension size
added support for drag and drop functionality in the SystemUiProxy and TouchInteractionService to enhance user experience by allowing drag - and - drop functionality
added assumptions to verify socket traffic class consistency in SecureSocketAppenderSocketOptionsTest and SocketAppenderSocketOptionsTest to ensure compatibility with Java 7
added PSK - AES256 - GCM - SHA384 + TLSv1 . 2 cipher to TestCipher . java to enhance security by
updated the method to retrieve the long description from the place object instead of the original description to ensure the description reflects the actual long description instead
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization of the member ' s value
refactor HqlQueryRenderer to handle reserved words more efficiently and add a new test for schema scoping to enhance query parsing functionality and
updated null check message from " d is null " to " s is null " in SubscriptionHelper . java to improve clarity and accuracy of
refactor Parser class to improve code structure to enhance maintainability and readability of the code
modified the ` offsetStreamIndex ` method to include a ` indexStartsAtOne ` parameter and adjusted track selection logic accordingly to ensure correct stream
updated byte decoding logic in MagicDetector . java and added new content types in TestMimeTypes . java to improve accuracy of byte decoding and ensure
[ flink - 20613 ] [ table - planner - blink ] remove unused monotonicity method from flinksqloperatortable
added equality and hash code methods to OneTimeTokenAccount and OneTimeToken classes to improve object comparison and retrieval efficiency
added a condition to check if the assistant is not launched in the AssistantTouchConsumer class to ensure that the assistant is only launched when it
added a new file SolarisShortDSA . java that tests DSA private key signing and verification to address a known bug related to
added a call to toggleSearchLabel ( false ) in ListFragment . java to ensure the search label is disabled when necessary
cloudstack 3.0 , cloudstack 3.1 : do n ' t lock the volume while create a snapshot
refactor service connection handling in FileDetailActivity to use a new DetailsServiceConnection class to improve code organization and ensure proper cleanup of service connections
replaced the failure handling logic in HttpClientTLSTest with an AtomicReference for SSLPeerUnverifiedException to improve thread safety and clarity
removed the equals method from the ConjunctionScorer class to simplify the comparison logic for better readability
added a null check for the variable ' v ' in bindItems method and logged an error message if it is null to improve error handling and
make getraftgroupids operation random commit timeout configurable
refactor cache size handling to use a variable for the desired size and add a timing warning for cache size shrinking to improve code clarity
updated API path from " / api / v2 " to " / api / v3 " and modified order handling in CryptoFacilities classes
added a ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if the freenect
added Optional import and modified test annotations in AsyncPageReader , TestDrillParquetReader , and TestDrillParquetReader classes to
updated method signatures and added validation for market data type in SerumStreamingService . java to ensure proper handling of market data types and improve error
added a config option to disable the charging animation when an item is charging in the mana pool to enhance user experience by allowing the
[ java ] handle connection timeout in cluster node restart test .
[ flink - 22837 ] [ test ] add log to waitforhelper to catch interruptedexception
replaced conditional checks for directory creation with assumptions in DefaultServletTest . java to enhance test reliability by ensuring filesystems support question dirs
removed redundant calls to ` dialogStylesScss ( ) ` and ` openScreenStyle ( ) ` in ` ResourcesInjectorFull . java `
replaced ` String ` with ` FileResource ` in ` BaseLiquibaseTask ` and ` DBDocTask ` classes to util
fix blockworldvector . isequal ( ) to check for z = = ( int ) 0 .
changed fields in LongConcurrentLRUMap and CacheEntry classes to be final to enforce immutability and prevent unintended modifications
camel - 14263 : camel - jbang - allow to use regex literal for reflection configuration .
modified the cache retrieval logic in FileCredentialsCache . java and improved error handling in EmptyCC . java to enhance cache management and ensure proper
updated the database path in ValidateMultiSignContractTest . java from " output _ PrecompiledContracts _ test " to " output _ ValidateMulti
disable fast sync if there be at least one available peer
danielwagnerhall : make sure we attach the session log handler to the current thread
added a conditional check to prevent expansion of " AreEqual [ Segment [ X , Y ] , Segment [ Z , W ] ] " format
added a condition to clear pending rendering operations if the view is minimized to ensure that pending rendering operations are only cleared when the view is resized
fix race condition in hazelcasttestsupport . testdeadline ( )
fix continuously update key in write - behind queue ( # 11345 )
set the icon of a JLabel in GroupTreeCellRenderer to null to save some space to avoid potential memory leaks
updated strict match tests in TestBlacklistAwareRedirectResolver to disable strict matching for non - strict scenarios to improve reliability of redirect matching tests by
added unit tests for the ShutdownMonitor and ShutdownMonitorTest classes to ensure proper resource management and status reporting functionality
reduced the calculation of moveSize and adjusted the chunk fill rate logic in RandomAccessStore . java to improve memory management and ensure correct chunk
refactor Json class to improve field retrieval and error handling to enhance code clarity and maintainability by reducing redundancy
[ hotfix ] [ runtime ] move closeutil thread to operators / coordination package
server : cleanup volume when vm be in error state
server : fix ipv6 range check when use ipv4 / ipv6
rename ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderManagerManagerConfigurer ` to improve clarity and consistency
increased the timeout duration for the leader retry method from 15 seconds to 30 seconds to allow more time for the leader retry operation to complete
added logging for invalid input and improved error message formatting in multiple parameter classes to enhance debugging capabilities and provide clearer error messages for better debugging
updated image drawing parameters in URLImage . java to correct positioning of images in the rendering process
updated comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure the comparison
refactor error handling in SetFunDef . java to use a new method isItemZeroHighCardDim to improve code readability and maintain
[ hotfix ] [ stream ] add the original exception to the streamtaskexception
refactor the handling of hashtag processing to simplify the logic and improve readability to enhance code clarity and maintainability by reducing
reformatted the ` read ` method in ` MessagePack . java ` for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standardized way
do n ' t encode empty extension list when jsonparser do n ' t support fhir comment
updated file paths in ` Artifact . java ` and added null checks in ` LibraryManager . java ` to ensure correct artifact processing and trust that
added alias " node _ popup _ scripting " to " node _ popup / node _ popup _ scripting " in ScriptingMenuEntry
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants and added alpha animation logic in Re
camel - jms : fix classcastexception in jmsproducer . thanks to benjamin for the patch .
updated formatting in multiple Java files to improve code readability and maintain consistency across the codebase
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove obsolete or redundant code to streamline the codebase
updated GzipHandlerTest to use static final variables and added a new MicroServlet for HTTP requests to improve memory management and ensure proper handling of content
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5892 ,
added logging functionality and improved error messages in SpeedmentImpl . java to enhance debugging capabilities and ensure accurate component lifecycle handling
added a new file LoadDSpaceOAIConfig . java to load DSpace OAI configuration to facilitate dynamic loading of the
hbase - 13850 fix npe in storescanner . scan ( hregion . region ) and testWidescanner . testscan
camel - 14284 : camel - nagios - enable / disable jmx if cameltestsupport . jmx be enable / disable
replaced hardcoded ' / ' with a constant for path separator in SourceLineAnnotation . java and updated sourcePath assignment in SourceCodeDisplay .
added YARN binary configuration and application ID retrieval methods to HiveConf , RemoteSparkJobMonitor , SparkJobStatus , and LocalSparkJob
added support for Maria database in the DbConnectionManager to enhance compatibility with MariaDB in addition to MySQL
updated log message formatting in MasterWalManager and adjusted time calculation in SplitLogManager to improve readability of log output and ensure accurate timing
added a new test class ` ExecuteAndReturnStringTest ` to test network error handling to ensure that the application correctly handles network errors and returns
added a new file ` InvokespecialInterface . java ` implementing a generic interface with a method to demonstrate the invocation of dynamic
refactor EvictingBoundedList class to improve code organization to enhance maintainability and readability of the code
update traversal mode based on turn cost support in GraphHopper . java to ensure correct encoding manager is used based on turn cost support
added checks for backgroundDisabled and selection validity in SelectBox . java to ensure proper handling of disabled states and prevent invalid selection values
added a null check for the method metadata in RpcServer . java to ensure proper handling of unsupported methods and prevent runtime errors
updated hotseatCellSize calculation and adjusted border spacing logic in TaskbarViewController . java to improve accuracy of hotseat icon position
updated the method of constructing ` valString ` from ` keyName ` to ` values . get ( ` partitionColumnIndex ` ) ` to improve code
added version check for serialization in NamedTaskDecorator and TaskDefinition classes to ensure compatibility with version 4.1 and above
updated the index directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is used for
changed the default value of the ` equal ` variable from false to true and modified the comparison logic to ensure that the ` isDisplayModeEqual
added conditional handling for Unicode code point formatting in UnicodeToLatexFormatter and updated relevant comments in HTMLUnicodeConversionMaps to improve handling of Unicode
added null checks and updated value assignment in OAIDCCrosswalk . java and Item . java to ensure that invalid ISO control characters are
danielwagnerhall : do n ' t try to open a selenium window if it ' s empty
added a new button and adjusted conditions in BookmarksPanel , DataBrowser , and StringSearchPanel to enhance user interaction by allowing toggling
replaced the use of ` UriComponentsBuilder . newInstance ( ) ` with ` UrlUtils . fromHttpUrl ( UrlUtils . buildFull
updated date assertions and error messages in SoftAssertionsTest . java to improve accuracy of date comparisons and enhance clarity in error messages
added a reverse parameter to the adaptOrders method and modified the order adaptation logic to support reverse order adaptation in the order adaptation process
modified the handling of the variable type in PrettyPrinter and added a new Java11Var class with a test method to improve code clarity and
danielwagnerhall : fix typing test and remove unused import
updated Configuration initialization to set default value to false and removed unnecessary debug logging for Hadoop conf properties to simplify configuration handling and enhance debugging clarity
replaced the call to super . drawChildren ( batch , parentAlpha ) with the call to super . draw ( batch , parentAlpha )
added unit test base on user forum issue
replaced usage of ` System . getProperty ( Globals . CATALINA _ BASE _ PROP ) ` with ` context . getCatal
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and refactored ` ShadowICU ` to
added information about PlotSquared color codes and updated the object map to include color values to enhance the visual representation of color codes for better debugging and
added ZuulProperties support to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance flexibility in managing Z
tika - 2338 -- fix fontparserstest to work with utc time zone
added a new ` SampleApplication . java ` file and modified ` BuildInfoMojo . java ` to include a ` time ` parameter to
updated the calculation of xDist to use the absolute value of mScroller . getCurrX ( ) instead of mFinalX ( )
deleted the GUIRWTester . java file to the functionality was no longer needed in the project
removed the @ NullableDecl annotation from method parameters in LazyMessage and StandardSubjectBuilder classes to simplify the code by eliminating unnecessary null checks
updated error message format in TestStream . java to include formatting to improve clarity of error messages for better debugging
updated package names from ` org . thymeleaf . templateparser ` to ` org . thymeleaf . templateparser . markup
added a test method for XPath string evaluation in XPathTest . java to ensure correct handling of XML string inputs in XPath evaluation
added @ Nullable annotation to FutureUtils . java to improve code clarity by indicating that null values are not allowed
onflycallgraphbuilder : add warn if invokedynamic be not resolve during call - graph construction
updated email addresses from " @ gmail . com " to " @ example . com " in ContextTest . java to provide a clearer
updated the handling of bad encoding responses in HttpConnectionTest . java and changed the URIUtil . equals method in HttpConnectionTest . java to
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to retrieve column data
camel - 15836 - camel - aws2 - * : add default implementation to the dynamodb client interface .
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
replaced ` long ` with ` Instant ` for ` startTime ` and updated logging logic to use ` Duration ` for time calculations to improve precision
added versioning checks and updated logging in LibMediaInfoParser . java to enhance media info parsing capabilities based on versioning and improve logging cl
added reflective proxy creation for IdeaDependency in ProjectReader . java to facilitate dependency proxying for better integration with gradle
added a new SerialHeap class and updated Universe to use it for managing heap mappings to facilitate the use of a serial heap
added multiple @ SuppressWarnings ( " serial " ) annotations to the $ Gson $ Types class to suppress serialization warnings for improved code clarity
use mouse . getposition ( ) instead of mouse . getposition ( ) for mouse wheel event
added null check for next ( ) in MongoQueryCreator and implemented a new test for findByFirstnameIgnoreCase in AbstractPersonRepositoryIntegrationTests to
[ hotfix ] [ table - common ] fix arrayindexoutofboundsexception in typeutils # ismultiset
added methods to retrieve identity providers by issuer in XOAuthProviderConfigurator and corresponding tests in XOAuthProviderConfiguratorTests to ensure correct handling of identity
pdfbox - 4892 : fix bug , a suggest by valerybokov
added operations service connection and binding functionality to ContactsBackupJob . java to improve resource management and resource management for service operations
refactored type constraint handling and introduced new classes T6938454a and T6938454b to improve type inference logic and enhance
add is _ account _ config _ hidden to support hide config account
added a check to ensure the number of displays differs from the expected size in DisplayController . java to prevent incorrect number of displays in the application
updated schema removal logic in PMetaDataImpl and added a new test for schema removal in PMetaDataImplTest to ensure the correct schema is removed
[ web ] make sure we fire the loginpassive event on the webview
added a new file ` Box2DTest . java ` and modified ` GDXTester . java ` and ` Box2DTest .
update cfname format and add debug logging in Table . java and LocalByPartionerType . java to improve clarity of cf name
[ hotfix ] [ test ] set default buffer request timeout to 5 minute .
add gapic - generator - name and 0.0 . 5 to speech settings , and update doc .
added a help button to display the help text in the OpenOffice panel to enhance user interface by allowing users to access the help text
added TCP _ NODELAY child options to NettyAcceptor and ProtocolDecodingServer classes to ensure TCP _ NODELAY
updated methods in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceTradeService , and BinanceTradeService to use wildcard generics to
added a transient Class < ? > classRef variable and refactored class loading logic in ScanResultObject . java to improve performance by redu
refactor connection handling in DecodeServlet to use try - with - resources for better resource management to improve code readability and maintainability by redu
updated Querydsl class to use a new null handling mechanism for query execution to enhance flexibility in handling null values during query execution
added null check for actor in ParallelAction and modified index handling in SequenceAction to enhance robustness by preventing potential NullPointerExceptions
refactor test cases in CtTypeTest . java for consistency and clarity to improve code readability and maintainability
added synchronization around the closing of bucket writers in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its corresponding test class ` JJ ` and ` JK ` to implement
added functionality to revoke an agent certificate if it exists in the certificate manager to enhance security by allowing users to revoke them from the agent
added a check to prevent writing empty body responses in AbstractHttpTest . java and implemented a new test in HttpServerTestBase . java to ensure
added null checks for script text and language in ScriptTransformer . java to ensure compatibility with Java 6 and above and provide clearer error messages when
added support for " HikariCP " and " DBCP " connection pooling in Hive configuration and updated related test cases to enhance connection
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added filterLock method to display or hide locked files in FileMenuFilter . java and enhanced file lock handling in OCFileListFragment . java
refactor versioning logic in mmm Version . java and ppp Version . java to improve code clarity and maintainability
clear the replication strategy endpoint cache when alter a keyspace
replaced direct calls to ` waitForSignal ( ) ` with a new ` waitForState ( Thread . State state ) ` method to improve code
updated the ` getCoercedAttrValues ` method to accept ` SkylarkRuleContextAttr ` instead of ` Map < String ,
simonstewart : move the localstorage interface to the sessionstorage interface , so that it can be reuse by other implementation .
add null check for existing view before check view new row type in PlanExecutor . java and modify test cases in CreateViewStatementTest . java
changed catch block from Exception to Throwable in SegmentGenerationJobRunner . java to provide more specific error handling for segment generation failures
updated query string retrieval logic in SpellCheckComponent . java to ensure that the query string is correctly retrieved from the request context
added validation for header values in Headers . java to ensure illegal characters are present and validate header values to prevent runtime exceptions
rename instanceSize to arrayBaseOffset in HybridLayout . java and add getAfterFieldsOffset method in HostedInstanceClass . java to
change astcommentcontainer to abstractapexcommentcontainernode and add javadoc
hhh - 51079 - improve fetch timing log for association with lazy fetch mode
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing isParam
added db name and table name assertions in TestCompactionTxnHandler and set database and table names in TxnHandler to ensure consistency in database and
camel - 14284 : timer component now properly handle graceful shutdown .
added a conditional check to ensure the block is processed before adding traces to avoid adding unnecessary traces when the block is not processed
updated the null element check in ProviderManager to use CollectionUtils for null checks to ensure proper handling of null values and improve error handling
removed unnecessary version check for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to simplify the logic for determining if the database is a Post
added tests for querying results in LocalIndexIT and modified scan handling in BaseScannerRegionObserver to improve test coverage and ensure correct handling of local
added a check to prevent adding collections with the same name in the past to ensure that collections with the same name do not conflict with the current
updated cursor handling logic in VDUBuffer . java and refactored cursor positioning in vt320 . java to improve cursor positioning accuracy
removed the static final string USE _ RETRIES in HttpShardHandlerFactory . java to streamline the configuration by eliminating unnecessary retries
updated the JavaVersion . java file to include a period in the version number format to ensure accurate parsing of the Java version string for improved
added a check to return early if there are no input gates to avoid unnecessary processing when no input gates are available
added a JUnit test method to the TestReceivingMessageSourceParserTests class to facilitate testing of theReceivingMessageSource
added a null check for properties before accessing its value to prevent potential NullPointerExceptions when properties is null
replaced the throwing of IOException with a direct instantiation of IOException to improve error handling by preserving the original cause of the IOException
updated error messages in ClusterStackVersionService , AmbariManagementControllerImpl , RepositoryVersionResourceProvider , and HostRoleCommandDAO classes to
added a TxConfidenceListener to manage transaction confidence changes to ensure that the correct confidence listener is updated for transactions
[ netbeans - 4892 ] add support for g1 perm gen to jmx support .
removed unused imports and simplified return statements in NearbyController . java to streamline code and improve readability
pdfbox - 4892 : improve javadoc , a suggest by valerybokov
added imports for TaskInfoCompat and modified activity type checks in BaseSwipeUpHandlerV2 . java to enhance code clarity and ensure
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and consistency
[ shadowtelethelephonymanager ] make ` ` iso ' ' field case - insensitive
added a method to set the unfreeze balance value in the UnfreezeBalanceV2Actuator class to ensure the correct amount is returned for
updated the description of PUBLISHED _ TIMESLOT _ DESCRIPTION and PUBLISHED _ ROOM _ DESCRIPTION to include " per match
simonstewart : move file copy from google common to apache common for firefox
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
2 . x : fix typo in javadoc of observable . delay ( ) and observable . delay ( ) . delay ( ) . delay (
refactor the ` pushAll ` method in the ` Update ` class to use a multi - field operation instead of a single DBObject to
added a null check for the randomUUID before setting the ID to ensure that the ID is only set when it is null to avoid potential NullPointerException
added a default implementation of the ` onHoverEvent ` method in ` InputConsumer ` and implemented it in ` OverviewInputConsumer ` to
added a conditional check for bootstrap _ conf before accessing its value in CoreContainer . java to ensure proper handling of configuration settings when there are multiple
camel - 14263 : camel - netty - http - allow to configure http header size a consumer option .
hbase - 25736 set hbase client retry number to 15 ( # 3889 )
replaced ` toPath ( ) ` with ` getAbsolutePath ( ) ` for file creation in ` SourceSnippetHelper . java ` to improve file path
truffle : fix invalidatortest . testencodedgraphcachetest failure on slow machine .
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new
added currency adaptation logic to the KrakenAdapters class to support currency metadata adaptation for better asset management
added a ` toString ( ) ` method to ` AnyOf ` and created a new test class ` AnyOf _ toString _ Test ` to
refactor email handling to use DimensionMap instead of entry key in AlertTaskRunnerV2 . java to improve clarity and maintainability of
log warn if fluxdb do n ' t have measurement / database
renamed method ` doTransform ` to ` downcast ` across multiple converter classes to improve method naming consistency and clarify the downcast
added a new method ` isUniqueLocalAddress ` to check for unique local addresses in ` NetUtils . java ` to enhance network address validation
added a method to format column names in DataTextFormatter to ensure proper handling of quoted column names in the formatting helper
added methods for setting system properties and improved method signatures in WrapSystem , StrUtils , and ClassWrapper classes to enhance system property management and
added a constructor to the UpdateRequest class that accepts a URL and sets the HTTP method to ensure proper initialization of the UpdateRequest class with a
changed the access modifier of the EnumSerialization enum from static to instance to allow access to the EnumSerialization enum from other classes
added an experimental format warning to the response handling in DataImportHandler and ReplicationHandler to inform users that the response format is experimental for better debugging
added a new method ` format ` to handle multiple module names in ` JpmsUtil . java ` to improve logging clarity and ensure
add a method to get the default label font size and adjust row height accordingly to improve UI layout consistency by using a dynamic font size
http : / / issues . apache . org / jira / browse / amq - 4748 - fix npe in defaultbroker
added meanPartitionSize , partitionCount , and splitCount variables to CqlInputFormat . java to ensure accurate calculation of partition and split sizes
removed unnecessary condition in JUnitTestsShouldIncludeAssertRule . java to simplify the condition for better readability and maintainability
[ drools - 7 ] fix equal ( ) and hashcode ( ) in ruleterminalnodelefttuple
added import for StageIDsRearranger and resolved StageIDsRearranger in TezCompiler . java to enable StageIDsRearranger
consolidated the mbean name from " org . apache . cassandra . concurrent : type = MESSAGING - SERVICE - POOL " to "
modified memory memory consumption logic in LotsOfOutput . java to include logging to improve visibility into memory consumption and provide visibility into initial and total
added imports for Document and BinaryDocValues , and modified DimConfig initialization in multiple classes to enhance documentation clarity and ensure consistent dimension management
updated LdapProperties and LdapAutoConfiguration to improve anonymous read - only handling and cleaned up related methods to enhance clarity and maintainability of LDAP
refactor DatabaseMetaData class to improve code structure to enhance maintainability and readability of the codebase
changed the access modifier of the EchoInputDoFn class from public to private to restrict access to the class for better encapsulation and encapsulation
added a ` finishMocking ` method to ` MockitoSession ` and modified ` DefaultMockitoSession ` to handle ` Throwable ` to
removed extraDeps parameter from GoTestDescription and added new test cases in GoTestIntegrationTest to streamline dependency management and ensure correct generation of
renamed buffer and handler fields in SPDYAsyncConnection and HTTPSPDYAsyncConnection classes to improve clarity and consistency to enhance
replaced ` BlockLiquid . getStaticBlock ( material ) ` with ` BlockLiquid . getFlowingBlock ( material )
updated intent data handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to split the background class name into parameters to enhance functionality by allowing dynamic
refactor AprEndpoint class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ client ] fix clifrontend to return streamingplan as json
fix a bug in the crafting manager that cause the recipe to not be add to the shaped recipes .
flume - 2203 . fix flume test that fail on window due to previous backup
simplified whitespace checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a regex pattern to compile the wildcard " pg _ temp _ . * " in NeuteredLinesFilter . java to improve regex matching
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a condition to check if the data type name starts with " INTERVAL " and modified condition checks for LONG and NCLOB types to
added a method to check if the WavefrontTimer is publishing a histogram and updated related timer registration logic to ensure that the WavefrontTimer is
added warmup configuration to the DivideUpstream class and updated the handleAdd assignment in ShenyuClientRegisterSpringCloudService
added a new method ` registerListener ` to ` ShadowSensorManager ` for listener registration to enable dynamic registration of sensor events based on rate and
added logging for HTTP 400 responses in SelectChannelServerSslTest . java to enhance debugging capabilities for HTTP responses overto 400 responses
added null check for Ignite before closing and modified logging visibility in AbstractFeatureTest to enhance stability by preventing potential NullPointerExceptions and
added conditional print statements for empty and non - empty sets in AbstractClient . java to improve user feedback by providing clearer error messages when no
pdfbox - 4892 : do n ' t crash on ioexception , return false instead
added tests for HdrCapabilities functionality in ShadowDisplayTest . java to ensure proper handling of HDR capabilities for Android N and M
added a finally block to reset the classLoader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve clarity of error messages and provide context for
added a default constructor to the Message class to provide a default constructor for the Message class
added a check for GUI class presence and updated priority logic in SerializableIdiom . java to ensure proper handling of SerializableIdiom instances and improve
updated ` PhoenixDecimalObjectInspector ` and ` PhoenixObjectInspectorFactory ` to accept ` PrimitiveTypeInfo ` as a
changed the type of gzipstream from GZIPOutputStream to OutputStream and added a check for response committed status to ensure that the original output stream is used
updated method signatures and variable names in Authenticator . java to improve clarity and consistency to enhance code readability and maintainability by using more d
removed conditional checks for EJS , _ , and org \ \ ibm \ \ , and org \ omg in DCD . java to
updated thread name retrieval in ThreadLeakTest to use a helper method to improve code readability and maintainability by encapsulating thread group name
added logging functionality to MethodInvocationPrivilegeEvaluator for better debugging to enhance debugging capabilities by providing visibility into forbidden methods
changed package from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` and updated
removed Lombok ' s ToString import from RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to
cloudstack - 7893 : fix path generation for user vms with iso
replaced the existing signal handler implementation in SigInt . java and updated the corresponding test cases in SigIntTest . java to improve handling of
replaced the static method ` isEmpty ` with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code readability and maintain
updated Spring Boot configuration annotations and added a discovery client bean in AxonAutoConfigurationWithSpringCloudTest . java to enhance integration with Spring
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and ensure proper method overriding
planner - 2853 remove deprecate planningentitydescriptor . uninitialize ( ) and use scoredirector . beforeentityremoved (
added buildTimeMs parameter to ArtifactInfo and updated related methods in TwoLevelArtifactCacheDecorator , ManifestRuleKeyManager , and CachingBuild
updated the method for calculating fixedRowSize in GroupByOperator . java to improve accuracy of row size calculation based on agg and hash table size
added null checks before adding block appearance in wtx and tx to avoid potential NullPointerExceptions when adding block appearance
added support for CNC currency pair and updated FTC _ BTC to CNC _ BTC in BTCEUtils . java to
updated the skewAllowance value in multiple classes to 15 instead of 5 and added a check for non - negative skewAllowance to improve flex
updated sorting logic in SongListActivity and Utils to use ItemSortBy . SortName instead of null to ensure consistent sorting behavior based on
added a method to read the request body as a byte array if it is a TypedByteArray to ensure that the request body is correctly serialized and
refactored block classes to extend LegacyBaseBlockWrapper instead of BaseBlock to improve code organization and clarity by encapsulating the wrapper class
refactor IcebergBranchExec to use snapshotRef for tag retrieval instead of snapshot retrieval to improve clarity and error handling when tag does
replaced ` newArrayList ` with ` Collections . singletonList ` for setting external groups whitelist in ` AbstractLdapMockMvcTest . java ` to improve
updated ` boxesSsboBinding ` initialization and modified bounce count logic in ` PhotonMappingDemo ` and ` HybridDemo
added validation for ` requirePasswordChange ` in ` IdentityProviderEndpoints ` and improved debug messages in ` IdentityProviderEndpointsMockMvcTests `
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure all instances of UnreadFields are marked as un
added conditional logic to retrieve the connection URL based on its closed state to improve error handling by providing a more specific URL based on the connection '
added a new test method ` testRequiredBody ` to the ` SpringmvcClient ` class to validate the body of the ` RestTemplate
updated regex patterns for user and password handling in CredentialInjector . java and modified JDBC URL format in CredentialInjectorTest . java to improve clarity
added " Item4 " to the list of menu items in ActionListenerCalledTwiceTest . java to support additional menu items in the test
updated test output and assertion logic in TestCoreParser . java to improve clarity and control over the result reporting logic
updated equality checks in SimpleNode to use ' id ' instead of ' children ' to ensure accurate comparison of nodes by using the correct ID
changed the visibility of the PopulatorContextStackItem class from public to package - private to restrict access to the PopulatorContextStackItem class
replaced ` int ` with ` long ` for ` numDocs ` and added a test for small sample from corpus in ` MoreLikeThis
reformatted code for better readability in QuestManager . java to enhance maintainability and clarity of the event handling logic
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
updated query construction in MongoSessionDataStore . java to use append operator instead of new BasicDBObject to improve clarity and correctness of expiration
added a new macro substitution for the unsafe load method in the CompilerDirectivesSubstitutions class to enhance functionality by allowing dynamic retrieval of long values from
update time zone entry for " Asia / Amman " from ARAST to EET across multiple language files to ensure accurate representation of
updated the id value from 90000010 to 90000011 to reflect the new version of the deprecation logger
hhh - 14650 - do n ' t return null if the transaction be rollback only
update downloadexternalfile . download ( ) to handle cases where the suffix be empty .
bug fix : use screen menu bar on macosx
added a new test method ` piecewiseIntegration ` to the ` GeoGebraCasIntegrationTest ` class to verify integrity of piecewise
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods from private
added a new variable ` modWhiteListPattern ` in ` HiveConf ` and a test for configuring ` hive . metastore .
added a mapping for invalid classes in EntryLoader . java to ensure that invalid classes are properly managed during entry loading
updated the method to retrieve the player ' s team instead of the sharded team to ensure the correct team is referenced in the player ' s
updated the cookie builder to use the host name from the domainHelper instead of a hardcoded value to ensure the cookie uses the correct domain for
added nullable validation logic in MissingColumnChangeGenerator and MissingTableChangeGenerator , and modified validation logic in ColumnSnapshotGenerator to ensure proper nullable validation
refactor multiple security token - related classes to improve code organization and readability to enhance maintainability and facilitate future development
added test cases and refactored CompositeIdRouter to use static final constants for separator and bitsSeparator to improve code clarity and ensure consistent
added snapshot handling and updated blob type handling in ` ExecutablePreparedStatementBase . java ` and ` PostgreSQLIntegrationTest . java ` to improve handling of
added checks for max _ cache _ size and max _ cached _ file _ size in DefaultServlet . java to ensure correct caching behavior and improve
added drag and drop handling functionality to tab drag events in JabRefFrame . java to improve user experience by ensuring correct tab data is processed
updated description creation in ExecutionUnitRunner and added a new test method in ExecutionUnitRunnerTest to improve clarity and accuracy of test descriptions and
replaced ` ! myVersion . isEmpty ( ) ` and ` ! buildTimeString . isEmpty ( ) ` with ` StringUtils . isNotEmpty (
changed access modifiers of several methods from public to package - private in TimeUtils . java and TimeUtilsTest . java to restrict access to these
removed the " jdk . reflect . useDirectMethodHandle " property and added a new method to check for SecurityFrame or InjectedInvoker
updated file name suffix check from " jpg " to " . jpeg " to ensure compatibility with newer file naming conventions
[ gr - 27474 ] fix native - image debug info display for host method .
added getIcon ( ) method to Data class and updated classDisplayed initialization in DataTableTopComponent and EdgeDataTable to enhance functionality by providing access to
added a check for the last occurrence of the last dot in the request name to avoid potential ArrayIndexOutOfBoundsException when retrieving the last segment of the request
add support for dollar signs tolerated in ` FindAndReplace ` and add a test for it in ` FindAndReplaceTest ` to
refactor connection handling in ` ProtocolProviderServiceJabberImpl ` and ` SmackPacketDebugger ` to use ` Connection ` instead of
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` to copy directory files and removed the old ` copyContents ` method from ` SpecWebAppTest `
added exception handling for unknown datum classes in JacksonUtils . java to ensure proper error reporting for unknown datum classes
replaced direct calls to ` buildAbiFromClasses ( ) ` and ` buildAbiFromSource ( ) ` with a method to
removed background padding and adjusted height calculation in SelectBox . java to simplify height calculation for better readability and maintainability
added normalization of database and table identifiers in ObjectStore . java to ensure consistent handling of database and table identifiers in the application
added schema handling for Oracle database in DbSqlSession . java to ensure correct schema is used when using Oracle
removed API client logout handling in HomeFragment . java to simplify the logout process by ensuring that we do n ' t log out because we handle
[ hotfix ] [ table - planner - blink ] fix the test failure of flink - flink - planner - blink planner
added null check for candidates before retrieving priviledged types in FastImportAction . java to ensure robustness by preventing potential NullPointerExceptions
updated logic in ContainerLifeCycle to use a boolean variable for managed state to improve readability and maintainability of the code
renamed ` IExecutionAttributesDialect ` to ` IExecutionAttributeDialect ` across multiple files to improve clarity and consistency in naming conventions
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is properly cleared
added null checks for ` loc ` before accessing ` dayStr ` , ` monthStr ` , and ` ordinal ` in ` CmdGetTime
added a ` DisruptorQueueExceptionHandler ` class and modified ` TabletInsertionDataContainer ` to check for null measurements before processing measurements to improve
deleted the Session2Token . java file from the media package to the class is no longer needed in the project
server : remove dest volume in case of failure to create a volume
added an ` Install ` shortcut implementation to the ` PopupDataProvider ` and ` InstantAppResolver ` classes to enable automatic installation of instant apps
added a constructor to LdapAuthenticationProvider that accepts a NullAuthoritiesPopulator interface and updated its usage in LdapAuthenticationProviderTests to ensure that
added a fallback mechanism for retrieving the retrolambda jar path in Executor and CN1BuildMojo to fall back to default version 2.
updated the method call from ` buildOrThrow ( ) ` to ` build ( ) ` in ` ShadowCamera . java ` to simplify the code
replaced ` FixedBitSet ` with ` Bits ` and updated the ` sortLiveDocs ` method to use ` Bits ` instead of `
added a method to handle null results in JMESPathExtractor to improve robustness by handling null results gracefully
updated import statements and added null and empty check for authorities in AuthorizeTag . java to improve code clarity and prevent potential NullPointerExceptions
updated assertions in tests for consistency and clarity to improve code readability and maintainability
server : fix typo in error message ( # 4558 )
updated class and method annotations handling in RobolectricTestRunner and added new test cases in RobolectricTestRunnerTest to improve
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize a more efficient socket connector implementation
added a method to compare partial partition keys in HiveAlterHandler and updated test cases in TestHiveMetaStore to ensure partition keys are correctly
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to allow toggling of icon
reformatted the condition for component activation in SimulationStatus . java to improve code readability and maintainability
replaced SharedBlockingCallback with Callback . Completable and replaced it with Callback . Completable in multiple classes to improve handling of handler deployment and
added workspace listener functionality to the PreviewControllerImpl class and modified the buildGraph method in PreviewUIController to improve workspace management and ensure proper graph
updated conditions in ReflectionFactory to include ` ReflectUtil . isVMAnonymousClass ` for method and class declarations to ensure that non - anonymous classes
refactor TransportHelper class to improve code structure to enhance maintainability and readability of the code
updated file path formatting in CatalinaAcegiUserRealm . java to improve readability and maintainability of the code
updated log messages in AmbariServer . java to reflect the initialization and initialization process to improve clarity of server and action manager initialization logs
added null checks for initialization and modify nodes in JSONWriter . java to ensure proper handling of null values and prevent potential NullPointerExceptions
refactor ` run ` methods in ` SliderAppsViewControllerImpl ` to accept a ` FileSystem ` instance instead of a ` String `
added a check to ensure the background manager is attached before attaching the window to avoid potential NullPointerExceptions when attaching the window
added functionality to set the current tab in AllAppsTabbed , Launcher , and PagedView classes , and updated related calculations in Workspace
added null check for the URL in BaseDataSource and created a test for it in SimpleDataSourceTest to ensure that a valid PostgreSQL URL is provided
added JUnit condition to EnableOnJre and modified PebbleTemplateEngine initialization to ensure tests are only executed on specific JRE versions
added ` EditNameDialog ` to handle directory creation in ` FileDisplayActivity ` to enhance user experience by allowing users to create a new directory
added actionToggleBarBorders functionality to set bar border width in multiple chart activities to enhance user experience by allowing toggling of border width in
updated SSL URI and host settings in OkCoinExchange . java to align with the latest API changes and ensure compatibility with the updated API
jbrules - 2852 : add a naturalscorecomparator to the acceptedforagertest to make it easy to
replaced ` FileChannel ` with ` SeekableByteChannel ` and updated file reading logic in ` BytesAndLines . java ` to improve
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter for clarity to improve code readability and
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
refactor conditional checks for serialization and LAMBDA serialization types in SerializationConfigurationParser . java to improve readability and maintainability of the
added imports for ActivityManager and modified heap limit setting in QuickstepProcessInitializer . java to enhance memory management functionality for debugging purposes
refactor code to improve readability and maintainability by reducing redundancy to enhance code clarity and maintainability by reducing redundancy
( chore ) camel - log4j2 - core : do n ' t swallow exception in abstractloadbundlesetest
hhh - 14850 - precompactedrow should only serialize the top - level deletion if it ' s not live
updated return statements in ICC _ Profile and ColorConvertOp classes and added a new InvalidRenderIntentTest class to improve rendering intent handling and
added MeterRegistryLifecycle to manage meter registry lifecycle methods to ensure proper resource management and closure of meter registries in the application
[ 3.0 ] change log level from warn to info for unexpected config center
added a try - catch block to the certificate generation method in CertificateFactoryTest . java to handle potential exceptions when generating a certificate fails
camel - 14263 : camel - core - simpletokenizer should handle ambiguity in binary operator .
removed redundant ` ensureWindowsDismissed ( ) ` calls in ` onTabUnselected ` method and added focus handling in ` IDE
updated error logging to include the user name in the error message to provide more context in error reporting for better debugging
updated matrix scaling and added null check for submesh names in OgreXmlLoader and SkeletonModelGpuSkinningTest to improve robust
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
marked the UpgradeResponse class as deprecated to indicate that the class is outdated and should no longer be used
added support for generating d . ts files in the JSweet transpiler to allow users to specify the output directory for declaration files during the
added a test for Kinesis fetch timeout in StreamConfigTest . java and updated fetch timeout calculation in StreamConfig . java to ensure correct fetch timeout
added a new file " . html " to the timestamp parameter in StreamingDataflowWorker . java to provide a structured representation of the timestamp for
updated the default value of METASTORESERVERMAXTHREADS from 100000 to 1000 to increase the maximum number of metastore server threads for
changed the return type of the onTaskSnapshotChanged method from void to boolean to allow the method to indicate whether the change was successful
update shadow radius setting in SwipeUpAnimationLogic to use shadowRadius instead of mMaxShadowRadius to ensure the correct shadow radius is applied
added a test for chain nesting and aggregation in ChainParserTests . java to ensure proper functionality of message processing in chain parsing
updated the loop condition in MarketSellAssetActuatorTest . java from ` limit ` to ` end ` and added a failure message
make polyglotcontextimpl use interactive source instead of internal source
updated conditional check for previousCachedFilePath in CreateKeytabFilesServerAction . java to simplify the logic for determining if the previousCachedFilePath is
added DisplayController import and modified WindowManagerProxy instantiation to include DisplayController to enhance functionality by integrating display management functionality
added a conditional check for the root directory in MetalFileChooserUI and SynthFileChooserUI implementations to determine the tooltip text for the
replaced ` getToolkit ( ) ` with ` Toolkit . getDefaultToolkit ( ) ` in ` LooksFrame . java `
[ hotfix ] [ table - planner - blink ] add captionobject to the list of recognise method signature
added unit tests for ` SAnimal ` and ` QCat ` entities in ` JPASQLBase . java ` to ensure correct
removed conditional drag index logic and printed point coordinates in FreeformFinSetConfig . java to streamline drag point removal process and improve debugging output
update moe version from 1.1 . 2 to 1.2 . 0 in DependencyBank . java to ensure compatibility with the latest Mo
updated runtimeError message and added program . spendAllGas ( ) method call in Runtime . java to improve error handling and ensure all gas gas
updated error formatting in ElementsShouldSatisfy , ZippedElementsShouldSatisfy , and ElementsShouldSatisfy _ create _ Test
marked the Weights class as deprecated to indicate that the class is outdated and should no longer be used
refactor unsafe registration logic into a new method ` registerUnsafePlugins ` and update ` registerPlatformSpecificUnsafePlugins ` to improve code organization and
added @ Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and implemented a test for blacklisted modules when not
set mCenterPagesVertically to false in AppsCustomizePagedView . java to disable vertical alignment for better user experience
removed redundant calls to migrationInfo . doneProcessing ( ) in MigrationRequestOperation . java to streamline code by eliminating unnecessary duplication
[ konnected ] rename host to baseurl in konnectedbinding
changed the type of attributeValue from ` Object ` to ` List < Object > ` in the WSFederationClaimsReleasePolicy and related tests to
added methods to create and process test tables in TestJdbcWithMiniLlap . java and modified query processing in LlapBaseInputFormat
added a new test method ` testCaseInsideBrackets ` to the ` CaseExpressionTest ` class to ensure correct parsing and deparsing of SQL
added copy mode handling for touch events in ConsoleActivity to improve user interaction responsiveness on different Android versions
refactor ` writeXmlOutput ` method to use ` XMLDocumentBuilder ` and use try - with - resources for better resource management to improve
camel - 16400 : fix nullpointerexception in abstractlistaggregationstrategy when exchange be null .
( chore ) camel - core : move camelexchangexchangeloghandler into camelexchangeloghandler so it can be use with
updated package and import statements in BasicConfigurator . java , ContextInitializer . java , and SocketMin . java to reflect the new class package structure
added a condition to check if targetVN has the PHI _ NODE flag before comparing with sourceVN to ensure that the comparison only
removed unused import of SharedStringSource in TestXSSFRichTextString . java to clean up the code and improve readability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation for debugging purposes
renamed multiple classes related to BoxAndWhiskerCalculator , BoxAndWhiskerCategoryDataset , DefaultBoxAndWhiskerXY
[ hotfix ] [ test ] move parameterized test to junit5
replaced instance variable ` NormUpdate ` with ` static ` for better readability and consistency to improve code clarity and maintainability by using
changed the access modifier of the IndexFileNameFilter constructor from public to private to restrict access to the constructor for better encapsulation
refactor IfStatementTest to simplify plugin definition and expression creation to enhance code readability and maintainability by reducing redundancy
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
refactor TypeAdapter to simplify null - safe method calls to improve code readability and maintainability by reducing redundancy
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new file ` EXIFReader . java ` and modified ` ImageProcessingService . java ` to include ` EXIFReader ` to
change the return type of ` toStandardUnit ` from ` UNKNOWN _ TO _ SDK _ VERSION ` to ` NONE ` in ` CloudWatchMeter
[ drools - 6892 ] fix applypmmlmodel command ( # 2323 )
corrected the spelling of " CounterCurrencyTransferStartedMessage " in the error message format to improve clarity and accuracy of error reporting for
added a conditional check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not
[ gr - 36411 ] fix a arch64 backend to handle branch target index out of range .
added a try - finally block around the initialization of JDKXRLogger and implemented a concurrent initialization test in XRLogTest to ensure proper
added find ( Class < ticket > ticketClass ) method to TicketCatalog , DefaultTicketCatalog , and HazelcastTicketRegistry classes to enhance ticket
removed hardcoded ` HS2 _ HTTP _ AUTH _ MODE ` from ` SSL _ CONN _ PARAMS ` and adjusted hardcoded
[ hotfix ] [ runtime ] fix sortmergeresultpartition lock issue
http : / / issues . apache . org / jira / browse / amq - 4748 - fix for http : / /
added a new parameter ` type ` to the ` PluginHandleController ` and ` PluginHandleDTO ` classes to allow sorting of plugin handles based
replaced ` tracer . nextSpan ( ) . name ( changedName ) . start ( ) ` with ` tracer . start ( ) `
added GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , GLKViewDrawableStencilFormat , and GLKViewDrawable
refactor login tests to use ` attemptLogin ` and ` attemptLogout ` methods instead of ` findElements ` to improve code readability and
fix pytorch library . pytorchviewasreal ( ) and pytorchlibrary . pytorchviewascomplex ( )
refactor lock name retrieval in SynchronizationStatistics . java to use a do - while loop for better readability to improve code clarity and
refactor Implements and ShadowPicker classes for improved clarity to enhance code maintainability and readability
refactor ` HttpClientOptions ` creation in ` RestTransportClient ` to use a new method for creating ` HttpClientOptionshttp2 ` to improve
added support for handling dynamic arrays in DynamicStruct and improved type name retrieval in SolidityFunctionWrapper to enhance type safety and provide clear
added a default value for " text - align " and " font - size " properties in InlineLayout . java and FontUtil . java to
added constructor to CopyStep that accepts two Path parameters and a boolean shouldRecurse parameter to enable recursive copying of commands based on their internal path
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) method throw concurrentmodificationexception . #
camel - 17850 : camel - jbang - fix the issue that camel - jbang - route - context - processor can not be
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` to utilize it for parsing flavor strings to improve code organization
changed the data type of ` witnessesAddressList ` from ` List < String > ` to ` List < ByteString > ` in ` W
added a check for non - empty results before printing to System . err to avoid printing empty results when there are no annotations present
refactor ConcurrentLinkedQueue to improve node removal logic and add a new RemoveLeak class for testing to enhance performance and prevent potential memory leak
added a boolean parameter ` addSpecialTokens ` to multiple ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] [ runtime ] use collections . ncopies for resourceprofiles creation
fix load single tsfile by add data size to the aligned chunk data
added session storage context constant and updated state setup in DuoSecurityMultifactorWebflowConfigurer to enhance session management functionality and improve
added schema validation test for XML document parsing in TestJspDocumentParser . java to ensure proper validation of XML schema in the JspDocumentParser
added a default constructor to TypeAdapter and modified @ Ignore annotations in Java17RecordTest . java and ReflectionAccessTest . java to ensure proper
replaced the ` kill ( ) ` method with a ` prepareKill ( ) ` method and modified event handling in the ` Debugger ` class
refactor AntPathRequestMatcher class for improved readability to enhance maintainability and clarity of the codebase
remove unnecessary parameter from createResourcePolicy method across multiple classes to simplify method signatures and improve code readability
added null check for _ deflaterEntry before releasing it in GzipHttpOutputInterceptor . java and modified test assertions in BlockingTest . java
added JUnit @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure tests are executed after each execution
updated MD5 calculation to use Normalizer for normalizing unicode characters to ensure consistent handling of Unicode characters in checksum output
refactor command handling in Example . java to improve command execution logic to enhance code clarity and ensure proper command execution handling
make keylistener final and add multiple @ Override annotations in BasicProfilerState and BaseAppState classes to ensure immutability and improve code cl
replaced ` objectToSave ` with ` dbDoc ` in ` MongoTemplate ` and added a new test for saving JSON strings correctly to
added a method to check for multiple remote addresses in RequestUtils and created a corresponding test in RequestUtilsTest to ensure that multiple remote addresses are
replaced ` String ` with ` ObjectBuilder ` in the ` getJobArgs ` method and its usage in ` JsLibrary . java ` to
refactor CookieManagerTest and UnmodifiableMaps to improve host address retrieval and proxy handling to enhance code clarity and maintainability by centralizing
modified glyph processing logic in GlyphLayout . java and added a new test in BitmapFontTest . java to improve handling of whitespace wrapping runs and
added ` pauseOrResumeSplits ` method to ` PulsarSourceReaderBase ` and ` PulsarPartitionSplitReaderBase
added a new configuration variable ` HIVESCRIPTIDENVVAR ` in ` HiveConf ` and updated ` ScriptOperator ` to include it to
refactor the getListedTermCounts method to accept a sort parameter and streamline term counting logic to enhance flexibility in counting terms based on
added a new action class ` UseSeparateStepSizeAction ` to manage the " UseSeparate Step Size " functionality in the Jog
added user ID handling and modified unlock action logic in FileMenuFilter . java to enhance security by ensuring unlock actions are only displayed when the user
hbase - 25836 fix roundrobinsplit . split ( table name , scan , startrow , endrow , regionname )
updated header values for Sampled from " false " to " 0 " and changed PARENT _ SPAN _ ID from " 3 " to "
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
added support for JSNI fullscreen functionality in the Gwt application and graphics classes to enhance user experience by allowing customization of fullscreen
changed the type of ` issuers ` from ` String ` to ` URI ` and updated its parameter name from " login " to " identifier
add a new test class SoulApacheDubboClientConfigurationTest for testing Dubbo configuration to ensure that the Dubbo
updated file path handling in SkinLoader to use ` resolve ` instead of ` Gdx . files . internal ` to ensure compatibility with the
updated logging level from warn to info in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreCacheLoader to improve logging detail for
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple files to ensure thread safety when accessing shared resources
changed the package declaration of the Compiler class from ' java . lang ' to ' java . lang ' to ensure proper organization and organization of the
added handling for CodeException in NullDerefAndRedundantComparisonFinder . java to improve error reporting for redundant code blocks
refactor DashRendererBuilder to use DefaultHttpDataSource for ManifestFetcher and update related method signatures to improve code clarity and maintainability by
added a new configuration property for maximum number of prepared statements cached per database connection to provide a configurable maximum number of statements cached per the database connection
change return type of set methods from WritableConfig to Configuration in Configuration and DelegatingConfiguration classes to provide a more appropriate return type for setting configuration
added error handling for command operations in AutoScalingHandler to ensure proper error reporting for invalid command payloads
updated the implementation of the CombinedDataset class to improve data handling efficiency and maintainability
replaced the variable ` buf ` with ` b ` in the ` InflateIn _ DeflateOut . java ` file to
added a method to remove cryptography restrictions in the Utilities class and updated MainViewModel to utilize this method to improve security management by ensuring
added a delayed task for teleporting and generating chunks in the Entity class to improve responsiveness by allowing immediate execution of the teleportation and
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to verify the functionality of
refactored vectorization context handling in Vectorizer . java to ensure consistent initialization and retrieval of vectorization contexts
fix wialon position speed decoder ( fix # 399 )
hbase - 25850 disable metric user aggregate if user _ enable _ conf be false
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` JsonObject `
replaced ` mUserPresent ` , ` mVisible ` , and ` mAttached ` boolean fields with ` mAttached ` boolean and added
refactor multiple classes including AsyncFile , HttpClientRequest , HttpServerRequest , and NetSocket , and ReadStream to improve code organization and maintainability
updated zadd method to include params parameter to enhance functionality by allowing parameters to be passed to the zadd operation
[ ds - 3952 ] clean up unused variable and use utf - 8 encoding
corrected the spelling of " TestAsyncMessages " from " TestAsyncMessagesPerformance " to " TestAsyncMessagesPerformance " to improve code
added a method to retrieve an Optional < BuildTarget > for better target handling in ` VersionedTargetGraphBuilder ` and implemented tests in ` Version
updated condition checks for EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW in TimeZoneProvider . java to ensure accurate validation of
update return statement in EscherBlipRecord . java and add a new test class TestOLE2Embeding . java to ensure correct
removed redundant row and column assignments in JSONParser . java to streamline code by eliminating unnecessary assignments
replaced ` @ Nullable JavaType . FullyQualified ` with ` Pattern ` for type matching in ` FindTypes . java ` and added
added functionality to retrieve local trailers for playback and updated DETAIL _ THUMB _ HEIGHT to improve user experience by allowing users to
replaced ` StrikeCache . freeLongPointer ( long long ) ` with ` removeGlyphInfoFromCache ( long glyphInfo ) ` in
fix : record process instance end when terminate end event be trigger
camel - 16400 : camel - xml - bind should use @ xmlrootelement instead of @ xmlelement to determine the name of the
updated endpoint URL in SimpleHttpClientTests from " http : / / www . apereo . org / scottb . html " to
added a new ` defPrefs ` BooleanOption to reset all preferences to default values in ` JabRef . java ` to allow resetting
changed access modifiers of several fields and methods from private to protected in ThriftMetrics and ThriftServer classes to enhance encapsulation and restrict access to these
added deprecated channel handling for manual fan speed in DanfossAirUnitHandler to ensure users are aware of their use instead of deprecated ones
( chore ) camel - core : use hamcrest assertion instead of junit in test
removed duplicate code for stopping expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to improve robustness by preventing potential null pointer exceptions
server : set root disk size in vm detail if it be not already specify in uservmmanagerimpl
added PreferenceManager2 and PreferenceExtensionsKt imports and modified visibility logic in PredictionRowView . java to improve preference management and ensure visibility
[ geos - 7892 ] api : add bbox = 35 , 0 , 0 , ... , and add test for invalid bbox cr
added validation methods for value , position , and depth parameters in LibrustzcashParam . java and updated the IVK byte value
deprecate ithrowableentity in favor of fml cpw . mods . fml . common . registry . ithrowableentity
added random coordinate assignment for x and y in NodeDataImpl . java to enhance randomness in node data representation
updated the validateRefreshToken method to include a happycase method and added a new test for missing scopes in TokenValidationTest to ensure that the
refactor JavacStep . java to use try - with - resources for better resource management to improve code clarity and ensure proper resource
updated the VERSION constant from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release version
added a condition to check for ITEM _ TYPE _ DEEP _ SHORTCUT in LoaderCursor . java to ensure proper handling of shortcut items
added hashCode ( ) method to TimeGranularitySpec class to ensure proper hash code generation for different object types
changed visibility of classes BooleanWeight and DisjunctionMaxWeight from private to protected in BooleanQuery and DisjunctionMaxQuery classes to allow subclasses to
added a boolean flag ` useProxyResponseCode ` to control proxy behavior in ` HttpURLConnection ` to ensure proper handling of NTLM proxy behavior
aarch64 : fix miss scratch register in macro assembler .
server : fix vm size calculation for host that do n ' t exist
added a null check for maxScore in JSONResponseWriter and included a score query in TestDistributedSearch to ensure correct handling of score results
updated the audio recoder ID from 22050 to 44100 in AudioRecorderTest . java to align the audio recoder with the new
updated newOriginX calculation in RocketFigure . java to use subjectBounds _ m . getMinX ( ) instead of subjectWidth to
updated DruidQueryBasedInputFormat to check for null or empty Druid data source and changed interval initialization to use DruidStorageHandlerUtils
added a new constant ` ORIGINAL _ TYPE ` and updated the regex pattern in ` CustomProperty ` to include it to enhance the functionality
added a static method ` create ( Table parent , Map < String , Object > data ) ` to create an instance of ` IndexImpl `
simplified the boolean return statement in Dates . java to improve code readability and maintainability
updated schema compatibility checks in SchemaCompatibility . java and added new test cases in TestSchemaCompatibility . java to ensure correct handling of reader and writer
added support for retrieving and validating persistent attribute types in QueryUtils . java to enhance functionality for handling entity paths and associations in the query processing
added synchronization around the spans list in TestSpanHandler . java to ensure thread safety during concurrent access to the spans list
updated method signatures in multiple classes to use List < ? > instead of List < Object > to enhance type safety by allowing for more flexible
updated exception handling in ViewContextImpl to use InvocationTargetException and added logging for authentication errors to improve logging clarity and enhance error visibility for better debugging
refactor OAuth2AccessTokenEntity to improve code structure to enhance maintainability and readability of the code
updated error messages in multiple classes to include " The request is rejected " to clarify that the service cannot process requests due to the STATUS
added new project files for Default - 1024w - 1366h in GdxSetup . java to support iOS and iOS moe resources
added a ConcurrentMergeScheduler to the MockAnalyzer instantiation in TestSearcherManager . java to ensure that the MockAnalyzer uses a concurrent merge scheduler
added null check for SessionState and improved list handling in GenericUDTFInline . java to enhance code robustness and prevent potential NullPointerException
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ticket # 2691 : prevent the spreadsheet key event from be prevent by default
added persistenceProviderService and sessionFactoryService to the HibernateBundleActivator and refactored related test cases in OsgiTestCase to
update timeout calculation to use connectionTimeout instead of elapsedTimeMs ( start ) to ensure accurate timeout calculation based on connection timeout
added a directory for non - packaged resources and refactored the component file creation logic to improve resource management and ensure the component file is
updated file name extraction logic in Compat . java and modified file existence checks in FileOpener . java to improve file path handling and ensure
changed the return type of the row ( ) method from Cell < T > to void to allow the method to return a void value instead of
added port clash check in BesuCommand . java and corresponding unit tests in BesuCommandTest . java to ensure that multiple
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 initialization to allow dynamic mask generation for WebSocket connections based on null status
refactor the genUDTFPlan method to return a Pair < RelNode , RowResolver > instead of a single RelNode to improve
added counters for bucketed preferred and non - preferred node selected counts in NodeScheduler and TopologyAwareNodeSelector classes to enhance node selection statistics tracking
added a new file ` Person . java ` containing a class ` Person ` with getter and setter methods to provide a simple representation of a Person
added a boolean flag ` hasOwnerPtr ` to track the presence of an owner pointer in ` CPlatformWindow . java ` to improve cl
added a clock text view and modified fade - in and fade - out functionality in PlaybackOverlayFragment . java to enhance user experience by providing
remove unnecessary calls to ` updateComparatorOutputLevel ` across multiple classes to streamline the code for better readability and maintainability
removed the ` final ` modifier from the ` IMPL ` variable and added exception handling for loading the ` SegmentReader ` class to improve code
added SwingUtilities import and invoked cell updated event firing in a Runnable to ensure event handling is executed on the UI thread for better responsiveness
removed default INET _ ADDRESS _ ADAPTER and COLLECTION _ TYPE _ ADAPTER , updated related method signatures and
added methods to retrieve and validate the value of a single element in the Series class to ensure that the Series class correctly handles null values and throws
updated option name from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java
updated boundary checks in GeoRelationUtils and GeoUtils to use constants instead of hardcoded lon and lat values to improve code readability and maintain
server : fix virtualmachinemanagerimpl to use getdiskofferingid ( ) instead of getId ( )
added cleanup method to hazelcast test to ensure all instances of Hazelcast are properly terminated
added exception handling for AES cipher instantiation in BlockCipherTest . java to ensure robust error reporting for unsupported cipher modes
added filters to print operations logs in QFileClient . java to improve visibility into printing operations logs for better debugging
add aop proxy to beandefinitioninjectprocessor and create childintroduction and parentinterface
fix ( sip ) : set current connection address if not already set
replaced Math . addExact with MathUtils . cappedAdd for demand adjustment to improve code readability and maintainability by using a dedicated
pdfbox - 4892 : use try - with - resources , a suggest by valerybokov
replaced calls to ` TvApp . showSearch ( ) ` with direct intent creation for ` SearchActivity ` to streamline search functionality
removed unnecessary ' this ' keyword from constructors and simplified the ` toString ` method in ` GrepOptions ` and ` MutableIndexColumn ` classes
http : / / issues . apache . org / jira / browse / amq - 4898 - add osgi service to the
added the @ Autowired annotation to the PersonRepository class in RepositoryIndexCreationIntegrationTests . java to facilitate dependency injection for
changed the exception type from Exception to InterruptedException in the stop method and updated the log message format in TestVertxUIManual . java
refactor case statements in BlockCactus . java to include new case statements to improve code readability and maintainability by consolidating case
refactor mouse handling in ThemeSelector to use a MouseMotionAdapter to improve mouse interaction handling to enhance user interaction responsiveness by ensuring correct
added abstract class AbstractMinMulticastFlowControlRhsPadding to extend AbstractMinMulticastFlowControlFields with additional padding bytes to enhance the
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance text editing functionality by allowing
modified exception handling in StatTokSentAnnotator constructor and improved null checks for modelFile and multiWordRulesFile to enhance robustness by
added a check for distinct queries and modified group column handling logic in ClusterIntegrationTestUtils and QueryGenerator classes to enhance functionality to support distinct queries
[ gr - 27474 ] make stringsimiliarity and stringsimilarity public and add getclosestlinkage methods to jn
fix typo in language property name ( # 2696 )
added null check for children before iterating to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition fields and updated return statements in MessagePackParser . java and corresponding tests in MessagePackParserTest . java to improve
added locale management to AbstractSolrMorphlineTestBase to ensure consistent locale settings during tests
removed conditional checks for launcher state and adjusted size calculation in LauncherFragment . java to simplify code logic for better readability and maintainability
add a new test class MetricsReporterTest for metric reporting functionality to ensure correct functionality and functionality of metric registration in the MetricsReporter class
camel - 14263 : camel - osgiserviceregistry should use a concurrenthashmap instead of a concurren
implemented ` equals ` and ` hashCode ` methods in the ` Rectangle ` class to ensure proper comparison and hashing functionality for rectangle instances
( chore ) camel - kafka : use a random name for the sink list in streamkafkaptest
updated DSAParameterGenerator to use BigInteger . valueOf ( ) instead of BigInteger . valueOf ( ) for setting valueN and primeCertainty
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and modified LlapBaseInputFormat and LlapTaskComm
make clientoutofmemoryhandlertest async so it do n ' t swallow exception
added a method to get the CMO object ID for shape classes and updated the object ID assignment in multiple shape classes to ensure consistent object ID
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of fetching distinct post
refactor Driver and SearchTravRet classes to improve code organization to enhance maintainability and readability of the codebase
fix : remove unused extensionadapter reference in managedkubernetesclient
refactor subtitles to use a utility method for displaying information to improve code readability and maintainability by centralizing information retrieval logic
updated JUnit imports to use @ BeforeEach and @ AfterEach in TestAuthHandlerBoot . java and TestRSAProviderTokenManager . java
added error handling for generating summary HTML in BugCollectionBugReporter . java to improve robustness by logging exceptions when generating summary HTML
removed unnecessary parameters from the reset method for intPool and bytePool in TermsHash . java to simplify the code by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated API level check from S _ V2 to TIRAMISU and added a new WindowSessionDelegateU class to enhance compatibility with
refactor URL handling logic to improve clarity and maintainability to enhance code readability and ensure correct port assignment based on request scheme
added support for MSSQLDatabase in the ForeignKeyConstraintGenerator logic to ensure proper handling of foreign key constraints in MSSQLDatabase
hbase - 26969 fix checkstyle violation in hstore . replacestorefiles ( )
remove debug print statement in ContainerEmzuliPipe _ BC8 . java and update item extraction logic in PipeBehaviourEmzuli .
danielwagnerhall : make htmlidentifier logging configurable
updated method calls from ` getProducedTableSchema ( ) ` to ` getTableSchema ( ) ` in ` HiveLookupTableSource . java
refactor SimpleBasePlayer , ListenerSet , ExoPlayerImpl , and ExoPlayerImpl to improve thread safety and state verification to enhance
updated schema name handling in SequenceSnapshotGenerator to use CatalogAndSchema to ensure compatibility with different database schema configurations
updated color scaling in SpriteBatch and SpriteCache , and added AlphaTest functionality in AlphaTest to improve color rendering accuracy and enhance debugging
fixed - redissonconnection . send ( ) and redissonconnection . send ( ) method of redissonconnection class throw classcastexception .
added logic to track and store the base core URL in statisticYearCores to ensure that only valid base URLs are recorded in the statistic yearCores
renamed the method ` launchTask ` to ` launchTaskFromView ` and updated related functionality across multiple classes to improve clarity and consistency
updated MorfologikFilter to utilize a configurable dictionary instead of a hardcoded dictionary resource to enhance flexibility and maintainability by
updated sortOptions keys from " stars " and " CommunityRating " to " CommunityRating " and " CriticRating " to
added imports for ViewKt and ListRow , and modified visibility logic in CustomListRowPresenter . java to improve code clarity and ensure
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future development
replaced calls to ` accordingTo . isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to ensure compatibility with
added JavaTimeModule initialization and configuration for Jackson in StandardJavaScriptSerializer . java to enhance JSON serialization capabilities for JSR310 support
updated import statement for org . apache . log4j . MDC to org . slf4j . MDC to align with the
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver . java ` to simplify type handling and improve code clarity
removed unnecessary whitespace in CoinbaseTransactionStatusDeserializer . java to improve code readability and maintain consistency
added a method to retrieve the build target list from BuckConfig and modified ProjectCommand to include a force building condition to enhance flexibility in
replaced the initialization of IdleStrategy with a call to System . gc ( ) in Ping . java to ensure proper garbage collection and avoid potential
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and related classes to standardize the use of ` Content
removed redundant lines in ReportPanel . java for clarity and consistency to improve code readability and maintainability
[ hotfix ] [ test ] add null check for slotowner in testinglogicalslot
added a new recipe class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime .
removed multiple super ( ) calls from various exception classes to streamline code by eliminating unnecessary super calls
added a method to set the UIID in the ScaleImageLabel class to ensure the icon is updated correctly when the UIID is set
replaced ` foundEntry ` with ` update ` for better clarity to improve code readability and maintainability by using a more descriptive
added support for the " - cp " command - line argument in the Main . java file to enhance flexibility in command - line argument handling
updated the compiler parameter from options to compiler in the avutil . java file to ensure compatibility with the latest Java compiler requirements
updated initialization condition in StorageService . java to ensure proper initialization of the service
refactor Test7196045 . java for improved readability to enhance maintainability and ease of understanding
updated density and decay values from 1.5 f and 0.9 f to 1.0 f and 0.95 f in Shader
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` and updated related methods in ` OidcRedirectActionBuilder
[ calcite - 1181 ] inlining of unique constraint , inlining of external unique constraint
added federated sharing functionality to the UsersAndGroupsSearchProvider and EditShareFragment classes to enhance user sharing capabilities based on user ' s fed
added a method ` needsDocValues ( ) ` to return true in ` TestBBoxStrategy . java ` to provide a way to determine if
refactor code to improve readability and error handling in multiple classes to enhance maintainability and clarity of error reporting
added a new method ` intForEach ` to ` Int2ObjectHashMap ` and updated the ` IntObjConsumer ` interface to include null
fix the global map storage to not associate scoreboard save data with the temporary scoreboard .
changed the return type of the count methods from Long to long in multiple MongoRepository and QueryDslPredicateExecutor classes to accommodate larger
updated MTree snapshot creation logic to differentiate between timestamp and line number checks to improve accuracy of MTree snapshot creation and enhance logging clarity
lucene - 1748 : vectorutil . dotproductscore ( byte [ ] a , byte [ ] b ) do n ' t
added a new parameter ` IRREVERSIBLE _ THRESHOLD ` and its corresponding getter and setter methods in ` DynamicPropertiesStore ` , and
refactor locale handling in GpsMainActivity and MainPreferenceActivity to use Systems ' s setLocale method to improve code organization and maintainability by
added a check for the creation of a new database in LauncherClings and implemented the wasNewDbCreated method in LauncherProvider to
refactor assertions and iterator handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability
simplified the condition for determining if the datamodel is null to improve code readability and maintainability
added a check to ensure the current thread is not the same as the current thread in TestIndexWriterDelete . java to prevent unnecessary operations on
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access the method for better encapsulation
updated imports and refactored ItemRowAdapter to use ModelCompat for
added import statements to set SVG attributes in the document to ensure SVG elements are correctly imported from the specified attributes
reformatted error handling in ConsoleKeys . java for better readability to improve code clarity and maintainability
added a check for " WaitForResult " extra before setting waitingForResult in CodenameOneActivity to ensure that " WaitForResult " is
updated constructors in HitQueue , SpanPositionQueue , PriorityQueue , TopOrdAndFloatQueue , TopOrdAndIntQueue , TermAutom
added handling for widget descriptions in WidgetCell . java to manage and display widget descriptions based on item ' s status to improve user experience by providing
added a maximum attribute count limit check in the Attribute class to prevent registering aliases that exceed the defined maximum attribute count
move predicatestest to impl . predicates so it can be use by other test
camel - 16400 : added case - insensitive option to the defaultheaderfilterstrategy . thanks to benjamin for the
refactor InlineLayout and Breaker classes to improve string wrapping logic to enhance code clarity and maintainability by using more descriptive variable names
added nullability checks and improved view handling in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
refactored the ` shouldInstrument ` method to simplify the logic for determining if a class should be instrumented based on Android SDK to improve
added a condition to return the index of the last column in the table based on the association ' s insert destination condition to ensure proper handling of
updated memory limit file path handling in CmdModifierTest . java to use a dedicated method for retrieving the maximum memory limit to ensure compatibility with different
replaced ` CxxDeps . of ( ) ` with ` EMPTY _ INSTANCE ` in multiple files to simplify dependency management and improve code read
added a null check for the rule and improved error handling in JavaTestRule . java to ensure that the source under test is not among
add support for minecraft 1.9 . 4 and 1.10 . 2 for crossversionproxy
added a check for negative index atIndex in StringUtils . java to ensure that atIndex is valid before proceeding with operations
increased timeout duration from 100 milliseconds to 500 milliseconds and increased sleep duration from 1000 milliseconds to 5000 milliseconds to allow more time for tests to
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to enhance flexibility by allowing the assist content requester to be
updated the handling of the ` readableWitnessAddress ` string to encode the ` witnessAddress ` to ensure that the ` readableWitnessAddress ` is
updated DefaultMethodRegressionTests . java file to enhance test coverage and improve code clarity
refactor WorkloadManagerMxBean class for improved readability to enhance maintainability and ease of understanding for future development
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to ensure compatibility with the latest
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and corresponding test cases in FaultTolerantExceptionClassesTests to ensure proper exception handling
[ hotfix ] improve error message in configbuilder
added ` Map < String , String > ` parameter to several ` applyTunerConfigs ` methods and ` NoOpTableTableConfigTuner
added tracking for in - progress instances in the PinotRealtimeSegmentsManager to ensure that only active segments are added to the list of segments
added a check to return null if the touchable is disabled to prevent potential NullPointerExceptions when interacting with disabled touchables
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
added a null check for cacheConfig in AbstractCacheAllPartitionsRequest . java to ensure that a valid cache configuration is created before proceeding
refactor module installation logic to use a new method for checking if the node package is already installed to improve code clarity and maintainability by
added Jetty @ ManagedObject annotations to MBeanContainer and Destroyable classes to enable monitoring of MBeans registration and component destruction
modified conditional check in LongClickableSpan . java to include a comment to improve code readability and maintainability
updated string comparisons in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` ` . equals ( )
updated isReifiable check in ` Types . java ` and added new classes ` T6558559a . java ` and ` T
update player print statements to include block information for first and second positions to enhance clarity of player information for better debugging and tracking
( chore ) camel - kafka : fix thread safety issue
removed the default implementation of the examples ( ) method in Schema . java to simplify the code by eliminating unnecessary default implementation
modified the condition for checking thread status and added a return statement in AgentRunner . java to ensure proper handling of thread interruption and improve
remove time column from dataset ' s dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure the dataset ' s time column
added a null check for shards in FacetComponent . java to ensure robustness by preventing potential NullPointerExceptions
replaced direct calls to ` LinkerProvider ` with ` CxxPlatforms . getParseTimeDeps ( ) ` in ` Rust
added name property with getter and setter methods in JaasAuthenticationProperties , JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties to
added debug print statements to CFGPrinterObserver and IdealGraphPrinterDumpHandler , and modified exception handling in IdealGraphPrinterDumpHandler to
refactor scan range handling in BaseQueryPlan and add small scan threshold configuration in QueryServices to improve flexibility in handling small scan hints and
updated the ` RetryGatewayFilterFactory ` to include ` routeId ` in the ` toString ( ) ` method call to include the route ID
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
refactor ` onOverviewShown ` method to utilize ` DiscoveryBounce . showForOverviewIfNeeded ` instead of ` onActivityControlHelper
refactor conditional checks in CheckIndex . java and add a new test method in TestPointValues . java to improve code readability and ensure
updated the publish method to use ` updateLastState ` instead of ` true ` to ensure that the latest state updates are correctly updated
added double quotes around string list values in MetastoreDirectSqlUtils . java to ensure consistency in SQL query formatting
added a null argument to the ` exp . add ( 0 , null ) ` method in the ` SpliteratorCollisions ` class to ensure
danielwagnerhall : add textcaseinsensitive and exacttextcaseinsensitive to webelement . text ( )
simplified while loops in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
# 1186 - enh : add queryengine . forwardonlyfetchsize ( ) for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid sending a 404 response when a channel is already closed to improve error handling
pdfbox - 4892 : fix arraylist allocation , a suggest by valerybokov
updated window radius initialization to use rounded corners support to ensure compatibility with devices that support window rounded corners
replaced ` ShapeDrawable ` with ` View ` and refactored background and icon handling in ` DesktopTaskView . java ` to
refactor UpstreamCheckServiceTest to initialize the upstreamCheckService instance to improve code clarity and ensure proper initialization of the upstreamCheckService
updated logging statements in AbstractSession . java and AbstractSessionManager . java to use debug level instead of warn for session timeouts to improve logging cl
replaced an error logging statement with a return statement in ZooKeeperHiveLockManager . java to simplify the code and improve clarity by directly
[ hotfix ] fix checkstyle violation in java . lang
added a boolean flag ` containsCustomData ` and modified mipmap generation logic in ` FileTextureArrayData . java ` to ensure m
updated string literals in assertions from double quotes to single quotes in DefaultMaskingFormatterTest . java to improve readability and consistency in test output
added selectable state management and methods to manage touch events in the List class to ensure that touch events are only eaten when the List is selectable
added a check to return false if the value count of vector fields is zero in LlapArrowBatchRecordReader . java to ensure that the
added file separator expansion functionality to PolicyContext and updated related tests to ensure proper handling of file separators in policy processing
replaced HashSet with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance and memory usage during query processing
refactor TLSRestrictions class to improve code structure to enhance maintainability and readability of the code
http : / / issues . apache . org / jira / browse / amq - 4748 - make sure to close the kafka
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance functionality by allowing more flexible handling of ign
added a check to delete the " LOCK " file in the RocksdbMavenPomCache class to ensure that the lock file is
hbase - 25836 minizookeepercluster should use ip address for the client port ( # 2181 )
added error handling and logging for HTTP connection in RestClient . java to improve robustness by ensuring proper resource management and logging during HTTP connections
updated the method to use ` segmentTarURIStrs . toArray ( ) ` instead of ` segmentTarURIs . toString ( ) ` to
updated loginStudent calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure the
added null checks for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions during execution
increased the number of strings from 500 to 100 in TestSpecialOperations . java to accommodate larger string sizes in the testing framework
replaced the static ByteArrayInStream class with a direct instantiation of ByteArrayInStream to simplify the code and improve performance by eliminating unnecessary
renamed the method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in naming conventions
added a method to check if a state is a direct substate in AbstractStateMachine to improve state management by avoiding unnecessary transitions
added handling for ListMultimap and SetMultimap types in MultimapSubject and corresponding tests in MultimapTest to ensure correct equality checks for list and
added JoinOperation interface to the PostJoinOperation class to support additional join operations in the post join process
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` for testing PostgreSQL data issues to ensure
http : / / issues . apache . org / jira / browse / amq - 5035 - fix for amq5035 .
rename AvaticaDatabaseMetaData . java file to improve clarity and consistency in naming conventions
updated MongoDbConnectionPoolProperties to use @ DurationCapable annotations for life , idle , and max wait time values to improve clarity and
fix siputils . createaudiomediaformat ( ) to use sipactivator . getmediaservice ( ) .
refactor filters handling in FacetProcessor to return a boolean indicating applied filters to improve clarity and control over filtering behavior based on applied filters
added a timeout handler to the ShuffleHandler class and modified the state check to use a constant to improve code readability and maintainability by
replaced hardcoded value for ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED
updated log messages in XPathBuilder and added debug log statements in XQueryBuilder to improve clarity of log messages and enhance debugging information for better debugging
replaced the method of obtaining the data resource from ` this . getClass ( ) ` to ` DataResource ` in ` NNDataSet .
added a new test class EdgeCasesTokenizerTest to validate tokenization behavior with escaped backslashes to ensure that the tokenizer correctly handles escaped backslashes
added a check for the existence of the " atlas " property in the map to ensure that the required property ' atlas ' is present before proceed
camel - 14284 : camel - core - remove property placeholder from support . properties component . thanks to benjamin for
added a call to levelDbDataSource . closeDB ( ) in BlockchainTest . java and removed unused receive listener in KafkaTest . java
refactor CoreMarkdownNodeRenderer to use a List < String > instead of an array for splitting strings to improve code readability and maintainability
reordered import statements in WebServiceInboundGatewayParserTests . java to improve code readability and maintainability
replaced ` ImmutableList . Builder < Object > ` with ` List < Object > ` in ` SQLBindings ` and added logging for deprecated constructors
added a check for the OpenJDK architecture in the Virtual Machine class to ensure compatibility with both Apple and OpenJDK environments
added keepalive configuration to the ReactorClient configuration to improve connection reliability and prevent connection issues
replaced hardcoded string " a _ position " and " a _ normal " with constants from ShaderProgram to improve code maintainability and
camel - 14263 : camel - jbang - allow to inject a property component into the registry .
modified account retrieval logic in UnfreezeBalanceActuator . java to check for null first before accessing it to improve robustness by avoiding potential
update version number from 3.8 . 0 to 3.8 . 1 in the XMPPServer class to reflect the new alpha release status
refactor return statements in mmm Types . java and ppp Types . java for clarity and consistency to improve code readability and maintain
updated assertions in StorageGroupProcessorTest . java to adjust sequence file size and flush manager initialization to ensure correct processing of work sequence TsFile processors
added environment dumping functionality and updated class loader management in multiple classes to enhance debugging capabilities and ensure compatibility with the EE10 environment management
added a new parameter ` waitbeforestart ` to the ` FFMpegVideo ` class to allow for a longer wait time before starting the
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and its usage across multiple classes to simplify the constructor and
removed unused imports and added new test methods for list index functionality in AccessorsTest . java to streamline code and enhance test coverage for list
added a new method ` compileMethod ` in ` GraalCompiler ` and modified the ` frameMap ` method in ` LIRGenerator `
replaced ` @ Ignore ` annotation with ` @ ConditionalIgnore ` in ` DynamoDbTicketRegistryTests ` and ` BaseAuthenticationRequestR
fix boat y - coordinate calculation for water target . close # 2323
updated the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher . java ` class to simplify the conditional check for experimental options
added new methods ` then ` in ` BDDAssertions ` to handle assertions using ` Path ` and ` AssertProvider ` to enhance assertion
rename ` hp ` to ` hostField ` and update related references in ` ForwardedRequestCustomizer ` and ` ForwardedRequestCustomizer
updated logging level from debug to warn for multiple Kubernetes config files and added a warning message for missing Kubernetes config files to provide clearer feedback on
added handling for file uploads in UploadListActivity and utility methods in FileStorageUtils to improve user experience by allowing cancellation of file uploads based on
added new ` ProviderLoader ` and ` ProviderLoaderListener ` classes to handle crypto provider installation events to improve the handling of provider installation success and
replaced ` Span ` references with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests ` to
updated the ` SelectFromDatabaseChangeLogStatement ` to use a wildcard column configuration instead of a hardcoded column name to simplify the query by
hhh - 14850 postgresql dialect should use hibernate ' s namequalifiersupport for getcurrentschemacommand ( )
refactor partition calculation logic to handle cases where dataMembersSize is non - positive to ensure accurate partition count calculation when there are no data members
added scheduler state checks and improved test cases in ` ExecutionScheduleManager ` , ` ExecutionSchedulerImpl ` , and ` ExecutionSchedulerTest `
removed unnecessary string conversion in BoxBuilder . java to simplify code for better readability and maintainability
reformatted argument checks in StatisticMap . java for consistency to improve code readability and maintainability
increased the return value of the getStagedRectSlideEnd method from 383 to 500 to adjust the slide duration for better user experience
updated button messages in WaveInfoDialog and PlacementFragment to use localization bundles instead of hardcoded strings to enhance localization support and improve user experience
updated condition in BukkitMain to check if the plot is owned by the plot area to ensure the KILL _ ROAD _ I
added touch exploration functionality to ShadowAccessibilityManagerTest and refactored TouchExplorationStateChangeListener handling in ShadowAccessibilityManager to
pdfbox - 5328 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
replaced calls to ` getPropertyAsString ( TestElement . NAME ) ` with ` getName ( ) ` across multiple classes to standardize property handling
refactor NPOIFSFileSystem instantiation to use POIFSFileSystem . create instead of new NPOIFSFileSystem constructor to improve code
added imports for PlotArea and modified return logic in Move . java to retrieve the plot area to enhance functionality by allowing dynamic movement based on the
updated version regex from " 0.0 " to " [ 0 - 9 ] + . [ 0 - 9 ] + . [ 0 -
updated the range check for ` count ` from ` 0 ` to ` 1 ` in ` Filters . java ` to ensure that ` count `
( chore ) camel - kafka : add clientid to consumer config if consumerthreads > 1
added error handling for javac execution in JavacCompiler . java to improve robustness by providing clearer error messages when the execution fails
ggb - 2333 repaint the view only when the select index change
camel - spring - batch : fix checkstyle violation in springbatchproducer
added a method ` isAnimationFinished ` to check if the animation has finished based on the current state time to provide a way to check if
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` to ` LoginMockMvcTests . java ` and modified
added null check for otherUrl in TimeLineCursorAdapter and updated refreshing text in HomeFragment to improve robustness by preventing potential NullPointerException
modify the ` stopEditing ` method to accept a ` newValue0 ` parameter and replace spaces with spaces to enhance the functionality of the ` stop
refactor ObjectHashSet class to improve performance to enhance efficiency of hash set operations
refactor null comparison logic in DataUtilities . java to use Arrays . equals for better readability to improve code clarity and maintainability by
fix nbt compare , allow for deletion of enchanted books ( mc - 12770 )
add a new test class ` AsyncResourceTest ` to validate the functionality of the ` asyncGet ` , ` asyncPut ` , and `
rename ` TARGET _ FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP _ SUFFIX ` and
added exception handling for SendFailedException in MailService . java to improve debugging and error reporting during email sending
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder . java ` and updated
added multiple test cases for ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct retrieval
added a semicolon to the end of a block in FileListListAdapter . java to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile ` and ` OCFileListAdapter
updated the index parameter in the removeViewInLayout method from 1 to 2 to correct the view index being removed from the layout
removed unnecessary " org . eclipse . jetty . websocket . util . server . internal . " from WebSocket configuration files to simplify the configuration
updated the ` expiresSeconds ` parameter from ` true ` to ` false ` in the ` S3Request ` constructor to ensure that the policy
fix jfxradiobuttonanimation not call when timeline be null
updated condition checks in DeweyNumber . java and added a test for zero splits in DeweyNumberTest . java to improve error
added a static string variable ` categorySetString ` and modified the return statement to replace " Category : " with an empty string to improve cl
corrected the spelling of " Invalid close control status code " to " Invalid close code " in the test assertions to ensure accurate validation of
added null check for classLoader in WebappLoader and updated expected repos length in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to
hhh - 15936 - fix the issue that managedattributemap . getinheritedfields do not return null for mapped superclasses
pdfbox - 4892 : improve error message , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to validate the functionality of ` PorterStemFilter ` in a zip file to
modified the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and added a ` success ` parameter to
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch
added synchronization to chatPanels for thread safety to ensure thread safety when accessing shared resources
removed the call to Sys . touch ( ) from multiple classes to streamline the code by eliminating unnecessary calls to Sys . touch (
added " - mardu " to the list of tracked files in HgCmdLineInterface and removed untrackedFiles methods from VersionControl
camel - 14263 : camel - netty - make it easy to configure read timeout on the endpoint .
added ' final ' modifier to Vector3 fields in DirectionalLight , PointLight , and SpotLight classes to indicate that these fields are final
added width and height calculations to X11GraphicsConfig and WGLGraphicsConfig classes to ensure minimum dimensions are set to 1 for all graphics configurations
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a consistent way to
added an AnnoFilterTreeSet class to handle annotation classes and enhanced the findAnnotatedClasses method to improve annotation handling and enhance performance in finding
modify newLength calculation logic in BytesColumnVector . java to handle integer overflow to ensure proper size allocation and prevent overflow in large buffers
fix flakiness in writebehindmapstorewithevictionstest . testwritebehindmapstorewithevictions ( #
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI `
implement polyfunction . isEqual ( geofunction ) to compare two geofunction object and return true if they be equal
added a null check for the table before retrieving the column class to prevent potential NullPointerExceptions when accessing the table
added a try - catch block around the Class . forName call in CustomChangeWrapper . java to handle potential ClassCastException to improve robustness by ensuring
added functionality to retrieve BuckConfig and modified constructors in DistBuildConfig and RecordingFileHashLoader to enhance functionality by allowing optional path whitelist
modified the ` isDoubleEntryEnabled ` method to return a false value instead of a default value and added visibility handling for export warnings in ` Export
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests that broke track down and fix functionality
changed the return type of ` doJoin ` methods from ` void ` to ` boolean ` and updated corresponding return statements in multiple classes to improve
removed the ` getAutodeps ( ) ` method from ` JavaLibraryDescription . java ` to streamline the code by eliminating
added FLAG _ ACTIVITY _ NEW _ TASK to the intent in LauncherTimelineCursorAdapter . java to ensure the intent has a new
added a new boolean method ` checkPagingOrderBy ( ) ` to ` SpiQuery . java ` to enhance paging functionality in the query
updated repository URLs in ` RepositoryConventionPluginTests . java ` to include additional repositories to ensure the correct URL is used for Maven repositories in the
http : / / issues . apache . org / jira / browse / amq - 4898 - add affilience task for
added error handling for invalid URIs in TagLibraryInfoImpl . java to improve robustness by ensuring that invalid URIs do not start with " . /
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array update handling in CacheKey . java and updated related tests in CacheKeyTest . java to improve performance and correctness of cache key
refactor file type detection across multiple files to utilize FileSystemProvider for improved compatibility to enhance file type detection functionality across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
refactored ` ShadowVirtualDeviceManager ` to use ` shadowDevice . getVirtualSensorCallback ( ) ` instead of ` shadowParams `
added a condition to check if the http session context is not removed from the session if the contextBeforeExecution is not equal to ensure that the
modified the loopback address handling logic in NetUtil . java to improve clarity and correctness of InetAddress enumeration logic
updated BUF _ SIZE to DEFAULT _ BUF _ SIZE and refactored related variables to use DEFAULT _ BUF _ SIZE instead of
added secure validation checks and improved exception handling in KeyInfoReferenceResolver , TransformXPath , and ResolverLocalFilesystem classes to enhance security checks and
added a check for the icon change listener in the Label class to ensure the icon change listener is only added if it is already available to avoid
added support for Russian language in the Language . java file to enhance localization capabilities for Russian users
hhh - 11385 fix sqm duration conversion from second to nanosecond
disable frame state verification in SubstrateGraphKit . java to improve performance by reducing unnecessary state verification
added system property resets for ` robolectric . enabledSdks ` and ` robolectric . alwaysInclude ` in tests to
added support for the " org . slf4j . LoggerFactory " system class in ViewClassLoader and its corresponding tests in ViewClassLoaderTest
update changepackaging logic to handle " jar " packaging and add a test for removing default packaging to ensure correct handling of default pack
simonstewart : filedownloadviaketest and filedownloadviaketest now accept ` ` txt ' ' file extension
added a call to nk _ buffer _ clear ( cmds ) in GLFWDemo . java to reset the buffer before processing commands
updated JogService to use preferredUnits instead of defaultUnits and refactored related methods to improve clarity and maintainability of unit management
updated date formatting in DatePatternConverterTest to use UTC timezone to ensure consistent date formatting across different time zones
removed duplicate return statements in Terminator . java to improve code clarity and maintainability
updated error messages and improved file URI validation in FileSystem , LocalFileSystem , and DistributedFileSystem classes to enhance clarity of error messages and ensure
replaced the scheduled executor service with a custom timer task in JabRefFrame . java to improve performance by utilizing a single - th
( chore ) camel - ftp : use awaitility in unit test
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties . java ` to ensure thread safety during concurrent operations
added ` ignore ` methods to manage ignored exceptions in multiple log classes to enhance logging control by allowing users to ignore specific exceptions during execution
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary casting of ` byte ` for ` item . getDamage ( ) ` and ` contents [ i ] . getDamage (
added a call to cleanImage ( ) in PanelManager . java to ensure the image is properly cleaned before use
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing memory and chunk mapping in Solr to enhance directory management capabilities and improve resource management
added null check for ` ic ` in ` PdfCleanUpProcessor ` and updated test cases in ` PdfCleanUpProcessorTest ` to ensure
updated the comparison expression in the assertQueryEquals method to use " field1 _ s " instead of " maxDocFreq " to ensure consistency
modified ExtendedOperatingSystemMXBeanImpl . java file to improve performance and maintainability of the code
added functionality to install left commands in SideMenuBar to enhance user experience by allowing users to selectively add commands to the title area
added a new boolean field ` advanceWindowed ` in ` AppSettings ` and modified ` setUpWindow ( ) ` calls in ` Tweet
added SybaseDatabase support to the condition in DropPrimaryKeyGenerator . java to ensure compatibility with Sybase database functionalities
refactor Client class to improve performance to optimize resource usage and reduce execution time
[ java ] reset idle strategy after append position to leadershipterm when leader be ready .
replaced invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) and added shouldDelayChildPressedState ( ) method in Cell
added a return statement to the NearCachedClientMapProxy class to prevent further processing in the code
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a shutdownHttpServer method to handle server shutdown exceptions to ensure graceful shutdown of the HTTP server and handle potential exceptions gracefully
camel - 15836 - camel - aws2 - s3 : upgrade to version 0.17 . 0 .
[ hotfix ] [ runtime ] rename parameter _ tm _ id to task _ manager _ id
added a method to drop keys that exist in 2.2 . 7 versions of the database to ensure proper handling of unique keys during 2.
added a new test class ` TestThriftCLIServiceSecurity ` and modified password handling in ` TOpenSessionReq ` to ensure security checks are
added a maxEnergyLimit variable and updated energy limit calculation in VMActuator . java to ensure accurate energy limits based on constant and fee
added ` maxInMemorySize ` property and its getter / setter in ` HttpClientProperties ` , and modified ` webClientPlugin ` constructor to
modified caching logic in Cache . java to improve performance and efficiency of cache operations
added new files RunCucumberTest . java and StepDefinitions . java to implement unit tests for Cucumber to facilitate
added error handling for parsing JSON double values in TypeJsonUtils . java and corresponding test cases in TestArrayOperators . java to improve robustness
updated hexadecimal string encoding from " 656469746564 " to " 8080656469746564 " in Utf8
added checks for parameter settings before appending them to the URL and improved parameter handling in RestInvocationHandlerTest to ensure that only valid parameters are
camel - 16400 : camel - circuitbreaker - add maximumnumberofoutputs to loadbalance and circuitbreakerloadbalancer ( #
updated document frequency assertion in TestIndexWriterExceptions . java to ensure the maximum number of buffered documents is set before proceeding with the document frequency
replaced ` putUnencodedChars ` with ` Sha1HashCode ` for hash calculation across multiple files to improve performance and readability by
added methods for enumValue , intValue , and longValue in AsmRuntime . java to enhance functionality for handling enum values in the AsmRuntime
[ 1.19 . x ] add some more biome tag to the biome ' s biomes .
refactor AsyncImageLoader to use a dedicated thread pool for image loading to improve thread management and simplify thread management
changed access modifiers of fields and methods in BaseTableUpsertMetadataManager from private to protected and initialized custom variables to enhance encapsulation and provide custom
added " \ u0623 \ u064a \ u0627 \ u0631 " to " \ u0623 \
replaced `
camel - 16400 : camel - jbang - add -- repos option to run - dcamel . run - dcamel . jbang
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding unnecessary score collection
added a cleanup method to delete temporary files and set the last modified timestamp in OnStartupTriggeringPolicyTest . java to ensure that temporary files
replaced requestFocus ( ) method with requestFocusInWindow ( ) in FilterConditionEditor and added focus handling in FindAction to improve focus
[ hotfix ] [ runtime ] make checkpointscleaner implement autocloseableasync
added a new file ` XPathWhiteSpaceTest . java ` to test XML validation with whitespace to ensure that whitespace - related elements are correctly processed in
bonsai : do n ' t override bonsai trie log if it ' s empty
refactor FilledNewArrayInstruction class to improve code structure to enhance maintainability and readability of the code
increase test timeout for slow machine
updated parentPath logic in OCFile . java to ensure it ends with a slash to improve path handling by ensuring it ends with a slash
added a print statement to indicate the failure loading the skin file to improve debugging by providing context on the failure to load the skin file
added ` markDirty ( ) ` method and modified ` LgoLevel2BatchSubscription ` and ` LgoGroupedLevel2Update ` classes
added a static final UNDEFINED constant and modified the return statement in TestStep . java to use it to improve code clarity and maintainability by
updated assertions from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure proper handling of null values during callback registration
refactor UploadJobMultiPartOperation to implement IdentifiedDataSerializable and improve asynchronous execution handling to enhance data serialization capabilities and ensure proper handling of
added error handling for failed recovery in MessageDatabase and JobSchedulerStoreImpl to improve robustness of recovery recovery process and enhance logging clarity
bugfix : verticalnodeviewlayoutstrategy should not ignore child of non - leaf node
replaced the ` pos ` variable with a ` sizeMask ` and updated the ` ensureAvail ` method to include a size mask to
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to temporarily disable tests that are cr
fix arrayindexoutofboundsexception in storageproxy . getmessages ( )
updated the formatting of the parameters in FileManager . java to improve code readability and maintain consistency
updated transform function types and their implementations in TransformFunctionType . java and TransformFunctionFactory . java to improve clarity and consistency in naming con
8027654 : add getSimpleName ( ) and getEnclosingElement ( ) method to variableelement and package - info class
updated RFC version from RFC3280 to RFC5280 in multiple Java files to ensure compatibility with the latest RFC standards
updated version number from 2.17 . 3 to 2.17 . 4 and changed type casting from int to Character in SearchAnnotationVisitor to
refactor ListActivity and NoteAdapter to use SparseBooleanArray for selectedItems and improve memory management to enhance performance and efficiency in handling selected items
reformatted conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils and added a new test for absolute resource defaults to ensure correct file path formatting and validate
updated PreviewPositionHelper to accept a Context parameter for multi - window mode and adjusted clipping insets based on split - screen bounds to improve layout scaling
[ java ] consolidate leadership term creation logic into a single method to improve code readability and maintainability by reducing redundancy
added a new exception handling log rule and updated assertions in PMDCoverageTest . java to improve error reporting and clarity in test assertions
refactor ByteArrayInputStream logic and introduce a new Skip class for skipping bytes to improve efficiency and clarity when skipping bytes in the stream
reordered conditional checks in UpdaterTask . java for better readability to improve code clarity and maintainability
changed the visibility of MAX _ HEADERS from final to public and added a check for header size in Peer . java to allow access to the
added " rt . jar " to the list of STANDARD _ LIBRARIES in ModClassLoader . java to support additional library libraries in the
refactor connection handling logic in AbstractHandshakeHandler . java to improve clarity and structure to enhance code readability and maintainability while ensuring proper
updated method signatures and added exception handling for heterogeneous granules in RasterLayerResponse and RasterManager classes to improve error handling and
added a check to ensure the response is not committed before sending an error 500 to avoid sending an error 500 when a response is already committed
updated condition checks in HttpSession . java for better clarity and consistency to enhance code readability and maintainability by using more descriptive conditions
modified the fade - out functionality of ` HomeGestureTutorialController ` and ` SwipeUpGestureTutorialController ` to ensure
add a name to the prefab data if it does not exist in PrefabFormat . java and improve logging in PrefabSerializer . java
removed unnecessary initialization of ScimGroupExternalMembershipManager and updated externalGroupSet to include " internal . superuser " to streamline group management
added a validation check for the amount in the TransferActuator class and modified the thirtyDays variable to ensure that the transfer amount is within
updated path separator calculation in FileResolverTestBase . java to ensure consistent file path handling across different operating systems
apps - 2323 show command error instead of show input help panel
updated description retrieval in GpsMainActivity and refactored event handling in AnnotationViewFragment to improve code clarity and utilize EventBus
added a conditional check for the number of pages in JsoupNonVisualRegressionTest to save a PDF file if it does not already
replaced ` AndroidBufferAllocator ` with ` AndroidNativeBufferAllocator ` and added a new ` AndroidNativeBufferAllocator ` class to enhance buffer
added logic to handle flags starting with " ! " in Main , PrimaryItem , and Util classes to ensure proper handling of flags that start with
added a NOPMD comment to the query execution in JDBCHistoryCache . java to indicate that the query should not be executed
updated comparison in BattlePassManager to use direct comparison instead of string comparison to improve code readability and maintainability
refactor QueuePriorityTest to improve test coverage and add a toString method to PriorityElement to enhance test reliability and provide a clearer representation
refactor affinity group creation and deletion tests in AffinityApiUnitTest . java to improve code clarity and maintainability by using dependency injection
added null check for main . command and updated argument condition checks to include OPTIONS . HELP to improve user experience by providing a clearer help
updated LightOutputStream initialization parameters in PropertyTypes , ByteIterableBase , and LongBinding classes to optimize output stream size for better performance
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` to control the visibility of blank lines in ` ClassWriter . java ` and created a new class ` T
added an assertion to verify the length of the sn field to ensure that the sn field is properly validated before proceeding
added a null check for the file extension before checking its type to prevent potential NullPointerExceptions when processing file extensions
replace return statement with continue in ContactRightButtonMenu . java to ensure the loop continues without terminating action
[ hotfix ] [ runtime ] fix potential npe in slotsharinggroupassignment .
simplified the screen index calculation in InstallShortcutReceiver . java to improve code readability and maintainability
refactor socket handling in PlainSocketImpl to use a delegate variable for file descriptor management to improve code clarity and ensure proper cleanup of socket
added functionality to manage and clear removed items in the BookmarkListRootFragment and MediaDetailPagerFragment to improve the management of removed media items
corrected a typo in the log message from " center of element " to " in - view center point " to improve clarity of
added a new file ` bug4865918 . java ` implementing a GUI with a scroll bar functionality to address bug 4865918
replaced the initialization of VelocityEngine with a direct reference to Velocity in ADKerberosOperationHandler . java to simplify the code and improve read
replaced specific imports with a wildcard import and added group triggers handling in QuestCommand . java to simplify import statements and improve message messaging for
added a method to start a file chooser in AccountsActivity for selecting GnuCash account files to improve user experience by allowing users to
added Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes and imported it from Lombok . ToString to facil
added a constant for the configuration URI in CloudService . java to improve code readability and maintainability by centralizing configuration URI usage
removed setViewportComponent and JScrollPane settings from BrowserPanel . java to simplify the code by eliminating unnecessary components
updated key handling in LwjglInput and related classes to use KEYCODE _ FORWARD _ DEL instead of KEYCODE _ DE
added a conditional check to enable indexing of MIME types based on the configuration to ensure mime type parts are only indexed when enabled , improving flex
added a pattern to match author comments in JSDoc . java to improve the handling of author information in constructor declarations
added new constant names for CREATE _ TOTAL _ DATABASES , CREATE _ TOTAL _ TABLES , and DELETE _ TOTAL _ PART
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig instead of a list of table names
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling to enhance
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al
added support for firefox in WebAudioWrapper . java to ensure compatibility with both IE and firefox platforms
added a method ` appendInterceptor ` to ` GrpcServerBuilder ` and removed a private constructor in ` InterceptorConstants ` to enhance server interceptor
added a default charset option to the CREATE TABLE statements in TestCompatibility . java to ensure compatibility with the InnoDb database schema
[ hotfix ] [ table - planner - blink ] fix the bug of streamingaggtemplate . allocateoutgoing ( )
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
added a ` hasFrom ` boolean property and corresponding methods in ` Delete ` , ` DeleteDeParser ` , and ` DeleteTest ` to
refactor SynchronizeFolderOperation to differentiate between success and multi - status status handling to improve handling of multi - status responses and enhance error
refactor applicable test matching logic into a new method ` applicableListTests ` to improve code readability and maintainability by centralizing the logic
updated regex pattern in LogAnalyser . java to remove unnecessary whitespace to improve code readability and maintain consistency in formatting
( chore ) camel - integrationtest : disable google cloud integration test
corrected the spelling of " exclusive " in the value method and adjusted the parameters accordingly to improve code readability and maintain consistency in parameter
refactor license selection logic in CCLicenseStep . java to improve type safety and clarity to enhance code readability and maintainability by
added a null check for ifcRoot . getGlobalId ( ) before inserting it into the guidIndex to avoid potential NullPointerExceptions when ifcRoot is
replaced ` actual . equals ( ) ` with ` objects . getComparisonStrategy ( ) . areEqual ( ) ` for comparison to improve
added logic to manage the last margin bottom value in NoNewLineParagraphCssApplier and ParagraphCssApplier , and sanitized content in Para
added a new file TestArrayCopyToFromObject . java with a test method for copying an array to ensure that ArrayStoreException is thrown when copying
replaced double quotes with single quotes for Python path insertion in BuckPythonProgram . java to ensure proper handling of special characters in path formatting
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 589 . async
added deprecation annotations and modified the ` findFiles ` method to include a new parameter for visitAllFiles to improve code clarity and deprecate
added JUnit Ignore annotation to TestLlapSignerImpl . java to mark the test as unstable due to issue HIVE - 226
added a null check for the exception before calling the doRequest method in TestInternalInputBuffer . java to avoid potential NullPointerExceptions during request handling
refactor autoloadCall method to include a lowerName parameter for better clarity to enhance the control over class loading by preventing multiple locks from
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` and modified the ` hlsSupported ` logic in ` Play
updated localhost path handling in OneKDC and related classes to ensure correct hostname resolution to improve robustness by ensuring localhost is correctly formatted
added a boolean flag ` jsr250AttributeFound ` and modified return values in ` Jsr250Voter . java ` , and created
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability by standardizing import statements
added HS2 _ PROXY _ USER constant and modified sessionParams handling in ConnectionFactory . java to ensure that the session parameters include the proxy
added SNAPPY codec to HdfsCompressionCodec and corresponding unit tests in HdfsProducerTest to support compression with BZip2 and SN
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper timing during HTTP client operations
replaced setBlank ( ) with setCellType ( Cell . CELL _ TYPE _ BLANK ) and updated cell removal logic in XSS
update glyph position calculation and append buffer dimensions in GlyphLayout . java and update text in BitmapFontTest . java to improve font wrapping accuracy and
refactored image loading and configuration in Fabric8IstioIT . java for improved clarity and maintainability to streamline code
replaced ` ReportPlaybackStartAsync ` with ` reportPlaybackProgressAsync ` in ` PlaybackController . java ` and ` Utils . java
use a bufferedinputstream instead of a bufferedinputstream to avoid memory leak
fix map loader hitting eviction on initial load
updated the return statement to include ERROR _ BIT in the ResponseFlag class to ensure correct handling of error responses in the code
[ ds - 3892 ] fix default policy for anonymous object ( # 3893 )
refactor CompositeFont initialization to use ConcurrentHashMap for thread - safe access to improve thread safety and performance when managing CompositeFont instances
modified the calculation of prefHeight in Tree . java to correctly initialize prefHeight to ensure prefHeight reflects the correct positioning of the node
drools - 1748 dmn feel helper should provide clearer error message for unknown variable error
removed unused import statements across multiple Java files to improve code cleanliness and reduce unnecessary dependencies
changed method visibility from private to public in TaskAnimationManager and modified long press handling in NavHandleLongPressInputConsumer to enhance accessibility
added null checks for node ID and edge types in ElementFactoryImpl and ImportContainerImpl , and modified edge handling in ImporterGDF to
[ beam - 10720 ] log warning when drop unknown instructionresponse and stateresponse
updated Bin instantiation to use sessionFactory for creating a session and added a new test for flow file larger than the bin limit to ensure proper session
added functionality to find the core with a specified position in the enemy to improve the accuracy of core building by ensuring the correct core is
added a check to skip copying content - length header in the RestTemplateCopyHeaderFilter to ensure that the request does not copy content - length
added handling for character and class literals in Java2TypeScriptTranslator and updated test assertions in SyntaxTests to improve handling of literal values and ensure
updated filter calculations and size settings in multiple classes to improve the responsiveness and responsiveness of the user interface
hbase - 11393 add canary - allregions option to list all region on regionserver ( liu shaohui )
removed unused NodeModule import and simplified ImmutableMap initialization in TestCassandraConnector . java to improve code clarity and reduce unnecessary dependencies
added a call to resetCursorPosition ( ) in the KahaDBStore class to ensure the cursor is reset before processing new data
added minimum size adjustments in CallDialog and OneToOneCallPanel to ensure proper resizing of the frame based on its minimum size
fix broken state information during world gen . close # 177956
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static variables and simplify test setup to enhance code readability and maintainability by
added null checks and removal logic for KerberosPrincipalEntity and KerberosPrincipalHostDAO in KerberosPrincipalDAO . java to improve robustness
removed the parameter ` true ` from the ` getTableSnapshot ` method call in ` StatsOptimizer . java ` to simplify the method call by elim
refactor error handling and maintain logic in AprEndpoint . java to improve clarity and error logging to enhance error handling clarity and maintain
updated the error message for the Android build hint to clarify that the key must be defined in the Monetization setup section to provide
updated the method of creating a ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and
[ drools - 6271 ] fix package name resolution for spring boot - inf class ( # 6273 )
added a assumption to the CheckIndexTest class to skip tests based on the current runtime version
removed the ` mContext ` parameter from the ` assignTargetsForSplitScreen ` method and related logic in ` RemoteTargetGluer ` to
refactor LeaderLatch class to improve code structure to enhance maintainability and readability of the code
added methods for initializing Zksnark parameters in SolidityNodeHttpApiService . java and invoked it in SolidityNodeHttp
refactored transaction confidence handling and added a depth future listener in TransactionConfidence . java and ChainSplitTest . java to improve clarity
refactor ` CodenameOneImplementation ` , ` Location ` , ` MapComponent ` , and ` Media ` classes to improve clarity
set default platformName to " ios " in JavaSEPort . java to ensure compatibility with iOS by default
chore : integrate new gapic - generator - java and rules _ gapic ( # 49 )
updated condition checks for ` $ wnd . canvasHelpers . context . mozDash ` and ` $ wnd . canvasHelpers . context
pdfbox - 4071 : fix typo find by codespell on fossies . org
added error handling for outgoing frame processing in AbstractExtension . java to improve robustness by catching exceptions during frame processing
replaced direct call to ` new Caller ( ) ` with ` AccessController . doPrivileged ( ) ` in ` ContextHandler . java ` to enhance
added logic to set the parent of child categories to null to ensure all child categories are removed from the database
added language support for the contrib manager title in the ContributionManagerDialog to enhance user experience by providing a clearer and more descriptive title
added a ` vwap ` field and its getter / setter to the ` Ticker ` class and modified the ` Ticker ` constructor
added functionality to display a ` noWidgetsView ` in the ` SearchAndRecommendationsScrollController ` and updated related methods to improve user
added a new ` RenderGraphAPI ` class and integrated it into ` WorldRendererImpl ` to facilitate the creation of ` T
added a primary color setting in NCFirebaseMessagingService to enhance the visual appearance of the messaging service
refactor ShadowUsbManagerTest for improved readability to enhance maintainability and ease of understanding for future development
updated parameters in AbstractDifferenceRecommenderEvaluator and added logging statements in AverageAbsoluteDifferenceRecommenderRecommenderEvaluator and RMSRecommenderEvaluator to
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure that the selected configuration updates correctly
added a maximum of 1 to the width and height calculations for stroke width and height in AndroidGraphics . java to ensure that stroke width and height
replaced HashMap with LinkedHashMap for options in multiple classes to maintain the insertion order of options in the code
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a dedicated
( chore ) camel - main : migrate routetest to junit5
added new files WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , and integrated tests for the WebSocket client functionality to
[ ds - 3640 ] fix ds - 3640 service name config issue ( # 3641 )
refactor authentication equality check by introducing a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability
added a check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to ensure
replaced direct calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` to improve code readability and maintain
added an ` @ Insecure ` annotation to the ` MessageBuffer ` class and updated its constructor and methods accordingly to indicate that the class is not
added new configuration variables for various Hive classes in HiveConf . java to enhance configuration flexibility for Hive integration
replaced instances of scopes and policies with a HashSet in ResourceSet . java and added a null check in DefaultResourceSetService . java to
changed the visibility of ` decrefOnClose ` and ` readerFinishedListeners ` from private to private final and modified the constructor of ` Multi
refactor multiple socket channel implementation classes to improve code organization and maintainability
danielwagnerhall : fix test that fail in 2.49
modified the ` getFirstTypeArgument ` method in ` LinkedHashTreeMap ` , ` LinkedTreeMap ` , and ` GsonTypesTest `
changed method signatures from Set < Integer > to KeySet < Integer > and Values < Integer > in Int2IntHashMap . java to improve
added duration parameter and methods to manage background color and animation duration in FlipTransition . java to enhance flexibility by allowing customization of the
removed trace logging for subsAreValidForStreaming in DLNAResource . java to simplify the code by eliminating unnecessary tracing
update version numbers for Forge from 8 to 9 and 10 to reflect the latest features and improvements
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages related to ` getCallerClass `
added support for Java 15 and 16 language levels in ParserConfiguration and created new classes Java15Validator and Java16Validator to enhance functionality and support
updated conditional logic for setting background padding in ExpansionViewHelper . java to ensure proper padding for the status view based on the number of replies
fix partitionbackup replica anti - entropy task on v3.9
added metadata management functionality to SeedUrl and SeedResource classes to enable retrieval and saving of metadata from the seed URL
added a null check for the declaration before setting the pattern to avoid potential NullPointerExceptions when the declaration is null
modified TestCoprocessorWhitelistMasterObserver . java file to enhance test coverage for coprocessor functionality
added package name handling in AnnotationActionValidatorManager and updated test cases in AnnotationActionValidatorManagerTest to ensure proper package path formatting and validate action
updated IterableTest to use Arrays . < Object > for null handling and added a new test for null values to improve type safety and ensure correct
added default stream ( ) , parallelStream ( ) , spliterator ( ) methods to MapIterable , PrimitiveObjectMap , and MapIterableTestCase
clone the notifInfo object before returning it to ensure that the original notifInfo is not modified before returning it
replaced ` commandConstants . getString ( key ) ` with ` commandConstants . getString ( key ) ` and added an iterator for command keys
refactor AEADBlockCipher class to improve code readability to enhance maintainability and facilitate future development
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a null check for ` id ` in ` PackageResourceTable . java ` and changed the default resource mode from ` best ` to `
added a condition to check if both ` ulSize ` and ` ulPos ` are zero before retrieving the head and post tables buffer to ensure
refactor SignPlugin to accept a list of HttpMessageReader as a parameter to enhance flexibility by allowing multiple message readers to be passed to
modified Int2ObjectCache . java file to improve performance and maintainability of the cache implementation
removed validation check for MavenDeployer in StandardMavenAuthenticationProvider . java to streamline authentication process by eliminating unnecessary checks
refactor AudioNode class to improve code structure to enhance maintainability and readability of the code
refactor SSL context initialization and error handling in LinkyHandlerFactory and EnedisHttpApi classes to improve SSL handling robustness and provide clear
added imports and modified the HiveFunctionRegistry class to include a function replacement map and streamlined the registration process to improve code readability and maintain
http : / / issues . apache . org / jira / browse / amq - 4398 - fix mbean name for broker mbean
modified the ` getBuildTargetForAlias ` method to handle both ` possiblyFlavoredAlias ` and its concatenation logic to ensure proper handling of
camel - olingo2 - improve handling of empty feed in odata2 consumer
added support for equivalent Hive versions in MetaStoreSchemaInfo . java to ensure compatibility with both version 0.13 . 1 and 0.13
server : fix npe in uservmmanagerimpl . expungevm ( )
mark multiple methods as deprecated in AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
updated ONDashClockExtension and AlarmReceiver to use a new method for retrieving alternative titles to improve code readability and maintainability by
updated test class names and assertions in GoogleAuthUserConfigTable and TotpEndpointIntegrationTests to improve clarity and accuracy of test cases
replaced ` editor . commit ( ) ` with ` editor . apply ( ) ` across multiple files to ensure that changes to shared preferences are
added TestIdleListener to the session definition in AsyncTimeoutTest . java to enable better handling of session idle events during tests
[ beam - 11347 ] add test _ id to bigqueryioit test table name ( # 11347 )
added background resource and reset method in HotseatPredictionController and BubbleTextView to improve visual consistency and resource management in the application
removed the ' getFlushAfterQuery ' keyword from the BooleanProperty declaration to simplify the property declaration for better readability
add unit test base on user forum issue
[ api ] fix limeexplanation . getactivefeatures ( ) to return model . all _ outputs
added a new argument list to the AppleSimulatorController and InstallCommand classes to allow users to specify additional arguments when running with - r
refactor code to use a genericStyledArea for retrieving current paragraph and line positions to improve code readability and maintainability by reducing
added checks to see if pipeline and manager are available in ContainerBase and StandardContext classes to ensure that only available lifecycle instances are processed in the
added a call to setClipToOutline ( true ) in QsbWidgetHostView to enhance the visual appearance of the QSB background
added flag processing logic and improved string manipulation in SQLManager , BlockTypeListFlag , and PlotArea classes to enhance flag conversion performance and
updated import statements and modified depth test logic in FloatingTextRenderer . java to conditionally enable depth testing based on whether the floating text is
truffle : fix build for nfi on linux .
refactor propagation behavior handling in JdbcAggregationRepository by introducing a private variable and modifying its getter and setter methods to improve code clarity and
update regularization handling in BaseLayer configuration to support both L1 and L2 regularization types to improve regularization validation logic and ensure proper
added error handling for read and write operations in AbstractChecker . java to improve robustness by handling potential exceptions during reading and writing
changed the visibility of the colorStack array from static to instance and updated its initialization to allow external access to the colorStack variable in the Glyph
changed the return values of ` getMappedStatement ` and ` hasStatement ` methods from ` false ` to ` true ` to enable statement mapping
convert tradableIdentifier to currency in BTCEPollingMarketDataService . java to ensure consistent retrieval of currency names in case sensitivity
updated channel state assertions in ChannelStateTests . java to reflect new timestamp values to ensure accurate delivery times for the MQTT publish functionality
removed the versionedHashes parameter from the EnginePayloadParameter class and its associated getter / setter methods to simplify the payload handling by eliminating unnecessary
set triggerPrice to empty in MutableOfferView and call onTriggerPriceTextFieldChanged in MutableOfferView to ensure that the trigger price is reset
refactor conditional checks for student registration and response parameters in StudentFeedbackSubmissionEditSaveAction . java to improve code readability and maintain
removed debug print statements in I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 11393 addendum fix checkstyle violation in hstore . java
no effective change - enh : add support for cascade on many - to - one bean
added a boolean property ` _ alwaysSaveUri ` and its getter / setter in ` FormAuthenticator . java ` to control whether to always save
added methods nSetLayerType and nSetLayerPaint to ShadowRenderNode class to provide functionality for setting layer type and paint settings for rendering
replaced specific AWT imports with a wildcard import and added visibility handling for JPopupMenu in LWChoicePeer . java to improve code
replaced the initialization of the ` insert ` HashMap with a new ` lowerCase ` method to ensure the ` insert ` map is case - insensitive
replaced direct calls to ` scala . collection . JavaConversions . asScalaIterable ( ImmutableList . of ( suiteFileName ) )
added null checks for requests and improved logging messages in MockServerEventLog , HttpForwardObjectCallbackActionHandler , and CallbackWebSocketServerHandler
added a warning log for loading a properties file in DefaultEnvironment . java to enhance error handling and provide clearer diagnostics when properties file cannot be
refactor code to use try - with - resources for SessionDataSet to ensure proper resource management and prevent potential memory leaks
added a check for multicast support and NIC status in SetOutgoingIf . java to ensure outgoing connections are only established on valid network interfaces and
updated SQL command string initialization to include the length of the command to ensure the SQL command starts from the correct starting position
updated methods in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to set latest consume time and free time for energy
added a method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and modified the handling of ` invalidSessionUrl ` to
include empty index in the error message when protobuf serialization fails
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` MapAssert ` to ensure correct functionality of
updated JdbcProxyGenerator to use a new DelegatorGenerator for NewProxyPreparedStatement and added JDBC4TemporaryPreparedStatementMethods interface to enhance proxy generation capabilities
added a ensure method to ServerWebSocketContainer for managing WebSocket components and updated related tests to ensure proper handling of WebSocket connections and improve test coverage for
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` for ` toLanguageFlags ` and ` getLanguageFlags ` methods to utilize a more
pdfbox - 4892 : optimize getcurrentpoint , a suggest by valerybokov
replaced the initialization of ` hooks ` with a static final ` EMPTY ` array in ` MethodHook . java ` and removed redundant checks to
added a boolean flag ` grantAccess ` to ` MockAuthenticationManager ` and modified the authentication return logic to include a check for deny access to
modified the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enable passing specific job execution information during job execution handling
added a check for file . canExecute ( ) before checking if it is writable in SharedLibraryLoader . java to ensure that only writable files
feat ( tsquery ) : add hastimeseriesquerylanguage ( ) method to tsquery . java ( # 119 )
bug 60632 - jmeter - csv save should use sampleevent instead of sampleresult
added constants for BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , DISTANCE , and STARTTIMESTAMP in
changed the parameter type of applyRule from Hashtable to Map in SearchExpression . java to improve flexibility in handling different data types in the rule
rename ` movedGeoWidget ` to ` movedObject ` in ` EuclidianController . java ` to improve clarity and consistency
updated texture creation and texture filtering parameters in ProjectiveTextureTest . java and JoglGraphics . java to improve texture rendering quality and ensure
modified the method signature of ` setResourceToDelegate ` to return a ` File ` instance instead of void to ensure that the output file is writable
camel - 14263 : added property component support to intercept from properties endpoint . thanks to daniel dai for the patch .
updated the condition in ActionScheduler to check for the last attempt time instead of the last attempt time to ensure correct handling of attempts based on the
updated the path for the zip file in DbgPacker . java from " / tmp / ums _ dbg . zip " to "
added support for rendering debug configuration in NotificationOverlay and updated logger initialization to use RenderingDebugConfig instead of WorldRendererImpl to improve flexibility in
added a method to reset the gate in the Pipe class and refactored its usage in BlockGenericPipe . java to improve code organization and
added locale management to TestSupplementary class to ensure consistent locale settings during test execution
updated the color range in the Team constructor from 0.8 , 0.4 , and 0.8 , to 0.4 , to
replaced Set with Collection and added logging for Condense matched states removal to improve performance and provide more detailed logging information during state removal
simplified the condition for checking annotation ' s expected exceptions in SoftAsserts . java to improve code readability and maintainability
added error logging and improved error handling in StorageResources . java and StoragePluginRegistryImpl . java to enhance error handling and provide clearer
replaced multiple report methods with a single ` toCsvFile ` method in ` CallTreePrinter . java ` to improve code readability and
added null checks for note and noteTmp in DetailFragment and WidgetProvider classes to improve code robustness and prevent potential NullPointerExceptions
added a new variable ` peakTasks ` and adjusted the calculation of ` loaded ` and ` fractionalLoaded ` in ` AssetManager . java `
danielwagnerhall : only enable native event on window on firefox
added metadata handling for " nutch . score " and " nutch . fetchInterval " in the Injector class and updated Crawl
updated import statements to use org . apache . commons . collections4 . ListUtils and org . apache . commons . collections to ensure compatibility with
added a method ` isShareSchema ( ) ` to ` CoreContainer ` and a test method ` testShareSchema ( ) ` in `
updated sizeInBytes method calls to use ' true ' instead of ' info . sizeInBytes ( ) ' for consistency to ensure accurate representation of size
replaced assertions in VersioningTest . java with assertNull for version1 _ 2 to ensure proper handling of null values in JSON parsing
updated SQL query to include additional conditions for determining non - null domain attributes to ensure that only non - null domain columns are processed in the database
[ java ] optimize leadership term event handling in consensus module .
removed the ` buildMediaType ` method from ` WebClientPlugin ` to simplify the code by eliminating unnecessary content type handling
renamed fill methods to fillSlice and fillAndGetIndex across multiple classes to improve clarity and consistency in method naming
refactor AcidUtils to improve transaction handling and add a new test for compaction after IOW and major table compaction to enhance code clarity
updated PTableImpl to set default values for immutableStorageScheme , qualifierEncodingScheme , and added null checks for storageScheme to improve robustness
added new classes PojoProducersCustomized and RestProducers to provide customization capabilities for PojoProducers and RestProducers
updated the method calls to use CACHE _ SECTION _ NAME instead of " cache " for " http _ client _ tls _ cert " and "
removed duplicate calls to AesGcmSivProtoSerialization . register ( ) in AesGcmSivKeyManager . java to
added a replacement for " slabWood " in the OreDictionary to support the wooden slab functionality in the dictionary
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in the ` UndefinedSymbolsLinkerScript ` class to simplify the
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 15936 - fix test failure on mariadb and mysql
updated drawing position in HelloWorld . java from centerX and centerY to centerY to correct the positioning of the sprite batch for better
refactor PlayerFunctions to simplify permission checks by using a more concise return statement to improve code readability and maintainability by reducing red
added a deprecated version constant for Lucene 8.5 . 0 to indicate that this version is outdated and should no longer be used
updated string concatenation in the logging statement for clarity to improve readability and maintainability of the log output
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing with signed
refactor dependenciesType handling in CoNLLUOutputter to use SemanticGraphCoreAnnotations . DependenciesType instead of String to improve flex
refactor code to encapsulate target description creation in the ParseContext class to improve code readability and maintainability by reducing duplication
updated the method call from ` testFromMain ( ) ` to ` test ( ) ` in ` MyChild ( args ) . init (
replaced the array size of configBlocks from a fixed size to a fixed size of 256 to optimize memory usage and improve performance by reducing
update version checks and improve warning messages in BukkitMain . java to ensure compatibility and clarify version compatibility for Spigot and
removed escaping for Postgres question mark operators in AbstractSQLChange to simplify SQL statement generation for PostgreSQL databases
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
pdfbox - 4892 : improve error message , a suggest by valerybokov
http : / / issues . apache . org / jira / browse / amq - 4898 - fix nhcmqttconnection
updated ChangeSet retrieval logic to check for the root change log before retrieving changes to improve robustness by ensuring the change log is initialized before accessing
updated method calls to use ` new MethodResult ( ) ` and modified response body handling in ` RocketMQGlobalPluginHandler . java `
added HiveMetaStoreClient instantiation and logging for database dropping in TestHiveMetaStorePartitionSpecs . java and TestObjectStore . java
added a new parameter ` order _ currency ` to the ` BithumbAuthenticated ` and ` BithumbAccountServiceRaw ` classes to
deleted the SSEFluxWebConfig . java file to remove unused configuration properties to streamline the codebase
updated return type checks in JsonBuildHelper , IDocBuildTemplate , and JavaClassUtil to use isVoid ( ) instead of getFullyQualifiedName
added a new endpoint to list YAML configurations and modified the YAML _ READER variable declaration to improve clarity and functionality by allowing users to list
removed public access modifier from equals and hashCode methods in Marker . java to enhance encapsulation by restricting access to these methods
updated thread factory lambda and refactored termination logic in Basic . java and GroupOfOne . java to use lambda expressions to improve code read
added unit tests for simple and mapping converters in MongoTemplateTests and created a new PersonWithAList class to ensure proper functionality and functionality of
sync applet panel size in web view only when the new screen have change
updated toolbar visibility handling in DrawerActivity to use a delayed execution to improve UI responsiveness by allowing toolbar visibility to become visible after a
refactor the handling of overlapping pages in SeriesReader to improve clarity and efficiency to enhance readability and maintainability of the code
server : do n ' t allow vm password to be save on the router if vm be not running
added variables to reset output stream and writer in Response . java to ensure proper handling of character encoding settings
added a check to return early if assignment side effects should be warned to improve user experience by avoiding unnecessary warning during assignment side effects
refactor JSON and JSONObjectConvertor classes for improved readability to enhance maintainability and clarity of the codebase
updated icon width check to use maxWidthWithMargin instead of maxHeightWithMargin to ensure icon dimensions do not exceed defined limits
refactor ` fetchPublicKey ` method to use ` JcaPEMWriter ` and improve error handling in ` RegisteredServiceProperty ` and ` Jwt
added a checkContentTypes method to check MIME types across different operating systems to ensure correct handling of file types across different operating systems
updated compression handling in NettyConnection . java to use JZlibDecoder and JZlibEncoder instead of adding compression decoders to
added a static method ` doesClassLoaderDescendFrom ` in ` Util ` and refactored conditional checks in ` Class ` and ` MethodHandles
removed unnecessary dependency on io . netty : netty - handler - proxy in ChannelProvider and ProxyChannelProvider classes to simplify the connection method
added a test for handling an empty final column in TestCsvHeader . java and implemented a test for handling empty final columns in TextReader .
added compass gravity and margins to NearbyMapFragment to improve visual alignment and margins for nearby map fragments
added two test methods for interpolation calculations in GeoPathTest . java to ensure correct distance calculations and interpolation behavior for GeoPath components
added HiveException handling to the ` getLeafFilterBuilderByType ` method and modified exception handling in ` ParquetFilterPredicateConverter ` to improve
added a condition to set the language of the current audio track if it is blank to ensure that the correct language is used for video streams
added a warning log for schemas in the new version in MicroserviceRegisterTask . java to indicate compatibility issues when schemas are less than the old
replaced manual array copying with a utility method ` addAll ` in multiple array classes to simplify code and improve readability by reducing redundancy
reformatted the closing of a database connection in DataSourceProxy . java to improve code readability and maintainability
added constructor and validation methods to InMemoryClientRegistrationRepository , InMemoryReactiveClientRegistrationRepository , and InMemoryClientRegistrationRepositoryTests to
added a method to reset the UI state in SchemaUpgradeHelper to ensure the system reflects the current status of the UI during the upgrade process
added logic to handle pending exceptions in JUnitReporter and corresponding test tests to improve error reporting behavior for pending exceptions during test execution
add a new class ` PlayerSelector ` to handle player - specific entity selectors to enhance player selection functionality in the application
added Closeable interface to the Selector class to ensure proper resource management and prevent memory leaks
replaced hardcoded parallelism , runs , and iterations with a custom MultiplexConnectionPool in MaxConcurrentStreamsTest . java to improve connection management
added multiple stringType ( ) calls in CoreOptions . java to enhance the functionality of string type handling
updated HqlQueryRenderer to handle character and parameter contexts more effectively to improve query rendering by correctly visiting characters and parameters in the H2
updated HTTP status checks to use SWITCHING _ PROTOCOLS _ 101 and introduced a new constant NOT _ SET _ 000 in HttpChannel and
pdfbox - 4892 : simplify code , a suggest by valerybokov
refactor HikariCPCollectorTest to replace hardcoded JDBC URL and data source configurations with a new StubConnection configuration to improve test reli
refactor ParquetFormatPlugin and ParquetGroupScan to improve metadata handling and file selection expansion to enhance code clarity and maintainability by
changed the ` isSuccess ` variable from ` false ` to ` true ` and added error handling in ` Jsr199Javac . java
added a baseTableModelListener to the DefaultSortedTableModel to handle table model changes to enable proper handling of table changes in the model
updated number range check from 49152 to 65535 to accommodate larger data values in the server configuration
added document provider authority handling in AuthenticatorActivity and AccountRemovalJob for KitKat and above to ensure proper content resolution for document provider authority
removed the startLogging method call from MainApp . java to streamline logging setup for improved performance
added throwable analysis and improved exception handling in FilterChainProxy to ensure wrapped RequestRejectedExceptions are handled correctly to enhance error handling robustness and
updated the calculation of newSize and arraycopy in StringBuilder to use ' this ' variable instead of ' length ' to improve code clarity and maintainability
pdfbox - 4892 : throw illegalargumentexception for empty filter list , a suggest by valerybokov
added a new file ` TbStopWatch . java ` with methods to start a new ` TbStopWatch ` instance to provide functionality for managing
updated the initialization flag in PListStore . java to ensure consistency in initialization logic
mark multiple ` Continuation ` and ` ContinuationFilter ` classes as deprecated to indicate that ` Servlet 3.0 ` is now deprecated and
[ zeppelin - 3640 ] fix classloading issue in remote interpreter server
[ 1.19 . x ] fix commandsourcestack . getsource ( ) not call entity . isinstanceof ( serverplayer )
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest
corrected the spelling of ' indexInTickArray ' to ' tickArrayIndex ' in the timerIdForSlot method signature to ensure
# 113 - enh : add element name to beandescriptor element and query plan ( # 113 )
updated response URLs from " wro / all . js " to " static / all . css " and added a new WroSass
added a new test method ` showLatestTimeseriesTest ( ) ` to the ` IoTDBMetadataFetchIT ` class to verify the functionality
corrected the spelling of " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency and accuracy in the configuration
added a type check for CertPathValidatorException before throwing it to improve error handling by explicitly casting the exception to a more general exception type
feat ( benchmarks ) : add option to disable write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` for verifying slice size functionality in a map volume to address issue # 815 related
added a shapeless recipe for waterproof and slime ball in BuildCraftTransport . java to enhance the game ' s capability to
mahout - 1843 : fix arrayindexoutofboundsexception when iterate non - zero vector .
added functionality to manage the ownerplot metadata for Shulker entities in BukkitMain , EntitySpawnListener , and PlayerEvents to
added a ` getDebugLogger ( ) ` method to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
updated import statements and added methods to retrieve maximum directory and file name lengths in IOHelper . java and MultiKahaDBPersistenceAdapter .
added an UpToTagChangeSetFilter to check if a tag is seen before processing to improve error handling by sending a warning when a tag is
replaced ` LinkedList ` with ` ArrayList ` and updated references to use ` ArrayList ` instead of ` LinkedList ` to improve performance and simplify the
http : / / issues . apache . org / jira / browse / amq - 4748 - fix typo in brokerrouting
updated volumePaint and upPaint values from Color . gray and Color . GRAY to Color . GRAY to improve visual clarity by using
refactor layout parameters in InsettableFrameLayout to use a new LayoutParams class to improve flexibility and maintainability of layout parameter handling
added a new JSON property ` ` duration ' ' to the ` BuildTargetDurationListener ` and updated tests to include these new duration values to
replaced ` @ Profile ` annotation with ` @ Assume . assumeTrue ` in multiple test classes to ensure that the db profile is enabled based
added a null check for the user before processing claims in OAuthConfirmationController . java to avoid potential NullPointerExceptions when user is null
camel - 14284 : added option to replace route from endpoint in camel - test - infra
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` in ` CassandraConnection . java ` to improve performance by using a more
api : listpublicipaddresses - add sourcenetworkid parameter to listpublicipaddresses api
added functionality to manage ignoring battery optimization settings in ShadowPowerManager to enhance power management capabilities by allowing dynamic control over battery optimization settings
updated the way the Jetty version is retrieved from the build properties to ensure the application uses the correct build properties for the jetty version
added tests to verify invocation order in NumberOfInvocationsInOrderVerifierTest to ensure accurate verification of method invocations based on expected conditions
updated debugForceEvaluation logic in TRegexExecNode . java to improve evaluation logic for better debugging
added " - foreground " to the profile start process in NewProfileExtensionConnection . java to enhance the profile launching behavior with a foreground color
replaced the usage of ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related references
replaced ` getFile ( ) ` with ` getFile ( ) . getName ( ) ` in ` CodeEditorView . java ` and added null
update skippedEntry logging to include exception message and jf . getName ( ) in ClassFileReader . java and JdepsTask . java to improve
added LinkStorage and LuceneStorage to the Fetcher and FetcherMain classes , and refactored document storage handling in FetcherTask
updated the ` populateBubble ` method to include an existing ` BubbleBarBubble ` parameter and introduced a nullable ` existingBubble
( chore ) camel - scheduler : remove unnecessary warn log
removed the ` methods ` parameter from the ` buildRpcExt ` and ` buildRpcExtJson ` methods across multiple files to simplify the method
[ java ] add a new OptimalMulticastDelayGenerator to the MediaConductor and modify the loss handler initialization to use it to
updated Gson initialization and added properties for client ID and secret in ClientInformationResponseView . java to enhance JSON serialization capabilities for better client information
added a conditional check for non - zero field field amount before setting the average price of the order to ensure that the order ' s price is
removed the rawExecutionReports method from the BinanceStreamingMarketDataService class to streamline the subscription process for execution reports
added a ` fail ` method to ` LdapTimeoutTest ` and updated error handling in ` ReadServerTimeoutTest ` to improve error handling and
added checks for file existence before reading user dictionary and installed filenames in various classes to improve error handling and logging clarity when user dictionary and installed
updated password handling logic in AmbariServerConfigurationHandler to check for credential store alias before updating the password to ensure that the password file is
added a method to check if a segment is already parsed in ParseSegment . java and updated SegmentChecker . java to use it to improve segment
[ hotfix ] [ yarn ] make application attempt failure validity interval configurable
added error handling for H2 driver not included in GeoserverInitStartupListener . java to improve robustness by logging specific driver unloading
hbase - 25836 add default readtype for snapshot - based inputformat ( # 2370 )
added fixedHeight and fixedWidth fields with their respective getters and setters in LoginInstanceRequest . java to enhance instance login options handling for better user experience
added a cornerRadius parameter to several update methods across multiple classes to allow dynamic adjustment of the corner radius during animations
added new commands to the COMMANDS _ TO _ REMOVE constant and modified the COMMANDS _ TO _ REMOVE list to include additional descriptions
added a retry mechanism on the connection pool to work around a BONECP bug to improve reliability by allowing connection retries when the pool is
queuecontainer : rename ` txnensurereserve ` to ` txncheckreserve ` and add ` txnpollbackupreserve ` parameter to
added a new field ` strings ` with an associated ` char [ ] [ ] ` to the ` FirstOfStringsMatcher ` class to allow
updated SQL statements in DeleteCompiler to use " DELETE ROWS CLIENT SELECT " instead of " DELETE ROWS " and added new test cases in
updated the exception handling logic in BaseServiceException to include a retryable check for SocketException to enhance error handling by allowing retries when insufficient data
added a ` ImmutableList < String > rapidInstallTypes ` parameter to multiple classes to support rapid installation types during device initialization
updated the regex pattern for the " - srand " pattern in SortTest . java to allow additional characters after the " - srand "
refactor MultimapSubject to use a Factory for iterable values and improve string representation handling to enhance code clarity and maintainability by reducing
adjusted the return statement in the Workspace . java file to correct the logic for determining the vertical positioning based on device orientation
added support for a ` transmux ` feature in the Transformer class and updated related classes to enhance transcoding control based on media items and
added localization functionality to the Picker class to enhance user experience by providing localized strings for better localization
camel - 2369 : camel - cxfrs - throw an exception if the endpoint can not find the customer
hhh - 14850 postgresql dialect should handle lock acquisition and pessimistic lock exception
updated database query ID handling in TestJdbcDriver2 and modified visibility annotations in HiveStatement to enhance query ID retrieval accuracy and improve code clarity
[ beam - 10355 ] add usesunboundedpcollections category to pardotest to avoid test failure .
updated text formatting in GpsSimpleViewFragment to simplify HTML output to enhance readability and maintainability of the code
[ java ] remove leadershiptermid parameter from joinlogasfollower .
added a private HttpExchange variable and updated its initialization in HttpSender . java to ensure thread - safe access to the HttpExchange before accessing its
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed ` token ` to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` and updated its implementation in ` AppOptics
added Lombok ' s EqualsAndHashCode annotation and modified marker handling logic in Recipe , Markers , SearchResult , NamedStyles , and
pdfbox - 4892 : use double instead of float for font size , a suggest by jbellis
change variable name from email to email array in AddressBookDoCoMoResultParser . java to improve code clarity and maintainability by using
refactor exclusions handling in RawMavenResolver to use a HashSet instead of a stream to improve code readability and maintainability by reducing
added null checks for DSXExchangeInfo and improved currency pair handling in DSXAdapters , DSXPairInfo , and DSXBase
updated test classes for blocking , parsing , and validation to improve test reliability and maintainability
[ drools - 90 ] make kiemodule incremental compilation fail if kiemodule pom be invalid
updated the initialization of ` copy ` and added a check for ` sobj . has ( k ) ` before invoking ` defineOwnProperty ` to
rename JacksonDataFormat and JacksonXMLDataFormat classes to improve clarity and consistency in naming conventions
refactor HostFieldDesc to simplify exception handling for getter and setter methods to improve code readability and maintainability by reducing redundancy
added a new method parameter annotation for " java . util . concurrent . CompletableFuture " in DefaultNullnessAnnotations . java to enhance nullness handling
updated the calculation of mFreezeCheckPoint in PlaybackController . java to correct the freeze checkpoint duration to ensure that the freeze checkpoint is
added Whitebox internal state management in AbstractCommonPowerMockRunner and removed unused imports in PowerMockRunner to streamline code by eliminating
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure the correct real
refactor indentation handling in TabsAndIndentsVisitor . java to improve clarity and functionality to enhance code readability and maintainability by
updated TestSingleTokenTokenFilter class to extend from TestCase instead of LuceneTestCase to simplify dependencies and improve code clarity
updated the output format in HtmlProcessInformationsReport . java to include a cell with a wrapped text class to improve the readability of the
added execution context management to JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository classes to enhance execution context management for better job
added a condition to check if the new media folder should not be added if the configuration is not hidden to enhance user experience by preventing unnecessary
added null checks for actor before setting their widgets in SplitPane . java to ensure proper handling of null actors and prevent potential NullPointerExceptions
added handling for JavaType . Parameterized in RemoveUnusedImports . java to collect type parameters and their corresponding packages to improve type management for parameterized types
updated logging statements in UniqueModListBuilder to use ` this . getVersion ( modInfoList ) ` and added null checks for ` modInfos `
changed the logger reference from ` this . getClass ( ) ` to ` TicketGrantingTicketImpl ` to ensure that the logger is accessible only
updated the timeseries creation string to include the 81 + 12 value to ensure compatibility with the new timeseries creation format
added a ` isValue ` method to ` AttrData ` and modified error handling in ` Converter ` , and added constants in ` R . java
updated condition checks in CPlatformResponder and added utility methods in LWCToolkit for locale - specific character modifiers to improve handling of character
[ java ] add publication connection timeout to spysimpletest .
added a check to return false if the request URI starts with " / css " , " / images " , and " / favicon "
added an assertion to verify the installation of a wellbeing test APK to ensure that the installation process correctly reflects the device ' s
no effective change - remove oracle sql limiter
updated test cases in TestSimpleBodyHandler and TestVertxTLSBuilder to expect three enabled secure transport protocols instead of one to ensure correct behavior of
updated Java library references from ` e3506ff7c11f638458d08120d54f186dc79
added a boolean flag ` mIsDismissHapticRunning ` to control the dismissal of haptic running status to improve user
show the source of the projectile in mixineventworldexplosion instead of just the explosion .
removed unnecessary imports and implemented getItemId method in SymbolInputAdapter . java to streamline code by eliminating unnecessary dependencies
change limit _ bids and limit _ asks from a query parameter to 50 in Bitfinex . java and BitfinexPollingMarketDataService
camel - 14263 : camel - stax - fix test failure on window
added ` toString ( ) ` methods to ` KubernetesLeaderElectionDriver ` , ` ZooKeeperLeaderElectionDriverTest ` , and ` ZooKeeperUtils `
refactor SqlSessionFactoryBean for improved session management to enhance performance and maintainability of session management
[ 3.0 - triple ] fix nullpointerexception in tripleinvoker . getpureargument ( )
replaced Gdx . app . error with GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing a more general exception
added a method ` isStarted ( ) ` in ` Deadline ` and modified ` RawStoreProxy ` to check if the deadline is started to
added handling for ClosedChannelException in NettyRequestExecutor to improve error messaging for closed channel scenarios
added null check for mBaseItem ' s genres before setting the text view to avoid potential NullPointerException when mBaseItem ' s genres
[ hotfix ] [ checkpointing ] fix the bug of region recovery in checkpointcoordinator
added a new file ` MappedContainerComponent . java ` for managing mapped containers in the entity system to facilitate the handling of mapped
[ iotdb - 4892 ] fix npe in walnode # getactivememtables when there be no unpinned mem table
added a new test method ` testRetrySameHostOnCallbackFailure ` to ` HttpTest . java ` to ensure proper handling of callback failures
update package - info . java files for mmm and ppp packages to improve organization and clarity of package documentation
added a new test class SQLServerEscapeQuestionCharacterTest for testing SQL server escaping of question characters in Hibernate to ensure correct functionality of SQL
added nullability annotations to constructors and improved null handling in the CamelModule and JoobyBeanRepository classes to enhance code robustness
refactor wait logic in JavaFXSEPort . java to use Util . wait for better readability to improve code clarity and maintainability
updated package imports from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider
refactor CropperUtils to simplify the creation of CropperBehaviour to improve code readability and maintainability by reducing duplication
removed appName parameter from several configure methods in InputRC and LineReader classes to simplify method signatures and improve code readability
added unit tests for installing and uninstalling components with ignored and broken dependencies in CatalogInstallTest and UninstallTest to ensure proper handling of
danielwagnerhall : use ` ` -- headless = chrome ' ' instead of ` ` setheadless ( true
replaced value assignment with interning of the value to ensure thread - safe access to the value
added support for " MOVE " status in the response status check to enhance functionality by allowing the response to a move operation
updated US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME constants in FixedDateFormat . java
replaced the import of ` org . apache . curator . shaded . com . google . common . collect . Lists ` with the
[ hotfix ] [ network ] fix potential npe in hssubpartitionmemorydatamanager # startspilling
updated permission checks in Visit . java to include an additional check for UntrustedVisitFlag to enhance user experience by ensuring untrusted visit permissions are
do n ' t send jabber message if jabber provider be not register yet . fix issue # 241 .
updated conditional checks in BasicURLNormalizer to include additional hex values to enhance URL normalization functionality to support additional hex escape sequences
changed method access modifiers from protected to private for addRemoteAnimations and unregisterRemoteAnimations and unregisterRemoteTransitions to enhance encapsulation and restrict
added a condition to compare clock rate values in EncodingConfiguration . java to ensure accurate comparison of clock rate values in the configuration
added a method to retrieve the project path in ProjectGenerator and updated the generateProjects method to return an ImmutableSet of generated project paths to improve project
updated the method for setting the zero digit and improved calid validation in HostLocaleProviderAdapterImpl . java to enhance code clarity and
added a new file MSwingUtilities . java that contains utility methods for image scaling and exception handling to provide utility methods for handling image scaling
camel - 7999 : camel - mail - should use async to process mail message . thanks to benjamin for the patch
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure that instances are refreshed during configuration changes
camel - 16400 : added unit test base on user forum issue
added Main . java and ScriptRenderer . java files to implement script rendering functionality to enhance the integration of the scripting tool by integrating the
added input state check for FORM _ ENCODED in Request . java and implemented a test for query parameters in RequestTest . java to ensure
added checks for non - empty glyph widths and height , and implemented aDescendant method in Group , FlickScrollPane , and SelectBox classes to
replaced ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager ` and added a new test in ` DeploymentTest ` to
simplified the string representation of item stacks by introducing a new method ` stackToString ` to improve code readability and maintainability by
updated sleep duration in ConstantTimeBackoffTest from 100ms to 500ms to increase the timeout duration for better testing reliability
replaced specific StringUtils imports with a wildcard import and modified conditional check for display name to simplify import statements and improve code readability
replaced ClasspathURLStreamHandler with getClass ( ) - based resource loading in JollyDayHolidays . java to improve resource loading
added a new utility class ` FieldUtils ` for reflection - based field access and setter methods to facilitate easier access and modification of
removed unnecessary null check for mode in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify the
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added default padding for custom content to improve UI
added ` updateSettingsWithSaveLastAccount ` method to ` XabberAccountManager ` and updated ` AccountAddFragment ` to handle account
added a new method ` setvar ` to handle command - line arguments for setting variables to enable users to set variable values via command - line
fix animal tame event not fire . close # 233687
added handling for range values in WindowFrame . java and improved error messaging for invalid values to enhance code robustness and provide clearer feedback
pdfbox - 4892 : fix test bug , a suggest by valerybokov
added a line to set the application ' s mode in PageListController . java to ensure the application reflects the current application ' s mode
added support for customizable Docker file path in ImageFromDockerfile . java and created a new DockerfileBuildTest . java file to enhance
added a null check before creating a new ThreadInfo instance to avoid potential NullPointerExceptions when accessing threadInfos
updated the condition for checking the sweep angle outer value in PieChartRenderer . java to use a constant float to improve code readability and
[ hotfix ] [ checkpointing ] add more logging to singleinputgate
added new table constants to the Schema class to enhance functionality for handling various table types in the Schema class
added a minimumSimilarity parameter to the FuzzyQuery constructor and updated FuzzyTermEnum to accept it to enhance query fuzziness by allowing
renamed the method ` addActionsView ` to ` setActionsView ` in ` RecentsView . java ` to improve clarity
[ logback - 1340 ] make immediateflush configurable in outputstreamappender .
added " org . springframework . boot . autoconfigure . amqp . RabbitAutoConfiguration " and " org . springframework . boot .
added null check for component before removing it from JLayer and created a new test class for bug6875716 to ensure proper handling of
replaced imports from ` avro . shaded . com . google . common . base . Function ` with ` com . google . common .
refactor block handling logic in BciBlockMapping . java and improve block processing in GraphBuilderPhase . java to enhance code clarity and
added a new property ` isLegacyRenderer ` and ` setLegacyRenderer ` to control the legacy rendering behavior to allow flexible control over rendering
replaced intToFourBytes method with Ints . toByteArray for counter conversion in AbstractJweDecrypter and AbstractJweEncrypter
added a null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is not initialized
changed the type of the ` thenComparing ` method from a generic type to a generic type in ` Comparator < T > ` and added
refactor DocIdSet class to improve code structure to enhance maintainability and readability of the code
updated the end time setting in UserRuleAnomalyFunction to use currentKey bucketMillis instead of null to ensure the anomaly result reflects the
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is properly reported to avoid runtime errors
added a class loader to the enhancer configuration in MockFactory . java to ensure proper class loading for mocking functionality
added a new ` OriginalFormat ` class and modified the ` ConverterWithEnumFormat ` class to include it to facilitate the conversion
replaced hardcoded date format string with a constant pattern for date formatting to improve maintainability and readability of date formatting logic
refactor JAWTRenderer class for improved readability to enhance maintainability and clarity of the code
camel - 15836 - camel - aws2 - * : enable autowire on the aws lambda client , regen test
server : ensure that a valid mac address be not replace by the next available mac address in the network .
removed the condition for checking the " Authorization " header in ProxyServlet . java to simplify the header validation logic for better readability
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService . java ` to improve method clarity by using a more
added ` getDetails ( ) ` method to ` AbstractAuthenticationToken ` and implemented ` getDetails ( ) ` method in ` UsernamePasswordAuthentication
updated the randomness condition for randUsePoints in SolrTestCaseJ4 . java to improve the accuracy of point selection in test cases
replaced calls to ` sb . appendDot ( ) ` with ` sb . endSentence ( ) ` across multiple classes to standardize the
updated TimeFormat methods to include Locale parameter for locale handling to ensure consistent formatting across different locales for improved user experience
updated import statements and added sorting logic in GroovyParserVisitor . java and GroovyPrinter . java to improve code clarity and ensure correct argument processing
added bounds checking for topInsetPx , bottomInsetPx , and leftInsetPx in the Border class to ensure proper handling of
refactor GestureState initialization to use a static final constant to improve code readability and maintainability by centralizing gesture state creation logic
updated version retrieval from Joda ' s DateTime to Java ' s Instant and DateTimeFormatter to improve compatibility with different date formats in LlapServiceDriver
refactor openblas and openblas _ nolapack files for consistency to improve code maintainability and readability
use java . io . ioexception instead of commonio . ioutils for close file
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction manager initialization
increased the timeout duration for recovery from 120 seconds to 480 seconds in the waitForRecoveriesToFinish method to allow more time for
added a new file ` SearchResults . java ` that contains a class for managing search results to facilitate easier handling and retrieval of
refactor CPUSamplerSupport to use a Refresher instance for thread CPU refreshing to improve performance by reducing redundant CPU refreshes
replaced the initialization of the ` primitives ` array with a conditional initialization if it is null to ensure that the ` primitives ` array is properly
added support for new versions " 8.10 . 0 - cfs " and " sorted . 8 . 10 . 0 - nocfs "
updated the feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the App
added a new API endpoint to retrieve tenant pools for the current instance to provide users with information about the available tenant pools for the current instance
refactor ` canEarlyTerminate ` method to include ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix
added checks for ` isToString ( ) ` in ` InlineBytecodeGenerator ` and created new test cases in ` ByteBuddyMockMaker
added logging statements to CxxCompileStep and CxxPreprocessStep for debugging and error handling to improve traceability and debugging capabilities during execution
add stringutil . removecharacter ( string , char ) for stringutil . replaceall ( string , string ) . patch by jbellis
[ 3.0 ] fix npe when export metadata service ( # 10355 )
[ drools - 7 ] add datatransformer interface to allow compilation and transformation of process expression
change the data type of ` objval ` and ` num ` from ` Object [ ] ` to ` Number [ ] [ ] ` in
updated conditional logic in FormatStringChecker . java to use ' = = ' instead of ' > ' for better readability to improve code cl
updated the assignment of SolrCore to null in ElectionContext . java to ensure the core is properly initialized before use
refactor ITestDbTxnManager to improve transaction management logic to enhance code readability and maintainability
refactor database connection handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
added a new test method ` testMapModel ` to ` CodeFirstPojoClient ` and ` CodeFirstPojoIntf ` classes
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a null check for selection and refactored item listener handling in ScaleDialog . java to improve robustness by preventing potential NullPointerExceptions
change method name from ` updatePlayerStepStatus ` to ` tickBelt ` and add null checks for ` reachDist ` and ` step
pdfbox - 4892 : improve logging , a suggest by valerybokov
replace SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to maintain insertion order in the keys list
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 and modified its value in CardListInterface
updated preload version from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java to
added a check for agentSupport before setting all constructors to public in MainMockTransformer . java and created new test classes for mocking static methods
pdfbox - 4892 : improve performance , a suggest by valerybokov
added method to set the default window title for Apache JMeter and introduced a setter for the AWT WM _ CLASS string to improve title
updated depth calculation based on pixel size in XRSurfaceData . java to ensure correct depth value is set based on the color model ' s
added error response body handling in OkHttpDataSource to improve error reporting for unsuccessful responses
replaced ` TopSecurityManager . exit ( int , Throwable t ) ` with ` TopLogging . exit ( int , Throwable t ) `
updated the logic for retrieving the start index in NativeRegExp . java to ensure the start index is only set for non - global regular expressions
planner - 468 ignore optaplanner - daemon test until upgrade to optaplanner 6.3 . 1
[ hotfix ] [ runtime ] fix indexoutofboundsexception in defaultallocator
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to enhance data management by allowing deletion of entries without feeds
changed the return type of the appendToLabel method from void to AtomicCounter to allow external access to the method for better usability
[ java ] move busy spin idle strategy to noop .
added handling for HTTP status NOT _ MODIFIED in CacheControlHeadersWriter and corresponding tests to ensure cache control headers are only written when the response
updated methods in InstrumentationPartialEvaluationTest to use ToolEvalNodeFactory instead of SpliceInstrumentListener and modified related references to enhance functionality to
removed the overridden paintTabArea method from SynthTabbedPaneUI to streamline the painting of the tab area by eliminating
refactor KrakenDepth and KrakenTrades methods to accept an Object . . . args parameter for better flexibility to allow
camel - 14263 : added file . getseparator ( ) and file . isabsolute ( ) methods to fileendpoint and remotefileendpoint
added a new method ` build ` to the ` JavaProvenance ` class and updated ` MavenProjectParser ` to include dependencies and test dependencies
added trace logging for various Hive functions , UDFs , and non - deterministic UDFs in HiveFunctionRegistry . java , and implemented a
increased the loop iteration from 100 to 200 in CloudStateUpdateTest . java to optimize test coverage for cloud state updates
ignore hint for deleted columnfamilies . patch by brandonwilliams , review by jbellis
added a check for writable output files in the NativeErrors class to provide clearer error messages when the output file is writable due to root access
added package info retrieval logic in LauncherModel . java to check if the component is enabled to ensure that the application is enabled before proceeding
added error handling for database upgrade failures in DatabaseUpgradeChecker . java and modified SQL statement in Upgrade410to420 . java to improve
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test in FaultTolerantChunkO
replaced ` startsWith ` with ` regionMatches ` in ` LineReaderImpl . java ` to improve string matching accuracy to ensure case - insensitive
added imports for SourcesFileErrors and SourcesFileResults , and refactored data table handling in Recipe . java to improve data table management
added import for Overview and invoked dismissAllTasks method in TaplTestsTaskbar . java to manage task dismissal based on overview
bug 41400to41500 : add dbupgradesystemvmtemplate interface to handle upgrade from db2 to db3
removed unnecessary null checks for the connection object in LdapClient . java to simplify the code and improve readability
refactor index handling in SequenceAction . java to use a local variable for the current index to improve code readability and maintainability
added loginDone and curKeyspace thread - local variables and implemented keyspace setting functionality in CassandraServer to enhance security by ensuring proper access control during keyspace
added a check to skip synthetic fields in ReflectUtils . java to improve handling of synthetic fields during reflection
added a LoggerProvider to manage the application wide logger in the Ninja configuration to enhance logging capabilities by providing a configurable logger instance
changed ` ImmutableMap . Builder < String , String > ` to ` ImmutableMap . Builder < String , Object > ` and updated port handling in `
added deprecation warning for multiple glue classes that configure the spring context to inform users that they attempt to configure the spring context more effectively
added a new method ` deepStart ` to ` Startables ` that accepts an array of ` Startable ` to facilitate the
removed the ` reservePrimitiveExtensionArray ` method from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the code by elim
fix laser not be able to create a block that require it .
simplified the object name validation logic in AbstractJdbcDatabase . java to improve code readability and maintainability
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
removed the setting of the expiration messages period in MemoryLimitTest . java to ensure that the test accurately reflects the policy entry ' s
removed unnecessary null checks and improved handler name validation in RequestHandlers . java to enhance code robustness and prevent potential null pointer exceptions
replace ' - ' with ' . ' in the servlet name retrieval to ensure proper formatting of the servlet name for logging
updated Python environment handling in ProjectBuildFileParser . java to filter out specific PYTHONPATH environment variables to improve flexibility in environment variable management
updated audio data initialization and error handling in DirectAudioDevice . java and Toolkit . java to ensure correct frame size handling and improve robustness
add null check for enums in ElasticSearchStringLookupService to ensure proper handling of null values to avoid potential NullPointerExceptions
updated the error message format in CommitLogReader . java to include the number of characters in the error context to improve clarity of error messages
added assignment of the policy from the container scope to ensure the WebSocket session has a valid policy instance
removed static field checks for current type in Java2TypeScriptTranslator to simplify the logic for initializing static fields of the current type
added a webroot parameter to the StaticHandler instantiation in UserService . java to allow dynamic configuration of the webroot for the server context
( chore ) camel - spring - dsl : migrate test to junit 5 ( # 3505 )
refactor JpsProxy to use MonitoredVmUtil . isAttachable directly instead of reflection to simplify the code and improve readability by
renamed the method ` printHeaderObject ` to ` createHeader ` in multiple formatter classes to improve clarity and consistency in header creation logic
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and
added calls to ` buffer . reset ( ) ` in ` ReduceRecordProcessor . java ` to ensure the buffer is properly reset before processing new
added null checks for mOriginalForeground and mOriginalBackground before setting the foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions
updated the range check for ` decExp ` in ` FloatingDecimal . java ` and added a new ` ToString . java ` class to
updated property type check from ` propertyType ` to ` isAssignableFrom ` in ` PropertyDescriptor . java ` and added a new test class ` Test718
removed the maxVersion parameter from the getVersions method call in RealTimeGetComponent . java to simplify the method call by eliminating unnecessary
added a check to set the ORIGIN header only if it does not already exist to ensure that the origin header is only set for secure URIs
updated animation behavior in RecentsView and TaskView to include centering of previous and next tasks based on the overlay modal state to improve
enhanced error messages in ORCRecordReader to include field information instead of category to improve clarity of error messages for better debugging and debugging
added sample URLs for CastVideos and Bipbop 4x3 in DemoUtil . java to enhance video streaming features and improve
updated imports and string literals in PersistenceProvider . java to improve clarity and consistency in naming conventions to enhance code readability and maintainability
hbase - 26969 use org . apache . hadoop . ipc . execrpcinvoker and org . apache . hadoop .
added diagnostic handling and a new test for union and fixed fields in TestSpecificCompiler . java and created a new Position . java file to enhance
added a return statement to the session creation logic in WebSocketEndpoint . java and implemented a session closing test in WebSocketIT . java to ensure that
updated delay in seconds from 1 + new Random ( ) to 5 + new Random ( ) . nextInt ( 10 ) across multiple services to increase
updated DTD mappings from OpenSymphony Group to Apache Struts in XmlConfigurationProvider . java and LocationAttributes . java to ensure compatibility with
added conditional checks for stream stop behavior in WebCamInputPanel . java to ensure proper handling of video tracks when stopping the stream
changed the type of ` chartData ` from ` List ` to ` ArrayList ` in ` BittrexChartDataResponse ` and added a
removed unused import statements and updated import statements in GMLExamples . java to improve code clarity and maintainability by eliminating unnecessary dependencies
updated substream method from ` substream ( 200 ) ` to ` skip ( 200 ) ` in ` TargetType58 . java ` to
hhh - 10956 - fix npe in abstractentitytuplizer when an identifier be part of a composite identifier .
rename ` FindFullTextAction ` to ` DownloadFullTextAction ` and update related command references to clarify the purpose of the action
refactor URI registration handling to use a separate method and streamline the registration process to improve code readability and maintainability by reducing duplication
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for blank OSDb hash before retrieving information from the OSDB to improve error handling by logging a trace message when the hash is
added a method to transfer a token using a specified token ID in the RuntimeImpl and MUtil classes to enhance functionality by allowing token transfers based on
camel - 14263 : camel - ftp - allow to delete file from the current directory if it be stepwise
updated the method call from ` withDefault ( searchBindDN , defaultConfig : : getSearchBindPassword ) ` to ` withDefault ( searchBind
added assertions for join result handling in MapJoinOperator and modified hybrid hash table join logic in HybridHashTableContainer to improve error handling and
updated the constructor of ` HTTPSPDYAsyncEndPoint ` to accept a ` EndPoint ` instance and added new methods to retrieve local and
added " id " extra to intent in multiple adapters and updated TweetPager and TweetFragment to include tweetId to ensure that the tweet
added handling for user proxy authentication and improved disconnect logic in HttpURLConnection to enhance security by ensuring proper disconnect behavior based on user proxy authentication
replaced the integer variable ` _ numChildren ` with an ` AtomicInteger ` for thread - safe incrementing in ` TraceContext . java `
refactor multiple classes to remove unnecessary " jwt " parameters and improve code clarity to enhance maintainability and readability of the codebase
added an enabled = false annotation to the @ Test annotation in ValueTypeTests . java to disable the test due to potential issues with null pointer exceptions
[ drools - 5242 ] move resourcefactoryserviceimpl to kieservices to avoid confusion
hhh - 14263 : rename in predicate to not _ in for good clarity
refactor exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity for improved account initialization to enhance error handling clarity and ensure
added null check for witnessService before validation to avoid potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to use the expression string from the colExprMap to ensure accurate representation of the expression string for better
added a check to ensure the JavaDoc is not present before setting it in the item to avoid potential null pointer exceptions when the documentation is not
updated the handling of holder method and metadata fields in CompiledICHolder . java and added a new RedefineInterfaceCall . java file with
replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) in Tabs . java to improve animation handling for better animation
[ hotfix ] [ connector / kafka ] return unregisteredmeter instead of throw an exception
refactor the y - coordinate calculation in the Polygon class to use a temporary variable for improved readability to enhance code clarity and maintain
updated cache creation to use Configuration < Object , Object > instead of null to ensure compatibility with the latest configuration handling
added a length check for stringConstant before checking its first character in InheritanceUnsafeGetResource . java and created a new class Bug2974
refactor ShadowCookieManager to improve code structure to enhance maintainability and readability of the code
added a new authorization check for dropping an external table in Hive to ensure proper permissions are checked before dropping an external table to maintain backward
added a semicolon to the conditional statement in Stage . java and adjusted the width calculation in ProgressBar . java to improve code readability and ensure correct
add getplatformbyteorder ( ) method to basicplatformcapability and llvmlanguage to support different byte order .
updated the PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " to
updated the initWebViewLogin method to accept a baseURL parameter and updated its implementation to allow dynamic configuration of the web view login URL based on
updated exception message in CallableStatementHandler . java to specify the JDBC Type for output parameters to improve clarity of error messages for better debugging and
updated the ` @ RequestParam ` annotation and modified the ` after ` parameter in ` AuditEventsMvcEndpoint ` , and added a new test for
rename
added functionality to remove and delete a soft body from the dynamics world to ensure proper resource management and prevent potential memory leaks
changed interfaces in SinkFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider to public to allow access to these interfaces from
[ hotfix ] [ zeppelin - 3640 ] fix zeppelinhubclient and zeppel
test : add test for redundant namespace in jingle
fix a bug where redplasma be not load in the build craft enemy . also add a check for redplas
added HttpHeaders handling to BareResponseImpl and modified HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to enhance HTTP /
refactor conditional checks in Remove . java for clarity and consistency to improve readability and maintainability of the code
updated delimiter and formatted string outputs in SimpleReport . java to improve clarity and consistency in output formatting
added a method to ignore symbol files in the JavapTask class and created a new class T6863746 with a main method
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and updated related references to clarify the purpose of the class for better
added null checks for contract properties and exception handling in Runtime . java to improve error handling and ensure proper contract address retrieval
make sure we do n ' t create an input3d if it ' s not in applet
added an @ Ignore annotation to the KinesisIntegrationTests class to temporarily disable tests that are not ready for execution
modified the parsePayload method to return false instead of throwing ParserException to simplify error handling by returning false instead of throwing a ParserException
added the ` getRepositoryFactoryClassName ` method to ` getRepositoryFactoryBeanClassName ` and overridden it in ` JpaRepositoryConfigExtension ` to enhance
changed return types of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple files to enhance flexibility
replaced ` this . x ` and ` this . x ` assignments with ` IOSGLES20 . x ` and ` IOSGLES
removed the UploadPathActivity class and its associated imports to streamline the codebase by eliminating unused components
updated return statements to handle indexOptions in SimpleTextFieldsReader . java to ensure correct handling of totalTermFreq and sumTotalTermFreq based
fix ( treebuilder ) : add implicit constructor to ctclass ( # 1193 )
added database - specific checks to populateValidateNullableIfNeeded , populateValidatePrimaryKeyIfNeeded , populateValidateUniqueIfNeeded , and populateValidateForeignKeyIfNeeded to ensure
refactor Database class to improve code structure to enhance maintainability and readability of the database operations
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the application configuration
updated iterator assignment in PointInSetQuery to use ' this . sortedPackedPoints ' instead of ' sortedPackedPoints ' to ensure
[ hotfix ] [ table - common ] remove redundant substring call in schematichandler
added a switch statement to check for specific collections in AbstractCollectionAssert . java and updated CollectionAssert _ isUnmodifiable _ Test . java to include
changed the ` Option ` enum from ` static ` to an instance variable in ` ProcessExecutor . java ` to allow access to the ` Option
refactor dialog handling in Compose . java and ComposeActivity . java to use AlertDialog . Builder to improve user experience by providing a
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFileOperationsHelper ( ) ` in ` FileDetail
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` and added unit tests
added new classes ` ControllerCounter . java ` and ` DBCallback . java ` to manage controller counters and database callbacks to facilitate
added ' final ' keyword to the deleteTicket method signature in EhCacheTicketRegistry . java to ensure immutability of the deleteTicket
added a new file FlywayMigrationRunner . java to implement a migration runner using Spring ' s application context to facilitate the
replaced the ` isEmpty ( ) ` method with ` size = = 0 ` in ` HashMap ` and added a new ` OverrideIsEmpty
updated the version number from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to
added nullability annotations to the modifiers parameter in the modify method across CompressionCodec and WriterImpl classes to enhance code robustness by preventing potential
added null check for mainValue in LauncherHelper and implemented a test for missing main manifest attributes in TestHelper to ensure proper error handling and
updated test class names from " BasicErrorControllerIntegrationTest " , " SampleDataGemFireApplicationTest " , " ByteArrayRandomAccessData
use ir size instead of graal node count in hotspotprofilinginfo .
refactor CellCopyPolicy to use a constructor instead of cloning for better encapsulation to improve code readability and maintainability by reducing
added a ` resetIconLoadResult ( ) ` method to ` FloatingIconView ` and modified its usage in ` Launcher . java
replaced ` f . getValues ( ) ` with ` f . getRawValueCharSequences ( ) ` in ` EntityCapsManager . java `
updated layout dimensions based on device orientation in IconRecentsView . java to ensure correct top and bottom dimensions are applied based on device orientation
deleted the AddAdapter . java file to the functionality was no longer needed in the project
refactor constructor code handling in NonStaticLifter . java to improve readability and maintainability to ensure proper handling of empty constructor code lists
added a boolean parameter ` processSortCols ` to the ` OpTraitsRulesProcFactory ` constructor and modified the conditions for adding bucket column names
refactor message looper logic in TestLogWatcher . java to improve clarity and error handling to enhance test reliability by ensuring messages are
added a print statement for " < any > " in Java2TypeScriptTranslator . java to enhance output formatting for better readability
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
added a conditional check to set the SPRING _ AOP _ PROXY _ TARGET _ CLASS to true in TraceEnvironmentPostProcessor . java
removed the singletonLock condition from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary configuration
renamed methods responseClassCallback and forwardClassCallback to responseClassCallbackWithClass and forwardClassCallbackWithString to improve clarity and consistency
added a ` appendToFile ` method to ` writeFile ` and modified related methods to include a ` boolean ` parameter to control file writing behavior based
updated MavenExecutionContextView to compare ` mavenSettings ` against ` getSettings ( ) ` in ` MavenExecutionContextView . java ` and re
added a ` name ` parameter to several constructors in ` BuildRuleSourcePath ` , ` PathSourcePath ` , ` SourcePath ` ,
updated the redirect URI comparison logic in OAuth20CallbackAuthorizeEndpointController and added a new test for operation clients with the same redirect URI to ensure
replaced ` values ( ) . toArray ( EMPTY _ ANNOTATIONS _ ARRAY ) ` with ` AnnotationParser . toArray ( declaredAnnotations ) `
updated method calls from ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` to ` getBadgedIconForUser ` and
added a default value for the line separator in GlobalConfiguration . java to provide a clearer description of the default line separator for output
replaced ` isImplementingInterface ` with ` isDerivedClass ` in ` ConfigurationManagerUtils ` and added assertions in ` CMUTests
added a method to sanitize input before passing it to the model in BaseController . java to enhance security by preventing invalid characters from being processed
chore : update java and python dependency ( # 10 )
removed the @ Ignore annotation from the buildFileNamesCanBeDifferentCrossCell method and added a new prepare method for testing to enable the test
refactor CountersReader class to improve code readability to enhance maintainability and ease of understanding for future developers
updated containerType retrieval methods in AllAppsRecyclerView and modified logDeepShortcutsOpen method to accept a View parameter to simplify type handling and
hbase - 25836 add deprecation for server reservoir initial buffer size and max buffer count ( liang xie )
[ native ] fix npe in native window query .
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types in ` Executable . java ` to improve parameter type
updated TestFSTs . java file to improve performance and maintainability of the code
apps - 2323 fix label height calculation for latex and text
hbase - 25836 make increasingtominboundingregionsplitpolicy initial size configurable
removed the model loading state and loader initialization in LauncherClings . java to streamline the loading process by eliminating unnecessary state management
removed unnecessary initialization of keys and updatesAt in ManagedSelector . java to streamline code and improve readability by eliminating redundancy
added a set of excluded datasource names to the SpringDataSourceBeanPostProcessor class to exclude specific datasource beans from processing
added undo functionality to store undo information in TableValuesView and removed null check for cb in TableValuesPanel to improve user experience by ensuring undo
camel - 15836 - camel - aws : improve error handling for kinesis client creation - aws sdk client
refactor channel press / release handling in VelbusSensorHandler to use a loop for multiple channels to improve code readability and maintainability
disable local cache test due to unfavorable benchmark
added a test for illegal database names in IoTDBSessionSimpleIT and modified PartialPath to throw an IllegalPathException if nodes are empty to
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly cleared during garbage collection
renamed ` desiredWorkspaceLeftRightOriginalPx ` and ` desiredWorkspaceHorizontalMarginPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and
refactor CharTokenizer class to improve code readability and maintainability to enhance maintainability and clarity of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
api : fix typo in xenservernetworklabel
updated libGDX and libGDX nightly version from 1.5 . 5 to 1.5 . 6 and 1.5
removed the private Set < String > metricNames and its getter method from SolrCore . java to streamline the code by eliminating unnecessary
replaced ` URI ` with ` Path ` for workingDirectory and absolutePath in ` MavenManifestFactory . java ` to improve code clarity and
replaced the direct check for " mac " with a static final boolean variable ` IS _ MAC ` to improve code readability and maintainability
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the codebase
added slotList . clear ( ) and addAll ( other . slotList ) to the Frame class to ensure slotList is correctly updated from the
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count during tests
added import statements and overridden the ` mergeProperties ` method in ` ConfigurationSpringInitializer ` to ensure that configuration properties are merged correctly based on
updated the ` setupLogging ` method to accept a ` org . slf4j . Logger ` instance instead of a ` Logger ` to
replaced HashMap with LinkedHashMap for aliasToWork across multiple files to maintain predictable iteration order in the code
added logic to determine jdbcHandlerMap for a specific class type to ensure proper handling of JDBC handlers based on its superclass hierarchy
added debug logging statements to multiple item writers in HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter
modified the parsing logic for language ranges in LocaleUtils . java to handle cases where the last semicolon is a semicolon to ensure proper parsing of language
refactor closeHandler invocation to use handlerContext ' s executeFromIO method to ensure proper execution of the closeHandler on the handler context
bugzilla 56969 : cache xssftable in xssfworkbook for performance
updated schema text formatting logic to include BASIC schema text detail type to ensure accurate formatting of schema text for better debugging
updated MongoFactoryBean to MongoClientFactoryBean and added import for MongoClient in MongoNamespaceReplicaSetTests . java to ensure compatibility with the
replace HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order while maintaining insertion order
added a check to ensure the TableScanOperator tree is properly cloned before proceeding to avoid potential null pointer exceptions and prevent potential NullPointerExceptions
added a null check for the client ID before processing in DynamicRegistrationClientConfigurationService and refactored client registration logic in JsonFileRegisteredClient
cleared the AchievementList field _ 187981 _ e in StatList . java to ensure proper clearing of the Achievement
initialize userName , productName , and driverClassName to an empty string in MutableDatabaseInfo and MutableJdbcDriverInfo to ensure default values are set
updated permission strings from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog . java
added LongBuffer support to ByteBuffersDataInput and ByteBuffersIndexInput classes to enable efficient reading of long data from multiple buffers for improved
updated file time fields to use seconds and nanoseconds instead of milliseconds in UnixFileAttributes . java and Basic . java to improve precision in time
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection of humongous regions to
added visibility management for the search bar in AllAppsContainerView based on user preferences to improve user experience by controlling search bar visibility based on
updated the method call from ` env . router ( ) ` to ` env . routes ( ) ` in ` EnvRouterFeature . java `
added null checks for ` cur ` and ` next ` in ` LineChartRenderer . java ` to prevent potential NullPointerExceptions during rendering
added a new action for reloading the page in the menu to enhance user experience by allowing users to reload the page dynamically
changed log level from info to warn in SQLManager . java from info to warn for missing database entries to enhance logging detail for better debugging and
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that the configuration type does not have a selected version
replaced FactoryRegistry with ServiceLoader for loading extensions in GeoServerExtensions . java to simplify the loading process and improve code maintainability
added closeTable ( ) method and finalize ( ) method in HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and implemented logging in ` HiveViewImpl ` to ensure proper resource management
updated XMLSAXHandler and ElementHandlerFactory to use HashMap instead of Collections . EMPTY _ MAP and added a new feature for external DTD
replaced ` JdbCommand . cont ( ) . waitForPrompt ( ) ` with ` Jdb . contToExit ( 1 ) `
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to ensure the ` getType ` method
fix concurrentmodificationexception in expressionthreadpoolmanager when threadpool be remove
updated the system property for the DEFAULT _ HTTP _ PORT from " port " to " vertx . httpPort " to ensure compatibility with the
replaced ` addCaptureListener ( ) ` with ` addListener ( ) ` in ` buttonTable . addListener ( ) ` to simplify listener registration
increased the default batch size from 10 to available processors in NewSessionQueueOptions . java to optimize the batch size based on available processors
added error handling for resource manager connection establishment in TaskExecutor . java to improve robustness by logging exceptions during connection establishment
[ hotfix ] [ core ] make lambda expression fallback for abstractmemberfunctioninvokation more robust .
updated error message formatting in the ProgressBar class to include additional context for min and max parameters to improve clarity of error messages for better debugging and
added ` owner ` parameter to ` onMessage ` method across multiple classes to enhance message handling by associating messages with their owner
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` , implemented their own methods in the ` com . codename1
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
# 363 - enh : add setbeanid ( ) method to ebeanserver to set bean id ( # 363 )
updated the XSL transformation method to use a dynamic retrieval method to improve flexibility by allowing dynamic retrieval of the add - menu - to -
added a list of RequestMatcher instances to the HttpSecurity class to ensure that all request matchers are added to the matchers list
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper hashing and equality comparison for ContactResource instances
move request and response to abstractprocessor so it can be reuse by other processor .
updated logging messages and error messages in FileManager . java to improve clarity of error messages and enhance logging clarity
reset mock control in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper cleanup of resources before tests are executed
added imports for LambdasWithInterfaces and updated method calls in SyntaxTests . java to improve code clarity and maintainability by utilizing
refactor ConnectionModel and ModeledConnection classes for improved code organization to enhance maintainability and readability of the code
replaced the default empty parser with a fallback parser in ParserDecorator . java to simplify the parsing process by using a more general fallback parser
update fmlsecuritymanager to check if the calling class be one of client , server , and dedicatedserver
removed unnecessary whitespace in AccountUtils , IndexedForest , and CustomPopup classes to improve code readability and maintain consistency
updated parameter key from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method to include a
added a new test method ` testJsxComment ( ) ` and refactored JSX comment parsing logic in ` JsLexerJsx
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for test cases
added a new test method to print error messages when Buck configuration is missing in BuildEndToEndTest and CxxEndToEndTest
added functionality to check the amount of physical memory available in the OperatingSystemMXBean to ensure that the application does not exceed the defined limit for
deprecated the use of ConversionService in MapToLocalDateConverter . java and added a new constructor in MapToLocalDateConverter . java to
added a success flag with a value of true in HiveMetaStoreClient . java to indicate successful execution of the HiveMetaStoreClient
updated string comparison from " = = " to " . equals ( " * " ) " in ResourceReferenceInfo . java and modified the include
added support for " amp . twimg . com / v / " in certain conditions in TimeLineCursorAdapter and TweetActivity to enhance
marked the AreaReference class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor ElementType and Target classes for improved readability to enhance maintainability and clarity of the codebase
added assertions and modified reference kind handling in MemberName . java to improve clarity and functionality of reference kind management
change the default value of submitKeyUpdates from " false " to " true " and synchronize the runChange method to ensure thread safety when accessing
simplified the conditional check for MouseEvent in EditNodeTextField . java to improve code readability and maintainability
camel - 14284 : beanexpression now handle static method on static bean . thanks to benjamin for the patch .
refactor multiple classes related to benchmarking and protocol decoding to improve code organization and maintainability
[ hotfix ] [ test ] fix unchecked warning in agentrunnertest
added ` getDescription ( ) ` methods to multiple classes to provide meaningful descriptions for Maven project dependencies and plugins to enhance clarity and usability of
refactor face addition logic in ObjLoader . java to improve clarity and structure to enhance code readability and maintainability by reducing red
refactor ProcessEngine class to improve code structure to enhance maintainability and readability of the code
replaced instances of ` ReentrantLock ` with ` lock ` in ` JavassistProxyFactory ` and ` JBoss
updated ` PrintMavenAsCycloneDxBom ` to include ` mavenPackaging ` parameter and modified ` getBomReference ` method
updated the back ( ) method to use the event ' s component instead of the default one to ensure the correct component is used for the back
refactor certificate verification logic in SASLAuthentication . java to improve code readability and maintainability
updated type parameters in ObjectArraySubject and related classes for consistency to ensure type safety and improve code clarity
updated method calls from NutchConf to getConf in Fetcher , Generator , and Injector classes to ensure consistent configuration retrieval across the codebase
bugfix : sheet assembly tab be not deselected when it ' s not in use .
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the session ID for external use
added null checks before setting time interval in Node and Edge classes to ensure time interval is only set when it is null to avoid potential NullPointerExceptions
removed the " - logLevel INFO - serverPort " argument from the command in MockServerContainer . java to simplify the command by eliminating
updated error logging to include the exception message to improve error reporting by providing more context in error messages
refactor DispositionProcessor to use CrawlMetadata instead of RobotsHonoringPolicy and update related methods to improve code clarity and
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
camel - 14263 : fix test which fail on window due to file path issue
added a method ` alternativePath ( ) ` to ` ExpectNewDemo ` that returns a ` DataInputStream ` or ` ByteArrayInputStream ` to provide a
updated input initialization to use getFirstFilter ( ) method to ensure proper initialization of the first filter for improved functionality
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance functionality by allowing protection domain management
release resources for mesh , batch , and texture in WaterRipples . java to ensure proper resource management and prevent memory leaks
added a configuration option to disable unsafe optimizations and operations on external tables in Hive to ensure that optimizations are only performed on external tables to
updated the authorization header description in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
removed the FLAG _ SHOW _ WALLPAPER flag and adjusted the offset for wallpaper offsets in Workspace . java to simplify the wall
updated return values in SybaseASADatabase and added SQL query handling in SequenceSnapshotGenerator to ensure correct behavior for sequence creation based on database
nifi - 1748 : fix npe in putsql when the autocommit property be set to false .
added directory creation logic for the parent directory in SnapPuller . java and created corresponding test cases in TestReplicationHandler . java to ensure
updated the AppTarget ID in AppEventProducer from " id : launcher " to " launcher : launcher " to ensure the correct identification of the
modified frame method signatures to accept an additional ByteBuf parameter to enhance flexibility in frame processing by allowing for more flexible handling of output buffers
removed unnecessary parameters from constructors in multiple classes to simplify method signatures and improve code readability
updated the description of the ` GenericUDFStringToMap ` class to include an extended option for splitting text into key - value pairs to enhance
updated PlainFormatter to truncate the instant to milliseconds and modified the formatInstance method to truncate the time to milliseconds to ensure accurate formatting of time objects
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS and added a close method to manage agent closure timeouts to improve reliability
hhh - 15936 avoid reflection to invoke privatelookup in classloadingstrategyhelper
updated Mockito library version to ensure compatibility with the latest features and improvements
updated log message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify the purpose of the log
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable the test due to insufficient sample results
corrected a typo in the error message in GridLayout . java to ensure that rows and columns must be greater than zero to improve cl
refactor DecisionNode and WagonCART classes for improved formatting and error handling to enhance code readability and maintainability while ensuring
added functionality to handle BoundSheetRecords in XLS2CSVmra and TestBOFRecord classes to enable sorting and sorting of BoundSheetRecords
refactor average impulse calculation and improve thrust calculations in ThrustCurveMotor . java to enhance clarity and accuracy of thr
updated InputSystemJme initialization to use inputManager instead of direct instantiation to improve flexibility by allowing the input manager to be set
refactor hash code field offset assignment logic in UniverseBuilder . java to improve clarity and ensure offset is non - negative to enhance code
remove deprecate block . getmesh ( ) , it be no longer use
renamed ` keytabPath ` to ` localKeytabPath ` and updated its assignment logic to improve clarity and consistency in naming con
added a new option ` EMPTY _ WORD _ OPTIONS ` and modified matchers assignment logic in ` LineReaderImpl ` to handle empty word options to
updated the condition for pushing view replica updates in the Keyspace class to ensure that the updates are only pushed when writing commit logs are not
added functionality to set text in ClipboardInterface based on user preferences and default button ID in ResultHandler to enhance user experience by allowing automatic
added a test for batching in JoinedTableTest . java and defined additional properties in JoinedTableTest . java to ensure proper batch
added handling for EntityExistsException in JpaPersistenceService to improve logging clarity when persisting items due to duplicate timestamps
removed the deprecated ` format ( ) ` method from ` CucumberOptions ` and updated its usage in ` RuntimeOptions ` to streamline
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary operations
refactor back key handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the capacity calculation in AbstractStringBuilder and added a new Capacity class for testing to ensure proper capacity management and ensure correct behavior of StringBuffer and StringBuilder
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to handle note
added support for endnote relationships in XWPFDocument and updated footnote retrieval logic in XWPFParagraph to enhance functionality to support end
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event details for better context in authentication processes
added a test method ` testVersion ` to ` BridjOGRDataStoreTest ` class to verify GDAL versioning functionality in the
added a new file ` Lifecycle . java ` that implements network error handling in the UI to handle network errors during the application to improve user experience
updated DeviantartRipper . java to include DACookie and added a timeout mechanism for fetching URLs to improve error handling and
removed unused imports and simplified child component processing in RocketFigure . java to improve code clarity and reduce unnecessary complexity
added support for the Nativewindow surface scaling in PJOGL . java to improve rendering performance by allowing dynamic scaling based on the
auto - select project offline if pub be unavailable ( # 4649 )
replaced the implementation of PackedInts with BlockPackedWriter in DiskDocValuesConsumer . java to improve performance and maintainability by util
updated DefaultStatusRoute class to use SortedSet for routes by status to improve sorting order and simplify status handling logic
removed unnecessary data list and atomic integer handling in GoAwayTest . java to simplify code and improve performance by eliminating unnecessary data processing
added support for setting fluent properties in ReflectionUtils and created a new FluentSetterBean class to enhance the flexibility and functionality of fluent bean management in
refactor BlockingHttpEndpoint to return a ListenableFuture < HttpResponse > instead of a ListenableFuture < ? > to improve response handling by
updated test cases in FileSortByExpressionTest and FileSortByIgnoreCaseExpressionTest to use a prepared folder instead of a hardcoded value to
updated the print statement to use ` getLastAppearedTaskId ( ) ` instead of ` mLastAppearedTaskTarget ` to improve
added support for image PDF formance and image writing scaling in RtfDocumentSettings to enhance flexibility and control over image scaling behavior in the
added logic to conditionally include aggregate function name in column addition based on the processor ' s parameter to enhance flexibility in SQL query execution based
updated test classes to extend ` WithNestedTests . AbstractNestedTest ` instead of ` LuceneTestCase ` and added JUnit rules to
added functionality to select the XCAP enable box and set the XCAP server URI if available to enhance user experience by allowing dynamic configuration of X
ww - 4640 add struts . handle . exception a configurable parameter in dispatcher
added stopEditing methods to manage text and text editing behavior across multiple classes to improve control over text editing behavior in the application
nifi - 1740 : fix npe in controlrate when there be no group set on this flow file
added a new parameter ` isNewComponent ` to the ` showDialog ` method and modified related logic in ` ComponentConfigDialog ` and ` R
added error handling in ChatAnnotation and synchronized the sendText method to ensure thread safety when sending messages to the client
added a condition to check if the operating system is Windows before executing the HTML data flavor test to ensure the test is only executed on Microsoft Windows
added SQL _ SERVER _ SNAPSHOT constant with a value of 0x1000 to TransactionIsolationLevel . java to enhance transaction isolation configuration for impro
replaced the direct addition of a new record to newRecids with a wait loop that waits for a new record to become available to improve
replaced usage of ` JreCompat . getInstance ( ) ` with ` java . util . zip . ZipFile ` across multiple files to simplify
added null check for command class in RegisteredServiceSimpleFormController to avoid potential NullPointerExceptions during service creation
updated disk _ failure _ policy from best _ effort to ignore and added a new case for ignore in CassandraDaemon to improve failure handling by allowing
removed the ` public ` access modifier from several methods in ` RipperInterface . java ` and ` RipStatusHandler . java `
do n ' t try to connect to 127.0 . 0.1 if the from ip be n ' t in ipv6 format
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the code by eliminating unnecessary setter functionality
updated the ` computePartitionAssignment ` method to include a ` ClusterDataCache ` parameter to enhance partition assignment functionality by utilizing a cache for
kristianrosenvold : add an option to disable automatic removal of a container
refactor DefaultSeleneseCommand to improve argument parsing and error handling to enhance robustness and provide clearer error handling for invalid input
added a MultipleAttemptsRule to the CreateGlossaryTests class to manage multiple attempts during test execution
updated references in ModelResolver to use ` Components . COMPONENTS _ SCHEMAS _ REF ` instead of ` allOfRef ` and
refactor EntityDeletedEvent to use JsonUtils for serialization and serialization to improve code readability and maintainability
added a new constant ` MI _ GOP ` and updated related conditions in ` FormatConfiguration ` , ` DLNAMediaInfo `
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate testing of return type printing
added a lock to manage concurrent access in ParseConfigUtils . java to ensure thread safety when accessing shared resources
added AcquireReleaseColumnsSegmentOperator support to the MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and prevent potential memory leaks
simonstewart : fix a couple of test failure in the firefox driver .
added @ return annotation to methods in HasAndroidDeviceDetails . java and updated default return types in getSystemBars method to improve method clarity
removed unnecessary checks for dead bug instances in multiple classes to simplify code and improve readability by eliminating unnecessary checks
bugfix # 209022 - disable label in GTK import
added multiple @ Override annotations in CacheControlImpl . java to ensure proper method overriding and improve code clarity
added a check for empty recurrence and a test for returning a date in the future to ensure that weekly actions without weekdays return a date
replaced the uploadButton functionality with an actionMenu for enabling upload tasks to streamline the upload functionality by utilizing a menu item for
refactor multiple classes related to message expression management to improve code organization and maintainability
added ` loadMetaData ` method implementation in ` MeXBTExchange ` and ` RippleExchange ` classes to load exchange metadata from an
added a WritableSerializer to handle Hadoop data types in CrawlDbReader to enable JSON serialization for Writable objects in the CrawlDbReader class
removed unused imports and added a TesterRequest class in TestJaspicBasicAuthenticator . java to streamline code by eliminating unnecessary
added configurationPid to the Component annotation in MDNSDiscoveryService . java to provide a specific configuration for the DiscoveryService
added a null check for messageItem before scrolling to the layout to avoid potential NullPointerExceptions when messageItem is null
added a custom worker thread to the ForkJoinPool instantiation in BPIndexReorderer and TestBPIndexReorderer to enhance thread
removed redundant assertions related to data node and name node roles in RoleCommandOrderTest . java to streamline test logic for better readability and
added restoreLocalInfoFromTableInfo ( ) method and modified its usage in PartInfo . java to ensure that the tableInfo is not null
removed unnecessary whitespace in conditional statements across multiple files to improve code readability and maintain consistency
added matrix transformations to the sprite batch in BitmapFontTest . java to ensure proper scaling and rendering of the logo sprite
[ hotfix ] [ python ] streamphysicalpythongroupwindowaggregaterule should exclude built - in aggregate
removed the ` hasPendingEcho ` field and related methods from ` EndpointState ` , ` Gossiper ` , and ` Server `
added a method to retrieve unreachable token owners and updated method names in Gossiper and StorageProxy classes to improve clarity and consistency in
mondrian : fix CoordMultiplyReplacer to not change to multiplication .
updated content type handling in FormAuthenticator and added getter and setter methods in SavedRequest to ensure the correct content type is set based on the
updated access modifiers and added null checks for ` device ` , ` config ` , and ` display ` in ` XToolkit . java `
refactor RecommenderJob and AbstractJob classes for improved clarity to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] use reentrantreadwritelock in environmentimpl
added a test for reading identity providers in different identity zones using the identity token to ensure that the identity provider functionality works correctly for different identity providers
updated job scheduling to use an ExpireJob instead of a specific job and modified timestamp handling in PointInTimeTrigger to improve job management and
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
send heartbeat to all broker when rebalance change
added a new property ` getDetachedMkDirMode ( ) ` to manage detached directory modes across multiple classes to provide a mechanism for
[ java ] add a slow down service to the live follower when there be a slow down follower .
updated default label pattern in JabRefPreferences from " [ authors3 ] [ year ] " to " [ auth ] [ year ] "
updated dependency handling in DBinaryDescription , DLibraryDescription , and DTestDescription to utilize CxxPlatforms for parsing parse time dependencies
refactor GoogleCloudAPI to utilize OAuthClientService and manage disposal methods in GoogleTTSService to improve resource management and ensure proper
added a check for dynamic done file name in the GenericFileOnCompletion class and improved exception handling in FileConsumeDoneFileIssueTest to
added a boolean property ` reopenReaders ` to ` SolrConfig ` and modified the condition in ` SolrCore ` to conditionally reopen readers based
added a new static string for the dialect version in FreeplaneVersion . java and included it in MapWriter . java to facilitate
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to support date
added a method ` dup ` in ` mmm Attr . java ` and created a new test class ` ppp PrimitiveTypeInBoundFor
refactor ` Condition ` to use a lambda expression instead of an anonymous class and update its implementation to improve readability and maintainability of the
replaced TermQuery with ConstantScoreQuery and updated expected value calculation in TestFacetsCollector . java to improve search functionality and ensure correct expected
removed multiple unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve readability
added functionality to provide direct nearby upload preferences in CommonsApplicationModule to enhance user experience by providing shared preferences for nearby uploads
added support for handling the " SYSIBM " and " SYSDUMMY1 " modes in the database mode handling to ensure compatibility with
added conditional annotations and improved logging formatting in TraceGatewayEnvironmentPostProcessor . java , SamplerAutoConfiguration . java , and SamplerAuto
added functionality to manage the last process ID in POIXMLProperties and updated related tests in TestHPSFProperties to improve property management and ensure
tiff : fix float _ neg _ infinity for tiff with no data
refactor CliDriver to improve exception handling and streamline process execution to enhance code clarity and maintainability while ensuring proper resource management
( chore ) camel - mock - rest - adapter : replace executor with schedulers
[ drools - 7 ] make ruleconditionmapper . selectbyruleidset ( set < string > ruleidset ) configurable ( #
added a method ` addExitDescription ` to ` ExitStatus ` and refactored stack trace handling in ` AbstractJob ` and ` Abstract
minecraftforge / minecraftforge / minecraftforge / multiblockrenderhandler # rendermultiblock
corrected the spelling of " columnFamily " to " columnFamilyColumn " in the SliceReadCommand class to ensure accurate representation of the column family
removed unnecessary import of Collections and simplified range length calculation in PlotConfiguration . java to improve code readability and maintainability
replaced ` buildUIAlertView ` with ` buildUIAlertController ` and introduced ` VoidBlock1 < UITextField > `
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in parameter naming
added assertion to check for null message in AdvServiceTest to ensure that the service message is not null before proceeding
updated key handling in MappingMongoConverter to ensure proper escaping of map keys to improve key conversion accuracy and prevent potential issues with custom write targets
updated Timber logging format in NearbyMapFragment . java to ensure consistent formatting of log output for better readability
camel - 14263 : camel - jbang - provide a way to access the deprecated property of the camel context .
refactor FuzzyLikeThisQuery to handle null field retrieval and add a test for non - existing fields to improve robustness by preventing
refactor ` writeApplicationsLinks ` method to include a ` tabularList ` parameter and update related method calls to improve clarity and functionality of
( chore ) camel - dspace : use identifierservicefactory instead of servicefactory
update ` assignBytes ` method calls to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure accurate byte assignment
changed the return type of the getDisplayScript method from an abstract String to a non - abstract String to allow the method to return a null value
simonstewart : add a sequence to the keypress and keyrelease to the remotewebdriver .
pdfbox - 4892 : fix arraylist size , a suggest by valerybokov
added a wait mechanism for empty activeInterfaces in NetworkConfigurationWatcher . java and suppression warnings in NetworkManagerListenerImpl . java to ensure proper
refactor HSSFWorkbook to encapsulate object retrieval logic into a separate method ` getAllEmbeddedObjects ` to improve code readability and maintain
added import statement for jogamp . common . os . elf . Shdr in ShaderNodeLoaderDelegate . java to utilize
updated variable names and initialization for roleParams in AmbariManagementControllerImpl . java to improve code clarity and maintain consistency in variable naming
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font types
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourg
refactor LiveTvGuideActivity to use a specific calendar for current time and update related methods to improve code clarity and maintainability by
updated method invocation to use Whitebox ' s getMethod method instead of getDeclaredMethod in MockGateway and added new test classes for CommonParentTest and
added calls to dlopen for specific library files " libfreetype . so " and " libfontmanager . so " in JRE
refactor variable replacer handling and introduce a new helper method for multi - variable functions to improve code readability and maintainability by reducing
loop safepoint elimination : add protect non - overflowing unsigned guard .
refactored the instance checking logic in TypeFrameModelingVisitor . java to improve clarity and maintainability to enhance code readability and
added a new ` LocalizedString ` class and refactored ` Attr ` and ` T6758789a ` classes to implement
added a ` disableClasspathSearch ` property and its getter / setter in ` ServerConfig ` , and modified the conditional check in ` DefaultContainer
change the visibility of the ` formats ` array from private to private final and utilize ` Arrays . copyOf ` for better immutability to
fix the default value of retries ( ) from 0 to 2 in Reference . java and annotationpropertyvaluesadaptertest . java .
added JSON parsing for Settings and modified usage message in TexturePacker . java to enhance functionality by allowing settings file to be passed as a parameter
added text views for uploaded images and used by Wiki in AchievementsFragment to improve user interface clarity by displaying relevant text instead of
added mock and logger methods for annotation processing and parsing in TranslatingJavacPhaseTracerTest . java to enhance test structure and ensure proper
added a new ` CategoryInfo ` class and modified the URL in ` CategoryInterface . java ` , and modified the ` MwQueryPage
updated error message from " username " to " password cannot be empty " in AuthzAuthenticationRequest . java to improve clarity of error messages
added accessibility features and refactored timeout handling in TaskbarStashController to enhance accessibility features and improve code maintainability
added a condition to check for the presence of a ' ^ ' character in the signature and added an exception for throwing NoSuchElementException to ensure that NoSuchElementException
updated access flags in ClassVisitorDriverFromElement and added new test cases for generic interface signatures to ensure correct access control for static interfaces and enum
added null checks for input in IntervalFilter and LowpassIntervalsSource classes to ensure input is not null to avoid potential NullPointerExceptions
added tests for the ` makePopulatedMap ( ) ` method and ` testEntrySetIteratorLastNext ( ) ` method in ` Map
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility for the TreeMap class
[ te ] fix createdAt ( ) to use second instead of millisecond .
updated locus handling from " grobcovC1 " to " grobcovC0 " and added a method to retrieve the
added EncryptionUtils import and called deleteKeyForAccount method to delete private and public keys for accounts to enhance security by ensuring private and public keys
replaced hardcoded " keep - alive " with a static method ` keepAliveHeaderValue ` in ` JDKAsyncHttpProvider ` and ` AsyncHttp
added a check to return early if interceptorList is empty in PostJoinMapOperation . java and a corresponding test in PostJoinMapOperationTest
hhh - 14936 - remove unused processor in standarddialect . java
removed the ` spillEnabled ` parameter from several constructors in ` BaseHybridHashTable ` , ` BinaryHashTable ` , and `
refactor EnvironmentVariableHelper to use Optional for better handling of process environment variables to improve flexibility and maintainability of environment variable retrieval
added null checks and improved import statements in DefaultActionMapper . java to enhance code robustness and prevent potential NullPointerExceptions
added SerializableMode import to Mockito . java and modified the closing brace in PluginSwitch . java to ensure compatibility with the latest Mockito features
added handling for nullable fields in AbstractBeanDefinition to ensure proper setting of field values based on declared nullable status
refactor SQL query parsing logic and introduce isolation level handling in multiple classes to improve code clarity and support additional isolation levels in select statements
added constants for server2 transport mode and HTTP path in HiveConnection . java to improve code readability and maintainability by reducing redundancy
added an override method ` isCacheable ( LeafReaderContext ctx ) ` in ` GlobalOrdinalsWithScoreQuery . java ` to
added a new file TestStrangeControl . java that implements a thread - safe test for StrangeControl to facilitate testing of
updated file naming from " % s . json " to " % s . jsfile " and " % s . jslib " in Js
added selectionStart and selectionEnd variables and their respective setSelection methods to ShadowEditText . java to enable tracking of the start and end of
( chore ) camel - grpc : use try - with - resources to prevent resource leak
added a ` use ` method to ` Jooby ` , ` Router ` , and ` JoobyTest ` classes to
added a null check for the fst variable in FreeTextSuggester . java to ensure proper error handling for unsupported lookups
updated string handling in T4975569 . java and T6729471 . java , and added URL verification in T672947
added ABI writer class loading and logging in JavacInMemoryStep . java to ensure proper instantiation of processors based on the loaded AB
add @ suppresswarnings ( ` ` booleanmethodisalwaysinverted ' ' ) to ` ` pubroot . isalwaysinverted ' '
added checks to ensure the scheduled executor service is stopped before scheduling a pull request execution to avoid potential null pointer exceptions and log a warning if the
refactor EnergyEndpointer class to improve code structure to enhance maintainability and readability of the code
refactor ComponentPresetChooserDialog to use an ordered list for displayed column keys instead of an array to improve performance by avoiding unnecessary calculations when
remove unused import of BufferedInputStream and IOUtils in BazaarRepository , CVSRepository , and IndexDatabase classes to improve code cleanliness
camel - google - sheets : fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated its usage in ` CxxLibrary
deleted the Constants . java and DistanceUtils . java files to remove unused components to streamline the codebase
refactor key splitting logic in RandomPartitioner . java to improve clarity and efficiency to enhance code readability and maintainability by reducing
[ gr - 16936 ] remove @ fold annotation from native - image - generator .
added a new test method ` testCreateInline ` and refactored the ` create ` method in ` RoleBindingOperationsImpl ` to improve
added debug logging statements to UaaSessionCookieConfig for session cookie configuration to improve visibility into session cookie configuration for better debugging and monitoring
update file name calculation to use cal . get ( calendar . day _ of _ year ) instead of LOG _ DAYS to ensure accurate file name
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 567 : 5
added error handling for option usage in JavapTask . java and created a new class T8033711 . java with a main
replaced calls to ` collect ( toList ( ) ) ` with ` toList ( ) ` in multiple files to standardize method usage and improve
[ hotfix ] [ runtime ] taskdriver # getacquiretask should return null if shutdown
[ hotfix ] [ network ] add tiered storage parameter to inputgatespecutils # defaultmaxrequiredbufferspergate
replaced the static final integer SUCCESS _ CODE with a static method isNotSuccessStatus in multiple services to improve code readability and maintainability by
added useGL20 configuration to Cuboc and modified LwjglApplication instantiation to enable GL20 usage in the application configuration
simplified the return type check in JimpleBody . java to improve code readability and maintainability
refactor OutputMacroExpander to use Arg and AddToRuleKey for supplementary output handling to improve code clarity and maintainability by
filter out job that do n ' t complete in simpletestinclustersupport # assertnojobslefteventually
added " \ \ build \ " to the condition for duplicateWords in MergeWordsListTask . java to ensure that duplicate words do not include
instructor : fix instructorfeedbacksessionresultsbundle . getresponsecomments ( ) and instructorfeedbackresponsecomment . getresponsecomments ( )
removed unnecessary whitespace in the isMixingNeeded ( ) method call to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java that implements a test for escaping through an anonymous object to ensure that the escaping logic works correctly
replaced manual stream skip with IOUtils . read for better readability to improve code maintainability and reduce boilerplate
added error handling and interceptor setup in ConnectionPool and JdbcInterceptor classes , and introduced a test for failed SQL queries in TestSlowQueryReport to
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of exceptions in the application
hbase - 15836 fix the issue that lrublockcache . cacheblock ( ) do not return the current size of the block
removed unnecessary check for taskCount in RecentsView . java to simplify code by eliminating unnecessary checks
added instance config change listener to HelixBrokerStarter and changed sleep duration from 1000ms to 5000ms in HelixServerStarter to
added a new interface ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` and integrated it into the ` Coinmate
improve error message when systempath refer to project . basedir
pdfbox - 4892 : avoid duplicate key , a suggest by valerybokov
add support for setdisplaydata ( ) to ptransform . fix # 2748
replaced instances of ` Truth . THROW _ ASSERTION _ ERROR ` with ` assertThat ( ( Object ) null ) `
disabled MD2 and RSA key algorithms in ClientJSSEServerJSSE . java to ensure compatibility with modern security standards
updated error messages in OptionData . java for clarity and consistency to improve readability and maintainability of the code
updated module - info . java files for mmm and ppp modules to improve module dependencies and maintainability
added error handling and improved connection ensurement in IOSImplementation . java to ensure proper error reporting and handle potential IOException gracefully
updated sCheckingEvents initialization in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to ensure proper cleanup of
added exception handling and improved resource management in FileSinkOperator . java and SortedDynPartitionOptimizer . java to enhance error management and ensure proper
added diagnostic information to the execution process in SchemaGenerator . java to enhance debugging capabilities by providing detailed diagnostic information
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to provide a more specific exception type
refactor DataSourceMonitorTests to improve test coverage to enhance reliability and reliability of data source monitoring functionality
added a ` Set < String > ` ` loadedResourcePaths ` to track and manage loaded resource paths to improve efficiency by avoiding unnecessary scanning
updated error logging to handle null test instances more gracefully to improve robustness by providing clearer error messages when the service initialization fails
added null check for the input object and updated response handling in RoutingInBoundHandler . java to improve robustness by handling null values and ensuring
added natIp field and updated log message format in EkeyUdpPacketReceiver and EkeyHandler classes to improve clarity of IP address
replaced BaseAllocator with NettyAllocationManager and added ArrowByteBufAllocator in WritableByteChannelAdapter and Deserializer classes to utilize the
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added checks for null header and body buffers in HttpConnection . java and implemented a new test case in HttpConnection . java to ensure proper handling
refactor subscription handling in MultiTimeout to use AtomicReference and AtomicLong for better clarity to improve code readability and maintainability by redu
add compaction limit to leveledmanifest . getoverlappedstarvedsstables ( ) . patch by jbellis ; review by jb
added a test annotation to the TestOrcTimezone1 class to facilitate testing of timezone - related functionality
refactor conditional logic to include substrings for enabled metrics and timers to improve readability and maintainability of the code
added error handling for JSON processing in PinotSegmentRestletResource and simplified return statements in TraceContext and TraceContextTest to improve robustness
added null check for columnClass before retrieving its superclass in JTable . java and created a new test class Test6888156 . java
added conditional checks for the existence of the shell in IDEService . java to handle cases where the shell is not available and provide a default
increased the number of subscriptions deleted from 10 to 1 in DatabaseCleaningService . java to optimize the deletion process by allowing for more
updated test instances from List to Set in MockitoExtension . java and added a new ClassWithDependency class in JunitJupiterTest
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
disable transaction and disable file mmap operations in BTreeMapTest . java to ensure proper resource management and prevent potential memory leaks
modified the iterator initialization in SortedIntList and added a reset method to ensure consistent iterator behavior and prevent memory leaks
unregister jmx in defaultremoteproxy so it do n ' t swallow exception
[ hotfix ] [ doc ] increase default writebuffer size for rocksdb to 64mb
removed the ' true ' parameter from the constructor call in the Style class to simplify the method signature for better readability and maintainability
replaced the addition of " message " with " addArgumentNoEncoding " in FacebookShare . java to ensure that the message is not encoded for
added JSON graph logging for pipeline execution in SamzaRunner . java to improve logging clarity for better monitoring of pipeline execution results
updated HelloAudio . java to use MouseInput . BUTTON _ LEFT instead of Vector3f . ZERO and modified audio node names for clarity
[ hotfix ] fix checkstyle violation in looprotatebadnodebudget . java
added type information handling to the convertToMongoType method across multiple classes to improve type conversion accuracy and prevent potential null pointer exceptions
ggb - 2321 display imaginary unit in inputbox , remove iscomplex ( ) method
simonstewart : fix the issue that ` ` sendkeys to active element ' ' return an empty string instead of an array .
added methods to scale images with specified dimensions in AddAndScaleMultiImage . java to enhance image scaling flexibility and prevent potential issues with negative
removed the extendArgumentCheck ( ) and extendWrapStore ( ) methods from DBMaker . java to streamline the code by eliminating
add call to update shift state now to ensure the keyboard updates the shift state correctly
removed the ` DETECTED _ ACTIVITY ` constant from ` BundleConstants ` and updated related references in ` SerializableLocation ` , ` CSV
updated package imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket
removed the import of Buildable from AaptPackageResources . java to eliminate unnecessary dependencies and improve code clarity
added comments to comments in CodeException , ConstantInvokeDynamic , ConstantMethodHandle , and ConstantMethodType classes to clarify that these indices are
updated the exception message in WebSocketUpgradeHandler to include the status code of the upgrade protocol to provide clearer feedback on the upgrade protocol ' s
corrected formatting of the assignment of blockMode in P11Cipher . java to improve code readability and maintain consistency
updated Mockito library version to ensure compatibility with the latest features and improvements
removed duplicate code for owner check in Merge . java to streamline the code for better readability and maintainability
removed deprecated getConversationID methods from HttpContentResponse , HttpRequest , HttpResponse , and Response classes to streamline the code by eliminating outdated
replaced ` com . sun . speech . freetts . PhoneSet ` with ` de . dfki . lt . mary .
replaced the ` stripQuotes ` method in ` BaseSemanticAnalyzer ` with ` PlanUtils ` and updated references in ` PartitionSpec `
refactor rendering methods and improve clarity in DLNAResource and Request classes to enhance code readability and maintainability by consolidating rendering
added resolution and remote artifact repositories to the DefaultPluginManager to ensure all relevant repositories are included in the plugin manager
camel - 16400 : camel - cxf - add spring spring context to test to avoid resource leak .
chore : integrate new gapic - generator - java and rules _ gapic ( # 49 )
added JUnit Ignore annotation to SessionTest . java to temporarily disable frequent failure scenarios
added a new File object instantiation in the ZipFile class to create a new file object based on the provided name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in
added a new test class ` ChannelTest ` and modified ` Channel ` constructor to use ` ChannelUID ` to ensure proper initialization of ` Channel
added StackTraceUtils and integrated it into ReflectionUtils and GenericDAOImpl for better stack trace logging to improve debugging capabilities by filtering out specific class packages and
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the test code and improve readability
refactor unparseList calls to handle parentheses more effectively in FunDefBase and ParenthesesFunDef classes to improve flexibility in
updated SQL query to include cluster - specific queries and improved error logging to enhance query accuracy and provide clearer context about configs selected more than
corrected the spelling of " supressWarnings " to " suppressWarnings " and added a conditional check for Java version to ensure compatibility with
updated JsonTreeReader to throw an exception for unexpected JsonToken values and added a test for nextJsonElement in JsonElementReaderTest to improve error handling
added a new option ` -- ` to the ` TestCommand ` class and a corresponding test case in ` ExternalTestRunnerIntegrationTest ` to
added methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality for deduping
[ hotfix ] [ table - planner ] [ examples ] add option to use blink planner in streaming mode
added a call to clear the database in MssqlIntegrationTest . java to ensure the database is properly cleared before tests execution
updated Progress class to allow dynamic display of progress percentage and added dispose method to improve progress management and ensure proper disposal of the progress listener
added a check to ensure the parent file exists before proceeding to prevent potential errors when accessing the parent file
added methods for writing POIDocuments using OutputStream and File to improve resource management and ensure proper closure of output streams
updated print statements in JavaBuild . java to include newline characters for run options and sketch name to improve readability and maintain consistency in output formatting
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for their values to enhance
added authentication logic for generic user search in CustomQueryFilterFactory and updated transport configurations in TestLdapAtnProviderWithMiniDS to enhance
added support for specifying default ports in the NettyHttpServer and DefaultRouter classes to enhance routing flexibility by allowing routes to specify specific ports
updated SnmpTargetHandler and related tests to utilize ThingHandlerHelper for status updates and improved mock handling to enhance status management and ensure
added a line to clarify that only instructors with submit privileges are allowed for submitting feedback to enhance user understanding of session
added a deprecation annotation to the AvailableSettings class to indicate that the class is outdated and may be removed in future versions
refactor path handling logic in FileResolverImpl . java and add WarFileResolverTest . java to improve path parsing logic and enhance test
updated log message formatting in DocumentsWriterPerThread . java to improve clarity of log output for better debugging
replaced the method call from ` func _ 149739 _ a ( ) ` to ` getUnlocalizedName ( ) ` in the
updated whitespace stripping condition from ` stripWhitespaceX ` and ` stripWhitespaceY ` to ` stripWhitespaceX ` and ` stripWhitespaceY
updated the lock size in FeedRefreshUpdater from a fixed value to a fixed value of 1000 to improve performance by reducing the lock ' s
updated the ` exactSearch ` parameter in ` MetadataIndexNode ` from ` false ` to ` exactSearch ` in ` TsFileSequenceReader
removed the ` DateFormat ` parameter from the ` makeResultFromDelimitedString ` method and its usage in the ` CSVSaveService ` class
added preferred size for the pane based on the preferred size of FList to improve UI responsiveness by adjusting the pane ' s preferred
replaced OffsetAttribute with a State instance in BeiderMorseFilter and added a test for custom keywords in TestBeiderMorseFilter
refactor UpnpHandler , UpnpRendererHandler , UpnpServerHandler , and UpnpEntryQueue classes to improve code organization and maintain
update the position of the burst to use BlockPos instead of the block position directly to ensure that the burst position is correctly represented as a coordinate
added JUnit 5 assertions and a new test factory method for JSON serialization to enhance test coverage and ensure proper functionality of JSON serialization
refactor MutableContextDataSupplier to improve code readability to enhance maintainability and ease of understanding for future developers
changed exception handling from ` Exception ` to ` Throwable ` in ` CoreContainer . java ` to improve error handling clarity and log a warning
added https parameter to the KubernetesMockServer constructor to enable secure communication for the mock web server
make defaultjavaloweringprovider use stamp for foreign call
updated response headers in DefaultServlet to include " GET , HEAD , POST , OPTIONS " and changed HTTP status assertions in DefaultServletTest to enhance
tika - 2338 -- use locale . us a default locale for lat _ long _ format
updated ` ShowFileRequestHandler ` to return a ` SolrException ` instead of throwing ` SolrException ` for 404 errors to improve error handling by
added exception handling in ReflectorClassWriter and a corresponding test in ReflectorTest to ensure proper exception handling and validation in the reflector
added a clamp method to the Vector class and its implementation in Vector2 to enhance vector operations by allowing clamping between min and max values
added client scope checks and modified access token creation in ChainedTokenGranter . java to ensure proper scope management and improve access token creation
refactor BC _ instanceof class to improve readability to enhance maintainability and ease of understanding for future developers
added a logger instance and modified save flags in EditorBottomSheetBehavior . java to enhance logging functionality and improve code clarity
updated JUnit annotations in UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and
hhh - 15936 - fix classcastexception in nativequeryimpl . addscalar ( columnalias , type )
added caching mechanism for font Aat information in SunLayoutEngine . java to improve performance by reducing redundant checks for font availability
replaced ` IntBigArray ` with ` IntArrayList ` and updated instance size calculation in ` TypedSet . java ` to improve performance and
danielwagnerhall : use sessionid instead of sessioid for getcurrentwindowhandle and getwindowhandles
refactor BrokerRequestUtils to improve code structure to enhance maintainability and readability of the code
refactor InjectorBuilderImpl to use a map for instance management instead of a LinkedList to improve readability and maintainability of the code
updated the method calls in RawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to use buildTarget . getBasePath ( ) instead of
added a null check for the input string before parsing a integer to avoid potential NullPointerExceptions when the input is null
remove the packet listener from the parent connection in the jabber protocol implementation to ensure that the keep - alive manager is properly managed and avoid
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 in IntHashSet . java to correct the default load
added ` getAllDataTypePhysicalVariations ( ) ` method to ` VectorizationContext ` , ` Vectorizer ` , and ` VectorPTF
changed the package structure of HtmlAssetTranslator and StringsResourceTranslator from ` com . google . zxing ` to ` com . google .
updated the vertical bar layout condition in OverviewState . java to streamline the button handling logic to improve code readability and maintainability by
added @ Entity annotation to BaseActivityEventEntity class to enable serialization and deserialization of BaseActivityEvent entities
added TraceHelper partitioning information for TouchInt sections in NavBarSwipeInteractionHandler and TouchInteractionService to enhance debugging capabilities by providing
added a new file ` InvalidOptions . java ` to implement a class for testing javap options to ensure that - h is unavailable and provide
added a check to ensure the number of displays differs from the expected size in DisplayController . java to prevent incorrect number of displays in the application
refactored the ` getClientIdAndClientSecret ` method to use a new utility method from ` OAuth20Utils ` to improve code readability
change the default value of _ unwrapServletException from false to true in ErrorPageErrorHandler and AsyncContextTest to enable unwrapping of servlet exceptions
added a condition to set the status of ShortcutInfo to DEFAULT when the condition is met to ensure the correct status is set based on shortcut
camel - 14284 : fixed seda endpoint to set default queue size to 500
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App . java and defined them in Kernel . java to enable batch processing
added HttpClient configuration handling in ThirdEyeApplication . java to enable proper configuration of HTTP client in the application
added sorting functionality to JobInstanceFetchRequest and modified batch size retrieval in JpaJobPersistenceImpl to enhance data retrieval capabilities by allowing sorting options
updated the ` CryptoFacilitiesTradeService ` to use the specific ` cancelCryptoFacilitiesOrder ` method instead of throwing an ` ExchangeException
make sure keyboard be hide after click in algebraviewweb . close ( )
sulong : use native function handle for memcpy in llvm heap .
reformatted code for consistency and readability in BindLdapAuthenticationHandler . java to improve code maintainability and clarity
ggb - 2266 make tooltip blockable by default
updated DefaultDateTypeAdapter to use getDateTimeInstance ( ) instead of DateFormat . DEFAULT and added a setter for dateStyle and timeStyle in Gson
updated playerSet format from " < UID : " to " ( " in ListCommand . java to improve clarity of player set representation
added a check for empty lists in the List class to ensure proper handling of empty lists in the application
added handling for InvocationTargetException and wrapped CommandException in ParametricCallable . java to improve error handling for command execution execution
updated the ` getLikeExpression ` method to include a boolean parameter for regex handling in ` VectorizationContext . java ` to enhance flexibility
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to provide a standardized way to start
added locale handling in the runChild method of LuceneTestCase to ensure consistent behavior across different locales for test cases
refactor multiple classes including PGConnection , ConnectionFactory , SSLFactory , LibPQFactory , WriterHandler , ParameterStatusTest , JsonbTest
refactor context handling logic into a separate method ` initContextHandler ` to improve code readability and error handling to enhance maintainability and ensure
added a test for the RouteBuilder reference in the OSGiBlueprintTestSupport class to ensure that the RouteBuilder correctly retrieves routes from the
[ hotfix ] [ test ] fix test failure of testexecutestreamcommand
refactor return type substitutability methods in mmm Types . java and ppp Check . java to improve code clarity and maintainability
added throttleType enum and updated related methods to handle CHARS and BYTES scenarios to improve handling of throttled template processing based on throttle type
modified color assignment logic in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve code clarity
refactor Annotation and AnnotatedElement classes for improved readability to enhance maintainability and clarity of the codebase
added a new interface ` Model ` and modified ` Sheet ` and ` Workbook ` classes to implement the ` Model ` interface to provide a
camel - 14284 : camel - http - header - filter should use camel - core instead of org . apache \ . camel - core
added a ` clearEntityManager ` property and its getter / setter in ` JpaItemWriter ` and ` JpaItemWriterBuilder ` to
added null checks for ShortcutInfo and improved null handling in InstallShortcutReceiver , Launcher , and LauncherModel classes to enhance st
updated the instantiation of TwoDimensionalCollectionValuedMap to include a default value of true to ensure that the map starts with a valid key for
updated exchange specifications from " btc - e " to " wex . nz " and changed exchange names from " BTC - e " to
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and added null check for child in EncodedTreeReaderFactory .
added null check for files in SegmentInfos and implemented a test for opening the IndexReader after deleting to ensure robust error handling and ensure proper functionality
updated date format in HSearchSortHelperImpl and modified FhirResourceDaoR4SearchWithElasticSearchIT to implement ITestData
updated the calculation of the percentValue in DeviceHandler . java to handle negative values to ensure that the percentValue is rounded down to a valid
updated limit checks from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 14263 : camel - jbang - log routescollected from registry and directory to debug
refactor methods in ` HlsChunkSource ` and ` HlsPlaylistTracker ` for clarity and consistency to improve code readability and maintainability
updated package imports and class names from ` NumericRangeFilterBuilder ` and ` NumericRangeQueryBuilderTestCase ` to ` TestNumericRangeFilterBuilder
[ hotfix ] [ stream ] fix flaky statefuloperatortest . testkeyedstreammap ( )
remove null check for fill and stroke in area and line classes to simplify code by eliminating unnecessary null checks
added dependency injection for LevelDbDataSourceImpl in Blockchain . java and updated related test cases in BlockchainTest . java to enhance blockchain functionality
trim whitespace from the group retrieved from the matcher in SQLPlusSupport . java to ensure consistent formatting by removing leading and trailing spaces
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5669 .
update divider location calculation in DockSplitPaneW . java to improve layout responsiveness by centering the divider
added HEALTHCHECK _ OK _ CALLS and HEALTHCHECK _ BAD _ CALLS metrics to ControllerHealthCheck and updated
hide the sharedAvatars view in LocalFileListAdapter to improve user interface by preventing unnecessary UI elements
move mebis . scss from web to resources / scss / mebis . scss to web
[ java ] do n ' t allow 2 < = args . length for burst command .
added a logging level check before executing commands in LogInterceptor . java to ensure that command execution is only executed when the logging level is fine
replace CountDownLatch with assertWaitUntil for span verification in EventBusTracingTestBase . java to improve test reliability and clarity by
replaced the initialization of the ` locale ` variable with a default value of ` getDefault ( ) ` in the ` QueryParser ` class to
replaced usage of ` Arrays . asList ( ) ` with ` Collections . singletonList ( ) ` in ` EntryCustomizationDialog . java `
[ jbrules - 3614 ] fix bug in betanodeconstraint and add test case
added a new class ` OcspUnauthorized ` and updated ` OcspResponse ` to include the ` UNAUTHORIZED ` case in ` OCSP
added serverState variable and modified server state handling in SSL . java to improve server error management and ensure proper handling of server state changes
added functionality to retrieve and set the open connection count in the SourceCounter and SourceCounterMBean classes to improve monitoring of active connections in the source
change the access modifier of the ` execute ` method from abstract to public in ` ExecutionStrategy ` and add a ` fields ` method in `
refactor ` createDefaultJavaPackageFinder ` method to return ` ImmutableSet < String > ` instead of ` ImmutableSet < String > ` to improve code
replaced the direct instantiation of OutputWriter with a PrintWriter in ScriptExecutable . java to improve code readability and maintainability by using a more
[ hotfix ] [ test ] use random uuid in filesourcetextlinesitcase
added import for DataTable and integrated it into JRubyArgs to enhance functionality for handling DataTable instances in JRuby
updated visibility settings and refactored image retrieval logic in SearchImagesRenderer and ApacheHttpClientMediaWikiApi classes to improve code clarity and ensure
refactor ReadSentimentDataset class for improved readability to enhance maintainability and clarity of the code
improve error message when formula parse fail
added methods to retrieve and set the bind address in WebSocketClient and modified WebSocketFuture visibility to enhance socket binding functionality and improve encapsulation
[ java ] delete archive and aeron directory before close the clustered medium driver to ensure proper resource management and avoid potential memory leaks
refactor widget size logic into a separate method for clarity to improve code readability and maintainability by reducing redundancy
changed the return type of sessionFixationAttribute from Boolean to Boolean to ensure proper handling of session fixation options in the security configuration
updated switch statement in LALogicLinesFragment . java to use an edgeOption parameter instead of a hardcoded parameter to improve flexibility
simonstewart : add backoff mechanism for chrome
added methods to handle HTTP method and HTTP route in TraceExchangeFilterFunction to enhance tracing capabilities by allowing URI templates in span names
modify the logic for determining the compacted ColumnFamily to use Integer . MIN _ VALUE instead of a hardcoded value to improve code clarity
updated return statements in ICC _ Profile and ColorConvertOp classes and added a new InvalidRenderIntentTest class to improve rendering intent handling and
add an option to change the state of the ' isnotsureallowed ' to ' on ' in the feedback question
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
removed the Serializable interface from KafkaRecord and added SuppressFBWarnings annotation in KafkaExactlyOnceSink . java to simplify the class and eliminate unnecessary
added import for PGConnection and modified connection proxy instantiation in PooledConnectionImpl . java and added a test for it in BaseDataSourceTest .
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log level from warn to info for token authentication configuration and changed log level from warn to trace for missing token encryption secret to provide clearer
mark the Hazelcast class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
updated the handling of unlimited key JCE requirement in AmbariManagementControllerImpl and added topology update handling in FinalizeKerberosServerAction
added support for iterator and end types in NamedListCodec and implemented corresponding tests in TestNamedListCodec to enhance functionality and ensure proper handling of
add a null check for partition state before assignment lost partitions in MigrationManager . java and add a test for it in MigrationCommitTest .
added schema inclusion rule to ApiExample . java to exclude public schemas from API documentation
updated the expected value of the mean variable from 3.0 to 7.0 in StreamExpressionTest . java to reflect the correct expected value
refactor coordinate sequence handling in SDO . java and add new test cases in SDOCreateTest . java to improve robustness and ensure
added methods to retrieve the base name and dimension count from the ConstantPool class to enhance functionality for retrieving the base name and dimension count in the
added setDebugEvaluationOutputForNextEval method to FormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes to enable debugging output for
test : disable test that fail on jdk8 +
modified the ` legacyMediaManager ` and ` PlaybackController ` classes to modify the ` isLiveTv ` condition in ` Playback
added a return statement in DynamicStyleBar . java to prevent further processing in the code
added SLF4J logging statements for setting and resetting property in the ReplDump class to facilitate better debugging and monitoring of
refactor ReactiveAuthorizationManager to improve code structure to enhance maintainability and readability of the authorization process
added a check for boolean types in the type check to ensure proper handling of boolean types in the code
fix nullification of stack frame to be public .
refactor multiple Java files to improve code organization and maintainability to enhance maintainability and readability of the codebase
add a new test class ` CaffeineCacheDefaultConfigurationTestSuite ` for verifying transaction - aware cache configurations to ensure that cache
added a method to calculate the bounding box of vertices in the Mesh class to enhance bounding box functionality for different vertex attributes
added a target hash function option to the TargetsCommand class to allow users to choose between sha1 and murmurhash3 hashing algorithms
refactor DefaultConfigurationProperties class for improved clarity to enhance maintainability and readability of the code
added high light colors and alpha settings for d1 , d2 , and d d in ListViewMultiChartActivity and modified highlight paint alpha
removed duplicate entry for tmpPg in pgSgPathPlanMap to streamline plan management by eliminating redundancy
[ hotfix ] [ test ] fix checkstyle violation in infinispanremoteproducerit
added a check to remove existing artifact files in ` MavenArtifactFetcher ` and refactored dependency fetching in ` MavenDependencyResolver ` to improve
updated fragment shader syntax in SpriteBatch . java to include a conditional check for GL _ ES to ensure compatibility with OpenGL ES by avoid
hbase - 26969 rsgroup . getservers ( ) should return set instead of sortedlist ( # 2698 )
added a try - catch block to load the JspPage class and changed log level from warn to debug for TldProcessor configuration to improve logging
added a version aware token filter and updated the CustomAnalyzer and TestCustomAnalyzer to handle it to ensure compatibility with version - aware token processing in
added a test method to verify package archive information retrieval in ShadowPackageManager to ensure correct retrieval of package archive information from the ShadowPackageManager
replaced direct method invocation with MethodUtil . invoke in multiple classes to utilize ReflectUtil for package access checks to enhance security by ensuring package
added handling for project configuration and task events in GradleBuildService and Main classes to improve progress tracking and event handling in the build process
removed synchronization from AndroidWebDriver . java to improve performance by reducing unnecessary synchronization
simplified the initialization failure logic in HikariConfig . java and modified exception handling in HikariPool . java to improve code
removed the parameter ` timeOut ` from the ` getResult ` method and added an ` error ` method in the ` sendHttpRequest ` method to
changed the ` isNative ` field from ` public ` to ` transient ` and updated its usage in ` JMethodIdTable . java ` to
updated error message to specify exactly one static method in CEntryPointCallStubMethod . java to clarify that the exception handler class must
rename ` RuleEnableHandler ` to ` RuleEnablementActionHandler ` in ` CoreModuleHandlerFactory . java ` and ` RuleEnableHandler
refactor multiple classes to improve structure and structure to enhance code readability and maintainability
updated debug logging in AuthzAuthenticationFilter and AuthzAuthenticationManager to handle missing credentials parameter to improve clarity of debug messages for better debugging
updated KafkaDynamicTableFactoryTest and UpsertKafkaDynamicTableFactoryTest to use ` getFullSinkOptions ( ) ` instead of ` getBasicSource
added null check for registrant repository in UsersPanel . java to avoid potential NullPointerException when accessing repository permissions
added support for " . OTF " and " . OTF " extensions in the SunFontManager class to enhance font processing by supporting additional
refactor annotation matching logic to improve clarity and structure to enhance code readability and maintainability by using more descriptive variable names
updated error message from " OFF " to " SEVERE " in Grep . java to improve clarity of error reporting for better debugging
added debug logging checks before logging messages in FaultTolerantChunkProcessor . java to improve performance by avoiding unnecessary string concatenation when debug logging
changed the name of includes and excludes lists from " * * Abstract * Test . java " to " * * / Test . java " to
added home intent handling logic in Launcher . java to improve user experience by allowing movement to the default screen when the home button is pressed
updated the maximum bitrate from 110 to 30 in PMS . java to adjust the bitrate limits for better performance
removed the getOptions ( ) method from CommandLineParser . java to simplify the code by eliminating unnecessary functionality
trim whitespace from the description return value to ensure consistent formatting of the returned description
updated the output filename assignment in XOMParserTest . java to correct the file path format for better readability
removed the pid from the error log message in ProcessBesuNodeRunner . java to simplify the log output by eliminating unnecessary information
added getLoadedMusic and getLoadedSound methods to MusicLoader and SoundLoader classes to provide access to the loaded music and sound
removed unnecessary imports and simplified type assignment in OnBeanCondition . java to improve code clarity and maintainability
added ScreenRecordRule imports and annotations to RequestPinItemTest . java to enable screen recording functionality for test cases
added null check for lrPauseButton before setting its selected state in CPUFeature and MemoryFeature to avoid potential NullPointerExceptions when lrPauseButton is
replaced ` accountsPrefCategory ` with a local variable ` mAccountsPrefCategory ` and refactored related methods to improve code readability
do n ' t send the available event if there be an error in the connection .
refactor StringBuilder initialization in ObjectInputStream to use a conditional initial capacity based on utflen to improve performance by avoiding unnecessary allocation when utflen is
added a property value for " spring . metrics . export . statsd . enabled " in WebApplicationContextRunner and ReactiveWebApplicationContextRunner to disable
refactor InterruptedException class to improve code readability to enhance maintainability and facilitate future development
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the code
refactor SSL connection handling logic in ConnectionCheckOperation . java to improve clarity and correctness in SSL connection detection
modified the conversion logic in ArgumentArrayMessageMapper to handle both String and Map types to ensure proper conversion handling for both String and Map types in
updated type checks for IndexableDSpaceObject in SolrServiceCommunityCollectionItemFilterPlugin . java and modified test expectations in XmlWorkflowFactory
removed AuthenticatorActivity from sExemptOfPasscodeActivites and added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to
refactor : add spoon . template . Template import to patternparameterconfigurator . java ( # 2271 )
changed the return type of the beginDraggingWidget method from void to boolean and added a null check for the drawable to ensure that the widget
added JUnit @ Ignore annotation to TestPackedInts . java to mark the test as ignored due to LUCENE - 4488
added null check and component collection logic in DynamicStyle . java to ensure proper handling of null root and avoid potential NullPointerExceptions
add confusion matrix functionality to TestClassifier and TestSentence classes to enhance testing capabilities by integrating confusion matrix data
rename variable ` lastSampleInError ` to ` lastSampleOk ` and update related logic for clarity to improve code readability and maintain
added unit tests for device connectivity and connection state handling in ShadowBluetoothHeadsetTest . java to ensure correct functionality of device state retrieval and
corrected the spelling of " # autowired " from " # autowire " to " # autowired " in the
added support for the " finalize " method in the ResultObjectProxy class and modified the condition for lazy loading to enhance functionality by allowing the lazy
added null checks for counters object in IntegrationTestBigLinkedList . java to prevent runtime exceptions due to insufficient YARN configuration
added support for CAN _ GET _ INSTANCE _ INFO and implemented the REFERRING _ OBJECTS command in JDWP to enhance functionality
updated the parameter in the setRegisteredServiceFilter method from ' service ' to ' serviceId ' and added a condition to check if the registered service
added a null check for getActivity ( ) before invoking showStorageIssue to prevent potential NullPointerExceptions when getActivity ( ) is not initialized
corrected the spelling of " LOGGER " to " logger " across multiple classes to improve code readability and maintain consistency in logging
added stringType getter and setter methods in DatabaseAdaptor and modified visibility in JDBCSessionDataStore to improve type handling and ensure default values are used for
updated UIMAUpdateRequestProcessorTest . java to replace " language : english " with " suggested _ category : * " and modified exception
refactor thread name handling by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods in ` SessionState
refactor TaskletAdapter class to improve code structure to enhance maintainability and readability of the code
drools - 2200 dmn DecisionTableImpl # evaluateall and dmntableimpl # evaluateall do n ' t handle negative dmn
updated TextureMap . java . patch and modified defaultEnabled variable to true in SplashProgress . java to ensure texture map creation completes before moving on
added a tooltip text to the showCGCP checkbox in RocketPanel . java to enhance user experience by providing a clearer and more d
replaced calls to ` owner . getTypes ( ) . add ( e ) ` with ` owner . addType ( i ) ` in ` Enum
update text and description in the flutterRetargetAction and HotReloadFlutterApp and RestartFlutterApp classes to improve clarity
do n ' t use spreadsheet label if spreadsheet command do n ' t support it
changed the calculation of BRIGHTNESS _ FACTOR from intValue ( ) to doubleValue ( ) in BindingConstants . java to improve precision in
sccm history parser now handle context , date , and branch
added an ` isAdmin ` parameter to the ` createUser ` method and implemented ` listUsers ` and ` userIsAdmin ` methods to enhance user
added null checks for indexedWriteMethod and its return type in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor , and created a new Test
( chore ) camel - dynatrace - exporter : fix formatting
updated method signatures and formatting in Context , Request , and Response classes to improve code readability and maintain consistency in method naming
added a method to set capabilities from a NBTTagCompound to the MixinItemStack class to ensure proper handling of capability data from the
updated assertions in LifecycleUtilsTest to compare execution ID instead of a hardcoded value to ensure that the execution ID matches the actual binding ' s
added validation logic for CreateSmartContract and TriggerSmartContract in Wallet . java and updated contract retrieval in GetContractServlet . java to ensure proper
added package - info . java files for various classes in the com . ibm . dtfj package to provide package - level documentation for better
replaced synchronized block with a loop for updating the tail node in the add method to improve concurrency handling and ensure correct sequence number generation
added a HashSet to track JavaFileObject duplicates in JavadocTool . java and refactored test execution in T7091528 . java to
updated the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to disable IPv6
added support for adding new user parameters in ` LoginServerTokenEndpointFilter ` and created a test for it in ` TokenMvcMockTests `
added a new constant ` C _ KEY ` and modified language checks in ` LanguageFactory ` and ` CPPParserTokenManager ` to support
replaced direct usage of ` MoreExecutors ` with a dedicated ` newSingleThreadExecutor ( ) ` method in multiple files to improve code
added cache control and expiration headers to the response in FormAuthenticator . java and updated response handling in ConstraintTest . java to ensure proper caching behavior
update error logging to include exception message to improve error reporting by providing more context in error messages
added new test classes for ` TestAreaReference ` , ` TestCellReference ` , and ` TestRKUtil ` , and ` Test
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output before retrieving the class directory to avoid potential NullPointerExceptions during execution
added methods to set access controller priorities for before and after resolving in Java2DRenderer to ensure proper handling of access controllers during resolving
added error handling for drawing drawing in TestTriggerCoverage . java to ensure JDK fails on some fonts on Windows machines and prevent build failures
modified the visibility of the HotspotThreadMBean variable and refactored CPU time testing logic in GetInternalThreads . java to enhance thread
added checks for empty comments and last whitespace checks in TabsAndIndentsVisitor . java to ensure proper handling of empty comments and improve code
updated collection rate assertions from 5.0 to 100.0 in SimDistribStateManager . java and TestTriggerIntegration . java to allow
replace ` equals ` with ` equalsIgnoreCase ` in ` DatabaseChangeLog ` , ` RanChangeSet ` , and ` NotRanChangeSetFilter
added a method ` getString ` to retrieve a string value from the map to provide a default value when the key does not exist or is null
added support for military time formatting in TweetActivity based on locale settings to improve date and time display flexibility based on user
nifi - 1748 : fix npe in standardprocesssession when there be no active connection
refactor focus handling in DetailFragment to use a dedicated requestFocus method to improve code readability and maintainability by encapsulating focus request logic
updated the method of setting the extra classpath to handle paths containing spaces to ensure proper formatting of paths in the extra classpath for better compatibility
make sure to allocate a new coordinate matrix before call solve ( )
added import statement for org . springframework . integration . core . message in GenericMessage . java to facilitate the use of Message
updated SQL query construction in PostgresConnector and added a new join method in TaskAttempt to improve code readability and maintainability by encapsulating
updated file filter selection logic in AquaFileChooserUI . java to ensure only valid file filters are set to improve user experience by prevent
remove unnecessary synchronized blocks in P2PTransportManager . java to improve code readability and maintainability
modified the ` toString ( ) ` method in ` ArrayPtg ` to return " TRUE " or " FALSE " based on the boolean value
( chore ) camel - pgtokenizer : migrate test to junit5
refactor Java2TypeScriptTranslator to improve handling of final variables and add a new test for nested anonymous classes to enhance code clarity and
added a sequence creation statement for PostgreSQL auto - increment columns in the AddAutoIncrementChange class to support sequence creation for auto - increment columns in
updated byte reading logic in DataInput . java to handle negative values correctly to improve robustness by preventing potential negative byte values
added assertions to check for dimensions " VerticalPhysicalPixelSpacing " and " HorizontalPhysicalPixelSpacing " in ImageParserTest . java to ensure correct
updated parent assignment to use parent . getParent ( ) directly to ensure proper retrieval of the parent component ' s parent
updated import statements in multiple files for consistency and clarity to improve code readability and maintainability
replaced ENGINE _ finish ( ) with ENGINE _ free ( ) and added initialization for the engine to ensure proper resource management and avoid potential memory
added iteration handling methods to interleave control classes and refactored event firing logic in GenericController and IterationListener to improve iteration event handling and
added resource releasing for HttpContent and NettyStreamingFileUpload in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of logs during test execution
added a check for URLs containing " twitter : / / " and modified the URL loading logic to handle different URL formats to ensure that the application
added a client - based awaiting for the host status in DeploymentGroupTest . java to ensure that the host ' s status is accurately
change logResult from false to true in VisibilityController . java to enable the logging of labels allowed for better debugging
increased the maximum number of auto - retries from 0 to 25 in RestTemplateRetryTests . java to improve test reliability by allowing
removed a print statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to streamline output and
added support for handling " fraction " resource types in ResourceLoader and Converter classes to enable support for fraction resources in the application
added a confirmation check for file write confirmation in BasicFrame . java to enhance user experience by preventing unnecessary write operations
added assertions for tagGroupId and tagArtifactId in UpgradePluginVersion . java to ensure both groupId and artifactId are provided to avoid potential NullPointerExceptions
hbase - 25825 throw quotaexceededexception instead of donotretryioexception when exceed table count
refactor multiple classes including Token , TokenStream , TokenAttribute , FlagsAttribute , OffsetAttribute , PayloadAttribute , TermAttribute , and AttributeSource
updated TestFuzzPreLoop . java file to improve test coverage for pre - loop functionality
added a check to ensure f0 is non - negative to prevent potential negative values in the HTSVocoder class
added a null check for pkColumn before adding a foreign key column in SchemaRetriever and TableRetriever to avoid potential NullPointerExceptions during foreign key column
refactor encoders management by introducing a synchronized map and modifying encoders retrieval logic to improve thread safety and maintainability of encoders management
added SharedPreferences support for allowing empty screens in Workspace . java to enhance user experience by allowing dynamic management of empty screens
added a warning log for the deprecated Cucumber needle in NeedleFactory . java to inform users that the needle is outdated and may be
refactor theme handling in ShadowThemeTest , ShadowArscAssetManager , ShadowVMRuntime , and ShadowActivityTest to improve theme management and
updated error messages in VerifyFast . java to use ` Arrays . toString ( ) ` instead of ` String . format ( ) ` to improve
no effective change - remove @ dbmigration from ehistory2
added support for the ` getProto ` and ` setProto ` methods in the ` ScriptObject ` and ` Global ` classes to enhance functionality
updated the shuffle method in TestFilterDirectoryReader to include a random value to enhance randomness in the reader shuffle process
updated displayName assignment logic in UsersAndGroupsSearchProvider . java to handle different user names to improve clarity of displayed information based on shareWith
added a default check for the path before formatting it in CookieRetrievingCookieGenerator to ensure that the path is not blank and provide a default
removed redundant closing braces in multiple Java files to improve code readability and maintainability
updated cacheName to use getTotalBackupCount ( ) instead of getBackupCount ( ) in AbstractCacheService . java to ensure cache name reflects
updated condition in ValidationResult to compare against ` ve . pageNumber ` instead of ` pageNumber ` to ensure accurate validation of page number comparison
added a condition to check if the focused widget is equal to the UIDropdown class to ensure that the UIDropdown class handles the case
reformatted the ` playSoundAtLocationExcept ` and ` playSoundPitchRange ` methods for consistency and clarity to improve code read
refactor ApplePackageDescription and AbstractKnownBuildRuleTypes to use a new method for retrieving AppleCxxPlatformsProvider to improve
added a new SQL query string and a test for it in ClickHouseStatementTest . java to ensure the SQL syntax is correctly formatted and
renamed the method ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
refactor EnglishPTBTreebankCorrector class for improved readability to enhance maintainability and ease of understanding for future developers
added a new file TestGetLoggerNPE . java to test security exceptions during logger retrieval to ensure that logger . getlogmanager ( )
added a data map and its getter method in PathSharingContext , modified references in ActionDirectory , ScriptedProcessor , and ScriptedDecide
[ gr - 16932 ] cast exact object array to object [ ] in staticobject .
added support for the " NEXT VALUE FOR " functionality in the NextValExpression class and updated related tests to enhance functionality and ensure correct handling of
improve error message for unsupported resource bundle access .
added a threshold for clearing pending writes in BoundedLocalCache and implemented a test for clearing pending writes in BoundedLocalCacheTest to improve
added exchange - specific parameters for Leverage _ Level in QuoineExchange and implemented order direction in QuoineNewMarginOrderRequest to
added a method ` boundInitialization ` to ` PropertyDescriptor ` and created a new test class ` Test7192955 ` to ensure proper binding
replaced ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` Lwjgl
added a null check for the parent ' s buttons AwatingRelease in Tabs . java to prevent potential null pointer exceptions when the buttons
update wrap width calculation and implement computePrefHeight method in LineCell . java and StyledTextAreaSkin . java to improve wrapping width
updated formatting of error message in XSLTErrorResources _ it . java to improve code readability and maintain consistency
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain insertion order in the paramValues map
danielwagnerhall : use string . format ( string ) instead of string . join ( string ) for string concatenation .
replaced namespaceContext retrieval method with a direct method call to getNamespace to simplify code and improve readability by reducing unnecessary variable usage
added a boolean configuration for nested joins in multiple test classes to control the behavior of nested joins in the test suite
updated condition to check for non - admin account type in QueryManagerImpl . java to ensure that specified accounts are only specified by root admin and
added ` JavacFileManager ` support and modified ` CompletionTaskProcesor ` constructor to accept a ` long cursor ` parameter to
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
replaced usage of Hamcrest ' s assertThat method with Hamcrest ' s assertThat method in KuduIO
refactor MetadataRenderer and TextRenderer to use @ Nullable Handler annotations and utilize a new utility method to enhance nullness checks and improve code
fix ( net ) : fix symbolmapwriter ' s memory size calculation
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the test output and improve readability
removed unnecessary ` Reflection . java ` and ` TypeConverters . java ` files and updated import statements in ` jooby . internal `
refactor ThreadlessExecutor to improve clarity and structure to enhance code readability and maintainability by reducing redundancy
refactor error handling in DateTimeFormatter and add unit tests for DateTimeException and IOOBE to improve code clarity and ensure proper handling of null
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and update related references in ` CompressionParameters . java ` to improve cl
added a new file ` T7034495 . java ` with interfaces and generic types to implement a wildcard handling mechanism in the type system
simplified the while loop structure in LotsOfEvents . java to improve code readability and maintainability
refactor conditional checks for Hop characters in TransclusionDecideRule . java to improve readability and maintainability of the code
remove version info print from micronaut . java ( # 1193 )
added unit tests for the Area3DPtg class in TestBugs . java to ensure correct handling of name records and their definitions in the
modify MindIconFactory to include a description if the name contains a slash to ensure that a description is only displayed when it does not contain
updated the onHomeIntent method to accept an additional boolean parameter to enable handling of the internal state during the home intent action
replaced direct calls to ` getPreferDependencyTree ( ) ` with a boolean variable ` preferDependencyTree ` to improve code readability and
added ` showDetails ` method implementations for handling file details across multiple activities to enhance user experience by allowing users to view file details based on their
updated function names from " $ apply " to " apply " and " applyStatic " in JSweetConfig . java and FinalVariables . java
added randomization logic for codeword position and adjusted capacity handling in MinimalEncoder . java and HighLevelEncodeTestCase . java to enhance
updated formatting in SourceBuilder . java to include required and since parameters to enhance code readability and maintain consistency in parameter descriptions
added a call to ` mAdapter . notifyDataSetChanged ( ) ` in ` FolderSyncActivity . java ` to notify the adapter when data
removed the static method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection . java ` to simplify the code by eliminating
updated type erasure logic in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure correctness of
camel - 15836 - camel - aws2 - s3 : remove unused method from s3crtasyncclient
updated test cases for corrupted stream lengths in ParserTest . java to improve clarity and accuracy of test failures
include found - content in the error message when the collection size be incorrect
improve error handling in graalcompiler and add conditional goto logic in graphbuilderphase .
ggb - 2321 fix for image size of 300x200 and null pointer exception
refactor SQLXML class to improve code structure to enhance maintainability and readability of the code
added a new parameter ` limit ` to the ` getOrderBook ` method and updated related implementations to allow users to specify a limit for order book
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` across multiple files to align exception handling with the new heap structure
added StreamReadConstraints configuration to the ObjectMapper factory in StandardDataFlow . java to ensure proper handling of maximum string length in JSON processing
modified the retrieval of the enabled engines configuration to use an empty string instead of a hardcoded value to improve robustness by preventing potential null
rename ` FullIterator ` to ` WheelIterator ` and update its usage in ` TimerWheel . java ` and ` TimerWheel
added error handling for generating bug messages in BugInstance . java to improve debugging and provide clearer error messages when generating custom descriptions
[ hotfix ] [ test ] increase wait _ chunk _ is _ ready _ in _ seconds for localchunkprovidertest
changed the visibility of the uncomplete checklists menu item from visible to hidden to ensure the menu is no longer visible in the user interface
refactor result map handling in DefaultResultSetHandler and add a new Contract class with related tests in DiscriminatorTest to improve code clarity and
added null checks for defaultHome and unregistering the receiver if it is null to improve robustness by preventing potential NullPointerExceptions
added @ VertxGen annotation to PumpImpl . java to enable generated code for Vert . x generation
removed unnecessary casting of ` FileDisplayActivity ` to ` FileOperationsHelper ` in ` FileDetailFragment ` and ` OCFileListFragment `
trim whitespace from tokens [ i ] in ConfigAttributeEditor and add a test for stripping trailing and leading spaces in ConfigAttributeEditorTests to
rename ClassUsingAnotherAuxiliary and ClassUsingAuxiliary files to improve clarity and consistency in naming conventions
svm : make dynamichub . singlemodulereference public and add unnamedmodule ( ) method to target _ java _ lang _ classloader .
added conditional logic to determine the relation kind based on the presence of a " SYSTEM TABLE " to ensure correct identification of database tables based on the
chore : [ agent ] deprecate tier _ ENTERPRISE _ PLUS _ VALUE and update doc ( # 1307 )
updated the type of the RQST field from TType . STRUCT to TType . TException in ThriftHiveMetastore
added a new module - info . java file that defines and exports the ` com . speedment . core ` module to provide modularization
added idle flush state and fill state checks in SslConnection . java to ensure proper handling of write operations and improve fill interest handling
refactored Log4j2LogDelegateFactory to improve logger initialization checks and added a new NoExceptionInInitializerErrorTest class to enhance
refactor ` ExecutionEnvironment ` and ` Test7029048 ` to handle server and client VM conditions more effectively to improve code cl
refactor ` ExecutableFindOperation ` , ` MongoOperations ` , and ` ReactiveMongoOperations ` classes to improve code organization and maintainability
added support for the " org . postgresql . ssl . LibPQFactory " property in PGProperty . java to enhance compatibility with PostgreSQL SSL
disabled the @ Test annotation in TestInterProcessSemaphoreEdges . java to clarify the reason for failing tests
added sorting functionality for theme keys in EditableResources . java to ensure consistent ordering of resource names by case sensitivity
added a new OSvTerminal class and modified TerminalFactory to support OSV terminology to enhance terminal functionality and support for different operating systems
added support for additional file types " . gs " , " . gr " , and " . grs " in the ClassType class to
replaced HashMap with TreeMap for combinedVectors and refactored related test calls in DrillTestWrapper . java to improve code readability and
added a condition to check for both names and values in the XPathEntityProcessor class to ensure that the loop continues correctly when both names and values
updated WebSocketPolicy . java to improve WebSocket connection handling to enhance performance and reliability of WebSocket connections
refactor ` ShadowTelephonyManager ` and ` ShadowWifiManager ` to use instance variables instead of static variables to improve flexibility
added functionality to perform template - based and origin - based message resolution in StandardMessageResolver to enhance message resolution flexibility by allowing more flexible
replaced ` Class . forName ` with ` Class < ? extends MethodVisitor > ` and ` Class < ? extends ClassVisitor > ` to
added LoggingAuditService . java and UaaAuditService . java files to implement logging for user authentication success , failure , and non - existent
added nullability annotations and improved temperature state handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance code robust
do n ' t generate a proxy for a concrete class if it have a superclass
camel - 16400 : camel - http - allow to configure http proxy via system property . thanks to benjamin for
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " in TemplateDTO . java to reflect the latest version
added jdk . internal . util . StaticProperty . jdkSerialFilter ( ) to the System . java file to enable serialization of system
camel - 14263 : camel - jbang - log the pool size of the extendedcamelcontext to help debug it .
replaced the ` forceFinished ( true ) ` method with ` forceFinishScroller ( ) ` in multiple animation classes to simplify the method
updated the method signature of ` ensureRealtimeClusterIsSetUp ` to use ` ConfigUtils . applyConfigWithEnvVariables ` to enhance configuration
added an ` isError ( ) ` method to ` ValidationReport ` and updated error handling in ` DisallowValidator ` and ` RefValidator `
updated inline QSB settings to use ` closestProfile . inlineQsb ` instead of ` defaultDisplayOption . inlineQsb ` to improve
updated the ` createClassPath ` method to handle exceptions and URL decoding to improve error handling and ensure proper character encoding for location processing
updated regex patterns in TransformSteps . java from regular expressions ' ' to wildcard expressions ' . * ' to improve accuracy of input validation in the
added null checks for property before determining retinaProp and improved fillRect method logic in PGraphicsJava2D to enhance robustness and
updated waitUntil calls to use a timeout variable for improved clarity and consistency to enhance code readability and maintainability by reducing red
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the environment configuration to ensure the application uses the correct Docker image configuration
add multiple calls to System . gc ( ) in KnowledgeAgentTest . java to ensure proper resource management and avoid potential memory leaks
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
added a private method ` copyFile ` to handle file copying to ensure that the target and source files exist before creating a hard link and logging errors
rename method ` appendToDescription ` to ` getDescription ` in ` AsyncOperationDocProvider ` , ` OperationDocProvider ` , and ` SyncOperation
[ fix ] mxndmanager . todevice ( ) and mxndmanager . todevice ( ) do n ' t throw exception if the
added a conditional check for ` Xml . Document ` before calling ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to avoid
updated NotesHelperTest and ReminderHelperTest to use JUnit4 runner instead of InstrumentationTestCase and added JUnit 4 annotations to
added new GasLimitRule and ParentGasLimitRule instances to the CommonConfig class to enhance functionality by integrating additional gas and difficulty rules
changed access modifier of setupData method from public to private in BaseAssumptionsRunnerTest . java and removed redundant setupData ( ) method
renamed ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class and updated related references to improve clarity and
triple : do n ' t close deframer if there be no listener .
[ hotfix ] [ doc ] add site . basurl to doc of restartstrategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` to verify SQL parsing and deparsing with discount data to
refactor Common class to improve code structure to enhance maintainability and readability of the code
refactor Launchable class to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
[ hotfix ] fix checkstyle violation in streamexecdeduplicate . java
added a warning log for error when sending kafka messages to improve error handling and debugging capabilities
added ` PersistentPropertyAccessorFactory ` and ` isImmutable ` methods to ` SimpleElasticsearchPersistentEntity ` and ` SimpleElasticsearchPersistentProperty ` classes
change return type of setCoord method from void to boolean in GeoCoordSys1D and add setUndefined method in GeoSegment3D to
added velocity calculations and swipe handling logic in AskGestureEventsListener . java to improve user interaction responsiveness and responsiveness during scrolling
refactor comparison logic in NGramEstimator to handle key - based comparisons more efficiently to improve efficiency by avoiding unnecessary comparisons when keys
updated import statements to reference ` io . cucumber . core . runtime . ScenarioScoped ` instead of ` cucumber . runtime
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve clarity and consistency in handling folder icon information
updated the return statement from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to
added a new file TestSkeletonPredicates . java with methods for testing double arrays to facilitate testing of double arrays with specific loop conditions
replaced the assignment of ` selectionEndNode ` with a direct assignment of ` Box ` and added a setter method for ` TransferHandler `
added a new ` StringResultConverter ` class and refactored ` stringValue ` methods in ` AsmRuntime ` and ` AsmUtil
camel - 19751 : camel - core - skip test that do not run reliably on the apache ci
updated the condition from ` WaitForSingleObject ` to ` WaitForSingleObject ` in ` JansiWinSysTerminal . java ` to ensure
added null checks and improved method naming in BufferUtils . java to enhance code robustness and prevent potential NullPointerExceptions
updated the data directory path assertion in TestSolrDiscoveryProperties . java to use File . separator to ensure correct file path formatting for consistency in data
updated operating system checks in AutoUpdaterServerProperties . java to handle macOS cases to ensure compatibility with MacOS and ensure compatibility with pre -
updated Lock class to use lockName instead of lockFile for better clarity to improve code readability and maintainability by using more descriptive
replaced the class name from " android . widget . TextView " to " apps _ view " in the Overview class to improve clarity
updated references from ` this ` to ` ClientDatagramEndPoint . this ` in ` ClientDatagramEndPoint . java ` to ensure consistency in
updated SQL query in JdbcStepExecutionDao to use " order by STEP _ EXECUTION _ ID " instead of " oreder " to
updated button handling in LwjglInput . java to return - 1 instead of Buttons . LEFT and added a check for unknown buttons
added assertions to validate the submission behavior of claimed tasks in TaskRestRepositoriesIT . java to ensure that the claimedTask ' s submit
replaced instances of ` logger ` with ` LOGGER ` in multiple builder classes to improve logging consistency and maintain consistency across the codebase
updated access token resolution methods in ` SsoAccessTokenProvider ` and added a new test for it in ` SsoAccessTokenProviderTest ` to
[ geos - 8470 ] skip test that do n ' t run on window
return null instead of illegalargumentexception in cdi test ( oracle - bmc )
refactor conditional checks for security checks in JFrame . java to improve code readability and maintainability
added a null check for the MediaDatabase connection before executing the ANALYZE SAMPLE _ SIZE 0 command to prevent potential NullPointerExceptions when the database
replaced the metricsContext reference with a direct call to initializeMetrics in SuggestComponent . java to simplify the metrics initialization process and improve code
refactor conditional checks for file and folder counts in OCFileListFragment . java to improve clarity and correctness of string formatting based on
changed the default value of HashKnownHosts configuration from " yes " to " no " and modified the loadKeys method in FileKeyPairProvider and
refactor SourceVersion class to improve code structure to enhance maintainability and readability of the code
added a new test class ` ThreadFactoryTest ` to validate thread creation and thread group validation to ensure correct behavior of ` MyThreadFactory `
added a method to calculate the lock period based on dynamic store support and adjusted expiration time calculation based on maxDelegateLockPeriod to enhance flexibility
added a new instance of TicketModel to the EditTicketPage class to initialize the ticket data for further processing
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss apps from predicted list
updated superclass constructors to include Class < S > selfType parameter across multiple assertion classes to enhance type safety and ensure compatibility with various assertion classes
added a new menu item for quote functionality in TweetActivity . java and modified the visibility of the quote menu to enhance user experience by providing
fix lock issue in jmeterthread # start ( )
renamed ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and updated related methods for clarity to improve code readability
added a conditional check for the result before offering failures in ServerHTTP2StreamEndPoint . java to ensure failures are only offered when the
updated German and French error messages in XSLTErrorResources _ de . java and XSLTErrorResources _ fr . java to clarify
added ThreadSafe annotation to CheckpointsCleaner . java to enable thread safety for concurrent access to these classes
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapter ` , and ` MockRestAdapterTest `
updated the handling of the ' components . yml ' file in ComponentPresetManager . java to ensure that the components . yml file is created correctly
updated column qualifier handling in multiple test classes to use lowercase to ensure consistent comparison of column names based on table name case
removed the ` bFirstTime ` boolean variable and added item listener for ` cbDefaultVoice ` in ` MaryGUIClient . java
added validation for session validity and updated assertion methods in SessionHandlerTest to ensure proper exception handling for invalid sessions and improve test coverage
hhh - 15936 - remove unused exceptionhelper . java file which be no longer need
reduce the key pair size from 256 to 255 in JceX25519Domain . java to accommodate larger key sets and improve security
added a custom codec for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with the latest Lucene
[ hotfix ] [ runtime ] add debug log for empty checkpoint range header
added support for RSA / ECB / OAEP algorithm in the OperatorHelper class to enhance security by allowing the use of OAEP
replaced ` DARWIN _ AARCH64 ` with ` MACOS _ AARCH64 ` across multiple files to ensure compatibility with the
added error handling for IOException and SecurityException in DebugSourcesResolver . java to improve robustness by logging warnings related to URI resolution failures
removed unnecessary condition checking for non - UNIX OS in AbstractTest . java to simplify the code for better readability and maintainability
updated error handling and logging in FileUploadUtils and ControllerConf , and refactored test cases in UploadRefreshDeleteIntegrationTest to improve error
[ fix ] bufferutils . newdisposablebytebuffer ( ) and bufferutils . newunsafebytebuffer ( ) do n ' t
changed the USE _ PIPELINE _ DOWNLOADER constant from false to true in FastSyncChainDownloader . java to enable the use of
updated SimpleDateFormat to set DST _ OFFSET and added a new test class Bug7130335 for validating date formatting to ensure correct parsing of
updated variable names and logic in AllAppsView . java for consistency and clarity to improve code readability and maintainability
server : fix npe in case of no default hypervisor
refactor StringBuffer class to improve performance to optimize string manipulation efficiency
added a new variable ` rule . uid ` to the ` RuleResource ` class to set the rule ' s UID to ensure the rule is
added a null check for the listener before unsubscribeing from the registry to avoid potential NullPointerExceptions when listener is null
added a new PropertyDescriptor for pretty printing in JoltTransformJSON to allow customization of JSON output formatting based on context
make access _ table public so that it can be reuse by other code .
updated error messages in DataSourceInitializer and its test to clarify that no resources are found at the specified location to improve clarity of error
refactor code to encapsulate the ` doRun ` method in ` TcpTransport ` and ` XmppTransport ` to improve code readability
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
refactor AmbariManagementControllerImpl to include additional parameters for upgrade suspension handling to enhance code readability and maintainability by redu
simonstewart : add a copyright notice to the FindsByCssSelector class to indicate that the class is available for CSS selector
removed the initialization of ` wfields ` from ` writer . getFields ( ) ` to streamline the code by eliminating unnecessary dependencies
added a constructor to OAuthProperties to set default encryption and signing key sizes to ensure proper configuration of encryption and signing keys for OAuth authentication
hbase - 25836 addendum : use getcolumnfamilystatus ( ) instead of getcolumnfamilystatus (
replaced AllowedResourceAliasChecker with a lambda expression for adding an alias check to simplify the alias check logic for better readability
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and Serializable classes to improve code organization and maintainability
added a reset method to the Cluster interface and implemented it in ClusteredServiceAgent to provide a way to reset the service agent ' s idle
updated the instantiation of the Writer in ChunkedWriter . java to ensure the correct chunk ID is used for file operations
added a new abstract class AbstractJobExecutor to handle job execution listeners to facilitate the execution flow of batch operations in the application
replaced the return statement with a break statement in RecoveryStrategy . java to improve clarity and control flow in the recovery process
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a check to return an empty list when Consul is not enabled in AbstractConsulClient to ensure that service IDs are only returned when Discovery
replaced ` Math . random ( ) ` with ` SecureRandom ( ) . nextInt ( ) ` in the ` catPut ` method to
add option to verify runtime compilation framestates during bytecode parsing .
removed addition of aggTimeBucketMillis to currentStart and baselineStart in TimeOnTimeComparisonHandler . java to simplify the code by elimin
updated imports and modified the answer method in CallsRealMethods . java , and added new test cases in CreatingMocksWithConstructorTest . java
refactor ` checkPackageAccess ` method to accept ` SecurityManager ` as a parameter and enhance access control checks to enhance security by ensuring proper
[ type : refactor ] refactored ContextPathPluginTest to extend AbstractPluginDataInit and added setupErrorConfiguration method to improve test organization
renamed ` dtm ` to ` model ` for consistency and clarity to improve code readability and maintainability by using a more descriptive
added support for the " has - touch - interaction - service " request in the TestInformationHandler and updated LauncherInstrumentation logic to enhance
added a write access listener to the connect dialog in ConnectAction . java to ensure proper handling of mutex events during connection establishment
replaced ` ImmutableMap < String , ShowOptions > ` with ` ImmutableMap < BuildTarget , ShowOptions > ` and updated related method signatures to
added new classes ` ArrayHelper ` , ` Asserts ` , ` Comparables ` , and ` NativeRegExp ` , and ` Objects `
added handling for HOME and END commands in the Less . java file to improve user interaction by allowing home and end navigation
removed synchronization for retrieving connected plots in PlotHandler . java to simplify the code by eliminating unnecessary thread safety
replaced the package check for " com . estrongs . android . pop " with " com . metago . astro " and
changed the constructor visibility of the Roster class from public to package - private to restrict access to the Roster class for better encapsulation
added BasicConstraints extension to the certGen to ensure proper serialization of certificate constraints
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to verify behavior when using incorrect transform
replaced ` Integer . MAX _ VALUE ` with ` precisionStep ` in ` TrieDateField . java ` and ` TrieField . java
removed the TaskbarStateHandler class and its associated functionality from BaseQuickstepLauncher to streamline the codebase by eliminating unnecessary state handling
added a new file ` ArrayLength . java ` that tests reflection for array length methods to ensure that the ` getField ` and ` getDeclaredField `
added logging to HzStartIT and improved process destruction logic to enhance debugging capabilities and ensure graceful termination of the Hazelcast process
replaced ` Singleton ` with ` @ ApplicationScoped ` and modified the ` save ` method in ` ApplicationSettingsService ` to use ` @
updated assertions in Safepoint . java to use greater than or equal to 0 and adjusted newValue logic to ensure correct handling of negative values
updated thread name field type from char array to string in OopUtilities . java to improve clarity and accuracy of thread name retrieval
updated the DEFAULT _ RAND _ SEED value from ` System . currentTimeMillis ( ) ` to ` 42 ` in ` Lucene90H
added font support for stroke and stroke object in PGraphicsJava2D . java to enhance rendering flexibility by allowing customizable stroke options
[ calcite - 1187 ] window and group by expression should not use dynamic star when use window column
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to initialize the ` _ children ` array with
added import for Messages and set a status code for the PMS frame in HTTPServer . java to enhance user experience by providing a clearer
use event . getmodifiersex ( ) instead of nativeevent . getmodifiers ( ) for backwards compatibility
node : reduce memory allocation for amd64countleadingzerosnode and amd64counttrailingzerosnode
( chore ) camel - as2 : fix npe in entityparser when content - disposition - notification - to - plain message ( #
refactor Locale class to improve code readability to enhance maintainability and ease of understanding for future developers
added a ` clearLog ` method to ` ErrorConsoleController ` and implemented it in ` ErrorConsoleViewModel ` to provide a way to
removed unnecessary whitespace in mRecentsAnimationController assignment to improve code readability and maintain consistency
replaced Map < TranslatableCaption , String > with Set < TranslatableCaption > in multiple classes to enhance caption management by allowing locale -
added connectionPooling method to ConcurrentBatchIdentifierTest and SequenceOptimizerIdentifierTest , and modified execution count in AbstractTest to improve resource management and
simonstewart : add support for opera blink in the default session
replaced specific exception handling with a more general Exception handling in ManageJournalsPanel . java to improve error handling clarity and provide user
added multiple Lifx product entries to the LifxProduct . java file to enhance the product structure and support additional color options
added asynchronous handling for replica creation in OverseerCollectionProcessor and updated related test cases in CollectionsAPIAsyncDistributedZkTest to improve
removed unnecessary private variables and refactored primary key assertions in PostgresDatabase and PostgresDatabaseTest classes to improve code readability and maintain
updated LogPanel and SummaryPage to use the repository ' s HEAD instead of null for objectId to ensure correct reference ID is used when objectId is
update parentTail vector from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to ensure correct parent direction for bone
added a new ` browserDestroy ` method to ` AndroidImplementation ` and refactored the deinitialize ` method to ` destroy ` to improve
added a call to waitForActiveCollection in AutoScalingHandlerTest . java to ensure proper handling of active collection scenarios
refactor screen terminal handling logic in ScreenTerminal . java and remove unused imports in Tmux . java to improve code clarity and maintain
updated SoftResetAction to check for controller state in addition to idle , pause , check , and alarm conditions to improve the accuracy of controller state
disable on - disc stream cache to speed up texture pack reloading
added parentFolder assignment logic in Request . java and RequestV2 . java to ensure correct parent folder retrieval for media rendering
rename ` isPersistent ` to ` persistent ` in ` NetworkOfferingVO . java ` to improve clarity and consistency in naming conventions
replaced the ` deleteOnExit ( ) ` method with a ` close ( ) ` method that calls ` temp . delete ( ) `
added error handling for Forbidden responses in StandardGitHubRepository . java to improve robustness by logging specific HTTP 403 responses
log4j2 - 1343 added a getoriginal ( ) method to the messagefactory2adapter so that it can be use by
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern in Version . java from " 1.2 " to " 3.3 " to accurately reflect the release version
added initial and dismiss delay settings for the ToolTipManager in ExtractionModelFrame . java to improve the responsiveness and responsiveness
refactor ProjectCommand to utilize passedInTargetsSet for TargetGraph and related methods to improve code clarity and maintainability by reducing
added timezone assignment and assertion in TimeTest . java to ensure correct formatting of time objects in UTC format
refactor MediaSessionConnector class to improve code structure to enhance maintainability and readability of the code
refactor SSL support retrieval to use the handler ' s SSL implementation to improve code clarity and maintainability by utilizing the correct SSL implementation
updated the calculation of distance display in GpsLoggingService to use the accuracy instead of the altitude to ensure accurate accuracy display based on location information
added a method to check if futures are enabled and updated related calls in BinanceExchange , BinanceAccountService , and BinanceTradeService
improve adminaccountmanagementhelper and adminaccountmanagementservlet to store instructor table instead of account
set the accept queue size for the connector in the ThriftHttpCLIService to improve resource management by allowing dynamic worker threads
replaced direct calls to ` getClass ( ) . getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` to
camel - 14263 : camel - jms - support ssl by default . thanks to daniel dai for the patch .
updated error handling from ` UserException . parseError ` to ` UserException . validationError ` in ` DrillSqlWorker . java `
updated the calculation of the duration variable in GCInspector . java to ensure that the duration value is not zero for a really fast collection
refactor JavadocComment handling in NodeWithJavadoc . java and add a new test in NodeWithJavadocTest . java to improve code clarity
replaced the reserveMemory method with a readReservedMemory method in ReserveMemory . java and updated its implementation in WhiteBox . java to
added calls to ` ungroupedAggregateRegionObserver . checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java
changed the visibility of ` procId ` from private to protected and updated string concatenation in ` HBaseAdmin . java ` to allow subclasses to access
camel - 14284 : camel - cxf - allow to configure the service class for the soap service factory
updated YamlChangeLogSerializer to dump database change logs as a map instead of a hardcoded string to improve flexibility and maintainability of the
updated print statements to include a newline character in SchemaPrinter . java to improve output formatting for unsupported types in the SchemaPrinter
added null check and improved clipboard handling in SchematicHandler and DebugRoadRegen classes to enhance code robustness and prevent potential
replaced ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragmentNowPlayingRow ` and ` HomeFragmentFooterRow
replaced ` @ GeneratedValue ( strategy = GenerationType . AUTO ) ` with ` @ GenericGenerator ( name = " native " , strategy
removed the country parameter from the getSystemTimeZoneID method signature to simplify the method signature by eliminating unnecessary parameters
updated output stream writing to include position and remaining data in BZip2Codec . java and modified input byte buffer allocation in TestBZip2
move startlogger ( ) method from web - app to web - app
added a constant VALUE _ TYPE _ EMPTY in Type . java and modified the type assignment logic in Value . java to improve code clarity and
replaced ` = = ` with ` . equals ( ) ` for group comparisons in ` GroupManager . java ` to improve readability and
refactor Liquibase and LiquibaseDropAll classes for improved readability to enhance maintainability and clarity of the
refactor SimplexNoise class to improve code structure to enhance maintainability and readability of the code
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating a new instance of ` TargetGraph ` to enhance flexibility
fix typo in getminrowcompacted / getmaxrowsize method name . patch by brandonwilliams , review by
added ArtifactVersionAdapter to Gson and changed parentMod and childMod fields to be transient in MetadataCollection . java and ModMetadata . java to
added logic to handle previous and current elements in the NativeArray class to ensure proper deletion of elements based on previous state
updated file saving logic to retrieve and set the parent file ID from the remote parent path to improve file management by ensuring the correct parent file is
added a new file UTF8ReaderBug . java to test UTF - 8 encoding to ensure proper handling of supplementary characters in XML input
add unit test base on user forum issue
updated subscription streams from " dashbtc " to " ethbtc @ depth20 " in BinanceIntegration and BinanceUsIntegration to
added a method to reset allocation in Wrapper class and invoked it in SimpleParallelizer to ensure that initialAllocation and maxAllocation values are reset correctly
removed import of AssertTree from AmbariManagementControllerTest . java to eliminate unused dependencies and improve code clarity
added synchronization around system properties loading in Agent . java and created a new AgentCMETest . java file to ensure thread safety when accessing system
refactor ModelUtils class to improve code structure to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert class for improved readability to enhance maintainability and clarity of the code
added checks for last label index before calculating text width and height in Legend . java to prevent potential ArrayIndexOutOfBoundsException when processing labels
added two test methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf `
replaced direct access to ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` for text retrieval and added a
replaced the method of obtaining the source path to use BuildTargetSourcePath instead of CxxLink to simplify the code by using a
added a conditional to check if versioning is disabled in CommandDownloadLatest . java to enhance user experience by providing clearer feedback when versioning
changed ` Collection ` to ` List ` for filePaths in ` MediaFolder ` and added ` numberOfFiles ` variable in ` MediaProvider `
removed the " - b " argument from the arguments in AidlStep and adjusted the format string in GenAidlTest to simplify
added new test files for Issue79 and modified ObligationAnalysis to delete Obligation in comparison to improve test coverage and ensure Oblig
added a todo comment to the FakeHttpLayer class to clarify the purpose of the test method
[ hotfix ] [ runtime ] revoke leadership in embeddedleaderservice
refactor CompositeDiscoveryClient to use Single ' s flatMap and flatMap methods instead of Stream for better readability to improve code clarity and maintain
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ config ] add description for jobmanager . recoversfromtaskfailure
replaced ` updateNoWidgetsView ` and ` updateNoSearchResultsView ` methods with ` updateRecyclerViewVisibility ` and updated related logic
added error handling for WstxOutputFactory and WstxInputFactory in XmlUtil . java and updated tests in MultiVersionXmlParser
refactor test setup method in AuditAliasCommandIntegrationTest to use JUnit ' s Before annotation to improve code clarity and ensure proper setup
removed unnecessary logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and reduce unnecessary
( chore ) camel - cxf : disable test that be not applicable in this scenario
added error handling for periodical refresh in CachedStore . java to improve robustness by logging exceptions during periodical refresh failures
refactor ChainingAuditPrincipalIdProvider to use Lombok ' s RequiredArgsConstructor and improve provider management to enhance code clarity and
added a method to check default background fills in HSSFCellStyle and updated color retrieval logic in HSSFFont and HSSF
renamed ZonedDateTimeFormatterBenchmark . java to improve clarity to enhance code readability and maintainability
refactor ` DistributedUpdateProcessor ` to use a new method ` shouldBufferUpdate ` to improve code readability and maintainability by encapsulating
added a null check for the stage number in the simulation check to ensure that the motor is either null or the associated stage is not present
added a new parameter for ` ToReplaceID ` and modified the ` getItem ` method to accept an additional boolean parameter to enhance functionality by allowing
refactor ExtendedMasterSecretExtension to improve code structure to enhance maintainability and readability of the codebase
made the ` processor ` variable final in ` AndroidInput . java ` to ensure immutability of the ` processor ` variable
added a listener call to notify when the end of the stream is reached to improve error handling by notifying listeners when the end of the stream
added support for " CUBE " database type in MySQLDatabase . java to enhance compatibility with the latest MySQL features
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the rm operation
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and introduce a new
replaced reflection - based access with setter methods for connectTimeout , readTimeout , followRedirects , connectionPool , and hostnameVerifier in DefaultOk
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the output stream in RawMessageContentRedirectInterceptor to prevent potential NullPointerExceptions during execution
ggb - 2333 fix for the av split pane in the av view
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified the ` jailerMain ` method to
refactor HttpRequest class to improve code structure to enhance maintainability and readability of the code
added a shared preference for pull unread status in TalonPullNotificationService to enable dynamic management of pull unread notifications in the application
added a check for the parent object ' s kind in IsNullNode . java to ensure proper handling of null values and prevent potential runtime errors
updated parameters and methods in Box2DTest , Pong , and OrthographicCamera classes to improve memory management and simplify Orthographic
refactor layout management in ViewPostDetailFragment to handle null values for mRecyclerView and mCommentsRecyclerView to improve robustness and prevent
changed log level from trace to warn in CLIService . java to provide more detailed logging for background operations aborted
added a print statement to display method instance names and abstract flags in JimpleBodyBuilder . java to improve debugging by providing visibility into method instances
ggb - 1026 run pointer up callback on ie10 +
updated the ` getNotificationUsers ` method to include a device ID parameter and modified the user retrieval logic to filter out users based on their device
updated the baseUrl string in CGIARProvider . java from " http : / / droppr . org / srtm / v4
updated MotifFileChooserUI to remove property change listeners and added a new test class bug6520101 to improve user interaction handling and
change return type of handle methods from void to boolean in HollowDiffUIRouter , HollowHistoryUIRouter , and HollowExplorerUI
refactor ` getRuleOptional ` and ` getRuleWithType ` methods to use ` Optional < BuildRule > ` instead of ` Optional < T
set the visibility of the transport spinner to VISIBLE based on the makingShortcut flag to improve user interface responsiveness by hiding the transport spinner
added null check for attributes _ field in Attr . java and created new classes T7043371 . java and T7073477
updated backPressed methods to return boolean values instead of void for consistency across fragments to enhance code readability and maintainability by consolidating back press
added LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB and DEFAULT _ LONG _ VIEW _ INDEX _ ENABLED to QueryServicesOptions , and updated
corrected a typo in the string concatenation syntax in SDRTrunk . java to ensure consistent formatting of the output string
updated privateKeyPath path handling in PrivateKeyParserTests to use StringUtils to ensure sensitive file paths are properly cleaned
removed the columnPosition parameter from the diffDropColumn method signatures to simplify the method signature by eliminating unnecessary parameters
updated IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of Version for LUCENE _ 40 to ensure compatibility with the current testing
added a configuration option to disable strict column family checks in the ImportTsv . java file to improve user experience by preventing unnecessary table creation
[ java ] use subscriptionid instead of logrecordingchannel when stop the archive .
replaced ` startActivity ` with ` startActivitySafely ` and added ` voiceButtonProxy ` visibility management to improve code clarity and
added a condition to check if the first element of the JSON node is a single value in PoloniexStreamingService . java to ensure
refactor Procedure class to improve code readability to enhance maintainability and ease of understanding for future developers
added Locale . getDefault ( ) and ClassLoader to the resource bundle retrieval in Toolkit and Window classes to ensure consistent resource loading across different locales and
[ j2kt ] add normalizearraycreationskotlin normalization pass for kotlin array creation
added checks for missing counts before incrementing segments in PerSegmentSingleValuedFaceting . java to improve efficiency by avoiding unnecessary incrementing when
replace ` Optional . fromNullable ` with ` Objects . firstNonNull ` in ` ModMetadata . java ` to improve null safety and clarity
added OSGiTest . java and modified module - info . java to require static jdk . unsupported to ensure proper handling of specific import
nifi - 1748 : fix concurrent issue with enabling referencing service in controller service
hbase - 25836 htable . setautofill ( false ) should not clear buffer on failure
fix : annotation on any element in a class can be apply on any element in a class ( # 1193 )
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and its implementation in ` SimpleFeatureImplTest ` to ensure that user
removed ` HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` classes to simplify error handling by elimin
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
removed the ` enableLogging ` method from the ` JavaCompiler ` class to eliminate unnecessary logging settings for the main class
added a new class ` InJavaSourceSet ` to handle Java source markers to enable filtering and adding Java source results based on the specified source
added a check for external parsing of the WFPC2u5780205r _ c0fx . fits file and updated resource
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of a getter for an object
removed the conditional check for useExternalStorage in DirectUpload . java to simplify the code for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and updated related classes to control the commit
api : fix npe when create a volume without a disk offering
updated content assignment in ToHtml . java and modified assertion message in BaseTestCellComment . java to ensure that notes are not null and improve
added null checks for ` amountToAdd ` , ` amountToSubtract ` , and ` Period ` types in ` LocalDate ` , ` LocalDateTime `
added a new file ` Issue382 . java ` to handle specific error types and modified ` Routes . java ` to remove the ` final
replaced the ` signum ` method with a direct reference to ` Integer . signum ` in ` PositionUtils . java ` to simplify the code
set visibility of text holder to GONE in AttachmentAdapter to improve user interface responsiveness by preventing unnecessary text display
fix ( ast ) : fix bug in ast parent consistency checker
simonstewart : fix the method to retrieve the profile from firefoxoptions
added a new class LiquidBlock that implements BucketPickup and modified access modifiers to enhance the functionality of the LiquidBlock class
http : / / issues . apache . org / jira / browse / amq - 2902 - make sure we do n ' t
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to reflect the correct
rename ` existingObservation ` to ` distinctObservation ` and update related methods for clarity to improve code readability and maintainability by
updated LuceneTestCase to retrieve annotations from TestGroup instead of a hardcoded false value to enhance flexibility in determining if tests are enabled
renamed the method ` createLogger ` to ` getOrCreateLogger ` and updated its implementation to improve clarity and ensure logger is created only when
added denyAccess calls for Class , Method , and Proxy classes in GraalContext . java to enhance security by restricting access to specific classes
pdfbox - 4892 : improve performance , a suggest by valerybokov
updated verifyAndAddTransactionalProperties method to use partition ' s SD instead of the table ' s SD to ensure transactional properties are
refactor scrolling logic in Workspace . java to improve clarity and maintainability to enhance the logic for determining overlay scrolling behavior based on the current
hhh - 11313 introduce mutablebatchbuilderimpl and mutablelistenerinitiator to support custom jdbc batch size .
updated exception messages in multiple classes to include an unexpected input parameter to improve clarity and specificity of error handling during analysis
added a new test class ` MockWithStaticStateDemo ` and integrated it into ` PartialMockingRetainsStateTest ` to ensure that
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to verify SQL parsing with brackets and order
modified SecurityUtil to handle null UGI before invoking the action to improve robustness by avoiding potential NullPointerExceptions during execution
added error code retrieval in OpenALMusic . java to improve error reporting for audio buffer allocation failures
camel - 14263 : camel - quartz - add endpointhelper . resolveparameter ( ) back to endpointhelper . reslovestring
updated precision and scale handling in RexNodeConverter . java to ensure correct handling of decimal types based on unscaled values
replaced direct calls to ` getVendorProperties ( ) ` and ` getDeviceProperties ( ) ` with ` Optional . ofNullable ( ) ` for
updated the expected value in the updateAccount method from " testName " to " now " to ensure the account is updated to reflect the current
updated selection handling in BasicFrame and DesignPanel to use RocketComponent instead of AxialStage to simplify component selection logic and improve code cl
added configuration for the long running time in the Args class to allow users to control the execution duration of the virtual machine
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW in FindRefComparison . java and added a new
updated import statements and exception handling in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to improve code clarity and maintainability
replaced ` decimal . toString ( ) ` with ` decimal . toPlainString ( ) ` in ` XSDecimalBinding . java `
refactor assertions in TestRestClientRequestImpl . java for improved readability to enhance maintainability and clarity of test assertions
added a condition to check if the reference database equals the comparison database before proceeding with the existing constraint check to ensure that unique constraint checks are
refactor the ` addAndroidConstants ` method to return early and handle optional proguard configuration path to improve code clarity and ensure proper handling
replace assertEquals ( 0 , sessiona . getRequests ( ) ) with await ( ) . atmost ( 5 , TimeUnit . SECONDS )
added user _ args and is _ daemon fields to the ImmutableMap builder in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance trace build
svm : fix concurrentmodificationexception in resourcebundle . getbundle ( )
corrected the log message from " match limit " to " match order " in HepPlanner . java to ensure the correct logging format
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval of exchange metadata to demonstrate the use
changed class ` FloatingDecimal ` and ` FormattedFloatingDecimal ` to ` strictfp ` and added a strictness test in ` Parse
hive - 11347 : columnstatssemanticanalyzer . getcolumnnames ( ) should use columnname directly instead of unparseidentifier
added a test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified the ` contextFreeTemplate ` method to include a
added a check for non - synthetic constructors in ` InstantiateStaticClass . java ` and implemented a new warning in ` Bug1282 . java
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the path
added support for handling Pending Rescue exceptions in IkStepDefinition . java to improve error management and ensure proper handling of pending contexts
replaced ` final ` modifier with ` hashCode ( ) ` for several ` equals ( Object o ) ` and ` hashCode ( ) ` methods
added a method to retrieve the SyncLevel from a string and initialized it to FLUSH if the specified level is null to improve flexibility in
test ( cluster ) : fix test which fail on slow ci server
added a condition to exclude both CONSTRUCTION and RECOVERY states in the RecoveryStrategy class to ensure that the state is only relevant for
pdfbox - 4892 : fix typo , a suggest by valerybokov
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` classes and modified the ` makeProcessExecutorParams `
refactor TransientBlobCleanupTask and related classes to utilize a cleanup callback instead of a lock to simplify the cleanup process and improve code read
server : fix npe when try to create firewall rule for static nat
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion logic for row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct conversion of row types
refactor BetterBlockPos class to improve code structure to enhance maintainability and readability of the code
updated the proxy retrieval to use the class loader of the EmbeddedVelocityToolboxView to ensure compatibility with the current application ' s context class loader
refactor version handling to use Version . isNightlyBuild ( ) instead of MainWindow . VERSION to improve clarity and maintainability of
added OracleDatabase import and modified statement processing logic in LoggingExecutor . java and JdbcExecutor . java to ensure proper handling of trailing and duplicated lines
add a new constant UNKNOWN _ VALUES _ ARE _ NSP to IsNullValueAnalysisFeatures and retrieve its boolean value to facilitate
set the port to 12345 and modify the URL for the HTTP response to use a dynamic port format to improve flexibility by allowing dynamic port
reduced BLOB _ SIZE values and adjusted PLAY _ MARGIN and SLIDER _ MARGIN values , and updated circle
added a new method to add a multifactor authentication provider bypass to DuoSecurityMultifactorProviderBypassConfiguration to enhance security
removed the ` rotate ` parameter from the ` findPositionForNewNodeBestAreaFit ` and ` findPositionForNewNodeContactPoint `
jbrules - 2842 : fix checkstyle violation in javax . lang . model
added methods to set and get the help page in PMS and refactored the updateContents method in HelpTab to improve flexibility and
added new classes GeocodeProviderFactory and Constants to manage GeocodeProvider and its constants to facilitate the creation of GeocodeProvider
updated import statements for CharArraySet from ` org . apache . lucene . analysis . util ` to ` org . apache . lucene
refactor exception handling in ResourceManager tests to use static assertions instead of JUnit rules to improve code readability and maintainability by elimin
updated GatewayServer and Protocol classes to use a dynamic value from ` Protocol . GATEWAY _ SERVER _ ID ` and modified object deletion logic
modified conditions in SegmentsInfoRequestHandler and refactored collection creation in CollectionsAPISolrJTest to improve code clarity and ensure correct collection
updated the calculation of ` numPredictiveAppCols ` based on the device type to ensure accurate prediction of app columns for phone devices
added a method to check for scalar subqueries in JoinUtils and refactored related logic in DrillJoinRelBase and NestedLoopJoin
added a new abstract class BlockBuildCraft to handle block removal events to facilitate the building and removal of crafies in
updated layout parameters for drag target bar in DeviceProfile . java to ensure proper layout positioning for drag - and - drop interactions
make sure yahoosession . start ( ) be call instead of yahoosession . run ( )
initialize ` ms ` in ` HiveMetaStore ` and ` HiveMetaStoreClient ` to null in ` HiveMetaStoreClient ` , and
updated the method to use ` Category . DISPLAY ` instead of ` getDefault ( ) ` in ` Locale . java ` and added a test for
removed unused imports for BASE _ URL _ PROP and CORE _ NAME _ PROP in Replica . java to streamline code by eliminating
replace ThreadLocalRandom with a Random instance in StoreDirectTest . java to improve performance and simplify randomness generation
added a check for the launcher is ready before calling backup methods to ensure that the backup is only performed when the launcher is ready to avoid potential
added a colon to the IllegalArgumentException messages in Cell . java to improve error handling by providing more context in error messages
added unit test base on user forum issue
updated variable names from ` setBodySpace ` to ` setBarSpace ` across multiple dataset classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
test : migrate filemessagelistest to hamcrest - spring
added multiple debug logger settings to Grasscutter . java to enhance debugging capabilities for various logging scenarios
changed the visibility of ` highlightCnstScrRngQuery ` and its getter and setter methods to static in ` SpanScorer .
updated state checks in Launcher . java and added a method to retrieve the current state in Workspace . java to ensure proper handling of workspace states
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
added cacheable check before notifying new templates in SnippetTemplate . java to ensure templates are only notified when caching is enabled
added a new constant ` SCOPE _ SOLR _ CORE ` and updated related methods to handle session management to enhance scope management and improve data
added a primary key column to the CREATE TABLE statement in DatabaseMetaDataTest . java to ensure that the measurement table is created with a primary key
corrected the spelling of " -- permissions - config - path " to " -- permissions - config - file " in multiple files to ensure
refactor session creation logic in HttpSessionContextIntegrationFilter to simplify session creation logic to enhance code readability and maintainability by reducing redundancy
added a new file TestIfWithDeadRegion . java that contains a method for generating a string from a Supplier to demonstrate the
corrected the spelling of " English UD . gz " to " English USD . gz " in the dependency parser tests to ensure
enable high resolution timer and modify concurrent access test in SnowflakeIdGeneratorTest to ensure thread safety during concurrent access testing
added a static UI setting and modified toast bar visibility logic in MainFragment to allow dynamic visibility of the toast bar based on user preferences
replace the ` Privilege ` implementation with a lambda expression that frees the LUID to ensure proper resource management and prevent memory leaks
replaced ` getParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added a check for non - empty clientId to
updated JOptionPane message handling in MEncoderVideo , NavigationShareTab , and PluginTab classes to include localized messages to enhance user experience by
tika - 2338 -- add mime type for ooxml and spreadsheet file for tika - poi
added logging statements and refactored the join method in multiple classes to improve code readability and maintainability by reducing redundancy
camel - 16400 : camel - eip - documentation - enricher - improve xml output formatting .
added a synchronized method ` removeVersionInfoForEndpoint ` and modified error messages in ` MigrationCoordinator ` , ` StorageService ` , and ` Migration
added debug logging for stored audio and playback devices in DeviceConfiguration . java and refactored capture device handling in PortAudioAuto . java to
added a ` WebsocketConfig ` class and modified ` ReactorNettyWebSocketClient ` constructor to accept ` ShenyuConfig `
added support for a new interface ` ISuiteListener ` and modified the ` CacheValidationListener ` class to implement it to enhance testing capabilities by
added a check for non - empty trimmed content length before adding it to the document to ensure that the content length is only added if it is
fix deadlock in defaultsolverjob . solvingterminated
added exception handling for path already exist time series creation in MManager . java to improve robustness by preventing concurrent inserts of non - existent
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check the authentication status
changed access modifiers of several methods from public to protected in multiple classes to enhance encapsulation and restrict access to these methods
server : fix for npe in vmsnapshots - check for reserve / non - reserve state
replaced the assignment of ` _ valueString ` with an empty string in ` HttpParser . java ` and updated test cases in ` HttpParser
removed the completeInitialization method from J9VMInternals . java and added character encoding handling in Thread . java to streamline thread initialization process
added an implementation of the ` getExternalStoragePublicDirectory ` method in ` ShadowEnvironment ` and created a corresponding test case in ` EnvironmentTest `
[ jbrules - 3689 ] add test for mvel type coercion after jbrules - 3689
reformatted code for better readability and consistency in logging configuration classes to enhance code clarity and maintainability
updated log message formatting in ActionNode . java to include exception message to improve logging clarity by providing more context in exception messages
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 538 . the
updated visibility logic for shared file icon in FileListListAdapter . java to ensure correct visibility behavior for non - folder files in grid mode
deprecate hive . optimize . sort . dynamic . partition in favor of hive . optimize . sort . dynamic . partition . threshold
refactor ExecuteStatementOperation and Operation classes to include a confOverlay parameter for better clarity and organization to enhance code readability and maintainability
refactor ` BTCMarketsStreamingAdapters ` and ` BTCMarketsStreamingService ` to use ` Arrays . asList ` for better
updated assertion in OGRDataStoreTest to compare type names instead of names to ensure consistency in type comparison across test cases
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to simplify the method by eliminating unnecessary functionality
wallet : fix typo find by codespell on fossies . org
camel - 14284 : camel - netty - http - fix the issue that camel - netty - http do n ' t support
replace System . out . println statements with log methods in TestNonBlockingAPI . java to improve logging consistency and facilitate easier debugging
added a check to ensure the row index is within the bounds of the connection list to prevent potential ArrayIndexOutOfBoundsException when accessing the connection list
[ java ] add a rule to check if a method have the same name as the enclosing class in a class .
added an ExtendedPlatformComponent class to manage ManagedObject instances and updated ManagementFactory to utilize it to improve management management by ensuring managed objects are
added SQL string replacement for double quotes in BasicQueryTest . java to ensure SQL strings are properly formatted as single quotes
updated file paths for various Bleutrade DTOs in multiple test classes to reflect the correct package structure to ensure compatibility with the latest
refactor TextEscapeUtils class for improved readability to enhance maintainability and clarity of the code
added a FILTER _ PARAM constant and modified the FilteredQuery creation logic in AbstractSpatialFieldType . java , and added a new test in Test
removed progress reporting and updated post method for email sending in GpsLoggingService . java to streamline email sending process and ensure proper posting
replace ArrayList with HashSet and modify iterator methods in Inlinks , LinkDb , and LinkDbReader classes to improve performance and reduce memory usage during
added a synchronized method ` stopScan ( ) ` and modified the ` removeOlderResults ( timestampOfLastScan ( ) ) `
modified the filter logic in HiveMetaStoreClient to accept a boolean parameter for server - side filtering to enhance flexibility in test execution by allowing
added " Abandoned " to the list of workflow statuses and updated related classes to include " Closed " and " Abandoned " status to enhance
set the default value of columnAliasPrefix to null across multiple platform classes to ensure consistent handling of column alias behavior across different platforms
replaced Text with BytesWritable in LlapRowRecordReader , LlapRowInputFormat , and SemanticAnalyzer classes to utilize a more
added NonNativeJVMDetector class to detect non - native JVM systems and log a warning if it is on a 32 - bit JVM
updated conditional checks for PdfName . PAGE and PdfName . PARENT in PdfCopy . java to improve code clarity and ensure correct handling of key values
added a new option ` DAEMON ` to the ` RESET _ ALARM ` option and implemented daemon mode starting in ` TerminalClient
added a new file ` FlushIndexTask . java ` that implements a task class for flushing index writers to facilitate the flushing of
updated the ` createFlushWriter ` method to include an estimated size parameter across multiple classes to enhance the flushing process by allowing more flexible control
added SEASONS to the conditional check for expectedOutput in MediaLibraryFolder . java to ensure proper handling of SEASONs output
added a new file LocalSocketAddress . java to test IPv6 availability of a DatagramSocket to ensure that the local address of a Datagram
updated grid size points in GridSizeMigrationTask . java to correct grid positioning to ensure correct positioning of grid size steps in the migration
updated method calls from ` getName ( ) ` to ` getName ( ) ` in ` SerializerPojo . java ` to ensure consistency in method
added read - only context functionality and improved error handling in the Context class to ensure object operations are only performed in read - only contexts and
refactor LookAndFeelCommand class for improved readability to enhance maintainability and ease of understanding for future developers
update logic in BlockBoxing . java to use ceiling for lastRunStart instead of floor for lastRunEnd to improve accuracy in determining
added support for EOFException and EofException in GracefulStopTest to improve error handling by distinguishing between ClosedChannelException and EOFException
refactor NetJavaImpl to use synchronized methods for put and remove operations to improve thread safety and simplify the management of HTTP request connections and listeners
refactor NetworkParameters class to improve code structure to enhance maintainability and readability of network parameters
removed conditional check for account asset optimization in DynamicPropertiesStore to simplify asset optimization logic based on configuration
added a static final integer J9 _ GC _ POLICY _ NOGC constant and initialized it to zero to facilitate garbage collection
added validation for transaction data in TransactionCapsule . java to ensure proper contract processing in the application
deleted the ExceptionTypeChecking . java file which contained a strictexception rule to the rule is no longer needed in the project
updated resource retrieval in HelpContent . java to use " en / " prefix and added logging for fallback to English to improve localization handling and provide
added a new file ` ProcessorInfo . java ` to determine available CPU cores and its masking to provide a mechanism for determining the number of
added support for HTML output generation by introducing a stylesheet option to enhance the bug reporting capabilities by allowing custom stylesheet options
fix nullpointerexception when load logback . xml
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent classes to improve cluster ID handling and encapsulate cluster updates to enhance code clarity and
removed conditional configuration for tag propagation in SleuthTagPropagationAutoConfiguration and updated test cases in SleuthTagPropagationAutoConfigurationTests to
refactor rustDepType assignment logic in RustCompileUtils . java to use a switch statement to improve code readability and maintainability
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > ` parameter and added error handling to enhance
hbase - 11381 halfstorefilereader should seek to the first kv before seek to the beginning of the file
hhh - 14284 - deprecate generationtiming . always in favor of generationtiming . always .
added a new test method ` testLayerNormNan ` in ` TestLayerOpValidation . java ` to validate layer norm functionality to ensure correct
refactor showShareFile method calls to use getFileOperationsHelper method across multiple activities to improve code readability and maintainability by centralizing method
added a new test class LiquibaseUpdateMojoExecutionTest for testing relative ClobFiles to ensure correct execution of Liquib
updated the method to convert the " proxyType " value to uppercase and modified the proxyType assignment logic to ensure consistent handling of the proxyType
added a new class ` mod _ MinecraftForge ` that includes MinecraftForge functionalities to facilitate the
refactor JdbcDatabaseSnapshot to improve caching logic for column retrieval based on table and column name patterns to enhance flexibility in fetching database columns based
added a container with a border and a label to the container in CSSBorderTest . java to enhance the UI with customizable border styles and
added ` RetryInterceptorAutoConfiguration ` and ` RetryInterceptorAutoConfiguration ` classes and introduced ` RetryableStatusCodeException ` for better error handling to
updated superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure consistent layout behavior across different components
replaced ` System . nanoTime ( ) ` with ` System . currentTimeMillis ( ) ` in the ` parentTaskName ` string to simplify the
added error handling for invalid Add Service request parsing in ServiceResourceProvider . java to improve robustness by providing clearer error messages when parsing input
refactor conditional checks in IndexDatabase . java for better readability to improve clarity and maintainability of the code logic
[ giac ] make sure round ( - x ) do n ' t throw arrayindexoutofboundsexception .
refactor AnonCipherWithWantClientAuth class for improved clarity to enhance maintainability and readability of the code
http : / / issues . apache . org / jira / browse / amq - 4898 - deprecate producertemplate . java
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
do n ' t wait for evictedentrylatch to become open even if it ' s not open .
replaced the internal method ` encodeInternal ` with a direct variable ` saltedPass ` in the ` Md5PasswordEncoder ` class
replaced local variable ` viewTreeObserver ` with instance variable ` mTaskRecyclerView . getViewTreeObserver ( ) ` to improve code read
refactor Response class to improve code structure to enhance maintainability and readability of the code
change the minimum value of maxTimestamp from Long . MIN _ VALUE to Long . MAX _ VALUE in SSTableMetadata . java to ensure
set the preferred size of the security panel to improve the visual appearance of the security panel
added null and empty checks for replies in multiple classes to avoid potential NullPointerExceptions when compressing replies
refactor HitbtcBalance class to replace Apache Commons Lang ' s toString method with Apache Commons Lang ' s Objects . equals
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 529 . fix
updated the return statement in RetriesExhaustedWithDetailsException . java to use addrs . toString ( ) instead of a single string to
replaced direct closeOpenFile ( ) call with OpenCookie . open ( ) in EditGcodeFile . java to streamline file opening
updated import statements and modified connection manager initialization in JsonToGrpcApplicationTests . java to use the new HttpClient implementation and SSL contexts to enhance
pipe : reduce power wood energy by subtracting from requested energy
added a check to delete the temporary output file if it exists to ensure that the temporary output file is no longer needed for further processing
updated the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added new test cases for trade and ticker
added expiration checks for replay processors and subjects in ReplayProcessor and ReplaySubject classes to ensure that replaying processes does not exceed the specified
updated the expectedCitation string format in CitationStyleGeneratorTest . java to ensure consistency in the expected Citation format
added new constants for database columns and SQL queries in MediaTableFiles . java to improve code readability and maintainability by reducing redundancy
show only definition for equation in exam , not just equation
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerExceptions during execution
added caching configuration for meta scan when startrow is null and scanRoot is false to improve performance by reducing unnecessary scan operations
updated the initialization script file from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math . java and StrictMath . java files to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to allow enabling or disabling the transient task
[ hotfix ] fix checkstyle violation in accessexecution and archivedexecutionvertex
added conditional density assignment for scale = 3 in IOSGraphics . java to ensure consistent density calculation based on scaling factor
rename ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
hbase - 26969 regionstatestore # log should log exception instead of null
updated the assertion in TestClusterUpgradeUtils to use a lambda expression for better readability to improve code clarity and maintainability by reducing
updated logging messages and refactored AsyncContextTest to use LocalConnector and SelectChannelAsyncContextTest to improve clarity of log messages and
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to provide additional control over the visibility of an arrow in the
added a check for MVStore before setting the lock mode in Database . java and removed the testSetMode method from TestRowLocks .
truffle : skip non - amd64 / amd64 test on linux
refactor scalar handling to differentiate between Integer , StringValue , and IntValue types to improve readability and maintainability of the code
updated the validation logic for primary keys in CreateTableStatement . java to provide clearer error messages for missing or too many primary keys to improve
added conditional logic to set drawable resources based on LMP status in CellLayout , Hotseat , and Launcher classes to enhance visual
catch exception in getflutterviewslist ( ) , throw a runtimeexception if the current isolate do n ' t exist
added multiple ` ContentTypeOptions ` , ` XXssProtection ` , ` CacheControl ` , and ` HttpStrictTransportSecurity ` header writers
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and clarity of the code
[ grid ] move distributedcdp test to router
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the event type for the aggregate root
added support for packageing prebuilt libraries in Python binary handling to enhance functionality by allowing users to specify prebuilt libraries in the Python binary
added clientAuth handling in NetServerOptionsConverter and removed deprecated methods in HttpServerOptions to streamline client authentication configuration and improve code clarity
updated directory paths in HiveConf and MetastoreConf to use ` $ { system : user . name } ` instead of ` / user
refactor task view management logic in RecentsView . java to improve clarity and efficiency to enhance code readability and maintainability by
increase the test timeout for the AmqpTransformerTest to allow more time for tests to complete before proceeding with further tests
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
rename variables and variables from ' controller ' to ' flowController ' across multiple classes to improve clarity and consistency in naming conventions
updated the assignment of ` finalExchangeNum ` in ` OperatorTreeGenerator ` and added a new test method in ` PipelineBuilderTest ` to
added uses io . github . classgraph . ClassLoaderHandler in the module - info . java file to enable the use of the ClassLoaderHandler for
planningproblem . getbestsolution ( ) be now set in event thread , not in event thread .
added JsonIgnore annotation to ApplicationSettings . java to temporarily disable JSON serialization in the application settings
changed the condition from checking if throwable is null to checking if it is not null to ensure that the method only executes when throwable is not null
refactor null check for queryInfo in QueryTimeManager . java to improve code readability and avoid potential NullPointerExceptions
fix auto workbench not work when there ' s nothing to craft
add support for gl200 2.0 text ( fix # 2178 )
renamed timeColumnName and timeFieldSpec to incomingTimeColumnName and incomingTimeFieldSpec to improve clarity and consistency in naming conventions
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
added initialization support for ` Initializable ` in ` ContainerBuilder ` and created a new interface ` Initializable ` to facilitate the initialization
add longtasktimer to timerobservationhandler so it can be use with meterregistrycompatibilitykit .
changed the data type of SYNC _ DELTA _ RATE from float to double and modified the calculation of delta and interval to improve
added logging for deprecated fragment expressions in ` AbstractStandardFragmentInsertionTagProcessor ` to inform users of outdated and deprecate fragment expressions in future versions
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when reading attributes
http : / / issues . apache . org / activemq / browse / amq - 2638 - fix copy of message in
added new color constants and modified extractInto method to return fallback colors based on color hints to improve color extraction logic and ensure fallback colors are applied
added accessibility checks for the data folder in SketchBuilder . java to ensure that only valid data folders are included in the srcFolderPathList
updated OmniNotes and NotesHelper to include title handling in appendContent method to enhance functionality by allowing content to be included or excluded based
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify the session registry initialization process
[ hotfix ] [ stream ] log reconnection complete in nettystreamingservice
updated proxyFactory initialization to use JavassistProxyFactory instead of CglibProxyFactory to ensure compatibility with internal Javassist
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management efficiency by using a
refactor SocketExceptions to use String . join for message formatting and improve address validation in ExceptionText to enhance readability and provide clearer error
added a method to check if the view path is under the repository directory to improve error handling by providing feedback when the view path is under the
added drag and drop functionality to the tab header area in JabRefFrame . java to enhance user experience by allowing users to open database files
added " - XX : + UseCompressedOops " and " - XX : + UseCompressedClassPointers " options to multiple test
peersync : remove log error if update log be not in active / replaying state
deleted the ConnectionHook . java file to the functionality was no longer needed in the project
removed the ` waitForReplicasInSync ` variable and its usage across multiple test classes to simplify the code by eliminating unnecessary synchronization checks
( chore ) camel - swagger - java : fix typo
updated versioning in ApexLanguageModule to use the external version from Version . CURRENT . getExternal ( ) instead of a hardcoded value to
refactor multiple classes including CORSFilter , TregexPoweredTreebankParserParams , CoNLLOutputter , QuoteAnnotator , Sem
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread pool creation and thread management to improve thread management and ensure consistent thread management across different
updated WebSocketAsyncConnection to accept a ByteBufferPool instead of a StandardByteBufferPool to enhance flexibility in managing buffer buffers for WebSocket connections
added scroll functionality to the thumbnail layout manager in UploadActivity to improve user interface responsiveness by scrolling to the correct position based on thumbnail index
fix ( griffin ) : fix ` ` min ( x ) ' ' column alias in ` ` min ( x ) ' '
refactor animation handling in LauncherAnimUtils and add state transition animation in LauncherStateTransitionAnimation to improve animation performance and enhance state transition
added a conditional to disable the default user agent based on configuration to enhance flexibility in user agent management based on configuration settings
added support for pubsubhubbub in FeedRefreshUpdater and ApplicationSettings to enable dynamic handling of pubsub hub bubs based on the application
changed the access modifier of the finalize method from public to protected to restrict access to the finalize method for better encapsulation
added a check for synthetic classes in the isAnonymousOrLocalOrSyntheticClass method and updated corresponding assertions in the CalculateAbiFromClasses
added a new class DSpaceWebapp that extends AbstractDSpaceWebapp and checks if the application is UI to facilitate the
added null check for leftTableAlias and implemented getTableAliasContainingColumn method in CalcitePlanner . java and RowResolver . java to ensure that
updated the string concatenation format for the trigger key in JobGenerator . java to improve readability and maintain consistency in naming conventions
refactor transaction broadcast logging to use more descriptive log messages to enhance readability and maintainability of transaction broadcasting logs
increased timeout in basicmaptest . testbasicmap ( ) from 3 seconds to 6 seconds to allow for more time for map operation
hive - 15836 : enable rcfile optimization writer by default ( jesus camacho rodriguez , review
added a new enum ` TlsClientCertPolicy ` and refactored ` GitBlitServer ` to use it for parsing client certificate
removed the subscription logic for alert events in KrakenFuturesStreamingService . java to simplify the subscription process and improve logging clarity
added HTTP headers handling and sub protocols to the ProxyWebSocketHandler class to enable flexible WebSocket protocol configuration based on request headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability of query results during debugging
corrected the spelling of " dimensions " in HolidayEventFormatter . java to ensure proper formatting of dimensions for better readability and maintain
added inner class and inner static class handling in FinalizePrivateFieldsTest . java and modified constructor condition in FinalizePrivateFields . java to improve cl
refactor UnexpectedJobExecutionException class for improved clarity to enhance code maintainability and readability
deleted the file ` module - info . java . extra ` and modified the button background logic in ` AquaLookAndFeel .
updated maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer to use maxCost instead of docFreq
added a new constant for GeoDegeneratePath and updated the classRegsitry map to use this constant to improve code readability and
removed the ` preFill ` parameter from several ` ParticleEffectPool ` , ` FlushablePool ` , and ` ReflectionPool ` constructors
updated TaskbarLauncherStateController to update taskbar state based on launcher status to ensure taskbar state is correctly applied when not in the launcher
added a null check for the default style before comparing it to avoid potential NullPointerExceptions during style removal
refactor GuiUtil and StatusTab classes to use a new setSize method instead of
refactor icon assignment logic in FileTreeViewHolder . java to use TreeFileExtension for file types to improve code readability and maintainability
updated assertions from ` isEqualTo ` to ` contains ` for qualifier checks in ` ParallelUniverseTest . java ` to improve readability and
refactor XMLReporter to use a synchronized map for suite results to ensure thread safety when accessing shared results
add a new test class TestNativeProbabilityFunctionQueries to facilitate testing of native probability function queries
added a call to deregister the ClientContainer ' s ShutdownThread from the ShutdownThread to ensure proper resource management and prevent potential memory leaks
hhh - 11345 - add sybase - 15dialect . droptemporarytableafteruse ( ) to drop temporary table after use
danielwagnerhall : fix typo in htmlunit webelement . getcolor ( )
refactor multiple Java files related to SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing to improve code organization and
refactor LinksIndexingFilter to improve code structure to enhance maintainability and readability of the code
updated hex string format in VirtualAllocCommitUncommitRecommit . java to include " 1024KB for Test " to improve clarity of memory
update adPlaybackState initialization to include skipped ad groups in AdTagLoader and AdsMediaSource to ensure accurate ad playback state updates for skipped
updated the equality check in MultimapSubject to use a boolean variable for clarity to improve code readability and maintainability by reducing redundant
updated the wave frequency string from ` deg _ text ` to ` unit _ hz ` in ` WaveGeneratorActivity . java ` to ensure
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated the initialization of the ` all ` TreeMap to use ` includedLabelSets ` instead of ` includedLabelSets ` to simplify the code by
added a new vertex format element NORMAL _ 4F and updated its usage in VertexLighterFlat . java to improve code clarity and prevent
added tags for " grpc . message _ sent . visible " and " grpc . message _ received . visible " in multiple interceptor classes to enhance
updated time zone handling in ScheduledTrigger . java to use TimeZone . getTimeZoneId ( ) instead of ZoneId . of ( timeZoneStr ) to
added AsyncBucket and InMemoryExtension classes , and modified related methods to utilize the InMemoryExtension class to enhance functionality and support for asynchronous
updated the logic for determining the classes directory in resexhaust003 . java and improved error handling in TestDescription . java to ensure
removed unnecessary whitespace and improved formatting in AbstractConnector . java to enhance code readability and maintain consistency in formatting
refactor OngoingStubbing class to improve code structure to enhance maintainability and readability of the code
refactor web server handling in Main . java to use an Optional < WebServer > instead of a hardcoded value to improve flexibility and
replaced ` productConstructor ` with ` constructor ` in ` HttpClientUtil . java ` and added a static block in ` SolrTestCaseJ
added a check to ensure the thread ' s allowlist is not empty before clearing it to prevent potential NullPointerExceptions during execution
replaced ` outputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the correct item writer is
[ drools - 5242 ] do n ' t log gap and overlap if the hit policy do n ' t match ( # 3
added a new test method ` testSlidingWindowsCombine ` to validate the combination of sliding windows to ensure that the Combine function works correctly
added a conditional check for ` allAppsDirty ` before binding all apps and improved logging format in ` LauncherModel . java ` to
added assertions to verify the existence of the " Running " attribute in ManagedFileWatcherReloadStrategyTest to ensure the test accurately reflects the
reformatted the import statements for better readability and consistency in the Solution class to enhance code clarity and maintainability
refactor AquaMenuBarUI to use AccessController for property retrieval instead of getPrivSysProp to improve security by ensuring useScreenMenu
added a boolean parameter to the setRawLocation method in GlowEntity , GlowPlayer , and GlowItem classes to control whether the location
refactor query logic in SimpleJpaRepository to use a specification for better clarity to improve code readability and maintainability by reducing
added timestamp , parent hash , nonce , and number fields to the BlockUtil builder to include genesis block arguments for consistency and clarity
use safepointpollingaddress instead of safepointpollingaddress for loop safepoints
hbase - 25836 fix npe in rsgroupinfomanagerimpl . listchildrenandwatchfornewchildren ( ) ( #
changed access modifiers of classes and methods in ArtifactResolver from package - private to public to allow broader accessibility for other classes and methods in
added thread stop handling and disposal methods in ClientConnectionHandler , BulletPhysics , and ChunkProcessingPipeline classes to ensure proper resource
added a validation check for maxBufferedDocs in IndexWriter . java to ensure that maxBufferedDocs is at least 1 to prevent runtime errors
added state management for login in LoginActivity to manage the login state effectively
added null checks for source and value extraction in Pump . java and a new test for UUID sorting in PumpTest . java to ensure
modified access modifiers and visibility of several methods in HttpShardHandlerFactory and LBHttpSolrServer classes from private to protected to enhance encapsulation
changed the order of the authentication service selection strategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added a
added Jetty server handler setup and context handler collection in TestJNDI . java to enhance Jetty server functionality and improve context management
updated formatting and assertions in SortedDynPartitionOptimizer . java for consistency and clarity to improve code readability and maintainability
change return value from NioEventLoop to true in FileStreamChannel . java to ensure that the method always returns true for non - N
updated the calculation of ` newNumNulls ` based on ` newNumRows ` instead of ` oldNumNulls ` to ensure that ` new
camel - 15836 : camel - jbang - export - add kamelet support to camel - jbang - run and camel - jb
replaced OkHttpOAuthConsumer with AuthState and added authorization handling in OSMJob . java to improve access control and error handling for Open
updated various test classes and methods to improve code structure and readability to enhance maintainability and facilitate testing of PTX phase functionality
added clientAuth property and its getter / setter methods in IoTDBRestServiceConfig , and updated RestService to accept it to enable client authentication
refactor injection logic in PropertyAndSetterInjection and add a new test class ChildWithSameParentFieldInjectionTest to improve code clarity and
replaced BloomFilter32bitSplit with BloomFilter64bit and added InitializingBean implementation in BloomUriUniqFilter to
updated cursor adapter behavior in HomeFragment and added a preference for refreshing in TweetPager to enhance user experience by allowing refreshing of twe
updated the immediate header height ratio in the ProfilePager class from 1f to 75f to improve the user interface by adjusting the header '
replaced the use of ` RuntimeEvent ` with a new ` RecompilationEvent ` class and updated related imports and logging functionality to enhance
added HOST _ SYS _ PREPPED constant and related methods to manage host prepping status to enhance configuration management by allowing configuration of host
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method and created a new test class ` UnknownChangeLogFormat
added a loop to delete trailing slashes from the location if it is a root to ensure proper handling of root paths in the servlet context
added property handling for entity and score in StaticPipeline class to enable dynamic configuration of entity and score based on user - defined properties
updated file path handling in Frame . java and added configuration for Whoops in WhoopsModule . java to improve file path management and
[ geos - 8470 ] catalogrepository . lookupstore ( ) should return null instead of throw an exception
refactor assertions in Assert . java for improved readability to enhance maintainability and clarity of the code
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added new test classes ` MultiLineJaggedText
( chore ) camel - activemq : fix unit test for multiple message on same topic
remove unused lists for writeMeasurementScheams and schemas in TsFileWriteAlignedWithTSRecord and TsFileWriteWithTablet classes to
updated memory measurement logic in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to adjust expected memory usage based on
updated jar file pattern from ` slf4j - log4j12 - . * ` to ` slf4j - reload4
[ hue ] wait for the osgi test before verify the offline configuration error
updated package structure from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` and added an
[ drools - 1276 ] ignore kie - container - solver - factory test when drools - 1276 be fixed (
added a constructor to ` PullRequestMergedEventsStream ` that reads and initializes ` _ avroSchema ` from a file to facilitate the
refactor AbstractExpressionPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] fix checkstyle violation in taskslot . java
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` listener with ` CLOSE ` listener in ` NettyWebSocket ` and ` Netty
added error handling for unlocking locks in MoveTask . java to improve robustness by logging unlock failures gracefully
refactor JRubyBackend to use a ResourceBundle for loading properties and strings instead of loading them to improve flexibility and maintainability by utilizing
replace ZERO _ ADDRESS with EMPTY _ BYTE _ ARRAY for receiveAddress assignment to improve clarity and maintainability of address handling logic
removed unnecessary whitespace in ClassGraphClassLoader . java to improve code readability and maintain consistency
added setup and teardown methods for blob storage directory in JobManagerStartupTest . java to ensure proper handling of non - existent blob storage directories during
chore : [ datastream ] update readme of clouddatasstreamresourcesproto . java ( # 113 )
added a bundle to the FileDisplayActivity to set its extras to enhance the file display functionality by allowing dynamic configuration of additional data
changed break statement from ` break ` to ` continue ` in ` ParticleEmitter . java ` to ensure the loop continues when a particle is
updated expect statements in AmbariManagementControllerImplTest and AmbariManagementControllerTest to use 1 instead of 2 for expected return values
removed nullable attribute from the @ Column annotation in TransientSessionTicketImpl . java and added NoResultException handling in JpaTicketRegistry . java
updated Bug4823811 . java file to reflect new functionality related to bug 4823811
updated RmStep . java to use a function for path relativization instead of a direct pattern to improve flexibility in handling file paths
updated the ` requestFullState ` method to accept a boolean parameter for initial requests to enable scheduling of the full state request based on whether the
added a new property ` attribute ` to the ` ShibbolethCompatiblePersistentIdGenerator ` class and updated related methods for better attribute management
removed duplicate @ Inject annotations in RequestValidationService . java to improve code clarity and maintainability
refactor keyboard hiding logic to use a parcelable message for logging to improve code readability and maintainability by reducing duplication in
removed unnecessary whitespace in FileNodeProcessor and improved metadata clearing logic in MManagerBasicTest and MTreeTest to enhance code readability and
refactor NavigableMap and NavigableSet classes to improve code readability and maintainability
add a new test method ` testSlurpFile ` to ` IOUtilsTest ` for verifying the slurpFile functionality to ensure
added @ FunctionalInterface annotation to several classes and changed access modifier of the wrap method from protected to private to enable functional interfaces for functional interfaces
refactor span retrieval logic to use a dedicated method for name matching to improve code readability and maintainability by centralizing span retrieval logic
added date type conversion functionality to ETypeConverter and HiveSchemaConverter to support date data types in Hive schema processing
updated the string splitting method in StyleConverter . java to use Patterns . COMMA _ SEPARATOR instead of a hardcoded string to improve flexibility
ggb - 2321 add support for positive number in input dialog
refactor column validation logic in SemanticAnalyzer . java to improve clarity and maintainability to ensure accurate mapping of table and row fields based on
added assertions and improved loop structure in WANDScorer . java to enhance code reliability and maintainability by ensuring upTo is within
refactor Correspondence class to improve code readability to enhance maintainability and ease of understanding for future developers
updated import statements in PaintSetEnabledDeadlock . java to include specific Java AWT classes to enhance compatibility with newer Java features and improve code
initialized ` curPixVal ` to a default value and added a new test class ` WhiteTextColorTest ` to ensure correct pixel value handling and
refactor methods and variable names related to subtypes and supertypes in BiomeDictionary . java to improve code readability and maintainability
corrected the spelling of " withinTolerance " to " exceedsTolerance " in the BoundedLocalCache class to improve code readability and
added imports and updated test stability annotations in TaplTestsLauncher3 . java to enhance test stability control and improve test reliability
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure ` logFileSuffix ` is not empty before proceeding to prevent potential errors when ` logFileSuffix ` is empty
refactor PythonBuckConfig . java to improve code structure to enhance maintainability and readability of the codebase
added tests for adding and clearing system shared library names in ShadowPackageManagerTest and ShadowApplicationPackageManager to ensure correct functionality of system shared library
fix meiligao protocol decoder ( fix # 269 )
added null check for tile in PowerDiode . java to prevent potential NullPointerException when accessing tile properties
added a new ` TrimCache ` task and modified cache size handling in ` PrefFragment ` and ` IOUtils ` classes to improve cache management and
replaced the import of ` com . google . api . util . Lists ` with ` com . google . common . collect . Lists `
replaced return values of ` false ` with ` NotAuthorizedException ` in multiple classes and updated access control checks to throw ` NotAuthorizedException ` to
added a new abstract method ` schedulePeriodically ` and updated several method signatures to include a ` Func2 ` parameter to enhance functionality by allowing
replaced refresh of the list of files fragment with a call to onItemClicked to retrieve the remote file to improve user experience by ensuring the
added a check for multiple input streams and improved error handling for file matching to enhance robustness and provide clearer feedback when multiple streams are
refactor ` create _ table ` method to accept ` CreateTableRequest ` instead of ` EnvironmentContext ` to simplify table creation process and improve
added a ` aborted ` flag and modified ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker . java ` to
refactor indentation handling in multiple parser classes to ensure consistent indentation behavior across different parser implementations to improve code readability and maintainability by reducing
added ` NetworkWifiStatusReceiver ` and ` ChangeWifiStatusEvent ` classes to handle Wi - Fi status changes to enable
simplified the conditional check for control frames in FrameGenerator . java to improve code readability and maintainability
added visibility setting for the collapse handle view in WidgetsBottomSheet to ensure the collapse handle is displayed in the UI
added tests for HTML and JavaScript escape functionality in Issue475 . java and XSS . java to ensure correct handling of HTML and JavaScript inputs
added a check to return early if there are no units to scroll to optimize performance by avoiding unnecessary processing
updated the condition from checking if the contract list size is greater than one to checking if it does not already exist to ensure that the contract list
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes , and corresponding tests in ` JsonArrayTest ` and
added hashCode method to IPPPrintService and created TestRaceCond class to ensure consistent hash code generation for print services
db2Dialect , db2zDialect , db2iDialect , db2zDialect : use getversion ( ) instead of version to
added a condition to check if the transaction ' s platform fee is greater than zero before verifying connection status to ensure that connections are only enabled
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
add support for encrypting and decoding of input buffers in MediaCodecRenderer . java to improve input buffer handling and streamline the sample process
removed public access modifier from several classes and methods in various classes to enforce encapsulation and restrict access to these classes
added import statement for Retrofit in Part and PartMap classes to enable the use of Retrofit functionality in the Part and PartMap
refactor JSON handling and parameter handling in JsonBuildHelper and ParamsBuildHelper to improve parameter handling for Java objects to enhance code clarity and
added a new constant ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to the list of supported taskbar types in ` AbstractFloatingView
fix : update gapic - generator - java with mock service generation fix ( # 2382 )
updated the alpha calculation logic in ClipAnimationHelper and added a hasRecents flag in RemoteAnimationTargetSet to improve animation behavior based on
removed an additional parameter from the createRenderScript method call to simplify the render script creation process
refactor PMD . java to improve code structure to enhance maintainability and readability of the code
refactor PluginListCellRenderer and PluginManagerActivator to use a helper method for system bundle checks to improve code readability and maintainability
removed unnecessary import statements and simplified method signatures in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
keychaingrouptest : use low false positive rate for bloom filter .
refactor configuration handling in Overview . java to use a new Configuration instance instead of a rocketConfiguration to improve code clarity and ensure
ambari - 20611 . fix npe in findattache ( mahadev ) ( dlysnichenko )
added a null check before processing the value in DefaultRecordStore . java to avoid potential NullPointerExceptions when processing values
kvm : improve error message when server add fails
updated the error message for NO _ NAME and NO _ VALUE to include NAME _ ATTRIBUTE and VALUE _ ATTRIBUTE to improve clarity of error messages
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept an Object instead of InvocationContainerImpl to
added a method to strip method parameters from the method name to improve method clarity by eliminating unnecessary parameters
updated VERSION _ NAME and VERSION _ CODE from " GreatVoyage - v4.2 . 1 - 56 - gaff23
[ geos - 8470 ] outputfilter should use hashset instead of list for allowedcommands
[ geot - 6769 ] symbolizer should use label cache item for graphic resize and group .
ggb - 2323 popups be center when there ' s no overlap feature .
updated regex patterns in ValidationSuite . java for consistency and clarity to improve readability and maintainability of the code
added a new ` StartingWindowListener ` to ` QuickstepTransitionManager ` and modified its implementation to improve the handling of task launching events
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to document the inherited functionality of MBeanServerConnection
updated exception messages in CheckPackageAccess . java to include PackageAccess and PackageDefinition SecurityException to improve clarity of error messages related to package access
increased the timeout duration for the executor service termination from 30 seconds to 90 seconds and added an assertion to verify that the test does not
changed the type of loggingEnabled from boolean to Boolean and added a null check for loggingEnabled to ensure loggingEnabled is only set when it is
added @ JsonIgnore ( true ) annotations to the Schema class to temporarily disable JSON serialization during deserialization
increased the timeout duration for the test from 5000ms to 10000ms to allow more time for tests to complete before proceeding
updated the train method and related methods to use log - likelihood calculation instead of a hardcoded value to improve accuracy in classification calculations and enhance accuracy
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` for better clarity to enhance
updated Prototype . java and Prototype . java files to improve code organization and maintainability
added a check for the presence of a transactional table in SemanticAnalyzer to ensure that the table ' s status is correctly determined when it ' s
[ java ] remove unused writefragment method from recordingwriter .
update CeaDecoder and CeaSubtitle to use format . OFFSET _ SAMPLE _ RELATIVE and add assertions for timeUs handling to
added " alias " to the group data points by type in KairosDatastoreTest . java and overridden the getAlias method in DatastoreMetricQuery
updated currency pairs in VaultOfSatoshiBaseService to use USD instead of CAD for consistency to ensure accurate representation of currency pairs
hhh - 14936 - fix resource leak in unit test
updated import statements for KafkaSender from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests
added two new integration test files , GwtBinaryIntegrationTest . java and A . java to verify the build process for the GWT binary
added null check for getQueryBuilderDialog in BrowserContentPane and improved handling of ResultSetRenderer in SQLConsole to enhance robustness by preventing potential
updated the order of parameters in the EnhancedRandomImpl and EnhancedRandomImplTest classes to ensure uniformity in the generated random value generation
refactor XMLSecurityPropertyManager usage in DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to use a static final variable to improve
added new files ` InlineDefaultMethod . java ` implementing interfaces with default methods in ` InterfaceWithDefaultMethod0 ` and ` InterfaceWithDefaultMethod1
update regex patterns in SqliteFieldPredicateView . java to use GLOB ( * ) instead of LIKE ( % ) to improve accuracy in
change access modifier of getDMNProfiles method from private to protected to allow subclasses to access the method for better encapsulation
feature - redissonscript . loadall ( ) method throw npe if script be load from slave node . # 3769
refactor EspressoLanguage and StaticObject classes to improve code readability and maintainability to enhance maintainability and clarity of the code
updated debug log statements to use ' verbose ' instead of ' debug ' for targets to improve logging clarity and reduce verbosity in debug logs
fix memory leak in fmloutboundhandler . sendproxy ( )
added a constant for HTTP Jetty server handlers and updated thread pool settings in WebServer to allow dynamic configuration of the number of HTTP Jetty
replaced the mapping of shortcut IDs to shortcuts with a removed list and added a check for non - pinned shortcuts to improve shortcut management logic and
remove unnecessary type check for value in DefaultHttpClientBinderRegistry . java to simplify the code and improve readability
removed case for the home identifier in DetailFragment . java to simplify the code by eliminating unnecessary navigation logic
added a check for the presence of a Android market in the PlayServices condition to ensure that the PlayServices feature is only included when there is
refactor cellStart and cellEnd logic in TableBlockParser . java to improve handling of whitespace and zero - length headers to ensure proper rendering
added support for bridging headers in NewNativeTargetProjectMutator , AbstractAppleNativeTargetBuilder , and related classes to enhance the functionality
refactor PotentiallyDeadCode . java to use a HashSet for unused methods and update source path handling to improve code clarity and maintainability
added diamond detection functionality and improved warning logging for redundant types to enhance type safety and provide clearer diagnostics for redundant types
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` onStartSendRequest ( ) ` in multiple
added debug logging for registering cachemetrics in SolrCacheHolder . java to improve traceability of cachemetrics registration process
added multiple catch blocks to handle AuthenticationException in LdapCtxFactory . java to improve error handling for authentication issues
modify the condition to check for negative values in the float comparison to ensure correct handling of negative values in the float comparison logic
added a local configuration file for " logback . dev . xml " in JoobyMojo . java and Main . java to
added a new class JaasEventCheck to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent events to facilitate event
refactor animation logic in QuickstepTransitionManager to use a collection for managing visible views to improve code readability and maintainability by reducing
updated the equality check in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure consistent behavior
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve type
[ hotfix ] [ log ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : add timeout to modify storage pool command
updated JDBC table parameter keys to use JDBC _ SCHEMA instead of JDBC _ TABLE to ensure consistency in schema naming conventions
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to ensure consistency and accuracy in the SQL
replaced WeakHashMap with Collections . synchronizedMap for schemaTypeCache to improve thread safety and performance of schema retrieval
modified the header handling logic in StaticServerHttpHeadersWriter to handle cases where headers already exist to ensure that headers are not written with the same
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable the test due to files available only from within CMU
added a call to mkdirs ( ) in TestCollector . java to ensure the storage directory exists for testing purposes
added http . setChunkedStreamingMode ( 1024 * 1024 ) to StarTreeJobUtils . java to optimize streaming performance for large data
added new classes BasicSyntaxChecker , MultipleTypeSyntaxCheckerTest , and SingleTypeSyntaxCheckerTest for better type - checking functionality to enhance the
hbase - 25836 update protobuf to v3.20 . 1 ( # 2 )
added a test for bean population with recursive structure and created a new Node class with node properties to ensure that the bean populator correctly handles
added IOException to the getRemoteName method signature to ensure proper error handling during remote name retrieval
added exception handling for IllegalArgumentException in UserAccountManagerImpl and improved HttpClient creation in ClientFactory and ConnectivityServiceImpl to enhance error handling and
updated WebSocketConnection and ExplicitDemandTest classes to improve connection handling and test reliability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enable support for aspect - J mode with protect - pointcut definitions
added hostname verification functionality and a disabled check for hostname verification to enhance security by allowing hostname verification based on system property
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enable the
replaced ` invoke ( ) . joinInternal ( ) ` with ` invokeUrgent ( ) . joinInternal ( ) ` in `
replaced the way joint edges are destroyed in the World class to properly manage the removal of joints from the body to ensure proper resource management
added null checks for filterString in SearchFilter . java and improved return logic in ServerChatRoomQuery . java to enhance code robustness
[ hotfix ] [ test ] move sourcereadertestbase from base to testutils
added a try - catch block to handle potential null pointer exceptions in DocumentsStorageProvider . java to improve error handling and prevent potential NullPointerExceptions
added new interface ` HookDefinition ` and ` JavaHookDefinition ` , and a corresponding test class ` JavaHookTest ` to facilit
refactor the handling of receive buffer bytes by introducing a new method ` flushIfDeadlockRisk ` to improve code readability and
updated the ` setExoOptions ` method to include a ` allowTs ` parameter in the ` setExoOptions ` method to allow
removed the user identifier class from the identifier collection in DMRDecoderState . java to ensure proper handling of user identifiers in the decoder state
added a static INVISIBLE constant and updated the toString method in Color . java , and updated import statements in RailButtonShapes . java to
updated null handling logic in CountAggregationFunction . java and added a new test in NullHandlingIntegrationTest . java to enhance null handling functionality and
added a new property ` deep ` with a value of - 1 in ` InternalTransaction . java ` to initialize the deep state of the transaction
escape the name in XML format before appending it to the buffer to ensure that the name is properly formatted for XML processing
updated directory initialization in PerfRunData , ReutersDocMaker , TrecDocMaker , and Config classes to use a configurable configuration
camel - 14263 : camel - aws2 - ruleset - add option ` ` deprecate ' ' = > ` ` deprecate '
amd64directcallop : use jmp ( int , boolean ) instead of jmp ( int , boolean ) .
added static final constants for MIN _ TIME and MAX _ TIME in TimeRange . java and implemented corresponding unit tests in TestTimeRangeTracker .
refactor BitDocIdSet class to improve code structure to enhance maintainability and readability of the code
refactor connection handling in AbstractTimelineMetricsSink to use a new emitMetricsJson method to improve code readability and maintainability by encapsulating
added a conditional check for MIME _ TYPE _ VIDEO in DetailFragment . java and modified intent creation in GalleryActivity . java to enhance functionality
added a remote check for the world ' s remote state before processing fill logic in BlockTank . java to ensure proper handling of fill behavior
updated CsharpLibrary . java to handle both RuleAnalysisLegacyBuildRuleView and RuleAnalysisLegacyBuildRuleView to ensure proper handling of
of - 251 : add pep support for get and send to other node . jm - 103
added a null check for runtime before validating intrinsicGraph to prevent potential NullPointerExceptions when runtime is not initialized
updated conditional check for ` active . isEmpty ( ) ` in ` MetricTrackingWindmillServerStub . java ` and ` StreamingData
pdfbox - 4892 : update bfsearchCOSobjectkeyoffsets logic , a suggest by valerybokov
added constructors to LwjglAppletApplication for creating a new instance of LwjglAppletApplication to improve application management and ensure proper
update environment variable resolution logic in EnvironmentAndSystemPropertyClientProviderStrategy . java to handle null DockerClientConfig to improve robustness by avoiding null
refactored ` doPostAuthentication ` to handle ` AuthenticationResponse ` and ` AccountStateHandler ` based on ` LdapPasswordPolicyConfiguration `
modified Int2ObjectCache . java file to improve performance and maintainability of the cache implementation
added a private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated its usage in ` LdapUtils ` to allow dynamic
refactor Readable class to improve readability to enhance performance and maintainability of the code
updated the method to use TestSupport . WITH _ FONT in the JsoupNonVisualRegressionTest class to ensure compatibility with font -
updated the menu icon reference in CaptureActivity . java from share _ menu _ item to ic _ menu _ share to ensure the correct icon is
updated JVM version checks and logic in Constants . java to support different Java versions to ensure compatibility with different Java versions including Java 8 and Java 9
added multiple catch blocks for AbstractMethodError and NoSuchMethodError in PoolUtilities . java to improve error handling for non - JDBC 41 compliant drivers
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced Set with ArrayList for managing filtered classes in Enclosed . java to improve performance and performance by using a more efficient list structure
added multiple @ Override annotations in multiple authentication - related classes to ensure proper method overriding and improve code clarity
added two new variables ` png ` , ` jpg ` , and ` gif ` to the ChartProvider class to enhance functionality by allowing dynamic
updated WORKING _ DIRECTORY preference retrieval and refactored file dialog handling in multiple action classes to ensure consistent directory structure and improve file handling consistency
simplified the return statement in ` JavacParser . java ` and added a new class ` ExtraSemiTest . java `
added handling for ' after ' and ' before ' keywords in JpaQueryCreator and User classes , and createdAt field in User class to
refactor Test15FloatJNIArgs class for improved readability to enhance maintainability and clarity of the test cases
refactor version string formatting in the plugin . java file to improve readability and maintainability of version information
nifi - 1744 : fix mockprocesscontext . decrypt ( ) to correctly handle the last character of the encrypted string .
[ java ] prevent reentrant call during callback in archive .
added a null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions when accessing dependencies
increase timeout for sslbytesservertest . java to reduce test execution time
refactor Peer class to improve structure and readability to enhance maintainability and facilitate future development
added getter for IndexSegment and updated method names in RealtimeIndexingCoordinator and StreamProvider classes to improve clarity and consistency in naming conventions
added null check for exportedData before calling writeTo to avoid potential NullPointerException when accessing viewCaptureDataSupplier
refactor popup position calculation by introducing a new method ` getScrollThumbRadius ( ) ` to improve code readability and maintainability by
updated message in BuckWSServerPortUtils and added a method to check if the ToolWindow is instantiated in BuckEventsConsumer to
added a conditional check for Windows platform before creating the preventSleep checkbox to ensure that the preventSleep checkbox is only displayed on non - Windows platforms
updated import statements from javax . servlet . HttpServletRequest to jakarta . servlet . http . HttpServletResponse in HttpConfigurationAuthorityOverrideTest . java
refactor crop handling in QuickstepAppTransitionManagerImpl and FloatingIconView to improve layout handling based on vertical bar layout to ensure correct
added support for full - screen exclusive mode in XWindow and XWindowPeer classes to enhance user experience by allowing more flexible full - screen
fix stringutil . playeddurationstr ( string ) , add unit test
added credential management functionality to DagUtils and updated TezTask to handle MapWork and ReduceWork types to enhance security by ensuring credentials are
( chore ) camel - maven - plugin : use map . entryset ( ) instead of keyset ( )
trim whitespace from the last name retrieved from the array in SessionState . java to ensure consistent handling of thread names by removing leading and trailing spaces
updated the error message from " Not yet " to " Not yet " in GpsMainActivity . java to clarify the reason for
[ hotfix ] fix checkstyle violation in job . java
added a new abstract class ` Unused ` and a test method to verify the use of ` AutoValue _ Main _ Unused ` to
ambari - 20611 . add hbase _ master _ host to cluster info key for dummy heartbeat ( dlysnichenko
deleted EventReaderDeserializer and EventWriterSerializer interfaces to remove unused components to streamline the codebase
changed the return type of the performJoin method from GenericRecord to List < GenericRecord > and updated related logic in JoinPhaseJob and Map
updated MAX _ DELEGATE _ LOCK _ PERIOD validation and modified related logic in ProposalUtil , CommonParameter , and WalletTest classes to
changed the data type of ` networkRateMbps ` and ` networkRate ` from ` int ` to ` Integer ` in multiple files
camel - 14263 : camel - cmc - remove unused constructor and method that be no longer need .
added a check for the seed . node . ip . list in GossipLocalNode . java and updated configuration file names in Constant . java to
add system property ` ` hazelcast . client . tpc . enabled ' ' to disable tpc client
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple admin api application classes to ensure compatibility
modified the division logic in MutableBigInteger and added a new ModInvTime class for computing modular inverse calculations to improve accuracy of division operations and
refactor the handling of the buffer in NamedObjectList . java to create a key based on the presence of the name to improve clarity and
updated cleanup methods to use cleanupEmptyTableDir instead of cleanupEmptyDir for improved clarity to enhance code readability and maintainability by
refactor AsyncCache and Cache classes to improve cache management to enhance performance and maintainability of cache operations
added import for RCFileInputFormat and registered it in SerializationUtilities . java to facilitate the registration of RCFileInputFormat in
added methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for retrieving Java types and categories to enhance type mapping capabilities for
added error handling for invalid host headers in the Request class and implemented a corresponding test in RequestTest to improve robustness by ensuring invalid host headers
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for different SDK versions to enhance compatibility with Robolectric SDK versions and
removed the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods from the ` StandardOp ` class to streamline the code by elim
refactor SegmentCoreReaders to use a private directory variable for clarity and streamline directory assignment to improve code readability and maintainability by
added a new method ` hasMainThreadProfile ` to ` AggregateDao ` , ` AggregateRepository ` , ` TransactionCommonService ` , and
added a validation check to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi absent or set to
updated the constant name from " greekLowerCase " to " greekLowercase " and " uaX29UrlEmail " in
refactor HSSFSheet and Sheet classes for improved code organization to enhance maintainability and readability of the code
( scott phillips ) change lucenesearchrequestprocessor to discoverysearchrequestprocessor since dspace 4.0
added a list to remove specific locales from the BasicDateTime class and updated ids array to ensure consistent data handling by removing specific locales from the array
updated the instantiation of SurfaceSyncGroup to include a unique identifier " TaskBarController " to enhance clarity and specificity of the sync group
updated GridFsTemplate and GridFsIntegrationTests to remove unnecessary ObjectId casting and improve code clarity to enhance code readability and maintainability by
added unit tests for querying total size and byteSoFar in ShadowDownloadManagerTest and implemented related methods in ShadowDownloadManager to ensure accurate retrieval of
refactor enter handling in TextField to use a boolean variable for clarity to improve code readability and maintainability by reducing redundancy
added a null check for the ' this ' and ' target ' in GroupNodeViewModel . java to prevent potential NullPointerExceptions when the '
refactor afterSetStatements method in Lower . java and BlockLexicalContext . java to improve statement handling logic to enhance code clarity and
added hashCode method to IntervalXYDelegate and updated comparison logic in XYSeriesCollection to ensure consistent hash code generation and improve data comparison accuracy
added cleanup method to the ClientQueueDisruptionTest class and refactored initialization and shutdown logic to improve resource management and ensure proper cleanup of
refactor code formatting and improve readability in CloudWatchAppender . java and CasPersonDirectoryConfiguration . java to enhance code clarity and maintainability
replaced ` serializeSpecialDoubleValues ( ) ` method with ` serializeSpecialFloatingPointValues ( ) ` in ` Gson . java ` to
added multiple calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock `
added checks for non - empty subtags and privateuses in Locale . java and modified language tag handling in LanguageTag . java to improve language
kvm : allow kvm . ssh . to . agent to be disable by default
[ hotfix ] [ test ] fix checkstyle violation in schedulerwhen . java
removed import of PagerSlidingTabStrip from EmojiKeyboard . java to simplify dependencies and improve code clarity
added a condition to exclude a specific string " - " in the filter condition to ensure that only valid strings are processed in the filter
updated sort column label text from " natural order " to " Natural column order " in BrowserContentPane . java and refactored
removed the use of Arrays . copyOf ( in , 6 ) in Utils . java to simplify the code by eliminating unnecessary array copying
updated the ` write ` method to use ` htmlEncodeButNotSpace ( remoteAddr ) ` to ensure that the remote address is properly encoded and
updated the topic path check from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to ensure the
removed unnecessary synchronized blocks in FastHttpDateFormat . java to improve performance by reducing unnecessary synchronization overhead
added thread management for file moving operations in Hive to improve responsiveness and error handling during file moving operations
added a new ` trigger ` method to ` WrapTimer ` that accepts a period as a parameter in the ` trigger ` method to enable scheduling
added support for " LOCAL _ DATE " , " SQL _ TIME " , and " LOCAL _ DATE _ TIME " in TypeInfoUtils to
added a verbose error logging option to the error setting in AbstractStatusReporter to enhance error reporting flexibility based on user - defined options
added menu toggle functionality based on application state in Header and ItemControls classes to enhance user interaction by allowing toggling of the menu based on
s2s vpn : do n ' t allow vpn connection to be connect between different account / gateway
updated error handling logic in CursorReadingTask and added unit tests for error handling in CursorReadingTaskUnitTests to improve error handling consistency and ensure
pdfbox - 4892 : do n ' t create / extract thumbnail for encrypted pdfs
( chore ) camel - curator : fix zk client get children error
rename AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve clarity and consistency in naming conventions
updated URI handling in HostsList . java to use ' id ' instead of selected item ID to ensure the correct URI is used for deletion operations
updated assertions in Java6Assertions and Conditions classes to improve code clarity and maintainability
changed the parameter type of the replaceOrderBulk method from Collection to List < BitmexPrivateOrder > and updated related method calls to improve
renamed the method ` enterDefault ` to ` enterIdentNode ` and added an overridden method ` enterFunctionNode ` in ` Lower .
added a new file J9ConstantHelper . java and modified ObjectHash . java to include a method to retrieve a long value from a static
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification exceptions in multi - threaded scenarios to
of - 251 : notify all roster item when remove a user from the roster .
hive - 11346 : partitiondesc . getproperties ( ) should return overlayed table property instead of get property ( gopal v
reformatted the ` loadHandle ` method call in ` FunctionObjectCreator . java ` for consistency to improve code readability and maintainability
added null check for ` src . extTypeCustomDesers ` before initializing ` extTypeCustomDesers ` in ` MessagePackFactory `
set the " mockserver . logLevel " system property to " WARN " to provide a warning log level for the mock server execution
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code
replaced scoreMap with termScoreMap for better clarity and consistency to improve code readability and maintainability by using more descriptive names
updated comparison logic in U64 . java to use ` < ` instead of ` & 0x8000000000000000L ` to ensure correctness
added headline styling options for the MainViewModel to improve the visual appearance of the MainViewModel
added a boolean variable ` didSupportDarkText ` and modified the condition for notifying change notifications to ensure consistent behavior based on support for
[ hotfix ] [ checkpointing ] fix non - forced enqueuing of checkpoint trigger
updated MAX _ POOL _ SIZE and changed KEEP _ ALIVE _ TIME _ MILLISECONDS to KEEP _ ALIVE _ TIME
updated the filtering logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use anyMatch instead of filter to improve clarity and accuracy in
added test requirements for non - Windows and non - Arm containers in OpenCVImageFactoryTest to ensure compatibility with non - Windows and Ar
http : / / issues . apache . org / jira / browse / amq - 4748 - allow configuration of prefetch and stream
updated the ` getReturnValue ` method to throw ` Throwable ` instead of null and modified exception handling logic to improve error handling and provide clearer
added a @ Repeatable annotation to the Issue class and a @ Retention annotation to indicate that the Issue class is marked as repeatable and
updated user property keys from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest
refactor socket connection logic to use a dynamic address based on the socksProxyHost property to improve flexibility by allowing dynamic connection to the
[ hotfix ] fix checkstyle violation in slotstatus
removed the import of org . apache . commons . lang3 . ClassUtils from ReflectionUtils . java to eliminate unnecessary dependencies and improve code clarity
replaced HashSet with LinkedHashSet for protocols and ciphers in SslContextFactory to maintain insertion order while maintaining predictable iteration order
added a static variable ` systemResource ` and a condition to return it if the resource equals ` Resources . systemResourceLocation ` to improve resource
added a constant for the size of the plaintextSegment in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel classes to
added a test for circuit breaker invalid fallback in ServerMvcIntegrationTests . java to ensure that the circuit breaker throws an exception for invalid
added SSLConnectionSocketFactory and SSLContexts to the CloseableHttpClient client configuration to enhance security by enforcing all hostname verification for HTTP connections
added a size limit of 0x7FFFFFFF and removed the resetBytesReadCounter method call to ensure the input stream does not exceed the
removed the ` preferAES ` boolean field from ` ProtectionPolicy ` and its associated getter and setter methods from ` StandardProtectionPolicy ` to
( chore ) camel - telemetry : use logger instead of system . out .
no effective change - remove unused test
corrected the spelling of " setAlarm " to " setRingtone " in the AlarmReceiver class to ensure consistency and accuracy
added error handling for file creation in DiacriticTest . java to improve robustness by logging an error when the file system is configured
hhh - 14850 - fix exception when use oracle 11 driver other than ojdbc6
added error handling for file retrieval and improved file path checks in TextureUnpacker . java to ensure robustness by throwing a RuntimeException when the
added cluster write lock and refactored service state handling in AmbariManagementControllerImpl . java to ensure thread safety during concurrent access to
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the ResultSet does not close the Statement correctly to ensure proper resource management and prevent potential memory leaks during database operations
refactor InputStreamBodyGenerator and ChunkingTest to streamline input stream handling and improve test coverage to enhance code clarity and maintainability while
added logic to remove pre - deleted databases from the response schema map to ensure that schemas that are marked as pre - deleted are properly removed from
removed the " chunkedWriter " from the pipeline in Http1xUpgradeToH2CHandler . java to simplify the resource writing process and
added a delete item confirmation dialog and modified item deletion logic in EnhancedBrowseFragment and FullDetailsFragment to enhance user experience by allowing users to
refactor CSS rule handling by introducing RuleBank interface and modifying RuleFinder methods to improve code organization and facilitate rule management in
added error handling for AES encryption in JcaTlsCrypto . java to improve robustness by catching potential exceptions during encryption
added new files TestMonomorphicObjectCall . java and Object . java , and modified Object . java to include native methods for object final
replaced the ` removeMetaDataSource ` method with a ` toFront ( ) ` method in ` DataBrowser . java ` and ` Des
hbase - 25836 fix npe in defaultmemstore . shouldseek ( scan , store )
[ hotfix ] [ runtime ] make localstate _ sub _ directory _ root and localstate _ sub _ directory _ root configurable
modified the constructor of ` AlterTimeSeriesStatement ` to accept a boolean indicating whether the alter view should be applied or not to enhance flexibility
update regex matching logic in Condition . java and add a new test class MatchTextConditionTest . java to improve regex matching accuracy and ensure correct
added a try - catch block to handle potential exceptions when retrieving RoutingTableBuilder to improve robustness by preventing application crashes due to potential
replaced ` paramMap . putAll ( ( Map ) body ) ` with ` paramMap . putIfAbsent ( k , v ) ` and added
( chore ) camel - jms : use char [ ] instead of string for password
server : fix search for domain by path and recursive search
removed the ` toSortedListWithCounts ` method and updated equality checks in the ` Counter ` class to simplify the code by eliminating
updated the ` initialize ` method to accept a ` SimulationStatus ` object and added warnings to the ` BasicTumbleStatus ` to
sulong : transfer to interpreter before get current time
refactor variable reference handling in PrettyPrinter . java to improve clarity and maintainability to enhance code readability by using a more descriptive
refactor LRUDictionary to initialize indexToNode only if it is null to improve memory management and prevent potential NullPointerExceptions
refactored filtering logic in DatagramSocket and DatagramChannelImpl to use a dedicated checkFiltering method to improve code clarity and ensure
updated JUnit imports and annotations in TestQueryDNS . java to use Jupiter API to enhance compatibility and modernize the testing framework
added a new class NutchServerInfo with properties for startDate , configuration , jobs , and runningJobs to provide a structured way to retrieve
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter . java to streamline token attribute handling and improve code
added a timestamp option to the SettingsColumn and updated CqlInserter and ThriftInserter to use it to ensure all columns are
updated DSAParameterGenerator to use BigInteger . valueOf ( ) instead of BigInteger . valueOf ( ) for setting valueN and primeCertainty
updated NumberUtils and Numbers classes to utilize Float64ArrayNative for double and integer conversion to improve precision in handling double values and enhance
updated the masking condition in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and
added handling for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to improve error handling for constraint violations during database operations
( chore ) camel - remoting - consumer : fixed typo in method parameter name
added ` addTab ` and ` insertTab ` methods to the ` Tabs ` class and refactored ` createTab ` methods to
replaced size ( ) - based arrays with zero - based arrays in multiple classes to ensure consistent array handling across the codebase
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment
simplified return statements in MavenVisitor . java for better readability to improve code clarity and maintainability
updated mock names in ZookeeperDataChangedListenerTest from " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE " and
added a new file FormatCheckingTest . java to test Java class name format errors to ensure that the application correctly identifies and reports illegal class names
updated line number handling in CodeGenerator . java to ensure accurate line number assignment for method invocation
added a try - catch block around the retrieval of configurable configuration to handle potential exceptions during configuration retrieval
added methods to create a toggle on a RadioButton in the ButtonGroup to enhance functionality for managing radio buttons with command information
updated the initialization of the cache in LRUCache and modified the CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl
int - 1188 , int - 1188 , int - 1188 , int - 1188 , int - 118
add null check for symbolicName before quoting it in OsgiManagementNameStrategy . java to avoid potential NullPointerException when symbolicName is null
update log message format to use % s instead of { 0 } in Base . java and add mode loading in ModeContribution . java to
[ hotfix ] [ yarn ] add more logging to yarnsessionfifoitcase . java and wait for two container to start
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner . java ` to improve clarity and consistency in
added null check for notPropagatedHeaders and updated selective header propagation logic in AbstractMessageProducingHandler to improve robustness by preventing
updated CompareMode class to improve comparison logic to enhance performance and reliability of comparison operations
added HasTests interface to Arg class and implemented getTests method in RustBinaryDescription and RustLibraryDescription to enhance the class ' s
updated placeholder and error resource names from ` ic _ recent _ image _ 120dp ` to ` ic _ recent _ image _ placeholder ` to
modified OnExitTest . java file to improve test coverage and error handling
added onUserPreferenceChanged method to TaskbarManager to recreate the taskbar when user preferences change
added reflection - based heap dumping functionality based on Ibm VM type to enhance compatibility with different JVM versions during heap dumping
camel - 13850 : camel - mybatis - make sure to close the session in case of exception
danielwagnerhall : add function to switch to window and quit in ie instead of firefox
updated JDK and Java version from JDK 5 to Java 5 and modified trigger patterns in IteratorToFor . java to ensure compatibility with Java 5 and
set application state to STATE _ UNAVAILABLE in JmxApplicationProvider to ensure proper application state management during unavailability
updated position and remaining calculations in ByteBuffer , Direct , Heap , StringCharBuffer , and StringCharBuffer classes to improve accuracy of position and limit
replaced ` toUri ( ) . toString ( ) . split ( Path . SEPARATOR ) ` with ` toString ( ) . split ( Path
modified array deletion logic and added setEmpty methods across multiple array data classes to ensure proper handling of empty values and improve array manipulation logic
changed enums from enum to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
updated document addition logic in TestMultiPhraseQuery . java to use a new document for improved clarity to enhance code readability and maintain
payment : do n ' t assign offline tickets for pending ticket reservation
added onTimeout thread handling and improved synchronization in HttpChannelState . java to ensure proper handling of timeout events and prevent potential race conditions
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , ServerTimeoutsTest , and ServerTimeoutsTest to
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
change the consistency level of the read operation from LOCAL _ SERIAL to LOCAL _ QUORUM based on the type of consistencyForPax
added a check for " Home " model names in the discovery logic and modified player ID handling in HeosPlayerHandler to ensure proper handling of
added a new ` Wait ` class and updated ` PlainSelect ` to include it with getter and setter methods to enhance the SQL parser ' s
refactor Neo4j to use AttributeController for node and edge table attributes to improve code clarity and maintainability by centralizing property
added a null check for serverName before comparing it with its domain to avoid potential NullPointerExceptions during domain comparison
nifi - 1748 : move rocksdbflowfilerepository class to nifi - controller - repository instead of nifi - rocksdb
updated the method for reading the " IS _ GRANTABLE " boolean value from results to improve code readability and maintainability by using a
added logging statements and modified URL validation logic in JavascriptContext . java to improve debugging and ensure only valid URLs are processed
camel - 14284 : camel - cxf - make it possible to run camel - mtom on macos
added a check for a new column descriptor before modifying it in LoadTestTool . java to ensure that the modified column is only added when it
added the ` Disposable ` interface to the ` Texture ` class in the ` Texture ` class to implement the ` Disposable ` interface for
updated WebappRegistrationCustomizerImpl to handle null tldBundleLocation and added WebBundleDeployerHelper for improved functionality to enhance robustness
refactor ` checkGoQuorumCompatibilityMode ` to ` checkGoQuorumGenesisConfig ` and introduce a new method ` checkGoQuorum
replace IOException with Throwable in HttpInput . java to improve error handling by utilizing the error state directly
added a condition to skip Thailand as it appears the JVM is now a day out on the " JP " country in LocaleTest
updated API interface names from Wrapper to HostResponseWrapper across multiple services to improve consistency and clarity in response handling
added boost comparison in FilteredQuery . java to ensure correct comparison based on boost values
reformatted the constructor of FileMenuFilter for consistency to improve code readability and maintainability
[ web ] texteditadvancedpanel now show symbol table if debug flag be set to true .
added a new file TestCMSClassUnloadingDisabledHWM . java to test the CMS class unloading behavior to ensure that the CMS class
added a check for non - empty entities before creating a new ItemTossEvent to avoid NullPointerExceptions when processing events without entities
updated ` KeyMappingPreparedStatementSetter ` and ` PreparedStatementSetterKeyWrapper ` to ` ItemPreparedStatementSetter ` and ` ItemPreparedStatementSetter ` across multiple
replaced Range with AbstractBounds for sstables in CompactionsTest . java to improve code clarity and maintainability by using IdentityQuery
added a null check for the ' type ' attribute in the MiniAapt class and implemented a corresponding test case in MiniAaptTest to
added support for the " SpEL " operator in the OperatorEnum and created a new SpELJudge class to enhance condition processing capabilities by
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in localexecutionplanner
bugfix # 20529 , use java . awt . eventqueue instead of javax . swing . service
updated various socket and verifier classes for consistency and clarity to improve code maintainability and readability across the Conscrypt module
removed redundant attribute resolution checks in AttributeResolution9 . java to simplify code and improve readability by eliminating unnecessary warnings
updated the source and target values in fullOptions from " 1.5 " to " 6 " to ensure compatibility with the new versioning requirements
[ calcite - 2287 ] push project into table source scan only when there be metadata column
added sorting functionality for localized names in AboutActivity to improve user interface by displaying only canonical and localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before posting a delayed action in HomeFragment to ensure proper refresh behavior based on user settings for live streaming
updated exception handling in AuditConfiguration . java to include the original exception as a parameter to improve error reporting by including the original exception context
( chore ) camel - core : fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type parameters in CompositeType and DynamicCompositeType instances to use wildcard generics to enhance type safety and prevent potential type safety issues
added support for a transport in GitClientApplication and refactored repository URL handling in RepositoryUrlPanel to enhance transport support functionality and improve code
added delegation name logging for various input consumers in TouchInteractionService and related classes to improve clarity and usability of gesture handling in the application
added null check for mavenMetadata and modified version comparison logic in ChangeParentPom . java to improve robustness by handling potential null values and
added a check for the " Large Page Support " output in TestLargePageUseForHeap . java to ensure that the application does not
upgrade 218 to 22 : do n ' t migrate event if the cloud _ usage db do n ' t exist
added IOException handling and modified test parameters in BrokerXmlConfigStartTest . java to improve error handling and ensure proper directory path formatting for Windows environments
added a new test class ` TestObjectStreamClass ` for serialization and deserialization of ` ObjectStreamClass ` to facilitate testing of
refactor condition checks in ZoneAwareDiscoveryFilter to simplify null checks to improve code readability and maintainability
change error log level from error to warn in OpenTracingTracer . java to improve logging detail for better troubleshooting
added a ` toString ( ) ` method to the ` Generator ` class that returns the number of registered generators to provide a readable string representation of
refactor URI handling to initialize ` dontquote ` to improve clarity and maintainability of the code to enhance readability and maintainability of
added a null and empty check for resources in ClusterControllerImpl and implemented a new test for NoSuchResourceException in ClusterControllerImplTest to ensure that
refactor AccepttoApiUtils to handle null API responses gracefully and improve logging to enhance error handling and provide clearer feedback when the response is
removed conditional logic for initializing ByteBuffer and isDirect in VertexBufferObject . java to simplify memory allocation logic for Android versions prior to version 5
refactor SybaseASADatabase class for improved readability to enhance maintainability and clarity of the code
added a ` forceProjection ` boolean to the ` HashJoinInfo ` constructor and updated related methods to ensure backward compatibility with old versions of the
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class that returns the string distance to provide access to the `
added FLAG _ MUTABLE and FLAG _ IMMUTABLE flags to AndroidImplementation . java and modified the createMutablePendingIntent method to
added methods to append read column IDs to the configuration in HiveFileFormatUtils . java and updated the method in HiveInputFormat . java to
updated the method ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper .
added multiple ` DisplayTemporaryToast ( ) ` calls to ` SavedExperiments . java ` to display a temporary toast message to
added a check to set the service version if it is null in ServiceModule . java and a corresponding test in ServiceModuleTest . java to
added a new test class RawSerializationTest for Gson serialization tests to ensure correct handling of collection of primitive , object , and parameterized object types in
rename ` SeleniumServer ` to ` SslCertificateGenerator ` and add a new interface ` SslCertificateGenerator ` to enhance SSL certificate generation functionality
refactor loop to iterate through replies instead of using a for - each loop to improve readability and maintainability of the code
increased the timeout duration for the ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource access exceptions to
add a new test method ` testNGramFilterPayload ` to the ` TestNGramFilters ` class to ensure that the ` NG
refactor AclImpl class to improve code structure to enhance maintainability and readability of the code
added tests to verify that different arrays of different sizes are generated in ` EasyRandom ` to ensure correctness of the ` EasyRandom ` implementation
bug 10699 : fix npe in stop and re - start vm
added a ThreadLocal < Boolean > to manage the tryWriteAgain state of SSL connection to ensure proper handling of write completion in a concurrent environment
added a method to check visibility of ancestors in the Actor class to enhance functionality by allowing visibility checks for actors
added logging for failed rolling update steps in RollingUpdateOpFactory . java to improve visibility into deployment group failures during rolling updates
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
added a new event class ` AuthenticationFailureUsernameNotFoundEvent ` and modified ` DaoAuthenticationProvider ` to handle ` BadCredentialsException ` to
updated AtMostXVerificationTest . java file to improve test coverage and ensure compatibility with recent changes
updated default Q type handling in QueryComponent and QParserPlugin classes to use LuceneQParserPlugin . NAME instead of " lucene "
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent formatting across different locales
added ` isInitialized ( ) ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new `
updated the ` ClientAPITokenIntegrationTest ` to use ` shouldHaveIdToken ` instead of ` idToken ` and modified related tests to
added beginTransaction and setTransactionSuccessful methods to DatabaseAdapter and modified transaction handling in GncXmlHandler to improve transaction management and ensure proper root account
replaced byte array handling with ByteArrayOutputStream for better memory management to improve performance and reduce memory usage during data processing
added multiple ` @ Override ` annotations and refactored exception message handling logic in ` MessagingTemplate . java ` to improve code readability and
added an ` isAcceptable ` method to ` AutoFormatVisitor ` class to check if the source file is an instance of ` J .
added configuration parameters for maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy . java to improve performance by limiting the buffer size
added a test method ` updateWits ( ) ` to validate the updates of witnesses in the database to ensure that the witness data is
added exception handling around the iterator ' s next ( ) method in CopyOnWriteMap . java to improve robustness by ensuring numToEvict
flume : use log . info instead of log . log ( level , string )
refactor BasicAuthIntegrationTest and DaemonStream classes to improve authentication metrics and thread management to enhance test reliability and maintainability while ensuring proper
changed the type of the nodes variable from HashMap to LinkedHashMap to maintain the insertion order of the nodes list
added InternalErrorMapper to JerseySupport and implemented it in JerseySupportTest to handle InternalError exceptions to improve error
refactor header validation logic in Http2TestBase . java to use a dedicated method to improve code readability and maintainability by reducing
added a switch - case structure for system properties in System . java to ensure proper handling of specific system properties based on Java specifications
changed method parameters from String to CharSequence in StringSubject . java and added corresponding test cases in StringTest . java to allow for more flexible
add miss entry for jfr / internal / JVM . counterTime ( ) and jdk / jfr / internal / JVM . getClassId
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated DataSource initialization in PersistenceManagerProvider . java to use a new datasource based on the forCompactor flag to ensure proper connection factory is used
refactor DeploymentOptions class for improved clarity to enhance maintainability and readability of the code
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable ` directly instead of ` Drawable . ConstantState ` to simplify the method
replaced InputStream with a try - with - resources statement in XmlParser and YamlParser to ensure proper resource management and avoid potential memory leaks
added support for the COALESCE function in RexNodeConverter and registered it in SqlFunctionConverter to enhance functionality for coalesc
camel - 16400 : fix camel - hl7 - unmarshal unit test for camel - core
updated JavassistProxyFactoryFactory to use the current context class loader and modified exception handling to ensure proper context class loader management and improve
changed constructors and synchronized modifiers in DefaultDateTypeAdapter to use ' final ' keyword for consistency to improve code clarity and ensure immutability
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI setting and query handling to improve code readability and maintainability by reducing redundancy
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to optimize the efficiency of filtering old entries based on existing entries
change log level from fatal to warn in FSHLog . java to improve log clarity by using a more appropriate log level
replaced the implementation of the ` getValues ` method in ` NodeMap ` with a new ` NodeMapIterable ` class and added a forward
updated the import statements and modified the predicate definition in DiscoveryClientRouteDefinitionLocator . java to correct the imports and ensure the correct predicate is applied
added a check for non - empty fields before processing operations in MongoRecordReader and modified return logic in RexToMongoTranslator to ensure operations
added a check to ensure the admin list is not empty before adding it to the list to ensure that the admin list is only added if it
replaced MultiFields usage with SolrIndexSearcher for term retrieval in IGainTermsQParserPlugin and SignificantTermsQParserPlugin to
replace bean . toString ( ) with ObjectHelper . className ( bean ) and ObjectHelper . getIdentityHashCode ( bean ) to improve clarity of
refactor GroovyParserVisitor to check for null PrimitiveType before returning its name to improve code clarity and prevent potential NullPointerExceptions
svm : remove unintended @ uninterruptible hashcode from java . lang . string substitution
increase timeout for seda blocking test from 100ms to 200ms to improve test reliability by allowing more time for the offer to become
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level
refactor read length calculation in MessageUnpacker . java to improve clarity and maintainability of the code
updated import statements from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core
added a user condition to the IconDB query in IconCache . java to ensure the IconDB query reflects the current user ' s serial
http : / / issues . apache . org / jira / browse / amq - 4398 - fix back - pressure for async
added a new boolean parameter ` isClassfileOnly ` to the ` addWhitelistedResource ` method across multiple classes to include a conditional check for
added a method to fix baremetal foreign key relationships in Upgrade410to420 . java to ensure proper foreign key management for external
removed the IJava2DRenderer interface and its implementation from the Java2DRenderer class to simplify the codebase by eliminating unnecessary interface
added onTearDown method to DefaultAudioSink for handling offloading buffer emptying to ensure proper cleanup of offloading buffer state when the
refactor UpstreamCacheManager to use ScheduledThreadPoolExecutor for scheduling upstream tasks to improve performance and control over the execution of upstream tasks
[ hotfix ] [ doc ] fix typo in streamtype javadoc
updated assertion message in Recording . java to include an additional context to improve clarity of assertion failure messages for better debugging
updated FilestorePage and RootPage to include admin role checks and improved message formatting to enhance security by restricting access to the fil
( chore ) camel - elasticsearch : disable the rest test
added a check for the declaringClass before processing the Lifecycle method in the accept method to ensure that the accept method operates correctly within the Lifecycle
updated button text resources for " buy " , " sell " , and " sellWithFiat " in OfferBookChartView
camel - 14284 : camel - restlet - add support for match on uri prefix . thanks to benjamin for
add miss nullable parameter to createnextblock ( ) and createnextblockwithcoinbase ( ) .
removed Serializable interface from BTreeMapJava and added a new serialCloneNoCatch method in ConcurrentSkipListMapTest to simplify serialization handling and
added null check for cause before logging error messages in RuleEngineImpl . java to avoid potential NullPointerException when logging errors during startup
refactor conditional logic in Main . java for improved readability to enhance code clarity and maintainability
updated the method call from ` mFilesAll . indexOf ( file ) ` to ` mFiles . indexOf ( file ) ` to improve consistency
deleted PlainVerifier . java and updated DefaultJwtSigningAndValidationService . java to remove unused code to streamline the codebase
added a condition to close system windows when the Alt Tab event is triggered to improve user experience by ensuring proper window closure when the Alt Tab event
refactor dialog handling in DialogFragmentIT and update bottom sheet behavior handling in OCFileListBottomSheetDialog to improve code clarity and ensure
updated bodyCharset initialization to include UTF - 8 encoding in RestAdapter . java and added a suppression in MimeUtilTest . java to ensure
added a call to super . deinitialize ( ) in the TextField class to ensure proper resource management and prevent potential memory leaks
refactor LogFormatTest to use TestUtilities for serialization to improve code clarity and maintainability by centralizing serialization logic
updated previous clause parsing to use previousUntilLastClause instead of previousClause in LogicalGenerator . java and modified fill initialization in GroupByFillDataSet
added checks for negative array size and improved readability in JAXWSExceptionBase . java to ensure proper exception handling for negative array sizes and
test : migrate ctunresolvedimporttest from junit 5 to junit 5 ( # 4358 )
increased the join duration from 10 seconds to 60 seconds to allow for more time for thread execution to complete
[ hotfix ] [ test ] change default scheduling strategy from legacy to region
added title management methods to ShadowActivity , ShadowAlertDialog , ShadowDialog , and ShadowTextView classes with i18nSafe attribute to enhance
updated logging implementation in POIFSFileSystem to use POILogFactory and POILogger instead of Commons Logging to improve logging consistency and
refactor alarm handling in InstarHandler to use alarm code and object codes instead of alarm strings to improve clarity and consistency in handling alarm
added latency tracking for map deletion in MapDeleteMessageTask . java and a corresponding test in LocalMapStatsTest . java to enhance performance tracking
refactor status handling in Response . java to use a switch statement to improve code readability and maintainability by using a switch statement
refactor the way the javac location is retrieved in CheckResourceKeys . java to improve clarity and maintainability of the code by ensuring
make the project name optional for stable channel ( # 1193 )
added a new test class ` DeprecatedStubbingTest ` to verify stubbing behavior with default behavior to ensure that the stubbing functionality behaves
replaced org . eclipse . jetty . server . DispatcherType with javax . servlet . DispatcherType in ITBraveServletFilter
added support for " NML " and " NX " annotations in the EnglishGrammaticalRelations class and updated related test cases to enhance
add a system property ` ` org . bouncycastle . jsse . fips . allowrsaKeyExchange ' ' to enable
replaced the variable ` output _ reader ` with ` reader ` and added a call to ` reader . close ( ) ` in multiple files
added OAuthFactory and deleteOAuthServiceAndAccessToken methods to PubSubAPI and SDMAPI classes and implemented removal handling in SDMAccountHandler to
updated the interpolator used in TaskbarEduView from AGGRESSIVE _ EASE to EMPHASIZED to improve
added handling for UpdateRegionLocation in ConfigPhysicalPlan and improved logging messages in ProcedureManager and RegionMigrateProcedure to enhance region migration functionality and
added a new file ` FileDialogLeakTest . java ` that implements a finalization test using CountDownLatch to demonstrate
hbase - 25836 addendum add test for open table in coprocessor ( chaoyu tang )
trufflefeature : do n ' t use @ uninterruptible annotation for implementation method .
[ hotfix ] [ protobuf ] remove unused split method in protobuf serialization / deserialization
updated the condition to check if ` dims [ 1 ] . disi ` is not null in ` DrillSidewaysScorer . java
updated media source methods to use a blocking timeline change assertion and added a Handler for source info refreshing to improve responsiveness and ensure proper
added support for Java 9 specification version checks in Constants . java and updated conditional check in Helper . java to ensure compatibility with Java 9 and improve
updated FileReporterTest to cast null values to String and File types to improve type safety and prevent potential NullPointerExceptions
changed the condition for checking end - to - end encryption keys from false to true to enable encryption functionality based on the presence of end - to
added navigation functionality to the action bar in DirectMessageConversation to enhance user experience by allowing back navigation when the home button is pressed
added a new GET _ USER request parameter to the RpcConstants and updated the protocol version from 5 to 6 to enhance user access control and ensure
added a condition to check if the operating system is AMD64 or x86 _ 64 in TestJdbcPluginWithMSSQL . java
replaced the use of ` startClass ` with a local variable ` originalStartClass ` in the ` notFound ` method call to improve code
updated exception messages and added local creation for parameter registers in DexBody . java to improve clarity of exception messages and ensure correct local handling
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
fix nimbus look and feel when switch to common look and feel
updated regex pattern for version formatting in AppPage . java to ensure consistent formatting of version strings
refactor animation listeners in LauncherAppTransitionManagerImpl to use local variables for alpha and translation to improve code readability and maintainability by
dumpedprivatekey : fix typo in error message
updated offerPayload to newOfferPayload in EditOfferDataModel . java to ensure correct handling of new offer payloads
updated milestoneParameters initialization to conditionally use new
updated the battery size from 640 to 80 in PipeItemsWood . java to align the battery with the new size requirements for
updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` and ` blueprintRev ` parameters in the ` getClusterKey ` method
set default value of downgradeAllowed to true in UpgradePack . java and add a test for it in UpgradePackTest . java to ensure
updated method calls in XML11NSDocumentScannerImpl and XMLDTDScannerImpl to use ELEMENTSTART and ATTRIBUTENAME instead of ATTRIBUTE to
added a configuration option to emulate system library loading based on the emulateSystemLoadLibrary flag to enhance flexibility in loading native libraries based
refactor comparators from ` APP _ NAME _ COMPARATOR ` to ` getAppNameComparator ( ) ` in ` LauncherModel ` to
refactored output stream handling in DefaultPlatformManager and added directory creation in FatJarStarter to ensure proper resource management and ensure the
reformatted the ` doTest ` method and added detailed assertions in the ` TestSecretKeyCredentialHandler . java ` to improve code readability and
camel - 14263 : camel - core - optimize routebuilderfinder to use spring camelcontext . getinjector ( ) instead of reflection
updated descriptions in MetricOptions . java for clarity and consistency to improve readability and maintainability of the code
hbase - 25836 make testfulllogreconstruction more resilient to hbase - 25836
added reuseAddress property and its setter methods to DatagramSocketOptions class to allow configurable address reuse behavior for DatagramSocket options
refactor server shutdown message handling in GlowServer and ServerConfig classes to improve code readability and maintainability by using a dedicated method for
douniaberrada : remove deprecate interface from internal . interactions . locatable
updated error messages in VersionInfo . java to clarify field requirements to improve clarity and accuracy of error messages for better debugging
refactor equalityPredicateColumns to predicateColumns for consistency and clarity to improve code readability and maintainability by using a more descriptive variable
refactor the initialization of the channel in HelloMessage . java and HandshakeHandler . java to improve code readability and maintainability
updated formatting of closing braces in Navigator . java to improve code readability and maintain consistency
updated visibility of constants in RecordReaderFactory . java and added a new test class RecordReaderFactoryTest . java to enhance encapsulation and ensure
added comparison logic for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator and corresponding unit tests in MongoQuery
[ multistage ] [ table - planner - blink ] do n ' t allow literal expression outside of group by
added atomic operation to unmap and close buffers in FileChannelLinesSpliterator to ensure proper cleanup of mapped byte buffers and prevent memory leaks
refactor code to use a local variable for validator access in LdapUtils . java to improve code readability and maintainability
added a schedule method to the CircuitBreakerImpl class and updated the CircuitBreakerTest class to use a new WAIT _ TIMEOUT _ MILLIS to
removed the FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from the intent flags in Launcher . java to simplify the
rename " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in SubmissionController and File
added a JUnit 5 @ Disabled annotation to TableExtRetrieverTest . java to disable the test due to the need for retrieval strategy for column
added synchronized keyword to addExportedCount and getExportedCount methods in EntityGraph . java to ensure thread safety during count operations
updated import statement for IntRangeUtil1 from ` IntRangeUtil1 . requireNonNegative ` to ` IntRangeUtil . requireNonNegative
refactor character validation in HttpParser and add a new test for encoded headers in HttpParserTest to improve error handling and ensure proper encoding of
updated the layout resource in ConfigurePagerActivity from trends _ activity to configuration _ activity to align the activity ' s layout with the current
updated print statement to include the position in the SLWT found in the document to improve clarity of the output for better debugging
replaced the ` onlyLeaderIndexes ` boolean with a conditional ` useTlogReplicas ( ) ` method in ` ForceLeaderTest ` and
refactor Thread class to improve thread management to enhance performance and maintainability of thread management
added multiple template file suffixes to the AbstractConfigurableTemplateResolver class and implemented a forceTemplateMode flag to improve template file handling and allow for forced
camel - 16400 : camel - cxf - allow to specify the namespace in the body of the cxf message .
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated the method for formatting day and month values in ToChar . java and added new test cases in TestFunctions . java to improve readability
added imports for ValidTxnList and ValidTxnWriteIdList , and updated configurations in GenericUDTFGetSplits . java to enhance transaction validation
replaced ` ArrayList < String > ` with ` Collections . emptyList ( ) ` for ` columnNameProperty ` and ` columnTypeProperty ` to simplify
added null check for bookpath in DataHolder . java and implemented hasNoData method in Picture . java to improve robustness by preventing
added a condition to check if the next SID is not continuation before creating strings in SSTDeserializer to ensure proper handling of non - continuation records
added a constant for the default grid column and updated its retrieval logic in AppPreferencesImpl and ExtendedListFragment to improve code readability and ensure
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java to include line - break characters to improve clarity and accuracy of
added a new boolean field ` waitingForKeys ` and updated related conditions in ` DecoderInputBuffer ` , ` ClippingMediaPeriod `
updated @ Path annotations in OkexV3 . java to remove unnecessary ' api ' prefix to simplify API path formatting and improve readability
replaced multiple occurrences of ` x1 ` and ` y1 ` and ` x2 ` with ` y1 ` and ` y2
added error handling for varargs and old array syntax in JavacParser . java and created new classes VarargsAndOldArraySyntax . java
add warn log if defaultdrmsessionmanager be use on wrong thread
added a new METHOD type and modified the handling of member access and method calls in the VariableContext class to enhance functionality to support method calls and
added unit tests for invalid compilation unit and profile string parsing in ExperimentParserTest . java and removed asNullableBoolean method in ExperimentJSONParser .
update buffer limit handling in Piece . java and SharingPeer . java to improve clarity and ensure proper position management during buffer operations
added HttpClientProperties to manage response timeout in NettyRoutingFilter and related classes to enhance the HTTP client ' s configuration flexibility by allowing configurable
refactor CxxLibraryFactory to use NativeLinkTarget for better clarity and consistency to improve code readability and maintainability by standardizing
add unit test base on user forum issue
added support for handling RexFieldAccess in ASTConverter and updated RexNodeConverter to convert ExprNodeFieldDesc to RexNode to
replaced the usage of ` QueryLogEntry . values ( ) ` with a static final ` QUERY _ LOG _ ENTRY _ VALUES ` array to
added a new function ` noProxyPredicate ` to the ` Proxy ` class and refactored URI relativization logic in ` WebClient
refactor PKCS12KeyStore to improve certificate handling and add trusted certificate loading in StoreSecretKeyTest to enhance code clarity and ensure proper certificate management
added reflection access checks and refactored methods in ReflectionCheckLinker and NativeObject to improve security checks to enhance security by ensuring proper access
removed the ' public ' access modifier from the constructors of the CollisionMap class to enforce encapsulation and restrict access to the constructor
deprecated the method ` getRawInputFromTransactionInput ` and added a null check for ` TransactionInput ` to improve clarity and enforce non -
refactor logging level handling in ConfigurationValueConverter and Main classes to use a switch statement to improve code readability and maintainability by reducing
cloudstack - 4892 : remove unnecessary region _ id parameter from insert statement in configurationserverimpl .
added handling for EncryptedDocumentException in OldExcelExtractor and created a test for it in TestOldExcelExtractor to ensure proper handling of encryption issues
[ gr - 18484 ] add -- add - exports = all - unnamed to mx _ java _ benchmarks . py ( #
removed unnecessary whitespace in the visibility setting of the image holder to improve code readability and maintain consistency
increased the sleep duration from 10 seconds to 50 seconds in the scheduler method to allow more time for attempts to complete before proceeding with
refactor file creation logic in ShadowContext and introduce deleteDir method in ContextTest to improve directory management and ensure proper deletion of named directories
refactor ExceptionFactory to use Class . forName for class loading and simplify factory initialization to improve code readability and maintainability by leveraging
increased the WAIT _ TIME _ MS constant from 10000 to 60000 to allow more time for the instrumentation to complete before proceeding with
updated import statements and added audience handling in ConnectOAuth2RequestFactory , ConnectTokenEnhancer , and ConnectOAuth2RequestParameters classes to
camel - 14263 : camel - kafka - allow to break on first error by default
added a new constant selectableItemBackground with a value of 0x10a13 to enhance the visual appearance of selectable items
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type handling when record is null
added a new file ` ResumableRandomAccessFileListener . java ` and updated ` ResumingExternalDownload . java ` to use it to
updated the package name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad .
added format handling in HSSFDataFormat . java and updated test assertions in TestWorkbook . java to improve data format management and ensure correct
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer and flinkkafkaproducer
updated the condition to check if the checksum length exceeds the maximum of the compressed length to ensure that the checksum length does not exceed the defined maximum
camel - 14263 : camel - redis - idempotent processor should be able to set a value with expiry . thanks to david
fix vanilla bug where vanilla do n ' t use metadata for damage .
added a conditional check for real local repository in LegacyLocalRepositoryManager to ensure correct artifact retrieval based on the layout type and its ID
added initialization check in LocalInstanceManager and improved error handling in JobManager to ensure task manager is properly initialized and provide clearer error messages
added a deploy command to the AbstractArtifactResolutionException for deploying files to enhance the artifact deployment process by allowing users to deploy files to their
replaced ` FileStorageUtils . getTemporalPath ` with ` FileStorageUtils . getInternalTemporalPath ` in ` UploadFileOperation . java
added a new method ` findByEntries ` to ` FeedEntryStatusDAO ` for retrieving ` FeedEntryStatus ` by entries and updated import statements
added thread execution logic in ContextImpl and adjusted block check tests in BlockedThreadCheckerTest to improve thread management and ensure proper handling of blocking
updated the ` instantiate ` method to accept a ` formatterString ` parameter and added a null check for the ` ctorArg ` to ensure that
updated file loading logic to support different Android SDK versions to ensure compatibility with newer Android versions and improve performance
replaced instances of ` setRemoteAddress ` and ` setRemoteHostname ` with ` this . remoteAddress ` and ` this . remoteHostname `
added a null check for realClass in Robolectric . java to ensure shadowClass is not annotated with @ Implements to prevent runtime errors
added a check for ` tlsMutualAuthenticationRequired ` in ` NettySslContextFactory ` and ` ExampleNettySslContextFactory ` to ensure
added a test to verify that plain HTTP endpoints over HTTPS throws SSLException to ensure proper handling of SSL - related exceptions during HTTP requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance encapsulation and access control for consumer and producer
added code formatting and improved widget event handling in PageChangeListener and FrameRenderer classes to enhance code readability and maintainability while ensuring proper widget
corrected the spelling of " from " in the warning log message from " email " to " SMS " to ensure accurate logging for users
no effective change - add draftqueryoptimise ( ) method to beandescriptordrafthelp
added exception handling for resource temporarily unavailable in MultipartBody . java to improve robustness by handling exceptions related to resource temporarily unavailable
refactor array initialization in ` ExecutableFactory ` and ` ZipFolder ` classes to improve code readability and maintainability
refactor multiple classes including EndpointConfiguration , SpEL , MainSupport , package - info , and SSLContextParameters to improve code organization and maintainability
added working directory handling and improved file directory initialization in AttachFileAction . java to ensure the application uses the correct working directory for file operations
added SchemaInfoLevelBuilder and LoadOptionsBuilder to AccessTest . java to enhance configuration flexibility for schema crawling options
updated package and added unit tests for the loadLibrary method in TestLoadLegacyLibrary . java to improve test coverage and ensure correct behavior of native
replace ` TestParseException ` with ` return null ` in ` TestReader . java ` to simplify error handling by returning null instead of throwing an
added setter methods for name , enabled , and expanded states in ProjectProperty . java to ensure proper handling of project property properties based on their properties
refactor connection handling in AbstractDbmsOperationHandler to use a try - with - resources statement to ensure proper resource management and prevent potential memory
[ hotfix ] fix checkstyle violation in datastreamjob
refactor file output stream handling in TestContentProvider . java to use try - with - resources and handle EPIPE to improve resource management and
camel - 14284 : camel - cxf should use classhelper to determine the real class name of the service instance .
added a condition to check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory to ensure proper handling of HTTP / 2 protocols and
refactor LambdaToMethod to use a ListBuffer for parameter symbols and improve clarity in parameter handling to enhance code readability and maintainability
updated the regex pattern in CoordinationTransformer . java for improved clarity and consistency to enhance readability and maintainability of the code by
increase cache file size from 5000 to 60000 to allow for longer cache file size for better performance
added a line to set the phraseSlop property in the QueryParser class to enhance query parsing flexibility by allowing phrase separation
increased sleep duration from 10 to 100 milliseconds in LongPressMouseListenerTest . java to allow for more time for triggered actions to complete
increased the port for server parsing from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to
added a method to schedule parallel game tasks in GameScheduler and updated related calls in ScreenGrabber and Terasology to improve task management and
updated visibility condition to check for available edit options before hiding the compound view to ensure that the compound view only displays when there are available edit
updated progress calculation in DepthController . java to ensure progress does not exceed 1f to improve performance by preventing out - of - bounds errors
removed the ` packetReceived ` method from ` ClientSession ` , ` ComponentSession ` , and ` Session ` classes to streamline the packet
refactor authentication response handling in ` DelegatedAuthenticationGenerateClientsAction . java ` and enhance auto - redirect handling in ` DelegatedAuthenticationGenerate
added null checks for ` service ` in ` SamlIdPEntityIdAuthenticationServiceSelectionStrategy ` and ` SamlIdPMetadataUI
added ` hidden = true ` to the ` arity ` and ` description ` fields in the ` PantheonCommand ` class to indicate that
added a method to do not instrument a specific class " androidx . room . CoroutinesRoom $ Companion " to ensure that
removed unnecessary synchronization from the ` isSupported ` method in ` NegotiateAuthentication . java ` to simplify the method by eliminating unnecessary synchronization
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline initialization scripts by eliminating unnecessary setter method
camel - 14263 : camel - test - infra - aws : queue - reply - manager should use thread name for thread name resolution
refactor AuthenticationProvider and TargetObject classes for improved clarity to enhance code maintainability and readability
added methods to open and close MC blocks for tagged writers in PdfDocument . java to enhance text rendering functionality for tagged writers
add a new test method ` testPatternSelector ` in ` PatternLayoutTest . java ` to verify the functionality of ` PatternSelector ` to
alexeibarantsev : make windowshtmlrunnertest more resilient to hta mode
added a new MwThankPostResponse class and modified the ` thank ` method in ` Service . java ` to extend it to
updated ChannelEndPoint to implement SocketBased and added a new SocketBased interface to enhance socket handling capabilities in the application
removed redundant assignment of revokingStore and adjusted the maximum size setting logic to streamline the code for better readability and maintainability
added tests for implicit join queries in HQLTest . java to verify the correct number of calls and timestamps in the call history retrieval process
added line normalization for expected and actual strings in the NonVisualRegressionTest class to ensure consistent line endings across different operating systems
added filesToCommit collection and modified reference counting logic in IndexWriter and MockDirectoryWrapper classes to improve file management and prevent unreferenced files from
added ` @ Final ` annotation to several methods in ` BaseError . java ` and added ` @ Final ` annotation in ` Reflection . Final
added validation for the consume user resource percent in ConsumeUserResourcePercentActuator . java to ensure that the percent value is within valid range for
added a condition to check if the old login display is enabled based on resource settings to ensure the legacy login display is appropriately enabled based on user
rename ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to clarify the purpose of the test class
updated response page assignment logic in EditTeamPage . java to ensure correct navigation to the UsersPage
updated debug log message to include exception details to improve error reporting for better debugging
refactor shutdown logic in ConnectionManager to ensure proper handling of server socket channel closure to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
refactored the creation of dynamic partition specifications into a separate method ` createDynPartSpec ` to improve code readability and maintainability by
refactor round half - up factor calculation and introduce a boolean parameter to enhance rounding functionality based on scientific format requirements
added ` visitDirectory ` method to ` JarDirectoryStep ` for adding directory entries and updated ` DirectoryTraversal ` to correctly visit directory entries to
added a new file JWKSetEditor . java to handle JWKSet input parsing to enable customization of JWKSet values in the application
refactor term handling in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionBlockTreeTermsWriter classes to simplify the term
truffle : fix class resolution in invokeespressonode and toespressonode .
change default value of fetcher . threads . per . host . by . ip from true to false to disable thread fetching by default for improved
added a condition to check for queryTimeout before setting timeToLiveOfQuery to ensure that queryTimeout is only set when transactionTimeout is less than
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to include target configuration
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
cloudstack - 3243 : fix npe in network usage stats update task ( # 3244 )
updated animation interpolators to use a constant FINAL _ FRAME instead of a lambda expression to improve code readability and maintainability by using a
adjusted height calculation based on swipe density in Background . java to ensure proper positioning of the nav bar based on display density
added a new module - info . java file and modified the constructor of QuicConnection , QuicStreamEndPoint , ServerDatagramConnector ,
fix npe in jsontype . settextvalue ( ) when value be null .
simplified the initialization of the InitialContext in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ checkpointing ] make default checkpointable _ failure _ number default to 0
updated InnerClassesTable to use ElementKind for better type handling and added new test cases for inner class references in package annotations to improve code cl
added space to the " test . tool . vm . opts " string in TimestampCheck . java to ensure proper formatting of command line options for
replaced ` FluentIterable ` with ` MoreCollectors ` for stream processing in ` ChromeTraceBuildListenerTest . java ` to improve code
[ 3.0 ] fix npe when export dubbo service ( # 10601 )
added security OTR mode handling in SettingsManager and modified session end logic in OTRManager to improve session management and ensure proper exception handling during
added new properties for node label outline sizes and transparency in the rendering process to enhance rendering flexibility by allowing customizable outline sizes and transparency for
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the boolean value from false to true in Win32FontManager . java to enable font rendering functionality in the application
added a null check for the visitor before processing to avoid potential NullPointerExceptions when the visitor is not initialized
added error handling policy to JDTBatchCompiler based on classpath to ensure proper error handling behavior based on classpath requirements
added content alignment and text anchor properties to LabelBlock and its corresponding tests to enhance flexibility in label rendering by allowing customizable alignment points
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and ease of understanding for future developers
changed the type of the ` isLoopback ` variable from ` boolean ` to ` Boolean ` and added null checks for the ` networkInterface
added locale parameter to the fromRfc1123DateString method and updated date formatting to use Locale . US to ensure consistent date formatting across different locales
update file download method to accept a PDF file extension to ensure correct file download behavior for PDF files
nifi - 1748 : add output _ no _ hits property to abstractjsonqueryelasticsearch
naas : fix calculation of one - hour cost per month for quota ( # 4649 )
[ java ] fix switch - case statements in election . java to improve code readability and maintainability
fix ( p ) : do n ' t close directory stream when there be no file read
refactor widget handling logic in PageChangeListener . java to improve clarity and efficiency to enhance the readability and maintainability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` HSSFWorkbook `
added a try - catch block around the unregisterInvalidatedSessions ( ) method call to handle potential exceptions during session unregistration to improve error handling
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
change the status message from " reachable = false " to " not reachable " in HueLightHandler . java to clarify the reason
add fmlclienthandler . isloading ( ) to prevent fml from be load . close # 74303
updated return statements to include " unit . millions " , " k " , and " unit . thousands " bundles in UI and
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code clarity and
added parameterized tests for query parsing with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure that queries
added tests for serialization and deserialization of nested maps in MapTest . java to ensure proper serialization and deserialization of nested maps in JSON format
geometryutils . addposition ( x2 , y2 ) make sure x2 + y2 be not less than offset
updated sorting order dialog implementation in FileDisplayActivity and ReceiveExternalFilesActivity to use SortingOrderDialogFragment instead of a hardcoded string to
added error handling for empty TestPlan in StandardJMeterEngine . java to ensure that the application gracefully terminates when the TestPlan is not found
refactored methods in GeneratedEntityTranslator and JdbcManagerSupportImpl to use Lazy references for DbmsType and DbmsOperationHandler to improve
updated argIdent assignment logic in Parser . java to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is
updated the default protocol setting in JettyHttpComponent9 to use the specified protocol instead of a hardcoded value to enhance flexibility by allowing
set default value of displayVolume to true to enable display of volume in the application
modified the version method to accept a boolean for full versioning and updated the message retrieval logic to enhance flexibility in logging based on the full
updated condition checks and logic in ChangeLogParameters . java to improve clarity and functionality to ensure correct retrieval of ChangeLogParameters based on their
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity and reduce unnecessary log entries
hhh - 14678 skip test due to exception during formatting of sql string
updated socket timeout handling and handshake procedure in Connection . java to improve socket timeout management and ensure proper handshake behavior
updated size calculation logic in HomeFragment , DMFragment , ListFragment , and MentionsFragment to include a check for the MainActivity ' s
changed the default value of CHA from false to true in EspressoOptions . java and added final modifiers in DefaultClassHierarchyOracle .
http : / / issues . apache . org / jira / browse / amq - 4748 - fix classloading issue in resource
updated JodaTimeRangeRandomizersTest to use wildcard imports and refactored related test methods to improve code readability and maintainability by
added a conditional check for SERVLET _ MAJOR _ VERSION and refactored resource URLs in WebDescriptor . java to ensure proper
fix : add logic to check if a node is ready and add a method to get node ready condition
replace liveEndpoints with handler . endpoints in StorageProxy . java to ensure the correct endpoint is referenced in the handler ' s endpoints
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest version of RPC for
added security checks before checking package access in ObjectStreamClass and ObjectStreamField classes to enhance security by ensuring proper package access checks are only performed
added methods to format elapsed time and file data in Utils . java and changed the visibility of UGSCommandCount in XLCDCommun
defaultmetricstagprovider : use immutable map instead of guava immutable map
updated the addition of MockBrowserTest to the suite in ClientDriverSuite . java to ensure consistency in test suite addition
changed the default logging level from OFF to ERROR in the opt2 configuration to improve error handling by using a more appropriate log level
changed private variables to final in IconNormalizer . java to ensure immutability and improve code clarity
added a flag ` firstCallPrepareDo ` to control the behavior of the ` invokePrefixMethod ` method based on the ` firstCallPrepare
refactor workspace and overview mode handling in Launcher . java to improve clarity and functionality based on content type to enhance user experience by ensuring
added a Singleton annotation to AuthWithStoreFeature and modified bindings in Auth and Auth classes to ensure a single instance of AuthStore is used for
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method and modified its logic to incorporate it to
pod : remove private ip capacity from the db if it be not set to null . patch by brandonwilliams , review by
updated the profile command description in ProfileServlet . java for clarity to improve user understanding of profiling commands on Linux 4.6 + and
refactor ModelResolver to improve handling of required properties and add a new RequiredRefFieldModel class to enhance code clarity and maintainability by
replaced instances of ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreConfigurationWatchConfiguration ` with ` CasCoreConfigurationWatchAutoConfiguration `
refactor FeatureFlags class for improved clarity to enhance maintainability and readability of the code
updated ConfigStore . java and CommonSetup . java to improve unique identifier generation and naming conventions to enhance clarity and maintainability of unique
added picture handling in TimeLineCursorAdapter and TimelineArrayAdapter to set them in the image based on the holder ' s pictureUrl to
updated compaction configuration messages in HiveConf . java to clarify that queries are always run via queries regardless of configuration settings to improve clarity
added a null check for mWaitingToSend . getStoragePath ( ) in the FileDisplayActivity to ensure that the storage path is not null before
replace resizeThreshold checks with a checkResize method in multiple classes to improve code readability and maintainability by centralizing resizing logic
refactor LDAPConnectionService to improve code structure to enhance maintainability and readability of the code
marked the @ XmlAttribute annotation as deprecated and marked it as deprecated to indicate that the attribute should no longer be used and may be removed
added debug tracing logs for various events in TouchInteractionService and RecentsAnimationDeviceState to facilitate troubleshooting
added a condition to check if the class name starts with " com . intellij . rt . junit . " to ensure compatibility
updated assertions in TestMultiSearcher to compare ` hits2 ` and ` hits3 ` lengths instead of ` hits ` lengths to ensure accurate
added a new file LucenePackage . java that initializes the LucenePackage class to ensure that the LucenePackage class can be instantiated without
corrected the addition of ` sizeInBytes ` to ` - existing . sizeInBytes ` in ` RAMDirectory . java ` to ensure accurate size
added estimate methods to StatsRulesProcFactory , GenericUDAFBloomFilter , and GenericUDAFEvaluator classes and updated byte arrays to be
added a null check for getDrawerToggle before invoking the onDrawerSlide method to avoid potential NullPointerExceptions when getDrawerToggle is not
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method in DefaultAuthenticationAdapter . java to suppress warnings related to unused subject usage
added logic to handle classpath scanning based on override class loaders and enable system jars and modules to ensure correct classpath scanning behavior when overriding class loaders and
refactor getAuthors method to accept BibEntry parameter for better clarity and structure to enhance code readability and maintainability by reducing
added a method to cancel core recovery in CoreContainer based on ZooKeeper awareness to improve error handling during core recovery processes
updated time measurement and position difference calculations in bug5070081 . java to improve accuracy and accuracy of position derivation process
simplified the condition for clicking the first auth control option in RepoEditView . java to improve code readability and maintainability by
updated error messages in PGProperty . java for clarity and consistency to improve readability and maintainability of the code
added additional fields and defaults to the SecurityExpressionRoot object in the SecurityEvaluationContextExtension class to ensure default values are set when additional fields are
added a check for exponentSize in DHParameterGenerator to ensure it defaults to primeSize - 1 when exponentSize is zero
replaced direct usage of ` FileStorageUtils . getSavePath ( ) ` with ` FileStorageUtils . getUsableSpace ( ) `
replaced ` delegate . combine ( other . delegate ) ` with ` accumulate ( other . values ) ` in ` DistinctSqlAggregation .
added a test method to verify post - login activities for user authentication to ensure proper execution of post - login activities for successful user authentication
simplify extractorspanishstrippedverb initialization by introducing a new constructor and specifying a dictionary path to enhance code readability and allow
refactor CharArraySet and TestCharArraySet classes to simplify character array handling and improve test coverage to enhance code readability and maintainability while
updated error messages and simplified track type checks in MuxerWrapper . java to improve clarity and maintainability of track type validation
refactor JsBundleGenrule to return AndroidPackageable instead of JsBundleAndroid and update related test cases to improve type safety and ensure correct
updated character encoding handling in StringDictionary and added a UTF - 8 character encoding test in DictionariesTest to ensure proper handling of UTF - 8
updated case name from " Logical Analyzer " to " Logic Analyzer " and added new drawable resources to improve clarity and organization of the
added instanceClassName and instanceClass variables to manage vector instances more efficiently to improve performance by avoiding unnecessary instantiation of different vector classes
removed the syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unnecessary updates
update return statements in FeedbackContributionQuestionDetails . java to replace convertToEqualShareFormatHtml with getPerceivedContributionHtml and update
added TestLoggingExtension to DiagramRendererTest . java to enable logging functionality for better debugging and monitoring
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 533 : camel
added support for the new VIOMI water heater device type ( VIOMI _ WATERHEATER _ E1 ) to enhance
replaced direct calls to ` getSslSessionData ( ) ` with a local variable ` sslSessionData ` to improve code readability and
added a new file CreateNewSpreadsheet . java to implement functionality for creating new sheets and comments to facilitate the creation of new
replaced ` Duration ` with ` long ` for time - to - live ` in ` CacheProperties ` and updated related getter and setter methods
replaced ` Favorites . CONTENT _ URI ` with ` Favorites . CONTENT _ URI _ NO _ NOTIFICATION ` in multiple
update the version of the wiremock test from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure
replaced synchronized blocks for lucidaFontName with synchronized blocks in SunFontManager . java to improve performance by reducing unnecessary synchronization
added a condition to check for the presence of a specific character ' < ' in the DocClassUtil class to ensure proper handling of specific character
removed unnecessary String . format call in Workspace . java to simplify code and improve readability
added a UI message for no validation errors found in ValidateCommandStep . java to inform users when no validation errors are found
replaced DefaultResourceLoader and FileSystemResourceLoader with ResourceLoader and added a method to configure web resources in IntegrationTestContextLoader to improve resource
updated scroll handling logic and modified component retrieval methods in multiple classes to improve responsiveness and correctness in component accessibility
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated ` ByClientId ` and ` getCountForClientId ` methods to use ` String ` as a
updated the expression replacement logic in CellContentConverter . java to replace multiple occurrences of " $ 1 " and " $ \ n1 " with
updated glob transformation logic in SelenesetTestCase . java to improve regexp formatting to enhance readability and accuracy of glob matching output
refactor MondrianProperties class to improve code structure to enhance maintainability and readability of the code
added stack trace printing in ProcessTools . java and modified custom launcher test cases in CustomLauncherTest . java and LocalManagementTest . java to
removed the testEmbeddedImage method from TumblrRipperTest . java to streamline the test by eliminating unnecessary functionality
added a conditional check before calling ` method . convert ( storeType ) ` in ` CodeGenerator . java ` to ensure ` method . convert
refactored load position handling in ContainerMediaChunk and InitializationChunk classes to ensure correct initialization of extractorWrapper when nextLoadPosition is zero to
updated BaseLockFactoryTestCase to use ByteArrayOutputStream and added UTF - 8 encoding for IndexWriterConfig to enhance compatibility with UTF - 8 encoding and
added ` isDynamic ( ) ` method to ` ServiceLoader ` and refactored ` ServiceLoader ` initialization in ` TikaConfig `
added package - info checks and refactored collections in DocLint . java and DocLintTester . java to improve code clarity and
added a new constant IMPORT _ CMD and updated conditional checks in DataImportHandler and DataImporter classes to improve code readability and maintainability by
added a new test method to verify that modifying inner classes if ignoreDefinition is false to ensure that modifying inner classes does not affect existing definitions
removed unused import of android . util . Log in JettyService . java to clean up the code and improve readability
added a new parameter ` workspaceScreens ` and modified the ` checkItemPlacement ` method to include a ` ArrayList < Long > `
danielwagnerhall : add ` ` / quitquitquit ' ' to kill the jvm
refactor the handling of transformed rows in LLRealtimeSegmentDataManager to improve clarity and structure to enhance code readability and maintainability
added a check for Windows OS and its display name in the Tests . java file to skip processing for Teredo devices that are not
added a check for protocol provider registration before adding a contact to ensure that an error dialog is displayed when the contact is not connected to the protocol
replaced ` getReaderContext ( ) . getRegistry ( ) . registerBeanDefinition ( bean , BeanIds . USER _ DETAILS _ SERVICE _
updated drawBitmap method parameters to use null instead of r . left and r . top to simplify bitmap drawing logic for improved performance
corrected the spelling of " yymmdd " in the MeitrackProtocolDecoder and TotemProtocolDecoder to ensure accurate
changed method visibility of getFontPath and getPlatformFontPath from public to protected in SunFontManager and X11FontManager classes to enhance encapsulation
mark multiple methods as deprecated in EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
fix flaky test : assert that reachedmaxsizeexception can not be throw by mapstore client
added a boolean flag ` keepEmptySentences ` to control the handling of empty sentences in the ` DocumentPreprocessor ` and related classes to
added error handling for artifact subdirectory creation in MavenArtifactFetcher . java to improve robustness by providing clearer error messages when directory creation fails
added a static final instance of JavacTool and removed the IDELazyTreeLoader class and refactored return statements in JavaLanguage
added null check for answer in DirectAgentAttache . java to log a warning if the resource returned null answer
added exception handling for email sending in the sendEmail method to improve error handling and provide clearer feedback on email sending failures
added a new API annotation to the buildcraft . api . tiles package and modified the PipeItemsObsidian . java file to include
updated date math parser methods to accept a Locale parameter to enhance flexibility in date formatting based on locale settings
added a boolean property ` includeDecals ` to ` StorageOptions ` and a ` decalButton ` in ` StorageOptionChooser ` to
updated the ` generateDocumentation ` method to include a null parameter and added a suppression warning in the ` getImplementedDatabases ` method to improve
added performance logging configuration and refactored test methods in HiveProtoLoggingHook and TestHiveProtoLoggingHook to improve logging accuracy and enhance
removed unnecessary whitespace in multiple Java files to improve code readability and maintain consistency
updated the class file version check in ignoreRecordAttribute . java to use a constant for the major version to improve code readability and maintainability
added a new test class LdapPasswordAuthenticationTest for LDAP user authentication to ensure proper functionality and validation of password authentication functionality
updated import statements and conditional logic in TaskCompiler . java to use BasicStatsNoJobTask for footer scan functionality to improve code clarity and
fix a nullpointerexception in the saveall notification ( # 2323 )
refactor VisibleAdvance class to improve code readability to enhance maintainability and ease of understanding for future developers
refactor the reflector ' s start method to include a reconnect parameter and handle exceptions more effectively to improve error handling during pod startup and ensure proper
added checks for dynamic number columns in EdgeDataTable and NodeDataTable to ensure proper handling of dynamic number columns in Sparklines
added null checks for repository URI and version in RawPom . java to ensure required parameters are not null to prevent potential NullPointerExceptions
updated the API assignment logic to handle null apiInfo to ensure that the API is set correctly if it is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added disposal logic and uniform setting functionality in FlameRenderer and PhotoPanel classes to improve resource management and ensure proper disposal of textures
updated scene size from 460 to 520 and added context menu item in InsnListEditor to enhance functionality by allowing dynamic local variable assignment
added bounds checking for ` i + 1 ` in ` CSSParser . java ` to ensure ` i + 1 ` does not exceed ` ch
added a boolean property ` isLookAndFeelDecorated ` to control the visibility of the JFrame and JDialog look and feel
removed unnecessary SQL condition from the COMPLETED _ REQUESTS _ SQL query and simplified method calls in HostRoleCommandDAO . java to improve code
updated function names from F5 _ UNKNOWN to F6 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRANSPONDER _
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection logic for better user experience
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to enable color storage functionality in the ColorsActivity
refactor String class to improve code readability to enhance maintainability and ease of understanding for future developers
removed unused Logger and LoggerFactory imports from multiple classes to improve code cleanliness and reduce unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class that returns an array of entries from the map to
added assertions to verify the behavior of the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin
test : migrate CUFilterTest from JUnit 5 to JUnit 5 in order to facilitate testing with the latest Jupiter
replaced hardcoded string separator with a constant from the system property ` PATH _ SEPARATOR ` to improve maintainability and readability of the code
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow subclasses to access the method without creating instances
hhh - 14655 add test case for exist field in metamodel
removed unnecessary ` conf ` parameter from ` Outlink ` constructors across multiple parser classes to simplify code and improve readability by eliminating unnecessary
removed ` LexicalContext ` parameter from ` ensureUniqueNamesIn ` and ` copyFinally ` methods across multiple files to simplify method signatures and
added a method to remove unused imports and modified the return statement in UseLambdaForFunctionalInterface . java to improve code clarity and ensure
removed the appendClassSelector method call from the classFilesets addition to simplify the code by directly adding the file set to the collection
added a check for Aggregate root input in HiveCardinalityPreservingJoinOptimization . java to prevent unsupported root inputs from being processed
[ 1.19 . x ] fix npe in registryevent . missingmappings ( # 1748 )
reformatted assignment of x3 and y3 in the Intersector class to improve code readability and maintainability
added default methods for SBE decoding lengths and limits in MessageDecoderFlyweight . java to provide a clearer way to implement SBE
refactor ElasticsearchContainerTest to use a constant for the Elasticsearch version and add a corresponding test method to improve code readability and maintainability by
copy the message bytes to a buffer before parse it to improve memory efficiency by avoiding unnecessary array copying
added version ID handling and updated cluster name and version handling in ClusterDefinition and related classes to improve clarity and functionality of cluster management in the
camel - 14850 - camel - ftp : remove unused setconfiguration ( ) method .
[ zeppelin - 3640 ] make sure interpreter can load dependency from classpath
modified local variable assignment logic in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest .
added a check to return early if basic constraints are - 2 in ForwardBuilder . java and created a new class BuildEEBasicConstraints . java
added a method to initialize after the first database connection in JdbcPostgresqlDAO to ensure compatibility with PostgreSQL versions 9.5 and above
updated WebSocket configuration to limit message size and added buffer size validation in AbstractWebSocketConnection to improve message handling and ensure input buffer size is less than
lucene - 1748 : do n ' t try to delete segment that do n ' t exist anymore
added null check for scopes before checking for OPENID in ClientRegistration . java and updated corresponding test cases in ClientRegistrationTests . java to ensure
added null checks for orderBy before adding it to the parameters and explanation to avoid potential NullPointerExceptions when orderBy is null
updated import statement for assertThat from JUnit to Hamcrest in ClusterEntrypointTest . java to align with Hamcrest
server : do n ' t show snapshot for kvm in backed - up state ( # 4649 )
refactor initialization of log4j in HiveServer2 . java to improve logging clarity by storing the log initialization message
added a check to ensure tasks are not empty before proceeding to prevent potential NullPointerExceptions when no tasks are available
change return type of deleteNode method from void to boolean in PubSubManager . java and OpenPgpPubSubUtil . java to improve error handling
refactor data handling in TsKvLatestEntity and related classes to improve clarity and structure to enhance code readability and maintainability by
added checks for empty barcode in Code128Reader , Code39Reader , and FalsePositivesBlackBoxTestCase classes to ensure robust error handling
replace TreeSet with LinkedHashSet in SSLContextImpl . java to maintain insertion order for cipher suites
refactor control character validation in Escaper . java and update expected string in InternationalizationTest . java to improve code clarity and
added support for CharSequence return type in SQL provider methods and modified return type handling in ProviderSqlSource . java , and modified SqlProviderTest .
added null check for aliasChildren before accessing its properties in InternalMNode . java to avoid potential NullPointerExceptions when aliasChildren is null
added a method ` getLayoutTransitionOffsetForPage ` to calculate the layout transition offset for a specific page in ` PagedView ` to improve
renamed variable ` synthetic ` to ` pruned ` and updated its usage in the ` JavaTemplate . java ` file to improve code clarity
added a method . setAccessible ( true ) to WidgetInterceptor . java to ensure the method is accessible for access control
added a conditional check to prevent setting the literal initializer for non - database server fields to ensure that the default value is only set for non -
updated Firefox version in AbstractRipper to use AppleWebKit / 537 . 36 instead of Gecko / 20100101 Firefox
added a new menu item for browseing the server URL in BasicSystemUtils . java to enhance user experience by allowing users to access the server
refactor ` HandleGetter ` to use a static final variable ` actualValue ` and update related references to improve code clarity and maintainability
added error handling for record building in EncryptedSlideShow . java to ensure robust error handling and prevent potential ArrayIndexOutOfBoundsException
[ flink - 20613 ] [ checkpointing ] add more logging to the queue and filecheckpointio
added call to loadBattlePassManager ( ) before avatar postLoad to avoid null pointer exceptions when calling loadBattlePassManager
updated SSH version from 1.0 . 0 to 1.1 . 0 and modified command line options in PortForwardingContainer . java to ensure
added a big object array and a call to System . gc ( ) in ThresholdTest . java to force a full - gc of the array
updated conditional checks for log name and logger level in StdErrLog . java and added new debug test cases in StdErrLogTest . java
feature - add name to rremoteriveclient and rremoteriveclient . getremoteremivce
added methods ` isSelected ( ) ` and ` setSelected ( boolean b ) ` to the ` MultiButton ` class and modified the logic for setting
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align with the new next
[ issue # 2370 ] fix bug in brokercontroller . fenced ( ) ( # 2371 )
refactor RedisReactiveHealthIndicator to improve connection handling and health indicator health checks to ensure proper resource management and prevent potential memory leaks
refactor background color handling in ProgramGridCell and Utils classes to utilize a new method for retrieving theme color to improve code maintainability and
renames occurrence of ` participantTransportAddressChanged ` to ` peerTransportAddressChanged ` across multiple classes to improve clarity and consistency in naming
removed multiple type adapter registration for various classes in ToolingApiLauncher to streamline code and improve maintainability by eliminating redundancy
updated the array index from 55 to 255 in TestPayloadCheckQuery . java to correct the range of values for better testing accuracy
updated ConsoleReader to handle string input with masking and modified ConsoleReaderTest to include a new test for reading lines with mask to improve handling
added user - specific logging in BaseCommand . java to improve error reporting for user context during execution
[ hotfix ] move modulesupport to graalvm . compiler . api . test
[ hotfix ] [ runtime ] remove unused constructor in slotsharinggroup
added a condition to check if the Java version is greater than 1.9 and disabled the emulateJava8 feature in StreamExInternals
updated texture references from " wheel . png " and " cloudconnected . ogg " to " sys . png " in multiple test files to
refactor registration and unregistration of the system dialogs receiver to ensure proper resource management and prevent potential memory leaks
updated import statement for the Cluster class in HostsRemovedEvent . java to ensure proper usage of the Cluster class in the code
updated ClientDetailsEntity to allow introspection and added a allowIntrospection property to allow client introspection to enhance token management by allowing introspection
updated HtmlSessionInformationsReport to use HTML encoding for session attribute names and content to ensure consistent formatting and prevent potential issues with special characters in
added ` PhrasePrefixQuery ` and ` SpanQuery ` links to the list of queries in the query documentation to enhance query functionality by linking
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter ` and ` CommentsParser `
refactored the logic for determining if an argument is a string or a binary string concatenation in NoValueOfOnStringType . java to
updated method signatures to use ' Object ' instead of ' A ' for consistency across multiple classes to improve type safety and clarity in method signatures
refactor ` ThrowingFunction ` to a generic type ` ThrowingFunction < T > ` and update import paths to improve type safety and
added methods ` getUploaderBehaviour ( ) ` and ` setUploaderBehaviour ( ) ` to ` AppPreferences ` , ` PreferenceManager
fix ( prettyprinter ) : fix final field not be initialize in constructor ( # 3748 )
updated BitmapDrawable instantiation to use Robolectric ' s newInstance of Bitmap to ensure compatibility with Robolectric ' s built - in
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and updated its usage in ` DutchStemmer . java
updated the drawable resource used in PageMarkerResources from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to
added a volatile int reinvocations and updated logging messages in BasicInvocation . java to track the number of reinvocations and improve clarity
update calculations for topPadding in DefaultLookAndFeel . java to use getInnerHeight ( ) instead of getHeight ( ) to ensure accurate vertical
added a break statement to the end of the loop in Recognize . java to ensure the loop terminates when a condition is met
added haptic feedback for the home screen in Workspace , FolderNameEditText , and PopupContainerWithArrow classes to enhance user experience
added handling for string and numeric formULA cell types in ExcelBatchReader and created corresponding test cases in TestExcelFormat to improve formula processing
immutablefield : fix a bug where assignment in anonymous inner class method be ok .
added a user agent field to CommaFeedConfiguration and modified HttpGetter to retrieve it if it is null to ensure the user agent is correctly
added @ XmlAttribute ( required = true ) annotation to AvroDataFormat and BarcodeDataFormat classes to ensure that the XML attribute is required
changed log level from info to debug for file not found message to reduce log verbosity for better troubleshooting
rename QueueTest to QueuedPipeTest to clarify the purpose of the test class
replaced the call to ` PS . get ( ) . checkVersion ( serverVersion , BukkitVersion . v1 _ 7 _
camel - 14263 : camel - jbang - do n ' t try to find route builder if includepattern be false .
added a new boolean property ` vertexColor ` to control the color rendering behavior in ` PShape3D . java ` to allow dynamic control
added a new boolean parameter ` isPkColumnFiltered ` and modified related methods in ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest
removed Shadow . extract ( matrix ) from ShadowMotionEvent . java to simplify the code by directly accessing the matrix values
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
refactor GroovyEngine class to improve handling of class definitions and variable names to enhance code clarity and maintainability by simplifying class definition checks
added a new ` PluginContextListener ` class and integrated it into the ` BrandingServlet ` to handle plugin initialization and destruction
removed redundant print statement from NativeCodeGenerator . java to streamline output for better readability and maintainability
replaced updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve respons
added a new test method ` should _ fail _ if _ actual _ and _ expected _ cause _ have _ different _ types ` to validate
replaced the use of ` flattenName ( model ) ` and ` packName ( model ) ` with ` flattenName ( model ) `
updated variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve clarity and consistency in variable naming
simonstewart : add a test to verify that the firefox profile and capability can be set in the firefox driver .
camel - 14263 : camel - jbang - add route . description property to allow customization of route description .
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a line to set the weight of the edge in ImporterCSV . java to ensure the edge ' s weight is correctly set based on
refactor cost calculation to utilize a new method for determining hours in the current month to improve code clarity and maintainability by centralizing
updated SQL query to include additional attributes in the database metadata to enhance functionality by allowing retrieval of additional attributes from the database
added a null check for binarized in SentimentAnnotator . java to ensure that binarized sentences are not built by the parser
added detailed user information in the User class to improve debugging and debugging information for better debugging
updated body extraction logic in MessageHelper . java to handle null message bodies to improve error handling by providing clearer messages when the body is null
[ hotfix ] [ runtime ] fix typo in taskdeploymentdescriptorfactory # fromexecution
improve roster access check by check visibility of a user group
added a reference to the Maven test classpath in AbstractJRubyMojo and removed unchecked suppression in CucumberMojo to ensure
removed redundant assignment of rtype and mtype in MethodHandleImpl . java and added a new userMethod method method in MethodHandlesTest . java to
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
updated width and height checks in URLImage class to use ` ! = ` instead of ` > ` and ` ! = ` to ensure correct
added a condition to check if the name starts with " META - INF / " and adjusted package name handling to ensure that the class name is
added ` Display ` and ` Form ` dependencies to ` createImageToFileSystem ` and ` createImageToStorage ` methods in ` ImageDownloadService .
updated the expected number of values based on the major version check in StackWalkerTest . java to ensure correct handling of option values based on the
changed the access modifier of the addViewportJob method from protected to public to allow external access to the method for better encapsulation
removed the ` partitions ` parameter from the ` buildFlow ` method and related tests to simplify method signature and improve readability by eliminating
removed server restart and exit settings in TestDatabase . java to streamline server execution and improve code clarity
added null and empty checks in NodePathsConvertOperator and modified return logic in SchemaQueryMergeOperator to handle cases where the block is null or
added total harvesting time retrieval and updated related methods in CallInfoFrame , IceUdpTransportManager , and TransportManagerGTalk
updated font drawing parameters for FPS , Count , and Max in ParticleEditor . java to improve the visual appearance of the particle editor
added logic to update the keyserver port configuration for Hadoop environment in UpgradeCatalog240 . java and updated tests in UpgradeCatalog240Test . java
added transparent background color to the SvgViewerFactory class to enhance the visual appearance of the SvgViewer by providing a transparent background
removed minSdk configuration annotations from ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the code by eliminating unnecessary configurations
updated the ` containsExactly ` method to accept varargs as an array instead of a single parameter to enhance functionality by allowing varargs to be passed
updated Bucket4jFilterFunctions to use Bandwidth ' s capacity and refillGreedy methods instead of simple capacity and added key validation
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code clarity and maintainability
added a hook set to the Generator class and modified transformations in Optimizer and SemanticAnalyzer to use postExecHooks to improve hook handling and ensure
added error handling for NoClassDefFoundError in REngine . java to ensure the application handles cases where no class definitions are found
updated TraceFilter and TraceWebFilter to introduce a new class ` SpanAndScope ` and modified span handling logic to improve span management and
added a null check for the cause before setting the exception message in AbstractUpdateCommandStep . java to avoid potential NullPointerExceptions when handling exceptions
added getBaseURL ( ) to SolrServerException thrown in CommonsHttpSolrServer . java to improve error context by including the base URL when throwing
changed the landscape property from ' ls ' to ' ! ls ' in HSSFPrintSetup . java to correct the logic for determining
modify return statement to handle null values in JavaVoidObjectInspector to improve robustness by preventing potential NullPointerExceptions
added validation to prevent invalid argument names in ArgDesc . java to ensure proper error handling for invalid argument names
added memory handling for background location listener in AndroidLocationPlayServiceManager to improve performance by reducing unnecessary request and removal of location updates
updated conditional check for primitiveType from ` ! = GL10 . GL _ POINTS ` to ` = = GL10 . GL _
trufflestring : fix arrayindexoutofboundsexception when compare byte [ ] .
added a line to set the command list in the ComboBox class to ensure the ComboBox is correctly configured for command - line input
nifi - 6379 : fix posix path for alias filename in tl toolkit standalone .
updated zkcli command to use localhost instead of hardcoded values to improve flexibility in configuring within the application
updated comparison logic in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` equals ` instead of ` equals
added a condition to check if the remote gRPC status is OK before posting a severe event to ensure that build failures are only logged when the
refactor method signatures in XYItemRenderer and related classes for consistency to improve code readability and maintainability
add nbttagcompound to tick so that it do n ' t conflict with other ticket .
added a method to return a string representation of EGL errors in GLSurfaceViewAPI18 . java to improve error handling by providing
added a method to retrieve supported locales in FeatureRegistry and updated InfoRequestHandler to include a list of supported locales to enhance functionality to support locale -
updated the server URI construction and modified the location assertion in RFC2616BaseTest . java to correct the URI format and ensure the test matches
added addToHelperList ( ce ) method to the Construction class to enhance functionality by adding helper entries to the helper list
added handling for the case where the first element of a string is an escape sequence in GlyphLayout . java to ensure proper handling of escape sequences
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by ensuring privileged actions are granted before
refactor directory handling in ReceiveExternalFilesActivity to handle null file paths and browse to the root if the folder is null to improve robustness
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is not
removed unnecessary debug log statement in BarrowmanCalculator . java and updated the calculation of deltap in TubeCalc . java to simplify the
added a type check for Node and modified column addition logic in TimelineControllerImpl . java to ensure proper handling of node and edge table columns
added a method to register extra components for the BrokerAdminApiApplication in BaseBrokerStarter . java to enhance functionality by allowing customization of
added a test method for bug 4658 in MultiCfQueryExecIT . java to verify correct handling of column values and explain plans in
peergroup : do n ' t pick up peer that do n ' t support witness
fix a bug where the builder ' s cycle count be too high .
updated ConfigNodeConfig and related classes to utilize a Supplier for RatisRetryPolicy and SchemaMaxRetryAttempts to improve flexibility and
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added a null check before registering and unregistering the instance in DefaultRemoteProxy to avoid potential NullPointerExceptions when the ManagedService annotation is not present
tika - 2339 -- fix packageparser to detect non - unicode zip entry name
added a new file TestSplitThruPhiDivMod . java with methods for division and modulo operations to demonstrate the problematic
added methods to lookup generic type templates for interfaces and superclasses in TemplateRegistry . java to improve type resolution by ensuring templates are registered correctly for
increased the default size of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for better performance
added comments to the languagesExcluded array to clarify error handling for unsupported symbols in the PlayerSettingsScreen class
modify byte array handling in TransferCompletionHandler to limit the number of bytes transferred to transfer to improve efficiency by reducing the number of bytes
replaced ` WindowFocusListener ` with ` WindowAdapter ` in ` SIPCommMenu ` and ` SIPCommPopupMenu ` to
added a null check for the source node before throwing a SemanticException to avoid potential NullPointerExceptions when the source node is null
added a scale factor calculation for the AABB ' s center and extent in SkeletonRenderer . java to ensure the AABB is
added getSolrHome ( ) method to DistributedClusteringComponentTest and BaseDistributedSearchTestCase classes to retrieve the Solr home directory for
added @ ComponentScan annotation to SpringWebConfig . java to enable scan of components for better integration with Spring framework
removed the getAccount method from UserListItem to simplify the account retrieval process by eliminating unnecessary account conversion
added unit tests for installing package defaults in ShadowPackageManagerTest and updated related references in ShadowApplicationPackageManager and ShadowPackageManager to ensure
refactor AvailableSettings class to improve code structure to enhance maintainability and readability of the code
added TransactionCapsule and ReceiptCapsule fields to TransactionTrace class to enhance transaction management capabilities in the application
add client property to shuffle client member list . default to false .
replace Text with CrawlDatum in SegmentReader . java to improve data handling for crawl datums
refactor JsonDeserializer class for improved readability to enhance maintainability and clarity of the code
updated CONFIG _ NAME , CONFIG _ DEFAULT _ PATH , and modified fetchSize handling in QueryProcessExecutor and OverflowQueryEngine classes to improve
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify that the
removed the import of ExecutionContext from TaskletStep . java to eliminate unnecessary dependencies and improve code clarity
initialize the title variable to an empty string to ensure that the title value is properly initialized before usage
added empty body handling in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that the response body is properly set to null
deprecated the deprecated ` EmbeddedServerInstance ` interface in the ` io . micronaut . runtime . server ` package to indicate that the
[ jabref ] add registermacevents ( ) method to macadapter so it can be use to register mac event .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update Qualifier annotations to improve cl
modified the conditional check for Enum class type in HandlerLibrary . java to ensure proper handling of Enum types in the code
change hideUnprivilegedObjects from private to private final in PgConnection . java to ensure immutability of hideUnprivilegedObjects to
updated logging level from info to fine in ThreadedAcousticScorer . java and modified audio data source initialization in AudioDataSources
added a conditional check for Android Q and implemented saveGiphyAndroid11 method in IOUtils . java to ensure compatibility with Android 11 and improve
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 589 . fix
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replaced direct logger retrieval with a computeIfAbsent method to simplify the code and improve readability
deleted the DataOutputOutputStream class and updated import statements in HbaseObjectWritableFor96Migration . java to eliminate unused code to streamline the
updated transaction IDs in test cases from 1 to 2 in TestAcidOnTez . java to align test cases with the new database structure
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity for enhanced classes
added a method to retrieve the default provider name " AndroidOpenSSL " based on the RI status to ensure consistent provider identification across different platforms
added Captor annotation processing to instance fields in MockitoBeforeTestNGMethod . java to enhance test coverage by ensuring only relevant fields are
added checks for enabled class and method names in TestSuiteBuilder . java to ensure that enabled test cases are not present but may not exist
refactor GroovyAutoComplete and GroovyLanguage to improve prefix validation and import statements to enhance code readability and maintainability by reducing redundancy
added import for GraphHopperOSM and changed initialization method from GraphHopper to GraphHopperOSM to utilize the new OS
kristianrosenvold : add retry to http client in case of failure
changed the visibility of the mHideSysUiScrim variable from final to non - final and added a method to control the visibility of
added cancellation logic to the OkHttpCall class and updated related test cases to ensure proper handling of calls that were canceled before enqueuing a
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection logic for better user experience
make requestmatcher extend org . springframework . security . web . util . matcher . requestmatcher
added a new class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr . java ` to include ` IF
replaced testBoxedAndDevirtualizedTypes ( ) with testBoxingConstructors ( ) and testBoxingValueOf ( ) to
added unit tests for handling display metrics density qualifiers in DeviceConfigTest . java and refactored setDimensions method in DeviceConfig . java to
replaced IOException with RuntimeException and modified Timestamp initialization in ExternalViewReaderTest , PinotDataTypeTest , and PluginClassLoader classes to improve error handling
updated the icon resource in the RootCursor from a logo to a mipmap resource to enhance the visual appearance of the launcher icon
added content text setting to the error builder in FileUploader . java to enhance error reporting by providing clearer error messages
refactor ConcurrentHashMap class for improved performance to enhance efficiency of concurrent map operations
added methods to adapt UserTrades and retrieve user trades using the AbucoinsFill class to improve trade data handling and facilit
added a new condition to call removePlot and adjusted claiming logic in Claim . java , and modified player clearing logic in Delete . java to
alexeibarantsev : add support for htmlunit proxy to the htmlunit driver
added handling for VARBINARY data type in BlobType . java to ensure proper handling of VARBINARY data types in the database
refactor cookie version handling in SetCookieSupport . java to improve clarity and structure to enhance code readability and maintainability by reducing
added synchronized block around simpleTypeMap creation in LibFFIContext . java to ensure thread safety when accessing shared language resources
replaced ` Context ` with ` ContextInternal ` and updated thread checks in ` InboundBuffer . java ` to ensure compatibility with Vert .
updated timeout handling in LdapTimeoutTest and modified the killSwitch method to accept a timeout parameter to improve test reliability by allowing more time for
updated usage message from " UniocdeData . txt " to " UnicodeData . txt " in CharacterName . java and Properties .
camel - 14263 : camel - cxf - allow to configure the cxf operation name for the relay message . thanks to j
refactor multiple UI classes for improved consistency and organization to enhance maintainability and readability of the codebase
added handling for BoosterSet in ComponentAssemblySaver . java and modified return value in BoosterSet . java to ensure proper parameters are
added support for proxy authentication in JabRef . java to enhance security by allowing secure proxy connections
corrected the spelling of " BLOCKCHAIN __ " to " BLOCKCHAIN _ FORK _ COUNT " across multiple files to ensure
replace InternalError with a return statement for false in Class . java to simplify the code by explicitly returning false instead of throwing an InternalError for
removed unused imports and updated logging statements in TestIPCUtil . java to streamline logging functionality and improve code readability
removed chunkedTransfer handling from the HTTP client request method in NettyRoutingFilter . java to simplify the code by directly using the HTTP client directly
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that the attributes are cleared before processing new tokens
updated VerificationAfterDelayImpl to include polling period and added error handling to improve verification process reliability and error management during verification failures
added a compaction flag and modified the condition in the SemanticAnalyzer and SessionState classes to ensure proper handling of session compaction during query processing
[ zeppelin - 4892 ] fix interpreter group copy issue ( zeppelin - 4892 )
hbase - 25836 fix the bug of hbaseadmin . gettableregions ( ) in thrift server ( liang x
added an @ Ignore annotation to the PartialEscapeAnalysisTest class to temporarily disable the test for future development
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to
set content and error handlers to null in SimpleSAX . java to ensure proper resource management and prevent potential memory leaks
added release of headerBuffer to the ByteBuffer pool in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test file ` UseDiamondOperatorWithVarTest . java ` and modified ` Java17TypeSignatureBuilderTest . java
added a null check for the ResultSet before closing it to prevent potential NullPointerExceptions when closing the ResultSet
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 to ensure compatibility with the latest database versions
fixed bug 1242222 - usestringbufferlength do n ' t handle empty literal .
removed error logging statement from RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
refactor createDb method to return a Connection object and close it to ensure proper resource management and prevent potential memory leaks
rename CreateCustomMetric and ListResources classes and their corresponding test files to improve clarity and consistency in naming conventions
hbase - 25836 make max compaction size configurable
refactor BitstampDepositAddress handling and add a new DepositAddressJSONTest class for JSON unmarshalling to improve code clarity
replace IllegalStateException with response . abort ( ) in BufferingResponseListener . java to improve error handling by ensuring the response is aborted when the buffer
updated the method to use ` toAbsolutePath ( ) ` for linking paths in ` ProjectView . java ` to ensure correct handling of absolute
updated ` InvocationFinishedEvent ` class to implement ` MetricsEvent ` and modified ` DefaultMetricsRegistry ` to use ` ConcurrentHashMap ` for concurrent
refactor network interface iterator to iterate through available network interfaces to improve robustness by ensuring only supported multicast interfaces are returned
refactor the checkSum validation logic in ChangeSet . java to use a loop for better readability to improve code clarity and maintainability
added a clone ( ) method to the BufferedChecksumIndexInput class to ensure proper handling of the clone ( ) method in the IndexInput class
modify the return statement in the Circle class to include a radius parameter to ensure that the circle ' s radius accurately includes its radius value
added a condition to check if the frequency band identifier matches the download channel identifier in P25Channel . java to ensure frequency band is only set
renamed ` inTapSquare ` to ` inTapRectangle ` and updated related references to enhance clarity and maintainability by using a more
changed the DEFAULT _ REPLICATE _ ON _ WRITE constant from true to false to disable repeated operations on write operations
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated and enhanced date formatting in CryptoFacilitiesTradeServiceRaw to enhance security by allowing
added ` getDelegate ( ) ` method to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests in ` TraceCallableTests `
refactor error handling in FileActivity and FileDisplayActivity to use result . getMessage ( ) instead of errorResponse to improve clarity of error
added a method to write data to a stream in ForeignIncubatorQuicheConnection and JnaQuicheConnection to enhance functionality
added a boolean parameter to the JavaScriptContext constructor to enable conditional evaluation of the JavaScript context
removed unnecessary alignment parameters from TableCell constructor calls to simplify the constructor signature and improve code readability
added a new file ` TracingAutoConfiguration . java ` to configure Spring ' s tracing configuration to facilitate auto - configuration of tracing
replaced the direct addition of content to a Para object in Submissions . java to improve clarity and maintainability of the code by
refactor ` getPrunedQueryableSegments ` method to accept a list of ` IndexSegment ` instead of a list of ` Queryable
refactor VertxBufferTest class to improve code readability to enhance maintainability and facilitate future development
fix bug in messagesubmissionchunk . readmessagedateextrahyphensubmissionchunk ( ) when read message date
changed the visibility of the mContext variable from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation and ShowViewsOperation to clean up the code and improve readability
added a new class MongoDataIntegrityViolationException to handle data integrity issues to ensure proper exception handling for MongoDB - specific data integrity issues
[ hotfix ] fix checkstyle violation in jobcoordinationservice
refactor ` bitsToHumanReadable ` method to ` bytesToHumanReadable ` and add a new ` mimeType2HUmanReadable `
replaced the instantiation of MergePolicy with a new instance of TieredMergePolicy and added a test method for pathological merges to simplify
added a conditional check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is disabled
konduit : improve error message when binaries can not be run on a cpu without these instruction
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter for reference properties loading to allow for more flexible handling of resource
added null checks for incoming fields , TermsEnum , DocsEnum , and LeafReader in FilterLeafReader . java to ensure that null inputs
add key size calculation to JceCRMFEncryptorBuilder and add a test for key sizes in AllTests to ensure correct key size management
updated IOException instantiation to include the message of the exception instead of the original exception to improve error handling by providing more context on the exception message
remove javax . inject . Inject annotation from multiple Java classes to streamline code by eliminating unnecessary dependency injection
updated the expected size of the BundledDistributionTest and added assertions for database users in PostgreSQLTest to ensure accurate validation of user attributes in the
[ flink - 20613 ] [ stream ] add pipeline . name config option to specify pipeline name for printing and logging
updated scaling calculation logic in OverviewState . java to differentiate between two - panel and one - panel configurations to improve layout scaling accuracy based
change IcePlainsBiome to extend SnowyBiome instead of GrassyBiome and add a PopulatorTree for
removed unnecessary ` zone ` parameter from ` StorageUtils . getMaxTime ` and ` getMinTime ` methods in ` StorageUtils . java ` to
[ j2kt ] add the ` ` isqualified ' ' flag to the ` thisreference ' ' constructor , and update the ` `
updated regex pattern in XhamsterRipper . java to allow additional characters after the ' wmde ' to ensure accurate matching of the
refactor loops to use an ArrayList for storing GlowEntity objects to improve efficiency by reducing redundant iteration over entities
hhh - 15936 - OracleDialect . java : fix table name generation for non - empty schema
fix a typo in the console filter ' s path validation logic . ( # 1193 )
added support for selecting and deselecting all files in the FileMenuFilter class to enhance user experience by allowing users to select and deselect
[ java ] : fix term offset calculation for network publication .
refactor GuildUpdateOwnerEvent class for improved clarity to enhance maintainability and readability of the code
limit inPortalTicks increment logic based on whether the player is a creative or not to ensure inPortalTicks does not exceed 80 to prevent potential
added support for compressed data in the ClusterMonitorTileSkin by introducing a compressed flag and modifying chart spacing calculations to enhance visual clarity and
refactor multiple codec templates for transaction management to improve code organization and maintainability
changed variable types from int to long for length calculations in Base64 . java to prevent potential overflow when handling large binary data sizes
removed a null check for the header variable in RendererConfiguration . java to simplify the code by eliminating unnecessary null checks
server : do n ' t update disk offering if volume already have it and it ' s custom service offering
updated import statements in Order . java and HitbtcAdapters . java , and modified how order builders are created in LimitOrder . Builder
rename idleCount to consecutiveIdleCount in LLRealtimeSegmentDataManager . java to improve clarity and consistency in naming conventions
updated the description of the JRuby scripting service in JRubyScriptEngineFactory . java to clarify the purpose of the service for
updated the handling of the display name in ConfigCategory . java to improve clarity by using a more descriptive variable name
updated the condition in ` ParticipateAssetIssueActuator . java ` to include an additional check for negative values to ensure accurate handling of
added a loop condition to limit the iteration count to 10 in FeedUtils . java to optimize performance by avoiding unnecessary iterations
added a new test method ` testHDF4 ` to the ` HDFParserTest ` class to ensure compatibility and correctness of HDF4
added a new constant ` CALCITE _ 6092 _ FIXED ` and modified casting checks in ` SqlOperatorTest . java ` to
removed unnecessary whitespace in the conditional statement for file and languageServer checks to improve code readability and maintain consistency
added a new method ` quietCloseAll ` to ` CloseHelper ` for closing multiple ` AutoCloseable ` objects to facilitate
updated confirmation resource resource in RemoveFileDialogFragment . java to use a common yes string instead of a hardcoded value to improve user experience by
added a null check for srcWidth and srcHeight before applying drawImage to avoid potential NullPointerExceptions when drawing images
replaced ` ReflectionHelpers ` with ` ProtectionDomain ` and added a method for invoking ` defineClass ` in ` UnsafeAccess . java
updated regex pattern format in GUIUtil . java and added new test cases in GUIUtilTest . java to improve regex accuracy and ensure proper validation
replace boolean ' conflict ' with a long ' conflicts ' in CachedRowSetWriter . java to track the number of row conflicts and improve error
update version handling in SdkConfigurationNotificationProvider and FlutterSdk classes to use constants instead of static constants to improve code readability and maintainability
added a conditional check for reference equality in ReferenceMemory . java to ensure that references are only assigned when the current reference is equal to the current
added seed file handling and improved error logging in Injector . java to ensure robust injection process and provide clearer error messages when no seed files
added a condition to check if the original view should be hidden in the FloatingIconView class to ensure that the original view is not hidden
updated the calculation of maxNodes and adjusted maxTrips condition in DefaultLoopPolicies . java to ensure maxNodes does not exceed a valid range
added support for texture coordinate type checking in CombinedTexture and implemented a corresponding method in UVCoordinatesGenerator to improve error handling and provide clearer
added error handling for file deletion in EncodeActivity and improved null checks in DecodedBitStreamParser and MatrixUtil to enhance robustness by
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality for seeking and closing partitions in the tracing framework
updated the SQL update statement to use the oldPrefixLength variable instead of the existing prefix length to improve clarity and maintainability of the code
replaced the addition method of convertedValsList with a direct instantiation of ArrayList to simplify the code and improve readability by eliminating unnecessary
added a deprecated constructor to the AbstractTimer class to indicate that the AbstractTimer constructor is outdated and should no longer be used
added a nightly warning dialog to the MainWindow that indicates that the Universal Gcode Sender is a nightly build to inform users
added a condition to check if the email is a general question and modified the getResponsesSortedByRecipient method to accept a sortByTeam parameter to
corrected a typo in the return statement for unnecessary ` throws ` declarations to improve clarity and accuracy of the error message
deleted CacheApplication . java and related classes to replace CacheController with CacheController in CommonsApplication . java and ShareActivity . java to stream
replace realObject ' s getApplicationContext ( ) method with RuntimeEnvironment ' s application method in ShadowContextImpl . java to ensure compatibility with the
refactor StatisticsServlet to improve code structure to enhance maintainability and readability of the codebase
updated configuration handling in RuntimeEnvironment for KitKat and above to ensure compatibility with devices running Android KitKat and above
added a constant for the existence of the stack repository update link in VersionDefinitionResourceProvider . java and a corresponding test in StackManagerTest .
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during index index handling
added " com . sun . org . apache . xml . internal . resolver . helpers . " and " com . sun . org . apache
renamed the method ` save ` to ` add ` in multiple classes to clarify the method ' s purpose to accurately reflect the
fix loop exit node when enter a loop in a loop .
replace RecyclerView with WidgetsRecyclerView and update related methods in SearchAndRecommendationsScrollController . java to improve code clarity and
added a check for terminal support in ConsoleReader . java to ensure compatibility with terminal - related functionality
changed the data type of ` timeAllowed ` from ` Long ` to ` Integer ` and updated related methods in ` LBHttpSolrClient
added a session validation check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure session data is valid before proceeding with the
added null check for ` columnNames ` in ` ChangedIndexChangeGenerator . java ` to avoid potential ` NullPointerException ` during index modifications
replaced Vector with ArrayList for buttons and added action listener methods to improve performance and flexibility in handling radio buttons
refactor UserManagerCompat and related classes to extend UserManagerCompatVM and UserManagerCompatVNMr1 to improve compatibility checks and
added getDatabaseMajorVersion ( ) and getDatabaseMinorVersion ( ) methods to MockDatabase , AbstractDatabase , Database , and HibernateDatabase classes to
added MAX _ MISMATCH _ RULES _ TO _ PRINT constant and refactored error handling in ActionGraphCache . java to
added new classes LockDatabaseDesc and UnlockDatabaseDesc to handle database lock and unlock operations to provide a structured way to manage database operations in the
updated RankingTopComponent , RankingUIModel , RankingToolbar , and RankingUIModel to use setter methods
added handling for disconnect messages in HandshakeHandler and updated logging in NodeImpl to improve connection stability and enhance logging clarity
added a test method for setting and deleting storage groups in IoTDBAuthorizationIT . java and implemented the DELETE _ STORAGE _ GROUP privilege in
chore : [ documentai ] replace google : : cloud : : d with google : : cloud : : d
added variable declaration validation logic and improved error messaging for missing types to enhance type validation accuracy and provide clearer feedback on variable types
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to enhance test execution flow by allowing
refactor CountersManager to use wildcard imports and improve buffer validation logic to enhance code readability and maintainability by eliminating unnecessary complexity
updated the ` toString ` method in ` MultiSteps ` and ` SendEmail ` to include a placeholder log statement to improve logging readability and
added null check and cloning for joinKeys in JoinDesc . java to ensure proper handling of join keys when they are not null
added PrincipalResolver dependency to WebAuthnConfiguration and updated registration method to use it to enhance authentication handling with the default principal resolver
added search paths parameter to ` addSettingsFromFile ` method and refactored test cases in ` XcconfigParserTest ` to enhance functionality
added ' final ' modifier to several variables in Oracle . java to ensure immutability of these variables and improve code clarity
[ hotfix ] [ doc ] disable unaligned checkpointing option
fix unsupportedoperationvisitor to throw illegalargumentexception if function be not support
refactor TTY . println calls to use a new println method for better readability and logging to improve code maintainability and reduce duplication in
added a check to ensure ` lValue ` is an instance of ` LocalVariable ` before proceeding with further operations to prevent runtime exceptions
added support for MySQL in the CreateTableGenerator to append " NULL " for timestamp columns to ensure proper handling of timestamp values in MySQL databases
added context class loader management and disposal logic in EnvConfiguration . java to ensure proper class loader management and prevent potential memory leaks
added a condition to set the ejection delay based on stage number in SimulationListHandler to ensure the motor ' s ejection delay is
updated method names and class definitions in SpringApplicationTests to use BeanDefinitionOrderRunnerConfig instead of FunctionalRunnerConfig to improve clarity and
refactor TransactionUtil2 class to improve code structure to enhance maintainability and readability of the code
refactor issuer handling in multiple classes to use ` Optional < OAuthRegisteredService > ` instead of ` JWTClaimsSet ` to enhance flexibility
added null check for the DocCollection reference before returning its string representation to avoid potential NullPointerExceptions when coll is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` to ensure
added support for foreign database and schema names in ForeignKeyColumn and ForeignKeyColumnMutator classes to enhance functionality and flexibility in managing foreign database and schema
[ java ] throw a timeout exception when a leader join fail to join live log .
replaced the static import of ` Shadows . shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity ` and `
refactor FileSelection . java to handle null and empty root cases and add a new WILD _ CARD constant in TestBugFixes
mark item and itemstack . oninventorytick a deprecate since 1.20 . 1
refactor output stream handling in Export . java and IOUtil . java to use ByteArrayOutputStream and add WarResource support in IOUtil . java
added a null check before invalidating the options menu in SingleUploadFragment to avoid potential NullPointerException when getSherlockActivity is not initialized
updated widget binding logic in Launcher . java and PendingAddItemInfo . java to handle options more effectively to improve flexibility in widget binding
added new capability strings for air pressure , quality , co2PPM , and VOC _ PPM in EcobeeSensorThingHandler
refactor formatting and formatting in OperationSetServerStoredContactInfoFacebookImpl . java to improve code readability and maintainability
added environment variable " AAPT " and " AAPT2 " to the environment variables in Genrule . java and updated test cases in Gen
truffle : do not dump access table in graaltruffleruntime if the compiler option be not set .
added a null check before disposing of the message object to prevent potential NullPointerExceptions when disposing the message
modified access modifiers and initialization methods in TronStoreWithRevoking , TxCacheDB , and Manager classes to enhance encapsulation and improve
updated warning messages in CoreContainer . java to provide clearer context on log watcher issues to clarify the purpose of warnings related to log
replaced printStackTrace calls with return statements in CategoryPlotTests . java to improve error handling and clarity in test cases
refactor IOSImplementation to use SmallByteArrayOutputStream for byte array writing to improve memory efficiency and avoid potential NullPointerExceptions
updated attribute handling in OGLESShaderRenderer and Shader classes to use IntMap instead of HashMap for attribute retrieval to improve performance and
updated JDBC connection configuration to use " shutdown = true " instead of " close = true " to ensure proper resource management and prevent potential memory leak
camel - 14263 : camel - jbang - display first and last exchange completed timestamp if it ' s null .
updated TestHtmlTag and TestUseOption to include locale default language and added new classes in C1 and C2 classes to enhance testing capabilities
added a condition to check if the result is incomplete and the size of items exceeds 10 to ensure proper handling of incomplete or incomplete items in the
updated usage message and added time column name handling in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and functionality of the hybrid
updated output format handling in SiteSnapshotVariationsTest and OutputOptions to support different file extensions to ensure correct file extension is used based on the
updated conditional check for QSB enable in DeviceProfile . java to simplify logic for better readability and maintainability
added ` equals ` and ` hashCode ` methods to ` AnimationList ` class and updated equality checks to use ` Objects . equals ` to improve
added a ` _ date ` field and its setter method to ` AbstractGenerator ` , ` Generator ` , and ` HttpConnection ` classes to
replaced Adler32 with CRC32 for improved performance to enhance performance by using a more efficient CRC32 implementation
changed the default value of the XenHeartBeatInterval configuration from " any # of seconds " to null to ensure compatibility with the
added a new warning constant for ZERO _ AREA _ FIN and refactored geometry warning handling in FinSetCalc . java to improve cl
[ beam - 10611 ] add support for json serialization of documentmetadata in elasticsearchio
hhh - 14616 add trunc ( ) and datetrunc ( ) function to the common function factory
added a check for " memory . " error message in MetricUtils . java and updated error handling in MetricUtilsTest . java to ensure proper
modified the ` ensureSignedUp ` method to include a ` useJavaScript ` parameter and improved exception handling in ` UserContext ` to enhance
updated error messages to include enclosing names for annotated types in ValidationTask . java to enhance clarity and maintainability of the validation task ' s
[ te ] change the backfill endpoint from " / generateanomaliesinrange " to " / replay " to improve the rest
updated DataWord instances to use a variable ID of 1 instead of a new one and modified return statements to include a new data element to ensure
refactor the update logic in AllAppsContainerView to iterate through child views instead of adapter items to improve code clarity and ensure proper badge
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated context startup comments in ResourceHandlerTest . java and ServletContextHandler . java to clarify behavior after ContextHandlerCollection is started to ensure
removed conditional check for custom workspace identifier in Cling . java to simplify code logic for better readability and maintainability
truffle : remove assert that lookupmodule be n ' t null .
added an @ Ignore annotation to the shadowInvocationWhenChildIsInstrmentedButUnshadowed method in ClassicSuperHandlingTest . java
updated import statements in ItBitDemoUtils , ItBitOrderBookDemo , ItBitTickerDemo , ItBitTradesDemo , and It
ww - 4640 make sure session reset parameter be not null
added ' final ' modifier to class constructors in Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes to enforce immutability for
cloudstack - 5242 : fix potential resource leak in objectinputstream ( )
replaced the usage of ` o . getClass ( ) . getName ( ) ` with ` java . util . Vector ` and ` java .
add table type to warn log for invalid retention time
added trimming of whitespace to fragmentList checks to ensure that only non - empty strings are processed to avoid potential issues with leading or trailing spaces
update file path retrieval in ResourcePackFileNotFoundException to use modFile ' s getFilePath ( ) to ensure correct file path is used for resource pack
refactor PartitionToolbar to improve handling of TransformerBuilder instances and update button text formatting to enhance code readability and maintainability while ensuring correct label
refactor condition checks in RecentsView . java for better readability to improve code clarity and ensure proper task view visibility during scrolling
refactored the calculate method to return a BMIViewObject instead of a Map to simplify the method signature and improve the handling of B
removed the use of Comparator . comparing for comparison in QueryCommand . java to simplify the comparison logic for better readability and maintainability
fix damage for hay bale block ( # 1193 )
refactor environment variable handling in WindowsProcessAddressSpace , J9DDRImageProcess , and NewElfDump classes to improve clarity
added support for custom plugin properties in OptionsParser and updated configuration options in ConfigOption to enhance flexibility in managing plugin configuration options
update hashTable check from ` hashTable ` to ` hashTable . isEmpty ( ) ` to ensure proper handling of empty hashTable instances
added tests for Timestamp class to validate timestamp representation to ensure correctness of timestamp representation and improve test coverage
[ java ] remove unused variable archiveCtx in clusteredserviceagent . java .
added a condition to check if the compiler is not compiled before proceeding to ensure that the code only executes when the compilation threshold is met
added new test methods for image 2 in AbstractTest . java and updated related test cases in GeoRasterOnlineTest . java to enhance testing coverage
refactor TogglableFlag to use a constant for namespace launcher and add a change listener for default value retrieval to improve code readability
updated log messages to include placeholders in DockerClientFactory . java to improve logging clarity by providing more context in error messages
added a conditional check to return early if the current platform is ANDROID to optimize performance by avoiding unnecessary processing for Android devices
updated assertions in RoutesTest to use assertThat for better readability to improve code clarity and maintainability by using a more descriptive assertion
added new functional interfaces BytePredicate , FloatPredicate , ShortPredicate , and ShortToLongFunction to the com . speedment . common . function package
updated the ` getSubsColor ` method to return a string instead of an integer and added logging for bitrate limits in multiple video classes to
added a conditional check before deregistering the invocation from the invocation registry to ensure the invocation is only deregistered when the future is complete
replaced the creation of ` ControlFrameBytes ` with a direct output method call in ` AbstractWebSocketConnection . java ` to simplify the code
added a conditional check to start the welcome activity only if the intent ' s redirect flag is set to ensure that the welcome activity is only displayed
added a new class ` ShadowCheckedTextView ` to handle the ` CheckedTextView ` functionality in ` Robolectric ` to provide
added Serializable interface to ParserState and made cache fields transient in AccessorProperty and Property classes to ensure serialization compatibility and prevent memory leaks
added a new certificate entry " identrustdstx3 [ jdk ] " to the VerifyCACerts . java file to enhance
removed redundant setting of TEMPDIR _ CONFIGURED and TEMPDIR attributes in WebInfConfiguration . java to streamline code by eliminating
added import for StringUtils and updated occupant nick assignment in Occupant . java and MultiUserChatTest . java to utilize the
updated the QuicSession constructor to include an additional ` context ` parameter across multiple classes to enhance connection management by allowing context - based access to
updated MergeScheduler and merge policy configurations in CreateIndexTask . java to use configuration properties instead of hardcoded ones to improve flexibility and maintain
refactor variable names and improve readability in ICU4JImpl and TextPosition classes to enhance code clarity and maintainability by standardizing
added handling for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange . java and AbstractDatabase . java to improve type handling and
refactor NbtScoreboardIoService to improve code organization to enhance maintainability and readability of the code
saml metadata resolver : resolve service provider metadata via classpath
changed visibility of ` printer ` from private to protected and refactored the ` createPrinter ( ) ` method in ` GraphPrinterDumpHandler
added a method to divide the fieldCashAmount by 8 and set the average price of the order based on it to ensure that the order
updated fields handling in ProjectionOperation and TypeBasedAggregationOperationContext to use Field objects instead of String names to improve clarity and consistency in field
modify the implementation of the ` addViewer0 ` method to check if ` viewers . contains ( player ) ` before adding a player to
added constant state management to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve memory efficiency and maintainability of drawable constant state management
refactored the creation of AsyncSPDYConnection and SSLEndPoint to use a new session controller in SPDYClient . java to
[ 3.0 ] fix nullpointerexception in protostuffobjectoutput . writeobject ( null )
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code structure to enhance maintainability and readability of the code
ggb - 2321 fix for axis that do n ' t appear in the view .
replaced ` setFilter ` and ` setWrap ` methods with ` unsafeSetFilter ` and ` unsafeSetWrap ` methods to improve performance by
xmlworkflowserviceimpl : fix typo in returntoworkspace ( )
added SSL support for HTTPS connections in CustomUrlJob . java and created a new CustomUrlTrustEverything . java file to enhance security by
refactor EncodingConfigurationTableModel to use getRealUsedClockRateString ( ) instead of getClockRateString ( ) for better clarity to
updated TextureAtlas class implementation to improve texture rendering efficiency
updated ` getProductNameForBuildTargetNode ` to ` getModuleName ` and added a method to set the module name in ` AppleLibrary
add lock and release logic in TestSlot . java to ensure proper resource management and prevent potential memory leaks
no effective change - add support for findidswithinheritance for subqueries
replaced the variable ` closeFrame ` with ` rbuf ` for reading from ` in ` WebSocketServletRFCTest . java ` to
[ wasm ] make reference multi - value stack clear properly .
added a TTL parameter to the ` ClickHouseLogCollectClient ` and its corresponding getter and setter methods in ` ClickHouseLogCollect
changed serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper and added serialization methods in CustomPreconditionWrapper to
updated DeploymentExceptionTest . java to use Server and HandlerCollection instead of Executor and added server startup and stop methods to improve server management and resource
added error handling for Fresco initialization in CommonsApplication and modified vectorDrawable initialization in NearbyController to improve robustness by handling
added a null and empty check for objectName before returning it to avoid potential NullPointerExceptions and ensure objectName is not empty
improve error message when file can not be open
[ hotfix ] [ table - planner - blink ] fix class name conflict in environmentsettings
updated variable names and added null handling for subject names in KeyTool . java and Resources . java to improve code clarity and prevent potential NullPointerException
added a deprecation annotation to the RuntimeOptions class to indicate that the class is outdated and will be removed in future versions
replaced ByteBuffer encoding with direct string conversion for UTF - 8 encoding to simplify code and improve performance by directly using string . getbytes
added a new interface PermissionEvaluator with a method to check permissions to provide a mechanism for determining if a user can access a specific permission based on
added a new option ` ERASE _ LINE _ ON _ FINISH ` and modified ` BRACKETED _ PASTE ` to
changed the condition from checking if the server is not in onlineServers to checking if the server is not online before proceeding with further operations
updated P2pException types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _
refactor URL connection handling and improve error handling in ExpandWar . java to enhance code clarity and maintainability by using a more descriptive
fix ( http ) : fix decode of response body after handler complete
changed the container centering method from center to centerAbsolute in Picker . java to ensure the wrapper aligns correctly with the absolute layout
refactor recycleMemorySegments method to accept a size parameter and add a new test for requesting memory segments in NetworkBufferPool to improve memory
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper management of the MBeanServer
replaced JUnit runner annotations with a custom RetryTestRule in AbstractIT . java to enhance test reliability by allowing retries during tests
refactor ` QueryStateMachine ` to use ` TransactionManager ` for auto - commit checks instead of a boolean auto - commit flag to improve
updated import statements in CsvFieldType , CsvTable , CsvTableScan , and CsvTest files , and added a new package - info . java
added support for " javax . microedition . khronos . opengles . GL " in the InstrumentationConfiguration to enhance
[ hotfix ] [ test ] remove unnecessary generic in streamtasktestharness
updated URI handling in Request . java and added a new test for HTTP CONNECT method in RequestTest . java to ensure correct URI retrieval and validate
updated KEY _ LAST _ SEEN _ VERSION _ CODE to use ` WhatsNewActivity . KEY _ LAST _ SEEN _ VERSION _
added methods to handle session availability and unavailability in SessionManager to improve session management by allowing priority changes for available and unavailability sessions
added a package to scan for " liquibase . pro " in ServiceLocator . java to enhance package management for Liquibase pro
replace the ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` in ` MainApp . java ` and update its implementation to simplify
modified the ` loadWithNewGlobal ` method to accept an additional parameter for better flexibility to allow for more flexible loading of global objects
simplified path matching logic in FastPathResolver . java to improve readability and maintainability of the code
replaced direct calls to ` footer . length ( ) ` with ` getRetainedSize ( ) ` in ` HiveClientModule . java
updated method names from ` hasRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple classes to clarify the purpose of the method
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java and a corresponding test in TestWindowFrame .
added a method to clear the proxy request headers to ensure that the proxy request headers are properly cleared before processing
added a conditional check to skip processing if SA attach is not expected to work to ensure that the test only proceeds if the SA attach is
added null check for bgColor before checking its alpha value in GraphicsDevice . java and created a new TranslucentWindow . java class with
added null checks for user information before populating user info elements in UserInfoActivity to improve user info handling and provide clearer error messages when no
added custom field behavior for precompiled headers in PrecompiledHeaderData . java and removed a precondition check in PreprocessorDelegate . java to ensure
[ hotfix ] [ table - common ] add update - mode to kafka table source sink factory
added a new integration test class MultipleOutputsIntegrationTest for testing multiple output groups to ensure that named outputs are correctly built and used in source files
updated regex pattern in FileSettings . java and added conditional content handling in FileSettings . java to ensure proper formatting of settings when the content differs
nifi - 1748 : fix regression in statelesscontrollerserviceinitializationcontext when provide flowconfiguration via json
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added @ TaskbarModeSwitch annotation with persistent mode to TaplTestsQuickstep . java to enable persistent taskbar mode switching in the
added new device status entries for leaving dock and energy save mode in DeviceStatus . java to enhance device status management for better user experience
improve error log if item model can not be load from the blockstate
removed redundant import statements and added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to streamline code by eliminating
fix ( opengl ) : do n ' t call getcurrentsurfacescale for 2x graphics
refactor RussianLowerCaseFilter class for improved readability to enhance maintainability and clarity of the code
updated ` CsvBulkLoadToolIT ` and ` QueryUtil ` to use ` HConstants . ZOOKEEPER _ PORT _ ATTRIB
replace ` File . separatorChar ` with ` File . pathSeparatorChar ` in ` FileDisplayActivity . java ` to ensure consistent file path
changed the access modifier of ` in ` and ` inRead ` variables from private to protected and added a ` ResettableInputStream ` class to
added support for repeatFirstLineIndent in ColumnText . java to improve indentation handling for better readability and maintainability
cast the ` oid ` to ` Object ` before comparison to ensure proper type handling and prevent potential ClassCastException
refactored the configuration setting logic for metrics tracker factory and health registry in HikariPool . java to improve code readability and maintain
use controlflowanchored instead of controlflowanchornode to avoid infinite loop
added functionality to disable focus painting for buttons in WindowsPlacesBar to improve user experience by preventing unnecessary focus updates
added a check for ForeignKey and UniqueConstraint in DatabaseSnapshot . java to ensure proper handling of the backing index case for primary keys and foreign keys
deprecated the ` getAccountLedgersWithParams ` method in ` KucoinAccountServiceRaw ` and added a new method in ` AccountAPI `
[ cst - 3649 ] remove dc . title from group creation ( # 3649 )
added a check for empty utterance words before returning a HypothesisUtterance to improve robustness by handling cases where no words
added unit test base on user forum issue
updated thread management in FeedRefreshUpdater to use databaseUpdateThreads instead of backgroundThreads to allow dynamic adjustment of the number of database update threads based
updated FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 milliseconds to increase the fast scrolling threshold for better user experience
updated the system class name from ` System . class . getName ( ) ` to ` Ljava / lang / System ` to ensure the correct
hhh - 13644 - provide a way to get the result stream of a stored procedure call
updated the initialization of ` apiProperties ` to check for null before initializing it to avoid potential NullPointerExceptions when ` getApiProperties ( ) ` is
added two new classes ` BinaryFrameGenerator ` and ` TextFrameGenerator ` to handle WebSocket binary and text frames to provide a structured way to
danielwagnerhall : use ` ` until ' ' instead of ` ` localdriver . findelement ( ) ' '
replaced random double calculations for lat and lon with random boolean conditions in RandomGeo3dShapeGenerator . java to improve randomness and prevent
added a keepAlive method to manage the ClassLoader reference to prevent potential memory leaks during resource loading
changed the return value from false to true in SQLiteDatabase . java to reflect the successful operation
added support for handling the " Ljava / util / concurrent / " signal in the ` FindJSR166LockMonitorenter
added MkdirStep to multiple classes and updated steps in FatBinaryTest to ensure the correct parent directory is created for output files
improve error message when call meshleveler . createsurfacemesh ( x , y ) .
[ drools - 5242 ] avoid kie - pmml compilation if jpmml be not available on classpath ( # 524
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure the correct check for thermal status during shutdown
added OS _ MAC _ TMP _ DIR constant and modified temporary directory creation logic in MountableFile . java to ensure compatibility with macOS
added a memory map buffer configuration and modified geometry factory assignment in PrjFileReader and CatalogManager to conditionally use it to improve performance by
added a null check for the organization in the model to ensure that the Plugis are required to have a valid organization in the pom .
updated the copyright notice file in SepPostingsWriterImpl . java to clarify the purpose of the notice file distributed with the license agreement
deleted the TerminateWebSessionListener . java file to remove unused session termination functionality
updated the argument in the executeChildProcess method to use the Java class path instead of a hardcoded string to ensure compatibility with the application '
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv ,
added a test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` to ensure that the ` java ` method does not
changed the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the launcher 3 functionality by default
added a new ` < div class = ' noPrint ' > ` in the ` HtmlThreadInformationsReport . java ` file to provide
updated Lucene version from 3.1 to 4.0 and updated TEST _ VERSION _ CURRENT from LUCENE _ 31 to L
added macosx symbolicator and task variables to BsdDebuggerLocal . java and modified platform condition check in PlatformInfo . java to support
improve memory management by use a weakreference to prevent memory leaks .
do n ' t log error for connection reset by peer in networkdispatcher
[ java ] initialize admin buffer when there ' s no conductor bytebuffers .
added a break statement in the TouchImageView . java file to ensure the loop terminates when a specific condition is met
chore : [ dialogflow ] update go _ package to match open source code ( # 113 )
removed SSL filter handshake listener and streamlined flush logic in FeedableBodyGenerator . java to simplify the code and improve performance by eliminating
added handling for " java . lang . Object " and " java . lang . GenericTypeVariable . Variance . CONTRAVARIANT "
replace NonBlockingHashSet with ConcurrentSkipListSet in memtablesPendingFlush to improve performance by using a concurrent set for memtables pending flush
added null check for ` tree . errs ` in ` MemberEnter . java ` and modified error handling in ` JavaCompiler . java ` ,
changed the browser style from SWT . NO _ BACKGROUND to SWT . NONE in BugInfoView . java to simplify the browser ' s
replaced ` finish ( ) ` with ` dialog . cancel ( ) ` in the ` AboutActivity . java ` to ensure the correct
modify calculations in IntegerStamp to handle negative values and add unit tests in IntegerStampTest to ensure accurate division logic and validate the functionality of the
added a private method ` readStream ` to ` ITextUserAgent ` for reading an image stream to improve code readability and maintainability by
added functionality to define and undefine local variables in CaseStmtToken and updated related classes to enhance variable handling and improve switch functionality
added exception handling for cipher initialization in RSAClientKeyExchange . java to ensure robust handling of unsupported operation exceptions during key exchange
updated the " AdditionalDependencies " attribute in WinGammaPlatformVC10 . java to include " psapi . lib " to ensure compatibility with the
updated StringUtilsTest . java to use system . getProperty ( " line . separator " ) for better readability to improve code clarity and maintain
added compatibility and output encoding settings in TemplateEngineFreemarker and modified malicious javascript string formatting in ApplicationController to ensure proper handling
refactor byte array handling in CRDGeneratorTest . java to improve readability and logging to enhance code clarity and facilitate
make samplesenderfactory non - static so that it can be reuse by other instance .
added a check for the " testngEmailableReporter " system property before adding the emailable reporter to ensure the emailable reporter is only
added a quoted boolean variable and updated conditional checks in CommandLineBuilder . java , and added a new test in CommandLineBuilderTest . java to improve
removed ` public ` access modifier from several interfaces in ` Clock ` , ` DelegatingGauge ` , ` MetricProducer ` , and ` V
added a line to set the number of reduce tasks in FreeGenerator . java to set the number of fetchers for the job configuration
refactor default value handling in SchemaGeneratorHelper by introducing a new method to retrieve field values from ObjectValue to improve code clarity and
updated FILEVERSION constant from " 505365 " to " 532077 " to reflect the new version of the file system
added support for " GL _ ARB _ texture _ float " extension in FloatTextureData . java to ensure compatibility with OpenGL 3.
make fileserver . write ( filename , string value ) synchronize and closefile ( filename )
added a null check for outputDirectory and jarStream before setting the output directory to ensure the output directory is set only when both outputDirectory and jarStream
added PerfStatsCollector to measure SQL execution execution in ShadowSQLiteConnection to enhance performance monitoring for SQLite operations
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java
added a new enum ResourceErrorHandling with OGC _ EXCEPTION _ REPORT and SKIP _ MISCONFIGURED _ LAYERS to provide resource
added a condition to check if the position is within the buffer size and implemented EOFException handling in TestRAMDirectory . java to ensure correct buffer
improve error message when a resource be not find
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and added AccessControlContext class for permission testing to enhance security
updated CHECK _ EVERY _ N constant and added logging for free memory checks in HardRefCache to improve memory management and enhance debugging capabilities
hbase - 26965 testsplittransaction fail on hudson due to hregion . openhregion be n ' t call
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is not initialized
added a parameterized test for Jaas DemoModules in DemoModulesTests . java to verify proper configuration and environment configurations for the Jetty
added span checks for folder creation and spacing in CellLayout . java to ensure proper alignment of cells based on dimensions
modified CacheOffHeap . java file to improve performance and memory management
added dependency checking for tables in CreateTable . java and implemented a new test for referenceingLaterTable in TestCases . java to ensure compatibility
added a check for ` currLayerHeight ` before parsing ` value ` and ignored extra XML gid values in ` TiledLoader . java `
made the setWorkingSet method synchronized to ensure thread safety during job setting operations
added a new Java class named Solution that reads two integers and calculates the minimum and maximum steps to implement a solution for a given number of steps
added a new AddressChecker interface and modified TrackerRequestProcessor to utilize it to improve address checking functionality for announce requests
[ 1.19 . x ] remove translucent rendering from multi - layer model ( # 11920 )
added a method to remove tags from a string in GuiConfigEntries . java to improve text formatting by allowing users to remove specific tags from
change the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` , ` Capability ` , and
added null check for recieptents before sending a mail to avoid potential NullPointerExceptions when recieptents is null
refactor the isSingle method to use a dedicated method instead of direct assignment to improve code readability and maintainability
updated DockerClientFactory to conditionally use a failFast client parameter and improved logging in RemoteDockerImage and ImageFromDockerfile to enhance
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated its usage in ` RobolectricTestRunner ` to
http : / / code . google . com / p / mybatis / issues / detail ? id = 666 : dateutils .
updated import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure compatibility with the new
added handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for command failure scenarios
refactor TreeMap class to improve readability to enhance maintainability and ease of understanding for future developers
added methods to enable and disable asynchronous stack trace in the display class to improve stack trace management and error handling in the application
added a method to set the glow color in BubbleTextView and updated folder ' s glow color in Folder to allow dynamic adjustment
added style classes for link and desc in LinkedFilesEditor to enhance the visual appearance of the file row in the user interface
removed a return value of " java . lang . Short " in AbstractJdbc2ResultSetMetaData and added a test for class names matching in ResultSet
removed IOUtils . deleteFilesIgnoringExceptions from Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify file writing
added null check for _ info in upgrading condition to avoid potential NullPointerException when _ info is null
added a constructor to ShadowLocation that initializes the provider string to facilitate the creation of ShadowLocation with a specific provider
updated the condition for setting maxRAM to include a check for deviceRam to ensure maxRAM is only set for 32 - bit
add empty _ local _ map _ stats when there be no data for a map
added logging functionality to FileProfileActivator by implementing LogEnabled and adding logging for file existence and missing checks to enhance visibility into file activation process
change the name in the addToBody method from " noname1234 " to " invalid _ " in PdfWriter . java to improve clarity
replaced ` Collectors . toList ( ) ` with ` Collectors . toSet ( ) ` for role retrieval in ` GuildImpl . java `
updated return values in ExpandableUploadListAdapter . java and modified array length checks in ExpandableUploadListAdapter . java to ensure correct handling
added unit tests for the delete method in DashboardUserMapper to ensure correct behavior of the delete method in the DashboardUserMapper class
update instructorfeedbackresultspagedata to use primaryparticipantidentifier instead of recipientidentifier .
sulong : fix truffle
added a method to retrieve the buffer size in BufferedIndexOutput to provide access to the buffer size for better management of data processing
added usageHelpAutoWidth = true and footer to the Terasology command and modified the headless option description to improve user interface clarity
added a condition to update the action bar ' s title based on the current item ' s status in DrawerActivity . java to ensure the
refactor CommandLineParserTest class for improved clarity to enhance maintainability and readability of the test code
added interpolators for animation effects in the QuickstepAtomicAnimationFactory and changed access modifiers in PortraitStatesTouchController to public to enhance
replaced the method ` toUnderscoreSeparated ` with ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to improve
added native methods for setting frame and object release in CWrapper . java to enhance functionality for managing native object usage in the application
added null and empty reference checks in Checker . java and created a new ValueTest . java file to ensure proper handling of constant references and introdu
updated test cases in MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve test coverage and ensure
removed null check for constructors in PojoUtils . java to simplify the code by eliminating unnecessary null check
refactor JiraConfiguration class to improve code structure to enhance maintainability and readability of the code
corrected the spelling of " [ FAILED ] " and " ( COVERAGE ) " from " [ FAILED ] " to " (
updated bounds settings in DeviceProfile . java to use getSearchBarTopOffset ( ) instead of edgeMarginPx to ensure proper positioning of the
corrected spacing in log messages and added a conditional check for idleTimeout in disconnect scheduling to improve code readability and ensure proper handling of idle
refactor activity launching logic to run on UI threads instead of directly calling openRecents ( ) to improve UI responsiveness by ensuring
added a method ` getSourceGroupOptional ( ) ` to retrieve an ` Optional < Pair < String , ImmutableList < AppleSource > > >
increased timeout duration for trigger firing latch in TestSimTriggerIntegration . java from 220000 and 60000 to 320000 and 90000
updated variable names from ' outputPositionCount ' to ' positionCount ' in FloatSelectiveStreamReader . java to improve clarity and consistency in
refactor bestSoFar handling in AbstractNodeCostSearch . java to improve null checks and path comparison to enhance code robustness and prevent potential NullPointerException
added a check to skip processing for " com . codename1 . ui . Form " and " com . codename1 . ui .
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView ` and ` FloatingIconView ` to utilize
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is initialized before use to avoid potential null pointer exceptions
added unit tests for IMEI and MEID handling in ShadowTelephonyManagerTest and implemented methods in ShadowTelephonyManager to
added debug request information to SimpleHostRoutingFilter to enhance debugging capabilities for HTTP requests
added the ` destory ` method to several classes and implemented the ` close ` method in ` BitmapInvertedIndex ` to ensure proper resource
[ issue # 1560 ] fix the bug of normalmessagenandresendit ( # 1561 )
replaced ` Charset ` with ` StandardCharsets ` for UTF - 8 encoding in ` StatVisualizer . java ` to improve code clarity and
hbase - 25836 bulkload should not crash if there be multiple hfiles in the same region ( chunhui )
added a nullable ` commission ` field to the ` DefaultWithdrawFundsParams ` constructor and updated the ` RippleWithdrawF
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and improve readability
refactor exception handling to include both SolrServerException and IOException in LoadSolrBuilder . java and SolrLocator . java to improve code clarity and
added a check for abstract overloaded methods and improved error handling in Java2TypeScriptTranslator . java to ensure that abstract overloaded methods
added StacklessLogging to the FileSessionDataStore ' s sweepDisk method in TestFileSessions . java to enhance debugging capabilities by logging the session
added serialization support and modified access modifiers in SQLDataType and Entities classes to enhance data handling capabilities and improve encapsulation
updated test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a check for null or empty claimRequestString before parsing to improve robustness by handling potential null values gracefully
updated ` HiveFilterSetOpTransposeRule ` to use ` RelBuilderFactory ` instead of ` FilterFactory ` and introduced a static instance to
updated the ` processTypeHintForNestedDocuments ` method to handle null values and added unit tests for null values in the ` Update ` mapping
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest . java and added a new getCoreStatus method in Core
initialize transformers and locators lists with new ArrayList instances to ensure that transformers and locators are properly managed before use
reformatted error message for illegal inits in AbstractQuerydslProcessor . java to improve code readability and maintainability
improve error message if we ca n ' t decode the callstack
rename methods from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency in
( chore ) camel - mail : use objecthelper . getidentityhashcode ( ) instead of dumpmessage
added null checks for redeliveryPolicy and originalDestination in ActiveMQConnectionFactory and PrefetchSubscription classes to enhance robustness by preventing potential
updated getIdentifierName ( ) method to include setIsPropertyName ( ) method to enhance property name handling in the identifier parsing process
added a new file ` WaveGeneratorActivity . java ` and modified ` InstrumentsFragment . java ` to start it using ` WaveGeneratorActivity
added null checks and logging for better error handling in KeyedProperties . java and SheetOverlaysManager . java to improve robustness and provide
added test cases for pod logging and execution in PodIT . java to ensure correct functionality of pod logging and execution handling
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to verify the behavior of an empty index and create a new one
[ fix ] [ graal ] do n ' t call super . dispatchmethodkernelokra in graalkitester .
added sorting functionality to the records list in DefaultDnsClient and implemented Comparable < MxRecord > in DefaultMxRecord to ensure records are sorted
refactor thread creation in XToolkit . java to use a privileged action for better clarity to improve code readability and maintainability
added validation in SelectBox . java and selected " Linux6 " in UITest . java to ensure the dropdown reflects the correct functionality
replace IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by providing more detailed stack trace information
added a parentSplit parameter and modified the createState method to include a parentSplit parameter to enhance state management by associating states with parent splits
changed the ` connectionState ` variable from ` int ` to ` volatile int ` and updated its getter method to ensure thread safety when accessing the
increased the default polling delay from 10 seconds to 1000 milliseconds in AbstractPollingEndpoint . java and added periodic trigger handling in EnableIntegrationTests
refactor MemoryStack and MemoryUtil methods to improve memory allocation handling to enhance code clarity and maintainability by reducing redundancy in memory
added error handling for ` DocletAbortException ` in ` HtmlDoclet ` , ` AbstractDoclet ` , and ` AbstractBuilder `
[ java ] unusedmodifier : fix nullpointerexception in java doc .
refactor lambda expressions to use method references for consistency across multiple classes to improve code readability and maintainability
added a SSL parameter to the @ Parameterized . Parameters annotation in AbstractHttpClientServerTest . java to enable secure communication for HTTP client tests
improve log message when value can not be transform
updated the method for retrieving active connection permissions from ` getUserPermissions ( ) ` to ` getActiveConnectionPermissions ( ) ` to ensure accurate accessibility
replaced direct equality checks with a custom EqualsBuilder in Point . java to improve code readability and maintainability by using a unified equality check
added a null check for outputRoot before processing the file to avoid potential NullPointerExceptions when outputRoot is null
pdfbox - 2576 , pdfbox - 2576 : add a annotationfilter to filter out all annotation , a suggest by valeryb
updated StackTraceCleaner class to improve stack trace cleaning to enhance performance and maintainability of stack trace management
added content type handling for CSS and JavaScript files in PluginServlet . java to ensure proper content type is set for CSS and JavaScript files in the
hhh - 16611 skip test for oracle , sql server and sybase
renamed the parameter ` slot ` to ` slotSize ` in the ` upgrade ` method and updated its logic accordingly to improve clarity and
added a ` getStats ( ) ` method to ` AbstractDataImportHandlerTest ` , ` Context ` , ` ContextImpl ` , and `
[ scb - 2330 ] add long polling option to kie client ( # 2331 )
updated scrolling methods in PagedView , BaseOverview , LauncherInstrumentation , and AccessibilityManagerCompat to use a new Rect object to
updated unlocks initialization in UI . java and added a new unlock button in PausedDialog . java to enhance user experience by providing a clear
added a call to clear the drop list in PlayerEventListener to ensure the drop list is reset before processing events
added a default parameter named inputName in StreamResult . java to provide a default value for the input name in the StreamResult class
updated exception handling in the testNormalizeOrder method from MalformedURLException to IOException to improve error handling for better error management
print chunk header and chunk type in TsFileSketchTool . java and flip the strBuffer buffer in LocalTsFileInput . java to improve
added a ` ImmutableSet ` to exclude specific headers from the ` UmbrellaHeader ` class to exclude specific Swift headers from the umb
renamed method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java ` to
added a call to ` encode ( ) ` in ` RequestPlugin . java ` to ensure proper encoding of incoming requests
mondrian : do n ' t return ` ` float ( ' ' ) ' ' for ` ` mysql ' ' dialect ( #
added error handling for null or blank password in LdapAuthenticationProviderImpl . java and created a new TestLdapAuthenticationProviderImpl . java file to
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a conditional check to clear complexWriters in ProjectRecordBatch . java to ensure that complexWriters are properly cleared when no errors are encountered
added ` @ SuppressWarnings ( " serial " ) ` annotations to multiple cache - related classes to suppress warnings related to serialization and caching
modified ClassGraphClassLoader to handle null classInfo before comparing classLoaders to improve robustness by preventing potential NullPointerExceptions
added a check for " _ errors " in the ErrorResponseException class and modified the return statement to include an empty location string to improve error handling
added a constructor to EventSourcingRepository that accepts parameters for eventStore and snapshotTriggerDefinition to enable initialization of EventSourcingRepository
refactor symbol definition logic for binary nodes in Attr . java to improve clarity and maintainability of symbol handling logic
added error handling and improved search text handling in SearchedPeopleCursorAdapter . java and QustomDialogBuilder . java to enhance robust
updated command handling in NuvoConnector and NuvoHandler to replace " ALL _ OFF " with " ALLOFF " and added a standalone
tmi - tiff : change default planar configuration from ` ` image ' ' to ` ` baseline ' '
added a call to close the input stream in ItemListTag . java to ensure proper resource management and prevent memory leaks
move laser and craft table average util to util class , and move it to util class
added two new classes ` SigInt ` and ` SigIntBarrier ` to handle signal handling in the agrona framework to provide a
refactor graph management in ExporterGEXF . java to support hierarchical graphs and improve edge count calculations to enhance compatibility with Hierarchical graphs and
replaced byte array with Text and updated string handling in TCTLSeparatedProtocol . java to improve character encoding handling and enhance string
[ # 1561 ] add support for rubric response ( # 1562 )
updated CatalogComparator to check for ORIGINAL _ CASE instead of DB2Database to ensure proper comparison based on the schema and catalog case
simonstewart : make the browsermobproxytest more resilient to the browsermobproxyserver
fix ( modelrepository ) : use integer . tostring ( ) for error message
removed duplicate calls to mTextWatcher . reset ( ) in InPlaceEditView . java to improve code clarity and maintainability
refactor InternalByteArray and TruffleString classes for improved code organization to enhance maintainability and readability of the code
[ hotfix ] [ graph ] make outedgesfunction return tuple2 instead of tuple3
updated multiple assertion classes for consistency in naming conventions to improve code readability and maintainability across the codebase
deleted the file ` ClassA \ 314 \ 201 . java ` and created a new ` DiacriticTest . java ` class
[ java ] use cyclic barrier instead of countdownlatch in cluster membership test .
added error handling and modified list initialization for WorkspaceReader in DefaultMaven . java and DefaultGraphBuilder . java to improve robustness by ensuring
updated SSL scheme check in ServiceRegistryConfig and modified IP port assertions in TestServiceRegistryConfig to ensure correct handling of secure connections based on the
updated Mockito library version to ensure compatibility with the latest features and improvements
removed the ' , ' keyword from the Jdbc3Connection constructor parameters to simplify the constructor signature and improve readability
refactored the ` ensureInstance ( ) ` method into a separate ` ensureInstance ( ) ` method to improve code readability and maintain
added logging for deltaServerTime and modified related methods in BinanceExchange and BinanceBaseService to improve tracking of server time changes and enhance
[ ci ] add support for nonstop ( tm ) servlet for tomcat 8.5
added a null check for the component form before deregistering animated animations to prevent potential NullPointerExceptions when accessing the component form
updated ` decodeResource ` and ` drawBitmap ` methods to include ` BitmapFactory . Options ` parameters in ` ShadowBitmapFactory ` and `
[ java ] add a configuration constant for number of message and use executor in example .
added click and long click functionality to the TimelineArrayAdapter to enhance user interaction by allowing long - click actions on the tweet
added " text " to unmodifiable data types and modified condition checks in NumberType and ColumnSnapshotGenerator classes to ensure proper handling of numeric data types
fix entryprocessorbouncingnodestest . testentryprocessorwhile2nodesarebouncing ( # 3683 )
updated state checks from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` AmbariManagement
[ mielecloud ] fix npe in createbridgeservlet when reconfiguration fails
refactor methods in PreconditionEnforcer and CrawlServer to synchronize access to improve thread safety and simplify robots validity checks
added null checks for display name retrieval in multiple classes to avoid potential NullPointerExceptions during display name checks
added default shader program support to SpriteBatch constructor and updated ImageButton constructor to use it to enhance shader flexibility by allowing customization of
added synchronous commit option to the " options " property in TestUtil . java to enable synchronous commit functionality in the test environment
added type coercion for collections in SortedSetTypeCoercer and implemented a test for coercing sorted sets to ensure that duplicates are
updated message string ID assignment logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to distinguish between folders and files to enhance user experience by providing
added a check for non - ASCII characters in the URLPathEncoder class to ensure only valid characters are accepted to prevent potential errors
added port calculation and updated fragment storage registration in UserContext . java to ensure consistent port usage and improve code clarity
updated the test to expect an empty map instead of returning an empty map to ensure that the method correctly returns an empty map when no clusters are
[ hotfix ] remove unused logger parameter from yarnentrypointutils
refactor SIPCommFrame to encapsulate initialization methods for color , bgStartColor , and bgEndColor into separate methods to improve code
removed the ShadowHtml class and its associated references from RobolectricBase . java and HtmlTest . java to simplify the codebase by elim
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
updated JettyLogger initialization to include " org . eclipse . jetty . http3 " and " org . eclipse . jetty
changed the visibility of the ` addListeners ` method from private to public and added a test for listener validation in ` MockSettingsImplTest `
[ hotfix ] [ state ] fix typo in statehandlestore javadoc
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . j
update student section handling to use Const . DEFAULT _ SECTION instead of " None " to improve code clarity and maintainability by centralizing section
( chore ) camel - jmeter : use try - with - resources to avoid resource leak
camel - 16400 : camel - test - infra - tcp should use the available port if it can not be find .
added ` buildTarget ` and ` androidLibraryBuildTarget ` to multiple classes and refactored jar parameter retrieval methods in ` JarBuildSteps
corrected a typo in the error message from " # validating - cerficates " to " https : / / www . ra
cloudstack - 4892 : remove unused getpagesizeval ( ) method from listcapacity api
added a case for the CLOSED case in IteratingCallback . java to prevent further processing when the callback is closed
added a new boolean field ` isAuthorized ` and updated related methods in ` AccessControlContext ` , ` AccessController ` , and ` ProtectionDomain
added a type check for AbstractOSGiApp before processing bindings in OSGiDeployer . java to ensure proper registration and handling of
added support for handling " tiff " codec in DLNAMediaInfo . java to ensure proper mime type is used for TIFF images
refactor argument handling by introducing ' types ' and ' assumption ' variables for better clarity to improve code readability and maintainability by
added a new file ` CubocDesktop . java ` and refactored ` Map . java ` , ` MapRenderer . java `
updated PolicyMonitor initialization to use target directories instead of test resource directories to ensure that the test resources are stored in the correct target directory for better
added a call to removeAllFiles ( ) on trashbinListAdapter to ensure that all relevant files are removed from the trash bin list
updated import statement from org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) to com . sun . jdi . Bootstrap
sulong : make llvmcheckglobalvariablestoragenode abstract and add checkglobalnodegen
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and updated related code to include component information to enhance event handling by
increased the maximum burn amount limit and replaced it with a constant to accommodate a larger number of burn targets to ensure that the
refactor UniqueConstraintSnapshotGeneratorSnowflake to use a wildcard import and enhance object snapshotting functionality to improve code readability and maintainability
refactor item assignment logic in DMLTransformer . java to handle empty insertStatementBuilder to improve flexibility in selecting named values based on the
updated import statements and modified the PGT URL parameter in ServiceValidateControllerTests . java to enhance security by using a secure PGT URL for
added a boolean parameter ` isStatement ` to the ` getDefaultValidFunctionName ` method and introduced a try - finally block to handle default names to
refactor JarLauncher class to improve code structure to enhance maintainability and readability of the codebase
updated generic type declarations in multiple classes to use generics to improve type safety and clarity in the code structure
added a new dimension of 320x200 in DeviceConfiguration and modified visibility of firstCallPeerIsGV in CallGTalkImpl to improve
added a test for updating PGobjects using PGobject in ResultSetTest . java to ensure correct handling of PGobject objects in database updates
updated password reset logic to handle empty results and added a test for non - UAA origin to improve error handling and ensure correct response behavior for
replaced getChildNodes ( ) . item ( 0 ) with getDocumentElement ( ) in XMLUtils . java to obtain the propertiesElement from the document
modified caching logic in Cache . java to improve performance and efficiency of cache operations
rename timeInSec to timeMillis and prevTimeMillis in Isochrone . java and update related references in SPTResource . java to
improve the light relay logic to check if the bindy value be valid before proceeding with it .
added a new ` Chainer ` class and updated the ` contains ` method to return a ` Chainer < T > ` instance to enhance
refactor Model class to improve code structure to enhance maintainability and readability of the code
increased the recordedTime variable from a fixed value to a fixed value of 619315200000L to ensure accurate representation of recorded
added a condition to resize the status if the terminal type is Windows to ensure the status is correctly initialized for Windows - specific terminal types
updated output messages and added a conditional check for host version state in ` UpdateDesiredStackAction . java ` and ` RepositoryVersionState . java
refactor IntegrationTestCase to use a private static final TEST _ ROOT and change JSINTEROP _ PATH to JRE _ PATH across multiple
replaced HashSet with LinkedHashSet in multiple classes and updated the setSettingsBuilderAdvice method to return a MavenExecutionRequest instance to ensure insertion order
removed unnecessary try - catch block from OperationServiceImpl . java to simplify code by eliminating unnecessary exception handling
[ hotfix ] [ runtime ] fix checkstyle violation in knativeenvironment
updated the executor name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in thread naming
added a test for CloudSolrClient uploads and improved connection handling in TestCloudSolrClientConnections to ensure proper functionality and error handling during configuration
[ java ] synchronize the addition and removal of binding to avoid potential deadlock .
added methods to clear temporary and cache files in ShadowContext and refactored file handling in RobolectricTestRunner to improve file management
added LinkedHashSet and TreeMap to the list of classes in SecureXStream . java and enhanced the addStyles method in XStreamPersisterTest . java
[ drools - 7 ] add kiemodulemodel to kiecontainer so that it can be pass into the kie - api
added support for handling Farmland objects in the BlockEventListener class to ensure only relevant moistures can be dryed based on the
added a default implementation of the getLocalIp method in FinishedSpan . java to provide a default implementation for retrieving the local IP address
updated JdbcStepExecutionDao to deserialize binary stream data and added a new test for integer storage to ensure proper serialization and validation of integer values in
refactor code calculations in AbstractDictionary , BigramDictionary , and WordDictionary classes to improve clarity and consistency to enhance code readability and
added " python37 " to the list of resource paths in python . java and tensorflow . java , and updated resource preload in tensorflow . java
added a refresh button to the PluginTab to display plugins in a JTable instead of directly accessing the DownloadPlugins list to enhance user experience by
changed log level from info to warn for reloading and saving the history file to improve logging detail for better debugging and error handling
server : fix npe in vmwarestoragemo ( # 4649 )
camel - 16400 : camel - sftp - fix test failure on window .
refactor ExperimentalMockitoJUnitRunner class for improved clarity to enhance maintainability and readability of the code
added a method to retrieve the build serial ID and updated summary handling in multiple classes to ensure compatibility with older phones and provide clearer error
refactor SwapGBuffers class for improved performance to optimize memory usage and reduce execution time
added null checks for spatial and skeletonControl before removing it to prevent potential NullPointerExceptions during control removal
added a method to set smart replies in ShadowRankingTest and refactored ShadowRanking to use RankingReflector for better
[ java ] do n ' t list all segment file in the archive if it do n ' t exist .
updated the initialization of carrot2ResourcesDir in CarrotClusteringEngine . java and added a new test case in CarrotClustering
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new class ` bug8004298 .
update ASM _ API _ VERSION from Opcodes . ASM7 to Opcodes . ASM9 in ScriptUtils . java and CompilationConfig .
added exception handling for missing or empty vector in RecommenderMapper and modified get method in Retriever to throw a TasteException to improve error
added clientInfo to SurrogateAuthenticationEventListenerTests and modified related test cases to include client information to enhance test clarity by including client - specific
added a boolean variable ` isUserView ` initialized to false in ` CardPresenter . java ` to disable user view functionality for better user experience
refactor methods in GraphvizUtility for improved readability and organization to enhance maintainability and clarity of the diagram generation logic
[ java ] add miss histogram for constructbatch and synclogtimeperrequest in logdispatcherthreadmetrics .
added a new module - info . java file for the SQLite connector in the com . speedment . runtime . connector . sqlite package to define
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during stream reset operations
removed conditional check for " api " web type and simplified the initialization of PermissionsManager to streamline permission management logic for better readability and maintain
updated DateParser and TestDateParser classes to improve date parsing functionality and test coverage
added a getDepth method to SpringLoadedState that returns a value of 0.5 f to provide a default depth value of 0.5 for
replaced manual array copying with Arrays . copyOfRange for improved efficiency to enhance code readability and maintainability by reducing redundancy
[ hotfix ] fix checkstyle violation in executiongraph
removed the swipe - based swipe functionality from the NotificationRenderer and added a notification removal in NotificationActivity to streamline the UI by eliminating
updated exception handling logic in DefaultExceptionConverter and modified test cases in ExceptionsTest and EndpointTest to improve clarity of exception messages and ensure correct
updated GlowContainer to allow a nullable lock string and improved null / empty checks to enhance code robustness and prevent potential NullPointerExceptions
replaced MethodHandle retrieval with a direct reflection method for setting the target field to simplify code and improve readability by using a more direct method
replaced integer type casting with Integer type casting for distinct values in MathTest . java to improve performance and readability by using integer types instead
updated return statements in BaseEmailContentFormatter to include separator for metrics and datasets to improve subject formatting for better readability and usability
added a check for a simple panel before displaying it in LayoutPanel to improve user experience by ensuring the correct layout is displayed based on the provided
added a null check for location in the condition to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a null check for the key parameters in the prevPubKey and simplified the key generation process to ensure that the key parameters are present before proceed
refactor MediaTypeRequestMatcher to use a dedicated method for ignoring media types to improve code readability and maintainability by encapsulating the logic for
added task number retrieval from taskAttemptId in LlapBaseInputFormat . java to improve logging clarity by using a more descriptive variable
added a property to the SpringBootTest annotation to allow bean definition overriding to enhance flexibility in test configuration by allowing bean definition overriding
added a null check before closing the indexReader to prevent potential NullPointerException when indexReader is not initialized
removed ` public ` access modifier from ` BTCMarketsStreamingAdapters ` , ` BTCMarketsStreamingExchange ` , and ` B
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest . java ` to verify rendering behavior to ensure that
added a new file CompatibilityTest . java that tests the internal DTD compatibility properties to ensure that the Compatibility . xml file
added new utility classes for push and security management in the Nextcloud client framework to enhance functionality and facilitate easier management of push notifications
hbase - 25836 tablerebalancer . abortrebalance ( ) should return ` ` int _ max ' ' instead of ` `
bump version to 2.7 . 0 and release note
log4j2 - 1349 fix test that fail on window
added handling for socket timeout and EAGAIN status in AjpAprProcessor . java to improve error handling by throwing a SocketTimeoutException for
set default values for friction , restitution , and density in FixtureDef . java to zero to ensure default values are set
updated method signatures to include anomalyFunctionSpecMap and replaced fetchSaclingFactors with fetchScalingFactors across multiple classes to enhance functionality by
added a shell command ` ` am wait - for - broadcast - idle ' ' in the LauncherInstrumentation class to ensure that broadcast idle
added unit tests for font and link tags in ResourcesTest . java and modified the return statement in ResStringPool . java to ensure correct retrieval
move guistatscomponent . java to src _ work / common / net / minecraft / src / guistatscomponent . java to
added call phone permission handling in Launcher . java and utility methods in Utilities . java to enhance user experience by ensuring appropriate permissions are granted for
updated return values in SimulationPanel . java and modified PlotDialog . java , BasicEventSimulationEngine . java , and Startup . java
changed access modifiers of BUF _ SIZE _ LONG and changed access modifiers of fromBytes to private in GeoEncodingUtils to enhance encapsulation and
added a synchronized method ` isDockerAvailable ` to check if the Docker client is available to improve reliability by ensuring the Docker client is available
replaced the static final String VPX with a constant value of " vpx " to improve code clarity and maintainability by using
added a coordinatorAddress parameter to the DistBuildFactory and updated DistBuildRunCommand to use it to allow users to specify the remote coordinator thrift
added a new method ` match ` in ` FsUtils ` and refactored timer management in ` WrapTimer ` to improve path matching functionality
added a conditional check for non - negative values before adding them to the labelValues to ensure that only non - negative values are added to the
added null checks for result and improved info formatting in the App . java file to enhance code robustness and provide clearer information when null
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the code and improve readability
added functionality to set materialization time in ObjectStore and created a test for it in TestObjectStore to ensure that the creation metadata correctly reflect
added handling for UnsatisfiedLinkError in VoskSTTService and updated method signatures accordingly to improve error handling and provide clearer
bug 6175 : remove ' is _ one _ way ' property from sampler , and add response code for browse and clear message
modify the return statement in GlyphView . java to handle edge cases more accurately to improve the robustness of break weight evaluation logic
refactor checksum reading logic in RCFile . java to use a buffered buffer for improved efficiency to enhance performance by reducing the number of
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to indicate a pending fix for SOLR - 1302
refactor data handling to use a LinkedList for unwounding steps and processors to improve readability and maintainability of the code
removed the ` keysToDataFlavorArray ` method and simplified the ` setToSortedDataFlavorArray ` implementation in ` DataTransferer
added a new argument " - infoport " to the TestThriftServerCmdLine to specify a random port for the thrift server to enable
added a check for EOF in the RegExpScanner class to ensure proper handling of EOF in regular expressions
refactor Debug . java to improve handling of enabled metrics and timers to enhance code clarity and maintainability by centralizing enabled metrics and timers
add null check for multiuserchat . getnickname ( ) in chatroomjabberimpl . java to avoid npe .
added null and empty checks for the filename parameter and improved error messages in PApplet . java to enhance error handling and provide clearer feedback
refactor refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by encapsulating the creation logic
updated error message formatting in BuckConfig . java to improve clarity of error reporting for path not found issues
[ hotfix ] remove unused lock in yarnflinkapplicationmasterrunner
added a new method ` nativeGetHardwareBuffer ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a synchronization mechanism for retrieving the
added SSL URI configuration for BTCChinaMarketDataService in BTCChinaExchange . java to enable access to the BTC
[ pmd - java ] fix cpd task to output file relative to the project base directory
added OauthController and its corresponding test class Oauth2PluginTest to enable testing of OAuth2 functionality in the application
refactor SemgrexPattern class for improved readability to enhance maintainability and ease of understanding for future developers
refactor flatMap and flatCollection methods in AbstractStreamEx , EntryStream , and EntryStreamTest classes to improve code organization and maintainability by
updated error logging message format in RestCodec and added exception handling in ExceptionToProducerResponseConverters to improve clarity of error messages and enhance error
updated the condition in RobolectricClassLoader to include a check for both " org . specs2 " and " scala . " to
change the condition from checking if ` transmittableAudioEncodings ` contains ` sdp ` to checking if ` sdp ` is not already present to
changed the default value type from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added a new test case in CreateTable
added methods to check the number of station 3 GML31 and GML32 in the NormalizedMultiValuesTest . java file to ensure
added a volatile boolean flag ` wasInvoked ` and modified server handling in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added a check for configuration before executing regex mapping in ColumnarDataSource and modified return statements in RowProcessor and BinaryResponseProcessor to ensure that regex
refactor ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and introduce ` getPositionsArraySize `
added XLCDCommunicator and XLCDController classes , and refactored FirmwareUtils to use it for XLCD
[ drools - 5242 ] move kmodule . xsd into org / kie / api / kmodule / old - kmodule
added retry checks for " blockTrigger " and " transactionTrigger " in multiple event queries to ensure that retry conditions are met only when messages are
[ hotfix ] [ test ] use thread . join instead of thread . awaitthreadstates
refactor DelegatingMethod class to improve equals and hashCode methods , and add a new DelegatingMethodTest class to enhance equality checks and ensure
reduced the values of FREE _ V2 , UNFREEZE _ V2 , and DELEGATE _ RESOURCE from 20000 to
updated method signature and exception handling in DownloadPlugins . java to improve error handling and ensure configuration changes are properly managed
deleted the SpringTransactionHooks . java file and replaced it with AbstractSpringTransactionHooks in SpringTransactionHooksTest . java to simplify the codebase
refactor AbstractClassAssert to improve code structure to enhance maintainability and readability of the code
added a new file GetUninitializedStringValueTarg . java to test the handling of uninitialized string values to ensure proper functionality and error handling
added support for provided dependencies in AndroidLibraryDescription to enhance dependency resolution and flexibility in dependency resolution
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of keyboard open
replaced the handling of system anomaly messages with a boolean flag for saving bugreports to simplify the code and improve performance by eliminating
added a new constant CINEPACK in FormatConfiguration and updated LibMediaInfoParser to handle " cinepack " format to enhance media format
added hand movement animation offset and updated poke method logic based on camera bobbing configuration to improve the player ' s ability to poke
updated the method from ` data . describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlobUploader .
deleted the HSQLDBServerFilesFilter . java file and updated file listing logic in TestUtility . java to simplify the codebase by removing unnecessary
added a null check for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure that both restoreFromSeed and restoreFrom
updated the API data version from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` and added a trace log
added a method to check if a type already exists in the method invocation to optimize performance by avoiding unnecessary processing of method invocations
updated array size and iteration logic in AmbientCubemap . java to use a constant for the number of values to improve code read
[ netbeans - 4892 ] add a dialog to reset the current profiling mode if the session be in progress .
added multiple return statements to handle zero values in GenericUDFMask . java and GenericUDFMaskShowFirstN . java to ensure correct
refactor TemporaryFolder usage in BoundedOverheadBlockStoreTest and DerbyBlockStoreTest to use a new TemporaryFolder instance to improve
added methods to check if an item stack is damageable and has subtypes in ItemStack . java to enhance the damage
fix mc - 167447 line _ width not work properly ( # 228587 )
simonstewart : set the browser startup page to 0 in firefoxdrivertest
added conditions to handle HTTP upgrade requests in Http1xClientConnection . java to ensure proper connection handling for HTTP upgrade requests
updated task name from " compile " to " process - classes " in JoobyMojo . java to clarify the purpose
replaced the shutdown method with a method to close idle connections in HTTPHC4Impl . java to improve resource management by ensuring idle connections are
added a conditional check for aggregate function suffixes before processing metrics to ensure metrics are only added when the aggregate function suffix is not present
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView and TaskThumbnailView to use this new fullscreen parameters to
added a new Java class named Solution that reads a random integer array and prints its frequency to provide a solution for counting the frequency of a number
initialize ` ch1 ` to ` null ` in ` ClusteredAgentManagerImpl . java ` to ensure proper initialization of ` ch1 `
renamed MutisignOperationerGodicTest . java file to improve clarity and maintain consistency in naming conventions
added error handling for ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` in ` StaxEventItemReader `
replaced specific imports with a wildcard import and modified return statements in ShadowTextView . java , and added null checks in TestAttributeSet .
updated import statements from ` com . nimbusds . jose . shaded . json ` to ` net . minidev .
added support for " AIX " OS in the OS . java file and added support for " Linux - s390x - 64 "
use router control ip instead of router . getprivateip ( ) for virtual network appliance
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to provide a way to invoke a Runnable without blocking
remove xmpp ' s PresenceMessageComboTests . java file to remove obsolete test code that is no longer relevant
replaced int division with Math . round for width and height calculations in PortraitPagedViewHandler . java to improve code readability
removed unnecessary parameters from KMeansDriver . run and FuzzyKMeansDriver . run calls in TestClusterDumper . java to simplify
updated ClassSize calculations in KeyValue . java to include additional alignment for rowCache and modified return values accordingly to ensure correct alignment of data structures and
camel - 14263 : camel - jbang - make it possible to add type converter to the registry .
added conditional task handling in SparkCrossProductCheck . java to enable dispatching tasks based on conditional tasks
updated action handling in Launcher , LauncherAppState , and LauncherModel classes to ensure proper reloading of managed profile actions to improve
updated conditional logic in LoginInfoEndpoint and added tests for account chooser and discovery functionality to ensure correct handling of JSON responses when there is at
add todescriptivestring ( ) method to print region name and timestamp
renamed ` message ` to ` msg ` and ` result ` in ` HuobiAccountInfo ` and updated related methods to improve cl
added support for adding a " PERIOD " column to the MariaDB database schema to enhance database compatibility by allowing reserved words to be added
[ hotfix ] [ config ] add the ability to configure the default environment of portable worker
added detailed version change logs for Android 7.1 - you now have Launcher shortcuts . " , additional changes to the dictionary loading mechanism .
changed the access modifier of NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT . java and TestUtil . java
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] check that aeron client be use conductor agent invoker before invoke aeron client .
updated validation logic in mmm Attr . java and added new class NoWarnOnImplicitParams . java to enhance validation for implicit lambda parameters and
refactor methods in FileMenuFilter to use ` showMenuItem ` and ` hideMenuItems ` methods instead of ` hideMenuItem ` to improve
added new reserved constants to BTCETransHistoryResult and updated corresponding test cases to ensure accurate representation of transaction types in the transaction history
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance and maintain consistency in data structure
mark the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
[ iotdb - 6667 ] fix lastqueryexecutor to handle unseqtime large than seqtime
updated the newline character appended to the request string in HttpResponse . java to ensure consistent line endings across HTTP requests
added a static block to set the " org . slf4j . simpleLogger . log . org . apache . http . wire "
added a call to setSafeArea ( true ) on the titleBar to ensure that the title bar is displayed in a safe area
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to ensure correct retrieval of TimeSeriesChunkMetaData from the list
added SQL syntax for renaming columns in AlterTest . java to ensure correct parsing and deparsing of SQL statements for renaming columns
changed the access modifier of the ` copyState ` method from package - private to public to allow access to the method from other packages
fixed - rasyncservice . executecallable ( ) method throw classcastexception . # 3506
added a new constant ` SUFFIX _ SPLIT _ FILE ` and updated its usage in ` FileLister ` and ` FileSystemSplit ` to
renamed multiple classes related to OrcBatchReader , OrcRowInputFormat , OrcTableSource , and OrcTableSourceIT
removed unnecessary whitespace in CompareFunctionsProcessor . java to improve code readability and maintain consistency
modified the ` reduceScopeForLimitedSpace ` method to accept a expected disk size and improved logging message formatting to enhance flexibility in
removed redundant ` toString ( ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes
added a check to return early if the handler is invalidated in AbsSwipeUpHandler and nullifying the last gesture state in TaskAnimation
added ` getLockTimestamp ` and ` setLockTimestamp ` methods to ` AppPreferences ` and refactored ` PreferenceManager ` methods to use
refactor artist retrieval logic in MediaInfoParser . java to use a dedicated method to improve code readability and ensure default values are used when
added null check for remoteMessage before accessing its data to avoid potential NullPointerExceptions when remoteMessage is null
nifi - 1741 : fix npe in splittext when there be no flow file
added support for Windows key store loading in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
increase the default check _ timeout from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to
added a conditional check for the result code of FILE _ NOT _ FOUND in FileSyncAdapter . java to ensure proper handling of remote folder
added animation options and interpolation to the Slider class to enhance user experience by allowing customizable animation effects
updated assertions in LineSeparatorProcessorTest to use ` lineSeparator ` instead of ` eol ` to ensure consistency in line separator handling across the application
increase the maximum width and height of TexturePacker from 512 to 1024 to accommodate larger texture packing sizes
added a test for negated Ternary in UnnecessaryParenthesesTest . java and modified the return statement in UnwrapParentheses . java
camel - 14263 : camel - hazelcast should not throw an exception if the message body be null .
added TextFeedbackTest class and refactored TestRunner methods in AllTests and TestRunner classes to enhance test coverage and improve code organization for
replaced Math . round with Float . compare for score comparison to improve precision in score comparison logic
updated DPI handling in AddAndScaleMultiImage . java and refactored resource saving in ResourceEditorApp . java to improve image saving
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and updated ` ArrayCopySnippets `
added logic to skip processing based on stage total TPS in DefaultLogPublisher . java to optimize performance by skipping unnecessary operations when the stage total
added support for remote SCM systems in Configuration and RuntimeEnvironment classes to enable turning on / off support for remote systems in the application
added a condition to check for both RUNNING and END states in MieleApplianceHandler . java to enhance the state determination logic to
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to standardize
corrected the spelling of " log " to " LOG " in LocalZookeeper . java to improve code readability and maintain consistency in
added tests for handling the ProjectGenerationEvent ' s finished and started states in EventSerializationTest . java to ensure correct serialization of ProjectGenerationEvent
ggb - 2338 make selectionmanager . setspecpoints ( ) work for select point
refactor JavaCompiler to improve code structure to enhance maintainability and readability of the code
added a check for remainingTime before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to ensure that the test execution
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added " -- gc - sections " option to the list of ldflags in NdkCxxPlatform . java to enable garbage collection
updated the fallback URI handling in SpringCloudCircuitBreakerFilterFactory and added a test for variable handling in SpringCloudCircuitBreakerFilterFactoryTests to
danielwagnerhall : fix typo find by codespell on fossies . org
added null checks for uri and localName in ReadOnlySharedStringsTable . java to ensure proper handling of XML namespaces and avoid potential NullPointerExceptions
added a method to retrieve a network by a specified address in HttpMethed . java and a corresponding test in HttpTestAccount001 .
added a check for availTextWidth before returning the clipString in SwingUtilities2 . java and modified the GTKLookAndFeel initialization
refactor FlatteningIterator to use a separate push method instead of creating a new FlatteningIterator instance to improve code readability and maintainability
replace ` title ` and ` body ` with ` < b > ` replacement in ` TweetLinkUtils . removeColorHtml ` to ensure
doc : generate sample code in the java microgenerator ( # 29 )
added a test method to reload and delete any existing question in the InstructorFeedbackEditQuestionsUiTest class to ensure that the question is
updated return values in HSSFSheet . java and added new assertions in BaseTestSheet . java to ensure correct handling of row numbers for
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and PackageManagerHelper classes to ensure proper handling of malicious intents
[ java ] change cluster session state to connect and add time of last activity to the sequencer .
added a hashCode method to AbstractParquetHiveMapInspector and updated equality checks for keyInspector and valueInspector to ensure proper hash code generation
added a condition to flush the session if the stream is remotely closed to ensure proper resource management and prevent memory leaks
added AutoCloseable interface to the SplitReader interface to ensure proper resource management and prevent potential memory leaks
removed the deepCopy method from GsonBuilder to simplify the builder process by eliminating unnecessary properties
sulong : fix npe in sulongscanner when source map be not find .
refactor file handling in RestClientRequestImpl to use a single file open future instead of an array to improve code readability and simplify asynchronous
updated the method call from ` dispatchStatusString ( controllerStatus ) ` to ` dispatchStatusString ( controllerStatus ) ` to ensure consistency in
updated the class loader initialization in MockFactory and added a new SearchingClassLoader class to improve class loading efficiency by combining parent and system class loaders
added a new test class ` TestRefreshFlagBug ` to test the behavior of ` Box ` to ensure that the ` Geometry ` and `
hive - 11341 : constantpropagateprocfactory should not propagate left semi join to join ( sergey sheluk
replaced the boolean check for response completion with a conditional check for response status in HttpReceiver . java and HttpSender . java to improve code
update array length offset retrieval to use arrayOopDescLengthOffset instead of arrayLengthOffset across multiple classes to ensure correct handling of array length
http : / / issues . apache . org / jira / browse / amq - 4898 - add default policy for broker service
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability across the project
added a check for ` isRunning ` before calling ` appCtx . stop ( ) ` in ` CrawlController . java ` to ensure that
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return a GlyphLayout instead of a generic void
updated SpringmvcClient to use MetricsPublisher for metric retrieval and improved error handling in CodeFirstSpringmvc to enhance metrics tracking
removed generic type parameter ` SAFE _ ACCOUNT _ AGE _ DATE ` and simplified its usage in ` AccountAgeWitnessService . java
refactor switch - case statements in StructureHeader . java and StructureReader . java to improve code readability and maintainability to enhance code cl
added a ResourceUrlProviderExposingInterceptor bean to the CasWebflowContextConfiguration and associated tests to enable exposing a ResourceUrlProvider for
added a new DexReturnInliner class and modified DexBody . java to include DeadAssignmentEliminator . v ( )
updated rule configuration retrieval to use getProperties ( ) instead of getConfiguration ( ) in RuleResource . java and EnrichedRuleDTO . java to
removed the ` LinkOption . NOFOLLOW _ LINKS ` option from the ` isDirectory ` method in ` PathResource . java ` and added
[ hotfix ] [ table - planner - blink ] remove sql dialect configuration from executioncontext
refactor ` AndroidBinaryGraphEnhancer ` to use ` Supplier < String > ` instead of ` ImmutableSet < String > ` for `
pmd : add test for package name annotation in astpackagedeclaration
added a configuration property for the minimum cross compaction unsequence file level to allow dynamic adjustment of the minimum unsequenced file level based on configuration
[ hotfix ] move activeresourceresourcemanager into active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated ZipResource . java to replace CLASSPATH _ SCHEME _ PREFIX with CLASSPATH _ SCHEME and added a new ZipResourceTest .
updated formatting and added thumbnail generation logic in ExpandableUploadListAdapter . java to improve code readability and ensure proper thumbnail generation based on upload
refactor RobolectricTestRunner to use a hierarchy for test classes to improve clarity and maintainability of configuration merging logic
filter block and item registries by their names before loading them to ensure only relevant registries are loaded from the system
refactored methods in AbstractDataChangedListener to remove abstract abstract from afterAppAuthChanged , afterPluginChanged , afterRuleChanged , and
added support for enum type handling in JSONPojoConvertor and updated test assertions in JSONPojoConvertorTest to enhance functionality to support
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to indicate that the ` -- view
changed the type of ` originalPayload ` from ` String ` to ` byte [ ] ` and updated its handling in ` GWTRequestWrapper .
added orientation correction functionality to GyroControl to handle device orientation changes to ensure correct mouse positioning based on device orientation changes
change BIOME _ LIST _ SIZE from 256 to biomeGenBase . getBiomeGenArray ( ) . length to ensure correct
changed method calls from ` println ` to ` print ` in ` GetInterfaceTest . java ` and changed interfaces in ` Foo ` and `
changed the initialization of the Environment variable in FileCompilerConfig . java to ensure consistent environment handling during compilation
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a standardized way to collect
added a preload parameter to MMapDirectoryFactory to control the preload behavior of the map directory based on user - defined parameters
added custom metrics for various enabled components in BukkitPlatform to enhance monitoring capabilities for various components in the application
refactor QuickConnectREST class to improve code structure to enhance maintainability and readability of the codebase
added aspect ratio and default card image retrieval in CardPresenter . java to enhance the visual appearance of the card in the application
( scott phillips ) refactored authenticationcountselector to use the new loginpageurl method
added checks for non - empty longValues , doubleValues , decimalValues , byteValues , and byteStarts in VectorHashKeyWrapper . java to
added unit tests for system nanotime jit functionality in TimeChangeTest . java to ensure correct handling of JIT nanotime during
added null checks and trimming logic in MultiPartFilter . java and a print statement in MultipartFilterTest . java to improve robustness of
fire livingexperiencedropevent when a player cancel the experience . close # 1193
updated error messages and status detail in OpenUVBridgeHandler and OpenUVReportHandler to provide clearer and more informative error messages for better
[ sql - planner - blink ] remove unsupportedoperatorsvisitor from sql - planner
added RdepsFunction to GraphEnhancementQueryEnvironment and modified return statements in GraphEnhancementQueryEnvironment . java to enhance dependency management
refactor Character class to improve code readability to enhance maintainability and ease of understanding for future developers
added a flag to scale the entire rocket or AxialStage by introducing a wholeRocket flag to ensure the scale functionality works correctly
removed unnecessary ` Arrays . toString ( bytes ) ` calls from the ` assertEquals ` method in ` UpdateableResultTest . java ` to
added time boundary handling for offline and realtime tables in BaseBrokerRequestHandler to ensure proper boundary management for hybrid tables during query processing
simplified the logic for adding socket references to the poller in AjpAprProcessor and Http11AprProcessor to improve code read
added support for a huge collection of free porn comics for adults . Read in the eightmuses ripper
replaced calls to ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` in multiple test files to improve code
added a condition to check if the phone profile is not landscape in QuickstepLauncher . java to ensure proper layout behavior for phone devices in
replaced ` getValue ( query , PROPERTY ) ` with ` query . unwrap ( QueryImpl . class ) ` in ` PartTreeJpa
replaced ` Files . readAllLines ( Path ) ` with ` readMatchingLines ( String param ) ` and added a new method ` read
added dynamic check for streamMethod in JpaQueryExecution . java to ensure correct invocation of getResultStream for JPA queries
added null checks for entity and its type in PhysicsProcess . java to prevent potential NullPointerExceptions during processing
added a test to verify that the entry processor clears the map when value attributes are indexed to ensure that the entry processor clears the map when attributes
added listener functionality to ` OperationSetJitsiMeetToolsJabberImpl ` and created ` OperationSetJitsiMeet
updated color handling in mmm Utils . java and modified htmlMessage in mmm UtilsTest . java to ensure consistent color representation and improve test
disable menu item and normalize name input when it ' s empty
updated scratch path format in Aapt2Link . java and added recursive build steps in RmStep . java to improve clarity and functionality
replaced instances of ` Capture ` instantiation with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and `
ggb - 1343 update selection after clear ( ) in euclidiancontroller and algebracontrollerd
added handling for ` MarkedYAMLException ` and ` EmptyStackException ` in ` YsldValidator . java ` to improve error reporting
implement iscanceled ( ) method in BehaviorCall , Calls , and ExecutorCallAdapterFactory classes to retrieve the cancellation status of a call to
added a default implementation of the ` isAnnotationPresent ` method in multiple classes including ` AccessibleObject ` , ` AnnotatedElement ` , ` TypeVariableImpl
added a default method ` removeAllWidgets ( ) ` to the ` UILayout ` class to provide a default implementation for the ` removeAllWidgets
[ hotfix ] [ test ] fix flakiness in flink - test - flink
update return statement to use the maximum output size for final operations to ensure that the output size does not exceed the expected size for final operations
added conditions to handle high - res content transcoding for video streams in Fire TV Stick playback to ensure proper transcoding of high -
[ beam - 11341 ] fix the problem that the dataset source do n ' t work in spark 3.0
replaced ` Date ` import with a wildcard import and modified listener handling in ` GpsLoggingService . java ` to improve code readability
changed the data type of ` fullwidths ` from ` boolean ` to ` byte ` in ` putString ` and introduced ` EastAsian
added handling for BaseItemDragListener in FolderIcon . java to improve drag - and - drop functionality for shortcuts
added ` createEmptyArtifact ` method to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` TagConnector
updated formatting in RabbitMQPublisherImpl . java for consistency to improve code readability and maintainability
removed unnecessary logic for determining after Aug1 month and year in VideoViewerActivity . java to simplify the code logic for better readability and
camel - 14263 : camel - sftp should compact the path when transfer to a directory . thanks to benjamin for
increase the timeout for the assertion in the BaseWeatherConsumerTest from 20 seconds to 20 seconds to allow more time for the mock endpoint
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by using
added support for LARGE _ FERN species in BlockDoublePlant . java and BlockType . java to ensure proper handling of
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java ` to improve
do n ' t swallow virtualmachinemanagerimpl . getvirtualmachinemanagerimplexception ( ) in case of
added support for DB2 license handling in DB2TestSystem and modified condition checks in DockerDatabaseWrapper to ensure compatibility with different test systems and
added a method to set the unit group in DoubleModel and updated related components in GeneralOptimizationDialog and OptimizationPlotDialog to improve unit
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC / Z
added a check for the number of samples before setting them in TestPBRLighting . java to ensure that the correct number of samples is
updated test tasklet names in StepWithSimpleTaskJobParserTests to remove unnecessary " job . " prefix to improve clarity and consistency in
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to ensure immutability of credential and service variables
updated the syntax for the ` ggbabs ` function in the ` ExpressionNode ` class to ensure proper formatting of the function signature
added multiple ` addServiceOutput ( ) ` calls in ` DDLSemanticAnalyzer . java ` and refactored error handling in `
[ jbrules - 3684 ] fix biginteger coercion in constraint and drlx parse
added " org . eclipse . jdt . " to the WebAppContext class to hide the JDT reference used by jetty
simplified the return statement in NegotiateAuthentication . java to simplify the code by removing unnecessary super . useAuthCache ( ) call
update namespace assignment to capitalize segments [ 0 ] to ensure consistent namespace formatting across the application
camel - 16400 : camel - direct - component - throw directconsumernotavailableexception instead of camelexchangenotavailableexception to
added a null check for the zooKeeper object before resetting it to avoid potential NullPointerExceptions when zooKeeper is not initialized
updated progress bar step formatting in Loader . java to improve code readability and maintain consistency
added a new method ` runOnUiHelperThread ` to execute a runnable on the UI helper thread to ensure the UI helper executes on the
added a method to update the last remote stream ID in HTTP2Session to ensure accurate tracking of remote stream IDs in the HTTP2 session
added text antialiasing rendering hints in EditorHeader , EditorToolbar , and Preferences classes to enable text antialiasing for improved
[ java ] : do n ' t use termwindowsize if there be no term to send .
refactor : remove static import of enums in ctannotationimpl . java ( # 3748 )
refactor ExoPlayer class to improve code structure to enhance maintainability and readability of the code
modify return statement in WRobotPeer . java to use getRGBPixels with a new Rectangle object to improve performance by avoiding unnecessary native
added a new method ` newPrintStream ` to handle output stream encoding based on system properties to improve flexibility in handling output streams based on
increase the vibration rate from 1 to 25 to improve the responsiveness of the movement
fix findbugs and flybush dependency issue
removed the ` Executor ` parameter from the ` this ` constructor and its usage in the ` WebSocketClient ` constructor to simplify the constructor signature and
simonstewart : make the i18n test more resilient
refactor error handling in BytecodeParser and SharedGraphBuilderPhase to handle LoadConstantException instead of IllegalArgumentException to improve error handling clarity and
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper context management during integration tests
added a new lowercase comparator for string comparison in CoNLLUFeatures to ensure case - insensitive sorting of strings by case sensitivity
refactor JavadocTool to streamline parsing of source files into a separate parse method to improve code readability and maintainability by reducing duplication
alexeibarantsev : add test for toggle option in multi - select
added a validation check for the length of the keys array in HighestKvno . java to ensure that the count of keys is 9
added error handling for retrieving attributes in HDF5BatchReader . java to ensure that only Huge objects BTrees with 1 record are supported and
[ beam - 1867 ] make writewindowedtobigquery and batchloadbigquery return writeresult instead of pdone
rename ` copySnippetRequestEntity ` to ` createTemplateRequestEntity ` and add ` template ` parameter to ` ProcessGroupResource ` to improve
added a new file TestMultiANewArray . java to test multi - dimensional array processing to ensure correct behavior of multidimensional array
added a new configuration option for secondary storage management in the management server to enable secondary storage management based on whether true or not
refactor synchronization logic in SyncBlockChainMsgHandler . java to improve clarity and correctness to ensure correct handling of block IDs based on
added a call to set the theme of the preview tab ' s content in PreviewTabView to ensure the preview tab ' s theme is consistent
added a null check and closing statement for the reader to ensure proper resource management and prevent potential memory leaks
added a test for HTTP idle time and modified the idle timeout configuration in ConnectorTimeoutTest . java to ensure that the server correctly handles idle timeouts
add miss dcoref . dictlist , dcoref . dictpmi , and dcoref . signatures property , and use it
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) `
reformatted code in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests for consistency to improve code readability and maintain
changed log level from warn to debug for child nodes with improper name to reduce log verbosity and reduce noise in the logs
refactor color extraction logic to use a dedicated method for updating hotseat palette to improve code clarity and maintainability by centralizing palette
added methods to set default data table entry and cell transformers in TypeRegistry to enhance flexibility by allowing custom transformers for data table types
added an assertion to check if newAvailableShared is less than or equal to initShared to ensure that shared values are correctly checked before proceeding
chore ( regen ) : regenerate with update license year
removed the projectGenerated flag and its getter method from ProjectGenerator and WorkspaceAndProjectGenerator to streamline the project generation process by eliminating
[ hotfix ] [ runtime ] fix checkstyle violation in driverutils
added methods to handle the " / contactForm " endpoint and created a new Contact class with associated data to enhance the application ' s ability to
guacamole - 524 : add simpleuser . getpermissions ( ) method that return systempermissionset instead of permission .
update the release version from 20 to 21 in IconCache . java to reflect the latest features and improvements
[ drools - 7 ] fix typo in traitfactory . setmode ( )
updated SQL queries to support alias matching instead of name matching to enhance flexibility in querying metric configurations based on alias conditions
replaced manual closing of perDocConsumers with IOUtils . closeSafely to improve resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in ExpansionViewHelper . java to ensure the menu shows correctly when the button is clicked
updated error messages in OptionalSubject and related tests to clarify null and non - null references to improve clarity and accuracy of error messages
ggb - 1748 line height of help button in algebravieww and inputtreetreeitem .
move protobufferutilitiestest to core . util and add test
update divider position and width calculation in JabRefFrame . java to improve UI responsiveness by ensuring divider position is correctly set based on
bibtex : add support for cross reference entry in aux file
[ geos - 8470 ] make geoserver catalog serializable to avoid serialization issue
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of the data table
added ` MetaContactAvatarUpdateEvent ` and ` MetaContactAvatarUpdate ` classes to handle avatar update events across multiple classes to improve event handling
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command
added a test for cleaning up the audit log table based on post parameters by position to ensure that the audit log table is clean up correctly based
updated the return type of the ` inject ` method in ` ComponentContext ` from ` T ` to ` Object ` to improve type safety and
added regex patterns for parsing comments in ACLFileParser and updated related tests to improve comment handling logic and ensure correct parsing behavior
updated ` MapRDBFormatMatcher ` to include ` FileSystemPlugin ` and modified ` isReadable ` method to include a user name parameter to enhance
added an ancestorDimensionValues map and updated node name formatting in StarTreeImpl and TestStarTreeNodeImpl to utilize this map to improve
added user unlock check in TouchInteractionService and implemented closeOpenViews method in Launcher to ensure proper resource management based on user unlock status
updated conditional check from ` widthStr ` to ` positionStr ` in ` Photo . java ` to ensure correct handling of null values in the
refactor PKIXValidator logic to improve certificate validation logic to enhance clarity and maintainability of the validation process
[ flink - 20613 ] [ hadoop bulk filesystem ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to `
vpc : do n ' t include search filter in listnetworks api call ( # 3505 )
updated JsonElement handling in RuntimeTypeAdapterFactoryFunctionalTest to use get instead of remove and add an assertion to ensure correct retrieval of type
added storeUndoInfoForProperties functionality to store undo information for properties to improve undo management for properties in the application
replaced direct access to ` System . getProperty ` with a privileged action for accessing ` sun . java2d . xrgradcache `
updated StreamCloseTest to use Awaitility ' s await for stream size checks to improve test reliability by ensuring the stream size is checked
removed the ` doAfterFlush ( ) ` method from multiple classes and updated the handling of ` perFields ` in ` TermVectorsConsumer `
added deprecation checks and improved handling of deprecated properties in ConfigurationMetadataGenerator and AbstractJpaProperties to ensure only non - deprecated properties are processed
refactor capacity and mask variables in BiInt2ObjectMap and Int2ObjectHashMap classes to use final variables to improve code clarity and
updated the number of Hive MOVE FILES thread configuration from 25 to 15 and refactored file renaming logic in Hive . java to improve
added trace logging for sending errors and improved exception handling in ParallelNioSender . java to enhance error handling and trace logging for better debugging
added a null check for the context before creating a new instance to prevent potential NullPointerExceptions when the context is not initialized
svm : fix classloading issue in native - image - build server
modified the return type of the ` modifyGrantedAuthorities ` method in ` SwitchUserAuthorityChanger ` and ` SwitchUserProcessingFilter `
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and added ` RawJaxrsIntegrationTest ` and `
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 529 . add
added data providers for GeneralTestsData and dataSupplementaryCharactersTestData in XslSubstringTest . java to enhance test coverage for xsl
changed the method from ` eventWriter . close ( ) ` to ` delegateEventWriter . close ( ) ` in ` StaxEventItem
added support for MariaDB sequences in MariaDBDatabase and updated CreateSequenceGenerator to include sequence start value handling to ensure compatibility with M
updated formatting in multiple Java files for consistency and clarity to improve code readability and maintainability
added TableDataManagerProvider import and setServerMetrics ( new ServerMetrics ( new MetricsRegistry ( ) ) ) across multiple test classes to util
added a check for " jsse . enableMFLExtension " and " jsse . enableMFLNExtension " properties in SSLExtension
refactor ObjectHashSet to use ObjectHashSetIterator directly instead of ObjectIterator to simplify iterator initialization and improve code clarity
updated character count in Compose . java and TweetFragment . java from 22 to 23 in MainActivity . java and TweetFragment .
added a new configuration option ` m _ datapointTtl ` to control the TTL of data points in the Cassandra datastore to enhance configuration flexibility by
updated the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and modified the ` checkForAndKillX
added a method ` getTerrainAtCell ` to retrieve a terrain at a specified cell coordinate to facilitate easier access to
added default value handling in ` Pretty . java ` and created a new class ` T6665791 . java ` with Java compiler tests
added error handling for missing QuestEncryptionKeys . json in ResourceLoader . java to improve robustness by logging errors when the QuestEncryption
modified the return condition to check if the push request is not push before verifying the push support to ensure that only non - push requests are
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
replaced blockCapsule . sign ( ByteArray . fromHexString ( localWitnesses . getPrivateKey ( ) ) ) with a call to sign
modified return statement in FileSystemView . java to handle empty roots and added security checks in Win32ShellFolder2 . java to improve robustness
updated method names and logic in ColumnText and PdfPRow classes for better clarity and functionality to improve code readability and maintainability by
added a ` SparseArray < Note > ` for managing undo note selections in ` ListFragment . java ` to improve the management of undo notes
added logic to manage and store feedback question IDs in UploadBackupData . java to improve feedback question management by ensuring unique question IDs and comment IDs
removed null check for data in getTransferData method to simplify error handling for non - null data retrieval
no effective change - remove unused pstmtdelegate interface
replaced ` Padding ` with ` Rect ` for widget padding retrieval in ` AppWidgetResizeFrame . java ` and ` Launcher .
refactored static MethodHandle initialization and added consStringFilter method to NashornBeansLinker . java to improve code readability and
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
renamed the variable ` latch ` to ` goAwayLatch ` and updated the timeout duration in ` IdleTimeoutTest . java ` to
replaced calls to ` expectFailure . getFailure ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in ` Iterable
replaced instances of ` ThreadLocal ` with ` null ` for ` Workbook . currentBook ` across multiple files to simplify the code and
added a method to check if the object supports the specified Class type before proceeding with the vote method to ensure that the vote method only accepts
removed unused import statements for GachaHandler and Tools in DataLoader . java to clean up the code and improve readability
added an AtomicInteger to track the number of rows affected and updated the postUpdateLog method to accept it to enable tracking of the number of updates
ggb - 2175 fix margin positioning for scaler
set foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration . java to set default frame rates for improved performance
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent potential memory leaks
replaced DefaultWebSocketFrame with a ChannelFutureListener for closing the WebSocket frame to improve the handling of WebSocket closure events
updated test classes to replace ` TestApplicationEventListener ` with ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` to improve clarity
replaced direct activity launch with a method to set the list background to improve code readability and maintainability by reducing redundancy
updated import statement for StringUtils and added null check for line to ensure compatibility with the OpenHAB framework and avoid potential NullPointerExceptions
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to facilitate accumulation of sums and counts
[ hotfix ] fix checkstyle violation in replicationsink
replaced ` Set ` with ` Map ` for regular expressions and introduced a cache for regular expressions to improve performance and maintainability by reducing
added a static method ` reset ( ) ` to reset the ` gameThread ` instance to provide a way to reset the ` gameThread `
added a realm check in the login method in DigestAuthenticator to ensure that the realm matches the login service ' s realm to enhance security by prevent
refactor parameter handling in SavedRequestAwareWrapper to use an iterator for merging existing parameters to improve efficiency and readability of parameter retrieval logic
updated InfoStatus messages to use ' lc ' instead of ' hiddenSingleton ' and added a custom toString method in LoggerContext to improve clarity
replaced notification logic with a call to ` this . wakeup ( ) ` in ` CommitLog . java ` and ` HAService .
added a check for Android O in PhotoViewerActivity and introduced a method to check for Android O version to ensure compatibility with Android O and improve
updated the schema info level from minimum to basic in SchemaCrawlerTest . java to improve clarity and accuracy of schema information handling
replaced XMLStreamWriter with BufferedOutputStream in SaveTask . java and removed an unused writeEndElement call in VizModel . java to improve performance and
updated TestPayloads . java to use UTF - 8 encoding for generating and converting bytes to strings to ensure consistent handling of character encoding and improve
fix mc - 103516 : do n ' t return false for entity that do n ' t match the condition
added " Tomcat10ContainerAdapter " and " Tomcat101ContainerAdapter " to the list in ProbeConfig . java to support
[ drools - 6271 ] fix protobufinputmarshaller to correctly handle accumulate ( )
refactor comparison case handling in NowSearchTerm and SearchTermBuilder classes to improve code readability and maintainability
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for URL resolution to enhance flexibility by allowing dynamic HTTP method and headers
added a new method ` newResponseBuilder ` to encapsulate the creation of ` ResponseBuilder ` to improve code readability and maintainability by
added a notification for command start in AsyncBackgroundTaskManagerTest to notify the manager of a command start event
refactor computePreviewDrawingParams method in FolderIcon and PreviewItemManager to use a dedicated method to improve code organization and maintainability by central
refactor LukeRequestHandler to use CharFilterFactory instead of TokenizerFactory for tokenizer and character filtering to improve code clarity and maintainability
replaced null argument checks with a call to ParamChecks . nullNotPermitted for better clarity to enhance code readability and maintainability by
added verbosity handling to the ` createSubContext ` method in ` JavacStep . java ` and ` ExecutionContext . java ` to
added a condition to convert the schema to uppercase based on the database type to ensure consistent schema handling across different database types
add logmanager . getcontext ( false ) . getClass ( ) . getSimpleName ( ) to asynchttploggerallthreadcontextimplementationstest
added a new file TestShrinkToOneRegion . java that contains a main method that calls System . gc ( ) to demonstrate the
replaced string splitting with Splitter for splitting customPackages to improve code readability and maintainability
replaced ` utf8ToString ( ) ` with ` context ` in ` AnalyzingInfixSuggester ` and added a test
updated the handling of attachments in PushsaferMessageBuilder to use a local variable for better clarity to improve code readability and maintainability
remove the usage of showLabelStats method in ModelExplorer and SequenceModelExplorer , and change provenanceHash to jsonResult in StripProvenance to
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
updated the FORMATTER function calls in multiple field test classes to remove unnecessary concatenation to improve code readability and maintainability by reducing redundancy
updated the ` evaluate ` method in ` UDFRound ` to include a ` Integer ` parameter and improved null handling for ` i ` to
[ jsscripting ] use configparser . valueasorElse for good readability
changed class visibility from package - private to public in Test1 and Test2 classes to allow access to these classes from other packages
updated PlayerEventListener to use " denies . no _ enter " instead of " permission . no _ permission _ event " and improved null
modified the ` getAdditional ` method to include a ` Session ` parameter in the ` ConditionAndOr ` and ` ConditionInConstantSet ` classes
replaced multiple instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues `
added box and circle creation methods and friction reset logic in Box2DCharacterControllerTest . java to enhance the character controller ' s
added tests for globalbuffersize and threadbuffersize in TestBadOptionValues . java and updated test cases in TestMemoryOptions . java to
updated the validation message in ObjectAlignment and Options classes to ensure that the output is a power of 2 instead of a multiple of 8 to improve
added functionality to retrieve and set the target package name from the Android manifest file to enhance instrumentation flexibility by allowing users to specify a target package
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
updated acceptableThrowawayItems initialization to use an ArrayList instead of an Arrays . asList to improve performance by reducing the number of elements in the
replaced generic type parameters with explicit casting for method calls in Test6987555 . java to simplify code and improve readability by avoid
modified formatting and formatting in MessageHandler . java for consistency to improve code readability and maintainability
[ hotfix ] [ doc ] fix typo in inflection . java doc
added methods to retrieve and set the locale in the EvaluationContext class to enable dynamic locale management in the EL context
removed unused import of Plugin in SummaryPrinter . java to clean up the code and improve readability
added a break statement in DrawerActivity . java to ensure the loop terminates when a specific condition is met
replaced the static import of Criteria . where with a wildcard import and modified debug log message to include query object to simplify import statements and improve
added a system property ` XWORK _ LOGGER _ FACTORY ` in ` LoggerFactory ` and defined it in ` XWorkConstants ` to
admin : fix typo in p2p disabled acceptance test
added " livenessStateHealthIndicator " and " readinessStateHealthIndicator " bean names to ` AvailabilityHealthContributorAutoConfiguration ` and
added a concurrent map for PStore instances and modified the return statement in LocalPStoreProvider . java to ensure thread - safe access to P
changed the visibility of the deleteFiles method from public to private to restrict access to the method for better encapsulation
replaced instances of ` Provider ` with ` ServiceProvider ` for improved clarity and consistency to enhance code readability and maintainability by
truffle : fix exception handle in java object message resolution .
added toolchain creation checks in AbstractCell , ToolchainProvider , and DefaultToolchainProvider classes , and implemented corresponding test cases in DaemonLifecycle
fix race condition when remove a context from the engine .
updated string checks from ` indexOf ` to ` contains ` for better readability to improve code clarity and maintainability by using more descriptive
updated linker flags in PrebuiltCxxLibraryDescription and added corresponding test cases in PrebuiltCxxLibraryDescriptionTest to ensure proper handling of
refactor recents rotation handling in AbsSwipeUpHandler and RecentsView to use a new method updateRecentsRotation to improve
updated type checks in multiple classes to use wildcard generics for better type safety to enhance code clarity and prevent potential runtime errors
updated the object array to include the block ' s hash as a string to ensure the correct header hash is used for further processing
http : / / issues . apache . org / jira / browse / amq - 4748 - fix defaultmessagestore
removed unnecessary try - with - resources statement for JvmGcMetrics and JvmHeapPressureMetrics in MicrometerMetricManager . java to
http : / / issues . apache . org / activemq / browse / amq - 2178 - add message statistical
mark multiple methods as deprecated in multiple classes to indicate that these methods should no longer be used and may be removed in future versions
added a method to check for the presence of a system UI object and execute a shell command for keyboard input to enhance functionality by allowing keyboard input
changed logger visibility from static to non - static in SessionRegistryImpl . java and modified principals and sessionIds variables to enforce immutability of
added a check for empty cookieJar and implemented removeAll method in InMemoryCookieStore and NullUriCookieTest to ensure that removeAll on empty store
added toString ( ) method to BonsaiValue and enhanced debug logging in BonsaiWorldStateArchive and BonsaiWorldStateUpdater
changed parameter types of ` getText ` methods from ` String ` to ` CharSequence ` in ` ITextRepository ` and ` LimitedSizeCache
[ java ] ignoring a test that be not yet implemented in firefox .
added error handling and connection return logic in SocketConnector . java to improve robustness by logging exceptions during connection return
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references across multiple files to
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety during concurrent access to heartbeatExecutorService
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and add ` wrapWithTracingAndCancellation `
added a method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to ensure proper handling of text outside the bound
added Hadoop file paths for local , system , and temporary directories in TestInformationSchemaWithPrivilege . java to ensure correct directory paths are used for
refactor graphics configuration retrieval logic to use dedicated return statements to improve code readability and maintainability by reducing redundancy
tika - 2338 -- upgrade to tika - 3.0 . 1 , add oom support in legacy mode
( chore ) camel - core : remove pipeline . doprocess ( ) from pipeline
refactor PrintTagList . java to handle command - line arguments for model file and tag management to improve flexibility and user experience by allowing
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
http : / / issues . apache . org / jira / browse / amq - 4796 - add test case for eofexception
[ java ] do n ' t wait for cluster ready in startfromtruncatedrecordinglogtest .
updated the calculation of the arc variable in LineBorder . java to use a float instead of an integer to improve precision in arc calculation for better
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to prevent potential NullPointerExceptions when accessing galleryImages
added functionality to generate and set the DEPLOYMENT _ ID column in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to ensure
pdfbox - 4892 : rename fdf to interactive , a suggest by valerybokov
refactor index handling logic in AlterTableAddConstraint . java for improved readability to enhance code clarity and maintainability by redu
added functionality to manage and manage provisional Quickfixj engines in the QuickfixjComponent class to improve engine management by ensuring they are properly
added displayZoomControls functionality to RoboWebSettings and modified setMixedContentMode method to return the mixedContentMode value to enhance flexibility
added new corporea block , brick and slab blocks , and updated registry methods for corporea blocks in ModBlocks . java ,
refactor ConnectionFactory to improve code structure to enhance maintainability and readability of the code
added a method ` EnableDisableMenuItems ( ) ` to set the ` mnuAnnotate ` icon based on user settings to ensure that the
updated the message in the ExtendedListFragment from ` file _ list _ empty _ headline _ server _ search ` to ` file _ list
use @ setting instead of @ serviceregistry for test
added auto resize mode and auto create columns to the table in MotorMountConfigurationPanel . java and updated constructor parameters in Motor
updated the system line separator from ` System . lineSeparator ( ) ` to ` System . getProperty ( " line . separator " ) ` to ensure
added getter and setter methods for creator and subject in POIXMLProperties , and created a test for document properties in TestPOIXMLProperties
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] wait for cnc file to be empty before try to create a new one .
renamed interfaces and methods in UnsatisfiedTypeBounds . java to improve clarity and consistency to enhance code readability and maintainability by
added methods to check for JMod files and extract class names from their respective paths to enhance functionality for handling JMod files in the class file
added nullability annotations and improved null handling in TreeBackedElement , TreeBackedEnter , and TreeBackedPackageElement classes to
replaced direct assignment of tokenRequest with a PublicTokenRequest instance in Saml2TokenGranterTest and UserTokenGranter
[ hotfix ] [ table - common ] fix arrayindexoutofboundsexception in abstractfrompropertyvaluerangedescriptor
added a ` sync ` method to ` ZKAssign ` and ` ZooKeeperWatcher ` classes and invoked it in ` ZKWatcher ` to ensure proper
added checks for the presence of the current EGL context in the GlUtil class to ensure that the current EGL context is valid before proceed
[ drools - 7 ] do not remove the activation of a ruleflowgroup when the ruleflowgroup be already deactivating ( #
added a return statement in HystrixDashboardConfiguration . java to prevent further processing in the code
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to improve error handling and
added cleanup method to the ClientQueueDisruptionTest class and refactored initialization and shutdown logic to improve resource management and ensure proper cleanup of
refactor : replace SignaturePrinter with DefaultJavaPrettyPrinter in CtReferenceImpl . java to improve code readability and maintainability
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated GeoPointField , GeoPointTokenStream , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and GeoPointNumericTermsEnum
added a new class FakeBuildable that extends AbstractBuildable and updated OnDiskBuildInfoTest to use it to facilitate testing
fix crash when you click on an empty item in the itemstack .
renamed ` path ` to ` timeseries ` and updated related references in ` TSParser . java ` and ` SQLParserTest . java `
added a check to return 0 if the velocity is less than or equal to the minimum value in TubeCalc . java to ensure that the
replaced calls to ` getBucket ( gcsUri ) . create ( directoryPath , byte [ 0 ] ) ` with ` _ storage . create
removed redundant block closing of the VertxUtils ' transport ' in TestHighwayTransport . java to ensure proper resource management and prevent potential memory
added methods to create and recreate the history view in the database ddl classes to enhance the flexibility and functionality of the history view management in the
updated the parameter in checkEngine from 2 to 3 in CarrotClusteringEngineTest . java to correct the expected behavior of the clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable the test as it needs to be rewritten
added a new ` ParserStateObjectInputStream ` class and modified ` ParserCacheCommand ` to utilize it for deserialization to enhance functionality by allowing
added null checks for changeLog and objectQuotingStrategy in ChangeSet . java and updated DatabaseChangeLog . java to ensure robust handling of object
changed MetainfoParser ' s parse method from
deleted the CsrfControllerAdvice . java file to the functionality was no longer needed in the project
added a method to quote the endorsed directory paths in AntCompiler . java to ensure proper handling of path separators in command - line arguments
added scrim animation and modified background animation properties in Launcher and AllAppsBackgroundDrawable to enhance visual feedback during action screen off transitions
[ iotdb - 27772 ] fix type inference for long string ( # 167772 )
regenerate client with updated copyright year ( # 4382 )
added logic to handle both absolute and UNC path types in WindowsPathParser . java and updated test cases in PathOps . java to improve
simplified the instantiation of MulticastSocket by removing InetSocketAddress instantiation to simplify the code and improve readability by eliminating unnecessary parameters
removed redundant calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
replace return statement to return a cloned version of nBits to ensure that the returned value does not affect the original state
changed the visibility of the ` deriveCollectorName ` method from private to protected and added assertions for custom collector names in ` TestProfilerCollector `
refactor type hint handling in MappingMongoConverter to use a dedicated method to improve code clarity and maintainability by centralizing type hint logic
added performance measurement for creating proxy factories in ProxyMaker . java to enhance performance tracking for proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the original exception as a parameter to improve error reporting for better debugging and debugging
replaced the reinflateWidgetsIfNecessary ( ) method with a new method in Workspace . java to improve widget management by encapsulating widget
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to verify the right - click functionality of
updated LwjglAbstractDisplay to set display update to false and added autoFlush condition to ensure messages are processed only when the display is
update instructorstudentlistpageuitest to show a picture of a student and add a method to verify html part for it
added system property handling for onlyrun , method , and ignored checks in TestIgnorance . java to enhance test flexibility by allowing
removed the ' pointer ' parameter from the ' fling ' method signature in the ScrollPane class to simplify the method signature by eliminating
added null check for pageable in QueryDslJpaRepository and created a test for null pageable in QueryDslJpaRepository
added a method to compute memory size based on a fraction in MemoryManager to ensure that the memory size is calculated correctly based on a valid fraction
[ hotfix ] [ test ] increase test timeout for jmspublishertest
refactor SnowballAnalyzer class for improved readability to enhance maintainability and ease of understanding for future developers
replaced the assignment of ` previous ` with a new instance of ` InternalBatch ` in ` StreamingAggTemplate . java ` to simplify the
introduced a static method ` pluginErrorMessage ` and modified the null check logic in ` InvocationPlugin . java ` to improve error handling by
added a default method ` stream ` to the ` StreamSupplierComponent ` class to provide a default implementation for stream operations using parallel strategies
updated logging messages to clarify the state of watched files and added a retry mechanism for better error handling to improve clarity of log messages
added a new ` newInstance ` method to ` InjectorProxy ` and updated access modifiers in ` StandardInjectorProxy ` , ` InjectorTest ` ,
[ hotfix ] [ stream ] do not close output stream in flinkstreamingcreatefunction
added unit tests for ` ShowCreateTable ` , ` UnsupportedStatement ` , and ` Create ` methods in ` ShowStatementTest ` , and
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure proper handling of empty lists instead of null
updated test cases in NamedSetTest . java to include Quality Distribution and Inc . to enhance test coverage for CruiseControl functionality
added a ` websocketReconnect ` flag and improved connection state handling in ` DeconzBridgeHandler ` and ` DeconzConnection `
replaced ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI
hbase - 25836 retry table creation in testregionreplicareregionreplicacollectionendpoint # testreplicare
added PMS initialization and configuration to FormatRecognitionTest . java to ensure proper configuration handling for the PMS instance
create ovadisk template if it do n ' t exist in storage
updated import statements and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 and SpringJUnit4ClassRunner to
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated column names and SQL statements in AppendOnlySchemaIT . java for consistency and clarity to improve code readability and maintainability by using
added a check to verify the document count of deletedDocs in SegmentReader to ensure document count consistency for deleted documents in the index
modified the ` logException ` method to accept an ` Exception ` parameter and added new methods for logging exceptions to improve logging clarity and enhance exception
update version number from 1.0 to 0.9 in FilamentFactory . java to ensure compatibility with the latest version of the file
changed the default value of handleFileUploads from true to false in VertxPlatformHttpServerConfiguration . java and added a method call in Ver
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
refactor code to use a local variable for HotSpotResolvedJavaField instead of a static class to improve code readability and maintainability
renamed the method ` add ` to ` addFrequency ` in multiple classes to improve clarity and consistency in naming conventions
[ hotfix ] [ filesystems ] fix fileio . withwatermark ( ) bug
hhh - 14263 : fix ctedefinition copy in ctestatement .
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData functionality in the query compilation process
added a root directory parameter to the library command in JsLibrary . java to specify the root directory for the library output
updated the slider positioning from - 180 to - Math . PI in RailButtonConfig . java to ensure consistent slider positioning across different
corrected the position of the encloser in OverlayRenderer . java and modified the saving process in Saves . java to improve rendering accuracy
added expressionLanguageSupported ( true ) to KerberosProperties . java to enable support for expression language in Kerberos authentication
removed unnecessary conditional checks for remoteMountPointComponent in ThirdPersonRemoteClientSystem . java to simplify code and improve readability by reducing
updated setupViews method to include ScrimView and added new parameters for animation effects to enhance animation control and improve UI responsiveness during
added support for enabling and disabling periodic materialization in the state changelog configuration to enhance the flexibility and control over periodic materialization behavior
added a ` value ` field with getter and setter methods in ` ProtocolParameter ` , and updated ` List ` and ` ParamTagHandler `
added a test for chunking with a HEAD request in the TestHttpServlet class to ensure that the ChunkingServlet correctly handles HTTP requests with
added a new boolean field ` isBumped ` and modified the ` parseDetails ` method to handle it to improve the handling of router status
added Content - Type header with " application / x - www - form - urlencoded " in SwitchToPostInterceptor and updated SearchRequestUnit
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging functionality to PhoenixResultSet for ignoring setFetchSize ( " rows " ) to improve error handling and provide better visibility into
added initialization of AndroidNet to AndroidDaydream . java to ensure proper initialization of AndroidNet instances
removed redundant parameters from the ` numRowsConsumed ` object in ` LLRealtimeSegmentDataManager . java ` to simplify the code and improve read
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 25836 remove unused hbase - prefix - tree codec from tablemapreduceutil
added a boolean flag ` inflationFailed ` and modified the ` root ` variable in ` XMLLayoutInflater ` to ensure proper handling of
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future development
move loweringtoolbase to abstract class and implement containslowerable method in loweringphase .
updated the error message from ` download _ folder _ failed _ content ` to ` sync _ folder _ failed _ content ` to clarify
add new parser for newline and backslashes in makefiles . java ( # 1181 )
replaced direct calls to ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and added
replaced the call to ` super . setTransformRefresh ( ) ` with a new ` setBoundRefresh ( ) ` method in ` Simple
[ gr - 16936 ] use cfunction . isuninterruptible ( ) instead of cfunction . isguaranteedsafep
added a new GLFWFramebufferSizeCallback to handle window size changes and closed it to ensure proper resource management and prevent potential memory leaks
updated translation calculations in LauncherAppTransitionManagerImpl to use centerTaskParallaxOffscreen instead of centerTaskParallaxToRight
changed the type of literal nodes from NodeLiteralNode to Object and added NullLiteralNode for better handling of null values to improve type safety and
added ` setLength ` methods to ` CompoundFileWriter ` , ` FSDirectory ` , and ` IndexOutput ` classes to enable dynamic file length
updated manifest handling in AndroidNdkScriptGenerator and added new test classes in AntScriptGenerator and LwjglDebugStarter to improve
camel - 14284 - camel - aws2 - s3 : use source / destination bucket instead of copy source / destination key to avoid
added permission handling for " * " role in RuleBasedAuthorizationPlugin . java and updated test cases in TestRuleBasedAuthorizationPlugin . java to
refactor ZookeeperClientServerRegisterRepository to improve handling of register URIs and event types to enhance code clarity and maintainability while ensuring proper
rename methods and implementations in ReturnsDeepStubs for clarity and consistency to improve code readability and maintainability by using a more descriptive
added a check for empty call values in the contract ' s toByteArray ( ) method to prevent potential ArrayIndexOutOfBoundsException when the call value is empty
updated debug log message format in BibEntry . java to include a placeholder to improve logging clarity for better readability and understanding of
added exception handling for NoSuchAlgorithmException in the mapPBEAlgorithmToOID method and updated PBE algorithm constants in PBETest . java to improve
tmi - tiff : make sure input be valid before parse ifd
added validation for job parameters in CommandLineJobRunner and created a test for invalid parameters to ensure that parameters are in the correct form of name =
removed newline characters from message content assertions in SmtpTests and MailTests to simplify test cases for better readability and maintainability
updated case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve code readability and maintainability
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence tracking to improve thread safety and maintainability of sequence management
added a new file ` Test . java ` containing a class ` Test ` with a method ` sum ( ) ` to calculate the sum of
updated ` ShadowWifiManagerTest ` and ` WifiUsabilityStatsEntryBuilder ` to use ` maxSdk = R ` instead of
added a new Java file named Solution . java to implement a solution for verifying permuting queries to ensure that the number of queries involving
replaced ` Map ` with ` ConcurrentMap ` for better concurrency handling in ` Table . java ` and ` Gossiper . java
refactor taskbar recreation logic in TaskbarManager . java to improve clarity and maintainability to enhance code readability and maintainability
refactor SyncFutureCache class for improved concurrency handling to enhance performance and reliability of asynchronous operations
updated the default dashboard protocol version from " 2.0 . 1 " to " 2.0 . 2 " and modified the LOWEST _
[ java ] improved usessstringvalueofrule to check if a literal be not a string literal .
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the el
added support for target maximum type shard size in HollowProducer to enhance the flexibility and flexibility of the producer
added new test cases for " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to ensure
[ hotfix ] fix checkstyle violation in compilationtask
updated database parameter handling in DDLTask . java and added location URI handling in TestSemanticAnalysis . java to improve database description display based on
added a call to ` ClearDatabaseChangeLogTableStatement ` in ` AbstractJdbcDatabase . java ` to execute a specific statement using the executor
added version handling and improved path validation in RestClient and CallPath classes to enhance robustness by ensuring proper versioning and handling of null
updated exception handling in PhoenixDriver . java and added closed check in the close method to improve clarity and ensure proper resource management
replaced ` Mesurement ` with ` Measurement ` in multiple Java files and added ` UnsupportedOperationException ` to improve code clarity and enforce
added JUnit after tests and extended FolderPickerActivityIT with a screenshot test to improve test coverage and ensure proper functionality of the FolderPickerActivity
[ gr - 16936 ] fix lir optimizations in dev mode .
added a check to ensure the length of the string is less than 2 and implemented a test for removing leading and ending quotes in the StringHelper class
refactor type handling in JpaQueryCreator and ParameterMetadataProvider to improve clarity and functionality to enhance code readability and maintainability by
do n ' t send retry transaction if authentication duration exceed 25 second .
added a copy of the message to the dispatch method in P25MessageFramer . java to ensure that the copy of the message is
added null checks for the handler before invoking checkClosed ( ) in WebSocketImpl . java and implemented a new test in WebsocketTest . java
[ ds - 3952 ] fix discoveryit to work with claimedtask and pooltask
updated widget padding calculations in AppWidgetResizeFrame , Launcher , and LauncherAppWidgetHostView to use dynamic padding values to improve flex
added methods to hide all apps in the Taskbar UI and updated closeOverlay method in BaseActivityInterface to improve user experience by allowing users to
removed the synchronized keyword from the launch method in CrawlJob . java to simplify the method by eliminating unnecessary synchronization
updated zoom position calculation in JavaSEPort . java to use canvas . x and canvas . y instead of e . getX ( ) / zoom
replace notificationManager calls with a method call to startForeground in UploadService . java to improve code readability and maintainability by centralizingForeground
fixed bug 1244432 - excessivepubliccounttest . teststaticfinal ( ) fail on jdk8 due to miss ` `
hbase - 25836 addendum set hbase . client . retries . number to 3 in testthrifthbaseservicehandler
change log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity and reduce log verbosity
added error handling for ` FileNotFoundException ` in ` ResourceUtils . java ` and changed log level from debug to trace in ` AbstractCipherExecutor .
added a new API endpoint to retrieve tickers from Bittrex and integrated it into the BittrexMarketDataServiceRaw class to
hhh - 14263 fix classcastexception in entityentry . getenumconstants
updated session registration methods to accept ` Object ` parameters instead of ` Class < ? > ` parameters to enhance flexibility in session management by allowing
updated character array to include additional characters ' \ u0005 ' , ' \ u0006 ' , and ' \ u0007 '
added support for a stylesheet resource in ResourceService and updated related methods in ResourceHandler and DefaultServlet to enhance flexibility in handling stylesheet resources and
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
updated the method call from ` ObjectParameterStrategy . class ` to ` PointerParameterStrategy . class ` in ` X86MethodGenerator . java
added a check for the ` CockroachDatabase ` database type in the ` CreateSequenceGenerator ` class to ensure compatibility with Cock
removed the condition for checking the name of an enum in ObjectStreamClass . java to simplify the logic for string type checks
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and added a new class ` SymbolNotFoundError
added a conditional check to create a SolrDocument instance based on the list of file names to enhance document retrieval flexibility by allowing only pseudo fields
added handling for PING and PONG events in WebSocketImplBase and implemented a test for WebSocket pause behavior in WebSocketTest to ensure proper behavior
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to correctly escape special characters in regular expression matching
added support for dns cache options in DnsResolverProvider and updated test methods in HostnameResolutionTest to enhance DNS resolution flexibility and improve test coverage
added a conditional annotation for MessagingTracing in TraceMessagingAutoConfiguration . java to ensure that messaging tracing is only enabled when applicable
mondrian : fix mondrian mart loader quote identifier for db2
updated import statements in multiple Java files for consistency and clarity to improve code readability and maintainability by standardizing event imports
added a condition to handle the ' / ' character in XMLLightweightParser to ensure proper handling of closing tags in XML parsing
set the visibility of the TouchCharInput class to GONE to improve user interface responsiveness by preventing unnecessary visibility changes
added a null check for the current user before comparing the ID to avoid potential NullPointerExceptions when the current user is not initialized
refactor JSObjectLinker to improve index handling and return logic to enhance code clarity and ensure correct assignment of JSObject members
refactor DefaultUniqueTicketIdGenerator to simplify constructor and introduce a setSuffix method to improve code readability and maintainability by reducing
added a deprecation annotation to the SecurityConfig class to indicate that the class is outdated and should no longer be used
added @ Deprecated ( forRemoval = true , since = " TODO " ) to multiple classes to indicate that these classes should no longer be used
deleted the JoglDebugAdaptor . java file and updated GuiceStartup . java to update debug logging behavior to streamline debug output handling
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` , ` AWSPropagation ` , and ` AWSPropagationTest ` classes to enhance
added PendingIntent to the FileDownloader and FileUploader classes to set the content intent for notifications to ensure that notifications are updated with the current
added a private method ` set ( ) ` to the ` nextOrd ( ) ` method in ` Lucene80DocValuesProducer ` to
refactor DateTimeFormatter class to improve readability to enhance maintainability and ease of understanding for future developers
removed unnecessary class loading for ` Win32ShellFolderManager2 ` in ` WToolkit . java ` to streamline code by elimin
added null and empty checks for principal , password , and keytab in setAdministratorCredentials method to ensure that administrator credentials are not null or
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and updated width calculation logic in BaseWidgetSheet . java
added rendering begin and end methods to PSurfaceJOGL to enhance rendering performance and customization options
refactor hashing logic in Hashing . java to improve code readability and maintainability
modified the accept method in FileSenderFactory to use folderPath and fileName instead of a string to improve flexibility in file handling based on folder and
updated the ` addToListIfNeeded ` method to include additional drawable resources and added a new ` contentDescriptionInt ` parameter to enhance user information display
added a null check for the type before creating a new instance to prevent potential NullPointerExceptions during type processing
increased the ACTIVITY _ START _ DELAY from 500 to 800 to allow for a longer delay before starting the activity
added a new constant ` WEBAPP _ HOME ` and updated the path references in ` JettyWebappTest . java ` to use this
removed conditional initialization of diameter and initialized selectedMotorSet to null in ThrustCurveMotorSelectionPanel . java to simplify the code
added import for BufferUtil and called clearToFill method in ByteBufferPool . java to utilize buffer clearing functionality for better performance
refactor notification rule processing to use ` EntityId ` instead of ` EntityId ` and add a new test for alarm trigger functionality to improve
changed authorization prefixes to authentication prefixes in LDAP group configuration to enhance security by restricting access to LDAP groups
added delete of exchange and queue in DurableOnTransient . java to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
do n ' t close socket if connect to server fails
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter . java for improved readability to enhance maintainability and clarity of the code
added exception handling around the lookup method call in SulongLibrary . java to improve robustness by handling potential IllegalStateExceptions
updated schema references from Spring Security 6.2 to Spring Security 6.3 in multiple files to ensure compatibility with Spring Security 6.3 features
refactor ` newNameResolver ` method to accept ` NameResolver . Args ` instead of ` Helper ` and update related references in ` DiscoveryClient
added a conditional check for non - empty annotations and modified the position handling in JavacParser . java , and created a new TestAnnotated
added " com . sun . naming . internal . " to the CheckPackageAccess . java file to ensure proper access control for internal packages
changed the ` strict ` variable from false to true in ` StaxEventItemReader . java ` to enable strict mode for XML parsing
added an ` isExhausted ` flag and modified the ` readPartition ` method to include it in ` OfflineSorter . java ` to
refactor ActionResetingPool class for improved resource management to enhance performance and maintainability of the code
added a null check for ` getXY ( ) ` before returning the value of ` fromXYtoHSBType ( lightState ) `
refactor CellLayout to utilize targetCell arrays for folder creation and reorder radius calculations to enhance code readability and maintainability by centralizing
added a call to ` FileDisplayActivity ` to show the loading dialog in multiple fragments to improve user experience by ensuring the loading dialog is displayed
added null checks for ` uigestureFile ` before loading logs and initialized ` recordsMap ` , ` valuesMap ` , and ` messages
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for case sensitivity to ensure accurate matching of field names across different locales
added getListeners ( ) method to result to ensure listeners are properly set for XML processing
added a new ` loadWithNewGlobal ` method and updated related methods in ` Global . java ` and ` Context . java ` to enhance
added ` fromJsonString ` and ` toJsonString ` methods to ` StarTreeIndexSpec ` class and updated tests in ` TableConfigTest
updated HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , Saml2LogoutConfigurer ,
updated string replacements from " \ " to ' / ' in AndroidFileHandle , GwtFileHandle , and FileHandle classes to ensure consistent
[ drools - 2287 ] inoperator should handle null for in ( ) and not in ( )
added FieldCache import and commit method to TestDistributedSearch . java to avoid FC insanity during segment processing
http : / / code . google . com / p / mybatis / issues / detail ? id = 534 : add test for
updated method signatures in ProgramManager and PointerAnalysisImpl to use ' target ' instead of ' method ' and added static method resolution in Jimple
http : / / issues . apache . org / jira / browse / amq - 4748 - add a message group hash bucket
added constants for NETSCAPE _ SLOT _ ID and PRIVATE _ KEY _ SLOT _ ID , and modified the slot assignment logic
added alignment functionality to the add method in the Layout class and changed the return type of startRenderer method in GdxRenderer to enable flexible
[ hotfix ] [ test ] add @ ignore to unalignedcheckpointitcase
added import statements and a null check for specific class types in JDK13Services . java to ensure proper handling of specific classes and prevent potential NullPointerException
added a check to prevent adding a keyword to the keywordToReference map to ensure the keyword is only added if it does not already exist
camel - 14263 : fix multicast processor to correctly calculate the size of a collection . thanks to jesus camacho ro
removed unused methods from SegGraph , SegToken , and WordDictionary classes to streamline code and improve readability by eliminating
escape special characters in FlavorStatsdLineBuilder and add a corresponding test to ensure proper handling of special characters in metric names and their values
added support for a udp port in the MemberImpl class and updated related constants and methods in MemberImpl . java and MemberSerialization . java to
rename ` OperatorMulticast ` class to ` OperationMulticast ` and update related references to improve clarity and consistency in naming conventions
increased the send timeout from 1ms to 100ms in EventBusTracerTestBase . java to allow more time for message delivery to
added a try - finally block around the latch operation in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
added a destroy method to SessionFactoryServiceRegistryImpl class to clear the cached event listener registry to ensure proper resource management and prevent memory leaks
replaced ` openHomePage ( ) ` with ` openLocalhost ( ) ` and introduced ` getJwtTokenFromLocalStorage ( )
[ ivalueutilstest ] add test case for tuple and map of tensor
added a listener for task stack visibility changes in RecentsView . java and removed the onEnterAnimationComplete method from BaseActivity . java
refactor DefaultSplitCharacter to use a static final DATE _ PATTERN for regex matching and introduce a new test class for date pattern profiling to
camel - 14263 : camel - cxf - allow to configure the factory bean if it ' s not already set
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability by encapsulating pending animation logic
added debug logging and improved play time calculation in LauncherAnimationRunner to enhance debugging capabilities and ensure accurate playback time calculation
added a ` BailoutOnException ` option to the ` C1XCompilation ` class and modified exception handling logic based on it to
changed signup and passwd to null in Links . java and updated related tests in IdentityZoneConfigurationBootstrapTests . java to ensure default values are
[ hotfix ] [ runtime ] rename slotprofile # previousexecutiongraphallocations to slotprofile # reserveallocations
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and introduced a method to retrieve the format to improve flexibility
added NoDataContainer support to GeoTiffReader and its test to enable garbage collection of data in the image processing
sulong : do n ' t throw an illegalargumentexception if there be no source section
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao .
replaced the client ' s blockUntilConnected method with a CountDownLatch for handling connection state changes to improve responsiveness to connected events
added null checks for array values in ArrayTypeHandler to enhance robustness by preventing potential NullPointerExceptions
replaced the implementation of ` RegexpTunnel ` with reflection - based access to access the ` prefix ` field in ` JakartaRegexp
updated application picking method to use Application . class instead of null to ensure compatibility with the latest application configuration requirements
[ drools - 5242 ] avoid npe when set global ' s context be mutable in phreakfromnode
replaced Preconditions with TransactionUtil for asset name validation in AssetIssueActuator . java and added validation methods in TransactionUtil . java to ensure
do n ' t copy paste from textfield , if it ' s not already in the list
updated action description and status descriptions in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , and LGWebOSHandler
replaced setting seed nodes with adding active and trust nodes in TronNetService to ensure that all active and trust nodes are included in the
enhanced assertions in BaseTokenStreamTestCase to include additional context about the token ' s position and length to improve debugging by providing more context
log4j2 - 1349 , log4j2 - 1349 add a modulate option to the timebasedtriggering
added methods to perform item click functionality and check for item containing text in ShadowAdapterView and ShadowListView to enhance item interaction functionality and ensure
pdfbox - 4892 : fix compilation error , a suggest by valerybokov
added afterMethodScope method handling in GraphDecoder and PEGraphDecoder classes to improve method scope management and debug output during graph decoding
updated HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and added tests for security contexts to ensure correct retrieval of security contexts from
added a test to verify that changing the service name from a manually provided name in Zipkin to ensure that the span ' s service name is
added logging for excluded classes in JavaInMemoryFileManager and refactored spooling logic in JavacToJarStepFactory to
renamed ` SeparatedProjectGenerator ` and ` SeparatedProjectGeneratorTest ` to ` SeparatedProjectsGenerator ` and updated
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow more time for the lock to become available before
added a cache capacity constant and updated method signatures in ConfluentSchemaRegistryDeserializerProvider to include schema registry configurations to enhance flexibility in schema
renamed the JCheckBox ' remind ' to ' checkAtStartup ' in UpdateInfoDialog . java to improve clarity and consistency in
added method constraints for keyStrength , valueStrength , maximumSize , expirationAfterAccess , and weighed parameters in NodeGenerator . java to
hhh - 14284 : do n ' t throw transientpropertyvalueexception for non - hibernate proxy
added methods for retrieving and setting the proto object and updated the handling of non - extensible properties to improve the flexibility and functionality of
updated the default read mode from " heap " to " mmap " and modified the return statement in ImmutableSegmentLoader to include logging for segment loading
added import for ByteArrayTemplate and implemented handling for byte class in ArrayTemplateBuilder to enable proper handling of byte array templates in the application
added Hipchat property and associated getter and setter methods to SamlServiceProviderProperties . java and created CasSamlSPHipchatConfiguration .
replaced ` List < URL > commandRegistryUrls ` with a ` Set < URL > commandRegistryUrls ` and updated resource loading logic to
updated warning log message to include the current context for uncovered HTTP methods and added debug logging to improve clarity of warning messages and enhance
modified the login method signature in SvnRepositoryConnector . java and added a login flag in SftpRepositoryConnector . java to ensure that the
http : / / issues . apache . org / jira / browse / amq - 4748 - allow to configure lazy - create
cloudstack - 10363 : fix typo in vmwareresource . java
refactor Timers class for improved readability to enhance maintainability and ease of future updates
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in the ` DefaultDefectReporter ` class to
removed deprecated constructors and updated constructors in UAX29URLEmailTokenizer to use the latest LUCENE _ 31 constant instead to stream
removed generic type ` Map < Object , Object > ` from ` ScriptObject ` and related tests to simplify type safety and improve code clarity
refactor EventBusMetrics class to improve code readability to enhance maintainability and ease of understanding for future developers
( scott phillips ) fix npe in i18nutil . getsupportedlocale ( )
updated JaversTransactionalDecorator to implement InitializingBean and modified the ` ensureSchema ` method to improve bean initialization handling and ensure schema is
removed null check for pgTypeName before adding it to the _ pgNameToSQLType map to simplify the code by avoiding unnecessary null checks
added multiple sets of server instances in ScopedHandlerTest . java to ensure proper initialization of server instances for handler0 and handler1
add retry _ response to calltimeoutexception to prevent calltimeoutexception be throw during wait - notify phase .
replaced StringUtils . isBlank with StringUtils . isEmpty for username and password checks to improve code readability and maintainability by using a more descriptive
updated permissionNode check to use " * " instead of an empty string to enhance clarity and prevent potential null pointer exceptions
rename ` encoding ` to ` sourceCharset ` and update corresponding setter methods in ` AbstractCompiler ` and ` ICompiler ` classes to improve cl
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and related classes to
refactor simulation handling and error messages in GeneralOptimizationDialog . java to improve code clarity and maintainability by using final variables instead of
camel - 15836 : camel - jbang - allow to turn on / off context reload by default
updated logging configuration in CommonTestUtils . java to use logger properties instead of log4j to improve logging consistency and clarity in logging configuration
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactor NearbyListFragment to improve code structure to enhance maintainability and readability of the code
added a check for non - closing supported input streams in RequestBody . java and implemented a corresponding test in RequestBodyTest . java to ensure
added a condition to check if the embedded settings are enabled before proceeding to ensure that only active beans are processed when enabled , improving code
restore default movement and health components in movementdebugcommands
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted the logic for determining the index of the upstream list
removed unnecessary caching string construction and improved validation checks in GsonParser and MetricsResourceTest to streamline cache string handling and enhance test coverage for
updated sorting parameters in ApacheHttpClientMediaWikiApi . java to include comments to clarify the direction of sorting in the API requests
replaced calls to ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract `
replaced ReentrantLock with a direct instantiation of PipeTaskCoordinatorLock in PipeTaskCoordinator . java and added a new PipeTaskCoordinator
updated DefaultSdkProvider to conditionally return a DependencyJar based on the " robolectric . usePreinstrumentedJars " system
[ hotfix ] [ sql - client ] fix checkstyle violation in execdriver
added validation for default and required attributes on dynamic fields in IndexSchema . java and a corresponding test in BadIndexSchemaTest . java to ensure
removed a conditional check for randomlyReadRepair in StorageProxy . java to streamline the code for better readability and efficiency
replaced ImmutableSortedSet with Iterables for adding system include roots and added a test for includeDirs in PrebuiltCxxLibraryDescriptionTest to
added flags for sensitive subject key identifier and serial number handling in AdaptableX509CertSelector . java and updated basic constraints in ForwardBuilder .
log4j2 - 1349 use abstractappender . parseint ( string , int ) instead of integer . parseint ( string
marked GuiScreenEvent class as deprecated to indicate that the class should no longer be used in 1.16
added methods for adding and removing categories in CategoryEditSearchRecyclerViewAdapter to enhance category management functionality for better user experience
# 355 - enh : add support for server cache type to be able to cache bean data .
updated the way massOverriddenBy and CGOverriddenBy are set in RocketComponent . java to ensure proper handling of overridden properties
added a destroy method to the ReusableCompiler service and modified synchronization methods in JavaDiagnosticProvider to improve resource management and handle potential cancellation during compilation
refactor Task class to use a Supplier for better flexibility and null safety to enhance code reliability and prevent potential NullPointerExceptions during task execution
added synchronization to the WanReplicationServiceImpl class and refactored the executor initialization in WanReplicationServiceImpl to improve thread safety and
added null checks for SD and table before returning the location in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java
refactor code to use lambda expressions in LocalServiceRegistryClientImpl and RemoteServiceRegistry to improve readability and maintainability of the code
added a new test class FilesTest to verify file deletion functionality to ensure that the delete functionality works correctly for temporary files and prevent runtime exceptions
removed exception handling around the close method in ServerSocketAdaptor and SocketAdaptor classes to simplify the code by eliminating unnecessary exception handling
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replace currentWorkingDirectoryList . clear ( ) with addWorkingDir ( f . toString ( ) ) for better clarity to improve code read
added null check for ` cn ` in ` ItemInfo . java ` and updated ` mInsets . set ( insets ) ` in `
changed the access modifier of the final static String from public to private to restrict access to the static String for better encapsulation
updated Java file types from " http : / / localhost : 8983 / solr / update / csv " to " application / json - jar
ggb - 113 fix : max / min / sqrt ( 2 ) = = - 2 ^ ( - 2 ) ^ ( - 2
refactor WebSocket client container initialization and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error management
updated conditional check for ` type ` to use ` | | ` instead of ` && ` to improve readability and maintainability of the code
added cleanup of web application context in multiple test classes to ensure proper resource management and prevent memory leaks
added a method to retrieve the search string from the query parameters and updated resource retrieval logic to enhance functionality to allow users to search resources based on
hide the neutral button in SetupEncryptionDialogFragment to improve user experience by preventing unnecessary UI elements
refactor countitems method to include parameters for includeArchived and includeWithdrawn parameters to enhance flexibility in counting items based on archived
updated SQL statement syntax for creating tables and columns in DDLTask . java to improve SQL syntax consistency and avoid SQL injection vulnerabilities
added exception handling functionality to CheckTokenEndpoint to improve error reporting and logging for OAuth2 exceptions
updated multiple Java classes to implement a new method ` lookupSeriesPaint ( ) ` in the ` AbstractRenderer ` class to enhance functionality by allowing
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use ParameterizedTypeReference and HttpEntity for HTTP requests to improve code clarity and
updated dismiss delay from 20000 to 10000 and added tooltip text for variable substitution in SQL console to improve user experience by providing more precise dismissal
added support for JUnit 5 and Surefire 2.22 . 0 in ActionProviderImpl . java to ensure compatibility with JUnit 5
updated exception handling in WorkerShellStep to use RuntimeException instead of HumanReadableException to improve error handling clarity and provide more informative feedback
[ hotfix ] [ stream api ] make flink - streaming - java a experimental annotation
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a boundary check for the index parameter in the List class to ensure proper handling of index values within the bounds of the list
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct handling of parentheses in expression validation
added confirmation parameter to the DebugPaste command to allow confirmation for the debug paste command to enhance user experience by providing a confirmation option
replaced ` get ( ) ` method calls with ` orElseThrow ( ) ` in multiple configuration classes to improve error handling by providing clearer
ggb - 210 : fix for quill ggb , when new creation mode be enable .
replaced ` Arg ` with ` AbstractGoBinaryDescriptionArg ` and updated related imports and methods in ` GoBinaryDescription . java ` to
added logic to retrieve the classpath of the " application . env " configuration from the classpath logback . " env . xml " to ensure the
replaced ` RetryListenerSupport ` with ` RetryListener ` and added a new ` SecondDummyRetryListener ` class to simplify the class hierarchy
added decimal representation to the writeCounter method and updated the formatting of the index line in ElasticMeterRegistry to ensure accurate representation of counter values in
changed email and author variables to final and added a constructor for the Contribution class to enhance immutability and encapsulate email / author information
refactor the loop structure in JUnitFormatter to use a do - while loop to improve readability and maintainability of the code
updated the assignment of the ' elements ' variable to use a temporary variable and added a conditional check for the type of ' tmp ' to ensure
enhanced error messages in ` StaxEventItemReader ` to include the URL of the input resource to improve clarity of error messages and
refactor TestMultiRenderTarget to use a PointLight array for better handling of point light positions to improve performance by reducing the number of
added null check for currentProfile and improved client result handling in DelegatedAuthenticationClientLogoutAction . java to enhance robustness by preventing
replaced ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java `
added BigInteger parameters and DSAParameterSpec to KeyStoreManager . java to enhance security parameters for cryptographic operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
added functionality to set the engine version in BpmnDeployer and its corresponding test in BpmnDeployerTest to ensure the correct engine version
updated property names in VelocityEngine to use " resource . loaders " instead of " class . resource . loader " and adjusted property settings accordingly to
added verification methods for current thread and attached threads in VMThreads . java and updated related methods in CEntryPointSnippets . java to enhance
added null check for the map before processing values in GenericUDFMapValues . java and created a new test class GenericUDFMapValues
corrected a typo in the method name from " interceptors " to " handlerInterceptors " to ensure accurate method naming for better clarity and
added configuration properties for oil well generation rate and spouts in BCEnergyConfig and OilGenerator classes to allow dynamic control over o
added a check for the existence of a " . clean - me " directory in the ImportContext class and updated its logic in JobQueue to
improve error message when memoryrealm . readxml fails
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
updated constants in ZipConstants . java and added an import statement in ZipEntry . java to improve code organization and clarify functionality related to zip
refactor file handling in ZipFileSystemProvider to improve file existence checking and error handling to enhance robustness and robustness of file creation processes
modified the layout layout of the conditionPanel from createHorizontalStrut to createHorizontalGlue to improve the visual appearance of the condition label
updated the connection initialization in FailoverUpdateURIsTest . java to ensure proper initialization of the connection object
added Gson @ SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enable serialization
added a method to delete a book and updated database entry deletion logic to improve file management and ensure proper deletion of database entries
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
adjusted the calculation of responseMessage ' s buffer length in AbstractAjpProcessor . java to ensure correct handling of response message length during processing
do n ' t try to stop the admin console server when the server be stop .
added binaryConsumer and textConsumer to the WebSocketImplBase class and removed the unregisterHandlers method from the ConnectionBase class to streamline resource management
added configuration properties for device ID transformation method , ID table , and log file in IoTDBDescriptor . java to allow dynamic configuration of ID table
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and added a new DelayingSearchComponent class to improve test coverage and enhance
updated the condition for checking the access error in TestSignatureInfo . java to correct the logic for determining if the access error is present
refactor script code creation to use witnessScript instead of scriptCode to simplify code and improve clarity by using a more descriptive variable name
updated the expression path in IndexSchema . java to include " / schema / types / fieldType " to ensure the correct schema type is referenced in
added null - checking for valueCompleter in Completers . java and created a new test class OptionCompleterTest . java to enhance
camel - 14850 - camel - aws2 - s3 : list all object in a single call to s3utils . listobjects
[ iotdb - 4892 ] change the type of ` ` sourcepeerid ' ' from ` ` string ' ' to ` `
added a check for " . zip " file before uploading files in FtpHelper . java to ensure only valid zip files are uploaded to avoid
updated the transparency of the reply button from 0.5 f to 1.0 f to improve the visual appearance of the reply button by
added mocking for ` AccessLogContext ` and modified expected string concatenation in ` AccessLogSupportTest . java ` to improve test clarity
update maryCacheFile path from " testfiles - deleteme " to " tmp / testfiles - deleteme " to ensure maryCacheFile
removed redundant null checks for subscribers and simplified return statements to improve code readability and maintainability
added a null check for the marshaller in AbstractSamlObjectBuilder and removed unnecessary initialization checks in AbstractSaml10ResponseView to improve error handling and
replaced printStackTrace ( ) calls with LogUtil . warn ( t ) in DataBrowser . java to enhance logging capabilities by using a more appropriate
added a check for the existence of the assets directory in dev mode and created a new test for static directory classpath to ensure that static files are
[ hotfix ] [ statebackend ] add writeoptions to rocksdbkeyedstatebackend . db call
updated the default format constant in CoreLabel . java from " value - tag - index " to " value - index " to correct the format
added hint and request hints to GraphHopper initialization in MainActivity . java to enhance code readability and maintainability by standardizing hint handling
change default value of ` nativeSecp256k1 ` and ` nativeAltbn128 ` from ` false ` to ` true ` across
rename DuclsSandboxTest to SandboxTest and update related references to improve clarity and consistency in naming conventions
camel - 16400 : camel - cxf - do n ' t log exception in case of failure to process message
change the access modifier of the forwardPropagateTree method from package - private to public to allow access to the method from outside the package
updated SQL query to include additional milliseconds parameters in the group by clause to improve query performance by allowing for more precise time measurement
defaultmodelvalidator : improve error message when use $ { project . basedir } in profile activation
refactor Style class to improve code readability to enhance maintainability and ease of understanding for future developers
added zoom functionality to ShareActivity when the back button is pressed to enhance user experience by allowing navigation to out - of - world navigation
added a condition to skip processing fields marked with deprecated in Json . java to ensure proper handling of deprecated fields in JSON processing
added animation listeners for showing and hiding the send layout in LauncherFragment to enhance user experience by providing visual feedback during the sending process
[ hotfix ] [ yarn ] fix checkstyle violation in utils
added Progressable parameter to multiple method signatures in Utilities . java and updated related classes to include progress handling to enhance progress tracking and improve code cl
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove a contribution from the panelByContribution list and update panel ordering and colors accordingly to ensure proper management of contribution data in the Contribution
renamed ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and updated its logger reference to improve clarity and consistency in
added a default value for dPath if it is empty to ensure the application uses the user ' s current directory instead of the application ' s
updated sampleRate handling in DefaultAudioSink . java to ensure proper sampling rate when format is not NO _ VALUE
log4j2 - 1349 add a mapfilter . filter ( mapmessage ) method to filter message data
updated VerificationInOrderWithCallsTest . java file to enhance test coverage for verification functionality
updated the argument of the setFromAxis method from ` axis . z ` to ` axis . x ` in the Quaternion class to correct the
updated COLLECTION _ DELIM constant value from " colelction . delim " to " collection . delim " to ensure consistency in naming con
add a new test method ` testListenerConnectedAtStart ` to verify the behavior of the ` ConnectionStateListener ` to ensure that the listener
[ netbeans - 5355 ] fix documentation generation for union and union type
refactor one - handed mode support checks in RecentsAnimationDeviceState . java to improve code readability and maintainability by reducing
added onDetachedFromWindow ( ) method to cancel all running tasks in AppsCustomizePagedView to ensure proper resource management and
added a dictionary resource parameter to MorfologikAnalyzer and MorfologikFilter constructors to allow users to specify a dictionary for
removed redundant count checks and initialized thrown variable to false in ResultSetTest . java to streamline test by eliminating unnecessary exception handling
updated the ` InitializeProjectMessage ` constructor to use an empty string instead of a hardcoded string to simplify the project initialization message for easier debugging
replaced AtomicReference < Boolean > with AtomicBoolean for preventedByLocking and introduced a method to check for MVCC anomaly detection to
refactor tooltip text handling in ComponentTreeRenderer and related classes to improve code readability and maintainability by reducing redundancy
increased the timeout duration for the zipkin server await from 5 seconds to 10 seconds to allow more time for the zipkin server to
added username and password handling for Deviantart login in DeviantartRipper . java to enhance security by allowing users to
updated PackageUtils . java to use constants for GOOGLE _ PRIMARY _ KEYS instead of KNOWN _ GOOGLE _ SIGNATURE
replaced ` commonApp . solutionBusiness ` with ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirSolveAllT
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes in the application
added email description to template in EntityGroupKeyContentFormatter and updated test description in TestEntityGroupKeyEmailContentFormatter to enhance user experience by
replaced the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to
updated language retrieval logic in Locale . java and added error handling in LocaleTest . java to ensure correct handling of language codes and provide clearer
refactor ChangeLogParser usage and introduce a createUpdateVisitor method in Liquibase . java to improve code readability and encaps
added a check to return early if screen pinning is active to improve performance by avoiding unnecessary processing when the screen is pinned
added functionality to display a text for no chart data available in the Chart class to enhance user experience by providing a clearer and more descriptive
added synchronization and head writing checks in Http1xServerResponse , Http2ServerResponse , and Http3ServerResponse classes to ensure thread safety
refactor chunk handling in NettyResponse to use a dedicated chunkHandler method to improve code clarity and maintainability by centralizing chunk handling
added header " : scheme " to the list of headers in Http2TestBase . java and TestHttp2Limits . java to ensure proper
fixed - rlocalcachedmap . getkeyset ( ) and rlocalcachedmap . getvalues ( ) method do n ' t return
camel - 14263 : camel - jpa - allow to configure entitymanager and transactionmanager from the component before start camel - jpa
updated jumpSpeed assignment from fallSpeed to jumpSpeed in PhysicsCharacter . java to correct the assignment logic for the jumpSpeed property
added a condition to check if reparsedFunction is null before proceeding to ensure proper handling of syntax extensions when reparsedFunction is null
updated logging and order handling in BitstampPusherService . java to improve clarity and consistency to enhance code readability and maintainability by
deprecate fileuploaddownloadclient # getolduploadsegmenthttpuri and fileuploaddownloadclient # getolduploadsegmenthttpsuri
added a filter parameter to the findOne method in MongoDbTailTrackingManager . java to allow for more flexible filtering of the tracking object
added a new method ` assertPredicateFails ` in ` LanguageTestSupport ` and implemented assertions in ` JuelLanguageTest ` to ensure that
added a range check for the alpha variable in RecentsView . java to ensure the alpha value is within the valid range of 0 to
updated the string concatenation syntax for the " version " attribute in the Import - Package attribute to ensure consistent formatting of the version string for consistency in
refactor DataSyncConfiguration class for improved clarity to enhance maintainability and readability of the code
added import for JavaSnippetRepository and initialized it in JavaLanguageServer . java to initialize the snippet repository for improved functionality
added a loop to update sums for timeBuckets in StarTreeRecordStoreCircularBufferImpl . java to ensure that sums are only updated when
chrome : update chromedriver . downloads . list to chromedriver . storage . googleapis . com / index . html ( #
( chore ) camel - pgjdbc : use try - with - resources for prepared statement
replaced imports from ` com . sun . syndication . feed . syndication ` with ` com . rometools .
added Content - Length header handling in TransferCompletionHandler and updated NettyTransferAdapter instantiation in NettyAsyncHttpProvider to ensure accurate transfer size
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
removed the constructor of EnhancedRuntimeException from the EnhancedRuntimeException class to simplify the class structure and improve code readability
added CountDownLatch and modified exception handling in SocketAppenderTest . java to improve concurrency handling and enhance debugging capabilities
( chore ) camel - event - admin : remove unused class
refactor exception handling and formatting in ByteArray . java to improve code readability and maintainability
added a method to disable input proxy and log warnings for non - down and down touch events in RecentsAnimationWrapper . java to improve
camel - 6770 : disable restlet test until camel - 6770 be fix
removed parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method signature to simplify method signature and improve readability
rename ` com . hazelcast . tests ` to ` com . hazelcast . test . modulepath ` in ` ModulePathTest . java
added a new method ` getSourceDirs ( ) ` to retrieve source directories in the ` JavaLanguageServer ` class to enhance the functionality by allowing
updated the menu item ID from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to improve
corrected the spelling of " nodeIsAncestorOfItself " and " nodeIsNotDescendantOfItself " in multiple test methods to
update y - coordinate calculations to ensure non - negative values to prevent potential negative values from being assigned
added a new ` PathNotExistException ` to the ` selfCheckDataTypes ` method and modified the logic for handling null measurement schemas to improve
removed unnecessary closing braces in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ stream ] remove unused mailboxexecutor from operator factory
hbase - 25850 allow settablestateinmeta and fixmetagenotfoundexception to throw remotewebexception
updated method references and printed meter IDs in GatewayMetricFilterTests . java to improve readability and clarity of log messages during search
updated the ` BlockJUnit4ClassRunner ` constructor to use ` getJavaClass ( ) ` instead of ` getTestClass ( ) ` to
[ drools - 7 ] use lasttimedata instead of remoteitems in updatehandler . handle ( )
adjusted the calculation of allAppsCellWidthPx by adding 2 * allAppsCellPaddingPx to ensure proper alignment of the allApps cell
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that multi - phrase
change the return type of the close ( ) method from Connection to void in multiple session - related classes to allow the close ( ) method to
refactor GetLocations class to improve code structure to enhance maintainability and readability of the code
updated exception handling logic in SchemaValidatorTask . java to check for null before printing stack trace to improve code clarity and prevent potential NullPointerExceptions
replaced ` UncheckedIOException ` with ` IgnoredIOException ` in the ` Contents . java ` file to simplify error handling by using a more
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and improve compatibility
ruby flavor : improve handling of repeat term in snippet output
updated logging level from warning to debug in DerbyDatabase and added null checks for username and password in BaseLiquibaseTask to improve
removed the useCaches property and related logic from Nio2Endpoint . java to simplify cache management and improve code readability
refactor CasGeoLocationConfiguration to use Resource for database reading instead of MaxmindProperties to simplify database loading logic and improve code maintainability
updated test cases in InstructorFeedbackResultsPageUiTest to replace " instructorFeedbackResultsPageOpenWithHelperView1 " and " in
added a scan parameter to the useEncodedQualifierListOptimization method in BaseResultIterators . java and modified its logic in EncodedColumnsUtil
removed public access modifier from several methods in ApprovalStore and ApprovalsControllerService classes to enhance encapsulation by restricting access to
added a delayed download operation to the FileDownloader class to cancel notifications when a download is started to improve user experience by preventing unint
updated method calls from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in `
updated project version from 1.0 . 11 to 1.0 . 13 in JFreeChartResources . java to reflect the latest version of
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
refactor GsonBuilder to improve code structure to enhance maintainability and readability of the code
add null check for centerGeo before adding it to the circleCenters list to avoid potential NullPointerExceptions when centerGeo is null
[ gr - 16911 ] remove espresso . home option from graalvm . properties .
doc : fix typo find by codespell on fossies . org
changed ` DeleteSessionAction ` class to be ` final ` and modified its getter and setter methods to enhance immutability and encapsulation of
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and
updated variable initialization and error handling in JoinQParserPlugin , SolrIndexSearcher , and TestJoin classes to improve code clarity and ensure
updated the call to ` FileDataStorageManager . triggerMediaScan ` to include the file parameter to ensure that the media scan triggers the correct
removed conditional logic for printing test results in TestRunning . java to simplify test execution by eliminating unnecessary verbosity checks
added methods to set custom G - code settings in MainWindow to enhance user experience by allowing custom G - code settings to be applied
replaced PrintWriter with BufferedWriter for Writer creation in AdditionalJaxbMappingProducerImpl . java to improve performance by leveraging UTF - 8
refactor JsonElement class to improve type safety to enhance code reliability and maintainability
added exception handling for " unset . sys . property " in TestBadConfig . java to improve test reliability by ignoring specific exceptions during tests
added a method to remove fragments and the ActionBar in GpsMainActivity to ensure the ActionBar is shown when no fragments are available
added parentheses to the spanishTokens and spanishTokens2 lists in TokenizerAnnotatorITest . java to enhance tokenization functionality by allowing
updated ` RemoteUtil ` to return ` Range . Byte ` instead of ` Range . Range ` for better type handling to improve code clarity
updated the G - code file path and modified G - code output formatting in VisualizerCanvas . java and GcodeViewParse . java to
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to the TestBack
updated the formatting of the hasSameSizeAs method call in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to
added a condition to close exchangeClient if the query is complete and the output stage is null to ensure proper resource management and prevent potential memory leak
refactor file directory handling in IntegrityCheck and add unit tests in IntegrityCheckTest to improve code clarity and ensure proper context setup
removed unused import of SolrClient and shardToClient from ChaosMonkey . java to clean up the code and improve readability
added null check for fas before accessing its properties in ConfigurationActivator . java to avoid potential NullPointerExceptions when fas is null
updated the formatting of the ` add ` method in ` NestedRepositoryTreePanel . java ` to improve code readability and maintain consistency
added a constructor to the ExtensionTypeHeader class that requires a valid type and length to ensure that the extension type is within valid range to prevent
pdfbox - 4892 : do n ' t throw ioexception , a suggest by valerybokov
change the default value of pushOnShutdown from true to false and update its getter / setter methods accordingly to allow configuration of push - on -
added error handling and error context for trigger callbacks in ReactiveStateMachineExecutor to improve error management and context management during state machine execution
added a test for handling multiple Python executable paths in BuckConfigTest . java to ensure that the correct executable path is used for the first
added a default button to the root pane ' s default button in InitialAccountRegistrationFrame . java to enhance user interface functionality by allowing dynamic button
added a new configuration variable ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN ` in ` HiveConf
updated error logging message from " forgot password info " to " forgot password info email " and added exception context to improve clarity of
move ReflectionUtils class from org . axonframework . util . reflection to org . axonframework . util instead of org . axonframework
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created a new test class ` Oid
removed the private Vector2 center variable from multiple Circle , Ellipse , Polygon , Polyline , and Rectangle classes to streamline the code by
removed unnecessary condition check for grpcReadTransformOutputPCollectionName in RegisterAndProcessBundleOperation . java to simplify the condition for better readability
refactor SslContextFactory to improve SSL context handling to enhance security and reliability of SSL connections
updated assertions in ConfigurationPropertiesTest to use defaultMaxExpectations ( ) instead of defaultMaxExpectations ( ) to improve clarity and consistency
updated return value from " access _ confirmation " to " access _ confirmation _ error " to provide clearer context about access confirmation errors
[ 3.0 ] fix classloading issue in referenceconfig ( # 3555 )
modified the ` shiftRows ` method to include a ` boolean ` parameter for height copying and resetting original row height to enhance functionality by allowing
updated icon references from ` setRolloverIcon ` to ` setRolloverPressedIcon ` in ` FontImage . java ` to ensure the
updated grid translation logic in TaskViewUtils and TaskViewSimulator to use setGridTranslationY instead of getGridTranslationSecondary to improve UI
refactor Assertions class for improved readability to enhance maintainability and ease of understanding for future developers
added null checks for currentDateTimeFunction across multiple database classes and updated return statements for SYSDATE and CURRENT _ TIMESTAMP to enhance robustness by
added an anonymousPath method to IOUtils and updated Log4jUtils to use it to improve path handling and enhance logging clarity
updated the DigitalWellBeingToast method to include a content description parameter and modified the callback method to include a content description to
updated the timeout wait logic in CatalogTracker . java to allow a maximum of 50 milliseconds when the timeout is zero to improve reliability by prevent
refactor LineNumberTagAggregator and TestDominance classes to improve code organization and maintainability
fix genericitem . getstate ( ) to return a stateconverterutil . defaultconversion ( ) instead of null
added test for fetch post and details projection in BidirectionalOneToOneNPlusOneTest . java to ensure correct handling of post data and
added functionality to remove extra empty screen in the workspace and initialize startSearchPageIndex accordingly to ensure proper handling of empty workspace screens and
updated HashMap and HashSet initialization to include the size of derived references and added null check for value in IndexedValueMap to improve memory efficiency and prevent potential
updated string formatting in GoogleLineChart and GooglePieChart classes from single quotes to double quotes to ensure proper formatting of values in the chart
refactor wait logic in SendingAccountor . java to improve clarity and error handling to enhance readability and maintainability of the code
added a position field and its getter / setter in WALPrettyPrinter . java to enable seeking to the current position in the file and enhance
updated the timeout parameter from 1 to 0 in the NettyTransceiver initialization to allow for a longer timeout before attempting to connect to the
# 1188 sort log event before generate report ( # 1188 )
add a test to verify that the getCsvLine method returns a quoted line with a escaped quote to ensure correct formatting of double quotes in CSV
added new properties and updated method names in various classes to improve clarity and consistency in naming conventions to enhance code readability and maintainability
do n ' t send iq to other node if it be a remote server . jm - 188
added @ JniImpl annotation to VM . java to ensure compatibility with the latest JNI implementation
updated crawl delay calculation and configuration settings in Fetcher2 . java to improve clarity and maintainability of the crawl delay logic
added a condition to check if the video HDR format is not " dolbyvision " before proceeding with the video processing logic to
updated package name from ` other _ package ` to ` other _ package2 ` in ` AstTests . java ` to ensure consistency in naming
update worldborder ' s diameter calculation based on percentage and add integration test for it .
hbase - 25825 wal group replication status do n ' t need to check if the master be online or can not host region
modified the ` checkOpen ` method to accept an additional ` EventRenderable ` parameter and modified event handling logic to enhance event handling by allowing
refactor routing table instance marking methods to use a new method for generating instance configurations to improve code clarity and maintainability by centralizing instance
changed the visibility of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
add unit test for readerroneousmavenproject contain reference
simplified the conditional check for oldProto and newProto in PropertyMap . java to improve code readability and maintainability
refactor getControllerId method to accept a configId parameter and streamline relays handling to improve flexibility and maintainability by allowing configurable controller
replaced sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management by closing the session
removed the condition for generating refresh token in OidcConsentApprovalViewResolver . java to simplify the condition for better readability and maintainability
removed debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced a lambda expression with a NoopGetter in the extractor method of BaggagePropagation . java to simplify extractor logic by using a
refactor conditionalOnEnabledResourceChain class for improved clarity to enhance maintainability and readability of the code
added a condition to check if the tree root has children before proceeding to ensure that only valid tree roots are processed in the Barrowman
replaced ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java ` to ensure
updated log messages and added session state handling in FacebookImpl . java to improve clarity and functionality of session state management
refactored return statements in ShadowICU . java and added a new test for date picker functionality in ShadowICUTest . java to
removed the condition for checking device lock in TouchInteractionService . java to simplify the logic for determining if the device is locked
server : fix npe when create a volume with a default disk offering ( # 4896 )
replaced FileChannel with AsynchronousFileChannel and added a position variable to improve asynchronous file handling and streamline write operations
refactor SigInt and SigIntTest classes to remove unnecessary whitespace and simplify signal handling to improve code readability and maintainability
ggb - 2206 prepareboundingboxresize ( ) should call text . update ( ) instead of updatebyboundingboxresize
change return value from - 1 to 0 in Asset . java to correct the behavior of the method
updated ScrambledZipfianGenerator to use a fixed number of iterations instead of a fixed size to improve performance by reducing the
added onRefresh listener to UploadListFragment to notify the adapter when data is refreshed to improve user experience by notifying the adapter when data is
refactor BibDatabaseContext to use Optional < Path > instead of File for better type safety to improve code reliability and clarity by
replace direct calls to ` ParticleEmitter . items [ i ] ` with ` ParticleEmitter . get ( i ) ` for accessing emit
refactor Tomcat . java to improve service , engine , and host handling to enhance code clarity and ensure proper handling of service and
updated error messages in BuildRuleFactoryParams and BuildRuleFactoryParamsTest to improve clarity and consistency to enhance readability and maintainability of
added a check to return early if the playback state is not PLAYING to optimize performance by avoiding unnecessary processing
replaced the retrieval of ` ServiceComponentDesiredStateEntityPK ` with a direct ID retrieval from ` serviceComponentDesiredStateDAO ` to simplify
added a new class ` InnerClassFieldClash ` and modified module usage logic in ` Java2TypeScriptTranslator . java ` , and
added follow redirect filter functionality to DockerClientFactory and DockerClientProfile classes to enable customizable logging and logging filters based on configuration settings
replaced awtUnlock ( ) with awtLock ( ) and awtUnlock ( ) in XToolkit . java to ensure thread safety during display
hhh - 10183 fix test failure due to sql server 2008
added a call to ` revert ( ) ` in ` OPCPackage . java ` and modified the ` verifyZipHeader ( input ) `
changed the visibility of the storeClassFile method from private to public to allow external access to the method for better encapsulation
updated assertions in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues to ensure correct behavior of nextOrd ( )
updated error messages in CGIHandler and added a new JavaVMCallbackHandler in JavaVM to improve clarity of error messages and enhance the
added support for additional characters " \ n \ 033 [ m " and " \ n \ 033 [ 0m " to the string
changed the parameter type of ` multiFetchSourceFiles ` from ` List ` to ` Set ` across multiple files across multiple files to enhance performance
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to optimize performance by avoiding unnecessary
incorectbindingpuzzlefixedtest : improve error message on verification in order
replace ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root ,
truffle : remove unused import , a suggest by valerybokov
refactor JsonObject class to improve code structure to enhance maintainability and readability of the code
updated conditions for idle time checks in SelectChannelEndPoint . java and modified HttpConnection . java to check for low resources in HttpConnection . java
fix farmland plant can not be sustain . close # 177984
added database metadata creation and validation for primary keys in QueryDatabaseMetaDataIT . java and modified index handling in UpgradeUtil . java to enhance database
updated date formatting in HttpCookie to use Locale . US and added a new class B6791927 . java for cookie validation to ensure
added null checks before closing the database connection in DbHelper . java to ensure proper resource management and prevent potential NullPointerExceptions
increased the timeout duration for polling messages from 1 seconds to 5 seconds in BatchMessageListenerContainerIntegrationTests to allow more time for processing
[ gr - 16936 ] make economyallocationstage accept option for tracera .
save source on keydown for code area
added a static block to set the line separator for ObjectMapper in DrillTest . java to ensure consistent line endings across different operating systems
update path normalization in NativeEnvironmentRepository to replace backslashes with forward slashes to ensure consistent path formatting across different operating systems
removed unused Application resources and refactored service addition in multiple test classes to streamline test setup and improve code clarity
[ java ] remove record log validation from record log .
chore : integrate new gapic - generator - java and rules _ gapic ( # 1 )
added memory usage reporting in TestFuzzOptimizations . java to track the used memory usage in travis environments
replaced the initialization of ` reverseImage ` with a private variable ` reverseImage ` to streamline code by eliminating unnecessary shared preferences
refactor condition checks in ResourceUtils , LoaderZipEntries , Repackager , and RestDocsWebTestClientBuilderCustomizer to improve read
added a new Predicate to exclude IDS and empty elements in the TerserUtil class and refactored the replaceFields method to use
updated JUnit annotations in AuthenticationSuccessListenerTests to use JUnit Jupiter API to ensure compatibility with the latest JUnit 5 features and
replaced the usage of ` New . arrayList ( ) ` with a dynamic count of ` COLUMN _ NAME _ RULES ` and updated
refactor TypeUtil class to improve code structure to enhance maintainability and readability of the code
updated triggerTime formatting to use LocalDateTime with default timezone to ensure consistent date formatting across different time zones
added a new method ` maybeCreateAbstractMethodErrorThrower ` to handle ` AbstractMethodError ` and modified ` MethodHandleResolver ` to
camel - 16400 : camel - core - camel - catalog - improve validation of ognl expression
removed the check for empty toExplore in AbstractParser . java to simplify the code by eliminating unnecessary complexity
added import for IOHelper and used it to copy input data to the output stream to ensure proper resource management and avoid potential memory leaks
camel - 16400 : camel - test - infra - camel - consul should not fail if osgi bundle be not release yet
updated conditional check in Check . java and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java to ensure
[ java ] increase aeron driver timeout for channelvalidationtest .
added a new file ` FileExtensions . java ` that contains static final CLANG _ SOURCES and CLANG _ HEADERS constants to provide
replaced the custom ThreadLocalDateFormat with a custom ThreadLocal instance for date formatting to simplify the code and improve performance by eliminating unnecessary
[ gr - 16936 ] deprecate cgroupmemorylimitforheap and fasttlabrefill .
added display name property to Pac4jBaseClientProperties and modified DelegatedClientIdentityProviderConfiguration to utilize it to enhance the client '
added ` EarlyTerminationException ` to multiple operator classes and replaced ` RuntimeException ` with ` EarlyTerminationException ` to improve error handling during
removed unnecessary whitespace in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
updated HttpBindServlet , HttpConnection , and HttpSession classes to improve response handling and connection management to enhance code clarity and ensure proper connection management
add a null check for the parent in the capability dispatcher return logic to ensure that the capability dispatcher is only created when parent is not null
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling for better clarity
marked the SubmitOrderedCompletionService class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
modified HyphenationTree class to track the original length of the length variable to ensure consistent handling of the length before returning the original original length
added a delay of 200 milliseconds in the IQRegisterHandler to ensure proper synchronization during registration processes
added a new import for javax . swing . * and modified the Resources class to include a new method for image retrieval to enhance resource management functionality
corrected a typo in the description of PARAMETER _ NEEDS _ TO _ BE _ NAMED in ParameterBinder . java to ensure
added a new flag ` providersChanged ` to reset the ` providersChanged ` variable to ensure that changes to the configuration are properly handled during configuration
added a method to quote token strings in the SemanticAnalyzer class to ensure proper handling of quoted identifiers in the token rewrite process
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated type casting and suppress warnings in SolrResourceLoader . java to improve code clarity and reduce unchecked warnings
modify the condition in Window . java to include a check for parent cells before returning the window to ensure proper positioning of the window based on
added a null check for appManifest before accessing its target SDK version to avoid potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to improve JSON serialization and deserialization handling to enhance code clarity and maintainability while ensuring proper
added userName field with getter and setter methods in HiveDriver and HiveSemanticAnalyzerHookContext classes to facilitate user identification within the
camel - 14263 : camel - xslt - add option to set inputstream , url , and converter to make it easy to use
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , and TestFirstInFirstOutComparator classes to enhance functionality by integrating
updated expectedFileSize initialization in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to ensure correct file size handling and improve
added null check before logging access access in CoyoteAdapter to avoid potential NullPointerException when context is not initialized
modified the logging mechanism in ThroughputLogger to return early if startTime is zero and modified the message formatting in ThroughputLoggerTest to
added a check for debug builds in CompilerConfigFileWarning and ConfigFileWarning , and created a new VMOptionWarning class to skip tests on debug builds
refactor MeterStatisticsManager to use a new statisticsModelMap instead of a static Map to improve code organization and maintainability by centralizing statistics
updated logback configuration handling in FrameworkLauncherExtended . java to use resolveSystemProperty instead of System . err to improve code clarity and ensure
updated method signatures to include @ NotNull annotations and renamed DefaultCookieValueManager and DefaultCasCookieValueManager to NoOpCookieValueManager to
replaced ` Escaper . BASH _ ESCAPER ` with ` Escaper . SHELL _ ESCAPER
added try - with - resources for container initialization in multiple test classes to ensure proper resource management and prevent potential memory leaks
lucene - 6077 : rename testlucene50fieldinfotestcase to testlucene60fieldinfotestcase to match
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a shield address in RpcApiService to facilitate the retrieval of shield addresses from the wallet
changed the return type of ` readConsoleInput ` methods from ` byte [ ] ` to ` String ` across multiple terminal classes and updated character
updated regex patterns for presubmit and postsubmit in TestStabilityRule . java to ensure accurate matching of platform - specific characters in the
updated SolrFragmentsBuilder initialization and added fragment limits for multi - valued fields in DefaultSolrHighlighter and HighlighterTest to ensure fragments are limited
modified the ` tryToLogin ` method to accept a ` username ` and a ` password ` parameter in the ` tryToLogin ` method
added null checks and updated entity handling in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp classes to improve robustness and
( chore ) camel - jms : improve code readability and maintainability
modified the ` update ` method to use ` wrapCollection ` instead of ` wrapCollection ` to simplify the method signature for better readability and
added logging for unknown currency exceptions and refactored import statements in BTCEAdapters . java to improve error handling and logging clarity for
refactor subscription name handling in DurableConduitBridge . java to use a variable for candidate subscription name to improve code readability and
pdfbox - 4892 : increase default value of spacingtolerance , a suggest by valerybokov
added tenant management methods and updated the startController method to accept a boolean parameter for tenant isolation to enhance tenant management flexibility in tests by allowing
replaced the method ` ImmutableMap . builder ( ) . putAll ( ) ` with a direct casting of ` response . getValue ( ) ` to
added a check for non - empty attributes before validating the size of the attributes to ensure that the attributes list is valid and avoid potential NullPointerExceptions
added abstract methods for getting project JDK name , type , and language level in AbstractIjProjectConfig and updated related classes to use I
updated the description of " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify the purpose of
added unit tests for handling user authentication details in GrantedAuthorityEffectiveAclsResolverTests to ensure proper handling of user roles in GrantedAuthority
replaced ` ReflectionClassDeclaration ` with ` getSolvedJavaLangObject ( ) ` in ` JavaParserTypeDeclarationAdapter . java ` to ensure
added a static variable ` numberOfButtons ` and a conditional check to limit the number of buttons to a maximum of ` MAX _ BUTTONS _
updated import statement for assertEquals from jdk . testlibrary . Asserts . assertEquals to com . oracle . java . testlibrary .
refactor MessagePack and MessagePackFactory classes to use a unified factory method for creating MessagePacker and MessageUnpacker instances to improve code
added new tag keys for desert and cave biomes and updated related tag handling to improve clarity and functionality of biome tags and
replaced the ` present ` method with ` draw ` in multiple screen classes to standardize method naming for better readability and maintainability
added conditional logic to check if the component is horizontal before setting layout and updated UIIDs accordingly to ensure correct UIIDs are updated based on the
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( ) ` to
replaced ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in both ` AndroidInput . java ` and `
[ java ] close commitposition counter in clusteredserviceagent when it be close .
added UserSite and RecordIdClass classes for user site management to facilitate tracking and querying of user sites in a database
refactor HttpConverterRegistrar to handle URL parsing and port extraction more robustly to improve robustness and error handling for invalid address formats
bug 10929 : do n ' t show the host _ id in listcapacity api response if the host _ id be in ignore list
replaced ` openInput ( ) ` with ` fileLength ( ) ` in ` NRTCachingDirectory . java ` to improve file handling
updated the ` JavascriptCompiler ` class to be ` final ` and modified the ` beginCompile ` and ` endCompile ` methods to improve im
added synchronization around the store method in UISettings . java to ensure thread safety during serialization operations
added a check for native text input in TextField . java and changed the access modifier of the fireDataChanged method from private to public to allow
added error handling for schema change and emulator error in SpannerIO . java and updated test cases in SpannerIOWriteTest . java
refactor collections in CompilerTest , ReportedBugsTest , and TestUtil classes to use diamond operator to improve code readability and
updated ObjectInputStream to return a clone of short arrays instead of double arrays and added a new CloneArray class to ensure correct handling of short arrays and
updated nonce handling in OIDCAuthenticationFilter . java to use getStringClaim method instead of getClaim method to improve type safety and clarity in
added a condition to handle relationship fields in DCInputSet . java to ensure proper handling of relationship fields in the input set
added support for server SLOGAN in the capability table and updated related methods to enhance functionality by allowing users to assign server SLOGAN values
refactor conditional logic in DrawerActivity to use ' = = ' instead of ' ! = ' for menuItem comparison to improve code readability
added JUnit Assume import and modified error message formatting in SolrRequestParserTest . java to enhance test clarity and improve error reporting for better
added a check to return early if no missing symbol events are present to optimize performance by avoiding unnecessary processing when no missing symbols are present
added new lines " Data 3 - 4 " and " Data 5 - 4 " to the list of table rows in StringHelperTest . java to
added a warning log for empty data providers in Parameters . java to improve debugging by providing a warning when the data provider returns an empty array or
( chore ) camel - core : replace return collections . empty _ map with return collections . emptylist ( )
[ freeplane ] fix selection style not apply when map version > = freeplane 1.9 . 8
updated the restitution parameter in PhysicsRigidBody . java from mass to restitution to ensure the correct restitution
added AutoFtpActivity and FtpHelper classes for testing FTP communication to enable automatic FTP communication testing in the application
refactor token type handling in BaseSemanticAnalyzer to use a local variable for better readability to improve code clarity and maintainability by
added getter and setter methods for component state in multiple classes to enhance state management for better component management
added a new class ` RemoteExecutionEnabled ` to handle remote execution behavior to enable and disable remote execution behavior in the build process
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated file reading methods to use StandardCharsets . UTF _ 8 instead of FileReader and added suppression warnings in PublicBAOS . java to ensure compatibility
added an assertion to verify that shadow variables are not stale in the working score to ensure that the working score accurately reflects the expected state
updated the SEMIJOIN conversion configuration from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
added logging for unsupported message types in multiple datagram packet classes to improve error handling and debugging for non - serializable instances
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated folder removal logic in ` File
added assertions to verify the presence of a transaction hash in the PollingTransactionReceiptProcessorTest class to ensure that the transaction hash is correctly retrieved
make ischemaregion a deprecated method and rename schemaregionbasictest . testconstructschemablacklist ( )
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid sample MIME type is provided to avoid runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to the ` @ AllArgsConstructor ` annotation to enable JSON
added a check to prevent creating an index on a view in MetaDataClient . java to indicate that creating an index is not supported and will be
added a new ` Website ` class with fields for ` name ` , ` url ` , and ` uri ` , and updated ` Pop
added a setup method to set the default locale to " US " in BSFormatterTest to ensure consistent locale settings for test cases
added a FilenameFilter to filter out downloaded jar files and log a warning for badly downloaded jar files to improve error handling and provide clearer
updated the assertion in MultiPartParsingTest to use Matchers for better readability to improve code clarity and maintainability by using a more
added checks for single and single parameter types in SimpleExprGenerator . java to ensure proper handling of variable expressions in the analyzer
added a volatile boolean field to track if the Vertx component was created and modified the conditional check to ensure that the Vertx component is only
updated the ` writeAttributes ` method to use ` NodeModel ` instead of ` null ` for ` style ` and ` size ` to ensure
updated log message format from " Synchroned " to " Synchronized " in SynchronizeFolderOperation . java and added null checks in FileDisplay
added a new boolean field ` ignoredReadStatus ` and updated related conditions in ` Entries ` , ` CategoryREST ` , and ` FeedREST
updated resource resolution methods in TestAnnotationConfiguration and WebAppContextTest to use MavenPaths instead of MavenTestingUtils to improve code clarity and maintain
added validation logic for data types and improved null checks in ` RegisterServerConsumerExecutor ` and ` URIRegisterExecutorSubscriber ` to enhance data
modified the condition for playback state in GwtMusic . java to check if the sound is paused before proceeding to ensure that playback state
added a new permission check for the ADMIN _ SUDO _ AREA in the MainCommand and updated the Captions to include it to enhance
updated query options handling in ServerRequestPlanVisitor and modified test cases in QueryRunnerTest to improve query performance and enhance test coverage for multi -
replaced calls to ` toUri ( ) . getPath ( ) ` with ` path . getFileName ( ) . toString ( ) ` in multiple
updated assertions in ResourcesTest to include constants for pure emoji and text attributes to improve code readability and maintainability by reducing redundancy
added native methods NMTWaitForDataMerge , NMTOverflowHashBucket , and NMTMallocWithPseudoStack in WhiteBox
[ flink - 20613 ] [ core ] migrate javaeitherserializersnapshot to javaeitherserializersnapshot
updated AddressResolverOptions and AddressResolver to use constants from AddressResolver . DEFAULT _ NDOTS _ RESOLV _ OPTION and AddressResolver
added a call to the super ' s __ associate method in RequestRockerTemplate and a corresponding test in RequestRockerTemplateTest to ensure
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated URLs from " liquibase / parser / core / xml " to " www . liquibase . org / ns /
update package and resource paths for CommonMIMETypeLocator from ` com . oracle . truffle . api . source ` to ` com . oracle
updated repository version state from INIT to NOT _ REQUIRED across multiple classes to clarify that the state is mandatory for service components
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to enhance the accuracy of schema comparison in the diff generation process
[ hotfix ] [ test ] fix checkstyle violation in testbackwardanoamlyfunctionutils
added a new file ProgressiveJPEGTest . java to test the rendering of a progressive JPEG texture to ensure that the progressive JPEG rendering
updated MaterialLoader to set the " AlphaDiscardThreshold " constant and initialized variables to null to improve memory management and prevent potential memory leaks
[ gr - 16936 ] fix native - image build on window for x86 architecture .
added a null and empty check for the text before setting the size to avoid potential NullPointerExceptions when text is null or empty
modify the calculation of ` readVarInt ( ) ` to use ` % 1 _ 000 _ 000 ` for reading values to ensure that the
made PushUtils class final and added a private constructor in ThumbnailsCacheManager and ThumbnailsCacheManager to enforce immutability and prevent
replaced the calculation of ` length ` from ` bounds ` to ` getLength ( ) ` in ` RocketPanel . java ` to simplify
removed unnecessary type casting when setting enable virus scanner in TestDirectoryReaderReopen to simplify code and improve readability by eliminating unnecessary
updated the file path for loading presets from " . * csv " to " ( ? i ) . * csv " to ensure the correct file
added a conditional check for duration before announceing accessibility in TaskbarStashController and updated SDK version checks in ActivityContext to ensure access
updated the instantiation of homeNode to use RefreshTask instead of Args to improve node management by utilizing the refresh task implementation
added a test for only one JDK in PMDTaskTest . java and modified PMDTask . java to target both JDK 1.3
replaced PowerMockito with MockitoJUnitRunner and removed dependency on PowerMockito in QuotaResponseBuilderImplTest . java to
added static PrintStream and PrintStream for system output and error streams in TestSchemaToolCatalogOps . java to enable better management of output and error streams
added DFSClient parameter to FanOutOneBlockAsyncDFSOutputSaslHelper and updated instantiation of SaslNegotiateHandler to
updated MongoQueryMethod to accept RepositoryMetadata as a parameter to enhance flexibility by allowing metadata to be included in query execution
refactor entity resolver handling in Digester . java to support both EntityResolver2 and EntityResolver to improve flexibility in handling different entity resolvers
removed redundant import statements in MetaDataEndpointImpl . java to streamline code by eliminating redundancy
increased the allowed repeated deadlocks from 5 to 10 and added a retry interval for retry logic in TxnHandler to allow more time for
updated variable names and method calls in BarChartActivity , LineChartActivity1 , and YAxisRenderer classes to improve code readability and maintain
added utility methods to check for printable characters and valid string inputs in FsUtils . java to enhance input validation for system names and prevent invalid input
rename ` in ` method to ` using ` in ` Selenide classes and update references accordingly to clarify the purpose of the method
added a processPluginConfiguration flag to the ProjectBuildingRequest and modified exception handling in DefaultMaven , DefaultLifecycleExecutor , DefaultProjectBuilder ,
updated return values in ProxyConnectionManager and ServerTrafficCounter to use decimal values instead of seconds to ensure accurate conversion from milliseconds to milliseconds for better
test : use google - cloud - vision / src / test / resources instead of test / src / test / resources
modified connection return values in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes to retrieve the remote host from the request to
added admin permission check in CommunityListServlet to ensure proper access control for the admin user
replaced the direct instantiation of ThreadPoolExecutor with a thread counter for long and short compaction processes to improve thread management by tracking the long and short
updated package name retrieval from the application context to a resource resource to ensure the application uses the correct resource package for wallpapers
added a method to filter out players in the plot visible list to enhance player management by ensuring only visible players are displayed in the plot
refactor multiple classes related to AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity to improve code organization and maintainability
updated MlibOpsTest . java for improved test coverage to enhance reliability and reliability of library operations
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant named OPERATING _ SYSTEM _ IMP
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test in SchemeGeneratorTest
removed null checks for key and IV in UploadFileOperation . java to simplify code and improve readability by eliminating unnecessary checks
added @ Stability annotation to WorkProfileTest . java to indicate that the test is stable for local or postsubmit flavors
added a check for bucketing version in TezCompiler . java to ensure that processing only occurs when the bucketing version is set
replaced ` setCursorPosition ` with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure the cursor
added abstract classes ` LockFreeBucketContendedTimeMeter ` and ` LockFreeBucket _ FinalFields _ CacheLinePadding ` , and created
added a method to print thread pool statistics using a DebuggableThreadPoolExecutorMBean to enhance debugging capabilities by providing detailed thread pool statistics
updated max bitrate retrieval to use user preferences instead of direct calls to getMaxBitrate to ensure bitrate is set correctly based on user preferences
refactor ZipkinHttpSpanExtractor to improve handling of trace and span IDs more effectively to enhance clarity and maintainability of span extraction logic
refactor user payment account retrieval methods in MutableOfferDataModel , CreateOfferDataModel , DuplicateOfferDataModel , and EditOfferDataModel to improve code cl
fix right - aligned lookup for dart completion suggestion ( # 1193 )
added a line to set the project in the LauncherUtils class to ensure the project is correctly configured for processing
added ProjectFilesystem parameter to JsBundle and JsBundleBuilder constructors to allow for dynamic root path retrieval in the build process
renamed multiple classes related to envelope and databinding to improve clarity and consistency in naming conventions
refactor MetricsDSLContext class for improved clarity to enhance maintainability and readability of the code
removed the VersionConfig interface and updated its implementation in VersionBuckConfig . java to streamline the code by eliminating unnecessary functionality and
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by preventing application cr
changed the visibility of the validateTypes method from static to public and modified the exception message in the Assertions class to allow access to the validate
fix : update gapic - generator - java with mock service generation fix ( # 10 )
added SLF4J logging functionality to SimulationStatus . java to enhance logging capabilities for better debugging and monitoring
updated the font position and height of the VERSION _ FONT constant from 138 to 150 and 14 to reflect the new font size for improved
added a runLater method to the notifications addition in UserInterfaceComponentImpl . java to ensure notifications are added asynchronously to the UI thread
added a new method ` when ( mock ) . thenReturn ( new ReturnsElementsOf ( Arrays . asList ( 1 , 2 , 3 )
updated error message for non - string partition columns in ErrorMsg . java to clarify that only non - string partition columns can be dropped
added a new test method ` testLineFileDocs ` in ` BaseStoredFieldsFormatTestCase . java ` to validate the indexing of stored
added a method to retrieve the version code from the MainApp class and updated references in FeatureList and WhatsNewActivity to improve version management
camel - 14284 : avoid ambiguity in bean method invocation when the request body be ambiguous .
updated method names from ` getContentDispositionFilename ` to ` getSubmittedFileName ` in ` MultiPartInputStreamTest . java ` to clarify
added buffer ownership checks and methods to IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper memory management and prevent memory leaks
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer class to enhance user experience by allowing password reset
refactor JerseyClientConfiguration to improve code structure to enhance maintainability and readability of the client configuration
int - 1186 fix class name for characterstreamreadingmessagesource and characterstreamwritingmessagehandler ( int - 1187 )
updated print statements to use ' o ' instead of ' s ' for consistency and clarity to improve code readability and maintainability
added logic to adjust column and row indices in StringDict and Table classes to ensure proper handling of empty arrays and maintain correct column and row indices
deprecate genericcontainer . withcommand ( ) and deprecate genericcontainer . withname ( ) . withcmd ( ) .
updated logging level from info to error in MediaInfo . java and modified exception handling in RendererConfigurationTest . java to improve error handling and ensure
added schemapattern option handling in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enable customizable schemapattern configuration for the database
bcjsse : do n ' t throw npe if id be null
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve clarity and maintainability of bitmap creation logic
refactor Base64 class to improve data handling to enhance performance and maintainability of the code
sulong : add a fallback object to llvmglobalcontainer . getglobal ( ) and use it in llvmgetstack
alexeibarantsev : ignore a test that fail on iphone
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
changed the type of ` resName ` and ` resId ` from ` ResName ` to ` int ` and updated related constructors and methods
refactor Docker certificate path resolution logic to utilize a new method for resolving TLS files to improve code clarity and maintainability by centralizing
replaced ` @ After ` annotations with ` @ Before ` annotations in ` SimpleReactiveElasticsearchRepositoryTests . java ` to ensure tests are
refactor site handling in ` mmm Attr . java ` and add a new class ` T6450290 . java ` with generic
add -- log - level option to configure default log level
added logging statements and modified the deleteItemsFromDatabase method to accept a Collection of package names to improve debugging capabilities and facilitate easier
added ` allFilesOption ( ) ` methods to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
added default methods for ` forEachOperation ` and ` hasMatching ` in ` MutationOperationGroup . java ` to enhance functionality for handling multiple operations
updated the calculation of ` numPredictiveAppCols ` based on the device type to ensure accurate prediction of app columns for phone devices
updated StringUtils to use UTF - 8 encoding for content to ensure proper handling of character encoding in string operations
added new RequestMatchers class and its corresponding tests to enhance functionality for matching request matchers in Spring Security web applications
ggb - 2321 fix for input box and button in applet mode
updated calculations for position and height in the ProgressBar class to account for bgBottomHeight and bgRightWidth adjustments to ensure correct positioning behavior
[ native ] move external _ functions . json to src / test / resources
made ` extra _ L0 ` , ` extra _ L1 ` , and ` extra _ L3 ` final and added ` extra
added a condition to check if the state handler is invalidated in the gesture state check to ensure that the gesture handling logic only proceeds when the
updated layout calculations for landscape and portrait layouts in DynamicGrid and Workspace classes to ensure correct layout metrics are calculated based on orientation and padding
added a condition to check if the redir file equals " / robots . txt " in HttpRobotRulesParser . java to ensure proper handling
[ netbeans - 4892 ] use a static icon for nb - javac warning
updated the subscription commands in AdvancedGameSetupScreen from " continue " to " createWorld " and " close " to " return " to improve
added a condition to check if the value of ` b ` is zero in ` UDFOPDivide . java ` and created a
updated formatting and formatting in AbstractJob , FlowJob , and StopAndRestartFailedJobParserTests classes to improve code readability and maintain consistency
added a request matcher to the LogoutFilter and modified filterProcessesUrl initialization in FormLoginBeanDefinitionParser and LogoutFilter to enhance authentication request matching
added onDestroy methods to unbind the uploadServiceConnection from ShareActivity and ContributionsActivity to ensure proper resource cleanup and prevent potential memory leaks
updated references from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure the correct reference to
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability across the project
added request timeout configuration to RaftServerConfigKeys to enhance request management by allowing dynamic timeout settings
updated logging level from error to debug in TsFileResourceManager and refactored test cases in ResourceManagerTest to improve logging clarity and
added system properties to the model source in MavenModuleLoader . java to ensure the model source reflects the current system configuration
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS metrics to ServerMeter
added model registration for the animated torch in the BlockAnimatedTorch class to enable customization of the animated torch in the client
added null check before closing the writer to prevent potential NullPointerException when the writer is not initialized
added a method to retrieve Hive configuration from a directory for on - Tez configuration to facilitate easier configuration management for Hive tests
added " Muting Users " link to the FeaturesActivity to enhance user experience by providing access to managing users
added initialization for jdk . reflect . useDirectMethodHandle to false to disable direct method handle usage in the application
hbase - 26969 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy ( #
[ hotfix ] [ yarn ] fix npe in yarn ship file creation when lib and plugins dir do not exist .
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getWord ( ) instead of getPronunciations ( )
updated JSON string formatting in JsonUtilsTest . java to improve code readability and maintainability
added " id " extra to compose data in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure correct handling of
added a warning log for termination of MessageListener on a reliable topic to inform users that underlying ring buffer data related to reliable topic is lost
replace IOException with NoClassesFoundToAnalyzeException in FindBugs2 . java and add a new NoClassesFoundToAnalyzeException class to improve
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to
updated the initialization of the ` isIncompatible ` variable in ` DLNAResource . java ` to ensure that the correct compatibility status is set
updated the parameter name from ` Account ` to ` AccountCreateContract ` in the ` createAccount ` method to improve clarity and consistency in
pdfbox - 4892 : avoid npe , a suggest by valerybokov
http : / / issues . apache . org / activemq / browse / amq - 2698 - fix for amq -
set enableOffHeapFormat to true and change default star tree format version from " ON _ HEAP " to " OFF _ HEAP " to ensure
modify title handling in FeedUpdateService to limit the length of the title to 2048 characters to ensure that the title is truncated to a maximum of
updated JColorChooser and BasicColorChooserUI to utilize ColorChooserComponentFactory for the preview panel to improve flexibility and maintainability of
changed log level from info to debug for extension checking in DefaultBuildExtensionScanner . java to reduce log verbosity and improve performance during extension scanning
added a null check for reusable bitmap before retrieving it from the reusable set to avoid potential NullPointerExceptions during bitmap decoding
added layout parameters to the FakeView class to provide access to the layout parameters for better layout management
added a check to throw an IllegalStateException when a Cursor is already closed in DefaultCursor . java and a corresponding test in CursorSimpleTest . java
pdfbox - 4892 : fix typo , a suggest by valerybokov
added JUnit @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a ` ts ` field with getter and setter methods to the ` Message ` class to store and retrieve the timestamp value for better tracking of
move generic exception mapper to web - api ( # 1308 )
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
remove legacy
removed public access modifier from multiple test classes and added @ Nested annotation to enhance encapsulation and improve test organization
refactor CSRF handling into a separate method ` setCSRF ` to improve code readability and maintainability by encapsulating CSRF setting logic into
added support for bootstrapping lombok . launch . ShadowClassLoader in EclipseLoaderPatcherTransplants . java to enhance compatibility with
jbrules - 2642 : add numeric disable flag to the rule sheet to allow more flexible control over numeric value
hive - 22086 : log . info ( ` ` use the default value of hive . conf . default _ value ' ' )
added null checks and improved controller management in Lwjgl3Controller and Lwjgl3ControllerManager to enhance robustness and
updated import statements for ObjectFactory in WeldFactory and WeldFactoryTest to align with the latest Cucumber library structure
added a null check for the host before saving the port forward to ensure that savePortForward is only called when the host is not null to
added a new property ` SHOULD _ SNAPSHOT _ DATA ` to the ` GlobalConfiguration ` class and corresponding getter and setter methods to provide
replaced job scheduling logic with a conditional check for null file names before processing to improve code robustness and prevent potential NullPointerExceptions during job execution
refactor LocationMarshaller class to improve code readability to enhance maintainability and facilitate future updates
modified touch event handling logic in StatusBarTouchController . java and modified swipeWithinQuickSwitchRange logic in OtherActivityInputConsumer . java to
updated the package structure and class structure in VectorReader and related classes to improve organization and clarity of the code structure
replaced ` ArgumentMatchers ` with ` Matchers ` across multiple test files to align with the latest Mockito API changes
refactor path handling by replacing getRelativePathName ( ) with getRelativePath ( ) across multiple files to simplify the code and improve clarity by using a
refactor ` SegmentMapper ` , ` CompositeTransformer ` , and ` RecordTransformer ` to include ` RecordReaderFileConfig ` as a parameter
added a null check for the extractor before instantiating a component in ControllerMethodInvoker . java to ensure that the extractor is only instantiated when it
vmware : fix max _ secondary _ storage _ in _ vm when max _ secondary _ storage be set for volume
[ 1.19 . x ] fix potion shift event in inventory effect renderer .
remove deprecated ` COLD _ READS _ TO _ OMIT _ KEY ` from ` uncheckedOptions ` to indicate that this option should no
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent potential memory leaks
[ issue # 1560 ] fix popmessageprocessor not report retry metric ( # 1561 )
refactor KeyboardAddonSettingsFragment to improve code structure to enhance maintainability and readability of the code
added JUnit Ignore annotation to ShadowDateUtilsTest . java to mark the test as ignored for a moment to temporarily disable the test due to
renamed ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and updated related
added connection handling for UpgradeRequest and UpgradeResponse in UpgradeConnection and created a test for it in ClientConnectTest to ensure proper functionality and validation
added timeout support and timeout functionality to AndroidImplementation to enhance connection reliability by allowing dynamic timeout settings
refactored ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to return a list of user and team access permissions instead of
added a test method for parsing and deparsing quoted cast expressions in SelectTest . java to ensure correct parsing and deparsing of quoted SQL expressions
added a check for the root directory in the assertion to ensure that the file is not writable and is not executable on Windows to enhance security by
added logging functionality and dynamic properties for thread group and thread properties in FixedThreadExecutor . java to improve thread management and provide configurable configuration options for
added null checks for the field variable before checking for " catalogname " to prevent potential NullPointerExceptions when field is null
replaced ` CasEventListener ` with ` InitializingBean ` and updated import statements across multiple configuration classes to improve event handling consistency and align with
refactor animation end handling into a separate method ` endAnimation ( ) ` in ` ShadowAnimation . java ` to improve code readability and
hbase - 27451 regionfile . deflate ( ) need to call def . end ( ) in close ( ) instead of call
added a new file ` gsp001 . java ` that includes methods to retrieve system properties at early phase Agent _ OnLoad to facil
no effective change - fix bug in beandefinitioninjectprocessor
added JmeImporter and JmeExporter implementations to CameraNode , LightNode , and InputCapsule classes to enhance camera control handling and export
refactor PopupNotificationPanel to utilize SwingUtilities for retrieving the parent window to improve code readability and maintainability by reducing red
replaced NoInstanceException with InferenceException and updated related exception handling methods to improve clarity and consistency in exception handling related to ambiguous and
added a getter method for the featureValue in the FeatureField class to provide access to the featureValue variable for easier access
changed the parameter type of the ` after ` method from ` int ` to ` long ` in ` VerificationAfterDelay ` from ` int `
added " OnBuild " and " ExecutionDriver " properties with their respective getter and setter methods in ContainerConfig and Info classes to enable configuration of
added conditional logic to set command icon based on RTL direction in Toolbar . java and adjusted x positioning in FlowLayout . java to
added a boolean field ` enablePositionIncrements ` to the ` StopFilterFactory ` class and modified the instantiation of ` StopFilter ` to
added an InternetAddress instance to EmailsTest and SystemErrorEmailReportTest classes to enable communication with the TEAMMATES Admin email
added a new boolean variable ` mTryShareAgain ` and initialized it to false to control the share behavior of the activity
added support for using the TTY name based on the major and minor version of the Jansi native system to ensure compatibility with different operating
refactor BandwidthProcessor to use a new variable for serialized size instead of a hardcoded value to improve code readability and maintainability by
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to utilize Awaitility ' s await
[ easee ] change api base url to easee . com
increased sleep duration in KafkaIOIT from 2 milliseconds to 1000 milliseconds and added startup attempts for Kafka container startup to improve responsiveness
updated SearchResultMatcher to use is ( itemName ) instead of anyOf ( ) to improve clarity and accuracy of JSON path matching logic
added SSL support and hostname verification functionality to OkHttp . java to enhance security by trusting all trusted certificates during SSL connections
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and functionality to enhance user
added a new file HyperlinkFormula . java and modified StringPtg . java to handle byte and int values for field _ 1 _ length
added null checks for workingDirectory before escaping to ensure workingDirectory is not null to prevent potential NullPointerExceptions
increased the TIMEOUT _ MILLIS constant from 1000 milliseconds to 2000 milliseconds in AsyncAppenderTest . java to allow more time for asynchronous logging
refactored escapeDatabaseObject method to include objectType parameter and removed redundant escapeSchemaName and escapeCatalogName methods to streamline object escaping logic
added a new boolean field ` inputChanged ` and modified the condition for checking the material title in ` MaterialRenameDialog . java ` to improve
added state change functionality to ` ShadowDisplayTest ` and implemented ` setState ` method in ` ShadowDisplay ` to ensure correct behavior of display states
[ geos - 8470 ] add dispatcher . invokedirect ( ) to support concat operation
added key event handling for GWT keycodes . KEY _ X and GWTKeycodes . KEY _ Y in GlobalKeyDispatcherW . java to
updated SQL query to include conditional checks for PostgreSQL versions 9.0 and above to ensure compatibility with PostgreSQL versions prior to 9.0
http : / / issues . apache . org / jira / browse / amq - 4748 - fix npe in queuechannel
modified the method signature of ` getPathsFromResource ` to use ` toURI ( ) ` instead of ` String ` to improve clarity and
added logic to handle monitoring and aggregation applications based on the Jenkins nodes suffix to improve application monitoring and context management for Jenkins nodes
refactor HeadersBeanDefinitionParser to use a new method for resolving attribute names to improve code readability and maintainability by encapsulating attribute resolution
hbase - 17451 protobuflogreader should not throw eofexception if the first byte be negative
removed redundant ` destroyRegistries ( ) ` and ` destroyMetadataReports ( ) ` calls in ` DefaultApplicationDeployer . java ` and
camel - mybatis : fix switch / cases indentation see camel - 14540
updated GoAwayGenerator and GoAwayBodyParser to handle different versioning between SPDY . V2 and SPDY .
updated the formatting of the ` AuditEvent ` and added a print statement in ` AuditEventTests . java ` to improve code readability and
modify the return statement in the Interpolation class to check for floating - point errors and adjust the return value to zero to ensure proper handling of
[ 1.19 . x ] fix default folder path in forgeworldedit . java ( # 11920 )
refactor the way the dx executable path is stored in a variable before adding it to the builder to improve code readability and maintainability
added unit tests for ` PointRangeQuery ` instances in ` TestPointQueries . java ` to ensure correctness of ` PointRangeQuery `
hbase - 11393 testhfilecleaner need to create a new path for the archived hfile
update fileLabel to display the correct file name based on fileTransferRequest ' s filename to ensure the correct file name is displayed when the download
do n ' t throw jce if it ' s not need
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix rowtimeminibatchassgin
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap and added new test cases for
added benchmark methods for building a hash map in multiple benchmark classes to enhance performance and maintainability of the map management benchmarks
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B
added a check for empty fields and improved the handling of get method identifiers in GroovyEngine . java to enhance code robustness and ensure proper
set drawable of the number to false in the AlgoDependentNumber class to ensure that the number is not drawn when it ' s used in
added TCP keepalive configuration and server socket timeout handling in HiveConf and HiveServer to improve server connection reliability by allowing configurable TCP keepalive settings
renamed the method from ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to clarify the purpose of the method for
no effective change - remove unused import
replaced ` PeriodFormatter ` with ` TimeUtils ` for time formatting in ` RealtimeSegmentRelocator . java ` to improve code
vpc : do n ' t set success to false on startvpc command
updated windowAlpha calculation to use a maximum value for progress in WindowTransformSwipeHandler . java and modified condition in FloatingIconView .
update Spring Security schema usage message from 3.2 to 4.0 to ensure compatibility with Spring Security 4.0 schema requirements
removed redundant proto assertion checks in multiple Java files to streamline code and improve maintainability by eliminating unnecessary tests
make instance variables final in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes to enhance immutability and prevent un
added a new test class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` to include configuration logic to ensure that the
updated regex pattern in LogMessageWaitStrategy and added parameterized test cases in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage
replaced direct logger calls with direct calls to LoggerFactory . getLogger ( INTERNAL _ LOGGER _ NAME ) . debug ( msg , throwable ) to
replaced ` updatePurgedShardNodes ` and ` updatePurgedShards ` methods with ` deletePurgedShardNodes ` and ` delete
added support for the Java language handler " 17 " and " 17 - preview " versions in the JavaLanguageModule to ensure compatibility with the new
added a constant for the number of compression jobs and implemented a timeout mechanism in the TimeBasedRollingPolicy class to improve control over the execution flow
[ fix ] volatilereadnode should n ' t check for null lastlocationaccess
added a method to retrieve the list of steps and updated formatting in SimpleJob . java to improve code readability and maintain consistency in formatting
removed fromBase58 and toBase58 fields from TronJsonRpc and TronJsonRpcImpl classes to simplify the code and improve read
refactor currency pair handling in BitstampAdapters . java to improve readability to enhance code clarity and maintainability by reducing redundancy
updated LongTaskTimer to use baseTimeUnit ( ) instead of TimeUnit . NANOSECONDS and added new statistic checks in MeterRegistryCompatibilityKit
[ euphoria - flink ] [ table - planner - blink ] do n ' t partition by hashpartitioner when
changed type of ` value ` and ` colorValues ` from ` String ` to ` CharSequence ` and added type checking for ` ListPreference `
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and update related method signatures to improve clarity and consistency in naming conventions
added a constant MAX _ TWEETS _ IN _ CONVERSATION and modified the condition in the while loop to limit the number of
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for authorization map
queue : fix getpersistedbytesize for fully acked deleted tail page
changed class reference from ` getClass ( ) ` to ` GlowServer . class ` in ` GlowServer . java ` to ensure the
added a ` grow ` method to the ` DataIO ` class to adjust the buffer size based on a specified number to improve memory management by
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to retrieve the submitted file name from the ` Part ` to provide access to the submitted file
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure that the loading state is properly marked for loading
added ` ClassNotFoundException ` to the ` main ` method and modified the ` instrumentJar ` method to handle negative array size exceptions to improve error handling
added a method ` checkForSpillPossibility ` to validate spill positioning for a specified current partition to ensure proper handling of spill
updated variable declaration and added calls to ` dsName ` in ` IndexWriter . java ` to ensure immutability of ` dsName `
added a default name ID format for SAML 2.0 to support transient name IDs in the builder
added error handling for password change aborted in ChangePasswordPage . java to improve user feedback during password change operations
removed redundant closing braces in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide access to the maximum idle time for
deleted the FontScalingTest . java file to remove obsolete font size checks to streamline the codebase
added validation for filterBeginDate and filterEndDate in RRD4jPersistenceService . java to ensure that filters begin and end dates are valid
added a check for non - positive numVectors in GenericUDAFComputeStats . java to prevent processing when there are no vectors to process
test : migrate executablereferetest to junit 5 ( # 4342 )
added null checks for ` view ` and ` glassPane ` before setting them to null in ` JLayer . java ` and created a
camel - 16400 : added wiretap support to processor definition and senddynamicprocessor to allow customization of the wire tap expression .
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new option ` TOPN ` in ` PlannerSettings ` and implemented it in ` PushLimitToTopN ` to enable the
[ java ] remove redundant aerondirectoryname usage in test .
feature - add ` ` queued ' ' flag to redis connection ping command
replaced InputStream with FileOutputStream and modified the getConfVarURL method to utilize a temporary file for configuration file to improve resource management and avoid potential
updated the model creation to use the criteria ' s device instead of the default device to ensure the model uses the correct criteria for improved model
added ` onCreateOptionsMenu ` and ` onMenuItemSelected ` methods to the ` SimulationViewer ` class to ensure the motor details option
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated homeDir initialization to use " hawtio . dirname " instead of " user . home " to ensure compatibility with the Haw
added handling for empty comments and whitespace in Space . java to improve handling of whitespace when there are no comments and no whitespace
added ' volatile ' modifier to multiple fields in various dictionary classes to ensure immutability of fields across multiple classes for thread safety
removed stack trace printing from Throwable in ContextHandler . java to improve error handling by avoiding unnecessary stack trace printing
refactored the CustomItemDropTest to extend BaseTest and added JUnit regression tests to improve test structure and ensure compatibility with MCT
added a ` ifNotExists ` boolean parameter to the ` AddPartitionDesc ` class and modified ` DDLTask ` and ` DDLSemantic
updated input reading logic in NfsSecondaryStorageResource . java to improve efficiency and readability of data from the input stream
[ java ] remove unused controlrequeststreamid in auction clustered service node .
added support for spatial operator elements in the CapabilitiesTransformer and implemented a test for supported spatial operators in GetCapabilitiesTest to enhance functionality to support additional
added import for LuceneTestCase and marked it as awaitsFix in BasicDistributedZkTest . java to address issue SOLR
refactor conditional checks in Http11InputBuffer . java for improved clarity and functionality to enhance code readability and maintainability while ensuring
[ java ] disable inbound exclusive for aeron cluster .
hbase - 25836 make sure hfile . block . cache . size and hfile . block . cache . size be set in
added a runningRecordCount variable and a method to retrieve the current record number in the exception builder to improve record management by tracking the current record
added a check to filter out specific year items from mergedItems in CategorizationFragment . java to ensure only valid year items are processed in
updated drawing color from 0x00000000 to 0 in CacheableTextView , CellLayout , and HolographicOutlineHelper classes to ensure
added a check for OpenGL 2.0 rendering method in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering requirements
added imports for ActionContext and set it to null in BackgroundProcess . java to ensure proper context initialization for action execution
added support for prepending a default database name to table names in the SemanticAnalyzer and QBParseInfo classes to enhance table name formatting for
added connection timeout configuration in TestConnections and changed the visibility of the count variable in StubConnection to improve connection stability and enforce immutability
added multiple test cases for the ` approx _ percentile ` function in ` TestHiveAggregationQueries . java ` to validate the functionality of percentile
updated DEFAULT _ IDLE _ TIMEOUT value from Duration . ZERO to Duration . ofSeconds ( 30 ) and replaced idleTimeout and idleWriteTimeout
updated the method to convert the account name from ` account . name ` to ` user . toPlatformAccount ( ) . name ` to ensure
updated type declarations and added multiple @ Override annotations in Inet6Address . java to enhance type safety and improve code clarity
refactor PlaybackControlView to use setter methods for button enabling and disabling to improve code readability and maintainability by reducing
updated the ` isPresent ` method to use ` long ` instead of ` Session ` parameters to improve clarity and consistency in session identification logic
replace ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to
rename the static boolean UseExceptionProbability from true to ___ _ to improve clarity and consistency in naming conventions
updated the newPlateColor assignment logic in PredictedAppIcon . java to handle different color configurations based on icon type to improve visual
guacamole - 524 : remove dependency on passwordencryptionservice and permissioncheckservice from mysqluser .
added " centre " alias to the aliases in the Middle . java file to enhance alias functionality for better user experience
added DirectUpload import and injected method to CommonsApplicationComponent to facilitate dependency injection for the DirectUpload class
added spacing for left and right axes in BarChartActivity , BarLineChartBase , and updated legend positioning in BarLineChartBase to
added support for Java ABI dependencies in AndroidLibraryDescription and JavaLibraryDescription to enhance functionality to include Java ABI support in the library identification
added a request parameter for operation event status in OnlineHubService and changed the services list from final to non - final in CompositeLogService
added debug logging and conditional creation of VisibilityAnnotationTag in DexAnnotation . java to improve debugging and ensure only relevant annotations are processed
( chore ) camel - jms : remove unnecessary try - catch block
refactor the classpath creation in SortedArrayStringMapTest to use a variable for better readability to improve code clarity and maintainability by
updated documentLoader to use a different file separator based on the resource package to ensure consistent file path handling across different Android environments
removed unnecessary ' this ' keyword from method signatures in DataSet class to simplify method signatures and improve readability
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
added escapePercent method to error message formatting in ` ShouldHaveMessage ` and created a new test method in ` ShouldHaveMessage _ create _
fixed - jcache . close ( ) method throw ioexception if jcache . getcachemanager ( ) return null
fix log level for activititaskalreadyclaimedexception in commandcontext . close ( )
reformatted the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
replaced manual value assignment with a method call to getBaseValue in EntityPropertiesPacket . java to simplify code and improve clarity by directly using
refactor SonosAudioSink to use ThingHandlerHelper for checking thing initialization and status checks to improve code clarity and ensure proper handling
increased timeout duration in await statements from 500 milliseconds to 5 seconds to allow more time for the latch to complete before proceeding with tests
change log level from info to debug in LightThingHandler . java to reduce log verbosity and provide clearer feedback
cloudstack - 5353 : asyncjobmanagerimpl # returnjob should return the item to the queue for next turn if the job be
updated exception messages in Reporter and added a new test for smart null exceptions to improve clarity and functionality of exception reporting for better debugging
changed the parameter type of the ` generate ` method from ` Frame ` to ` DataFrame ` to ensure proper type handling for the ` DataFrame `
updated package - info . java and module - info . java files for consistency and clarity to improve maintainability and readability of the code
added a check for non - empty physicalColumnNames before matching against DEFAULT _ HIVE _ COLUMN _ NAME _ PATTERN in OrcPageSourceFactory
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine ` class to enhance functionality by allowing
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
updated calculations in FinderPatternFinder and added new test values in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to
simplified the condition for checking leadingIncludePaths in PreprocessorDelegate . java to improve code readability and maintainability
[ fix ] stringtemplate . isvectormatrixmultiplication no longer throw nullpointerexception
danielwagnerhall : add ` ` find ' ' , ` ` $ ' ' , and ` ` findall '
updated sampleRate handling in DefaultAudioSink . java to ensure proper sampling rate when format is not NO _ VALUE
added getter and setter methods for formula text and modified XSSFName class to improve formula handling functionality and enhance code clarity
increased the scale factor from 60000 to 90000 in HighDimensionsTest . java to allow more time for the target scaling factor to
updated condition in SimpleTypeGT to check for empty values instead of 1 and added a new test for pattern schema in GMLParserTest to
added a new test class ` ClassPathXmlJobRegistryContextTests ` to verify job retrieval and context configuration to ensure the job registry correctly retrieves
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 fixed the restlet endpoint and add a test
camel - 15836 - camel - aws2 - log : remove unused showout ( ) method from logendpointbuilder
refactor ` submitTraceEvent ` to ` writeChromeTraceMetadataEvent ` and introduce a new method ` writeChromeTraceEvent ` to
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to prevent
added pixel offset calculations and validation in LCMSImageLayout . java to ensure correct image layout and prevent invalid layout errors
update timestamp handling in Event and JrubyEventExtLibrary classes to use RubyUtil for timestamp creation to improve compatibility with Ruby ' s timestamp management
added a condition to check if the resource path does not exist in the ContextHandler and created a test for it in WebAppContextTest to ensure
updated the constructor of ` ScriptFunctionImpl ` to use ` name handle ` instead of ` name handle ` to improve clarity and consistency in
refactor JEditTextArea to use variable names for scrollAmount and condition checks for horizontal direction to improve code readability and maintainability by
added a null check for callerLoopScope before setting guardsStage and stageFlags in GraphDecoder . java to ensure that the graph state is
test : migrate sniperprettyprinterjavaprettyprintjavaxtest to junit5 ( # 3390 )
replaced direct instantiation of ` URLOutputStream ` with a try - with - resources statement in ` URLOutputStreamTest . java ` and updated exception
added multiple @ Entity annotations to Mail . java to enable proper entity handling in the Mail class
updated default values in Main . java from false to true and added an option to include tablespace to allow users to specify whether to include tables
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to enhance accessibility for buffer management in the CountersReader class
added a flag to prevent reading empty files in ScanBatch and implemented a test for JSON directory with an empty file in TestJsonReader to ensure
updated failure handling in StringSubject and added a new test method in StringTest to improve clarity of comparison failures and enhance test coverage for string
added a regex pattern for matching library names in LibUtils . java to improve robustness by ensuring only valid library names are processed
changed catch blocks from ClassNotFoundException | NoClassDefFoundError to Exception in JrtJavaBasePackages . java and PackageHelper . java to improve
hbase - 15812 make sure hdfs file system be in safemode before write to disk ( liu shaohui )
updated error message formatting in TracingTaskListener to include class name and message to improve clarity of error messages for better debugging
added caching functionality for PluginDescriptor objects in DefaultPluginCache . java to optimize plugin descriptor retrieval and enhance performance
refactor presence status update logic into a separate method ` updateContactStatus ` to improve code readability and maintainability by reducing duplication
removed the ` withResourceAndParams ` method and its usage in the ` ServletRequestDetails ` class to simplify request handling by eliminating unnecessary
added integration test for fetching account information from the BTCE exchange to ensure that the PollingAccountService correctly retrieves account information from the B
added mouseWheel functionality to VDUInput and VT320 classes and updated mouse reporting in TerminalView to enhance mouse event handling and improve
replaced direct assignment of library path with a variable and added conditional logic for setting library path to improve code readability and ensure proper library path
no effective change - remove deprecated @ columnhstore
added PLAYER _ SKIN _ FLAGS metadata setting in GlowPlayer and MetadataIndex classes , and updated tests in MetadataIndexTest to support
updated the LoadBalancerWithServiceTests to use SLF4J ' s Logger for logging and modified service URL handling to improve logging clarity and
fix npe in mapservice . getmember ( ) if member be null .
replaced ` System . getProperty ` with ` AccessController . doPrivileged ` for retrieving the operating system version to enhance security by using a privileged action
updated TemplateEngineFreemarker to use a configurable file suffix configuration instead of a static constant to enhance flexibility by allowing configuration of
updated the hashCode ( ) calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java
added animation callback to manage layout animations in ToolbarPanel . java to improve UI responsiveness by allowing customization of the visibility of the
replaced ` EasyBind . bindConditionally ( ) ` with ` EasyBind . when ( hasCaret ) . bind ( ) `
added ` declaredPlatforms ` field and updated related classes to utilize ` CxxBuckConfig ` instead of ` FlavorDomain `
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` across multiple files to standardize the use of the ` ParameterAccessor ` for better
added a null check for the passwordAttribute before setting it in LdapAuthenticationProviderConfigurer . java to avoid potential NullPointerExceptions when passwordAttribute is
added a check for array types in DataUtilities and implemented a test for default array values in DataUtilitiesTest to ensure correct handling of default array
updated SSL engine creation logic to handle null address cases to ensure correct host name verification and prevent potential null pointer exceptions
updated assertions in TestFSTableDescriptors to use assertTrue instead of assertEquals for cache hits to improve clarity and correctness of cache
danielwagnerhall : refactored cookie deletion logic to use a dedicated method to improve code readability and maintainability
added a boolean flag ` mHasEndedLauncherTransition ` and modified the condition for recreating controllers in ` AbsSwipeUpHandler ` to
added charset attribute to HTML head and title elements in HTMLListWriter and HTMLWriter to ensure proper handling of character encoding in HTML output
refactor IndexReader class to improve code readability to enhance maintainability and ease of understanding for future developers
updated the maximum length of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and modified path separators in multiple
modified the addition of an arrow button to the JComboBox in BasicComboBoxUI . java and added a new class bug6337518 .
updated TestRandomAccessBuffer . java file to improve test coverage for random access functionality
refactor UserInfoActivity to improve code structure to enhance maintainability and readability of the code
added imports and updated content handling in various services to utilize HomeContentProvider to enhance content management and ensure consistent content URI updates
added a ` mStayPressed ` flag and refactored related methods in ` BubbleTextView ` and ` Launcher ` to
updated the ` getFallbackResponse ` method to include a ` Throwable error ` parameter across multiple classes to include a specific error parameter to enhance error
removed the condition for checking the ` env . _ compile _ only ` flag in the ` DumpBytecode . java ` file to simplify the
added null checks for tags before accessing their indices in ChannelUri . java to prevent potential NullPointerExceptions when tags are null
updated JAVA _ REGEX _ SPECIALS string and modified testSqlPatternContainsMUltipleMatchers method in RegexpUtil and TestSqlPatterns to
added a constant for the action bar title and updated its state in FileActivity and FileDisplayActivity to improve code readability and maintainability by
updated type retrieval from ` Iterables . getOnlyElement ` to ` Iterables . getLast ` in ` PythonDslProjectBuildFileParser . java
updated the Schedule annotation from " * " to " 0 " in CleaningService . java to ensure that the schedule starts with a zero hour
added partition handling and table path retrieval methods in TransactionalValidationListener . java to improve table structure validation and error handling for partitioned tables
added a comment to the SnapPuller class to clarify the enablement of polling in the replication process
changed generatedKey type from int to long and modified SQL execution logic in ShadowSQLiteDatabase . java , and added tests in SQLiteDatabaseTest
simplified the retrieval of the proxy object in SimpleReferenceCache to improve code readability and maintainability
updated test assertions to include specific failure messages related to inline failures to improve clarity and accuracy of test failures related to inline failures
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 589 . keep
deleted the HttpTestAccount001 . java file to the test class is no longer needed in the project
changed exception handling from Exception to Throwable in Dispatcher . java and removed unnecessary test cases in DispatcherTest . java to improve error handling clarity and
camel - 16400 : camel - cxf - allow to set xop on message attachment if the data format be not cxf _
added handling for the ' ~ ' case in ClientUtils . java to improve functionality for handling user input
camel - slack : use java . time . duration instead of long for consumer delay .
fire blockharvesting event when drop a certain amount of item . close # 1193
updated the layout dimensions in TranscodingTab . java from 4 to 5 and added a space after the encoded audio pinch checkbox to improve the
added a new file ` bug8057791 . java ` implementing a GUI with a JList using NimbusLookAndFeel
modified the flags _ field logic in LambdaToMethod . java and added a new class LambdaInterfaceStaticField . java with an interface structure to
refactor SubscriptionManager initialization in RunnerBuilder and add a new test for EthSubscribeAvailable in RunnerBuilderTest to improve subscription management and ensure
updated null check for the ' to ' variable from ' String . length ( ) > 0 ' to ' null ' to ensure robustness by
updated ParquetFixedWidthDictionaryReaders to handle dictionary handling and added a new test for BigInt with a dictionary to improve functionality and ensure correct
updated layout handling logic in PortraitPagedViewHandler to differentiate between landscape and non - landscape modes to ensure proper layout
added a new annotation ` Log ` and ` LogInterceptor ` to handle logging functionality to enable better monitoring and logging functionality in the application
updated the logic for adding thread states in QueuedThreadPool . java to handle empty trace cases to ensure that the output defaults to " IDLE
added ` Implementation ` parameter and updated related methods in ` CacheGenerator ` and ` CacheProvider ` classes to enhance cache functionality by allowing specific implementations
updated the parameters of the createReferenceMap method to include totalFrameSize ( ) to ensure the reference map accurately reflects the total frame
refactor TypesafeConfigurator to improve code structure to enhance maintainability and readability of the code
added a new test class ` CamelGraphqlTest ` to validate the functionality of the ` CamelGraphql ` component to ensure proper testing of
added two new methods ` bug1 ( ) ` and ` bug2 ( ) ` in ` RFE2891944 . java `
removed URLEncoder encoding for keys and values in HttpClientIntroductionAdvice . java to simplify code and improve readability by avoiding
refactor unsupportedPlatformTool to a private class for better encapsulation to enhance code clarity and maintainability by separating the unsupportedPlatformTool
replaced ` double ` with ` int ` for ` loopCount ` and added ` startingRecoveryDelayMilliSeconds ` conversion to improve precision in
added a ` size ( ) ` method to ` FlightConfiguration ` and ` FlightConfigurationImpl ` classes to provide a way to retrieve
[ drools - 6270 ] make random index for address manager in test ( # 6271 )
updated constants in VLCVideo . java to include " left : pref " and " right : pref " and " left : pref " to
updated URLs from " bisq " to " https : / / github . com / bisq / bisq " and " https : /
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory and modified repository path handling in MBoot . java and MavenCli . java to ensure the correct local repository path is used
added binding of the array buffer to the GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure proper resource management and
refactor ServerHttpSecurity class for improved security handling to enhance code maintainability and readability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added defaultHeaders initialization in HttpClientProperties and updated CasCoreHttpConfiguration to include default headers to enhance HTTP request configuration flexibility by allowing default headers
added new classes ThingsboardCredentialsViolationResponse and UserPasswordNotValidException and updated error handling in ThingsboardErrorResponseHandler to improve error
deleted the NoOpConfigPathGetter . java file to the class is no longer needed in the project
replaced Codec . base16Decode with Bytes . fromHexString for signingKey assignment to improve code readability and performance by utilizing a more
added null and empty check for float property and adjusted inline block positioning based on left and right conditions to ensure proper handling of float values and
jbrules - 2852 update to optaplanner 3.0 . 0 , add @ planningfact and @ planning
replaced instances of ` CaseInsensitiveHeaders ` with ` MultiMap ` in ` RestUtils ` and updated related methods to utilize it to
replaced ` String ` encoding with ` Charset ` in multiple classes to standardize character encoding handling across the codebase
added a method ` getJobId ( ) ` to ` StepContext ` for retrieving job ID from ` JobExecution ` and ` JobInstance ` to
replaced ` Long . valueOf ( ) ` with ` Long . compare ( ) ` for comparison in ` ExpandableUploadListAdapter ` and
replaced error logging with debug logging in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity for HTTP responses
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler instead of a wildcard to improve code clarity and maintainability by
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
filtermanager : do n ' t remove invalid filter from the network if it ' s our own filter
added a static wrap method to BCPGInputStream and removed it from PGPKeyRing to streamline the code by eliminating redundancy
replaced DataOutputStream with BufferedOutputStream and added a try - finally block for resource management to ensure proper resource management and prevent potential resource leaks
added a new test method ` testSelectAllFromView ` and modified column index handling in ` HiveBaseResultSet ` to improve test coverage and
refactor FocusTransitionTest to improve test coverage to enhance reliability and maintainability of focus transition functionality
changed import statement from org . gwtproject . core . client . GWT to com . google . gwt . core . client . GWT
added a check to ensure ` sourceTask ` is an instance of ` MapRedTask ` before retrieving job counters to avoid potential ` NullPointerException `
added a null check for the readListener variable in HttpInput . java to ensure that the readListener is not null to avoid potential NullPointerExceptions
added color selection functionality to the AppearancePanel class to enhance user interaction by allowing dynamic color changes
updated the constructor parameter from ` false ` to ` hidden ` in ` TaskHelper . java ` to ensure that the ` hidden ` parameter is
make failovertimeouttest more robust by use exponentialbackoff = false
pdfbox - 4892 : fix resource leak , a suggest by valerybokov
added import statement for DefaultParameterHandler in LanguageDriver . java to enhance parameter handling capabilities in the scripting framework
[ fix ] slroptlsra spill optimization do n ' t take into account the spill depth of the spill interval .
fix micronaut fail to compile groovy script ( # 1193 )
refactor PgResultSet to use a method ` closeInternally ( ) ` instead of ` close ( ) ` in ` PgStatement ` to
initialize ` serviceAdvisorType ` to ` ServiceAdvisorType . PYTHON ` instead of ` null ` to ensure ` serviceAdvisorType ` is
avro - 1188 . java : fix concurrentmodificationexception in genericdatumreader . getresolver .
changed the constructor of ` Path ` from ` Collection ` to ` List ` in ` Path ` , modified the return type of ` PdfContent
replaced the usage of a new byte array with a memo variable for generating random bytes in SendCoinShieldTest . java to improve code
added a method to set personalisation for a date using a specified locale and email and distinguisher to enhance functionality by allowing users to set personal
removed redundant line breaks in CodeGenerator . java to improve code readability and maintainability
removed the percent parameter from scroll method signatures in multiple classes to simplify method signatures and improve code readability
changed the visibility of the ` pointer ` variable from private to public and added methods for resetting the pointer to allow external access to the ` pointer
rename ContentDigestHistory class to BdbContentDigestHistory and update related references to improve clarity and consistency in naming conventions
replaced specific imports with a wildcard import and modified type casting logic in CastExpression . java to simplify import statements and improve type handling for BOOLEAN
replaced ArrayList with a boolean for handling acceptsAll in AbstractResource . java to improve clarity and control over the handling of accepted media types
added a boolean flag ` false ` to the ` TaskView ` class to control the behavior of the task view
added isAutoIncrement method to LiquibaseDataType and overridden isAutoIncrement method in CreateTableChange to ensure correct handling of auto - increment
initialize errorText to a default value of " Command failed due to Internal Server Error " to provide a clearer error message for better debugging and
updated import statements in LocalManagementTest . java and added JVM options in LocalManagementTest . java to improve compatibility with the latest JDK features
updated method calls from ` add ` to ` push ` to ` push ` for ` currentStatus ` and ` boosterStatus ` to improve
added Ajp connector setup and binding functionality to the GitBlit server to enhance security by ensuring GitBlit can run with root permissions for
added intersection type coercion logic in TransTypes . java and created a new Intersection03 . java file with assertions to ensure correct type
rename ` EmbeddingTest ` to ` EmbeddingITest ` to clarify the purpose of the test class
added a native method to start the toolkit thread and modified thread handling logic to ensure that the toolkit thread is only started once to improve
[ gr - 16936 ] optimize bundle content store in parallel by default .
fix ( opengl ) : hide the gl surface on window
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability
added new boolean properties ` fullNodeHttpEnable ` and ` solidityNodeHttpEnable ` to ` CommonParameter ` , ` Args ` ,
added a service property to GoogleCloudFirestoreTicketDocument and implemented the countTicketsFor method in GoogleCloudFirestoreTicketRegistry to enhance
refactor Generate . java file to improve code organization to enhance maintainability and readability of the code
removed nullableParameters from the ScalarFunction annotation and added new test cases for null handling in JsonFunctionsTest to simplify the function annotation and ensure correct
added a DOTS _ ONLY flag and modified condition checks in BadgeRenderer , IconPalette , IconPalette , and NotificationKeyData classes to
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to allow the method to
( chore ) camel - ognl : add a test for invalid exclusion of package name pattern
updated deviceUdid assignment logic to handle macOS platform cases to ensure compatibility with macOS devices and improve test reliability
updated DefaultHttpClientFilter to use ProduceProcessorManager instead of error logging and modified response handling in TestDefaultHttpClientFilter to improve logging clarity and
added null checks for mScript before binding and execution in AllAppsView . java to ensure that the script is only initialized when it is present
added a new boolean variable ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to conditionally apply shadow layer to
added teardown methods for tests in TestColumnAccess . java and TestReadEntityDirect . java to ensure tests are executed after each table and view
added a lookup for a specific parser by name in SecurityNamespaceHandler to ensure the correct parser is used for specific namespace handling
modified the conditional check in ` BoundedLocalCache . java ` and added a new test case in ` BoundedLocalCacheTest . java
modified the ` RawConnection ` interface to extend ` WebSocketConnection ` and implemented the ` complete ` and ` flush ` methods in the ` Raw
added multiple test methods for validating assertions in SoftAssertionsPerfTest . java to enhance test coverage for different assertion scenarios
added a new constant TEST _ FAILURES _ EXIT _ CODE and modified execution logic in PythonRunTestsStep to check for failure exit codes to
added a check for markupEnabled before processing x advances in GlyphLayout . java to ensure that subsequent runs are only processed when markup is enabled
refactor score comparison logic in TestBooleanRewrites . java to use Java streams for better readability and maintainability to improve code clarity
updated the method for retrieving the enum class from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` to ensure the correct superclass is
refactored player socket connection flushing logic to directly use the instance variable to simplify code and improve readability by reducing unnecessary type checks
added a check for initialization before removing the OnDrawListener in Launcher and LauncherAnimUtils to ensure listeners are only removed once to avoid
refactor multiple classes related to CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
replaced specific rule import statements with a wildcard import and updated the conditional check to include NOT _ APPLICABLE to simplify import statements and ensure
changed the default value of MEDIAPARSERV2 from false to true in RendererConfiguration . java to enable media info parsing by default for
add support for around type in beandefinitioninjectprocessor . fix # 2748
added assertions and verification for table partition deletion in FolderPermissionBase . java to ensure proper permissions for table operations and verify correct permissions
added a new method ` publishStatusInternal ` and modified ` handleProviderRegistered ` to include a boolean parameter for due to registration state changes to
updated the color calculation logic in PastelColor . java to use a base - 255 value to improve randomness in color representation for better
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
updated the handling of bitmaps in HolographicViewHelper to use a new method for creating original and outline bitmaps to improve code
cloudstack - 10385 : add request . content ( bytescontentprovider ) if the request body be not empty .
add a new parameter ` containingPhrase ` to the ` getTag ` method and introduce a method to infer the position of a tree based on
removed unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
added conditional logic to retrieve the output format class based on the class name to ensure proper loading of the output format based on the storage handler '
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added a check for negative lengths in the DOMBuilder class to ensure that the length is valid before proceeding with further operations
updated conditional checks in ClusteringCoefficient , EigenvectorCentrality , DiameterUI , GraphDensityUI , and HitsUI
camel - 15850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to demonstrate the use
camel - 14263 : camel - jbang - make defaultkeyselector implement camelcontextaware and add support for property placeholder resolution .
replaced instances of ` Throwable ` with ` ThreadDeath ` in ` LogResolverBean . java ` and ` ResourceResolverBean . java
refactor multiple classes including KeyManagerFactory , TrustManagerFactory , Policy , ConfigFile , Security , CertPathBuilder , CertStore , and CallbackHandler to
update JGit version from " J106090707 - r " to " J109151100 - r " and sort jars
refactor client key handling in HttpClientIntroductionAdvice . java to improve clarity and maintainability to enhance code readability and
int - 1186 , int - 1187 , int - 1188 , int - 1188 , int - 118
updated BACK _ FACTOR and REWIND _ TIME constants and modified conditions in ResumeObj . java to improve clarity and correctness of
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and modified event firing logic in ` Button
updated usage formatting in UtilityCommands and DocumentationPrinter classes to improve clarity and formatting of command usage information
corrected a typo in the attribute name from " collection . map " to " collections . map " to ensure consistency in attribute naming
removed setSeqFiles and setUnseqFiles methods from CrossSpaceCompactionResource and updated merge file sizes in RewriteCrossSpaceCompactionSelector
remove duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
simplify rule set synchronization logic in ProjectPropertiesModelImpl . java to improve code readability and maintainability by reducing redundancy
fix synchronization issue in abstractsootfieldref . getfieldbyname ( )
added ElasticNamingConvention and ElasticNamingConventionTest classes to enhance naming convention for Elastic meter registry functionality to improve the flexibility and maintainability of
added methods for listener management and command creation in IController and its implementation in TinyGController , and updated BackendAPI to use IController
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify rendering behavior with a huge horizontal
replace System . out . println ( ) with TTY . println ( ) in TypeSystemTest . java and PartialEscapeAnalysisPhase . java
refactor multiple Java classes to improve code structure and readability to enhance maintainability and clarity of the codebase
updated the condition to check if frameLength is less than or equal to zero to ensure that invalid frame lengths are handled correctly
added return statements for zeroValue in IntFloatMap and IntIntMap classes to enhance functionality by providing access to default values
replaced direct icon setting with a call to ` Display . callSerially ( Runnable ) ` in ` ImageDownloadService . java ` to
added a null check for registered in the HandlerRegistration class to ensure proper handling of null registrations and prevent potential NullPointerExceptions
removed the ` hasNextSibling ( ) ` method from multiple classes and updated the return statement in ` IeNavigator . java ` to simplify the
fixed - redisdistributedmapcacheclientservice . getvalues ( ) method throw npe if mapcache . getvalues ( ) return
added logging statements to enable or disable the MobFileCache functionality to improve visibility into cache settings for better debugging and monitoring
refactor ColConvCCMTest class for improved readability to enhance maintainability and clarity of the test cases
refactor variables and methods related to covariant return handling in Check . java to improve code readability and maintainability by reducing redundancy
pdfbox - 4892 : improve type safety , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new ` X `
added a return statement in GenericFileConsumer . java to prevent further processing in the code
added a Runnable to EventQueue . invokeLater in bug6638195 . java to ensure that UI updates occur on the Event Dispatch Thread
updated the maxSize calculation from ` getMaxTextMessageBufferSize ( ) ` to ` getMaxBinaryMessageSize ( ) ` to ensure accurate maximum message size
updated steeringValue assignments from ` - . 5f ` to ` - . 5f ` in multiple test files to correct the st
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
replaced ` Date ` and ` Timestamp ` conversion with ` LocalDateTime ` and ` ZoneOffset ` for date and time conversion in ` JdbcSer
updated version from 2 to 3 and modified metadata reading logic in ParseData . java to ensure compatibility with version 3 and improve metadata handling
refactor FlywayAutoConfiguration and FlywayInitializerJpaDependencyConfiguration to improve entity manager configuration and test for custom Flyway
added sorted ( ) method to ClassesImpl . java to ensure all classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated the state retrieval in ` AbstractLauncherUiTest
refactor SharedInformer class to improve code structure to enhance maintainability and readability of the code
updated TestCloseScope0 . java to distinguish between MemoryScope and ResourceScopeImpl based on the major version to ensure compatibility with different Java versions
increased test timeout from 500ms to 5000ms in AdaptServerSocket . java to allow for more time for tests to complete successfully
refactor CaptchaChannelProcessorTests to improve test coverage to enhance reliability and maintainability of the code
added conditional logic to update theOwningCollection of items based on the current collection handle to ensure item belongs to the correct collection before updating its
added retry mechanism for saving registry properties in AbstractRegistry . java to improve reliability by allowing more time for saving registry cache files
updated the parameter of TrackingDirectoryWrapper from ' mergeDirectory ' to ' directory ' to ensure the correct directory is used for tracking operations
[ core ] unusedimports : add test case for java 1.5
added validation for sink descriptions and utility methods to handle bucket partitioned Iceberg tables to ensure that insert overwrite queries are only performed on bucket
updated assertions in BootstrapTests to check for legacy SAML keys in the default identity zone to ensure compatibility with the latest SAML key management standards
updated method names and conditions for anonymous and non - static local fields in Excluder . java to improve clarity and correctness of
removed the synchronized keyword from the getAddressVector method and updated related logic to improve code clarity and handle unexpected e - mail addresses gracefully
removed multiple WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE
added IOException handling to the release method in multiple classes and created a LockReleaseFailedException class to improve error handling and provide clearer feedback during lock
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to organize
updated SpelExpressionTransformer to check for non - unary operators and simplified conditional checks in multiple classes to improve code clarity and maintainability by
updated ByteBuddy initialization to use TypeValidation . DISABLED to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` and added a new ` Errone
increase innodb lock wait _ timeout from 100ms to 1ms in test
removed the unused parameters ` logFile ` from the ` setSystemProperties ` method and replaced it with a direct call to ` applyToSystemProperties (
added redirect handling functionality to the request method in ServiceApiRequest . java to improve reliability and error handling for HTTP redirects
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants and updated MicroserviceFactory to use EnvironmentConfiguration
updated the method to use getBeanName ( ) instead of getName ( ) for the ABOUT _ TO _ BEGIN _ PROCESSOR step to ensure
changed DB _ PATH _ REGEX to static and added a DB _ PREFIX constant in BaseAndroidTestCase . java , and modified database deletion methods
updated return statement to retrieve unread count from HomeDataSource to ensure accurate retrieval of unread counts for the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method for virtual thread pool
modified the ` getAllOrder ` method to accept a limit parameter and modified the order retrieval logic to limit orders to enhance flexibility in order retrieval
added a null check for the user before retrieving user settings to avoid potential NullPointerExceptions during user settings retrieval
updated the method of retrieving the absolute file path in LocalFileSystem and added a new test for relative wildcard matching in LocalFileSystemTest to ensure correct
added MAX _ WIDTH and MAX _ HEIGHT constants and modified bounds setting logic in ComponentBuilders . java to ensure that the instance does not exceed
added logging functionality and deprecated the setConnectionManagerTimeout method in CommonsHttpSolrServer . java to enhance debugging capabilities and allow configurable connection management timeout
added ExceptionHandler import and error handling in PrintController . java to improve error reporting for document creation failures
refactor filename generation in CrateType . java and add RustBinaryIntegrationTest . java to improve code readability and ensure file existence
added validation to check if a word is numeric and added a test for it in SpellCheckerTest . java to ensure that only valid numbers
updated the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
added a method to retrieve the OCFileListFragment from a file input to improve file action handling in the FileDisplayActivity
hbase - 26969 disable daemon replication in snappuller ( # 2698 )
removed unnecessary parameters from the update method call in StoreCachedTest . java to simplify the method signature and improve code readability
removed the ` MaterialHolder ` from the constructor of ` StreamerLoader ` and removed all ` MaterialColumnParser ` instances from ` fileColumns
updated dependency strings in DependencyBank . java for better clarity and organization to enhance the readability and usability of the DependencyBank class
added calculations for max recyclled views in AppsContainerRecyclerView to optimize recycling views based on device profile and icon size
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that the build process
fix baritone not be able to connect to a world that do n ' t have a piece of world .
added imports for ParsedNode and ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating parsing and resource
added null handling support in FilterOperatorUtils and corresponding tests in NullHandlingEnabledQueriesTest to enhance functionality for range and equality filtering in the query
added validation checks for bootstrap method signature in JDynamicInvokeExpr . java to ensure correct argument types are used for bootstrap method invocation
increase the port number for the jms connection from 10.0 . 9 to 9.0 . 9 in jmshttpjmstest .
added a call to clear the formatters in CucumberInstrumentation . java to ensure that the formatter settings are reset before instrumentation operations
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` in ` AbstractRegisteredService . java `
added a conditional check to adjust workspace label visibility based on the vertical padding of the workspace cell to ensure workspace labels are only hidden when the icon
updated assertions in ReplicationFactorTest to use ` assertRf ` instead of ` assertTrue ` for better clarity to improve readability and
sulong : fix llvmlanguage . patchcontext ( ) and llvmlocation . patchcontext ( ) to handle deferred context
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to enable tests
replace RuntimeException with JsonIOException in Gson . java to improve error handling for JSON - related issues
replaced ` Integer . valueOf ` with ` Integer . parseInt ` for value parsing in ` VisualScoreTagTest . java ` to ensure proper
updated error messages and modified directory handling in Copy . java to improve clarity of error messages and ensure proper directory resolution
refactor segment name validation logic in HLCSegmentName , LLCSegmentName , and RealtimeSegmentType classes to improve clarity and
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to enhance
replaced ` DateTime . now ( ) ` with ` DateTime . getCurrentTime ( ) ` in ` DueDateBusinessCalendar . java `
updated the return statement in TargetCpuType . java to include a target architecture with x86 _ 64 - none - linux - android to ensure
added a method to delete all files associated with an account in FileDataStorageManager to enhance file management capabilities by allowing deletion of files associated with
updated command line option name from " - ? " to " - h " in SchemaCrawlerCommandLine . java to clarify the purpose of
added a static method to create a description with a unique ID and updated its usage in the Description class to improve code clarity and ensure unique
replaced the decoding method in SnapshotThread . java with a direct call to decodeBarcode to simplify code and improve readability by reducing
removed ` ImmutableList < String > sources ` from the ` BuckTarget ` constructor and added ` @ SuppressWarnings ( " unused " ) ` annotations
added unit tests for range past end and start in GWCZoomContextFinderTest . java to ensure correct behavior of range calculations in the
added a dependency tracking configuration key and a method to enable dependency tracking in JRubyScriptEngineConfiguration and JRubyScriptEngineFactory to enable dependency
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure that
consolidated keyspace creation logic into a separate method to improve code readability and maintainability by reducing duplication
refactor WelcomeWindow to use a cached Image instance instead of a background image to improve image handling efficiency and maintainability by centralizing image
updated tuner configuration handling to include unique ID generation and resubmitted buffer transfers to improve tuner configuration management and ensure proper buffer resub
added HasTests interface to AbstractShBinaryDescriptionArg and a new test method in ShBinaryRuleIntegrationTest to enable testing of the sh binary
added a condition to set the includeString variable to " db : hsqldb " in TestFilter . java to ensure compatibility with HSQL
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
trufflestacktrace : do n ' t call materializeHostException if there be no stack trace
refactor service loading logic in GraalServices . java and improve error handling in CompilerConfigurationFactory . java to enhance code clarity and ensure
added a test for duplicate command handler resolution in the AggregateAnnotationCommandHandlerTest to ensure that the command bus correctly subscribes for updates with annotated
[ flink - 20865 ] [ stream ] add fine - grained - shuffle - mode . all - blocking configuration option to stream
fix fish hook not be able to place block inside world .
camel - 14263 : camel - aws2 - ftp : add documentation for file , ftp , ftp and ftp component .
renamed ` commandRunner ` to ` stepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` and related methods to improve clarity and
added a check for empty items in AppsContainerRecyclerView to prevent unnecessary processing when no items are available
added a conditional bean annotation for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure that the REP
replaced StringBuffer with StringBuilder and added properties property management in XMLLayout . java to improve performance and flexibility in managing logging properties
added a new constant ` OMIT _ HEADER ` in ` CommonParams ` and implemented the ` remove ` method in ` NamedList ` to
replaced the method ` _ id ` with ` getPropertyNumber ( ) ` in ` EscherProperty . java ` and added unit tests for
replaced direct calls to ` getBuildRuleType ` with a call to ` Description . getBuildRuleType ` to improve code readability and maintain
modify the hierarchy when the method numberer be remove to ensure that the hierarchy is updated correctly in the scene ' s lifecycle management
added null checks for disputesPerTradeId and disputesPerPayoutTxId items in TradeDataValidation . java to avoid
added hashCode ( ) and toString ( ) methods to AbstractNamedObject , TableRetriever , and NamedObject classes , and modified column retrieval logic to
set the confidence type of send transactions in Wallet and update import statements in WalletTest to ensure that transactions are not sent in the chain while ensuring
refactor HttpClientIntroductionAdvice to improve argument handling and header handling to enhance code clarity and ensure correct header name is used
craftinghelper : do n ' t process conditions that start with " _ " in the json file , so that they do n '
hbase - 26969 region . open ( ) should log a warning if the region can not be open
refactor null length comparison logic in Credential . java to use local variables for length comparisons to improve code readability and maintainability by reducing
[ java ] do n ' t check if subscription have image for the correct correlationid .
modified the ` destroy ` method to throw ` InterruptedException ` and refactored the process destruction logic to improve error handling and ensure proper
added oracle support to the conditional check in TestDefaults . java to enhance compatibility with Oracle database queries
camel - 14263 : camel - core - mail : do n ' t try to connect to the mailstore if it ' s not
added token handling logic to check for consumed tokens in the query to ensure that there are no more tokens in the query that have not been consumed
camel - 16561 - aws - translate : list all the available language in the enum - start with ` ` k ' ' complete
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the model initialization logic in the ` Voice ` class to
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable flexible management of email domain settings
added REQUEST _ READ _ TIMEOUT and REQUEST _ CONNECT _ TIMEOUT constants to Configuration . java and updated its getter and setter methods in ViewRegistry .
do n ' t call processdeferredconcepts ( ) if there be no concept link to save
added RedisCategory import and annotation to RedisServiceRegistryTests . java to categorize tests related to Redis service registry functionality
updated the ` FindDeprecatedMethodsTest ` to include a ` ParameterizedTest ` annotation and modified the method signature to accept a type pattern to enhance
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` to ensure proper rendering of the
removed unused import statements from multiple classes to improve code cleanliness and reduce unnecessary dependencies
updated LogEventWrapper to include event signature and event name as a full string to enhance event reporting by providing more detailed information about the contract event
replaced ` contains ` method with ` endsWith ` for file name matching in ` FileTestHelper . java ` to improve file name matching accuracy
replaced ` g . clearRect ( ) ` with ` g . fillColor ( getBackground ( ) ) ` in ` MapView .
added a conditional statement to handle cases where no Invoker is found in the PackageBuilder class to improve code readability and ensure proper compilation error
removed unnecessary debug print statements from multiple Java files to improve code readability and reduce unnecessary console output
added a check for NaN score values before asserting their value in TestFieldCacheSort . java to ensure that score comparisons are only checked for
use set . copyof ( ) instead of set . copy ( ) in devicestate . getentitykeys ( )
added zeroTime method to handle empty string values in ColumnSnapshotGenerator . java and implemented date default value in MySQLIntegrationTest . java to ensure
renamed ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and ` t
updated parameters in FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , FunctionFirstPassGroupingCollector , and FunctionSecondPassGroupingCollector to
[ drools - 3640 ] fix creation of session configuration in kiesessionmodel ( # 3641 )
updated HiveMetaStoreClient instantiation to use ' this . conf ' instead of ' conf ' to ensure the correct configuration is used for HiveMeta
added a conditional check to return early if mModalness equals modalness to optimize performance by avoiding unnecessary processing
added a test for CodecProfileLevel creation in ShadowMediaCodecListTest and implemented native _ getGlobalSettings method in ShadowMediaCodecList to ensure
fix # 5460 ( when enter key use , focus be wrong )
added validation for width and height in SunVolatileImage . java and improved error handling in XRPMBlitLoops . java to
updated the thousands separator from " . " to " \ u00a0 " in the FormatData _ uk . java file to ensure
replaced integer array with AtomicInteger and updated connection parameters in AsyncStressTest and StressTest classes to improve concurrency handling and ensure thread safety
added functionality to display messages for unavailable beta flavours in AchievementsFragment and LeaderboardFragment to improve user feedback when achieving achie
added access , name , and desc properties to the SearchMethodVisitor class to ensure proper initialization of the SearchMethodVisitor with additional context information
added sleep calls and changed catch block to InterruptedException in IoTDBInsertWithoutTimeIT . java to ensure proper handling of interrupted exceptions during database operations
removed unnecessary whitespace in DLNAResource . java to improve code readability and maintain consistency
( chore ) camel - resequencer : remove ` ` required ' ' attribute from xml config
refactor transaction management methods in TableReader and TableReaderTxnScoreboardInteractionTest to improve transaction management and resource management to enhance code clarity
flume - 210 : thriftsource should use ssl . keymanager . algorithm instead of a hardcoded value
refactor getSingleSourceApplicableTest to return an Applicability instance instead of a JavaVisitor instance to improve code clarity and maintainability by
blockmania : tab key do n ' t work in repeat and event
changed access specifications from PACKAGE _ PRIVATE to NONE across multiple files to standardize access specifications for better clarity and consistency
renamed the method ` unHandled ` to ` unhandled ` and updated error handling in the ` Check . java ` file to improve clarity
refactor stripes and stripeStats assignment in OrcInputFormat . java to improve clarity and maintainability of the code
added a null check for the exception variable in JCache . java to avoid potential NullPointerExceptions during execution
updated URLs from " http " to " https " in MyhentaicomicsRipper . java to enhance security by using secure
added command - line argument handling for version option in App . java to provide users with a way to view the current version of the application
changed PApplet . split method from ` split ` to ` splitTokens ` in ` Sketch . java ` to improve token splitting functionality for
updated rotation preference handling in ConsoleActivity and added IME options in TerminalView to improve user experience by dynamically assigning the default rotation preference based on
changed the type of the ` hq ` variable from ` HitQueue ` to ` PriorityQueue < ? extends ScoreDoc > ` to
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when accessing the ownerConnectionAddress
camel - 14263 : camel - jolokia - allow to specify the headersmapfactory class name for camel - jolokia
updated closing brace formatting in JavaCompiler . java to improve code readability and maintain consistency
int - 1186 , int - 1188 , int - 1188 , int - 1188 , int - 118
updated the index parameter from ` i + 1 ` to ` i2 ` in the expecting condition to correct the expected index to reflect the correct
refactor class loader creation and error handling in AbstractScriptProcessor and InvokeScriptedProcessor classes to improve clarity and error handling during engine addition
added support for the org . postgresql . PGStatement class in PooledConnectionImpl and created a test for it in ConnectionPoolTest to
refresh cassandra size estimate after test be complete . patch by jbellis
change log level from error to warn for fragment limit in AtomicRemainder . java to improve logging detail for fragment limit issues
remove unnecessary sorting of candidate timestamps in CompactionController and add a new test for aggressive fully expired keyspaces in TTLExpiryTest to
fixed - rblockingdeque . polllastasync ( ) and rblockingqueue . pollfirstasync ( ) method return wrong value . #
reformatted printMap calls in JobInspectCommand . java for consistency to improve readability and maintainability of the code
refactor Engine class to improve code structure to enhance maintainability and readability of the code
refactor sorting logic in ChildHolder . java to use entrySet ( ) . stream ( ) to improve readability and maintainability of the
[ issue # 2370 ] fix fail acl test ( # 2371 )
updated condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling of
[ hotfix ] [ notebook ] fix npe in notebookserver when interpretergroup be null
changed the type of the list element from funN to lt in the ExpressionNodeEvaluator class to ensure the correct type is used in the evaluation
changed access modifiers of methods in NodeIdAccessor from public to package - private to restrict access to these methods for better encapsulation
cs - 15850 : add note to create snapshot policy error message when volume be attach to a vm before create it
changed method visibility from public to package - private in ItemWriter . java to restrict access to methods that are not intended to be part of the
updated the parameter name in the ThingImpl constructor from " " to " test " to improve clarity and specificity of the test case
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replace FSDirectory with RAMDirectory in TestNorms . java to use a more efficient RAMDirectory for file operations
added a static variable ` mLineHeight ` and modified the calculation of ` lineHeight ` to ensure ` mLineHeight ` does not exceed
updated WalletAppKit . java for improved functionality to enhance performance and maintainability of the wallet application
remove hat _ js _ rhino and hat _ nashorn from oqlengineimpl # getinitstream ( )
replaced the direct removal of a menu item from the button group in ChatTransportSelectorBox . java to improve code readability and maintainability
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
replaced direct calls to ` setBsqBlockChainExplorer ` with Optional and added null handling for ` bsqBlockChainExplorer ` to improve
added attribute management and removal methods to the StandardSession class to enhance session management capabilities by allowing attribute management and attribute management
added assertions to verify the presence and presence of plain beans in TestDbJson _ List . java to ensure that the correct bean name and al
updated the array size from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to align the array with the initial page count
refactor BatchCommandLineLauncher to improve code structure to enhance maintainability and readability of the code
added database and transaction management beans using EmbeddedDatabaseBuilder and JdbcTransactionManager to enhance database integration with HSQLDB in the batch metrics application
changed the implementation of GlowrootLogHttpService from UnauthenticatedHttpService to HttpService to align with the intended HTTP service implementation
pdfbox - 4892 : fix typo , a suggest by valerybokov
removed synchronization from close ( ) and added synchronization in DocumentsWriterPerThread . java and IndexWriter . java to improve thread safety and ensure
added methods to retrieve and set client properties for multiple choice options and validation constraints in UiBinding . java to enhance property management capabilities for better UI
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency across multiple classes to improve code readability and
added a fullSave flag to control the handling of tree saving in the Save . java file to ensure only the stored tree is updated when saving
refactored condition handling in Affix . java and added pattern management in Dictionary . java and TestAllDictionaries . java to improve code
replaced generic type parameters for ` krakenMakerFees ` and ` krakenTakerFees ` with diamond
removed the import of CharTermAttribute and used it in DefaultIndexingChain . java to simplify the code by eliminating unused dependencies
refactor NBJavacTrees class for improved readability to enhance maintainability and clarity of the code
added a check for unsupported data encoding in VectorizedPrimitiveColumnReader . java to ensure proper handling of unsupported encoding scenarios
updated conditional checks in HttpSolrCall . java to ensure static Admin UI files must always be served to improve code clarity and ensure proper logging
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper resource management and prevent memory leaks
added a constant for the maximum level in DefaultEntityQueryRepository and refactored the getLvlFilter method to use a getMaxLevel method to
added a null check for the changelog ID before formatting the message to provide clearer error messages when the changelog is not registered with the Hub
add try _ harder _ hint to abstractblackboxtestcase to try harder
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompile
refactor event handling logic in ObjectStore . java to simplify the loop structure and improve readability to enhance code clarity and maintainability by
simplified the support check for the ` Validated ` annotation in ` ValidatedLocalValidatorFactoryBean ` to improve code readability and
remove duplicate entity from the temporary block entities list to improve efficiency by avoiding redundant entities from being processed
[ fix ] intrinsifyarraycopyphase do n ' t handle exact type
removed unused logging imports and modified logger settings in TestCoyoteAdapter . java to improve code cleanliness and ensure proper logging behavior
replaced the ` WantedAnywhereAfterFollowingInteraction ` class with a more descriptive stack trace message to enhance clarity of
added validation checks for ownerAddress , accountCapsule , and key address in AccountPermissionUpdateActuator and PermissionDeleteKeyActuator to ensure
refactor command sorting to use a TreeMap for better readability to improve code maintainability and reduce duplication in command sorting
chore : [ workflow ] update go _ package to match open source code ( # 113 )
replaced multiple occurrences of ` addProperty ` with ` setProperty ` for metadata properties in ` BaseSingleTreeBuilder . java ` to streamline property management
updated the instantiation of ` AsmLoader ` to use ` interfaceClass . getClassLoader ( ) ` instead of the default ` ClassLoader ` to ensure
pdfbox - 4892 : improve error message , a suggest by valerybokov
update export statement in Java2TypeScriptTranslator to conditionally declare the namespace based on the definition scope to ensure correct export behavior based on the
updated the start method to use AbstractHandler instead of EmptyServerHandler and added a handling method for HTTP requests to improve request handling and ensure proper
updated input listener parameters for " Pause " and " Rotate " in HelloInput . java to improve clarity and consistency in listener naming
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5338 .
updated package declaration of ReadFolderTest and RenameFileTest to ensure consistency in test naming conventions
refactor BufferedImage creation and filtering logic in AwtCanvas . java to improve handling of grayscale and invert color models to enhance compatibility with different
[ gr - 16934 ] make native image location qualifier configurable in graal .
removed the ` DataflowPortabilityApiUnsupported ` class from the ` UsesTimersInParDo ` class and its usage in the `
replace ` remove ( ) ` with ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1Impl . java
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log warn if max - size per _ node configuration do not allow any data in the map
corrected the spelling of " AST " to " LST " across multiple files to ensure consistency and accuracy in terminology across the codebase
refactor scoreable calculations and improve readability in ThreadedAcousticScorer . java to enhance code clarity and maintainability
replace AssertionError with returning null in NetHooks . java to simplify error handling by explicitly returning null instead of throwing an AssertionError
updated method calls in ApplicationControllerFluentLeniumTest to use window ( ) . title ( ) instead of getServerAddress ( ) to ensure
added default makeString methods in ParallelIterable , RichIterable , AbstractSynchronizedRichIterable , AbstractMultiReaderParallelIterable , and Rich
replaced the hardcoded value of Ordered . HIGHEST _ PRECEDENCE with a constant DEFAULT _ ORDER in OidcServicesManager
added a weakAssociationRule predicate to the WeakAssociationsAnalyzer constructor and updated related tests accordingly to enhance the flexibility of weak association analysis by allowing
refactor Deflater class to improve compression efficiency to enhance performance and reliability of compression operations
added error handling for throwable exceptions in Font . java to ensure proper exception management and prevent application crashes
added a null or empty check for content in VersionTypeBinding . java to ensure that a default version is returned when content is null or empty
simplified the return statement of ` loadAttractionsFromLocation ` and simplified the ` onPostExecute ` method to improve code readability
changed the content type check from ` startsWith ` to ` toLowerCase ` in ` MailConverters . java ` to ensure case - insensitive matching of content
change visibility of AUTH _ MAGIC to public and modify format handling in OpenSSHPrivateKeySpec to enhance accessibility of AUTH _ MAGIC and
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for suggesting folder names to enhance flexibility in folder name
replaced specific Hibernate annotations with a wildcard import and added JPA logging for third access in InheritanceCacheTest . java to improve code
updated import statements in ConnectOAuth2RequestFactory . java and added a user approval request method in TofuUserApprovalHandler . java to
fix influx name convention not apply to tag value ( # 645 )
replaced ` System . out . println ( ) ` with ` dump ( String string ) ` and added ` dump ( Double double ) `
updated the cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure the correct key is used for cookie processing
added a static method ` classMetadataUnsupported ( ) ` to return false in ` Platform . java ` and refactored conditional checks in ` Subject
added functionality to toggle the visibility of the clear - all button based on user preferences to enhance user experience by providing clear - all functionality based on
updated ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider ` to use ` final ` for ` desiredRepoVersion ` and
deleted the MemoryLeakTest . java file to remove obsolete memory leak tests from the project
updated the return statement in ServletTester . java to include a local host address when localhost is true to ensure that the URL is formatted correctly
added a condition to check if the PlotSquared API is used in the ServerListener and defined a new setting for MVdWPlaceholderAPI to
fix cluster size assertion in abstractpartitionassignmentscorrectnesstest
added a singleton holder class FFIProvider to manage FFI provider loading based on JNA configuration to improve flexibility in loading FFI provider
added a new test method ` testHierarchicalWFileList ` to the ` BatchProcessTest ` class to verify the functionality of hierarchical file list
added null checks for objectToSave and collectionName , and modified idProperty assignment logic in MongoTemplate . java , and added new test cases in
updated the logic for determining the type of the position in NodeClass . java to use NODE _ LIST instead of 0 for directInputCount and
added an ` accTradeValue ` field and its getter method in ` BithumbTicker ` , modified ` BithumbTradeServiceRaw
updated logging statements in RealtimeSegmentDataManager and AvroUtils for consistency and clarity to improve log readability and maintainability by standardizing
replaced maxParallelThreads with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to improve maintain
replace ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders in FixedByteMVMutableForwardIndex and FixedByteSVMutableForward
refactor multiple Dict - related classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during processing
camel - 16400 : camel - msv - fix test failure on slow machine
updated condition from ' = = currentCycle ' to ' > currentCycle ' in DelegationService . java to ensure that ' currentCycle '
updated the length of ` randomValueStringGenerator ` from 6 to 10 in ` JdbcExpiringCodeStore ` and related tests to accommod
added a check for unique constraints in StandardObjectChangeFilter to ensure correct matching of unique constraints based on the table context
updated MediaDetailFragment . java to improve handling of language codes and formatting to enhance code readability and maintainability while ensuring accurate parsing of language
log recoverable exception for arrayindexoutofboundsexception and classcastexception
added reference and key filters to the ListImagesCmd and ListImagesCmdImpl classes to enhance flexibility in listing images based on reference and key
( chore ) camel - jms : add bridgeerrorhandler support to the jms endpoint
added logic to handle cases with " # ifndef " and " # endif " lines in OpExclusionUtils . java to ensure proper
added return statements to the DatabaseCommand class to ensure that the method returns false when no operations are performed
added multiple Politician objects with names " p1 " , " p2 " , and " p3 " to the list to
[ zeppelin - 4892 ] fix npe in beanshellinterpreter # initfile
updated RestletComponent to conditionally set the port and formatted the URL based on its value to ensure that the URL is formatted correctly based on
removed unused imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline code and improve readability by
added a system property setting for maximum query length in QTestUtil . java and removed overridden configurations from SessionState . java to optimize query performance
changed access modifiers of userName and securityMgr , and refactored HttpConfiguration instantiation in WebServer and WebServer classes to improve encapsulation and
rename sink names from " writeHdfs " and " writeKafka " to " hdfsSink " across multiple files to improve clarity and
updated the condition for setting the " spark . app . name " configuration in HiveConf and HiveSparkClientFactory to ensure that the application
corrected the spelling of " whiteName " to " includedName " in ManagedClassFactory . java to improve code readability and maintain
simonstewart : fix a bug where the rest of a remote window can not restore the window .
refactor ` LocalCellProviderFactory ` and related classes to replace ` getEmbeddedCellsBuckOutBaseDir ( ) ` with ` getMain
removed assertion check for " entity expansions " message in TestXMLEntityExpansion . java to simplify error handling by eliminating
update table offset and length calculations to mask out leading zeros to ensure consistent data representation by preventing invalid offsets and lengths
added a custom customize method to the DirectMethodHandle class to ensure that the customized form is not null to prevent potential NullPointerExceptions
refactor buffer handling in LineChartRenderer to use a variable for number of floats instead of a fixed size to improve code readability and maintain
refactor flavors checking in AndroidBinaryDescription to use a loop for better readability and error handling to improve code clarity and maintainability
updated buffer assignment from offset to i in LwjglGL11 . java to ensure correct buffer generation for improved performance
added new classes ` Property ` and ` PropertySuper ` , and implemented a test for ` NoClassDefFoundError ` to ensure proper error
only remove the shutdown hook if it ' s enabled
updated the FilterChainProxy class to use FilterChjainProxy instead of a hardcoded String for the URL to simplify the code and improve
replaced Collections . sort with Arrays . sort and simplified return statements in PercentileAggregationFunction . java to improve code readability and maintainability
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified QueryTypeAnalyser to handle cases where the schema is
replaced instantiation of baseType with null and added new variables literalPrefix , literalSuffix , and localizedTypeName in MutableColumnDataType to simplify data handling
updated link references in multiple Java files to use ` @ link # ` instead of ` < a href = ` ` / a > ` to
replaced instances of ` ObjectEqualEvaluator ` and ` ObjectContainsEvaluator ` with ` ObjectNotEqualEvaluator ` and ` BooleanContainsEvaluator `
updated configuration paths from " osx " to " osx _ config " across multiple files to ensure consistency and clarity in naming conventions
added sound effect functionality to the AllAppsView class to enhance user experience by providing controlled sound effects
changed the exception type of the main method from Exception to IOException to indicate that the main method may throw an IOException instead of an exception
added granularity property to leftAxis in BarChartActivitySinus . java to enable granularity handling for left - axis plots
refactor version comparison logic in GdxSetup . java to use a dedicated method to improve code readability and maintainability by centralizing version
refactor ContextHandlerGetResourceTest to use MavenTestingUtils for test root and introduce OS - specific assumptions to improve test reliability
added close methods to Connection , JsonAsyncHttpPinotClientTransport , and PinotClientTransport classes to ensure proper resource management and prevent connection
refactor SocketRemoteTest , MockAppender , SocketServerFunctionalTest , and SocketServerFunctionalTest to use LinkedBlockingQueue for event
[ beam - 4142 ] improve error message when expect a resource be a directory
removed multiple static import statements for SpriteBatch constants in IsometricStaggeredTiledMapRenderer . java to streamline code by
removed duplicate call to unbindHandle in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes for improved readability to enhance maintainability and clarity of the codebase
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated NavbarButtonsViewController to utilize configuration for dark theme mode and adjusted button tint handling to improve UI responsiveness and
replaced the abort method with an exception throw in PolyBenchLauncher . java to improve error handling by throwing an exception instead of throwing an
refactor the handling of bootstrap method and name and type indices in ClassWriter . java to improve clarity and structure to enhance code readability and
added BlockFormattingContext parameter to several findBox and findElementBox methods to enhance rendering flexibility by allowing customization of block formatting context
added a method to retrieve standard error output from the launched process and modified error handling in WorkerProcess and WorkerShellStep to improve error reporting and
added null checks for the operator in CheckedListReplaceAll . java and improved null handling in Collections . java to enhance robustness by prevent
added a test for writing on the connect method in SslConnectionTest . java to ensure that the fillInterested ( ) method behaves correctly
added device configuration change listener functionality to DeviceFlag . java and changed the default value from private to protected in FeatureFlags . java to enhance device
added JUnit Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue gh - 1114
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve readability
added javascript execution for focusing the end date box in InstructorFeedbackEditPage . java to improve user experience by ensuring the end date box
refactor the synchronization logic for ownTradesObservable and userTradeObservable in KrakenStreamingTradeService . java to improve code readability
changed the print statement from ` System . err ` to ` System . out ` in ` ChangeableUrls . java ` to correct the output
added random access functionality to the SparseRowMatrix constructor and updated constructors to include a shallow copy option to enhance flexibility in row manipulation by allowing
bug 9444 : do n ' t send volume . delete usage event if the poolid be null
refactor file input stream handling to differentiate between local and remote configurations to improve flexibility in handling Hive plan files based on configuration settings
[ beam - 10686 ] fix udf test to use guava v26 _ 0 _ jre instead of guava v26
refactor memory call graph builder by adding a resetInternalState ( ) method and removing unnecessary registration of memory cct provider to improve code cl
fix npe in conferencechatmanager when there be no operationsetmultiuserchat .
added file validation in Save . java to ensure the update file is writable before proceeding to prevent illegal user action exceptions when the file is not
added folder synchronization functionality to the DrawerActivity and created a new FolderSyncActivity class to enhance user experience by allowing users to navigate to the
[ hotfix ] [ test ] use try - with - resources in sequentialchannelstatereaderimpltest
add ` ` % ' ' to the list of tokens in ` ` spanish tree normalize ' '
replaced the way point values are appended to offlinePointWriter in SimpleTextBKDWriter . java to improve clarity and efficiency in
added new ` LocaleRandomizer ` and ` LocaleRandomizerTest ` classes for locale randomization functionality to provide functionality for generating random locale values
added unit tests for " application / x - font - printer - metric " and " application / x - font - type1 " MIME types
added 10.0 and 9.0 versions to the list of supported versions in the Installer and AutoUpgrade classes to ensure compatibility with the
added a try - finally block around the ` AccessController . doPrivileged ` call in ` TCPTransport . java ` to ensure that the ` run0
added a zero - timeout parameter to the read condition in Http2AsyncParser . java to ensure that the read timeout is set to zero when
updated the default initial delay value from 120 to 600 in TimelineMetricConfiguration . java to increase the responsiveness of the watchers for
updated the primary key column name in the error message to use the previous name instead of the previous object to improve clarity and accuracy of error
added support for parsing date values in ThirdEyeJiraClient to enhance date handling capabilities in the Jira client
refactor priority generation logic to use a new priorityGenerator instance to improve code clarity and maintainability by centralizing priority generation logic
added a constant MAX _ SCALAR _ REPLACE _ CODE _ SIZE and modified scalarReplace condition to check if the entire class length is below
added DATE _ TAKEN to the projectionTest array and updated folderSortOrder initialization to include it to ensure that the data sort order reflects
updated drawImage calls in TexturePacker2 . java to adjust rectangle dimensions to ensure correct rendering of images with appropriate dimensions
added WebSocketUpgradeFilter import and updated context handling in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to improve WebSocket upgrade handling and
added shutdown calls to validateSignService and transactionsMsgHandler , and modified the nodePersistTaskTimer initialization in NodePersistService to ensure proper resource
added a new ` RawJsonRequestBodyAnnotationProcessor ` class and integrated it into the ` JaxrsSwaggerGeneratorContext ` and ` Echo `
added a new method ` newTarget ` to create a new ` Target ` instance with specified type and extension to facilitate the creation
updated BeanContainer to use ArrayList for list creation and added a new test class BeanContainerTests to improve performance and ensure correct behavior of list operations
hbase - 22424 fix the metric name for blockcounthitpercent and blockcachecounthitpercent ( # 22424 )
camel - 14284 : fixed cachedoutputstream . close ( ) to release file input stream when exchange complete .
added a method to set the device ID in TeltonikaProtocolDecoder to ensure the position contains the correct device information
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` for reading the first line of a file to improve compatibility
added null check for operator assignment in ` Attr . java ` and created a new test class ` FailOver15 . java ` to ensure proper
added a boolean flag ` enableAccountHandling ` to ` BaseActivity ` and modified ` mixinRegistry . onCreate ( savedInstanceState ) ` to
replaced the method of finding the maximum polygon by introducing a heuristically finding the main connected polygon component to improve code readability and
added a ` List < String > path ` parameter to the ` DrillViewTable ` constructor and updated the ` WorkspaceSchemaFactory ` to
added configuration options for the PooledByteBufAllocator in PooledByteBufAllocatorL . java to allow customizable pooling options based on
updated ObjectInputStream to return a clone of short arrays instead of double arrays and added a new CloneArray class to ensure correct handling of short arrays and
added LLAP _ IO _ THREADPOOL _ SIZE configuration to configure the number of threads to use for low - level IO thread pool to
added support for SSL debugging and SSL logger in SecurityServicesFeature to ensure compatibility with Java versions 8 and 11
updated latLonGrid and TestLatLonGrid to improve boundary checks and added a new test forGrowingPolygon in TestLatLonGrid to
danielwagnerhall : add ` ` invisibilityofelementwithtext ' ' and ` ` refreshed ' ' method
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and adjusted related logic accordingly to control the behavior of the file replacement
added a test method for retrieving the enclosing object of a class in ReflectorTest . java to ensure the correctness of the enclosing object in
updated the configuration option from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources "
updated the ` updateHub ` and ` updateHubForRollback ` methods to include a unique message for changeset IDs to enhance user feedback by providing
added properties field and getter / setter methods to the Link class , and implemented a test for overriding properties in QuickLinksConfigurationModule to ensure that
added a ` toString ` method to ` YamlConfigFileDTO ` and overridden it in ` InitialConfig ` and ` YamlConfigFileDTO ` classes to
updated generic type parameters for ` SimpleForwardingServerCall ` and ` SimpleForwardingClientCall ` in ` AwaitableServerClientCallConfiguration .
updated ` forName ` and ` forNameHelper ` methods to include caller class context and added ` @ CallerSensitiveAdapter ` annotations to enhance class loading
replaced the deprecated ` isEmptyOrNullString ( ) ` method with ` IsEmptyString . emptyOrNullString ( ) ` and updated the authentication token
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve code clarity and maintainability by
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated imports and modified test methods in TimeStepdefs . java to use Calendar instead of HumanTimeConverter to improve compatibility with Cucumber
added a new pattern for " spark _ isolated " and " spark _ recessive " in the ModBanners . java file to enhance
updated RestInvocationHandler to accept a URL instead of an exchange specification in multiple services to enhance flexibility by allowing the proxy to access the correct
removed redundant print statements in RecordGenerator . java to streamline output for better readability and maintainability
( chore ) camel - kafka : remove unused autocommitenable check
removed the releaseLock call in Liquibase . java and added a boolean flag in StandardLockService . java to streamline lock management
updated @ SuppressWarnings annotations in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to include raw types to improve type safety and suppress warnings related to
added synchronized keyword to several methods in Database and SessionRemote classes to ensure thread safety during concurrent access to pageStore operations
refactor property resolution logic in SpringBootAutoConfigurationMojo by introducing a new ResolvedProperty class and modifying the isNestedProperty method to
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to ensure
camel - 16400 : camel - core - optimize unit test for camel - core - dump
replace UUID generation with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to ensure consistency in accessing the
added synchronization to date and number formatting methods in DefaultJobParametersConverter . java to ensure thread safety during date and number formatting operations
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
update heightmap ' s height scale from 256 to heightScale to improve flexibility by allowing dynamic adjustment of height scale
updated equality checks in SecurityConfig and SecurityConfigTests to use ` assertNotSame ` instead of ` assertEquals ` to improve clarity and
change default value of dumpPartitionId from true to false to ensure that dumpPartitionId defaults to a default value of false when settings are not
added test cases for creating and verifying UTXO outputs in UTXOSetTest . java to ensure proper functionality and verification of transaction
[ java ] check for unused variable name before java 9 it ' s ok
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test for new job parameters overriding previous restart parameters in JsrJobOperator to ensure correct behavior of job restart properties in the Jsr
added a boolean field ` disallowBatchOnCascade ` and its getter method in ` DatabasePlatform . java ` to provide a mechanism for dis
removed duplicate assignment of principals in JaasAuthenticationHandler . java to streamline code by eliminating redundancy
refactor core closing to use a separate executor service for improved resource management to enhance performance and reliability when shutting down a Solr core
added a null check and visibility setting for mActionsView in RecentsView . java to ensure mActionsView is only set when full
refactor parameters handling in RunIdIncrementer . java to use a separate JobParameters instance to improve code clarity and reduce potential null pointer
refactor BasicEntity and TestUtil classes for improved readability to enhance maintainability and clarity of the codebase
added assertions to verify the expected number of matched devices in the ` getShowDevicesPlan ` method to ensure correct functionality of device matching in the
( chore ) camel - metric : log common metric collection exception
added a check for ` max ` before calculating ` mSumChange ` in ` EigenvectorCentrality . java ` and created
refactor Registry - related classes to use a dynamic port variable instead of a hardcoded value to improve flexibility and maintainability of the code
refactor geometry data handling in GeometryGenerator to use databaseSession for type , normals , and colors to improve code clarity and maintainability by
change amplifier value of BlockEntityBeacon from 2 to 0 to ensure correct Amplifier behavior for Beacon interactions
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable health check if not enable by default
changed the type of the ` groups ` list from ` Class ` to ` Class < ? > ` and added validation checks for inherited groups to
added key headful annotation and timeout annotation to bug8057791 . java to improve code clarity and ensure proper handling of key interactions
updated the ScheduledExecutorService to use a lambda expression for creating daemon threads to ensure proper thread management and prevent application from exiting via main method completion
remove the regex from the version string parsing in ItemLexicon . java to simplify the code and improve readability
added a call to ReflectionCheckLinker . checkReflectionAccess in JavaAdapterFactory . java to enhance security by ensuring access control is granted
corrected the spelling of " testJmsRouteWithObjectMessage " to " xtestJmsRouteWithObjectMessage " and added " lazy
updated initIOContext method in CombineHiveRecordReader and HiveContextAwareRecordReader to accept a RecordReader parameter to enhance flexibility in
deleted ClassLoaderHolder and LoaderManager classes , and refactored deployment logic in VerticleManager to streamline code by eliminating unused classes
added a new method ` configurationChanged ` and modified file checks in ` FileStore ` , ` JavaLanguageServer ` , and ` ScanClassPath
added try - catch blocks to register and unregister session callbacks in PackageInstallerCompatVL . java to handle potential exceptions during registration and unregistration
updated index files from " src / test / org / apache / lucene / index / index . cfs " and " index . noc
refactor AkkaRpcServiceUtils to use a BiFunction for creating AkkaRpcService instances to improve flexibility in creating instances
added a retry mechanism for setting the maximum number of attempts in TestExportSnapshot . java to optimize resource usage by reducing the number of attempts
pdfbox - 4892 : disable symbolic encoding for fontembedder , a suggest by valerybokov
added a new test class ` SslConnectionTest ` to validate SSL connection behavior to ensure that the SSL connection is properly closed before fill
added validation for address family types in InetAddress and NetworkInterface classes to ensure only valid IPv4 and IPv6 addresses are processed to prevent runtime exceptions
added a test method for serialization of date collections in DefaultTypeAdaptersTest . java to ensure proper handling of date objects in different locales and TimeZone
refactor Message class to improve code structure to enhance maintainability and readability of the code
nifi - 1343 added debug log for generated SQL and modified conditional check for firstUpdateKey in PutDatabaseRecord . java to improve
updated loop condition in TableOutput . java to correct the calculation of the maximum width to ensure correct alignment of the loop based on the running width
pdfbox - 4892 : avoid npe , a suggest by valerybokov
change priority of vaf _ format _ string _ EXTRA _ arguments _ passed bug from NORMAL _ PRIORITY to HIGH _ PRIORITY in FormatStringChecker
[ java ] localvariablecouldbefinal - add option to ignore non - final loop variable
added PDF version and full compression settings in PDFExporter and updated test sample paths in PDFExporterTest to ensure compatibility with the latest PDF format and
added unit tests for ` LdapUserDetailsMapper ` to ensure correct mapping of role attributes to authority in LDAP user details
add ldap . read . timeout configuration to make it configurable
refactor TestDescription . java files for consistency and clarity to improve maintainability and readability of the test code
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in variable naming
added a condition to check if the state handler is invalidated in the gesture state check to ensure that the gesture handling logic only proceeds when the
updated WORKSPACE _ ROTATION constant and adjusted max distance calculations for folder creation to improve UI responsiveness and clarity in folder creation
updated imports and modified property handling in OciConfigConfigSource . java to utilize ConfigProviderResolver and improve configuration handling to enhance code cl
refactor Testjsig class to improve code structure to enhance maintainability and readability of the code
fix mana not take into account the mana count from the item in the mana item list . close # 1188
regenerate client with updated copyright year ( # 4382 )
removed the serialVersionUID field from P11TlsPrfGenerator . java to eliminate unnecessary serialization warning and improve code clarity
refactor ts file validation logic in DataRegion . java to improve clarity and handling of empty files to enhance error handling and ensure proper deletion
added new files Switch21 . java and Switch19 . java for switch pattern matching and guard pattern matching to provide a structured way to handle different
updated error message from " actual argument cannot be converted to " test . MyTest . ComparableType " to " test . MyTest . Raw
added XML standalone mode to the StreamHelper and created a new TestStreamHelper class to enhance XML processing capabilities by allowing standalone mode in the output
updated capacity validation and added equality checks in Int2ObjectCache . java to improve error handling and ensure correct array size constraints
removed sort method from securityFilterChains and webSecurityCustomizers in WebSecurityConfiguration . java and added unit tests in WebSecurityConfigurationTests .
removed TimeInForce . GTC from the order parameters in BinanceTradeService . java to simplify the code by eliminating unnecessary time
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and add validation for min and max values to enhance functionality and ensure that min and
updated KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure consistent formatting
camel - 16400 : camel - amq - provide documentation and parameter json schema for the jms component .
added error handling for bound retrieval in SourceUtils and created a new TestGetBound class to improve robustness by handling potential NoSuchFieldError and
refactor LeafFilterFactory to use a helper method for obtaining FilterPredicateLeafBuilder based on Parquet type to improve code readability and
refactor artifact name handling in BatchPropertyBeanPostProcessor and add setup and teardown methods in JobContextFactoryBeanTests and StepContextFactoryBeanTests to
added a loop to read certificates from the InputStream and log its serial number in HttpsSegmentFetcher . java to improve certificate handling and provide better
updated the configuration handling to return a default value instead of a boolean value and added a new DnsFallback class for testing to improve robustness against
ww - 4071 add exception cause to the error message when tag can not be write
change the data type of ` success ` and ` addressTag ` from boolean to string ` url ` in ` DepositAddress ` class
replace the ` Privilege ` implementation with a lambda expression that frees the LUID to ensure proper resource management and prevent memory leaks
removed " address " scope from the builder in CommonOAuth2Provider . java and its corresponding test in CommonOAuth2ProviderTests . java to
replaced the direct submit operation with a new ` Start ` class for managing the started latch to improve code clarity and facilitate
added BIG _ DECIMAL _ 182 _ 04 constant and initialized hue and saturation variables in WLedHandler to ensure proper representation of primary color values
replaced the implementation of ` isValidCaller ` to use a ` Set < String > ` for validation to improve code readability and maintainability
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to facilitate the handling of JSR instance
added transaction management to the SubscriptionActivatingSubscriber constructor and modified transaction handling in the BaseSubscriptionInterceptor and SubscriptionActivatingSubscriber classes to enhance subscription
updated SQL statement preparation and execution logic in DBMSProcessor . java to improve handling of metadata updates and ensure proper error logging
added elevation dimension handling in ContactItemInflater . java to ensure compatibility with devices running Lollipop and above
rename the variable ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in naming conventions
replaced manual file reading and writing with privileged actions in SandboxFileManager . java to enhance security by ensuring privileged actions are handled
added support for handling binary operations in Groovy and related classes to enhance the formatting of binary expressions and improve code clarity
updated warning log message to include the exception class name to improve clarity of warning messages for better debugging
updated character reading logic in RecordInputStream and UnicodeString , and added a test for Unicode string writing in TestUnicodeWorkbook to ensure correct handling of
added a test for downloading a file with no orway characters in the file name to ensure the download functionality correctly handles file names containing invalid characters
replaced RuntimeException with CancellationException and added cancellation checks in AsyncResource . java and FingerprintScannerSample . java to improve error handling for cancelled
added a null check for statistics before processing the cache to avoid potential NullPointerExceptions when statistics is null
added a new test method ` removesObjectFromExplicitCollection ` to ` MongoTemplateTests ` and modified ` MongoTemplate ` and ` factory `
pdfbox - 4071 : update copyright year , a suggest by valerybokov
corrected the newline character in the string formatting in the Coder class to ensure consistent line endings across different platforms
added a new boolean field ` mIsClearAllButtonFullyRevealed ` and modified scroll logic in ` RecentsView ` and
refactor HiveIcebergMetaHook and related classes to utilize COMMON _ HMS _ PROPERTIES and streamline table parameter handling to
added a method to check if an address is already in use in multiple classes to improve code readability and maintainability by centralizing error handling
added the JVM property " test . class . path " to the argList in TestNestmateAttr . java to specify the path
replaced the static Logger instance with a direct reference to the verbose _ schema variable to simplify code and improve readability by using a more d
removed unused imports and added multiple @ Override annotations in multiple classes to improve code clarity and ensure proper method overriding
# 113 - enh : add support for nested use savepoint in subtransaction ( # 113 )
replaced a protected fetchSize value with a ThreadLocal for fetchSize management in QueryProcessExecutor and updated related classes to improve thread safety and
replaced shared network idle strategy with noop idle strategy in EmbeddedPingPong . java to simplify the idle strategy setup for better performance
refactor the handling of blocking calls by introducing a new method ` handleBlockingCall ` to improve code readability and maintainability by encaps
added support for setting the HDP _ VERSION system property in SliderAppsViewControllerImpl . java to enable dynamic configuration of the HDP
replaced ` loaderClass ` with ` loader ` and added ` close ` methods in ` JavacProcessingEnvironment . java ` to improve
added DeepCloner functionality and modified parameters in ParameterizedRobolectricTestRunner and RobolectricTestRunner to utilize it to
added binding for JETTY _ SHOW _ STACKTRACE annotated with WebServer . JETTY _ SHOW _ STACKTRACE to false to disable
added a type check for the object type in NativeObject . java to ensure proper handling of object types in the code
replaced multiple instances of ` OopField ` with a new ` WellKnownKlassField ` in ` SystemDictionary . java `
added serialization support for RSAPublicKey and ECPublicKey types in JwkKeyListView . java and updated JsonWebKeyEndpoint . java
[ gr - 36407 ] fix the memory leak in nativebootimage .
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for unsupported MBean features
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies by eliminating unnecessary dependencies
added ` getOwnerAddress ( ) ` method to multiple actuator classes and implemented it in ` CreateAccountActuator ` and ` TransferActuator
http : / / issues . apache . org / jira / browse / amq - 4898 - add a simple main ( )
fix ( core ) : handle double . min / max in zrangebyscore and zcount
added logic to set empty indices for nodes and edges in ProtobufAnnotationSerializer to ensure proper handling of empty indices for nodes and edges based on their
[ java ] remove a correlationid from the asynccommandid set only when it exist .
added saveConflict calls in FileDataStorageManager , FileDownloader , and FileUploader classes to handle file conflicts to ensure proper handling of file
updated generic types in ExecutionContext and related classes to use generics to enhance type safety and eliminate unchecked warnings in the code
replaced usage of ` StrUtils . splitFileNames ` with ` splitFileNames ` in multiple filter factory classes to streamline imports and
added support for
added a handler parameter to the MockMethodInterceptor instantiation and added a serialVersionUID to ensure proper serialization of the handler and prevent potential deprecation warnings
updated startTime and minAge calculations in FileChangedExclusiveReadLockStrategy . java to use current time instead of a new Date object to improve accuracy
[ hotfix ] [ table - planner - blink ] wrap classloader in executioncontext .
added buffer change handling in TerminalView and TerminalTextViewOverlay to ensure proper scrolling behavior when buffer changes
modified the processConfigFile method to improve clarity and ensure the pid namespace is correctly formatted to enhance code readability and ensure proper handling of service
refactor freeze logic in OperationActions and OperationRegistry for improved clarity and functionality to enhance code maintainability and ensure compatibility with TVM
added an insecure configuration option and corresponding getter and setter in TlsConfig . java , and updated TlsUtils . java to utilize this
refactor JavadocTool to use a consistent variable path for the StandardLocation variable to improve code readability and maintainability by reducing redundancy
updated the loop to iterate over edgeColumns instead of nodeColumns and added a new EdgeColumnsGDF for ID handling to improve code clarity
added cascade option to @ OneToOne annotation in DefaultUserInfo . java to ensure all related entities are persisted in the database
replaced ` hashCode ( ) ` and ` equals ( ) ` methods with ` equals ( Object o ) ` and added ` Arrays . equals
updated character encoding for the " X - ISO " header and response body in AsyncProvidersBasicTest . java to ensure proper handling of special characters
[ hotfix ] [ rocksdb ] remove unused method iskeyserializertypevariablesized
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and ` JavaSecurityProtectionDomainAccess ` classes and updated ` SubjectDomainCombin
add null check for recipe in RecipeHandlerBrewery and RecipeHandlerElvenTrade , and adjust formatting in CachedFloatingFlow
refactor parsing logic in Parser . java to improve readability and maintainability to enhance code clarity and ensure proper parsing behavior
added ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` and ` UploadMediaDetailsContract ` classes to handle ` UnknownHostException ` to
added a new test class ` Issue596 ` and modified ` HttpHandlerImpl ` to check for unsupported media types before returning a 404 error
updated bitwise operation in NodeBitMap . java to use unsigned long values to ensure correct handling of integer values during bitwise operations
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the code
refactor ConsoleWrapper to use a configurable useStdin parameter instead of gitBashConfigValue to improve flexibility in handling system console input
replaced mock implementation of AccountManagerCallback with TestAccountManagerCallback and modified assertions in ShadowAccountManagerTest . java to improve test reliability
replaced the initialization of enclosingType with a direct call to wrapped . getEnclosingType ( ) to simplify the type lookup process and improve code
renamed method ` getProperty0 ` and ` getProperty1 ` to ` property0 ` , ` entries ` , and ` concatSeparator ` ,
hbase - 11351 addendum remove timeout from putallcallable # set ( ) ( # 11351 )
[ issue # 1560 ] fix npe in mqclientinstance when consumer be empty ( # 1561 )
[ java ] do n ' t generate source identity if there be no source .
added a new file TopTabAction . java that implements a toolbar presenter to display a " lalal " tab in the desktop environment
camel - 14263 : camel - dynamicrouter - allow to use reactiveexecutor for all match mode . thanks to david
updated imports and added JUnit annotations in AggregateItemReaderTests . java to improve test structure and ensure proper setup of test methods
added generic parameter < T > to the Procedure constructor in AbstractObjectValueTypeMap . java to enhance type safety and improve code clarity
added functionality to retrieve Wikidata edits for a user in AchievementsActivity and updated related URLs in NetworkingModule to enhance
added a validation check for the length parameter in OfflineSorter . java to ensure that the length is within valid range to prevent runtime errors
replaced integer . max _ value with long . min _ value and added an absoluteValueAccumulator to accumulate bug reports to ensure accurate reporting of
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
updated error messages in ProvisionClusterRequest to include acceptable CredentialStoreType values to improve clarity of error reporting for invalid credential types
updated the random number generation in TestVectorUtil to use a fixed range for v [ 0 ] and v [ 1 ] to ensure that the
changed the return type of the compareBy method from int to long and refactored time comparison logic to simplify the comparison logic and improve code
added SSL property retrieval and modified send buffer size handling in TestUtil . java and PGPropertyTest . java to enable SSL configuration and ensure proper
danielwagnerhall : enable safebrowsing for window and mac platform
added null checks before cloning oldConfig in BaseMotorMount . java and RecoveryDevice . java to avoid potential NullPointerExceptions during configuration setting
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding settings based on renderer
updated columns retrieval logic and added empty return logic in DataTable . java , and added a new test case in TableDifferTest . java to
added a new static string ` CustomIgnoreTag ` and modified the section ' s native code in ` RobustJavaMethodParser . java `
camel - 14263 : camel - jdbc - optimisticlocking - improve exception handling for stale record version .
fix beandefinitioninjectprocessor to not require reflection
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added padding adjustments to improve UI responsiveness and ensure proper
deleted the ClusterNodeInfo . java file to the functionality was no longer needed in the project
modified the return statement in ShieldedTransferActuator . java to correct the logic for returning true
added debug print statements for standard and legacy ciphersuites in ServerHandshaker . java to improve visibility into ciphersuite selection during the handshake
refactor template selection logic in ChooseRichDocumentsTemplateDialogFragment and update template handling in ChooseTemplateDialogFragment to improve code clarity and ensure
added functionality to duplicate NodeDraftImpl instances with labels in ImportContainerImpl . java and updated related parameters in ImportContainerParameters . java to enhance
added a new file R2303044ListSelection . java that implements a list selection testing functionality to demonstrate the use of
[ java ] do n ' t try to register a publication with the same correlation id in the driver .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method to verify the behavior of compound properties in StepScopePlaceholderIntegrationTests to ensure that the compound property behaves as expected
hive - 11307 : fix rowcount computation in statsrulesprocfactory ( jesus camacho rodriguez
added logic to handle path URLs and query parameters in SpringBootDocBuildTemplate . java and updated method calls in DocUtil . java to improve
changed logger initialization to be static final and modified action handling in multiple classes to ensure immutability of logger and improve code clarity
updated ` DistBuildSlaveExecutor ` to use ` CachingBuildEngineDelegate ` instead of ` DistBuildEngineDelegate ` and added conditional logic
improve error message when unable to parse json
added a DEBUG condition to the logging statement in WidgetsModel . java to ensure logging only occurs when debug is enabled for debugging purposes
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the code
lucene - 1748 : fix discount overlap calculation in dfrsimilarity
refactor ` send ` method calls in ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests ` to use ` Mail
added new exit and quit methods to Global . java and removed the duplicate quit method from ScriptingFunctions . java to streamline the code by
removed unnecessary variable declarations and context usage in LoanBrokerSharkDetectorDemo . java to improve code readability and maintainability by reducing
renamed methods and variables from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method
vmware context : apply relevant cookie if no cookie be find in the request context
corrected the spelling of " ROLE _ TELLER " and " ROLE _ SUPERVISOR " in the test assertions to ensure
update the method calls to include an additional parameter for r and s in ECKey . java to ensure proper conversion of big integer values to bytes
updated the property key for disabledModList from " fml . disabledMods " to " fml . modStates " to ensure the
refactor account selection and dialog handling in ReceiveExternalFilesActivity to use a dedicated method to improve code readability and maintainability by centralizing
updated IOException message to include host IP and port when attempting to get back the stream to improve error reporting for better debugging
added a check for an empty result in the ValidatorContractController and a corresponding test in ValidatorContractControllerTest to ensure that an exception is thrown
updated TexturePackerFileProcessor to check for null root before reading JSON fields to improve robustness by avoiding potential NullPointerExceptions during file reading
removed null check for datasource and datasourceJNDI in PooledConnection . java to simplify code by eliminating unnecessary null checks
updated TARGET _ MB and WINDOW constants and modified the count calculation in TestRefprocSanity . java to optimize memory usage and improve performance
added null checks for ` currentConsole ` before calling ` write ` and ` write ( byte [ ] , int , boolean , IOException ) `
set credential refresh delay to 100ms in kinesis config
refactor AlertDialog creation to use a new method ` showInfoAlert ` for better clarity to improve code readability and maintainability by
renamed the variable ` priv ` , ` prot ` , ` publ ` , and ` pack ` to ` pack ` and added a
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUse
replaced specific utility imports with a wildcard import and added a check for non - dependency dependencies to simplify import statements and ensure dependencies are only added
added a HashSet to manage ZipFileInputStream objects and modified the releaseInflater method to ensure proper resource management and prevent potential memory leaks
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " across multiple files to ensure consistency and accuracy
added methods to run active and idle based on key ranges in SequenceGeneratorSource . java to ensure that the context is marked as temporarily idle when
[ hotfix ] fix typo in blobserver and blobservergettest
replaced multiple @ Override annotations with a new method ` getAnnotations ` in ` AnnotatedDelegate ` and ` SyntheticAnnotated ` to streamline annotation
added support for " ppc64 " and " ppc64le " architectures in Bits . java and ByteArrayAccess . java to
added a link to the RuntimeException message in RoboMonitoringInstrumentation . java to clarify the issue related to activity resolution issues
updated waitWithDeadline calls to use Long . MAX _ VALUE instead of MINUTES for timeout values to ensure proper timeout handling and prevent potential overflow
replaced instances of ` OffsetDateTime . now ( ) ` with ` Instant . now ( ) ` and ` Date . from ( ) `
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a Toast message to inform users when the YouTube Player doesn ' t work on Lollipop yet to improve user experience by
added error handling for unterminated SQL statements in the Parser and StatementTest classes to improve robustness by providing clearer error messages for parsing errors
added a null check for mVibrator and its hasVibrator method in the vibration condition to ensure that the v
updated border attribute and modified column background color handling in DotRenderer . java to improve visual appearance and consistency of column naming conventions
added methods to check if encoded configuration variables are present in HiveConf . java and updated output formatting in SetProcessor . java to improve configuration handling
pdfbox - 4892 : ignore stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve certificate handling logic to enhance code readability and maintainability
validate uri in wavefrontconfig . fix # 3903 ( # 3904 )
removed the ` BitmapLruCache ` from ` TimeLineCursorAdapter ` and added ` loadImage ` method in ` NetworkedCacheable
removed the ` View ` parameter from the ` ofFloat ` method calls and simplified the instantiation of ` LauncherAnimUtils ` to simplify the
added a new static string for the controllers version in DependencyBank . java and updated references in DependencyBank . java to reflect the latest controllers version
refactor LaunchedURLClassLoader to improve code structure to enhance maintainability and readability of the code
added imports for SQL ResultSet , ResultSetMetaData , and JdbcUtils , and modified query detail handling in DataSourceHealthIndicator . java to enhance data access
[ ds - 3952 ] add no - cache header to layout tag to avoid caching .
updated warnMsg format to use Locale . ENGLISH for consistency to ensure consistent string formatting across different locales
refactor SolrQueryParser constructor to accept an additional Analyzer parameter to enhance flexibility by allowing custom query analyzer configuration
updated copyright year from copyright to copyright in multiple Java files to ensure compliance with the latest copyright requirements and maintainability of the code
removed unnecessary line breaks in MainTest . java to improve code clarity and maintainability
refactor TypeContributions class to improve code structure to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to return a default size when the source is a VoidColumnVector to ensure proper handling
updated variable name from templateName to req . getName ( ) in StatementGenerator . java to improve clarity by using the correct variable name from the
removed the isTypeMatch method and simplified configuration addition in AbstractConfig . java to simplify the configuration handling logic for better readability and maintainability
[ java ] add offer method to sessiondecorator to allow to specify timestamp and correlation id .
renamed methods ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll `
add a new annotation ` NoBootstrap ` and update ` BootstrapInserter ` to check for missing bootstrap annotations to improve code clarity and
hbase - 25836 make tabledescriptorbuilder . getmaxfilesize and tabledescriptorbuilder . getflushsize default to long . parselong
replaced the assignment of ` maxCommits ` with a variable ` requestedCommits ` and updated the calculation of ` commitList . fillTo `
replaced ` throws InterruptedException ` with ` InvocationTargetException ` in the ` main ` method and updated method signatures to include ` InvocationTargetException ` to improve method
added a static final constant for the BUILD _ ID and refactored caching logic in CachingBuildEngine to improve code readability and maintain
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to clean up the code and improve readability
removed duplicate calls to ` markAsDone ( future , channel ) ` in ` HttpProtocol . java ` to streamline code by elimin
added import for TezConfiguration and initialized default configuration in TezConfigurationFactory to utilize TezConfiguration for configuration management in the Tez
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
reformatted conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a forget method to clear recent sounds and modified the stop logic to handle null values to improve robustness by preventing potential NullPointerExceptions
added handling for discontinuity reporting in SimpleBasePlayer to ensure proper handling of position discontinuity events during playback operations
added decimal formatting options for number tick units in NumberAxis . java to improve precision of tick representation in the number axis
refactor TargetGraphAndBuildTargets to use ` TargetGraphAndBuildTargets . of ` instead of ` TargetGraphAndBuildTargets . builder
removed unused IndexFileNameFilter class and updated conditions in IndexFileDeleter , IndexWriter , and SegmentInfo classes to streamline code and improve
add fullboundingboxladders property and modify ladder check logic in ForgeDummyContainer and ForgeHooks classes to allow
added compressionLevel parameter to ApkBuilder and related classes to allow customizable compression levels for improved data handling
added a test method to verify static field inclusion in the MirrorTest class to ensure that the stubbed class correctly includes static fields in the
added support for handling BYTES data type in MetricFieldSpec and related classes to enhance data processing capabilities for byte data types in the MetricFieldSpec
updated string construction and error message formatting in multiple test files to improve readability and maintain consistency in error reporting
replaced the use of ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java `
added CacheManager integration and a test for updating the post cache in SpringDataJPAJoinFetchPaginationTest . java and updated ForumService
update filename and manager class names based on locale in PronunciationModel and MaryProperties classes to ensure correct file naming based on locale
added null post body handling in SimpleHttp and updated test cases in TestHttpPlugin to ensure proper handling of empty POST requests and improve test coverage
added a dispatcher to the ClientSideSlb class and updated its usage in ClientSideSlbTest to enable dynamic shutdown of the executor service
modified texture positioning logic in TextureRegion . java based on flipY flag to ensure correct rendering behavior based on texture orientation
throw invalidconfigurationexception instead of hazelcastexception for unknown property
added a null check for the context path in MetricsPublisher . java to ensure a valid context path is set to " NA " to avoid potential
[ drools - 3640 ] fix nullpointerexception when define class in kie - container ( # 3641 )
added a new field B _ TREE _ MAP _ ROOT _ HEADER and its corresponding validation in BTreeMap . java to ensure proper serialization
added precompiled header handling and validation in the AbstractCxxSourceRuleFactory class to ensure proper handling of precompiled headers based on C++
added security context management using AccWeakReference for improved security handling to enhance security by ensuring privileged actions are executed on privileged actions
changed access modifiers of methods and imports in ObjectMap and ObjectSet classes , and modified the remove method in OrderedMap and OrderedSet classes to
changed isDirect assignment from true to false in VertexBufferObject . java to ensure correct initialization of the isDirect variable
removed redundant return statement from audioEffectHelpTextsMap to streamline code by eliminating unnecessary lines
modified the return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from void to Vector2 to allow
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added a null check for the context before removing the close hook to avoid potential NullPointerExceptions when context is null
updated border spacing logic in CellLayout and DeviceProfile for folder grid rendering to improve layout flexibility for folder grids and ensure consistent border spacing
refactor valueNumeric and defaultValueNumeric initialization to use a new ValueNumeric class to improve code readability and maintainability by encapsulating numeric parsing
added a check for deferred authentication in the login or error page validation to ensure proper handling of deferred authentication scenarios
updated command - line argument checks from " -- module - startd - ini = " to " -- add - to - startd " to
added a new private variable ` HIVE _ DEFAULT _ PARTITION _ VALUE ` and modified the logic for adding dynamic partition values to ensure default
[ hotfix ] [ runtime ] add nullability annotation to operatorfactory in streamnode
updated the return statement in DefaultArtifact . java to include the classifier check to ensure that the conflict ID is formatted correctly based on the presence of
camel - 17284 : fix race condition in kafka consumer rebalance . thanks to benjamin for the patch .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to provide clearer feedback on missing dependencies and provide clearer error
updated configuration key from GMAIL _ NOTIFICATIONS _ ENABLED to ENABLE _ GMAIL _ NOTIFICATIONS in JabberAccountRegistration
doc : [ secp256k1 ] clarified the purpose of the field secp256k1 in the cryptokey class (
updated expected message count in LumberjackMultiThreadTest to use a dynamic concurrency level based on available processors to improve test reliability by
added a condition to check if the player is not dead in GlowPlayer . java and modified player movement logic in PlayerUpdateHandler . java
refactor Exchange class to improve code structure to enhance maintainability and readability of the code
api : fix updateuser api / secretkey parameter typo
refactor MfaProvider , IdleTimer , JdbcMfaProviderProvisioning , and SamlServiceProviderConfiguratorTest to use if statements instead of switch
refactor AbstractMetaDataExportMojo to improve code structure to enhance maintainability and readability of the metadata export functionality
added SQL integrity constraint violation handling in Hive . java to ensure that dropping a table is not allowed by materialized views before proceeding
changed the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in property naming
added a new class RoboExecutorService with a deprecated class to indicate that the class should no longer be used in favor of an alternative implementation
added conditional checks for root groups in GroupTreeView . java to ensure proper handling of subgroups when the group is a root group
renamed method ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and updated conditions for path validation to improve clarity
updated TestDynamicNumberOfGCThreads . java to improve process builder creation and argument verification to ensure correct behavior of dynamic number of garbage collection
changed return types and variables from ImmutableFlavor to Flavor in CxxPlatforms . java and KnownBuildRuleTypes . java to improve
updated SQL creation logic in CreateTable and CreateTableDeParser to handle table options more effectively to improve flexibility in SQL command generation by allowing
added alpha transparency to the chat background in ChatViewerFragment to enhance the visual appearance of the chat background
test : migrate ctiteratortest from junit 5 to junit 5 ( # 2398 )
added token . clear ( ) and result . clear ( ) methods to CharTokenizer , KeywordTokenizer , TokenStream , and StandardTokenizer classes to
add a test to dont crash on a block statement in the ast initializer
added checks for missing StateMachineConfigurerAdapter and configurers in StateMachineConfiguration and StateMachineFactoryConfiguration classes to ensure that state machine
danielwagnerhall : do n ' t use ` ` link = ' ' locator in selenium test suite
add support for floating - point floating - point conversion in StringConverter to ensure proper formatting of floating - point values across different locales
simplified the retrieval of the current scope in AggregateLifecycle . java to improve code readability and maintainability by reducing redundancy
updated the touchable insets from CONTENT to REGION in TaskbarDragLayerController . java to align the handling of touchable regions with the
removed redundant check for ' ~ ' in FencedCodeBlockParser to simplify the code by eliminating unnecessary logic
added support for a socket timeout property in the ConnectionFactoryImpl and BaseDataSource classes to enable configurable socket timeout settings for improved connection reliability
added a sleep delay of 500 milliseconds in ElementAttributeTest . java to ensure proper handling of interrupted exceptions during execution
added UTF - 8 encoding to the InputStreamReader in HttpUtils . java to ensure proper handling of character encoding in input streams
refactor List class to improve code structure to enhance maintainability and readability of the code
added constructors to AsyncFileImpl for URI and Path parameters , and created a new AsyncFileImplTest class for testing error handling to improve file
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to enable API status updates for execution context management
nuage vsp : fix npe in listvspdomaintemplatescommand if nuage vsp device be not configure on physical network (
replaced the method ` retryUploads ` with ` retryFailedUploads ` in ` FileUploader . java ` and added a case for retrying
updated class file version from Java 8 to Java 9 in ConstantPoolTagTests . java to ensure compatibility with the latest Java 9 features
papplet . compile ( sketch ) : improve error / warning handling
added a method ` removeAllHeaders ( ) ` to the ` AsyncHttpClient ` class to provide a way to remove all headers from the client '
replace Vector with ArrayList for storing input and output filenames to improve performance and readability of the code
updated the default grid column value from 4.0 f to 3f to improve the visual representation of the grid size
added a condition to check if ` forViewCreation ` is false when accessing ` getQB ( ) . hasTableDefined ( ) ` to ensure
updated regex pattern in TestHS2HttpServer . java to use regular expressions instead of regular expressions to improve readability and maintainability of regex
added error handling for object conversion in GraphPrinter . java to improve robustness by catching potential exceptions during object conversion
danielwagnerhall : add a test to verify that we can access a page with an insecure ssl certificate
updated byteOffset calculation in ByteBlockPool . java and added a test for too many allocations in TestByteBlockPool . java to ensure correct
updated string formatting to use Locale . ENGLISH for consistency to ensure consistent behavior across different locales in the string representation
catch all thrown exceptions in TcpTransport by setting stoppedLatch to count down and notifying listeners when an unexpected error occurs to improve error handling and
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress serialization warnings for better code clarity
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from ` OcamlDebug
add ` ` save changes ' ' and ` ` discard changes ' ' to the ` ` return to the main window ' ' dialog
added response type validation and access control checks in OAuth20DeviceCodeResponseTypeRequestValidator and updated error logging in OAuth20AccessTokenEndpointController to
added a call to chk ( index , 1 ) in DrillBuf . java to ensure proper validation of the buffer index during processing
updated TableMapReduceUtil to include an input format class parameter for table mapper initialization to enhance flexibility in handling different input formats during job initialization
removed duplicate calls to ` append ( jrubyClasspath , testClasspathElements ) ` in ` AbstractJRubyMojo . java ` to
sulong : llvmpolygloteval should throw an exception if access to internal language be deny .
added deprecated configuration for the ' reserve ' parameter in ReplicationHandler to indicate that ' master . ' is deprecated and should now be configured directly on
corrected the spelling of " cacheVariableName " to " cacheForeignKey " in multiple files to improve code readability and maintain consistency in naming
change the data type of ` handles ` and ` keyBytes ` from ` long [ ] ` to ` Object [ ] ` and update related methods
[ flink - 20613 ] [ runtime ] update restarting to complete termination future in cancel / suspend state
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation in ` RecentsAnimationDeviceState ` to simplify the
refactor filtering and copying logic for port table and overrides in UniFiControllerCache . java to improve code readability and maintainability
changed variable and method names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and
refactor offer handling logic in OfferBook . java to improve clarity and functionality to ensure proper removal and addition of offer items based on their
replaced hardcoded TLS version checks with constants from TesterSupport to improve code readability and maintainability by reducing hardcoded values
updated MockitoMethodInvocationControl to conditionally apply type to mocks based on type to improve flexibility in handling mock types and ensure correct behavior
replaced instances of ` NotLoadedException ` with ` this ` in multiple files to standardize exception handling by passing the current instance instead of
added a file extra to the intent in FileDisplayActivity to ensure proper handling of file data in the activity
added error handling and file deletion checks in StoreDirect . java and StoreWAL . java to improve robustness by ensuring resources are properly closed
added a call to screenshot the task in AbsSwipeUpHandler and refactored the stopSwipePipToHome method call in System
added a hidden property to the CommandArgumentDefinition and updated LiquibaseCommandLine to utilize it to enhance command argument handling by allowing hidden
[ hotfix ] [ test ] increase remote port for loggingkafkaplugintest from 8090 to 9092
[ geos - 8470 ] use resourcepool to get styledlayerdescript from styleinfo instead of datadir
added permission checks for launch intents and modified the completeAddShortcut method to handle PendingRequestArgs to enhance security by preventing malicious int
added ` getId ( ) ` and ` setId ( ) ` methods to ` TiledMapLoader ` , ` AnimatedTiledMapTile
refactor Manager class to improve code structure to enhance maintainability and readability of the code
added version parameter to JDBC connection URL and Session builder in SessionExample . java and SessionManager . java to ensure compatibility with the latest IoTDB
added schema and includeSchema properties and modified diff output control initialization in LiquibaseGenerateChangeLogMojo . java to enhance schema management
use put ( ) instead of putifabsent ( ) for jmxregistry . put ( ) ( # 2398 )
planner - 1649 add log for singlebenchmarkrunnerexception in plannerbenchmarkrunner
changed the method visibility of ` doPutRecord ` from protected to protected in ` AbstractCacheRecordStore . java ` to restrict access to the
update path formatting in Tools . java and FileSelectorFragment . java to improve code readability and maintain consistency in string concatenation
added new test methods for handling large and slow responses in FastCGIProxyServletTest . java to improve test coverage for HTTP GET requests with
added a service intent to start ReadInteractionsService in MarkReadService . java to enable the service to launch ReadInteractionsService for reading
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are only logged when `
added a configuration property for the SMTP server port to ensure a default value is used when the server port is not specified
added retry logic for SSLFactory reloading in TlsUtils . java to improve reliability during SSL factory renewal attempts
updated the date format in ObjectMapperProvider from HH : mm : ss ' Z ' to HH : mm : ss ' Z ' to ensure accurate
updated assertion message in SpyingOnRealObjectsTest to reflect the reason for mocking private classes to improve clarity of error reporting related to
added support for end - of - line end - on - nl in InlineBoxing and LineBox classes to properly handle line endings on
added null check for filePath . getParent ( ) in UnpackContent . java to avoid potential NullPointerException when accessing its parent
removed the import of DocCollection from TopicStream . java to eliminate unused dependencies and improve code clarity
refactor NinjaServletContextTest to create HttpServletRequestInputStream and add a new test for Windows - 1250 parameters in multipart handling to improve
added property to manage exposure includes in AbstractCasEndpointTests to enhance functionality by allowing exposure includes in the management endpoint
added a validation check to ensure the current graph is a dynamic graph to prevent runtime exceptions when the current graph is not a dynamic graph
support eager initialization of bean with type ` ` type ' ' and @ method ( ` ` value ( ) ' ' ) . fix # 2
added support for suppressing exceptions in JsonPath expressions by introducing a suppressExceptions property to enhance flexibility in handling exceptions related to JsonPath
removed duplicate creation of ControllerLeaderLocator in HelixServerStarter . java to streamline the code by eliminating redundancy
updated usage messages in CLHSDB and HSDB from " - help " to " clhsdb [ [ pid ] | [ path
refactored the ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` and removed duplicate listener registration in ` Simple
[ beam - 1867 ] remove write from sinkoutputformat and sinkitcase because it do n ' t use it .
refactor ShadowAccessibilityManagerTest to use the system service for accessibility management to improve code clarity and maintainability by centralizing access
keep the usage statistic group in the analytics ( # 3883 )
removed ` SourcePathRuleFinder ` and ` SourcePathResolver ` from multiple classes and updated class inheritance accordingly to simplify class hierarchy and eliminate unnecessary
refactor PostgreSQLEnumDataTypeHelper to use a new helper class for handling enumerated column values to improve code organization and facilitate easier
updated file path comparison to use File . separatorChar for consistency to ensure consistent file path formatting across different operating systems
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency in naming con
added support for dropping index tables in HiveMetaStoreClient to ensure proper handling of unsupported operations when dropping index tables
added visibility check to update disabled flags in RecentsView to ensure actions view is disabled when visibility is not visible
added a specific highlighter for non - Windows environments in the Repl . java file to enhance syntax highlighting for non - Windows environments
added a method ` addOptionalLocalVariable ` to handle optional local variables in ` BugInstance ` and updated related calls in ` CrossSiteScript
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` for file path retrieval to improve clarity and
simplified the removal of the capture listener in SelectBox . java to improve code readability and maintainability
changed the ` _ metaDataComplete ` variable from ` true ` to ` false ` to reset the status of the metadata processing logic
updated the ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR . execute ` and adjusted bitmap creation logic
added environment variables for " PLATFORM " and " RELEASE " flavors in JsBundleGenrule . java and corresponding tests in Js
updated type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test method
added tests to replace newline characters in comments and Javadoc lines in the AddImport class to ensure proper handling of new line characters in comments and Javadoc
added a hubMode property to AbstractLiquibaseChangeLogMojo and defined it in AbstractLiquibaseMojo to enable
removed unnecessary null check for ` item ` in ` JsrFaultTolerantStepBuilder ` and ` JsrChunkProcessor ` to simplify
added error handling and logging for linkDb in IndexerMapReduce . java to improve robustness by ensuring linkDb exists before adding the input
replaced the method lookup for the " setIndexerThreadPool " with a direct access to the class for the DocumentsWriterPerThreadPool to simplify
updated the SMS address construction to remove the ' : 5000 ' prefix to simplify the address format for better readability
added a copy method for job executions in MapJobExecutionDao and created a corresponding test case in MapJobExecutionDaoTests to ensure that job executions are
added a new file ` DownloadTest . java ` that implements HTTP request and HTTP response handling for downloading images to facilitate testing of
normalize language codes before assignment in multiple classes to ensure consistent language handling across the application
updated exception handling in GenericUDFRound . java to use a specific exception type for better clarity to improve error reporting for different data types
add null check for selectedVersion before processing managed dependency tags to avoid potential NullPointerExceptions when selectedVersion is null
removed multiple specific AntPathRequestMatcher entries from SecurityConfig . java to streamline security configuration by eliminating unnecessary matchers
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a conditional check for the class name before processing bean definitions in BeanDefinitionInjectProcessor . java to ensure that bean definitions are only processed for
added an @ Ignore annotation to the HttpClientRedirectTest class to temporarily disable tests that are not ready for execution
[ openwebnet ] use fixed delay instead of fixed delay for energy and thermoregulation
replaced manual execution of SocketEventProcessor with a direct instantiation of SocketWrapper and SocketEventProcessor to simplify code and improve readability by redu
deleted the SunToolkitSubclass . java file which contained a method to flush pending events in the AWT toolkit to remove unused code
added rotation and scaling functionality to the DefaultRenderableSorter and Matrix4 classes to enhance rendering accuracy by ensuring proper translation calculations when rotation or scaling
added a new test method ` registerWrapperHandlerBeforePrimitive ` to ` TypeHandlerRegistryTest ` and modified imports in ` TypeHandlerRegistryTest
added a new method ` toRGBImage2 ` to handle alternate color space in ` PDSeparation . java ` to improve color processing
updated URLs in CommonsApplication , PageTitle , and Utils classes to use BuildConfig instead of CommonsApplication to improve consistency and align with
camel - 16400 : camel - http - add health check for camel - main to make it clear that the test do n ' t
fix an npe in the thorn chakram when there ' s no block position
added a test for altering tables with indexes with primary keys in AlterTableWithViewsIT . java to ensure correct handling of primary key
updated offset initialization in FileFloatSource and added random assertions in TestFunctionQuery to improve accuracy of document processing and ensure proper commit behavior
removed the DrillMongoConstants . ID field from the fields list in MongoRecordReader . java to eliminate unnecessary ID fields from the record reader
added a disposal method to YeelightHandlerBase and implemented the disconnect method in DeviceBase to ensure proper resource management and state management
added support for auto - increment functionality in the database parser to ensure proper handling of integer values in database queries
added functionality to manage existing shared index informers in SharedInformerFactory and updated test cases in SharedInformerFactoryTest to improve synchronization handling and ensure
server : fix npe when create a private template and add it to the template db
refactor image handling in ShadowBitmapFactory to use RobolectricBufferedImage instead of FileInputStream and simplify color array initialization to improve code cl
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up obsolete code and improve maintainability
jbrules - 2852 move stocktickstream . dat to org / drools / examples / broker / rules / broker . d
added a new variable ` legendTop ` and updated its assignment logic in ` PieChart . java ` to ensure proper positioning of the
added a conditional check to return early if the world transform determinant is zero to optimize performance by avoiding unnecessary processing
added a new file ` MaryScriptCreator . java ` that creates a text file with specified input and output formats to facilitate
added a session attribute to store the remote host in the flowFile to ensure the flowFile has the correct remote host associated with the request
removed redundant ` compactionLogger . close ( ) ` and added a check to delete the log file if it exists to streamline the code by
updated URL attributes from " xlink : href " to " href " in ComponentDescription . java to simplify attribute access and improve code clarity
camel - 15836 - camel - aws2 - s3 : make timeout checker configurable
hbase - 25836 addendum add log for closed region after cluster shutdown
added null checks for span before logging stopped spans in Slf4jSpanLogger and improved warning messages in DefaultTracer to enhance robustness
modified the addition of active options to trim whitespace before adding it to ensure active options are consistently added without leading or trailing spaces
added preference for wallpaper depth effect in DepthController to enable dynamic adjustment of wallpaper zoom based on user preference
added an assertion to verify the success count of the overseer action in OverseerTest . java to ensure that the overseer
modified the return value of the getKernelVersion method to always return true to simplify the logic for determining if xattr is enabled based on the
refactor ExecConstants to improve code structure to enhance maintainability and readability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for test cases
added a method to set the scan attribute for paging in TableSnapshotResultIterator and modified ScanUtil to utilize it to improve code organization and
updated lowRange assignment logic in Request . java and RequestV2 . java to ensure that lowRange is within valid range to prevent potential errors
changed visibility of keySizeEstimator and valueSizeEstimator to protected in AbstractCachedSource . java and modified cache size estimation in AsyncWriteCache .
updated hostResponse . setZoneId to use host . getZoneUuid ( ) instead of host . getUuid ( ) to ensure consistency in zone ID
[ hotfix ] [ zeppelin - 4892 ] fix utf - 8 encode issue in livy interpreter
updated the removal logic in ZipFileSystemProvider to include the zfs parameter to ensure the correct filesystem is removed from the filesystems collection
replaced ` obj ` with ` json ` and updated related methods in ` HttpRequestBuilder . java ` to improve clarity and consistency in JSON
increased the timeout duration from hard . poll ( ) to hard . poll ( ) in SoftAutoCommitTest . java to allow for
fix flaky test : do n ' t call listener . beforeevent ( ) and listener . afterevent ( )
refactor multiple Dial - related classes for consistency and clarity to improve maintainability and readability of the code
reformatted error logging in SyncQueue . java for consistency to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest version
updated method call from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and
move patchy to the correct place where patchy do n ' t exist
[ hotfix ] [ yarn - tests ] remove redundant yarnclient instantiation in yarnitcase
add empty local map stats per map when there be no data include
deleted the AllTests . java file to the test class is no longer needed in the project
added constants for non - breaking hyphen and zero - width space in AbstractWordConverter to enhance character handling for better readability and performance
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory computation behavior on large stack trace invocations
updated the method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler . java
added a new boolean variable ` eventHandled ` to ` UIText . java ` to indicate that the event has already been handled
deleted the ` Controller . java ` file and refactored ` Weldby . java ` to ` WeldModule . java ` to
ruby : do n ' t monitor capture group in empty check for backtracking nfa
replaced the initialization of ` liquibaseProLicenseKey ` with a protected variable ` liquibaseProLicenseKey ` to
refactor setMeasuresHierarchyMemberReader method to setMeasuresHierarchyMemberReader and introduce a private setter method to improve code clarity
[ gr - 36402 ] add - g option to generate debugging information for track node source position
refactor MondrianProperties class to improve code structure to enhance maintainability and readability of the code
added support for friend paths in Kotlin configuration and related classes to enhance functionality by allowing users to specify Friend paths for Kotlin
added aliases for BATK , BRAHMI , and MANDAIC , and modified main method in CheckScript . java to
refactor ` ExecutionCommand ` equality checks to use ` equals ` for better readability to improve code clarity and maintainability by reducing
updated Mockito library version to ensure compatibility with the latest features and improvements
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope object
added handling for CSS _ PERCENTAGE and CSS _ NUMBER in the cmyk ( ) function to ensure that the parameter value is within
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to ` LocalIndexIT . java ` to verify the reverse
updated test methods to use ApplicationProvider instead of InstrumentationRegistry and modified test context retrieval in BackupHelperTest and LanguageHelperTest to improve test
updated toast messages in ItemListActivity , LiveTvGuideActivity , and MediaManager to improve clarity and consistency to enhance user understanding
refactor condition checks in RendererUtilities and add a new test case in RendererUtilitiesTests to improve code clarity and ensure proper functionality of tests
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid sizes instead of Iterator to improve code clarity and maintainability by
added a try - catch block when executing SQL statements in FileContentProvider . java to handle potential SQLite exceptions when adding the same column twice during
removed System . err . println statement from AsyncServletIOTest . java to clean up the code and improve readability
refactor data size calculations in ConvertJoinMapJoin to use a new computeOnlineDataSize method to improve memory efficiency and maintainability of data size
updated the ` buildView ` method to accept a ` Context ` parameter and adjusted the background resource settings accordingly to enhance flexibility by allowing dynamic
added an ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to
vpc : setvpcid ( vpcid ) should be set to null in gatewaynet
[ beam - 10955 ] ignore flinksavepointtest on jdk 1.11
replaced ` @ Cue . TextType ` annotations with ` @ Cue . TextType ` in multiple classes to standardize field access
modified loop condition to include an index before processing actions to ensure actions are processed correctly within the bounds of the action list
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the updated Bitmex exchange implementation
[ task 7270 ] add test case for virtual relationship metadata ( # 7271 )
added null check for spatial before accessing its properties in LodControl . java to avoid potential NullPointerExceptions when spatial is null
updated the ` lastTokenFiltered ` initialization and added new filters in ` ConditionalTokenFilter ` , ` FixedShingleFilter ` , and ` Test
refactor UnsafeStoreNode to store field node instantiation and set state after after graph state to improve code clarity and ensure correct graph state management
updated the method call from ` super . putAddress ( base + offset , value ) ` to ` io . putAddress ( base + offset
added an assertion to verify the presence of events in the CasAuthenticationEventListenerRepository to ensure that the event repository behaves as expected without errors
removed unused parameters ' attributeTemplateName ' and ' attributeLine ' and ' attributeCol ' from AuthenticationAttrProcessor . java to clean up the code
added null key validation in MacOSXPreferences and created a new RemoveNullKeyCheck class to ensure that a null key is provided to avoid
added a method to set a specific typeface in CodenameOneTextPaint to ensure typeface is properly managed and prevent runtime exceptions
added ` open ` methods to ` AzurePinotFS ` , ` LocalPinotFS ` , ` HadoopPinotFS ` , and
simonstewart : remove the deprecated fail ( string message ) method from webdriverrunner
removed the condition checking if an item size is greater than zero in SolrRequestParsers . java to simplify the code for better readability and maintain
replaced the ` ResultObject ` class with a ` boolean ` ` useConstructorMappings ` boolean and refactored related methods in ` Default
updated SQL statement formatting in CreateTableGeneratorTest . java to ensure correct syntax for foreign key creation in the database schema
added a filter mode check and modified return logic in VectorizationContext . java to ensure correct handling of boolean result types in vectorization expressions
updated type specification for ` moveSelectorConfig ` in ` ExhaustiveSearchPhaseConfig . java ` to improve type safety and clarity
replaced the instantiation of ReorganizeTableStatement with a direct call to modifyDataTypeStatement to streamline code by eliminating unnecessary parameters
updated cluster name handling in SystemPropertiesUtils and changed access modifiers in IoTDBStartCheck and DataNode classes to improve clarity and consistency in
refactor connection handling and error logging in PeerGroup . java and ClientConnectionManager . java to improve clarity of connection attempt and enhance error
nano : added support for multiple style string ( blink , bold , conceal , faint , hidden , inverse , italic ,
refactor MCEditSchematicReader , SpongeSchematicReader , and DataFixer to use Adventure
updated return message from " Use ` String ` to " No # toString ( ) on String " to clarify that no # toString (
updated JVM memory usage from " - Xmx64m " to " - Xmx32m " to optimize resource usage for improved performance
refactor ` retryFailed ` method to return ` FailureContext ` and add ` DataProviderRetryAnalyzer ` and ` DataProviderRetryTest `
change return statement from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to ensure correct retrieval of bandwidth
danielwagnerhall : add support for selectpopup , deselectpopup , capturenetworktraffic ( string type )
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and updated related references in ` Resources . java ` to simplify the
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks for undecorated dialogs and frames before setting their opacity and background colors to ensure proper handling of undecorated dialogs and
made the ` state ` field final in ` DefaultProjectFilesystem . java ` to ensure immutability of the ` state ` variable
refactor Redis connection factory to use RedisStandaloneConfiguration instead of RedisPassword to enhance configuration flexibility for Redis interactions
add lastSeenDelayedMessage property to track the last time the chat room has been seen to ensure that the system accurately reflects the last
replaced ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method call to simplify the
refactor FileOperationsHelper to use Intent for sharing operations and introduce new action constants in OperationsService to improve code organization and enhance functionality by
removed unnecessary check for ` isInjected ` in ` isValue ` condition in ` BeanDefinitionInjectProcessor . java ` and added ` @ Inject `
refactor y - coordinate calculations in ClassicPlotManager . java to use a variable for yStart to improve code readability and maintainability by
added a check for NullPointerException in the SmackIntegrationTestFramework class to ensure proper handling of NullPointerExceptions during integration tests
added a boolean parameter ` readLinked ` to the ` readDirectory ` method and modified related conditions in ` EXIFReader ` and ` TIFF
added ENABLED _ LS ( 0 ) to VersionTargetGraphMode and modified executor initialization logic in VersionedTargetGraphCache to support local stack usage in
updated conditional checks in DLNAResource . java to include a check for video format to ensure correct handling of media media formats in the parser
chore : integrate new gapic - generator - java and rules _ gapic ( # 49 )
added a static method ` load ( ) ` to ` LwjglNativesLoader ` and modified ` LwjglApplet `
added escape handling and encapsulator configuration in CSVRequestHandler . java and updated related tests in TestCSVLoader . java to improve CSV processing flexibility
updated grant type validation in ClientRegistrations and corresponding tests in ClientRegistrationsTests to ensure only ` AuthorizationGrantType . AUTHORIZATION _
enhanced exception handling in Throwable and SuppressedExceptions to include additional context and exception details to improve error reporting and provide clearer context for exceptions
added query assertions and updated iterator initialization in DerivedTableIT . java and ClientAggregatePlan . java to improve test coverage and ensure correct behavior
added a new mapping for the RSquare value in the RegressionEvaluator class and a corresponding test in StreamExpressionTest to ensure the correct
added handling for request header names in ThreadContextMDCServletFilter to enhance context attribute management for better request processing
replaced direct casting of ` work ` with a local variable ` mapWork ` in ` SparkPlanGenerator . java ` to improve code read
added methods to retrieve folder and country images in PdfJndiReport and PdfSessionInformationsReport classes to improve image loading efficiency and maintainability
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer handling in JwtIssuerAuthenticationManagerResolverTests to
updated resource existence check from ` exists ` to ` isReadable ` in ` AbstractScriptDatabaseInitializer . java ` and added a new test for schema
sulong : fix interop type cache for non - method call .
removed a redundant sleep statement in AbstractBasicMockingIntegrationTest . java to improve code clarity and maintainability
added a new file KernCrash . java that implements a custom font text rendering with a Kerning crash to demonstrate
added a fail ( ) method to LinkedHashTreeMapTest . java to ensure the test case fails gracefully
added a method to retrieve network interface IP addresses with a specified prefix to enhance functionality for managing network interface IP addresses
[ zeppelin - 4892 ] cleanup of housekeeper task in hikaripool after shutdown ( # 2
changed the client address from ` autoSwitchHAConnection . getClientAddress ( ) ` to ` autoSwitchHAConnection . getSlaveAddress ( )
refactor assertions in Assert . java for improved readability to enhance maintainability and clarity of the code
added a new test file ` Issue247Test . java ` for testing the ` TreeMap ` functionality in a ` Map ` database to
changed the type of ` results ` from ` CategoryItem ` to ` String ` and modified the ` doInBackground ` method to return a
added checks for leap years in ValidatorTest . java to ensure that max age validation works correctly for years other than 29 and 28
added GrblLookups for alarm and error codes and updated response handling in GrblController . java to improve error handling and provide
added a condition to return the home button label when there are no screens to improve user interface by providing a clearer home button label
removed the count parameter from the getTrades method across multiple classes to simplify the method signature and improve code readability
updated method calls and added null checks in ConsoleReader . java and MemoryHistory . java to improve error handling and ensure proper handling of null strings
updated the file path construction for jdkPath in JavaBuild . java to ensure the correct file path is used for the Java build process
replaced calls to ` input . getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) ` across multiple files
refactor JFCModel constructor to accept a Consumer < String > for logging warnings to enhance logging flexibility by allowing customizable warning messages
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance value is positive to prevent potential errors
added utility methods for creating and droping views in TestUtil . java and implemented a test for view privileges in DatabaseMetaDataTest . java to
added support for checking stable float and double scenarios in NaNTest . java to ensure tests are only executed on valid X86 architecture to avoid
added a new class ` DesktopTaskbarUIController ` and modified ` TaskbarManager ` to return it if it has a system feature
added ProgressKeeper task count listener and refactored ModItemAdapter to implement TaskCountListener to improve task management and ensure proper button state updates
refactor file handling methods in mmm and ppp files to improve code readability and maintainability
refactor GrpcServiceDiscoverer to use Lists instead of Sets for better clarity and consistency to improve code readability and maintainability by
updated the ` DomainAwareServicesManager ` interface and class in ` ChainingServicesManager ` to extend ` ServicesManager ` instead of ` @
[ 1.19 . x ] fix resourcepackloader to generate packinfo for mod file .
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
added methods to set expandX , expandY , fillX , and growY in the Cell class to enable dynamic resizing of cells based
refactor DefaultInputHandler to use generics for key bindings instead of a single map to improve code readability and reduce boilerplate
http : / / issues . apache . org / activemq / browse / amq - 2698 - add try - catch to
replaced long array with byte array and added memory fail count check in MetricsMemoryTester . java to improve memory handling and ensure memory fail
deleted the JobParametersPrototype . java file to the functionality was no longer needed in the project
added a securityEnabled flag to the MappingsTable class and updated related methods to incorporate it to enable security checks during mapping operations
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS and APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable the dump to the
updated the method ` codecNeedsEosPropagationWorkaround ` to accept ` MediaCodecInfo ` instead of ` codecName ` to enhance compatibility
[ java ] do n ' t set the producer limit if there be no spy position .
added a condition to check if ` dbInfo ` is null when ` options . getOutputOptions ( ) . isNoInfo ( ) ` is
[ presto ] enable ssl by default and use 443 instead of ssl = false
added DOMOutputOptions to the buildDOMSubtree method in DOMConverter . java to enhance error output functionality for better debugging
refactor assertions in Assert . java for improved readability to enhance maintainability and clarity of the code
added a ' retain ' parameter to the Event class and related classes to control whether the topic should be retained or not to provide additional options for
added testCaseName to the failure message in EventSerializationTest . java to enhance error reporting for test cases during serialization
added a getName ( ) method to SqlGroupedWindowFunction and updated the constructor call in SqlStdOperatorTable to ensure consistent name retrieval for the
updated import statement from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java
introduced a read - write lock and refactored SSL context management methods in AbstractSessionContext . java to improve concurrency handling and ensure
refactored the ` Watcher ` constructor and formatting in ` AppModule . java ` and ` Watcher . java ` to improve code readability
replaced CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to utilize Ansi ' s SQL dialect for
changed log level from debug to trace for no firmware update handler available for a thing to improve logging detail for better troubleshooting
added unit tests for retrieving null date and timestamp data in GetObjectTest . java to ensure correct handling of null date and timestamp data in the database
refactor string handling in StringSubject and Subject classes to use local variables for better readability to improve code clarity and maintainability by redu
added a test for multiple repository permissions in UserModelTest . java to ensure correct permissions are applied for different registrant types in the user
added a new file ` Test7088020 . java ` implementing a static method ` test ` with optional stack trace to demonstr
replaced the ` matchAudienceRestriction ` method with a ` Set < String > ` for audience URIs and improved error handling to enhance cl
refactored cache updates and modified synchronization in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve cache refreshing efficiency and ensure
replaced direct calls to ` _ stderr ` with null checks for ` _ stderr ` to prevent potential NullPointerExceptions when ` _ stderr ` is
added a new warning constant SEPARATION _ ORDER and implemented stage active checks in BasicEventSimulationEngine to ensure that warnings are only added when
updated the parameter from offlineTableConfig to realtimeTableConfig in the optimize method call to ensure that the query optimization accurately reflects real
updated SQL statement construction and added a check for split points before executing aggregation table SQL to ensure correct aggregation table SQL generation based on configuration settings
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass functionality to ShadowBluetoothDeviceTest and implemented BluetoothClass getter and setter in ShadowBluetoothDevice to enable testing of
updated method name from ` contains ` to ` containsProfile ` in multiple classes to improve clarity and consistency in naming conventions
drools - 1649 sum ( [ ] ) should return an error when the list be null or empty
replaced graphModel ' s readUnlockAll ( ) method with graph directly in DataBridge . java to simplify the code by directly accessing the
updated coreNodeName construction to use nodeProps ' coreName ' instead of coreName to ensure the correct core name is used for better clarity
added UpdateBackpressure functionality to ChatActivity for improved backpressure updates to enhance user experience by providing a more efficient backpressure update mechanism
refactor TaggerParserPosTagCompatibilityITest . java for improved readability to enhance maintainability and ease of understanding for future
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
updated element type checks in ` mmm Types . java ` and added a new class ` ppp T7005671 . java ` with
updated super triangle calculations in DelaunayTriangulator . java and added a new test class in DelaunayTriangulator
added @ Override annotation to multiple ArrayList , HashSet , LinkedHashSet , LinkedList , List , PriorityQueue , Spliterator , TreeSet , and Vector classes to
refactor JWTClaimsSet initialization to use Builder pattern for improved clarity and consistency to enhance code readability and maintainability by using a
refactor stack overflow state management in StackOverflowCheckImpl . java to improve clarity and functionality of state management
refactor Shadow classes to use static imports for ShadowSQLiteDatabase and ShadowContentValues to improve code organization and maintainability by centralizing shadow
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced bytesPerDim with a comparator from ArrayUtil . ByteArrayComparator in BKDWriter . java to improve code clarity and maintainability by
added script parameter to the Locale constructor and initialized default locale if it is null to ensure proper initialization of the default locale when necessary
update return statement to use mIconLastSetTextAlpha instead of mIconCurrentTextAlpha to ensure the correct text alpha value is returned for
corrected a typo in the warning message from " Confimap " to " ConfigMap " to ensure clarity in the warning message for better
replaced ` LoginMockMvcTests ` with ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` in ` DefaultConfigurationTest
trim whitespace from tokens before adding them to the list of tokens in GzipFilter . java and setInitParameter calls in GzipFilterDefaultTest .
updated the assignment of the _ outputType variable in Response . java to ensure consistency in the output type assignment
updated the default regexp implementation property from JDK to JONI to ensure compatibility with the latest Nashorn library version
replaced ` LooperExecutor ` with ` Executor ` and refactored listener scheduling to use ` FutureTask < ExportedData > `
added checks for unknown style values and implemented a method to retrieve voice styles to improve robustness by handling unknown style values and enhance voice style retrieval
added a check to create the parent directory of the destination folder in GitBlit . java to ensure that the destination folder exists and is valid
updated the bind IP value from 0.0 . 0.0 to 127.0 . 0.1 in Args . java to ensure the
camel - 15836 : camel - core - camel - workitem - handler should use camelworkitemhandler instead of camelworkitemhandler
pdfbox - 4892 : minor cleanup , a suggest by valerybokov
rename ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and update related references across multiple classes to improve clarity and consistency in naming
updated multiple Java files related to DalvikThrowAnalysis , DexTransformer , IDalvikTyper , PseudoInstruction ,
refactor type parameter handling in DefaultJavaPrettyPrinter to improve clarity and structure to enhance code readability and maintainability by reducing red
[ hotfix ] [ runtime ] fix memory leak in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder . java and modified replacement logic in StringQuery . java to improve clarity of error messages and
refactor eviction counter handling in ConcurrentLRUCache and FastLRUCache classes to use AtomicLong for better performance to improve performance by redu
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
updated condition to check for intendedDestination instead of localHost to ensure correct type checking for the intended destination address
added RuntimeEnvironment configuration to MainFrame . java to ensure the application uses the correct database and source configurations
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` methods to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration
[ hotfix ] [ table - common ] fix checkstyle violation in tableenvironment
replaced the ` setStatementTimeout ` method with a direct timeout setting in ` MapperBuilderAssistant . java ` to simplify the code by
removed the ` hangingTscTimeout ` parameter from multiple method signatures in the ` JSweetTranspiler ` and ` TypeScript2
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of GeoLocationRequest and
updated ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to use ` BuildArtifact ` instead of ` ImmutableSourceArtifactImpl ` to ensure correct
tika - 2338 -- add test case for jxl . xls document and throw tikaexception
make sure ` ` not triggered concurrent modification ' ' event do n ' t trigger ` ` concurrent modification ' '
added a wait for the input stream to be available before proceeding with the write operation to ensure that the data is available before proceeding with
added equality checks for ` actual ` and ` expected ` in ` GuavaOptionalSubject ` and corresponding unit tests in ` GuavaOptionalSubject
updated visibility mask in BackgroundAppState and modified smidProgress logic in ShelfScrimView to improve swipe indicator handling and ensure accurate
add null check for the navigation object in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
mow - 232 : fix for mow _ pin _ image on tablet
rename ErrorOccuredInOnExceptionRoute . java file to improve clarity and consistency in naming conventions
[ astro ] change log level of astrodiscoveryservice to debug
simplified variable assignment for ` irrUnit ` and ` pemUnit ` in ` SinglePassAndImageBasedLightingLogic . java
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang due to
updated import statements in GuiceFactoryTest . java to include specific classes as well as AbstractModule , Injector , Scopes , and Stage to enhance
added a systemFeatureList to RobolectricPackageManager and implemented hasSystemFeature and setSystemFeature methods to enable tracking and management of
added a constant for the property path suffix and modified the RCAFrameworkLoader to augment its properties to improve code readability and maintainability by
removed a log statement that logs the start of cancellation watch dog to streamline logging by eliminating unnecessary information
added a null check for enumerationValues and initialized it to null if it is empty to ensure proper handling of empty enumeration values and prevent potential NullPointerException
renamed variable ` needInline ` to ` needStartText ` and ` needEndText ` for clarity to improve readability and maintain
added asynchronous collection of telemetry data and a method to retrieve the remote IP to improve data processing efficiency by allowing asynchronous processing of Telemetry data
removed conditional logic for altering the UPGRADE _ ITEM _ TABLE column type in UpgradeCatalog260 . java to simplify the code by
updated error messages for index and temp resources directories in BaseTableDataManager . java to provide clearer guidance on permissions and write - permissions
refactor DatasetUtilities to improve code structure to enhance maintainability and readability of the code
added selector ID to the key string in mmm Matcher . java and ppp Matcher . java to enhance functionality by providing context about the selector
corrected formatting of debug log statements in GouraudShadingContext . java to improve code readability and maintain consistency
updated taskbar visibility handling in StashedHandleViewController and added alpha updates in TaskbarDragLayerController and TaskbarLauncherStateController to
removed unnecessary whitespace from KeyExchange . java to improve code readability and maintain consistency
added a check to ensure the connection is a JdbcConnection before proceeding to avoid potential ClassCastException when the connection is not a JdbcConnection instance
refactor index retrieval logic in ServerMainTest to use a variable for file names to improve code readability and maintainability by reducing red
added ` getMediaRecorderingMimeType ( ) ` methods to ` CodenameOneImplementation ` , ` MediaManager ` , ` Display ` ,
changed access modifier of the useShaders method from private to public in ShaderHelper . java and updated references in RenderTileEnchan
updated the BindableFilter condition in DruidAdapterIT . java to include an OR condition for the return value of " C = 6588
reformatted the instantiation of ZkStateReader by removing the ' zkClientTimeout ' parameter to improve code readability and maintain consistency
pdfbox - 4892 : disable entity reference in xmpmetaparser , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced the conditional check for " < script > " with a while loop for better readability to improve code clarity and maintainability by
renamed ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated related logic to improve clarity and correctness
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by reducing
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during recovery
updated the ` InternalDropAllCommandStep ` to include ` HubRegisterResponse ` and modified the ` attachProjectToConnection ` method to include
replace ` & 0xff ` with ` Byte . toUnsignedInt ` and update return statements to use ` Byte . toUnsignedInt ` to
[ rocketmq - 3540 ] fix checkstyle violation in opentracingtransactionproducer
updated the default caching mechanism from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to improve performance by allowing dynamic caching based on
changed the rangePannable property from true to false in CategoryPlot . java to disable range pannability for improved visual clarity
updated the condition for setting main active state and view management in AllAppsContainerView . java to ensure proper handling of work mode switch when the
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` variables in ` Visualizer2TopComponent . java
added try - catch block to handle CancellationException in FunctionTest . java to improve robustness by preventing application crashes during cancellation
changed access modifiers of constructors in JarFileResource and JarResource classes from package - private to protected to allow subclasses to access these constructors for better
refactor DefaultTrackSelector class to improve code readability to enhance maintainability and facilitate future updates
added a loop to wait for isUnseqMerging before proceeding to ensure proper handling of unseq merging status
updated the fee currency comparison from AUD to BTC in BTCMarketsAdaptersTest . java to align the test with the new currency
added a table annotation to the Post class and modified test assertions in HibernateDTOProjectionTest and JPADTOProjectionTest to improve code cl
refactor Unicode code to improve readability to enhance maintainability and ease of understanding for future developers
updated the ` installAutoInstance ` method to include a ` Service ` parameter and introduced a new method to update Hive LLAP settings if required
removed redundant whitespace in the onComplete method call to improve code readability and maintain consistency
[ beam - 10399 ] add support for aws module to deserialize ssecustomerkey .
added support for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to ensure proper handling of big - decimal values and provide clearer error messages
replace ` inner ` with ` javacProcessingEnvironment ` in ` wrap ` methods to standardize access to ` javacProcessingEnvironment ` across
added annotation logging for generic parameters in ParameterInfo . java to enhance visibility into parameter information for better debugging
added ac3 support and modified playback state handling in PlaybackController . java and VideoManager . java to enhance playback functionality and improve timestamp extraction
added a new Map < String , Object > and set a null value to the HttpResponse in LocalNode . java to ensure that the HTTP response
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address deprecation warnings related to need Commons DB
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` and modified ` DataNodeTemplateSchemaCache ` to
refactor RTimerTree class to improve timer handling logic to enhance performance and maintainability of timer operations
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
updated gapX calculation to use Math . round for better precision and added a new TestIssue358 class to improve precision in text alignment and
added a name for the client thread pool and modified the scheduler initialization to include a boolean parameter to provide a unique identifier for the thread pool and
refactor ViewResultsFullVisualizer to use private JSplitPane instead of protected JScrollPane for better encapsulation to improve code readability and
added support for adding user ' s phone numbers in the ScimUserEndpointDocs class to enhance the user ' s capability to manage user phone
changed class access modifiers from public to public and added private constructors in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes to enhance
added null checks for responseMap in JsonHttpPropertyRequest and improved error logging in URLStreamProvider to enhance error handling and provide clearer
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a check for the default parallel value in XmlSuite . java to ensure that the parallel value is not checked against the DEFAULT _ PARAL
[ vmware ] fix checkstyle violation in testvmware
added handling for SCARD _ E _ NO _ SMARTCARD in the error condition to ensure proper handling of SMART card scenarios in the
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress warnings related to Lots O . stuff . on . purpose
camel - bindy : fix bind problem with complex one - to - many key - value pair
change default value of " useOwner " and " useTimeStamp " from Boolean . TRUE to Boolean . FALSE to ensure that owner and timestamp is
updated method signatures in mmm Utils . java to use ThrowingRunnable instead of Runnable to improve type safety and clarity in exception handling
added null checks for ` via ` , ` viaContext ` , and ` pathFromSeed ` in ` CrawlURI . java ` to
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored variable assignments in Liquibase
bug 60589 - set proxy . cert . validity default value to 90
added smoothDelta variable and updated related calculations in ThreadHandler . java to improve animation responsiveness and performance
added a null check for the paginator in HttpBatchReader and modified HttpUrl initialization in HttpScanBatchCreator to improve robustness by ensuring pagination
added null check for CompactionInfo client in Worker . java and implemented a test for FindNextCompactRequest in TestWorker . java to ensure
added onSaveInstanceState method to ShadowFragmentActivity and corresponding test in FragmentActivityTest to ensure that onSaveInstanceState is called correctly for fragments to
updated formatting and formatting in BatchResourceFactoryBean . java to improve code readability and maintain consistency
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure color references are correctly parsed from the color resource loader
added handling for NoResultException in AbstractJPAQuery and a new test for unique results in AbstractStandardTest to improve error handling and ensure
rename variable ` fromCache ` to ` owner ` and adjust related logic for adding communities to improve clarity and maintainability of the code
updated depth preference retrieval to use LawnchairApp instead of a local variable to ensure compatibility with Lawnchair ' s depth effect
removed unnecessary import of ProcessTools from LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
updated the parameter name from ` now ` to ` getHeadSlot ( ) ` in the ` updateTotalEnergyAverageUsage ` method to
added null checks for extensions and improved string representation in ExtensionStack . java to ensure robust handling of null values and prevent potential NullPointerExceptions
3 . x : fix flowableflatmap . flatmap . mainerror ( ) when delay = false
added connection timeout settings to the MultiThreadedHttpConnectionManager and improved error handling in ServerTableSizeReader to enhance connection management and provide
removed unnecessary whitespace in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to align with the
replaced SystemResourcesEdgeEventFetcher with TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and removed the inlineImage method in BaseImage
added a test to verify that the output hash is not calculated when the cache is not writable to ensure that the cache is updated correctly when uploads
camel - 14263 : camel - netty - add usebytebuf option to allow it to be turn on by default .
updated the method call to use Warehouse ' s getQualifiedName for altering partitions to ensure the correct table name is used for partition alteration
updated the IllegalArgumentException message in Transport . java to specify that the Vertx instance must be created with the preferNativeTransport option set to true to
add unit tests for the ColorTypeHandler class and implement various serialization and deserialization tests to ensure proper functionality and functionality of the ColorTypeHandler class
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future development
added hints for JAVAEE query and lock timeout in SessionImpl . java to improve performance by reducing unnecessary timeout settings
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to facilitate the creation of ` StaticLogger
hbase - 25836 remove duplicate put ( family , set ) call from append , delete , increment , put ( family , set )
added logic to check for window rotation changes in TaskbarManager to ensure proper handling of rotation changes based on new and old configurations
unescape xml in chat room occupant nickname to ensure proper handling of xml character in occupant nickname
removed the ` IO _ FREE _ RECID ` parameter from the ` longStackPut ` method in ` StoreDirect . java ` and
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress mutable access warnings and improve code clarity
jbrules - 2852 : add miss dependency to brokentest in jbrules - integration - tests
simplified conditional checks for audio and subtitle tracks in DLNAMediaInfo and FFMpegVideo classes to improve code readability
added a ` unlimited ` parameter to the ` NBWriteServlet ` constructor and updated the ` TestWriteListener ` constructor to allow control over
updated the ` updateTotalDifficulty ` method in ` BlockchainImpl ` and added a new test for invalid block total difficulty to ensure
modified action assignment logic in DefaultPlaybackController . java to directly return BASE _ ACTIONS when the player is not current window seekable to simplify
replaced ` ArrayList ` with ` CopyOnWriteArrayList ` and modified ` constructVerificationCacheCleaner ` to accept a ` Class < ?
added a null check and adjusted position calculations in AllAppsView . java to ensure proper memory allocation and correct bend values for improved visual
added a check for the presence of a colon in the key in the HttpURLConnection class to ensure proper handling of connection parameters in HTTP requests
added PrincipalResolver dependency to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance principal resolution functionality in the multifactor authentication process
replaced ` ObjectMapper ` with ` JSONParser ` and improved error handling in ` DelegationTokenResponse . java ` to enhance JSON parsing capabilities
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to ensure proper handling of trailing slashes in string builder operations
added a constant ` EMPTY ` and a method ` matchesAny ` to the ` PatternsMatcher ` class to manage empty patterns and improve pattern
enhanced error message formatting in LoadIncrementalHFiles . java to improve readability to enhance clarity of error messages for better debugging
feat ( potion ) : add fire potion fading to fire potion
updated formatting of beginOrAdjustReorderPreviewAnimations calls in CellLayout . java to improve code readability and maintain consistency
refactor the calculation of decreasePercent and adjust formatting in ContractStateCapsule and ReceiptCapsule classes to improve code readability and maintain consistency
added handling for unready input in AsyncContentProducer and BlockingContentProducer , and introduced a new test for isReadyIdempotent in
added a null check for weightField in DocumentDictionaryFactory . java to ensure that weightField is a mandatory parameter to prevent runtime errors
added variable substitution functionality for " Info . plist " in AppleBundle . java and created a corresponding test case in AppleTestIntegrationTest
allow laser turret to turn or turn at the hitter ' s target tile ( fixes # 374 )
updated the ` adaptOrder ` method to use ` OrderCreateApiRequest . OrderCreateApiRequestBuilder ` instead of ` OrderCreateApiRequest . OrderCreate
added a new file ` PreParseGrammarTest . java ` to test XML schema parsing to facilitate testing of XML schema grammars
added @ SuppressWarnings ( " doclint : missing " ) annotations to multiple Java files to suppress warnings related to missing doclint dependencies
added FontManager import and overridden font settings in ExtendedEditText . java to ensure consistent font rendering across different contexts
added a null check for the current user in AuthorizeTag . java and implemented a test for unauthorized user handling in AuthorizeTagTests . java
camel - 16400 : camel - cxf - add warn log if the uri contain unsafe character . thanks to michael
added the setUpData method to the JDBCGeometryTestSetup class to ensure proper setup of data for geometry tests
removed the import of DumpHandler from MultipartFilterTest . java to eliminate unnecessary dependencies and improve code clarity
[ flink - 20613 ] [ table - planner - blink ] do n ' t stop restore attempt for already cancel task
added support for RMI registry creation in RemoteJMeterEngineImpl . java to enable dynamic configuration of RMI registry creation based on user -
replaced String . join with StringUtils . join for string concatenation to improve code readability and maintainability
updated display metrics handling in multiple test classes to ensure correct display metrics are applied to the application ' s resources
[ java ] add cluster memberid to service heartbeat counter to be able to track cluster member .
added a conditional check for version check and updated the number of attributes based on the major version to ensure compatibility with versions prior to 21 and above
updated the return statement in CustomExpression . java to handle NaN and negative infinity cases to ensure proper handling of NaN values and improve hash code generation
updated debug logging statements and error handling in AjaxListener . java to improve logging clarity and enhance error logging clarity
added authentication routes for " / authenticate " and " / authorized " in the AuthenticityController to enhance user experience by providing direct access to
added an assertion to ensure nextNode is alive in LoweringPhase . java and modified the way FixedNode is handled in SnippetTemplate . java
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
refactor comparison logic in DefaultTrackSelector to use natural ordering to improve readability and maintainability of the comparison logic
updated RuntimeSerialization . java file to improve serialization handling to enhance performance and maintainability of the serialization process
ggb - 1187 crop the image on the screen if it be crop .
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` and updated its usage in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and
added content type parameter handling in MailContentHandler . java to ensure correct resource name is set based on the presence of a content type parameter
updated the URI construction in ThumbnailsCacheManager to use local ID instead of remote path to improve clarity and accuracy of thumbnail generation
added checks for supported input marking and resetting in the Source class to ensure proper handling of input streams and prevent potential memory leaks
added @ Deprecated annotation to multiple AsyncProcessor , BehaviorProcessor , and AsyncSubject classes and added multiple @ SuppressWarnings ( " deprecation " ) annotations to
added a configuration property to control whether or not error stacks should be displayed on the error page to provide configurable option to control the visibility of error
bug 10332 : fix accountmanager . deleteaccount in case of domain cleanup fails .
removed unnecessary null checks for fremCall and dremCall in SPARCArithmeticLIRGenerator . java to simplify the code by
[ drools - 5242 ] throw unsupportedoperationexception for legacy drools 5 . x api
modified the ` onRequestPurchaseResponse ` method to call ` Display . getInstance ( ) . callSerially ( new Runnable ( ) ) `
increased the DEFAULT _ TIMEOUT _ MILLIS from 100 to 1000 milliseconds in UnboundedSourceSystemTest . java to allow more time for
updated import statements and modified the parent string handling in ShadowAssetManager . java to ensure proper resource name resolution based on the first character of the
deleted two files , MrefStat . java . rej and MrefStat1 . java to remove unused classes to streamline the codebase
added StringUtils checks for blank scopes in DependencyInsight . java to ensure that " compile " is used when the requested scope is empty
refactor BTCETradeServiceRaw to use constants for error messages and improve error handling to enhance code readability and maintainability by redu
( chore ) camel - core : use hamcrest assertion instead of junit in travis
added a method to retrieve payment request URLs in BitcoinURI and corresponding unit tests in BitcoinURITest to enhance functionality for handling payment protocol requests
planner - 383 fix abstractfrompropertyvaluerangedescriptor to throw illegalargumentexception when use a parameterized collection .
removed redundant assignment of mOrganizer . setFolderInfo ( mFolder . getInfo ( ) ) to streamline code by eliminating
updated condition checks in JfrBufferNodeLinkedList and JfrChunkWriter , and removed unnecessary buffer freeing in JfrThreadLocal to
refactor null value handling in BasicAbstractTuple to use a for - each loop to improve code readability and maintainability
refactor LintUtility to utilize InputResource for reading linter configurations from a file instead of a file path to improve resource handling and enhance
replaced direct calls to updateBackgrounds ( ) with post ( Runnable ) in AppsContainerView . java to ensure background updates are executed
fix ` oninventorytick ` not be call when the inventory index be null .
added a new case OCELOT _ BABY to PlayerEvents . java to handle the OCELOT _ BABY
[ flink - 20536 ] [ state ] add miss @ publicevolving annotation to state . ttl . config
added null checks for x before setting it in PreparedStatement and Array classes to ensure proper handling of null values and prevent potential NullPointerExceptions
[ java ] add a ` ` describe - all ' ' option to the ` ` describe ' ' command in the ` ` archive tool '
replaced string concatenation with single quotes in append0 method to improve code readability and consistency
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest ` and modified ` directory ` and ` propertiesFile ` to
added a method to remove transaction and block caches and updated imports in BroadTest . java to improve cache management and ensure proper cleanup of transaction
added conditional logic to enable and disable PRIVACY _ MODE channel in AmcrestHandler and DahuaHandler to enhance camera control
removed unnecessary exception declarations from method signatures in BuckConfig and BuildRuleFactoryParams classes to simplify code by eliminating unnecessary exception handling
refactor ChangeLogIterator constructor to accept a list of ChangeSetFilters as a parameter to enhance flexibility by allowing multiple ChangeSetFilters to
added exception handling for guest exceptions in PolyglotLauncher . java to improve error management and provide better error feedback
fix : use system property instead of env var for option _ out _ tracking
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization processes
refactor spacing logic in SpacesVisitor . java to use dropParentUntil for better clarity to improve code readability and maintainability by
# 113 - enh : add servercache . copy ( true ) ( # 113 )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify behavior when a hidden border is present
replaced ` ActionGraph ` with ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and updated method calls to use ` Target
updated KUCoinExchange to replace LIVE _ URI with PROD _ URI and added logging for host exception handling to improve clarity and
refactor resource path handling and improve search path formatting in SpringResourceAccessor . java to enhance code readability and maintain consistency in resource path formatting
updated unit strings in SmartHomeUnitsTest to use " µ g / m ³ " instead of " μ W
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure
deleted the Tls12SocketFactory . java file to the functionality was no longer needed in the project
refactor TexBibEntriesResolver to streamline entry processing and improve clarity to enhance code readability and maintainability by reducing
added a method to check if Robolectric is in legacy mode to enable testing of legacy resources based on the runtime environment
added a conditional check for FirebirdDatabase in DoubleType . java to return " DOUBLE PRECISION " for Firebird databases to ensure compatibility with
added null checks for ` dataSource ` and ` transactionManager ` before assignment to prevent potential NullPointerExceptions when ` dataSource ` is null
added a new package - info . java file for the unittest stubs package to provide package - level documentation for the sandbox functionality
updated command from " www . google . com " to " ping - c5 127.0 . 0.1 " and modified test timeouts
# 113 - enh : add try - with - resources for ebeanserver _ savealltest
updated TermScorer instantiation to conditionally use FREQS or NONE based on score mode to ensure that FREQS is set only when
added null checks for metric updates in DataflowMetrics and updated jobMetrics setting in DataflowMetricsTest to improve robustness by preventing NullPointerException
server : fix search for vm in account with no nic
refactor DynamicPartitionPruner to utilize a new method for retrieving ObjectInspector for column expressions to improve code readability and maintainability by
added a method to remove build artifacts from the ArtifactFilesystem and corresponding tests in ActionExecutionStep to facilitate the removal of build artifacts
added row selection logic in ThrustCurveMotorSelectionPanel . java to ensure the correct row is set based on the selection state
replaced assertThrows ( ArrayStoreException ) with assertThrowsArrayStoreException ( ) for array exception handling to improve code clarity and maintainability by
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added environmentName property and user agent handling in HttpClientBuilder and HttpClientConfiguration classes to enhance user agent configuration flexibility based on environment
replaced direct session creation with a dedicated ` computeIfAbsent ` method in ` MemorySessionStore ` to improve session management by encapsulating session creation
updated assertions in IssueTest . java and Reporter . java to include an additional parameter and changed the results type from String to Object to improve data
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5545 .
feat ( activation ) : send interactionendevent when an activation request fails
updated calculations in GraphApplet . java and added an overridden method to improve code clarity and ensure proper rendering of the sin graph
added updateSnapshotRadius method to RecentsView and updated its implementation in TaskView to ensure consistent behavior of snapshot radius updates across task views
added logging for swagger generation and updated revision setting in StaticMicroserviceVersions . java to improve traceability of swagger generation and ensure correct instance revision
change the return type of the put methods from void to int in ArrayMap . java to enable retrieval of the index for the put operation
updated KafkaContainerCluster to set startup timeout and streamlined brokers handling to improve reliability and clarity of container startup process
do n ' t try to send message back if we ca n ' t try to send it back
updated header check logic in StaticServerHttpHeadersWriter to handle cases where headers already exist to ensure that headers are not written with the same case
added package access check before loading the listener class in EventListenerList . java to ensure that the listener type is valid before proceeding with class loading
added a custom ListView adapter and updated the onCreateView method in ApplicationsFragment . java to enhance the user interface by allowing users to
updated applyIcon method parameters and added null checks in KeyboardQuickSwitchTaskView . java to enhance null safety and prevent potential NullPointerExceptions
refactor DownloadStateCursor to extend Closeable and use try - with - resources for resource management to ensure proper resource management and prevent potential memory leak
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 579 . add
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursor
refactor DataInputStreamWithTimeout to use Future for polling functionality and improve readability to enhance code clarity and ensure proper handling of input stream int
added a new ENABLED _ TS feature in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable
refactor UpgradeCatalog150 . java to improve code structure to enhance maintainability and readability of the upgrade process
renames ` createTestNet3 ` to ` createOldTestNet ` and updated related methods across multiple files to improve clarity and consistency
do n ' t update option object if there be only one geolocation
updated onboarding preferences handling in AppsDividerView and added nullability annotation in ActivityContext to improve code clarity and prevent potential NullPointerException
replaced Apache Commons IO with Apache Solr ' s BufferedIndexOutput and added error handling for closing the HdfsIndexOutput to improve performance
pdfbox - 4892 : do n ' t create a rectangle if the path iterator return a complete clippingpath
removed synchronization around the localAddress assignment in SocketChannelImpl . java to simplify the code by eliminating unnecessary synchronization
refactor row addition logic in TemplateTransformer to use a new ` addToRow ` method to improve code readability and maintainability by encapsulating
added a method ` isWindows ( ) ` to check if the operating system is Windows and modified file renaming logic to ensure proper handling of file
replaced the use of ALPHABET _ STRING with a CHECK _ DIGIT _ STRING in Code39Reader . java and Code39Writer .
added a boolean flag to check if the executed type has unexpected values before writing to the content builder to improve handling of unexpected values and ensure correct
refactor the handling of stored fields in IndexingChain . java to improve clarity and structure to enhance code readability and maintainability by
fix ( sql ) : fix bug in intervalutils . parsefloorpartialtimestamp ( )
refactor stacktrace assignment logic in LwjglCanvas . java to simplify conditional logic for better readability and maintainability
corrected a typo in the description of the storage API URL in AbstractGCSProcessor . java to improve clarity and consistency in the
replaced ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve synchronization to ensure that the
changed the default value of DirContext . DEFAULT from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure
updated the FaultTolerantChunkProcessor and related classes to utilize a filterCount variable instead of a size value to improve clarity and
updated method signatures and imports in FileWithTabs . java and T4994049 . java , and added file handling methods in T4
replaced multiple conditional checks for WindowsTerminal with a static assume statement in ConsoleReaderTest . java to improve code readability and maintainability by
remove unnecessary check for isAdmin in getfeedbacksessionsaction
adjusted the calculation of newSelection and adjusted the condition for currentPageCol in AllAppsView . java to correct the logic for determining if the
bugfix # 20729 , remove unused threadinfo . initialize ( )
added null checks and improved connection handling in DbConnectionDialog and ExportPanel to enhance robustness and prevent potential NullPointerExceptions during database connection
replaced private final variable ` writeBufferSize ` with a static final variable ` WRITE _ BUFFER _ SIZE ` in the ` Writer ` class to
refactor segment size calculation in DocumentsWriter and add a test for no documents index to improve code clarity and ensure correct size calculation for
added a check for the presence of a ' dvert ' field in the mesh structure before validating it to ensure that only valid mesh data is
refactor FileDisplayActivity to improve code structure to enhance maintainability and readability of the code
updated UnsupportedOperationException to fill in stack trace instead of throwing it directly to improve error handling by avoiding unnecessary stack trace elements
change the calculation of label height to use a stream - based approach to improve accuracy of line height calculation
replaced the singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility by allowing
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 567 . this
updated the ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ` and added a null check for ` parentSpanId ` to
renamed the method ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig ( ) `
updated the substring method call in TestSqlEntityProcessorDelta . java to use the second element of the doc string to ensure correct parsing of country
modified caching logic in Cache . java to improve performance and efficiency of cache operations
rename variable ` e ` to ` ev ` and update scope setting in ` ResourceSetRegistrationEndpoint . java ` to improve code clarity and
modified the ` doBefore ` method to include a ` false ` parameter and adjusted searcher initialization in ` TestUnifiedHighlighterTermVec .
added JFrame and JTextArea functionality to GcodeTable with a scroll pane to facilitate
updated the connect timeout constant from WEBAPP _ CONNECT _ TIMEOUT to cfg . getConnectTimeout ( ) to ensure the correct timeout value is util
updated multiple Java files to improve type safety and clarity to enhance code readability and maintainability by standardizing type declarations
refactor TestMediaService class for improved clarity to enhance maintainability and readability of the code
added a new constant for the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in Messages . java to provide a
added a new file MarketsPrintTool . java that includes methods for listing fiat and crypto currency details to provide functionality for printing market currency
fix ( s3control ) : improve error message when modify http request with illegal character in account id
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration functionality for enhanced security management
refactor ServerSpanThreadBinder class for improved readability to enhance maintainability and clarity of the codebase
updated user pointer retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified the
updated the field names in Csv2Shape from " Location " to " the _ geom " and " number " to improve clarity and consistency
updated gas calculation from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve code clarity and
refactor Parameters class to improve code structure to enhance maintainability and readability of the code
added a method to ignore null values in the piePlot to improve data handling by preventing null values from being processed
refactor the loading logic in ResourceBundle to streamline the loading process and ensure proper thread management to improve code readability and maintainability while ensuring
pdfbox - 4892 : fix typo , a suggest by valerybokov
use @ allowedduringediting instead of @ allowedduringediting in accelerateableaction
added a userModified flag to the LoginSamlAuthenticationProvider class to indicate that the user has been modified
added a new file TestSealedObjectNull . java to test the behavior of SealedObject with null cipher to ensure that unseal
replaced the ` onOpen ` method with ` setResponse ` and ` succeeded ` methods in ` ConnectPromise ` and ` WebSocketClientConnection `
added a static final Set < Material > SNOW in BlockEventListener . java to ensure compatibility with server version 1.17 and improve event handling
added an ` id ` parameter to the ` CryptsyPublicTrade ` constructor and modified ` CryptsyAdapters ` to use it to
added error handling and closing of the synchronized MSC connection to ensure proper resource management and prevent potential memory leaks
updated the seed calculation to use a Random instance instead of a current current time if the seedString is empty to improve randomness and prevent potential
added a new device profile " Nexus 5 " to the device profiles list to support the Nexus 5 device in the application
3 . x : fix flowable . refcount ( ) and flowable . takeuntil ( ) in flowablerefcount and flowable
replace type . newInstance ( ) with ReflectUtil . newInstance ( ) in SynthContext . java to utilize ReflectUtil for instantiating Syn
added a new token type ` WHITESPACE _ AROUND _ TEXTUAL _ OP ` and updated formatting logic to handle it to enhance the formatting
added checks for file existence and length before processing in SaveTask . java and created new test cases in SaveAndLoadTaskTest . java to
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during concurrent operations
log4j2 - 1349 add support for mutablelogevent in smtpmanager . add ( logevent )
replace LengthLike with NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure proper handling of negative padding values
removed redundant calls to createContext ( ) in multiple resource classes to simplify context creation logic for better readability and maintainability
refactor exception handling logic in MethodIRBuilder and add a findRealHandler method in SootWorldBuilder to improve code clarity and ensure
updated error message formatting in JUnitRunner and AndroidPlatformTarget for clarity to improve readability and provide clearer guidance on build tools
reduced the cache size from maxMemory to maxMemory / 8 to optimize memory usage for improved performance
updated condition in InvocationStageTrace . java to include start = = 0 and modified the JSON structure in TestInvocationPublishModelFactory . java to
added error handling for loading KeyStore instance in ProvKeyManagerFactorySpi . java to ensure fallback to a default KeyStore instance when the input is null
updated the port handling in UpstreamCheckUtilsTest to use a local port instead of a hardcoded port value to improve flexibility in server
ticket # 269 : fix bug where max panel dim be not update correctly .
added conditional checks for OpenGL shader extensions in GLRenderer . java to ensure proper handling of maximum shader storage blocks based on available OpenGL capabilities
refactor PopulatorContext class to improve code structure to enhance maintainability and readability of the code
do n ' t send saveall notification if the project do n ' t match the data
added character encoding handling for JSON output in ZQLJobManager to ensure consistent character encoding across different operating systems
added a check for length > 0 before checking if the last argument is an instance of Table to ensure that the argument is valid before proceeding
replaced hardcoded string values with a constant in the FakeOSSOHeaderDecoder class to improve maintainability and reduce redundancy in header
added @ Deprecated annotations and modified option descriptions in GenerateJavaSources . java , Config . java , and JavaGeneratorMojo . java to mark
removed debug log messages related to Apache Derby driver class access to improve error reporting for version checks
[ hotfix ] [ test ] add timeout to the ksession # fireallrules
replace ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by reducing
updated the conditional logic for setting ` liquibase . hub . mode ` to check if ` hubConfiguration . getLiquibaseHub
added new version constants for IBM and OpenJ9 VM in Constants . java and a corresponding test in TestDDRExtensionGeneral . java
updated font handling in FontFamily . java and added a new DebugFonts . java file to improve clarity of font requests and facil
updated import statements in ALPNNegotiationTest . java and NegotiatingServerConnectionFactory . java , and added HTTP _ 1 _ 1
added RateControl import and set RateControl to No _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable rate control for
added a new file Test6741426 . java that defines a JComboBox and JTextField with a Nimbus Look and Feel
update error message in CsrfAwareEntryPointAndDeniedHandlerTest to include exception message to improve clarity of error reporting for better debugging
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure that madeManagedDir and madeExternalDir
added package declaration for S3CopyObjectRequest . java to organize code under the relevant package for better organization
refactor category setup methods to remove accentColor parameter and streamline title setting logic to simplify code and improve maintainability by reducing redundancy
update error message in TemporaryFolderUsageTest to include fileAtRoot instead of ' / temp1 ' to improve clarity of error reporting for
updated TypeInformation usage for MAP _ TYPE _ INFORMATION and COLLECTION _ TYPE _ INFORMATION in MappingMongoConverter . java to use ClassType
allow empty or null address to be add to the clientconfig ( # 11345 )
added a new certificate entry " keynectisrootca [ jdk ] " to the VerifyCACerts . java file to enhance certificate
change return type of compute methods from void to int in ConvertedMap , CompiledPipeline , and JrubyMemoryReadClientExtTest to enable
added a conditional check before setting the mode and adjusted the model ' s armed state in ModeToggleMenu . java to ensure the mode is
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
added unit tests for FinalizerInfo and HeapInfo in FinalizerInfoTest . java and HeapInfoTest . java to ensure proper initialization and
camel - 14263 : camel - core - optimize route cache by use doonnext instead of map .
refactor issuance handling logic in BurningManService . java to improve clarity and maintainability to enhance code readability and
refactor StringSubject class to improve readability to enhance maintainability and ease of understanding for future developers
increased the size of the longData array from 1000000 to 1000 and added an @ Ignore annotation to the BatchValidateSignContractTest class
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
replace " @ " with " from : " in the saveRecentQuery method call to ensure consistent query formatting by removing the " from : "
removed a conditional check for forRebalance in SimulatorDiscoverer . java to simplify the code by eliminating unnecessary conditional checks
added an ` importAccount ` method to ` YubiKeyAccountRegistryEndpoint ` and a corresponding test in ` YubiKeyAccountRegistryEndpoint
updated shader program calls in ShaderManagerLwjgl and FontMaterialProducer to use " tex " instead of " texture " to ensure
added null checks for ` cnt ` in ` paintOnTopLoop ` and adjusted safe area settings in ` SideMenuBar ` and ` Tool
refactor AbiWriterProtocol to improve code structure to enhance maintainability and readability of the code
added a null check for subName before assigning the caption in HierarchyBase . java to ensure that the caption is only set when subName
change the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to ensure
added null check for ` sim ` before accessing ` getSimulatedData ( ) ` and improved variable names in ` CustomExpression . java
replaced the private method ` requestBlindVoteListFromNetwork ` with a call to ` missingDataRequestService . sendRepublishRequest
added a new test method ` testCase4 ` to ` PostgresTest . java ` for testing PostgreSQL functionality to ensure proper functionality and reli
updated substring methods in SubtitleUtils and RemoteUtil to use single quotes instead of double quotes to improve code readability and maintain consistency in string
updated line separators in DefaultJavaPrettyPrinter to use a constant for better readability to improve code maintainability and clarity by centralizing line
truffle / truffle : use atomicrefs . atomicreferencefieldupdater instead of atomicreferences . atomicreference .
added checks to exclude specific queries in SimpleFacets . java and included a null check for getFilters in SimpleFacetsTest . java to ensure
refactor thing building logic to handle Bridge and BridgeImpl types to improve type safety and maintainability of the code
replace printHelp ( ) with error ( ) in Ktab . java to provide clearer error messages for unknown commands
added a check for the existence of the output file in ANGLELoader . java to ensure that the output file is only returned if it
camel - 14263 : camel - xml - bind - date - converter now support both + and - to - date format
added assertions to verify that a specific post is not null and implemented a query for fetching by a specific slug to ensure that a valid post is
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added null checks for ` Database
added a static import for SimpleClientHttpRequestFactory and set connection and read timeouts for HTTP requests to improve request handling and resource management in the client
updated SourceTest . java to improve file path handling and added assertions for better clarity to enhance test reliability and ensure correctness of file
remove graalvm . version system property ( graalvm . version be no longer use )
added validity checks for access token and refresh token validity in ClientAdminBootstrap to ensure proper configuration of access token and refresh token validity settings
updated the return statement to retrieve the Android API version using Options . v ( ) . android _ api _ version ( ) to ensure compatibility with
refactor constructors and variable names in PropertyPlaceholderHelper . java for consistency and clarity to improve code readability and maintainability
updated the organization of the organizational text in the Resources . java file to correct the formatting of the description for better readability and usability
replaced Thread . sleep with CountDownLatch and added synchronization for collection processing in ZkSolrClientTest . java to improve thread safety and
added import for BigInteger and added it to simpleTypes in MongoMappingContext . java to support BigInteger data type handling in MongoDB mapping
added a condition to check if the button text matches the view before displaying the toast to ensure the toast is only displayed when the button text matches
added a condition to check if MEncoder is not out of sync when disableMc0AndNoskip is true to ensure proper synchronization
increased the default event loop thread count from 10 to 15 in ConfigurationProperties . java and corresponding test in ConfigurationPropertiesTest . java to
changed access modifiers of several classes and methods from abstract to protected in CountMin4 , IncrementalResetCountMin4 , PeriodicResetCount
added a method to retrieve the file float source for a schema field and created a new test class for sorting functionality to enhance the functionality of the
updated the FetcherException message from " Invalid URL " to " Connection error " to provide clearer context about the error related to connection issues
added source attribute handling for event time and type in OpenRocketSaver . java and modified FlightDataBranchHandler . java to include
changed the visibility of the check method from private to protected final in ShapeRenderer . java to allow subclasses to access and override the method for better
added synchronization handling for SynchronizeFileOperation in FileActivity to improve user feedback when synchronization fails
updated the URI generation in ThumbnailsCacheManager to use a new preview image format and encoded the remote path to improve image resizing functionality and
added a check for initialization and null check for the " cn1 $ infinite " client property to prevent potential NullPointerExceptions during execution
updated the initialization of the total variable and added a calculation for value in IntHashSet . java to ensure the total value accurately reflects the
added a check for ` locked ` before updating ` feedUpdateService . updateEntry ` to log an error if the lock timeout occurs to improve
refactor conditional checks for ` who ` assignment in ` SolarisAclFileAttributeView . java ` and ` Misc . java
refactored the creation of a tree using an array of edges instead of a list to simplify the code and improve readability by reducing
added IOUtils - based resource cleanup in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix bibtex parse comment with special character ( x0d and x0a )
added strict parameter handling in Main . java and corresponding tests in MainTest . java to ensure that unknown arguments are ignored when strict mode is enabled
add support for alwaysinvalidconstraint in custom validator ( fixes # 269 )
camel - 14284 : camel - http - add http4 support to the verifier . thanks to benjamin for the
added a call to waitForThingsToLevelOut in TestCloudPivotFacet . java to allow for more time for tests to complete before proceed
removed redundant length checks for Integer and Long in UBJsonWriter . java to simplify the code and improve readability
refactor ApplicationTest class to improve test structure to enhance maintainability and readability of the test code
replaced String details with StringBuffer for better performance to improve performance and readability of string concatenation
refactor Type enum to RoboType across multiple files to improve consistency and clarity in naming conventions
[ java ] return ` ` abort ' ' instead of ` ` continue ' ' when dispatch be complete .
added cache key and lookup key handling in EntityProcessorBase and updated related test cases in TestCachedSqlEntityProcessor to improve cache management and ensure
added a new file PutfieldError . java that demonstrates that IncompatibleClassChangeError is thrown as expected to ensure that the
camel - 15836 - camel - aws : do not try to connect to public region if the host be already in the private to public
add log for memtable flush limits in Memtable . java and modify related conditions in Memtable . java to improve traceability of memtable
replaced instances of ` Space . build ( ` ` , emptyList ( ) ) ` with ` single _ space ` across multiple files to standard
[ java ] remove deprecated method ` encodedLength ( ) ` from flyweight . java .
refactor TestMethodResultMapBuilder to improve code structure to enhance maintainability and readability of the test code
added handling for " java . lang . Integer " in FindNullDeref . java to improve error handling for NumberFormatException , IllegalArgumentException , and
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated return statements in mmm Utils . java to return 1 " m " and h " h " instead of " % s " to improve
updated conditional checks for DeepShortcutView in Utilities . java and FloatingIconView . java to improve handling of DeepShortcutView instances and ensure
updated JwtIssuerValidator to use Object instead of String and added a predicate for issuer values to enhance type safety and improve validation logic for JWT claims
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
added a new configuration class ` CoverageConfig ` and modified ` CoverageController ` to use it to conditionally load the ` ProjectData ` class
added a conditional check before registering the sticky event in ThumbnailView . java to ensure that the sticky event is only registered once to avoid
added ASCII - only check for string normalization in NormalizerBase . java to ensure only valid ASCII characters are processed in normalization processes
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added assertions to validate SQL update failures in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that update Statistics SQL fails correctly and
( chore ) camel - cometd : replace contexttestsupport with junit4 in test
added support for OK attribute in the HtmlTag class and updated related tests to ensure proper handling of OK attributes in the HTML structure
added a line break tag to the HTML output in HtmlCoreReport . java to ensure proper formatting of line breaks in the output
updated ramBytesUsed calculation to include a null check for scores to ensure accurate memory usage estimation when scores are not null
added a new ` StringHolder ` class and a ` StringHolderTypeAdapter ` to handle custom serialization and deserialization of ` StringHolder ` to
set extra data from mining parameters in MergeCoordinator and add a test for it to ensure that the correct extra data is used from mining
added a dynamic number of arguments for file parsing and output file handling in DependencyParser . java to improve flexibility by allowing dynamic configuration of file
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the code
renamed variable ` configedThreshold ` to ` configuredThreshold ` and updated its usage in ` DefaultMigrationAddressComparator . java ` , and
updated method parameter names from ' part ' to ' partOrList ' in RestClientRequest and RestClientRequestImpl classes to improve clarity
[ jbrules - 3684 ] add statistic resource to twitterbootstrap to make it easy to use .
simplified the basicCategory method in SpanishTreebankLanguagePack by removing unnecessary regex pattern matching to improve code clarity and maintainability
hhh - 14263 deprecate abstractentityloader . load ( ) and deprecate abstractentityloader . loadbyuniquekey ( )
hbase - 25836 regionserverflushtableproceduremanager # flushall ( ) and regionserversnapshotmanager # flushall ( )
added a check to set the size if both width and height are zero in the PGraphicsJava2D class to ensure proper initialization of the
removed duplicate calls to fillPool ( ) in HikariPool . java to improve code clarity and maintainability
removed assureMatchVersion ( ) method calls and initialized luceneMatchVersion to Version . LATEST in multiple filter factory classes to ensure
fix : executablemethodwriter . isabstract ( ) and executablemethodwriter . isinterface ( ) do n ' t return abstract . fix #
added a conditional check before matching the DRLLexer . COMMA in DRLParser . java to ensure proper handling of COMMA input during parsing
refactor multiple subject classes for consistency and clarity to improve maintainability and readability of the codebase
added a validation check for payloadLength in WsFrameBase . java to ensure proper error handling for invalid payload lengths
moved PublishSubscribeChannel and related classes from ` channel . config ` to ` dispatcher ` and updated package structure to improve organization and clarity
updated various classes to use ` Long ` instead of ` String ` for ` executionId ` across multiple files to allow for more flexible execution
add width and height dimensions to the digest in ImageProcessor . java to ensure the digest accurately reflects the specified dimensions for image processing
removed logging of the overlay version in SolrConfig and added import statements in SolrConfigHandler to streamline version logging and improve code clarity
increased the delayUntil value in FileSyncAdapter from 24 hours to 3 hours to avoid too many automatic synchronizations
updated the assignment of afterConversionTime in SegmentV1V2ToV3FormatConverterTest . java to ensure the correct timestamp is retrieved
replaced ` fullPath ` with ` path ` in ` addPathToMTree ` method calls and added a result check to improve code clarity
updated DefaultPackageScanClassResolver to handle file URLs with plus characters and improved logging messages to enhance URL processing accuracy and provide clearer error
[ hotfix ] [ table - common ] [ table - common ] [ table - common ] introduce timestampextractorutils to handle composite type
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` for LDAP authentication to provide a structured way to retrieve
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
update minSdk annotation from LOLLIPOP to KITKAT in ShadowAlarmManager . java to align with the latest Android API changes
refactor dialog handling in GenericViewFragment to use SimpleFormDialog instead of Dialogs to improve code readability and maintainability by utilizing
added a new test method ` testNewput ( ) ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPI
updated the collection name reference in the stream method and modified the ReadDbObjectCallback instantiation to ensure the correct collection name is used for the callback
refactor zoom calculation and setting logic in MapOverviewImageMouseHandler . java to improve zoom handling accuracy and ensure proper type casting for zoom values
added similarity support to KNearestNeighborClassifier and updated related classes to enhance classification accuracy and support for LMDirichlet similarity
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query creation and improve code clarity
updated the method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to retrieve the reason
updated package - info . java files in mmm and ppp packages to improve documentation clarity and maintainability
added MTU request handling in ShadowBluetoothGattTest and implemented the onMtuChanged method in ShadowBluetoothGatt to
refactor the creation of ` ServletInputStream ` to ` createServletOutputStream ` in ` TestPayloadNameRequestWrapper . java ` to improve code
added logging functionality for UnsatisfiedLinkError in VoskSTTService to improve error handling and debugging for unsatisfied link errors
change mProcessingChains from HashMap to ConcurrentHashMap to ensure thread - safe access to mProcessingChains across multiple threads
updated Japanese and Chinese resource files to include " all " and " grouped " descriptions to improve clarity and organization of resource files
updated size condition in JDBCTypeMapping and adjusted corresponding test cases in JDBCTypeMappingTest to ensure correct handling of size values and improve test coverage
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player operations
refactor accessibility handling in TerminalView . java to utilize Pattern and Matcher for control codes and state testing to improve code readability and
added support for the ` SIDE _ NAVIGATION ` behavior in the ` MenuBar ` and ` SideMenuBar ` classes to
removed the import of Disposable and modified the subscribe statement in PoloniexManualExample . java , and added disconnect handling in Wamp
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator and its corresponding test to ensure that the energy limit is greater than
refactor URL handling in PostmanJsonBuilder to use ` javaUrl ` instead of ` url1 ` to improve clarity and consistency in
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to allow dynamic configuration of the namespace prefix reference for
refactor assertions in TestRange to use a static final constant for ONE _ MINUTE _ MILLIS and introduce a new method isSameDay to
added security checks and server restart logic in BasicAuthIntegrationTest . java and initialized securityData in ZkStateReader . java to ensure proper
added a PriceFeed parameter to the TradesChartsViewModel constructor and modified the TradesChartsViewModel constructor to accept a Price
updated replication configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a single configuration
updated variable names and logic for the ` end ` variable in ` NativeString . java ` to improve clarity and ensure proper handling of negative
added file download functionality to FileDataStorageManager to enable file download functionality in the application
[ java ] set the length of the RandomAccessFile in MappedRawLog . java to ensure the channel is properly set before use to prevent potential
added a method to check if the registry is running and implemented a retry mechanism for file deletion to improve error handling and ensure proper deletion of files
added method call to start loading of component presets in Quick3dMain and TextureTest to ensure proper initialization of component presets during tests
added @ SuppressWarnings ( " rawtypes " ) annotations to multiple classes to suppress unchecked warnings and improve code clarity
added null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
added a check to prevent setting the isolation level to TRANSACTION _ READ _ COMMITTED or TRANSACTION _ SERIALIZABLE based on transaction settings to
added transaction attribute handling in ` AbstractStepFactoryBean ` , ` ItemOrientedStep ` , and ` SkipLimitStepFactoryBean `
replaced ` CasClient ` with ` DirectCasClient ` and refactored the ` CasManagementSecurityInterceptor ` class to enhance code
added functionality to open the ` menu _ add _ category ` menu in ` ListFragment ` and updated the navigation drawer in ` NavigationDrawerFragment
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated its implementation in ` File
pdfbox - 4892 : fix classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge to use TypedValue for text size instead of a fixed size to improve flexibility in text
added a check for fact validity before modifying the frame to ensure that the frame is valid before proceeding with modification
refactor multiple Java files related to DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser to improve code organization and
replace direct return of spans with a new ArrayList instance to ensure that the spans list is immutable before returning
removed unnecessary locking mechanism and improved readability in Liquibase . java to enhance code clarity and maintainability by reducing unnecessary
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker and TestInstanceCacheChecker to use this new setter method to
refactor foreign key and index creation to use a formatted string for foreign key and index names to improve readability and maintainability of the code
camel - 15836 - camel - aws2 - s3 : add unit test base on user forum issue
refactored the method for retrieving user transactions in BitstampAccountService and added error handling in BitstampAccountServiceRaw to improve code cl
added error handling around retrieving the component instance in BlueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException
change the return type of the push ( ) method from void to boolean in multiple classes to allow for more flexible control over the push operation
refactor LegacyAddressTest to use BufferedReader for reading data from a file instead of a hardcoded string to improve test reliability and readability
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other packages
added a snackbar for push notification setup and refactored related code in NotificationsActivity to improve user experience by providing a clearer
added a debug log statement and modified the logic for closing the channel in NettyAsyncHttpProvider . java to improve error handling and ensure proper
updated null and empty checks for ` noWarnAttribute ` , ` validDaysAttribute ` , and ` expireTime ` in ` LdapPasswordPolicy
refactor DefaultAnnotationEngine and Stubber classes for improved readability to enhance maintainability and clarity of the codebase
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840
nifi - 1744 : add timezone property to nifi - about and nifi - flow
updated assertions and improved range splitting logic in Splitter . java and StorageService . java to enhance code clarity and ensure correct handling of
no effective change - code cleanup - remove unnecessary try - catch
added synchronization around the activeCircuits addition in CircuitManagerImpl . java to ensure thread safety when adding active circuits
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling for shader uniform fetching failures
[ flume - 2203 ] [ runtime ] move sink and source getter / setter from sinkrunner to sourcerunner
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for authentication failures
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance performance and maintainability of the focus traversal process
changed method return types from double to int in AlgoFunctionFreehand , GeoFunction , GeoLocus , and GeoLocus classes to
removed unnecessary whitespace in the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor database connection handling to use a try - finally block for better resource management to ensure proper resource management and avoid potential memory leaks
bump default tl version for jdk 17 and jdk 17 +
corrected a typo in the exception message from " labels buffer is full " to " metadata buffer is full " to improve clarity of
corrected the spelling of " mCurrentAudioQueuePosition " and adjusted audio stop logic accordingly to improve code readability and ensure correct audio playback
removed unnecessary debug logging statements in HttpConnection . java to simplify code and improve readability
added @ Transient annotation to JpaPersistentPropertyImpl and implemented isTransient method in JpaPersistentPropertyImplUnitTests to enable handling of transient
updated repository version assertions and added new test cases for HDP - 2.2 . 0 in UpgradeResourceProviderTest . java to ensure correct
truffle : make eval method return object rather than symbol .
changed access modifier of ` isBinaryType ` method from private to public and modified output stream handling in ` Proxy . java ` to enhance access
updated the value of TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from " hive . tez
refactored the findProblem method in JavaEditor and removed priority constants from JavaProblem to simplify the code and improve clarity by elimin
replaced the constant ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` and ` BloomFilterHandler `
refactor TableWriterTest to use a constant for line separator instead of hardcoded newline characters to improve code readability and maintainability by avoid
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future development
added an ability to check if the particle effect owns a texture before proceeding with rendering to improve performance by avoiding unnecessary rendering operations
added LDAP authentication properties in HiveConf . java to enhance configuration options for LDAP authentication
doc ( regen ) : update doc for datacatalog ( # 1 )
refactor input method management in DetailActivity to use Context for better clarity to improve code readability and maintainability by reducing dependency on
added a test for converting a map of primitive to object to a map of primitive to object in DataTableTypeRegistryTableConverterTest to ensure correct
updated size calculation in TestFileSystem . java from 100x500 to 10x50 and added a file deletion for the memFS : fsMem
update error message for Rule M2 . 4 exception in ContentTypeManager . java to clarify that resources are properly closed before throwing a bug
refactor ` dropSequences ` method to be abstract and implement it in multiple database - related classes to ensure proper implementation of sequence dropping functionality
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
updated the assignment of the field variable ' f ' in DocumentBuilder . java to ensure the field is properly initialized before use
bug fix : only set style and parent style if map be active
added a test method to verify the upsert behavior after a non - existing object returns the inserted object to ensure that the upsert operation correctly handles non
hbase - 1649 addendum replace ( + ) and ( + ) with ( + ) ( addendum )
added a method to record launch statistics and updated broadcast intent handling in the Launcher class to improve tracking of launch actions and ensure proper logging for
refactor graphics handling in JavaSEPort . java to use a Graphics2D for rendering the image to improve performance by reducing unnecessary rendering
update instructorfeedbackresultspagedata : instructorfeedbackresultspagedata : add current team to receive team without response
modified the inventory ID generation logic to handle zero values and added a test for inventory ID generation to ensure that the player ' s inventory id is
added a conditional check for the presence of a found configuration in ConfigDescriptionRegistry . java to ensure proper termination of the loop when a configuration is
added null check for returnType in ReloadableJava parser visitors and updated method calls accordingly to ensure proper handling of return types and improve code clarity
refactor TileMapRenderer to handle null blended tiles more effectively to improve robustness by avoiding potential NullPointerExceptions during initialization
removed specific sunClasses from the Probe . java file to streamline the codebase by eliminating unused dependencies
modified the getArea method to remove unnecessary whitespace and added logic to calculate the difference between last and first segments to improve code readability and
simplified the initialization of ` lockOnSync ` and updated the variable name from ` currentThrottleRate ` to ` key ` to improve
pipe : add handler for modifyspeed and add base class to pipeeventbus
increased the TIMEOUT parameter in the ZkController instantiation from 1000 to TIMEOUT to allow more time for the ZkController to become available
added a test for passcode with client parameters in TokenMvcMockTests . java to ensure proper functionality of OAuth2 token handling with client parameters
added constructors for LengthFilter , KeepWordFilter , and CharArraySet in TestRandomChains . java to ensure proper handling of broken offsets in
removed the JUnit Ignore import from RandomPlaneTest . java to clean up the test code by eliminating unnecessary dependencies
fix ( griffin ) : store unsigned long value in llvm _ 64bitvastart
replaced direct pointer creation with a call to ` getInstance ` in ` btCollisionObjectArray ` and ` btRigidBody ` to
added a new method to retrieve the copyright year and updated the OPENROCKET _ URL and AboutDialog to include copyright information to enhance the
add jetclientinstanceimpl . getdistributedobjects ( ) method to jetclientinstanceimpl and add jetclientinstanceimpltest
added debug print statements to FinSet and MassCalculatorTest classes to improve visibility into the FinSet and MassCalculator components
updated memory semaphore initialization to use maxMemory instead of totalMemory to improve memory management by using the maximum available memory
updated exception handling in StandaloneSchemaFetcher and modified method parameter name in CreateAlignedTimeSeriesPlan to improve error handling clarity and consistency in
update GENESIS _ OUTPUT _ PREFIX from " Co - founder - " to " Bisq co - founder
updated the input string construction and added exception handling for big integers in JsonLoaderTest . java to improve code clarity and ensure proper exception management
updated the constraint for tableSize from 1 to 0x40000000 in ObjectSet . java to accommodate larger table sizes and improve error
updated import statements and added null and empty check for DATA _ SCALE in ColumnSnapshotGenerator . java to improve code clarity and prevent potential null
removed ` @ AddToRuleKey ` annotations from private fields in ` AppleTest . java ` to simplify field access and improve readability
added security checks and improved content handling in FileHelper and TextHelper classes to enhance robustness and prevent security exceptions during query operations
added a new constant StyleWithMultipleAttributes in R . java and implemented multiple attribute resolution tests in ShadowThemeTest . java to enhance theme attribute
updated sheet name comparison in HSSFWorkbook . java and added multiple sheet creation in TestHSSFWorkbook . java to ensure correct sheet
updated the tint variable from primaryColor to elementColor in ManageAccountsActivity . java to ensure the correct color is used for elements in the
added a null check for replyHandler in DefaultEventBus and simplified path resolution in DefaultPlatformManager to enhance robustness by preventing potential NullPointerException
added binary collation configuration to MariaDbDbmsType , MySqlDbmsType , DbmsType , and AbstractDbmsType classes to
added a new method ` whenType ` to return an ` Optional < T > ` based on the type of ` Tree ` to enhance type
added a method to retrieve the user view destination for an item in the ItemLauncher class to improve code readability and maintainability by encapsulating
replaced Response . ok ( Status . OK ) with Response . temporaryRedirect ( URI . create ( applicationSettingsService . get ( ) .
[ flink - 20613 ] [ kinesis ] improve error message when the deserialization schema be not serializable
refactor multiple Java classes for improved consistency and clarity to enhance maintainability and readability of the codebase
added a try - finally block around the ZkStateReader initialization and closed the zkClient in LeaderElectionTest . java to ensure proper resource
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify
replaced direct calls to ` _ endPoint . fill ( buffer ) ` with a new ` read ( EndPoint endPoint , Buffer buffer ) `
replaced instances of BufferUtil . allocate ( length ) with ByteBuffer . allocate ( length ) in ABCase1 _ 2 . java to ensure
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success or failure to improve the handling of stream uploads by providing a clear
replaced direct calls to ` m1 . getOrder ( ) ` with ` Integer . compare ( m1 . addOrder , m2 .
added a new file PicOfDayAppWidget . java to handle Picasso image loading for the PicOfDayApp widget to enable
server : fix npe in internalloadbalancervmmanagerimpl when service offering uuid be invalid
updated import statements and modified join condition handling in HiveParserCalcitePlanner . java to improve compatibility with Hive ' s join logic and enhance
[ hotfix ] [ table - planner - blink ] deprecate some method that be use in a future release .
added username and password options to the remote JMX connector in NodeToolCmd . java to enhance security by allowing users to access the remote jmx
removed duplicate initialization of BytesRef in Stemmer . java to improve code clarity and reduce redundancy
updated conditions for applying widget information and caching in AppsCustomizePagedView . java to ensure correct handling of widget information based on the
ggb - 3d : make thumbnail view visible for 3d , not 3d
updated rotation calculations in GcodeRenderer . java to ensure proper range of - 180 to prevent invalid rotation values
added a new workspace option to the OptionEnum and updated its usage in TerminalClient to allow users to specify a workspace directory for the application
updated the file path for the options file from " options . apt " to " options . html " to ensure the test uses the correct
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and ensure proper handling of Poll
refactor OAuthConfirmationController to use a model instead of a model attribute for improved model handling to enhance code clarity and maintainability by
refactor session handling in HibernateIT to use an eventually assertion to improve readability and ensure correctness of session management
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event handling logic
refactor MultiPaintEventTest class to improve code readability to enhance maintainability and facilitate future development
removed the ' final ' modifier from the ' mNewScale ' variable in WorkspaceStateTransitionAnimation . java to ensure the variable is initialized correctly
refactor SyncFactory class to improve code structure to enhance maintainability and readability of the code
added support for unique key fields in LukeRequestHandler to enhance data integrity by ensuring unique keys are correctly stored
added round border color support and updated document filters in BorderEditor , EditableResources , and Border classes to enhance the visual appearance of border
make assertion not part of compilation when parse binaryparserexception .
[ hotfix ] [ test ] replace slotpoolimpl with slotpool
added logging statements to ` GatewayRSocket ` , ` GatewaySocketAcceptor ` , and modified return values in ` PingPongApp `
added a toolbar menu item click listener to the RecentChatFragment to notify users when an action is clicked under construction to enhance user experience by
updated InfoDropTarget and UninstallDropTarget classes to extend UninstallDropTarget and implement startDetailsActivityForInfo method to enhance the drop
renamed methods and variables from ` getTail ` to ` push ` and ` pop ` in multiple classes to improve clarity and consistency in
updated URLs in CommonsApplication from " test . wikipedia . org / test " to " commons . wikimedia . org / common
refactor index handling in ` Stmt . java ` by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and
replaced calls to ` Collections . sort ( ) ` with ` postProcessors ` , ` configurers ` , ` filters ` , and
added date and time patterns to the FormatData _ hr _ HR . java file to support additional date and time formats in the application
added a call to clear focus on the clicked view in DetailFragment . java to ensure the clicked view remains unintended for user interaction
updated spinner selection logic in DescriptionsAdapter and removed unnecessary language handling in SpinnerLanguagesAdapter to improve user experience by ensuring the spinner reflects
updated time zone names to use " WSDT " instead of " WSST " across multiple files to ensure consistency and accuracy in time zone identification
added native methods for global and weak registration in FastGetField . java and refactored accessFields methods in FastGetField . java to
added default value handling for UNION and NULL types in ReflectData . java and updated related tests in TestReflect . java to ensure correct handling of
increased the timeout value for SedaBlockWhenFullTest from 300 to 1000 milliseconds to allow more time for the Seda
added a null check before remapping the RClass in ResourceMerger to avoid potential NullPointerExceptions when the RClass is not initialized
added constructors to multiple HapiFhirDialect and HapiFhirMariaDBDialect classes to ensure proper initialization of the dialect
camel - 8080 : added explicit connection close header to http producer to make it easy to close the http connection .
updated socket timeout from 60000 seconds to 120000 seconds to allow more time for distributed operations to complete successfully
added an assertion to verify the existence of final _ price _ cts in the reservation table to ensure that the reservation count is correctly computed when
refactor Parser class to improve code structure to enhance maintainability and readability of the code
refactor CasProcessingFilter class to improve code structure to enhance maintainability and readability of the code
replace direct calls to ` getFirstChild ( ) ` with ` getFirstElementChild ( ) . getFirstElementChild ( ) ` in multiple parser classes to
added support for removing enums in LookUpStrategyResolver and created a new TestdataObjectEnum class to improve the functionality of the LookUpStrategy
[ java ] wait for cluster node to shut down to prevent memory leak .
changed log level from warn to info for cached beans in ELContextCleaner . java to provide clearer guidance on the purpose of the
added a content type of " application / octet - stream " in WebdavEntry . java to ensure proper handling of octet - stream data in
added a getQueueSize method to LazyTraceThreadPoolTaskExecutor and created unit tests for its functionality to enable retrieval of the queue size for asynchronous tracing
fix distanceop to skip point that do n ' t intersect the line
corrected the spelling of " required " to " requiredLabel " in the AbstractUITag class to improve code readability and maintain
added a call to ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` and removed the ` next ( ) ` method
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated its usage in ` VectorUtil ` to improve path
added ` getHeight ( ) ` and ` getWidth ( ) ` methods to the ` BaseMonochromeBitmapSource ` class to provide access to
added validation to ensure the polygon contains at least three points and updated localVertices assignment logic to ensure that the polygon contains at least three points and
replaced instances of ` ObjectMapper ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to utilize a more efficient
added null check for coeff before initializing coeffSquarefree to avoid potential NullPointerException when coeff is null
updated ExternalNameRecord to handle both unsigned and compressed Unicode names based on the multibyte flag to ensure correct handling of Unicode names in record
corrected the spelling of " QUEUE " to " TOPIC " in the description of the JMS Destination to ensure consistency and accuracy in the
added a boolean flag ` returnLoginPrompts ` and adjusted the excluded prompts in ` LoginInfoEndpoint ` to allow users to return specific
updated listener removal logic to use a lambda expression to improve readability and maintainability of listener removal logic
added a case for the action toggle spin in PieChartActivity to enable toggling of chart rotation during toggling
cloudstack - 4892 : fix the case where copy _ vhd _ to _ secondarystorage return null
hbase - 25836 skip normalizing table that have a namespace with quota ( chunhui )
added a resize method to the pressure float array and modified import statements to improve memory management and ensure proper resizing of the pressure array
added a new method ` propertyValuesOf ` to ` PropertySupport ` for retrieving property values from an array to enhance flexibility in property value
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to temporarily disable the test due to blocking PRs
fix the hopperhock ' s bounding box for item that do n ' t match the item ' s bounding box . close # 2
added authentication dialog functionality to SsoWebViewClient to enhance user experience by allowing users to authenticate via SAML
refactor TestStressIndexing2 to improve term handling and add deleteDoc and deleteByQuery methods to enhance test reliability and clarity by
[ flink - 22559 ] [ test ] ignore flink - 22559 test
replaced ` get ` method with ` computeIfAbsent ` for storing ` typeList ` and updated variable assignments for ` csize ` and `
added a configuration option to accept single values as an array in DefaultEntityMapper to ensure proper handling of single values in JSON processing
added " BE , UK , and SL . " to the log message in VersionChangeLogs . java to include additional localization update details
[ netbeans - 4892 ] make cl . app . categories configurable
modified the visit method in ASTBuilderVisitor to use ` RelExpressionInstanceOf ` instead of ` ExpressionInstanceOf ` and added a new test
nifi - 1744 : add mime type to the flowfile attribute to gethttp
updated provenance handling in BaseHapiFhirDao and added a toProvenance method in ResourceHistoryTable to improve provenance management and ensure
rename ` exitButton ` to ` doneButton ` and update corresponding listener names in ` HelpActivity ` and ` SearchBookContentsActivity ` to
rename NatsConfiguration . java to improve clarity to enhance code readability and maintainability
updated the ` invalidateStalePartition ` method to accept a ` List < PartitionNameWithVersion > ` as a parameter and modified its implementation to
bug 60532 - view result visualizer : use circular fifo instead of unbounded fifo
updated the icon resource from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to enhance the user interface by providing
replaced ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to use ` getLongVolatile
updated test method names in MocksCreationTest . java for consistency and clarity to improve readability and maintainability of the test code
added a new constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator
increased the timeout duration for phaser synchronization from 10 seconds to 30 seconds to allow more time for phaser operations to complete successfully
removed the ` BuildSlaveFinishedStatusEvent ` class and its associated method from ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
cloudstack - 4892 : fix string encode issue in vmwarestoragemanagerimpl
[ euphoria - flink ] add test to deposit workspaceitem without workflow
updated classpath stream processing to use distinct sources to improve clarity and efficiency in processing classpath files
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unnecessary functionality
refactor command - line argument handling in SpecificCompilerTool to use a counter for better readability to improve code clarity and maintainability by
added null check for table and partition before deleting it in HiveMetaStore . java to ensure that temporary partitions are not deleted when the table is
updated asynchronous execution settings and error handling in HiveConf , SQLOperation , and SessionManager classes to improve thread management and provide clearer
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for the service and component names instead of an empty string to improve code readability and maintainability
fix telephony conferencing for sip that do n ' t have a conference .
reload the log tree when there be no change to the model ( # 3809 )
updated return statements in ChannelEndPoint . java to include input and output shutdown conditions to ensure proper handling of socket shutdown scenarios
refactor SetNullableGenerator class for improved readability to enhance maintainability and clarity of the code
camel - 16400 : camel - example - report - incident should use newfile instead of file : / / http : / / localhost
replaced specific imports with a wildcard import and refactored form handling in NettyRoutingFilter and FormIntegrationTests to simplify import statements and
added @ ApiOperation annotation with nickname = " hello " and implemented the hello method in various services to enhance API functionality by allowing nickname to be
modified the ` update ` method signature and modified lifecycle listener handling in ` Lwjgl3Application ` and ` Lwjgl3
updated the FG _ FK color value from 0 , 90 , 0 to 200 to improve the visual appearance of the color in the UI
make the mp3 audio format optional in the sound manager
make secondaryindexmanagertest more robust by use getbuiltindexes ( ) instead of execute ( )
pmd : add ` ` about ' ' and ` ` version ' ' to general preference page
[ hotfix ] [ test ] use optional instead of throwable cause in customserializationitcase
refactor MediaFormatUtil class for improved readability to enhance maintainability and ease of understanding for future developers
added an override method ` isCellEditable ` to ` GeneralTab ` class to provide a way to check if a cell is editable to enhance
added a method to check if unused dependencies are only printed by default to improve user experience by providing a clearer message when no commands are available
added a static integer variable ` tmpCount ` and updated the vscales array from 2.0 to 0.85 in ` VocalTra
updated import statements for BaseScalarUdfTest in multiple test files to ensure correct usage of the BaseScalarUdfTest class across different test
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper hashing and equality checks for authentication details
updated imports and variable types in TestSkeletonControlRefresh . java to use AnimClip and SkinningControl instead of AnimChannel to
rename interface ` NodeFilter ` to ` NodeCountFilter ` in ` NodeUtil . java ` to improve clarity and consistency in naming conventions
updated the condition for checking the size of SYNC _ FETCH _ BATCH _ NUM in the NodeImpl class to ensure that the size of
updated state transition from 365 to 366 and modified string literals in DebugExpressionParser . java to streamline expression parsing and improve clarity in
refactor dependency exclusion logic to use streams for better readability to improve code clarity and maintainability by reducing redundancy
replace the ` tmp ( ) ` method with a ` dst2 ( ) ` method and update the ` lerp ` method signature to
initialize the args array to an empty object to initialize the args array with default values
updated the ` getLinkerArgs ` method to accept ` ImmutableList < String > ` as a parameter and changed ` rustcFlags ` to
[ # 1193 ] fix ui test fail on travis and appveyor
added external DAG name handling in HiveConf and TaskExecutorService , and modified logging in GenericUDTFGetSplits to include external ID to
removed unused import of File in TileAtlas . java to improve code clarity and reduce unnecessary dependencies
do n ' t attempt to write to a closed stream in escapeprocessingoutputstream .
updated the ` validateQuery ` method to accept an additional ` Object . arguments ` parameter to enhance query validation flexibility by allowing more flexible
updated INDEX _ VERSION from 1 to 2 and refactored tree retrieval logic in LuceneExecutor . java to improve indexing functionality and enhance code
[ hotfix ] [ python ] [ test ] add test for default kryo serializer registration
added null check before removing properties in BlueprintConfigurationProcessor and updated test assertions in BlueprintConfigurationProcessorTest to improve robustness by preventing potential NullPointerException
refactor boolean conversion logic in MetaStoreDirectSql . java to use BooleanUtils for better handling of boolean values to improve code clarity and
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user experience by hiding the customization drawer
added a constant for warning keys and updated related logic in TermVectorComponent . java and TermVectorComponentDistributedTest . java to improve code
added conditional logging for optimistic types and modified log message formatting to improve logging clarity and control over logging behavior based on environment settings
refactor Expect class to improve readability to enhance maintainability and ease of understanding for future developers
added UnixSocketConfigurationStrategy to DockerClientFactory and created it to enable unix socket access using Docker to enhance security by allowing unix socket access through
added a new test method ` testEvenLowRateIP ` in ` CloseableDoSFilterTest ` to ` CloseableDoSFilterTest `
camel - 14284 : reactive stream subscriber should not throw an exception if the stream have no active subscription
refactor vectorization methods in Vectorizer and TezCompiler to use TezWork instead of MapRedTask to improve clarity and functionality
added a boolean parameter to the superclass constructor call in StringAppender and LogDivertAppender to enable additional functionality for logging output
added null check for GuiPackage before calling updateCurrentNode ( ) and modifyTestElement ( ) in JMeterTreeModel . java to
sulong : add linkage . isweak ( linkage ) method and declare it in sulong function .
refactor multiple classes including XShareAuto , LoadClassNegative , XCheckJSig , and ReadFromNoaccessArea to improve code organization and
no effective change - add unit test for defaulttransactionthreadlocal
added error handling for invalid operation handles in HiveStatement . java to improve robustness by logging warnings for invalid operation handles
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - aws - secrets - manager - add integration test base on user forum issue
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed the exception message from the response in UserREST . java to simplify error handling by providing a clearer error message
modified the ` fromContent ` method to include a ` subTree ` parameter and modified its implementation to allow for more flexible handling of sub
updated column width calculation in HSSFSheet and added unit tests for column width calculations in TestHSSFSheet to ensure correct column width
added a configPath parameter to the less command invocation to allow configuration of the configPath for less command execution
changed the type of ` tables ` and ` weakAssociations ` from ` Set ` to ` Collection ` in ` DotWriter ` and ` Graph
updated the SSHD container image reference from " @ sha256 " to " 1.0 . 0 " to ensure compatibility with the latest version
agent : do n ' t throw npe if hostid be null
refactor group key generation logic in DefaultGroupKeyGenerator to use BlockSingleValIterator for improved clarity to enhance code readability and
updated testSeekNegative to testSeekingExceptions and modified seek behavior in TestMultiMMap . java to improve error handling for seeking exceptions
refactor BCSiliconRecipes to use Builder for building input sets instead of creating instances to improve code readability and maintainability
rename method from ` put ` to ` putObject ` in ` GraphHopperConfigMixIn . java ` to improve clarity and consistency
updated visibility logic in CellLayout and refactored the onDragExit method to use a dedicated doDragExit method to improve code clarity
refactor ModifyRequestBodyGatewayFilterFactory to use a lambda expression for original body and add a new test for empty body to improve code readability
updated access control checks to include package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder to enhance security by ensuring only public classes
changed log level from warn to trace in LoggingHandler . java from warn to trace in LoggingHandler . java to provide more detailed logging information for
refactor white black list handling in WhiteBlackList . java and add a new test class for wildcard handling in Issue348 . java to
added gallery menu functionality and updated item selection handling in GalleryActivity . java to enhance user experience by allowing users to navigate to a specific gallery attachment
added a static instance variable and modified service building logic in MongoDBServiceFactory to ensure singleton instances are created only once to improve memory efficiency and avoid
added tests to replace boolean true and false with true and false in InlineConstantMutatorTest . java to ensure correct handling of boolean constants in the
added a Blackhole parameter to the decode method in RecordTest . java to improve memory efficiency by using a black hole for decoding operations
fix : update gapic - generator - java with mock service generation fix ( # 130 )
[ knx ] fix npe in dpttest when there be no dpt unit
removed the clear method call from dbManager . getWitnesses ( ) to streamline the code by eliminating unnecessary functionality
[ hotfix ] [ table - planner - blink ] log sqlexception when jdbcpagesink abort
replaced stack property setting with getter and setter methods in NativeError . java to improve flexibility and maintainability of stack management
removed a check for path names starting with " . " in DrillPathFilter . java to simplify the path filtering logic for better readability
corrected the spelling of " onboard " to " autoload " in the ThirdEyeAnomalyApplication and ThirdEye
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before further operations
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to accommodate a more
made ` fThreadGroup ` volatile and refactored related methods in ` Timeout ` , ` TimeoutTest ` , and ` FailOn
removed the ' final ' modifier from the ` getValue ` and ` setValue ` methods in ` ValueResultData ` class to enforce immutability
replaced ` hashCode ( ) ` and ` equals ( ) ` with ` super . hashCode ( ) ` and ` super . equals ( )
removed unnecessary print statement from PushedResourcesTest . java to clean up the code and improve readability
changed method signatures from ` SharedRandomAccessFile ` to ` void ` and removed nullable annotations from ` removeFile ` and ` removeDirectory ` to
updated JDBC driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated principal retrieval and resolution logic in PersonDirectoryPrincipalResolver . java to use a fixed principal ID to ensure that the principal is returned without attributes
changed log level from info to warn in OpenWebNetBridgeHandler . java to reduce log verbosity for better troubleshooting
replaced intHash and longHash methods with a consistent hash method across multiple classes to improve code clarity and maintainability by using a more
added a constructor to ThumbnailGenerationTask in ThumbnailsCacheManager to ensure storageManager is not null and imageViewReference is not null to
updated the loop condition in GroupSelectionQuery . java to include a retry limit of 5 to ensure that the loop does not exceed the specified limit
added a new file ` Bug1933922 . java ` that contains a class for finding program information to address bug # 19339
removed unnecessary parentheses in comparison statements across multiple classes to improve code readability and maintainability
updated character validation condition from 33 to 32 in FileResolver . java to ensure only valid space characters are processed
added a call to ` cmp . requestFocus ( ) ` in ` Display . java ` to request focus to improve user experience by ensuring the
update test data path in InstructorHomePageUiTest . java and introduce new test methods in InstructorHomePageUiTest2 .
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
refactor DetailFragment and MainActivity to streamline message display logic and improve onPause method to enhance code clarity and maintainability by central
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to validate schema queries and fetch with unrelated templates to ensure
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
refactor process execution to use ProcessBuilder instead of direct execution to improve code readability and maintainability by centralizing process creation logic
replaced ` InetAddress . getLocalHost ( ) ` with ` InetAddress . getByName ( " 127.0 . 0.1 " ) ` to
refactor controller and base assignment logic in Metrics . java to use a loop for splitting controllers to improve code readability and maintainability by redu
added assumptions in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to skip tests that do not support build and install to devices on macOS
refactor JVMCIVersionCheck to use a new method getRequiredProperty instead of a static method to improve code readability and maintainability by redu
updated Mockito library version to ensure compatibility with the latest features and improvements
updated TestLargePageUseForAuxMemory . java file to improve performance and maintainability of the test cases
updated the method call in BinaryParser and PlainTextParser to include context for reading bytes and added charset management in ParsingExecutionContextView to enhance
added support for legacy MultiPartFormDataCompliance in HttpConfiguration and created a new MultiPartFormDataCompliance enum to enhance flexibility in handling multipart data
added support for Gradle version 7.2 in GradleDistributionManager to enable compatibility with JDK 17 and above
refactor type addition logic into a separate method ` addType ` in ` DatabaseSnapshot ` and ` SnapshotControl ` to improve code readability and
refactor Term class to improve code structure to enhance maintainability and readability of the code
add null and empty check for runWith in ChangeSet . java to ensure that runWith is not null or empty before proceeding
http : / / issues . apache . org / jira / browse / amq - 4898 - add unit test to verify that
updated multiple classes related to AudioDeviceInfoBuilder , MediaCodecInfoBuilder , NativeInput , ShadowActivityManager , ShadowAsyncTaskLoader , Shadow
pdf417 : fix image binarization with negative pixel value .
updated mTintAmount assignment for better clarity in TaskView . java to improve code readability and maintainability by reducing redundancy
added a new file ` SumZeroAggr . java ` and implemented ` SumZero . java ` for aggregation functions to facilitate
removed " NOT NULL " clause from the SQL function definitions in FirstValueFunctionIT . java and NthValueFunctionIT . java to simplify
hbase - 25815 improve error message for bucketcache allocation failure
added a null check for propName before adding it to roleObject ' s properties to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotation and modified method visibility in StatusBarTouchController . java , modified task removal logic in RecentsView . java
added a stream parameter to the logContainer method in DockerClient . java to keep the stream open indefinitely when logging a Docker container
mvstore : add performance test for mvstore cache
changed LONG type from " L " to " J " in PrimitiveType . java to ensure consistency in data type representation
changed the return type of the ` delegatingApplicationListener ` method from ` DelegatingApplicationListener ` to static to allow the method to be
set the body of the message to null in RestBindingAdvice . java to ensure the message is properly closed after processing
added FileDeletingTasklet and TaskletJobFunctionalTests classes for file deletion functionality to facilitate the deletion of files in a
mow - 129 update size for companion and view for plane companion
refactor code to use local variables for consistency and clarity in BitUtil , Int2IntCounterMap , Int2IntHashMap , and
replaced ` sendEventToTest ` with ` sendStateEventToTest ` and updated related method signatures to use ` int ` for state
added user agent check and improved handling of video thumbnail requests in multiple classes to enhance user experience by ensuring proper handling of video thumbnails based on
update error handling and highlighting logic in ErrorCheckerService . java to improve clarity and functionality when selecting text in the error line
updated layout constraints for the menu button in SideMenuBar to differentiate between top and bottom buttons based on the parent ' s UI manager '
added support for the " libskia " preload option in Skia . java to enhance functionality by allowing the loading of Skia libraries
added a constant for the unittest network ID and returned unitTests ( ) if it exists to facilitate the retrieval of unit tests
added error handling for format arguments in QueryCommand and implemented corresponding tests in QueryCommandIntegrationTest to ensure that invalid format arguments are properly handled and
replaced ` capacity ` and ` isPositionValid ` fields with the ` length ` and ` mask ` variables in ` IntIterator . java
updated the ` walkRuleAndAdd ` method to include ` projectConfig . getSrcRule ( ) ` and modified the ` dependencies ` parameter
[ netbeans - 4892 ] fix source override for class output patch ( # 4893 )
[ java ] remove unnecessary major version check in election .
set default OwnCloud client policy based on SAML authentication status to ensure proper management of the OwnCloud client configuration based on authentication requirements
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure that mappedTableResource is not null when building a ReadBatch
( chore ) camel - jms : remove unnecessary try - catch block
refactor AnonymousAuthenticationFilter to use a deferred context supplier for anonymous authentication to improve clarity and maintainability of the authentication handling logic
modified the removeActor method to include a boolean parameter to control the unfocus behavior of actors in the Group class to allow more flexible control
refactor cloudConfig assignment to use a valid configs string to improve code readability and maintainability by reducing redundancy
added logging functionality to NettyHttpServer and related classes to enhance logging capabilities and improve response handling
refactor multiple classes related to DatumAliases , AbstractParser , Formattable , Formatter , and Parser to improve code organization and maintainability
replaced direct call to ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` in ` CodeDependencies
( chore ) camel - groovyparser : refactored groovy expression into a separate method to improve code readability and
replaced List with Set for resolved artifacts and added debug logging in DefaultPluginManager . java to simplify artifact resolution logic and improve logging clarity
[ hotfix ] make clifrontendparser public for easy access
renamed ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
removed unused storage alias handling in HttpsMessenger . java to streamline code by eliminating unnecessary storage alias resolution
danielwagnerhall : throw a webdriverexception if unable to convert text to response
changed the visibility of the updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the
added new methods for handling resource dropping in Block . java to improve resource management and ensure proper handling of dropping items in server levels
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality by allowing retrieval and retrieval of spatial location calculator
refactor multiple classes related to communication to improve code organization and maintainability across the project
replaced the method ` keySet ( ) . isEmpty ( ) ` with a new ` isEmpty ( ) ` method in ` TreeTrie ` to
updated foreground and background method calls to use parameters r , g , and b instead of a fixed column value to ensure consistent color representation across the
solr - 1770 : do not send fingerprint if solr . disablefingerprint be set to true
changed access modifier of the moveFunds method from private to public in GDAXAccountService . java to allow external access to the method for
refactor MongoTemplate and add test for PersonWithIdPropertyOfTypeUUID in MongoTemplateTests to enhance event handling and ensure proper application context setup
fix collectioncontainer and settransactiontest to work properly
close inputstream in tikacli to avoid memory leak
replaced ApiBag . ExceptionWithErrObject with ApiException in TestCollectionAPIs . java to improve error handling by catching more specific exceptions
removed unnecessary whitespace in OptionsParser . java to improve code readability and maintain consistency
fix typo in instructorfeedbackcopyactiontest . java and instructorfeedbackaddactiontest . java .
[ hotfix ] fix checkstyle violation in externalworkerservice
[ homematic ] remove the step from homematic datapoint ( # 1748 )
updated logging messages and added shared and exclusive lock management in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of logging and
removed duplicate scheduleJobs ( ) calls in BaseSchedulerServiceImpl . java to improve code clarity and maintainability
danielwagnerhall : fix flaky testgettextcontent ( ) for ie
refactor logger management to use ThreadLocal instead of static Deque to improve thread safety and maintainability of logger management
updated FunctionInitializer and FunctionInitializerTest to use Mockito ' s Mockito runner instead of JMockit ' s Mockito to improve test
added handling for primitive types and improved type boxing logic in multiple classes to enhance type safety and ensure correct boxing of primitive types
updated the focus handling logic in RecentsView and removed the initialization of mDigitalWellBeingToast in TaskView to
hbase - 25813 fix testflushfromclient . testallregions ( ) to return all region for a specific table
added logic to clone and save contract details if it exists in cacheTrack to ensure proper handling of contract details during transaction processing
updated balance calculations to use dynamic properties for asset issue fees to ensure accurate balance adjustment based on dynamic properties
added cache clearing functionality and improved cache management in RealisticRenderStrategy . java to enhance performance by reducing redundant cache management and ensuring texture
refactor Raster handling in Blit . java and add a new class Bug7049339 . java for graphics composition to improve code
added support for unselected styles in the Label class and updated string width calculations in DefaultLookAndFeel and DefaultLabel classes to improve text
updated ArrayList initialization to initialize with a default size of 0 and refactored action list size to improve memory management and ensure consistent action list size
removed the ` intflags ` parameter from several methods in ` ShadowApplicationPackageManager ` and ` ShadowUserManager ` to simplify method signatures and
refactor PingRequestHandler to improve code structure to enhance maintainability and readability of the PingRequestHandler class
expose sample _ with _ increasing _ timestamps . mp4 asset uri in androidtestutil , and remove unused import .
[ tradfri ] do n ' t log firmware warning for gateway with old firmware
refactor AjaxElementLocator class to improve code readability to enhance maintainability and facilitate future updates
updated display condition checks in BoxLayout and DefaultLayout classes to include " table - cell " to ensure proper handling of table - cell display in
refactor JsonDecoder to improve token handling and add a new test for reordering fields to enhance code clarity and ensure correct order of fields
blockcache : add removalcause parameter to releaselocation ( ) method
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests during development
added multiple @ Test annotations to DroolsMvelParserTest . java to enhance test coverage for the DroolsMvelParser functionality
added ' final ' modifier to fields in ContextRegisterListener . java to ensure immutability of fields in the ContextRegisterListener class
modified ObjectHashSet to include a cacheIterator parameter and modified iterator initialization logic to improve iterator management and ensure proper initialization of the iterator
added batch bytes handling to SparkReduceRecordHandler and ReduceRecordSource classes and defined a default value in VectorizedRowBatch to improve batch processing
replaced MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE with MODE _ PRIVATE in AppSettings and UpdateUtils to
added logging for close ( ) calls after already close ( ) and abort ( ) method in JdbcProxyGenerator . java to improve error handling and
update workspaceAnim to use mState instead of getState ( ) and setImportantForAccessibility ( true ) to improve animation handling for access
hbase - 11365 protobuflogreader # seektolastgoodposition should be log debug instead of warn
updated scope handling in UaaTokenServices and added a new test case in UaaTokenServicesTests to ensure that the persistRevocable
updated import statements in SchemaRetrievalOptionsBuilderTest . java and added a toString method in AvailableJDBCDrivers . java to improve code clarity and
( chore ) camel - kie - api : create a new interface executablecommand ( # 1307 )
( chore ) camel - itest - jdbc : remove unused jdbctableservice
added padding getter methods to CellLayout and modified bitmap creation logic in Launcher to improve padding calculations based on orientation and ensure proper bitmap scaling
added a conditional check for the length of the StringBuilder before initializing the cands list to avoid potential null pointer exceptions when the StringBuilder is empty
updated ` SamlMetadataUIParserAction ` and ` SamlMetadataController ` to execute actions and added null check for ` flow ` to
added a method to check open LDAP ports in LdapMockMvcTests . java to enhance test coverage for LDAP port connectivity
log4j2 - 1343 set shutdown timeout to 0 for all executorservicedeamons
refactor URL handling in Fetcher . java and HTMLMetaProcessor . java to improve redirect logic and enhance logging clarity to enhance redirect handling
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse
refactor Console initialization to use reflection for Karaf API compatibility to ensure compatibility with old Karaf Console API and improve code clarity
changed the access modifier of the ` getVerticesColors ` method from public to private and modified the logic for retrieving vertex colors based on mesh compatibility
added a filter to exclude timestamped reports directories in the HTMLReportGenerator to exclude specific report directories from the report generation process
renamed test methods from ` testDeviceName _ thenOK ` to ` validateName _ thenDataValidationException ` and updated corresponding test methods to
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to ensure that form errors are properly bound within the adequate context
removed debug print statement from JoglInput . java to clean up the code and improve readability
added a method to allow extraction of private fields in FieldSupport and updated related tests to allow it to control the behavior of field values based on
added a replacement for the device name in WebDataHandler . java to ensure that the device name is correctly referenced in the data processing
replaced the direct instantiation of ` Lookup ` with a conditional check for ` lookupConstructor ` in ` Platform . java ` to improve flexibility
deprecated the ` weights ` method and updated its usage to ` weightsByDouble ` in ` ZParams ` and ` SortedSetCommandsTest ` to
migrated the ` writeCustomHTML ` method to include the ` Database ` parameter across multiple writer classes to enhance functionality by allowing the use
updated key retrieval logic in BTreeMap . java to improve null safety and correct type casting to enhance code robustness and prevent potential NullPointerExceptions
added handling for BalanceInsufficientException and updated status handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to improve error
do n ' t write zero to the file if profiler . heap . zerofile be false
replaced print statements with sendMessage methods in ChangeSet . java and Main . java to streamline UI messages and improve code clarity
updated buffer size from 14 to 13 and modified generic record usage in HortonworksEncodedSchemaReferenceStrategy and HortonworksEncodedSchema
added imports for ChunkListener , ItemProcessListener , and ItemReadListener in multiple batch - related classes to enhance batch processing capabilities in the application
refactor code formatting and improve readability in AbstractProviderModule . java and ClusterResourceProvider . java to enhance code clarity and maintainability
removed unnecessary calls to document . get ( " title " ) in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser classes to
updated test cases in Test7005594 . java to improve test coverage and reliability
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code organization to enhance maintainability and readability of the code
server : do n ' t allow vm to map to an ip address if it ' s not available
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and added a new ` MCOptionListener ` to enhance
refactor ` iteratesOverSequence ` and ` iteratesOver ` methods to use ` Iterable < T > ` instead of ` Object ` to improve
camel - 14263 : camel - http - add support for multiple header name = value = > value = > value = > value =
added assertions to verify the number of SQL queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the SQL server correctly retrieves and
added a new LargeValueFormatter class and updated value formatting in BarChartActivityMultiDataset , BarLineChartBase , and Chart classes to
refactor CommentsParser to use a constant INNOCUOS _ CHAR and modify character handling logic to improve code readability and maintainability by
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to eliminate unnecessary warnings related to incompatible argument types
corrected a typo in the printLir method call in TraceLinearScanLifetimeAnalysisPhase . java to ensure consistency in method naming
added a TODO comment to the NullAssertionValidator class to clarify the purpose of the generated method stub
added import for RuleKeyAppendable and applied it to the DefaultRuleKeyBuilderFactory to enhance rule key generation for better integration with Buck
added setup and teardown methods to PmsConfiguration , DLNAMediaInfoTest , and SearchRequestHandlerTest classes to ensure the system profile
refactor thread factory creation in TestcontainersDockerCmdExecFactory . java to use a new factory method to improve code readability and maintainability
refactor HttpChannelOverHTTP and HttpReceiverOverHTTP to use a method for retrieving messages in to improve code readability and maintainability by
set the " accept " attribute of the el to " image / * " in ImageFileInputDialog . java to ensure proper handling of image
refactor ElasticIndexWriter and TestElasticIndexWriter to replace NodeBuilder with PreBuiltTransportClient and Node instances to improve code clarity and
added detailed witness class information to the ForkController to improve debugging by providing more context about the witnesses
added a new test class NullPointerAndEmptyArrayTest for testing null pointer and empty URL arrays to ensure that the application correctly handles null URLs
added a method to find configured generated source paths using dependencies in BaseIjModuleRule and updated references in IjProjectBuckConfig to
added a new method ` constructWildcards ` to ` UaaStringUtils ` for handling wildcard patterns with any character delimiters to enhance wildcard parsing functionality
added validation checks for aliasToWork and TableScanOperator aliases in Vectorizer . java to ensure that map work has valid aliases to work with
updated import statements and modified the exception handling in WeatherQueryTest . java to ensure proper usage of MockitoJUnitRunner and improve error
added error handling for setting values in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting fails
replaced specific Java imports with a wildcard import and modified the ` getLangs ` method to return a set of language strings to simplify import statements
reformatted import statements in LazyTraceScheduledThreadPoolExecutorTests . java to improve code readability and maintainability
hbase - 25836 make take and disable table snapshot handler thread - safe
added a new method ` createPlatformIsNullCall ` to ` RuntimeMethods ` and refactored exit statement creation in ` ImplementFinallyVia
added a test for modifying the HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the explorer correctly updates the HTTP RPC endpoint
added a ` isSuspended ` boolean field and modified thread state handling in ` Thread . java ` and ` Test _ Thread . java ` to
updated Javadoc visitations in Java11JavadocVisitor and ReloadableJava8JavadocVisitor to use Hidden , See , and SerialData instead of Since
( chore ) camel - spring - remoting : fix check for non - empty camelcontextid
removed multiple redundant @ Override annotations in security - related classes to streamline code and improve readability by eliminating unnecessary overrides
added module import handling in Java2TypeScriptAdapter and updated test assertions in EnumTests to improve enum handling and ensure tests reflect the correct module
update language string from XMLConstants . W3C _ XML _ SCHEMA _ NS _ URI to " http : / / www . w3
added notification description handling in BubbleTextView . java to enhance user experience by providing appropriate translations based on badge information
added MouseWheelListener to handle mouse wheel movement in TestMouseWheelScroll . java to enable proper handling of wheel rotation in the scroll
added closing of PDDocument instances in VisualTester . java and implemented a new test for positioning - absolute in VisualRegressionTest .
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegrationTests
updated VacuumController , VacuumFrame , VacuumView , VacuumView , Vacu
removed conditional currency assignment for DSH and QTM in BitfinexAdapters . java to simplify code and improve readability by eliminating unnecessary
updated JsonFormat . java to use ImmutableSet for default value handling and improved field printing logic to enhance code clarity and ensure default values are
added handling for array and enum types in JacksonXmlFormatMapper to ensure proper serialization of Byte arrays in Jackson XML format
refactor VirtualThread class to improve clarity and structure to enhance code readability and maintainability by using more descriptive variable names
updated DirectoryTaxonomyWriter to include prefixLen parameter in termDocsEnum method calls and modified cache implementation in TestDirectoryTaxonomyWriter to improve performance by
refactor VetoableChangeSupport class to improve code structure to enhance maintainability and readability of the code
adjusted the calculation of the Y - coordinate in BrowserContentPane . java to correct the vertical positioning by subtracting 1 from the height
pdfbox - 4892 : remove ` ` throw invalidpasswordexception ' ' from method signature , a suggest by valerybokov
added unit tests for setting short and long support messages in ShadowDevicePolicyManagerTest . java to ensure proper handling of SecurityException for setting device policy
ggb - 2178 make sure we do n ' t close the menu if there be an online help
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced direct sleep calls with ThreadHelper ' s waitUntil method in BackendInitializerHelper and TerminalClient , and updated controller state checks in Code
updated version validation logic in SwingStartup . java to check for release status and exception to improve accuracy in determining the latest version based on release status
added a ` includeGeneratedFileComment ` property and its getter / setter in ` DbMigrationConfig ` , modified ` MigrationXmlWriter ` to
updated usage instructions in multiple classes to include " | * > " instead of " < player > " to enhance command usability by allowing players
deleted ` BadHdfsThreadsFilter . java ` and ` BadZookeeperThreadsFilter . java ` files to remove unused thread filters to stream
updated method calls from ` nameVariableName ` to ` optionName ` in ` OptionProcessor . java ` to improve clarity and consistency in method naming
added a condition to check if the parallel classes are equal in TestNGContentHandler . java to ensure proper handling of parallel classes in the test
http : / / issues . apache . org / jira / browse / amq - 4748 - fix enableactingmaster to
refactor : remove static import of enums in ctmethodimpl . java ( # 2398 )
added serialVersionUID fields to multiple Java classes to ensure proper serialization compatibility across different versions
renamed DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve clarity and consistency in naming conventions
updated ShibbolethCompatiblePersistentIdGenerator to accept a separator parameter and added a new method to DigestUtils to enhance flexibility in hashing
added null check for system actions enabled parameter in Parameters . java and modified conditional check in TestAction . java to enhance robustness by preventing
added a new file ` Person . java ` containing a private ` Person ` class with a private ` name ` field to provide a structure for
refactored the start method signature and variable assignments in Gossiper . java and StorageService . java to simplify the method signature and
updated string comparison in AbstractClient . java to ensure case - insensitive comparison of column labels
added assertions to verify metadata retrieval for timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest . java and updated segmentMetadata to include
updated color imports from ` java . awt . Color ` to ` net . sf . openrocket . util . Color ` and set the
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure
defaultbeancontext : use getannotationtypesbytereotype instead of getannotationnamesbytereotype ( scope . class )
danielwagnerhall : fix double overflow issue on android . http : / / github . com / codenameone /
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added a custom JNDI lookup for the JTA TransactionSynchronizationRegistry to enhance flexibility by allowing custom JNDI location for synchronization registry instances
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to streamline the code by eliminating unnecessary functionality
replace ` enabledCiphers ` with ` result ` for better clarity to improve code readability and maintainability by using a more descriptive
[ bigquery - barton ] fix bigquery timestamp conversion to java . time . temporal
replaced repeated null checks with a single requireNonNull method in Identifiers . java and DatabaseConnector . java to simplify code and improve readability by
change the parameter type of the ` coerceValueForInputObjectType ` method from ` Map < String , Object > ` to ` Map < String
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that row and column indices do not exceed the table '
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure the selection panel is properly visible
[ java ] unnecessarylocalbeforereturn - fix checkstyle violation
replaced the initialization of ` scriptEngineManager ` with a direct instance of ` scriptEngine ` to simplify the code and improve readability by
simplified calculations for correlation in EuclideanDistanceSimilarity . java and updated corresponding tests in EuclideanDistanceSimilarityTest . java to
do n ' t backup sstables when we get an incrementally backup
refactor the relativize method to include checks for non - empty paths and add unit tests for the relativize method to ensure that
updated column size and decimal digits handling in ColumnSnapshotGenerator and added formatting in DataType to ensure proper handling of null values and improve code readability
[ hotfix ] [ test ] do n ' t delete temporary file in test
updated method from ` toHexString ` to ` toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure proper conversion of bytes to
renamed ErrorHandlerController and Error403Controller to Error403Controller and added new classes Error404Controller and Error403Controller to improve
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and Windows
enable the ` $ collection . toArray ( new $ clazz [ ] { } ) ` trigger pattern for ` $ collection . toArray ( new $
fixed - concurrentmodificationexception in connectionpool cause by concurrentmodificationexception
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` in multiple classes to clarify the purpose of the converter for
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to include classLoader to improve clarity of error messages for better debugging
added writerException and readerException fields and modified thread join times in LargeStreamletTest . java to improve exception handling and ensure proper thread
updated MainActivity to adjust the current item based on page types and added logic to manage extra pages based on user preferences to enhance user experience by
added error handling for broken Gaussian image rendering in AndroidImplementation . java to improve robustness by distinguishing between unsupported Gaussian versions
added @ SuppressSubnodes annotation and updated string concatenation in BaseParser . java and ImplicitActionsConverter . java to improve code readability and maintain
pdfbox - 4892 : use try - with - resources to prevent resource leak
deleted the file TestDocInverterPerFieldErrorInfo . java to the test file is no longer needed for the project
added a shell command to input key event 82 in AbstractLauncherUiTest and modified the assertion in LauncherInstrumentation to ensure keyboard input functionality
added filenameToUrl mapping and JSON file serialization for filenameToUrl in FileDumper . java to improve filename handling and support for JSON output in
bugfix # 206252 , do n ' t wait for profiler server ' s result notified flag
refactor TextureHelper methods to use Image instead of Texture for loading features to improve code clarity and maintainability by standardizing image loading and
updated context ID assertion from " application : " to " application " in multiple test files to ensure correct identification of the application context in tests
updated the ISBN randomizer ID from " 9781797745008 " to " 9781797845005 " to
updated notification sound setting to use a ringtone instead of a default URI to enhance flexibility by allowing users to specify a notification ringt
added a method to report loop count in RootNode to enable tracking of loop count in the application
added a conditional check for repository type before setting the current stack version in FinalizeUpgradeAction . java and modified cluster entity merging in ClusterImpl .
portableipdaoimpl . listbyregionidandstatesearch : use entity ( ) . getregionid ( ) instead of range
removed redundant line opening the streamManager in ItemOrientedStep . java to streamManager is properly closed during execution
added a new file ` CountedLoopProblem . java ` that implements a random integer generation using a Random to validate the behavior of counting loop
add miss ` nativemethod ` parameter to ` executecompiledmethod ` , ` executecompiledmethodVarargs ` , and ` hotspotinstalledcode `
graalvmconfig : fix pending _ failed _ speculation _ offset for jlong
replaced instances of ` TransformerSupplier ` with ` ValueTransformerWithKeySupplier ` in ` KafkaStreamsTracing ` and removed ` TransformerSupplier `
added a method to convert a list of points to a string representation in FeedbackConstantSumQuestionDetails . java and updated test cases in Feed
remove call to dynamiccolors . applyToactivitiesifavailable ( ) in BaseApplication . java to streamline code by eliminating unnecessary method call
added thread management and stack dumping functionality in CloseRace . java to improve error handling and debugging for child threads gracefully
updated the return statement in IntPointField . java to use intValue ( ) instead of val and added multiple assertions in TestPointFields . java
updated arc size calculation to use a fraction of 0.1 instead of a hardcoded value to improve flexibility in arc size calculation for better
updated the width of the veryHighWidth from 768 to 640 in the AddAndScaleMultiImage and ImageBorderCuttingWizard classes
renamed ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` and updated related configuration methods to clarify the purpose of the
refactor waitForState and waitForLauncherCondition methods in AbstractLauncherUiTest and WorkProfileTest classes to improve clarity and maintainability of state
added import statements for CasCoreConfiguration and CasCoreHttpConfiguration across multiple test files to enhance configuration management and ensure compatibility with the latest CAS library
updated volume reading logic to use a byte array for reading long values to improve performance and readability by using a more efficient DataIO method
camel - 8080 : camel - http - do not log httpresponsecode if it ' s not set
refactor classpath handling in DeclarativeHintsParser to use builder pattern for boot and system classpath to improve code clarity and maintainability by
added a new class MediaScriptScopeProvider to manage audio and voice managers to provide a scope provider for managing media elements within the application
added methods to retrieve and set the layer manager in AnimComposer and updated related components in AnimEvent to improve layer management functionality and ensure
added a check to return early if the queue is empty in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to
added null checks for mapOp and mapWork in MapRecordProcessor . java and refactored exception handling in TezProcessor . java to
refactor ` center ` and ` center2D ` variables in ` CylinderRegion ` to use ` Vector2D ` instead of
replaced usage exception assertion with an ExpectedException rule in TestBadUseCases . java to improve test clarity and maintainability by using a
modified the way subqueries are handled in QueryExecutorImpl . java and added a test for multi - execution in StatementTest . java to improve
[ netbeans - 4892 ] only customize security env if it ' s set to true .
added rctag = android% 20app% 20edit to the list of GET requests in ReviewInterface . java to ensure that the recent
refactor Test class to improve code structure to enhance maintainability and readability of the test code
updated PBEKeySpec constructor to use keyLength instead of blkSize to improve clarity by using a more descriptive variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to ` writeSectionDefinition ( ) ` in ` RtfDocumentHeader . java ` to ensure proper handling of section definitions in the
added a null check for current location information and improved location accuracy checks in GpsLoggingService . java to avoid potential null pointer exceptions and
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 269 )
replace boolean rootNameFn and sourceFilterFn with Object references and add hash code generation to improve memory management and prevent potential memory leaks
simplified the addition of elements to ` data ` and ` added ` in ` AllAppsList . java ` to improve code readability
refactored SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and removed ThemedPreferenceActivity to simplify code structure and
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose
removed unnecessary whitespace in assertRootArcs ( ) method to improve code readability and maintain consistency
added an assertion to verify that the security policy is a file before proceeding to ensure that the security policy is correctly validated before proceeding
camel - 14263 : camel - olingo2 - allow to override the getconfiguration ( ) method in olingo2component
increased sleep duration from 1000 milliseconds to 5000 milliseconds in RecoveryZkTest . java to allow for more time for recovery operations to complete
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception handling
[ xmpp ] add option to publish xmppimage via http .
camel - 14263 : camel - netty - do n ' t throw an exception if channel be n ' t available from the pool
updated URL _ TEMPLATE regex pattern and added unit tests for valid host names in BalancedClickhouseDataSource to improve URL parsing accuracy and ensure correct
added a system property to disable JSR - 199 compiler in FragmentActivator . java to ensure compatibility with Java ' s JSR -199
added support for null string values in CSVRecordReader and its configuration to enable flexible handling of null values in CSV data formats
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to skip processing of LiquibaseServices
replaced ` J . CompilationUnit ` with ` JavaSourceFile ` in ` VariableNameUtils . java ` to ensure correct cursor handling for Java
updated event topics handling in ItemCommandTriggerHandler and ItemStateTriggerHandler to use a new variable for itemName and command topics to improve clarity
corrected the spelling of " BeanCurrentlyInCreationException " to " BeanCreationException " in TraceWebAutoConfiguration . java to
solr - 10399 : add zkcredentialsprovider to solrxmlconfig and deprecate it
mana tablet now have a durability bar , not a mana
added a copy of identifier collection to mCurrentCallEvent in P25P2DecoderState . java to ensure the current call event has the correct
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter in TestRandomChains . java to clean up the code
updated the thread pool executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to simplify the
updated the GeneratedCode class to improve code structure to enhance maintainability and readability of the code
added a parameter to the assertNotNull method in TypeDefinitionRegistry . java to ensure that the definition is properly initialized before usage
added visibility setting for the share - with - me icon in LocalFileListAdapter . java to ensure that the share - with - me icon is
updated URLs from " http " to " https " in multiple classes to ensure compatibility with the latest Bootstrap API changes
added @ NotNull annotation and improved null handling in RouterFilter and RouterServerListFilter classes to enhance code reliability by ensuring headers is not
enhanced assertion in TestIndexWriterMergePolicy to include detailed information about the document count and segment count to improve debugging by providing insight into
added @ Deprecated annotation to multiple Java classes to indicate that these classes are outdated and should not be used in new development
added null check for ` context ` in ` CrawlerSessionManagerValve ` and implemented context aware tests in ` TestCrawlerSessionManagerValve
added a security check before retrieving the JspApplicationContext instance to ensure that the application is accessed from a privileged context if security is enabled
added bounds checking for component length and updated length calculation logic in RocketComponentConfig . java to ensure accurate length calculation based on component positioning
added singleton dependency injection for NonceService in OpenIDAuthenticationProviderModule to ensure NonceService is bound to a single scope for better dependency management
update child links in FileWrapper to use a lambda expression to improve readability and maintainability of the code
refactor method signatures and parameters in SpringCloudPlugin . java for improved clarity and consistency to enhance code readability and maintainability by
increased the delay duration from 100ms to 500ms in RetrievalBlockingMessageStoreTests . java to allow for more time for publishing
added a boolean flag ` mShiftCodesAlwaysOverride ` to control shift code behavior in ` AnyKeyboard . java ` to allow customization of
[ hotfix ] [ runtime ] do n ' t try to determine whether or not the active node be a leader .
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer . java to use isReference ( ) instead of getName ( ) to improve clarity and
updated the ` newInstance ` method to accept a ` noop ` parameter instead of an ` AbstractCommandOptions ` parameter to provide a default behavior for
added a delay of 3000 milliseconds to the exception handling in TestListenTCPRecord . java to improve responsiveness by allowing more time for exception
replaced the original arguments array assignment with a new array assignment in the PatchExtensionMethod . java file to ensure the original arguments are restored after
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances and improved error handling to enhance performance and cl
int - 1188 , int - 1188 , int - 1188 , int - 1188 , int - 118
added x509PublishUrl and related getter and setter methods to ClientKeyPublisherMapping and JwkViewResolver to support the publishing of X509
refactor reader assignment logic in QueryComponent . java to improve clarity and maintainability of the code
added two new Double2Parser implementations for " max " and " min " in ValueSourceParser to enhance functionality for handling maximum and minimum values
simplified the return statement in the Container class to improve code readability and maintainability
removed unused variables and import statements in Highlighter , SpanGradientFormatter , and TokenSources classes to improve code clarity and reduce unnecessary dependencies
cloudstack - 4892 : add user uuid to the user table in the configuration server
added ConditionalOnWebApplication annotation and modified flowBuilderServices handling in CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to
updated the maximum number of prepared transactions and refactored table name generation to use a constant for better readability to improve code maintainability and
simplified the logic for setting the LAF look and feel in DefaultPlatform . java to improve code readability and maintainability by
replaced calls to ` getDesiredStateEntity ( ) ` with ` desiredStateEntity ` in ` ServiceComponentHostImpl . java `
simplified calculation of dX and left variables in FloatingTaskView . java to improve code readability and maintainability by reducing
added a condition to exit the loop if the tab is not running and updated the status line in NavigationShareTab to improve user experience by providing
updated the threadId variable in CPUCallGraphBuilder to use the current thread identifier directly to simplify the code and improve clarity by directly using the
douniaberrada : use the default toolbar for perspective , not the default for toolbar .
added NetworkAddressChangeListener interface and updated log messages in HomekitImpl . java to enhance network address change handling and improve logging clarity
updated lease handling in TestHDFSEventSinkOnMiniCluster to use getLeaseRenewalTime instead of getLeaseByPath to improve
updated ` prefixHeader ` and ` linkStyle ` to ` Optional . absent ( ) ` in ` CxxLibraryDescription . java ` to
added null check for the exception message in ExceptionHandlerRegistryFactory and implemented a test for handling null IOException with null messages to improve robustness by
changed the ` nextID ` variable to be ` volatile ` and modified the ` getSize ` method to return the maximum document ID to ensure thread
http : / / issues . apache . org / jira / browse / amq - 4898 - wait for message to be receive
added HasSourcePath interface implementation to several classes and implemented getPath ( ) and getPathResolver ( ) methods to enhance the functionality of the Arg class
removed StringBuffer instantiation and simplified IllegalArgumentException message formatting to simplify code and improve readability by eliminating unnecessary string concatenation
added custom index field name to facet fields in OrdinalMappingAtomicReader and updated tests accordingly to enhance functionality by allowing custom index field names
updated the calculation of millis based on seconds and nanos in Instant . java and added a data provider for testing epoch milliseconds in TestInstant . java
replaced calls to ` boundShader . getAttribute ( vb . getBufferType ( ) ) ` with ` getAttribute ( vb . getBufferType ( )
added functionality to block update scripts based on the app ' s state to improve user experience by preventing unnecessary script updates
added a new file ` TestCMoveLimitType . java ` with methods for handling character buffer limits to facilitate testing of character
removed redundant calls to resetTemporalAttributes ( ) and added a method to check if the recorder type is contained in the configuration to streamline metadata
( chore ) camel - sql - parser : fix super ( ) constructor in parseexception
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java and AudioSystem
refactor console initialization logic into a separate method for clarity and encapsulation to improve code readability and maintainability by encapsulating console logic
refactor token validation logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
added EOFException handling in Http11InputBuffer . java to improve error handling and provide clearer feedback on eof errors
added unit tests for group member deletion and deletion behavior in DefaultGroupProvider to ensure proper functionality and error handling for non - existent group members
removed unnecessary new Object [ ] objects from multiple classes to simplify code and improve readability
deleted the V2ReplicationProtocol . java file to the replication protocol is no longer needed for PostgreSQL protocol version 2
replaced ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` with ` ImmutableSortedSet < SourcePath > compileTimeClasspathSource
added new classes ` ConstructorArgsDemo ` , ` FinalDemo ` , and ` StrictDemo ` , and modified ` StupidFinal `
[ geot - 6769 ] directtemplatefeaturecollectionfactory now properly close iterator .
update response count assertion in WriteResponseHandler . java to include 2 * DatabaseDescriptor . getReplicationFactor ( ) to ensure correct validation of response
added a null check for the index number in the condition to ensure that the item ' s dateCreated is not null before proceeding to avoid
renamed parameter ` areAnchestorsShown ` to ` areAncestorsShown ` and introduced a new method ` returnSelfIfOtherParent
added a check to return early if the application width is less than 12 to optimize performance by avoiding unnecessary processing when the application width is less
updated equality check in ChangeLogParameters . java and added a new test in ChangeLogParametersTest . java to ensure correct comparison of changeLog
changed the ` loggers ` variable from static to final in ` LogFactory . java ` to enforce immutability of the ` loggers ` map
updated return statement to retrieve the base plot object instead of the original plot to ensure the method returns the correct base plot instance
do n ' t log error if upload dir do not exist or have be delete externally
added a boolean parameter to ` ServerGenerator ` , ` HttpTransportOverFCGI ` , ` ServerFCGIConnection ` , and ` Fast
added a condition to check if the comment length is greater than zero in the multi - line comment to ensure that the comment is not empty before
added file type management functionality in BuckModule . java to remove associated file types based on their default extensions to ensure that file types are properly
replaced multiple instances of ` ToLong ` and ` ToInt ` with a wildcard import in ` ComposedUtil . java ` to simplify
added a new constant ` RTM _ OS _ ERROR ` and updated error messages in ` TestUseRTMLockingOptionOnUnsupportedCPU
reformatted code for consistency and clarity in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code structure to enhance maintainability and readability of the Player class
added a mockitoPackageImport method to AbstractModbusOSGiTest . java to facilitate the use of ChannelTypeUID
fix indexoutofboundsexception in polyglotexceptionimpl . getstacktrace ( ) .
added context handling in ShadowFontsContract and initialized RuntimeEnvironment . systemContext to null in AndroidTestEnvironment and ShadowFontsContract to ensure
added a new method ` toMillis ` to ` TimeGranularity ` and modified ` DateTime ` instantiation in ` PinotDataSourceDimensionFilters ` to
refactor control flow analysis logic to handle null values and improve type safety to enhance robustness and prevent potential NullPointerExceptions during type processing
updated assertion methods in Assert . java to handle different array sizes and improved error messages to enhance clarity of assertion failures and provide clearer
added a default return statement in WindowClickLogic . java to return unknown click type to ensure proper handling of default cases and improve code clarity
updated index calculation in MeshBuilder . java to correct bitwise operation for proper indexing
nifi - 1748 : remove unused controllerserviceprovider from standardprocessscheduler
added imports for ResolvedJavacPluginProperties and modified KotlincToJarStepFactory to include AP processor arguments to enhance annotation processing
update RESCROLL _ DELAY to use PAGE _ SNAP _ ANIMATION _ DURATION and refactor page snap logic in PagedView
added shortcut refresh logic and permission checks in LauncherModel and DeepShortcutManager classes to ensure shortcuts are refreshed correctly based on permission requirements
added a new case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle the reverse search behavior in the console
added null check for core name in CoreAdminHandler and implemented error handling in CoreAdminHandlerTest to ensure proper handling of null core names and
added marker selection functionality to NearbyMapFragment to improve user experience by ensuring bottom sheet behavior is set when the marker is closed
added error handling for throwable exceptions in FileSyncAdapter . java to improve error reporting for better debugging
refactor DockerTestUtils to use OutputAnalyzer for checking OperatingSystemMXBean output to improve error handling and provide clearer diagnostics for potential runtime
updated FeedQueues . java to filter out certain feeds based on heavy load settings to improve performance by avoiding unnecessary updates when heavy load
add warn log if defaultdrmsessionmanager be use on wrong thread
updated packageType and resourceCompression retrieval to use Locale . US in AndroidBinaryDescription and added a setPackageType method in AndroidBinaryBuilder to
updated XML _ MIME type from " text / xml " to " application / xml " in multiple test files to ensure correct content type is used
updated configuration file references from ` INSTANCE . confFile ` to ` INSTANCE . confFile ` to ensure the correct configuration file is retrieved from the
updated the exit statement in the waitUntilReadyAndTimeout method from " sleep 5 ; exit 1 " to " exit 1 " to correct the
updated group counting logic in HiveExpandDistinctAggregatesRule to use LongMath instead of IntMath to ensure compatibility with larger integer values and prevent potential
added
added a condition to check if the current recipe matches the furnace ' s world before processing the smell to ensure that the smell
planner - 210 add move thread count description to solver .
updated path retrieval in SearchBuilder and added a new test case in FhirResourceDaoR4SearchNoFtTest to ensure correct
added a new test class ` Issue582Test ` to validate sorting of pairs in a map to ensure correct ordering of pairs in the map
[ native ] [ native ] add test for mathematical overflow
refactor LoadingCache class to improve cache management to enhance performance and maintainability of the cache loading process
added a rule to avoid non - constructor methods with class names in NamingRulesTest . java to ensure that non - constructor methods are not processed
danielwagnerhall : catch staleelementreferenceexception in expectconditions . elementtoselected and expectconditions . elementtobe
refactor view existence check in ViewExistsPrecondition and add hasView method in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator to improve error handling
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added translation calculations in TaskViewUtils and a method to log matrix values in Utilities to enhance the UI responsiveness of the task view by
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and
added a method to walk FST terms and updated doc frequency handling in TempFSTTermsReader and TempTermOutputs to improve the efficiency of
added SolrQueryRequest parameter to several create methods across multiple augmenters to enhance functionality by allowing query parameters to be passed in the document creation process
added new trigger statements for Post and Announcement types in SingleTableMySQLTriggerTest . java to ensure proper handling of null values for content
refactor comparator handling in FieldValueHitQueue to use a dedicated setComparator method to improve code clarity and maintainability by centralizing comparator
added quotes to SQL queries in PhoenixQueryBuilderTest . java to ensure compatibility with SQL standards and prevent SQL injection vulnerabilities
added Spark initialization to the init method in RequesterTest . java to ensure Spark is properly initialized before proceeding with tests
added methods to save total storage pool , fees , limit , and used in DynamicPropertiesStore . java to improve storage management and error handling
added support for dev mode streaming of files from the src directory in AssetsController . java and updated related tests in AssetsControllerTest . java to
updated the method to use ` getMapMarkKey ( mapMark ) ` instead of ` getMapMarkPosition ( mapMark ) ` to improve key
added ` TokenRewriteStream ` parameter to several methods in ` BaseSemanticAnalyzer ` and ` DDLSemanticAnalyzer ` classes to enhance
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` classes
refactor file loading logic in JxBrowserManager to use a local variable for improved readability to enhance code clarity and maintainability
added a conditional check for " AppVersion " in the IOSImplementation class and updated image file creation conditions to ensure proper handling of AppVersion
[ somfytahoma ] use thing . getuid ( ) instead of thing . getridgeuid ( ) . id ( )
( chore ) camel - alberto : disable flaky test on github
added keystore properties and modified SSL context setup in OpenWireConnectionTimeoutTest . java to enhance SSL configuration flexibility and improve test reliability
added stackTraceWarnThenDebugLogger and modified metric value handling in DynatraceExporterV2 . java to improve logging clarity and handle
added a call to remove a session ID from sessionIdToSessionInfo to ensure the session is no longer associated with other sessions
added logic to set alert host name if it is null in HeartBeatHandler . java and adjusted formatting in AlertReceivedListener . java
simplified the logic for checking if buffers are empty in ChannelEndPoint . java to improve code clarity and maintainability by simplifying the
[ drools - 7 ] move kmodule . xsd to org / kie / api / kmodule . xsd in kmodulexsdtest
added tests for media player seeking functionality in ShadowMediaPlayerTest and implemented the seekTo method in ShadowMediaPlayer to ensure correct behavior of
renamed ` createTask ` to ` createThrowingTask ` across multiple files to improve clarity and consistency in naming conventions
added a conditional check for AQUA _ LAF before setting the border for tabCloseButton to ensure proper layout behavior for AQUA
added request method to TSPTimeStampService and modified charset setting in TestSignatureInfo to ensure proper handling of timestamp queries and improve request timeout settings
added ClassLoader and ReflectionProvider parameters to createXStream methods in XStreamUtils . java and added wildcard type permissions in XStreamUtils . java
added error handling for diamond conditions in ` Attr . java ` and created a new class ` DiamondRaw . java ` to
[ hotfix ] [ table - planner - blink ] fix typo in reloptutil
updated requirement checks for setting id and value in Http2Settings . java to ensure both id and value meets expected unsigned 32 - bit values
deleted the file Issue664Test . java to remove unused test files to clean up the codebase
[ hotfix ] [ test ] remove unused test in sessionspoolectest
mondrian : fix jsonwriter . endobject ( ) in wmswmsbuilder
updated the setIndex method to use intValue ( ) for setting the selected index to ensure the correct integer value is used for setting the selected index
added checks for manual unstashing in TaskbarStashController to ensure proper handling of application state during manual unstashing
camel - 14263 : camel - core - optimize route coverage by remove customid attribute .
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for wait for expected event counts to provide flexibility in event mismatch messages based
added a new file ` HeaderFixer . java ` that implements a file processor for processing header files to facilitate the processing of
added functionality to send a broadcast for the first load completion and updated app widget binding logic to ensure that the application responds correctly when the loading complete
deleted the SuperJumperAndroid . java file to the functionality was no longer needed in the project
updated return value in SystemTableScan . java to check if the table is distributed and modified query formatting in TestStarQueries . java to ensure
added KeyValuesProviderAware and ObservationConventionAware interfaces with corresponding setter methods to enhance functionality for setting and managing key values in the Observation
[ fix ] do n ' t remove miss mapping from persistentregistrymanager # processidrematches
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use ` long ( ) i * scale ` instead of `
added caching for last date format and formats in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated the query to include a username filter in the RemoteAuthenticationEndpointTests to ensure that the user ' s username matches the expected input before proceed
replace ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java ` to
added logging for container information and workspace information in StatsLogManager to enhance debugging capabilities by logging the current workspace ' s page index
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to the test class is no longer needed for the current architecture
added null checks and improved marker existence checks in BugContentProvider and BugGroup classes to enhance robustness by preventing null pointer exceptions and
added a menu item to re - open the JavaScript server in the browser to enhance user experience by providing quick access to the server ' s URL
added a new error message for output specifications that cannot be present multiple times in the UDTF plan generation to ensure that the same output is
added null checks for the addEntryListener method in BasicTest . java to ensure proper handling of null values in entry listeners
fix arrayindexoutofboundsexception in coordinatearrays . reverse ( )
updated the method call from ` setOpen ( ! isOpen ( ) ) ` to ` setOpen ( ! isOpen ( ) ) ` to ensure
added a boolean variable ` first ` initialized to ` false ` in ` TestPayloads . java ` to ensure proper initialization of the ` first
replaced ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in the ` Launcher . java ` file to
added a line to set the destination of the messageDispatch based on the message ' s destination to ensure the message dispatches correctly reflects the
change return value from MIN _ VALUE to MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure the method returns a maximum value instead of
amd64floatconvertnode : fix typo find by codespell on fossies . org
replaced direct addition of pending chunks with a direct buffer in HttpClientRequestImpl . java and updated test cases in HttpTest . java to improve
updated the artifact replacement logic in GetMavenDependenciesTask . java to include a conditional check for " solr - " to ensure correct handling of
pdfbox - 4892 : simplify code , a suggest by valerybokov
removed debug print statement and simplified substring logic in ReferenceUtil . java to improve code readability and maintainability
add visiblefieldpredicateenvironment to allow query type to be pass to visibility visitor
added configuration parameters for solidityJsonRpcHttpPort and solidityNodeHttpJsonRpcEnable to enable or disable JSON - RPC functionality based on
added a type check for the folder before removing it from the drag controller to ensure proper handling of DropTarget instances to avoid potential ClassCastException
refactor the creation of a stub jar in StubJarTest to use a new createStubJar method to improve code readability and maintainability
added new features for the Setup wizard and Workflow helper in the StartPageTopComponent . java file to enhance user experience by providing guidance on
removed duplicate scheduleWithFixedDelay call for MeteredFlusher in CassandraDaemon . java to streamline the code by eliminating redundancy
simplified the condition for checking the availability of a fixture to improve code readability and maintainability
changed the return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that the application returns the intended user
refactor HttpChannelState to simplify the handling of onIdleTimeout and update failure listener conditions to improve code readability and ensure proper failure handling
updated CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to ensure thread safety and prevent potential blocking issues
updated TABLE _ HEADER _ SEPARATOR regex and added a new constant COL in TableBlockParser . java and corresponding tests in TablesTest . java to
updated return value from 32.0 f to 31.5 f in Camera . java to improve camera rendering accuracy
added a new preference for " startonbootup " and disabled it in GpsSettingsActivity , modified return values in Utilities . java ,
updated the client secret size from 128 to 512 bits in DefaultOAuth2ClientDetailsEntityService . java to accommodate larger client secrets and
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to call # enablePassingNulls ( true ) instead of # enablePass
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to potential race conditions
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods to return a ` PinotFS ` instance and initialize it
added locale - specific date formatting for TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is only applied for non - English languages
added MetalLookAndFeel import and set it in UIManager to enhance UI appearance for better user experience
added PreDestroy annotation and refactored PingTask handling in Bot . java to improve resource management and ensure proper shutdown of scheduled executor instances
removed the ` throwable . getMessage ( ) ` parameter from the ` error ` method call in ` GlobalErrorHandler . java ` to simplify error handling
removed the ` Meta ` parameter from several methods in ` ModuleTable ` , ` PackageTable ` , and ` ModulesHelperVM ` classes to
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging and monitoring
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added a deprecated ` hashCode ( ) ` method
reformatted code for improved readability and consistency in the CustomPlaybackOverlayFragment and ImageButton classes to enhance code clarity and maintainability
mapview . setmapzoomcontrols ( ) . setzoomlevelmin ( ( byte ) 0 ) should setzoomlevelmax ( ( byte
refactor DrillRoot to use ImpersonationUtil for process user and group names instead of admin users to improve code clarity and maintain
replaced AccessController with sm for permission checks in UnixFileSystemProvider and WindowsFileSystemProvider to ensure consistency in permission checks across different operating systems
added a ArgumentExtractor parameter to the DelegatedClientAuthenticationAction constructor and updated service resolution logic to enhance argument extraction capabilities in the authentication process
changed the ` defaultGroup ` variable from private to private final in ` NacosServerRegisterRepository . java ` to enforce immutability
replaced the destroy ( ) method with destroyTileCaches ( ) and createTileCaches ( ) in TileSizeChanger . java to improve
removed unnecessary view removal calls in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline view management by eliminating unnecessary views
refactor cleanFeedsWithoutSubscriptions method to use a separate cleanEntryForFeedsWithoutSubscriptions method to improve code readability and maintainability
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` array in ` ImmutableAssertionTests . java ` to
nifi - 1741 : fix filebasedclusternodefirewalltest to work on window
[ fix ] conic five point not evaluate correctly .
reformatted conditional statements in RandomAccessReader . java for improved readability to enhance code clarity and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod .
added native image creation methods and improved image handling in CImage . java and CPlatformWindow . java to enhance image management functionality and ensure
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to improve type handling for byte array comparison
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity and consistency in
refactor equality checks to use ` Objects . equals ` instead of ` null . equals ` across multiple classes to improve code readability and reduce
change method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and add nullability annotations to improve clarity
added verification for default HTML properties in NinjaDefaultTest . java to ensure correct handling of various properties in the application
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
updated ` timestampsViewPaddingBottom ` calculation and modified ` listViewPositionOffset ` initialization in ` DetailFragment . java ` and ` ListFragment
updated exception handling in ZkStateReader . java to include InterruptedException and improved logging for cluster property updates to enhance error handling clarity and
added null checks for field values in HttpFields . java and implemented a new request test in RequestTest . java to ensure that empty headers are
server : do n ' t allow static nat on the network element if there be no static nat rule for the ip address
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added a call to remove an extra empty screen from the workspace to ensure that the workspace is properly removed when no longer needed
added a fixedWidth flag to the BitmapFont class and modified xAdvances calculations based on the lastGlyph ' s width to improve handling of
removed the showTitle parameter from the createFragment method and refactored main layout management in ChangeLogFragment to simplify the method signature and improve
added interceptor methods for preEvent , preTransition , and postTransition in AbstractStateMachineFactory to enhance state machine handling capabilities in the application
refactor ConfigDescriptionProvider class for improved clarity to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf instantiation in StorageBasedMetastoreTestBase to utilize WindowsPathUtil to
solr - 10796 : facetcomponent . getcounts should check if the facet . sort be sort by count , we can break out of
updated the method of creating overriding properties and setting the checkstyle cache file path to ensure the correct directory is used for the checkstyle cache file
added logic to stop jetty Solr runners in DeleteInactiveReplicaTest . java to improve test reliability by ensuring jetty are properly stopped
added a new parameter ` fileName ` to the ` newInstance ` method in ` FileActionsDialogFragment ` and updated its usage in ` OC
update reorder direction handling in CellLayout to include an INVALID _ DIRECTION constant to ensure proper handling of reorder direction for external modes
added currency , from , and to fields in InnerTransferRequest . java and updated API paths in AccountAPI . java to improve API compatibility and
added a method to retrieve an execution ID for a job ID and modified job status assertions in JetTestSupport and SinkStressTestUtil
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to
replaced specific imports with a wildcard import and added identifier marker handling in FindTypes . java to simplify import statements and improve type handling in the
added a action text color to the AuthenticatorActivity to enhance the visual appearance of the authenticator action
added find ( ComparableField < ENTITY , V > , V ) method in Manager , StreamSupplierComponent , AbstractManager , MockManager , and
renamed ` addTestStepsForPickleSteps ` and ` createTestStepsForBeforeHooks ` methods to ` createTestStepsForAfter
corrected the spelling of " noArgMethodIsNotValid " to " validNoArgMethod " in multiple test files to ensure consistency and
added a method to cancel a client and updated the ` startDriver ` method to include a ` cancelClient ` method to improve client cancellation handling
added getImplicitPreCoercionValue method implementations in SkylarkParamInfo , DefaultConstructorArgMarshaller , ParamInfo , and Reflection
initialize lastDisplayedUser to an empty Optional to ensure that lastDisplayedUser is always present to avoid potential NullPointerExceptions
added a new method ` findAll ( OrderSpecifier < ? > orders ) ` to ` QueryDslMongoRepository ` and updated the ` createQuery
added null checks before calling stop ( ) on SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions when stopping the
planner - 2852 - stop warm - up loop in case of failure .
fixed - xread ( ) and xreadgroup ( ) method do n ' t support streams parameter
refactor LinkedBufferInput and StreamInput classes to simplify byte count counting methods to enhance code readability and maintainability by reducing unnecessary method
added ` WebSecurityCustomizer ` and refactored security configuration methods in ` CasWebAppSecurityConfiguration ` and ` CasWebSecurityConfig
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStoreNoDoAs
added a method to register ContentProviders in ShadowContentResolver and refactored ContentProviderController to use a new create method to improve provider registration
replaced ` Version ` with ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure compatibility with the latest class file structure
added a method to set keep - alive configuration in SingleConnectionManager to ensure proper connection management based on configuration settings
[ java ] use supplier < flowcontrol > instead of ctx . unicastsenderflowcontrol to avoid npe .
added null check for currentPoint in DrawLocus and improved NaN check in GBasicStrokeD to enhance robustness by preventing potential
added error handling and improved readability in multiple classes to enhance robustness and maintainability of WebSocket connection handling
danielwagnerhall : take a screenshot of a web browser instead of a web page
replace assertEquals with assertThat in multiple test classes to improve readability and maintainability of the test code
truffle : remove deprecate ` getcontextreference ( ) ` in favor of ` getcontextreference ( ) `
initialized the ` e ` variable to null and modified the exception handling logic in ` StubberImpl . java ` , and added new test classes
updated condition checks in Actor . java and modified exception message in Group . java to improve clarity and provide clearer error messages for invalid actors
added location permission handling to the LocationPickerActivity and modified the getCenter method to include permissions for location access to enhance user experience by allowing access to
http : / / issues . apache . org / jira / browse / amq - 4898 - introduce countermdb to
added import for CookieSpecs and set a standard cookie specification to enhance request configuration flexibility for cookie management
replaced conditional return statements with a method call to ` r1 . overlaps ( r2 ) ` to simplify the code and improve readability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and removed a log statement in Air
added monitoringUrl parameter to ScrollingPanel constructors and implemented it in SystemInformationsButtonsPanel to allow users to access the monitoring URL for better
[ hotfix ] [ k8s ] remove kubernetes . service . create - timeout config option
added a switch statement to set the icon based on place descriptions in NearbyListFragment to improve user interface by providing appropriate icons based on
added a null check for the package before processing to avoid potential NullPointerExceptions when processing types
added a new file PrintInlining . java containing a main method that prints " Passed " to facilitate testing of in
fix ( Javadoc ) : handle nested brace in Javadoc tag ( # 1193 )
[ java ] remove redundant termid and offset from archive test .
updated EdgeDataTable to use ` getEdgesAndMetaEdges ( ) ` instead of ` getEdges ( ) ` in the model creation to ensure
removed unused import statements from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve readability
updated playback speed logging from % d to % f in VideoManager . java to improve clarity of log messages for better debugging
added cluster task handling for room removal in MUCRoomController to ensure proper handling of room removal events during clustering
updated the precision of ' minimize ' from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to reflect the correct number of cores
added key settings for flipping and generating MIPS in TextureHelper . java to enhance texture functionality and improve performance
replaced ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParserDecorator ` and refactored related code to
added a new LibraryNormalizationPass class and integrated it into the J2clTranspiler to handle library normalization processes to enhance the transp
replaced ` nextResponseBodyConverter ` method with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory
[ hotfix ] [ runtime ] fix checkstyle violation in memorymanager
use timestamp for consolesessionvo . getconsolesessions ( ) ( # 3748 )
added a new file Hbs . java and HbsTest . java to implement a template engine for Handlebars in a Jooby
added null and empty checks for hint and incoming message handling in ChatMessageAdapter . java to improve handling of empty message items and ensure proper visibility
changed the iteration method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to use ` values (
# 1796 add test to confirm dialog wait until alert
added a conditional check to return null if distinct column indices size is greater than 2 to optimize performance by avoiding unnecessary processing when there are too
updated the logic for adding files to a list and modified the ` getClassPathFromManifest ` method to include a new ` addToList ` method
regenerate client with updated copyright year ( # 4382 )
updated websocket dependency from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty
samlAuthenticatedUser : use collections . unmodifiablemap instead of collectors . tounmodifiablemap to improve code readability and maintainability
added error handling and repainting logic for SketchCode modifications in Editor . java to ensure that changes to the header are only updated when the
replaced instances of ` Double ` and ` Float ` with direct return statements in ` ConstantDouble ` , ` ConstantFloat ` , and `
replaced ` getDate ( colName ) ` with ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to correctly store timestamps instead of
updated the condition to check for " javax . naming . Context " class type in HtmlJndiTreeReport . java to ensure proper handling of
added a switch statement to set write buffer size for specific database options in StorageUtils . java and improved logging format in Manager . java to
changed the edgeType check from " double " to " mutual " in ImporterGEXF . java to ensure proper handling of mut
replaced the private static final int FLAG _ SLIPPERY with an import for FLAG _ SLIPPERY to simplify the
truffle : fix stable dimension calculation for array type .
added methods to retrieve and set the Google Drive folder path in the PreferenceHelper and related classes to enable dynamic configuration of the Google Drive
shuffling suggestion popup for up , down , 38 , and 40
added @ Nullable annotation to multiple assertThat methods in Truth . java to allow null values to enhance flexibility in assertion methods by allowing optional
updated the calculation of the new size in the ArrayUtil class to correct the logic for handling new array sizes
added a new test class ` ApiExceptionTest ` and modified the constructor instrumentation logic in ` ClassInstrumentor ` to ensure that ` ApiException `
http : / / issues . apache . org / jira / browse / amq - 4398 - fix concurrentmodificationexception in stream
added a new boolean field ` isKeyguardSecure ` and its getter / setter methods in ` ShadowKeyguardManager ` , and updated tests
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for the class
updated the string splitting logic to replace ' > ' with ' ' and added a length check for 3 parts in the override parse to ensure proper
renamed the method from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables
added a test to verify that the file ' s drain handler is not called after the close operation to ensure that the file ' s drain handler
updated LIGHTS _ NUM and LIGHT _ INTESITY values and modified shader paths in HybridLightTest . java to improve light
replaced instances of ` TestProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` across multiple test files to streamline filesystem initialization and
changed the type of ` loadRerunFile ` from ` String ` to ` PathWithLines ` in multiple files to improve type safety and
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
updated TEST _ DIRS array to include a TODO comment to address compatibility issues related to the PubRoot class
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` in ` Shadow
added a method to reset the prefix index and updated BasisLibrary to use ThreadLocal for thread safety to improve thread safety and performance during prefix
added LogLevel annotation to TestDistributedStatsComponentCardinality . java to enable debug logging for HTTP connection debugging
added two calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure immutability of the list to prevent
updated GrpcServerRunner and GrpcClientBuilder to use Jetbrains annotations and improved ManagedChannelBuilder initialization to enhance code cl
updated package structure and refactored code to use Supplier for better readability to enhance code clarity and maintainability by centralizing lambda expressions
improve insight performance by invalidate function array .
added platform - specific handling for manifest file writing in GenerateManifestStep . java to ensure proper line endings of manifest files across different operating systems
updated priority value from LOW _ PRIORITY to HIGH _ PRIORITY and added a new class RFE3531161 with a null check warning to
added @ Nullable annotation to getConfigDescription methods and improved null checks in ThingResource to enhance code robustness and prevent potential NullPointerExceptions
replaced Throwable with RuntimeException and changed the return type of createCancellationException ( ) from Throwable to RuntimeException to improve error handling by providing a
pdfbox - 4892 : do n ' t create crop box if there be nothing to do
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to allow accessing All Apps
refactor FragmentActivity initialization to use Robolectric ' s buildActivity method to enhance testing capabilities by utilizing Robolectric '
renamed ` getFileCoordinates ` to ` processFileCoordinates ` and introduced ` getDecimalCoords ` method in ` ShareActivity ` to improve cl
rename class ABCase1 _ 1 , ABCase2 , and ABCase3 from ` ABCase1 _ 1 ` to ` TestAB
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check in Manager . java
added a ` doSimsChanged ( ) ` method to the ` RocketChangedEventHandler ` class and modified the handler to call it to
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to implement a recipe for changing Maven dependency groupId and artifact IDs to enhance
refactored file system and path handling in IndexingJob . java and added a check in SegmentChecker . java to improve code clarity
updated comparison logic in GCObjectHeapIteratorAddressOrderedList _ V1 . java to use ' lte ' instead of ' gte '
added a Supplier for replacement paths and path to source path maps in PreprocessorDelegate . java to improve handling of duplicate headers and enhance error management
rename ` JsonExamples ` class to ` Examples ` and update package - info . java files to improve clarity and consistency in naming conventions
added debug logging statements for extraction and copying processes in ViewExtractor . java to improve traceability and debugging during the extraction process
refactor methods in FindsByLinkText class to improve code readability and maintainability
added a new Main class to demonstrate the use of the Java OOP entry point to facilitate the execution of the
fix race condition in sipregistrar and add some extra summary table entry .
removed duplicate continue statements in NativeScanner . java to improve code clarity and reduce redundancy
changed package from ` net . pms . test ` to ` net . pms . configuration ` and removed unused imports from ` RendererConfiguration
replaced the usage of ` ImmutableSet . Builder ` with ` Supplier < ImmutableList < BuildRule > > ` for managing queried and exported dependencies to
updated method call from ` stream ( ) . count ( ) ` to ` size ( ) ` in ` DistBuildArtifactCacheImpl . java
added charset handling in ExtractingDocumentLoader to ensure proper content encoding is set based on the content type
updated SQL insert statements and SQL query syntax in DatabaseConfig . java to use a prepared statement for setting parameters to improve code readability and maintain
added a null check for the slot variable in WindowListener . java to prevent potential NullPointerExceptions during execution
( chore ) camel - maven - client : add option to ignore transitive repository
removed the duplicate ` BackgroundJobManager ` dependency from ` ContactsPreferenceActivity . java ` to streamline the code by eliminating red
updated the ` ColorsActivity ` class to extend ` AppCompatActivity ` instead of ` Activity ` to ensure compatibility with Android 7 and improve compatibility
added null check before closing selection in NIOTransport . java to avoid potential NullPointerException when selection is not initialized
added a condition to check if the index matches the end and start of the matcher in NativeRegExp . java to ensure proper handling of substring indices
set the server port to 0 in MvcITest . java to ensure the integration test runs on the correct server port
added a new user - defined function named " reverse " in FunctionRegistry and created a new class UDFReverse to implement a reverse function in Hive
replaced ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` across multiple files to standardize context path retrieval across the codebase
updated Tracer class implementation to improve performance and maintainability of the Tracer class
[ hotfix ] [ test ] disable rocksdb state backend reader keyed state it case
replaced multiple static imports with a wildcard import in XMLChangeLogParserTest . java to simplify import statements and improve code readability
added synchronization and clearing functionality in StarTreeRecordStoreCircularBufferImpl and a corresponding test in TestStarTreeRecordStoreCircularBufferImpl to
updated the forecast values for hours , minutes , and days in OpenWeatherMapOneCallHandler . java to adjust the initial values for better
increased timeout duration and improved fetch time handling in AbstractPageOperationTemplateTest . java to enhance test reliability and clarity by
added logging functionality and enhanced suggestion mode handling in RemoteTargetGluer and FloatingHeaderView classes to improve debugging and ensure proper handling of split
updated ` parseRerunFile ` method to return a ` Stream < Collection < FeatureWithLines > > ` instead of a ` Collection <
added multiple items to the BotaniaCreativeTab class and updated the ModFluffBlocks class to include additional mod types to enhance the creative
updated assertions in TestRadioButtons . java to compare size ( ) instead of size ( ) for optItem and retrievedOptions to ensure that the
added functionality to handle file sizes in RCFileCat and introduced a method to retrieve number of rows to enhance functionality to display file sizes based on
refactor multiple classes including LocalClusteringCoefficient , TriangleCensus , TriangleListing , HITS , AdamicAdar
added multiple checkNDArray methods to JnaUtils . java to ensure proper error handling for invalid NDArray pointers
[ hotfix ] [ doc ] fix typo in blobserver javadoc
[ java ] unusedprivatemethod : fix bug 1394187 - unusedprivatemethod no long report a bug
added null checks for lexicalScope and lexScope before accessing its properties in Global . java to improve code robustness and prevent potential NullPointerExceptions
added a test method to verify the auto - startup behavior of the Sftp inbound adapter to ensure that the SftpInboundAutostartup
added getter methods for level , root , and itemBoundables in several classes and modified constructor visibility in STRtree to improve accessibility of node
updated version parsing logic to handle minor version numbers correctly to ensure accurate extraction of version numbers for accurate parsing
added a check for empty tags before updating the ActiveItem item ' s tags and changed log level from warn to debug to ensure tags are only
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a new ` fromDateTime ` method in ` DateTime
hhh - 17100 fix nullpointerexception in stringwrapperusertype . disassemble ( )
refactor Log4j2ConfiguratorServlet to improve logging functionality to enhance code maintainability and readability
replaced instantiation of HiveException and AuthorizationException with direct return statements to simplify exception handling and improve code readability
updated CGoCompileStep to use String . join for string concatenation and added a new test for prebuilt C++ libraries with wrapped C++
added a Buildable annotation to the CustomResource class and set editableEnabled to false to enable the builder functionality in the build process
updated the @ Override annotation in the Only class to ensure proper method overriding and improve code clarity
added a timeout constant for three hour in HttpClientFactory to improve connection reliability by allowing longer timeout values
updated pipeline name from " configured _ raw _ target _ node _ parse _ pipeline " to " nonresolving _ raw _ target _ node
simonstewart : add a mapping for the " TRACE " constraint to the security handler to allow enabling / disabling all trace
removed the @ Singleton annotation from ApplicationController . java to eliminate unnecessary dependency on the singleton implementation
updated username assignment logic in ShareActivity to handle OwnCloudAccount display names to improve user identification by dynamically retrieving the display name based on the
added import for BatchStatus and implemented a test for resuming a paused job instance in SimpleJobLauncherTests to ensure proper job execution handling and
added null check for cacheConfig before joining values in HttpSyncDataService . java and modified data refresh logic in DataRefreshFactory . java to
made the ` DockerSession ` class public and refactored imports in ` LocalNode . java ` , and added session handling in `
make javaparsercontext . isqualifiedname a static final field and use the default package name a a fallback .
pdfbox - 2576 , pdfbox - 2576 : do n ' t parse dictionary in fdf document , a suggest by valery
mahout - 2693 - fix test failure in testdistributedlanczossolvercli
refactor HttpServerTestBase class for improved readability to enhance maintainability and ease of understanding for future development
refactor test assertions in PortletApplicationMapTest to use a set for expected keys and values to improve readability and maintainability of the test
added dynamoDbIgnoreNulls test for handling inner bean lists in BeanTableSchema to ensure that the bean ' s inner bean lists do not
add customizers for Redisson auto configuration in RedissonAutoConfiguration . java and create a new RedissonAutoConfigurationCustomizer . java to
modified loop condition in Indicator . java and added a new IndicatorTest . java file with a test for the toDouble method to ensure correct handling
added execInContainerWithUser method to ContainerState and ExecInContainerPattern classes for user - specific command execution to enhance flexibility in executing
updated conditional checks for interestedInByteMessages and interestedInTextMessages in NettyWebSocket . java to improve clarity and correctness of listener
added unit tests for attribute conjunctions and negated attributes in the SemgrexTest class to ensure correctness and correctness of the semantic
added a broadcast intent to clear the pull unread action in HomeFragment to enhance user experience by allowing the action to take effect
removed conditional checks for preGingerbread version in TouchImageView . java to simplify code logic for better readability and maintainability
add flush method to defaultprofilevalidationsupport and flush it in baseresourceproviderdstu21test
( chore ) camel - core : fix npe in abstractcamelcontext . start ( )
added FloatingActionButton components and click listeners for the main fab and map fragment in ShareActivity . java to enhance user interaction by allowing navigation
added inline parsing functionality to the ToDateTokenizer and updated empty list handling in the ToDateParser to improve date parsing functionality and error handling for
updated TestAnonymousClassUnloading . java file to improve test coverage for class unloading functionality
updated error messages and resource names in multiple Java files to improve clarity and consistency of error messages
added a condition to check if the server is checked before binding to the OperationsService to ensure that the operations service is only bound when the server
update return values in Position . java to use getBeginLine ( ) and getEndLine ( ) instead of getBeginColumn ( ) and getEndColumn (
added waitFor methods for processor , outputProcessor , and errorProcessor in CxxPreprocessAndCompileStep . java and managedThread . java to
added a ` requireAllRepositorySources ` boolean to ` PrincipalAttributesProperties ` and implemented the ` mergePersonAttributes ` method in ` CasPerson
wait cluster for safe state before check if map be load before check if load .
added support for enabled SSL protocols in NettyWebServer and ServerBasicConfig to enhance security by allowing customizable SSL protocols
replaced AtomicBoolean with AtomicReference in SetOnce . java and added a test for trySet method in TestSetOnce . java to improve
updated QueryDslMongoRepository to handle null property and added a test for empty path expressions in SpringDataMongodbSerializerUnitTests to ensure
updated assertions in RoundRectBorderTest to reflect changes in border properties to ensure correct behavior of the RoundRectBorder class regardless of border style changes
added a check for empty cluster genesis configurations and improved bft type handling in multiple classes to ensure robustness of cluster configuration and enhance
remove parallel test , it ' s not need anymore
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' array
change condition from " windows " to " ! windows " in ProcessInformationsPanel . java to ensure correct handling of window mode in process information
refactor methods related to empty , maxN , minN , greatest , and least in MoreCollectors . java and MoreCollectors
added null check for orderbook and updated subscription methods in BitmexStreamingExchange and BitmexStreamingService to ensure proper handling of null
added validation for latitude and longitude in GeoPointField . java and a corresponding test in TestGeoPointField . java to ensure that invalid lat
refactor ` createWorkflowFile ` and ` saveDraft ` methods to ` createFile ` and ` getWorkflowDrafFileName ` across multiple classes to
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
modified the ` getTableDocument ` method to accept a boolean parameter for managing dependent tables to allow more flexible handling of table documents based on the
added functionality to count recent uploads without coordinates in UploadActivity to improve user experience by providing feedback on uploads without coordinates
added caching functionality for profile data retrieval and viewed profile data in ProfileResources . java to improve performance by reducing redundant data retrieval and handling
refactor identifier derivation logic and improve property setting logic in JpaMetamodelEntityInformation . java to enhance clarity and maintainability of
phoenix - 10796 add index and table timestamp test for last ddl upgrade
added support for registering default exception mappers in AbstractServerFactory and removed old ones from DropwizardResourceConfig to enhance exception handling flexibility and
added a boolean parameter to the method call in EntryEditor . java to set the default value of storeFieldAction to false to ensure that the
updated the parameter name from ` nsViewPtr ` to ` ownerPtr ` in the ` nativeCreateNSWindow ` method to improve clarity
corrected the spelling of " FILE _ REMOTE _ ID " to " FILE _ TABLE _ NAME " in the database alteration statement to
added a new ` STOCK ` case to the ` Tile ` class and modified related methods in the ` Tile ` class to enhance the
fixed - commandasyncservice . readasync ( ) and writeasync ( ) method throw classcastexception . # 3553
do n ' t log complex generic signature in type modeling , add test
added BackProgressAnimator functionality and refactored back event handling in LauncherBackAnimationController . java to improve animation control and ensure proper state
changed the visibility of the ` _ initialPageNo ` variable from final to non - final and added logic to adjust content limits based on the
improve crc - 16 calculation in jedisclustercrc16 . fix # 2868 ( # 2869 )
added comment support to the FormattedSqlChangeLogParser and created a test for it in FormattedSqlChangeLogParserTest to enhance the
changed the initialization of the JarArchiver in MavenArchiver and added an import statement in AbstractJarMojo to enable dynamic archiving of
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling for class usage file loading
removed unnecessary condition checks in TSServiceImpl . java and added a new multiAggregationTest method in DaemonTest . java to improve code clarity
added validation for format and type of pixels buffer in GwtGL20 . java to ensure that only UNSIGNED _ BYTE and type RGBA are
added a new test method to OutputMemoryTest , testDebugInfo , and modified method invocation logic in PrintR , and VarDump classes to
added error handling for UnmodifiableClassException in InlineBytecodeGenerator . java to ensure that issues related to javac - compiled classes are reported
[ gr - 33233 ] add trace for class initialization . ( # 33234 )
removed the queryLevelTimeoutMs parameter from the timeSpentMs and queryTimeoutMs parameters to simplify the parameters for better readability and maintain
replaced Google Guava cache with Caffeine cache for topic route loading to improve performance and maintainability by leveraging the latest
mbtiles : make database read - only by default
updated the pattern for matching invalid source and target releases in FindBuildToolFailures . java and added a fatal error in FailureLogAnalyzerTest .
updated the construction of the URI string and added a check for location intent availability to ensure that the URI is accessible when available and improve user experience
fix npe in standardparametercontextdao when inherit parameter context be null
updated ClassLoader class implementation to improve performance and maintainability of the code
added a method to set the origin response headers in ProxyRequestHelper and created a test for setting response headers in ProxyRequestHelperTests to ensure
added a new ProfileSettingDrawerItem instance in GpsMainActivity . java to enhance the functionality of the profile setting drawer
added a new constant ` JASPER _ XML _ VALIDATION _ ATTR ` and updated related classes to use this constant to control XML validation
simonstewart : fix the issue that firefox do n ' t work with javascript
added maxRows handling and improved fetch size logic in IoTDBStatement . java to ensure fetch size does not exceed maximum results and provide clear
refactor SQLStreamTerminator . java to simplify
added event handlers for node and mouse left click events in StandardVizEventManager to enhance user interaction responsiveness by dispatching node and
refactor ManyToOneRingBuffer by introducing a zeroBuffer method for better clarity to improve code readability and maintainability by reducing
[ drools - 7 ] make xorgroup accessible from node memory in terminalnode .
removed getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource to streamline image handling by eliminating
refactor SourcePathResolver to simplify path retrieval and add getAllAbsolutePaths method to improve code readability and maintainability by reducing redundancy
fix xmlparserdstu2 to correctly handle attribute value
updated WebsocketRoutingFilter to use static method and added encoded URL handling in tests to improve code readability and ensure correct URI construction for WebSocket
rename ` EXTERNAL _ TEST _ SUITES _ CONFIG ` and ` GCC _ TEST _ SUITE _ CONFIG ` to ` EX
added a private method ` getCxxPlatform ` to retrieve ` CxxPlatform ` based on ` HaskellBinaryDescriptionArg ` to improve
added imports for IndexReader , IndexWriter , Hits , and Similarity classes to facilitate documentation generation within the Lucene framework
added null checks and new test methods in ConcurrentLinkedStack and ConcurrentLinkedStackTest classes to improve robustness by preventing null pointer exceptions during
added methods ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` to ` BinaryHeapQueueTest ` and ` BaseQueue
added a null check for mDirectories before initializing mDirs to avoid potential NullPointerException when mDirectories is null
updated condition in RecentsView to check if overview state is enabled before proceeding to ensure that gesture handling only occurs when overview state is
added multiple package - info . java files for various Lucene packages to provide package - level documentation and organization
added a line to set the text of the visibleAutoLeveler panel in AutoLevelerTopComponent to improve user interface clarity by displaying
added postOptimize callback handling in DirectUpdateHandler and DirectUpdateHandler2 , and implemented it in UpdateHandler to enable post - optimization functionality
updated decompressor and compressor initialization to include a padded length variable and set the dummy byte to 0 to ensure proper handling of compressed data and ensure
removed the check ( user _ data ) method from Shaderc . java to streamline the code by eliminating unnecessary checks
added a check for local MetaStore in the RetryingMetaStoreClient class to ensure retries are only attempted when the local Meta Store is present
added checks for TimeoutException and ConnectionClosedException in HeliosSoloLogService . java to improve error handling and ensure proper logging behavior
refactor Subject class to improve code structure to enhance maintainability and readability of the code
add weak and STRONG reference type to serialization type map ( # 11345 )
update colorDistance calculation to use absolute values and add a new test for findSimilarColor method in HSSFPalette to ensure accurate color distance
chore ( regen ) : regenerate with update license year
danielwagnerhall : add test for findelementbynumericid ( ) and findelementbyid ( ) ( fixes
added a flags parameter to the registerReceiver method across multiple classes to allow dynamic registration of receivers based on specific flags
updated FFmpegTest to use Mockito ' s Answer instead of Mockito ' s InvocationOnMock to improve test flexibility by allowing mock
refactor OggInputStream to accept a previous input stream and manage its references to improve handling of input streams and prevent potential memory leaks
added a constant RESPONSE _ WAS _ NULL and updated failureMessage assignment to use it to improve code readability and maintainability by using a
[ te ] migration : fix anomaly detection for migration ( # 4649 )
added a showToast method to display toast messages based on user preferences to improve user feedback when settings are enabled for better user experience
replaced the method retrieval method in TracingFeignClient to use delegate . httpMethod ( ) instead of the method directly to improve clarity and
added validation for LDAP names and improved referral handling in LDAPCertStore . java to ensure valid names and enhance error handling for LDAP ref
refactor rSocket retaining logic into a separate method ` retain ` to improve code readability and maintainability
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test for item click functionality to improve clarity and ensure
[ hotfix ] [ test ] move checkpointfailuremanageritcase setup to classrule
deleted the GenericItemUIProvider . java file to the functionality was no longer needed in the project
added methods to set and retrieve the selected object in SIPCommSelectorBox to improve functionality by allowing dynamic assignment of the selected object
added JUnit Jupiter @ Isolated annotation to MetaInfConfigurationTest . java to mark the access static method of FileSystemPool as isolated
added a line to set the server connector ' s host from HTTP _ INFO . bindAddress to ensure the server connection connects to the correct server
updated access token validity settings based on heart mode and grant type settings in DynamicClientRegistrationEndpoint . java to improve handling of heart mode
added a new ` CloverInstrumentationFilter ` class and modified the filter logic in ` TestInterfaceAudienceAnnotations ` and ` SplitLogCounters
added support for Smartmi Evaporative Humidifier in MiIoDevices . java and updated ReadmeHelper . java to
fix infinite loop when plausible to break
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow access to the method from other packages
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that Ambari may not be
simplified the condition for checking missing values in IntHashSet to improve code readability and maintainability
added Serializable interface to RuleAdministratorImpl class to ensure proper serialization of RuleAdministrator objects
refactor ` allowedOrigins ` and ` allowedTimingOrigins ` to use ` Set < Pattern > ` instead of ` List < String
updated the G3D library paths in BaseG3dHudTest . java from " g3d / cube _ anim . g
added error handling for negative solidified position in updateLatestSolidifiedBlock method to improve robustness by handling potential negative solidified position errors
hbase - 11351 execresult . get ( ) should return value of valueType instead of null ( # 11351 )
added a method to check if a user has admin access and updated error response handling for unauthorized access to enhance security by ensuring unauthorized access
replaced the writeTo method with a getStubClassBytes method in ClassMirror . java and refactored the creation of StubJar . java
added functionality to display an internal link text based on whether the file is a folder or a regular file to enhance user interface clarity by providing
updated string formatting to use Locale . ENGLISH in PredictionTest . java to ensure consistent formatting across different locales
[ zoo ] fix test that fail on the same day of the week
removed the hideIme method and its usage in AllAppsContainerView and LauncherAllAppsContainerView to simplify the code by elimin
added InMemoryEventStorageEngine to EventHandlingConfigurationTest and refactored module registration in SagaConfigurationTest to improve event storage management
refactor path handling in BsdFileStore and add getmntonname method in BsdNativeDispatcher to improve clarity and functionality of
add a new test class ` Issue1599Test ` for verifying Java resolution behavior to address issue # 1599 related to Java ' s
added x , y , and z parameters to the " spawn " command and modified the usage of the " spawn " command to support both x
added a constant MIN _ CONTENT _ DIMEN and refactored content area width calculation to use it to improve code readability and maintain
make graalcompilertest and hotspotcryptosubstitutiontest final in graalcompilationresult .
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to relies on
added pluginCheckClassNames to the failed checks in UpgradeCheckRegistry and modified the addition of the upgrade table column in UpgradeCatalog280 to ensure
refactor Environment class to improve code structure to enhance maintainability and readability of the code
added import for LuceneTestCase and annotated the BadApple annotation in RecoveryAfterSoftCommitTest . java to address issue SOLR -
updated home assignment logic in CodenameOneImplementation . java and removed warning handling in HashtableContent . java to improve code clarity and ensure
changed the flag from FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS
replaced specific resource imports with a wildcard import and updated the resource accessor initialization in LiquibaseEntityResolver and XMLChangeLogSAX
added security configuration to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing unnecessary certificate verification
updated CxxDeps . EMPTY to use CxxDeps . of ( ) instead of CxxDeps . EMPTY to simplify dependency management and improve
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` , and updated related references
removed redundant whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name handling logic to check for empty titles before setting hints and text to improve user experience by providing clear feedback when the folder title is
updated client ID retrieval in UaaResetPasswordServiceTests to include " uaa " as a parameter to ensure that the correct client ID is
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to these methods for better encapsulation
updated value assignments to include isClosed status in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to ensure accurate representation of closed state in
refactor MimetypeIconUtil class for improved readability to enhance maintainability and clarity of the codebase
renamed method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve consistency and clarity in method naming
added a new test method ` negatedInstanceOf ` in ` UnnecessaryParenthesesTest . java ` and updated the ` UnwrapParenthes
added a ` built ` flag and a ` teleport ` method to the ` Location ` class and modified the way ` o ` is instantiated to
replaced Base64 encoding with Base64Utils for modulus and exponent in TokenKeyEndpoint and related tests to enhance security by using URL - safe
updated imports and statistics reporting in TranslatorManagerHelper . java to utilize ProjectComponent and enhance event tracking functionality
rename the ContainerAnnotation interface to ContainedBy to clarify the purpose of the annotation being referenced
added a null check for the result ID in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value
refactored the ` setUpRevampedTweet ` method to use a new method ` isMuffled ` for retrieving the ` ret
added conditional logic to retrieve the verified TextView based on the addonTheme setting to ensure the verified TextView is displayed correctly based on the application ' s
updated the AbucoinsDigest class to remove the static instance variable and added a final variable for timeDiffFromServer to improve encapsulation and
camel - 14284 : camel - mongo - allow to configure the mongo connection in camel - mongodb
added a ` sourceIndex ` property and its getter / setter methods to the ` AttributeMapping ` class , along with its usage across multiple classes
refactor partition statistics retrieval logic into a separate method ` getExistingPartitionStatistics ` to improve code readability and handle corruption during partition alter
added a check for security enabled status in AuthParams . java to ensure proper authentication behavior based on user security settings
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 8470 ] escape html for email in geoserver home page
move engine reflections with subsystems into the modulemanagerimpl so it can be use by other engine .
update the JoinModeller class to use a dynamic variable for the number of features instead of a hardcoded value to improve flexibility and ensure
added a length check for the command string before checking if it starts with " < math " to ensure that the command string is not empty before
added null checks for debug and trace log statements in SingleNodeKafkaResumeStrategy . java to improve code readability and prevent potential NullPointerExceptions
replaced the constant ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _
updated IgnitionConfigurationHandler to convert " automatic " separation to " launch " and added new methods for launch stage checks to ensure proper
tika - 3748 -- allow mime type ' x - ms - nls ' to be specify with the length of the ascii name .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as deterministic on JDK 1.7
refactor lock file creation in MavenDependencyResolver and its test to use a dedicated method to improve code readability and maintainability by centralizing
added " version _ 5 _ 3 _ 1 " preference and updated sync interval settings in UpdateUtils . java to reflect the new version of notifications
added a check to return null if the username matches Constants . FEDERATION _ USER to prevent potential null pointer exceptions when the user is
truffle : do n ' t wrap object in executemethodnode when it ' s an instance of truffleobject
simplified the filtering logic in JakartaClientShutdownWithServerWebAppTest by removing unnecessary Collectors . toList ( ) usage to
added FilterAttachable and updated ErrorStatus handling in LogbackValve . java to improve error handling and provide a warning status for missing files
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed unused import of Version from CreateIndexTask . java to clean up the code and improve readability
added handling for missing primary keys in OracleDatabase and AbstractDb2Database to ensure correct schema settings for missing indexes in the comparison database
added ` MetastoreException ` to the ` execute ` method and modified exception handling in ` MsckOperation ` , and added a new
[ hotfix ] [ kafka ] retry committing of all committable in kafkacommitter
[ rip - 10 ] fix the issue that the forwardmessagetodlpqactivity do n ' t remove the receipthandle from the
added service management functionality to DockerComposeContainer and created a corresponding test class to enhance the DockerComposeContainer ' s ability to run commands based on
replaced direct calls to ` for ` with a ` copySet ` method in ` Export . java ` and ` StructContextDecorator . java
removed the HtmlCleaner implementation and simplified the return statement in FeedParser . java to streamline the code and improve readability by elimin
removed conditional check for mAppsCustomizeContent in Launcher . java and updated child layout retrieval in Workspace . java to simplify logic for better
change data type of ` energyReactiveVArACSumConsumed ` and ` energyReactiveWACSumProduced ` from ` int
added a new file ` bug4150029 . java ` implementing a JApplet with file chooser functionality to address bug 41500
added ` isSparkConfigUpdated ` property and its getter / setter methods in ` HiveConf ` , ` SparkClient ` , and ` Spark
added long press indicator functionality to the ` Launchable ` class and its implementations across multiple classes to enhance user experience by providing a long press indicator
add polygon empty check to WKBWriter and update related tests to include SRID support to ensure proper handling of empty geometries and improve test coverage
refactor UnflavoredBuildTarget builder methods and introduce interner in AbstractUnflavoredBuildTarget to improve code clarity
added a new file ` MultiplyByMaxInt . java ` that implements a multiplicative integer operation to demonstrate the behavior of
added a condition to enable the drawer indicator for the current file in OCFileListFragment to ensure the drawer indicator reflects the current file '
changed the package declaration of TestRAMDirectory from ` org . apache . lucene . index . store ` to ` org . apache .
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify code
drools - 1748 dmn : provide more informative message for no expression define on node
replaced occurrences of @ ContainerFor ( RTA ) with @ Repeatable ( RTA ) and @ ContainerFor ( RTB ) in
updated the sending duration message formatting in AbstractController . java to improve clarity of the output based on the send duration
updated class name handling in OpenMBeanAttributeInfoSupport . java to ensure package access is verified before loading the class to enhance security by ensuring proper
make readresponseresolver constructor take responsecount into account . patch by brandonwilliams , review by jbellis for cassandra -
added a calculation for freeSize in StoreDirect . java to correctly update the freeSize value based on the provided string
refactor touch event handling to use a dedicated method for clarity to improve code readability and maintainability by reducing redundancy
replaced SslContextFactory instantiation with SslContextFactory . Server in multiple files to standardize SSL context initialization across server implementations
refactored the initialization of the Socket class to use a direct instantiation instead of a privileged action to simplify the code and improve readability
refactor InputTest class for improved readability to enhance maintainability and ease of understanding for future developers
updated the ` finishRecentsAnimationOnTasksAppeared ` method to accept a ` Runnable ` parameter and introduced ` QuickstepLauncher `
added a null check for curLatLng before adding the current location marker to prevent potential NullPointerExceptions during marker addition
updated the method to retrieve the client ID in ClientAdminEndpoints and added a test for it in ClientAdminEndpointsTests to ensure the correct client
updated SQL query string from " \ n " to " \ \ t " and modified setup method to use @ BeforeEach instead of @ Before
fix for http : / / issues . apache . org / activemq / browse / amq - 2698 - wait for consumer
added unit tests for ` ExpectedException ` and ` UnknownKeyException ` in ` SlidingGanttCategoryDataset ` to ensure correct handling of
[ type : refactor ] fix nullpointerexception in shenyu sync data service
[ fix ] lightcontrol now work with jme3 . util . clone . cloner .
updated the visibility of stack traces and improved error handling in StdErrLog . java to enhance clarity and maintainability of stack trace handling
refactor HttpSessionEventPublisher to use a unified ` getContext ( ) ` method and improve event publishing logging to enhance code clarity and ensure that
added a semantic check to ensure the syntax of CREATE CQ statement has changed from v0.14 to v0.14 to ensure compatibility
[ hotfix ] [ table - common ] fix typo in flinkIoTDBSink . java
add a counter to track the number of simplified node in the CanonicalizerPhase class to improve debugging by tracking the number of simplified nodes
updated the context parameter for setting fileIcon in ActivityListAdapter . java to ensure the correct drawable context is used for file icons
updated ` readIdentifierWithSchema ( ) ` to use the schema name in ` Parser . java ` and modified test cases in ` TestScript
bigqueryio : add support for read timestamp field with time format ( # 11347 )
added ` findViewWithTag ` method to ` ShadowView ` and ` ShadowViewGroup ` classes to find views with specific tags to enhance view
added generic type parameters to for - each loops across multiple classes to enhance type safety and avoid unchecked cast warnings
updated import statements in IndexTool . java and removed unused PColumnFamily import in MetaDataClient . java to improve code clarity and reduce unnecessary
added JSON _ VALUE and JSON _ CREATOR constants and updated enum value retrieval logic in JavaClassUtil to improve clarity and functionality in handling JSON
svm : fix resource feature to handle jar file .
replaced multiple occurrences of CUDA _ R _ 8F , CUDA _ C _ 8I , and CUDA _ C _ 32
refactor ResourceLoader class to include file filtering for resource directories to enhance resource loading flexibility by allowing multiple layout directories
refactor getAttachedFace method to handle SimpleAttachableMaterialData and return BlockFace . DOWN if it is not a RedstoneTorch
added handling for VARBINARY case in RelToStageConverter . java to enable handling of VARBINARY data types in the conversion process
removed the import of DateHelper from NoteAdapter . java to eliminate unused dependencies and improve code clarity
updated backup saving message handling and added error messaging in the player ' s captions to improve user feedback and clarity when restoring backups
set eview element ' s position to relative instead of absolute to ensure proper positioning of the eview element
replace the use of a temporary file path with a direct file creation in ShadowParcelFileDescriptor . java to simplify the file creation process and
replaced ` poll ( ) ` with ` removeFirst ( ) ` and ` addFirst ( ) ` in ` StackBasedSecurityContextHolderStrategy
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the
added unit tests for bitwise operations in IntegerEqualsCanonicalizerTest . java and refactored conditional checks in IntegerEqualsNode . java to improve
added a constant STRING _ ARRAY to the TypeFactory class to facilitate string array handling in the application
refactor hideIme method to encapsulate hideIme method across multiple classes to improve code readability and maintainability by centralizing keyboard
force bit density to fix network issue
updated assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest to improve clarity and consistency to enhance readability and maintain
minecraftforge / minecraftforge / maxecraftforge / maxecraftforge / maxtexturesize
[ java ] fix typo in trystoplogrecording ( ) .
added a conditional check for isInTransform before resetting startPosn to ensure startPosn is only set when the transform is in - transform mode
add query option to disable star tree in query ( # 3390 )
introduced a lockNearbyView variable and modified refreshView method parameters to improve control over the refresh behavior of nearby places
added methods for creating a new ` MapTransformer ` instance with methods for creating ` BiMap ` and inverse ` BiMap ` to enhance functionality
refactor EmeddedObjects and EmbeddedObjects classes for improved clarity to enhance code maintainability and readability
added ` SparseArray < Size > launcherWidgetSpanInfo ` and modified ` LauncherPreviewRenderer ` and ` PreviewSurfaceRenderer ` classes to
updated ` StageSelector ` and ` StageAction ` classes to implement ` StateChangeListener ` instead of ` ChangeListener ` to enhance event handling capabilities
added methods to manage calling process ID and UID in ShadowBinder to enhance functionality for managing calling process ID and UID during testing
replaced ` @ auto . value . AutoValue ` with ` @ common . base . Objects ` and refactored ` ExpectationFailure
removed a warning log statement for no support for deserializing messages to streamline logging by eliminating unnecessary warnings
replaced the calculation of newW and newH with conditional checks for newW and newH to ensure newW and newH are initialized
added character handling for ' \ t ' and ' \ ' in CoreMarkdownNodeRenderer and modified MarkdownWriter to handle escape characters to ensure proper
added a neutral button to the SharePasswordDialogFragment and refactored password sharing logic into a separate method to improve code clarity and
refactor methods in IoUtil to use a new static class MappingMethods for retrieving file channel methods to improve code organization and maintainability by central
changed access modifiers of methods and variables in AbstractAssert _ describedAs _ printed _ to _ console _ Test from public to package - private to
added new slider keytab and slider principal options to the LlapOptionsProcessor class to enhance user control over slider AM keytab settings for better
updated the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and improved window handling in multiple classes to
added handling for loader completion and improved shortcut loading logic in LauncherModel . java to ensure proper synchronization and handling of shortcuts when the loader
modified data and isFinished fields to be final and modified isBlocked logic in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and Node
updated ` IssueInterface ` and ` ValidationReport ` classes to include ` messageType ` as a parameter and introduced a new ` JsonValidationReport `
added a safe method to retrieve the provider name of a cipher and modified output messages for better clarity to enhance error handling and provide clearer
rename ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to improve clarity and consistency in naming conventions
changed log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging for improved performance
removed conditional indentation in AggregateLifeCycle . java to streamline output by eliminating unnecessary indentation
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public static in DefaultMapScaleBar . java to allow access to the
removed the @ Ignore annotation from CovariantOverrideTest . java to enable tests that do not implement the covariant override functionality
refactor ` curly ` method to use a dedicated ` qtype ( ) ` method to improve code readability and maintainability by centralizing type
camel - 14263 : camel - jbang - make it possible to load camel route from a dom node instead of a domdocument .
added space minimum and maximum settings to the X - axis of the ScatterChart to improve the visual spacing of the chart for better visual
removed unnecessary whitespace in ExpressionStringBuilder . java to improve code readability and maintain consistency
added a method ` shouldPreserveDataStateOnReapply ( ) ` to ` SplitScreenSelectState ` and a default implementation in `
added a check for the existence of the " UTF8 " key in the properties file to ensure proper handling of missing UTF8 encoding properties
updated print statements in TestReproduceMessage . java and added SeedDecorators in LuceneTestCase . java to improve output clarity
added a UI event for long - pressing an AllApps item in StatsLogManager and updated ItemLongClickListener to log it to enhance user
added null check for log before proceeding with operations in StoreWAL . java and created a new test class Issue112Test . java to
added a condition to check ifsectorLandInfo is shown only if the sector preset is not null to ensure thatsector land info display
updated type casting in SemanticPropUtil , PojoTypeInfo , TupleTypeInfoBase , and TupleTypeInfoTest to use wildcard generics to improve type safety
refactor Enum class to improve code readability to enhance maintainability and ease of understanding for future developers
added a randomSelection parameter to the buildNearbyRandom method and improved error handling for missing parameters to enhance the robustness of the near
minecraftforge / minecraftforge / temporarycache . java should use cachebuilder . expireafterwrite ( ) instead of
removed the visibility of createSQLViewContainer and createWMSLayerImportContainer in NewLayerPage . java to streamline the code for better
set ` Availability _ availability ` to ` UNAVAILABLE ` in ` ContextHandler . java ` to ensure ` Availability _ availability ` defaults to `
updated method signatures and logic in FetchInvDataMsgHandler , PbftDataSyncHandler , SyncService , PeerConnection , and SyncService
feat : upgrade gapic - generator - java to 2.1 . 0 and update gapic - generator - java to 2.1 . 0 (
replaced the ` _ freeSpaceReclaimDisabled ` boolean with a ` _ freeSpaceReclaimQ ` integer and updated related methods to
changed constants from public to private static final for KDC _ OPT _ PROXIABLE and KDC _ OPT _ RENEWABLE _
refactor JsonWriter instantiation to ensure proper assignment and null handling to improve code clarity and prevent potential null pointer exceptions
renamed variables and methods related to mentions and retweets in ProfilePager . java for consistency and clarity to improve code readability and maintain
renamed the method ` paintBackground ` to ` paintComponentBackground ` in the ` Slider ` class to improve clarity and consistency in
added a new method ` valueFromClassConstant ` to retrieve object value constants from class names and fields to enhance property retrieval functionality for class constants
added logging for service initialization failures in KafkaService . java to improve error handling and debugging capabilities during service initialization
update RESOURCES _ TO _ ALWAYS _ ACQUIRE to use an ImmutableSet instead of a Set to ensure that only " usr / share /
improve error message when ' channel ' be not configure as ' default - output ' for the message bus .
added keyword handling in HTMLDocument and implemented a test for indexing keywords in TestDemo to enhance document indexing functionality and ensure proper handling of keywords in
updated the SDK version check from S to R in FileUploader . java to ensure compatibility with the latest Android API version
modified the initialization of the ` _ addresses ` array in ` MemcachedSessionDataMapFactory . java ` to ensure that the ` _ addresses ` list
replace ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall . class ` to
refactor Builder class to improve code structure to enhance maintainability and readability of the code
replaced IOException with FileNotFoundException and improved error messaging in ISBNtoBibTeFetcher . java to enhance error handling and provide clearer
increased keep - alive time from 1 second to 10 second and added suppression for exceptions to improve error handling and ensure graceful shutdown of
added null check for the text before firing data changed events to prevent potential NullPointerExceptions when the text is not initialized
add a simplified model to the sentiment model and make it easy to use it .
added a line trimming operation to the SuffixURLFilter class to ensure leading and trailing spaces are removed from the output
added a check to return early if the player is in godmode to optimize performance by avoiding unnecessary processing when in god mode
ggb - 1307 textinputdialog wo n ' t unregister the popup if the flag be set to false
removed the ` maximumSize ` parameter from the ` LinkedHashMapCache ` constructor and updated the concurrency level setting in ` TCache ` to simplify the
removed unnecessary ` _ channel . close ( ) ` calls in ` ChannelEndPoint . java ` to streamline resource management by eliminating unnecessary
added null check for keyIndex and refactored KeyIndexBuilder initialization across multiple classes to improve robustness by preventing potential null pointer exceptions
added Locale . ROOT import and modified exception handling in DirectUpdateHandler2 . java to ensure consistent handling of exceptions in the same locale for better
canonicalizer : add store check guard to writenode .
refactor BciBlockMapping to simplify successor handling and improve edge detection logic to enhance code readability and maintainability by reducing complexity in
bugfix : fix high variance for non - voting bug
removed unnecessary ` BuildTarget . copyOf ( buildTarget ) ` usage across multiple files to simplify code and improve readability by eliminating unnecessary
refactor SqlRunner class to improve code structure to enhance maintainability and readability of the code
changed the data type of ` date _ taken ` from ` String ` to ` long ` and updated related logic in ` FileStorageUtils `
renamed ` knownApis ` to ` knownSdks ` and updated related references in ` DefaultSdkProvider ` to improve clarity and
replace ProgressIndicator with ConfidenceProgressIndicator in CreateOfferView . java to improve progress indicator appearance for better user experience
updated user agent header from " Cling / " to " UMS / " in multiple files to align with the new HTTP standards for
modified the ` iterateBpt ` method to accept a boolean parameter for force iteration to enhance functionality by allowing the ` iterateBpt ` to
added new view types for message and noflex messages in CrowdfundingChatAdapter to enhance user experience by providing more flexible message
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary ` and ` MacOSXLibraryDL ` to
corrected the spelling of " VP " in the pattern " SBAR " and " SBARQ " to " VP "
modified the ` insert ` method to remove the ` canvas ` parameter and added functionality for writing pack entries to simplify the method signature and improve image
replaced the ` getVisitors ( ) ` method with a new ` apply ( Refactor < S , T > refactor ) ` method and
added methods to retrieve elements by name in the XML structure to enhance functionality by allowing retrieval of child elements by their names
added " Content - Charset " header with " UTF - 8 " in HttpSolrServer and its test to ensure proper handling of UTF - 8
added SystemUiControllerFlags annotation and modified UI state management in TaskThumbnailView and AllAppsTransitionController to use this new flag to enhance UI
removed the private ClientConfigurationService variable from IntrospectingTokenService . java to streamline service initialization and improve code clarity
updated RuntimeException message format in HiveRecordSet . java to include additional context for error messages to improve error reporting for better debugging and debugging
removed the ownerId field from NodeEntry . java to simplify the code by eliminating unnecessary fields
rename configuration variable ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` to clarify the purpose of
added score assignment to the merge method in TextFragment . java to ensure the maximum score is maintained when merging fragments
removed the private Digester variable from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added a validation check for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure maximumUnimpro
added a check for empty opened edits in EditGcodeFile . java to avoid unnecessary processing when there are no currently open edits
refactor ` verify ` methods in ` BDDMockito ` and add corresponding test cases in ` BDDMockitoTest ` to improve
updated the classloader retrieval to use PathScanner ' s class loader instead of the current thread ' s context to ensure accurate class loading across different threads
refactor ` sayHi2 ` method to accept a ` CompletableFuture < String > ` and implement it in ` CodeFirstPojoClientInt
added logging functionality to AbstractSplitBrainProtectionTest and refactored method signatures in AbstractSplitBrainProtectionTest to improve test visibility and
added null checks and improved logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to enhance robustness and prevent potential NullPointerExceptions during
[ giac ] fix for [ 0 , degree ( 0 ) ! = 0 , degree ( 0 ) ! = 0 ] [ 1 ]
refactor DockerComposeContainer to use a concurrent map for log consumers and introduce a new withLogConsumer method to improve logging consumer management and
updated the type parameter in the testMapping method from Class < ? > to ResultSetMapping < ? > to enhance type safety by explicitly defining the
removed unused imports from AmbariMetaInfoTest . java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to ` ThrowingSupplier ` that returns a ` ThrowingSupplier < T , E > ` to
replaced a break statement with a return statement in ConsoleActivity . java to ensure that the method returns a boolean value indicating success
camel - 14284 : fix platform - http support for buffer body .
added methods to handle platform - specific path separators in MorePaths . java to ensure consistent path formatting across different operating systems
added a null check before processing Solr parameters in AuditEvent . java to avoid potential NullPointerExceptions when authorizationContext ' s params are null
replaced ` load ( ) ` method with ` throwExceptionIfFail ( ) ` and added a new method ` throwExceptionIfFail ( ) `
updated SDK version from " 4611349 " to " 4514284 " and added new speak and stop methods in ShadowTextTo
store transaction log item id and name in a transactionlogkey so it can be reuse by other thread .
added ` enableSqlWithoutProfile ` property and its getter / setter methods to ` JdbcEnvironmentProperties ` , ` JdbcEnvironmentRepository ` , and
added a try - finally block around the write operation in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
[ modloadingstage ] use eventgenerator . fromfunction instead of supplier for registryevent . newregistry
updated date formatting in DateUtils to use calendar instead of date to ensure accurate representation of date representation in the calendar
updated the ` getThreadInfo ` method to include a stack trace depth parameter in ` CachedThreadStatesGaugeSet ` to improve thread information retrieval by
added a protected field ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` to improve transaction
updated job directory from " . net / job / FastAsyncWorldEdit - P2 - V6 / " to " . net / job
added a null check for the input path and created the output directory if it does not exist to ensure that the output directory exists before proceeding
added a new method ` calculateNormalVector ` to calculate the new normal vector for a given ` DefaultObj ` and ` DefaultObjFace `
updated the ` find ` method to accept ` principalId ` and ` identityZoneId ` as a parameter in ` JdbcAuditService . java
refactor SpanCollector class for improved performance to enhance efficiency of span collection operations
added a null check for the current session before accessing its info in AuthorizationFilter . java to avoid potential NullPointerExceptions when the session manager is not
refactor TransactionIsolationLevel class for improved clarity to enhance maintainability and readability of the code
rename methods and variables from printLVgroups to printLogicalVolumegroups in OshiController . java to improve clarity
added a name to the current thread in TestSession . java to provide clearer context about the thread being forwarded to the remote URL
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management functionality
simplified the return statement by returning an empty ArrayList instead of a loop to simplify the code and improve readability by eliminating unnecessary
added a new OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance user experience by providing a
replaced the ` scaleHotseatWithWorkspace ` method with a ` getHotseatScaleAndTranslation ` method in ` Launcher
added a check for JUnitRule in the DefaultStackTraceCleaner and created a new test for filtering elements above Mockito JUnitRule to
replaced direct buffer handling with direct array operations in MappedResizeableBuffer . java to improve performance and clarity in memory copying operations
added a private balanceListener variable and updated its usage in DepositListItem . java to improve thread safety by ensuring the listener is properly managed
added conditional logic to set color values based on edge mode in RealisticRenderer to ensure correct color representation when edge mode is not STICKER
added null check for httpClientResponse and updated log initialization in multiple test classes to ensure robustness by preventing NullPointerExceptions during logging operations
remove unused import of PatternUtil in Gl200ProtocolDecoder . java to improve code clarity and reduce unnecessary dependencies
added a timing check for the last playback time in FullDetailsActivity . java to ensure that playback events are only processed when the last refresh time
added support for elliptic nodes in SpanishXMLTreeReader and introduced a new method to check if a node is elliptic to
added a condition to clear the ' language ' component if the first DC entry is empty to ensure that the item ' s language information is properly
updated the ` ReactiveLoadBalancerClientFilter ` to determine the override scheme based on the secure status of the server to ensure that the override scheme is
http : / / issues . apache . org / jira / browse / amq - 4748 - fix memory leak in defaultm
changed the visibility of the fullFilePathFromClassName method from final to default in NativeImageDebugInfoProvider . java to restrict access to the method
refactor Correspondence creation in ShadowBackupManagerTest to use a lambda expression to improve readability and maintainability of the code
corrected the spelling of " USLocale " to " ENLocale " in multiple locations to ensure consistency and accuracy in the identification of supported
remove unnecessary null check for redeemData in LocalTransactionSigner . java to simplify code logic for better readability and maintainability
add a new class MinecraftForgeClient to handle tessellation for blocks to facilitate the rendering of terrain
added a return statement to TxCacheDB . java to prevent further processing of cache operations
updated import statements from ` com . sun . xml . internal . ws ` to ` jdk . internal . org . objectweb . asm
refactor FastDictionary class to improve performance to optimize data processing efficiency
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5892 ,
updated FlightEvent values for GROUND _ HIT and SIMULATION _ END in FlightEventsTest . java to include additional properties and
[ beam - 1181 ] update protobuf to v1p26p0 for textsource and bytekey ( # 1181 )
replaced ` target . addNamespaceDeclaration ` with ` newElement . addNamespaceDeclaration ` in ` SaajStaxWriter . java `
rename ` profilePictureLink ` to ` profilePictureLinks ` and update related method calls to use ` courseId ` instead of ` profilePicture
added support for short passwords in DefaultPasswordValidator to allow alphabetic and numeric sequences to be accepted in long passwords
simonstewart : introduce a new ` Command ` class and update ` RemoteControlConfiguration ` and ` SeleniumDriverResourceHandler
removed JUnit ' s Test annotation from ProxyClassSerializationTest . java to streamline test code by eliminating unnecessary dependencies
updated the argument string format in DLNAMediaInfo . java to use " format = bgr24 " instead of " scale =
remove canonicalization for speculativerPhase in graal - compiler .
added checks for bean definition overriding and aliasing in AuthenticationManagerBeanDefinitionParser to ensure proper handling of authentication manager configurations in the application context
added handling for the " X - Forwarded - Server " header in the ForwardedRequestCustomizer to ensure proper server configuration for forwarded requests
added a call to setLength ( 0 ) in ConsoleReader . java to reset the StringBuilder to prevent potential null pointer exceptions during string manipulation
changed access modifier of allowedRoles and disallowedRoles lists from private to protected to allow subclasses to access and modify role management functionality
update OpenIDE - Module - Specification - Version from 1.54 to 1.55 and update version base values in project . properties to ensure
hbase - 25836 add config option hbase . server . netty . tls . wrapsize to configure ssl handler wrap size (
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to use JUnit 4 annotations and add a new test method for tokenizing small strings with ranges with whitespace to
added a method to set the protocol binding in OpenSamlAuthenticationRequestFactory and created a corresponding test class to enhance flexibility in protocol binding handling
replaced direct instantiation of SurfaceControl . Transaction with a variable and added transaction handling in DepthController . java to improve code readability and ensure
updated version return statement to use " 2.5 . x " instead of " main " to ensure compatibility with the latest version format
hbase - 25711 addendum bulk load preprepare and precleanup do n ' t need to do bulk load creation ( #
updated the limit parameter in unSeqMergeList to use the minimum size of maxOpenFileNumInEachUnseqCompaction to ensure the
camel - 14263 : fixed fileinputstream not be create when convert file to inputstream .
added a login feature to the DefaultShardManagerBuilder and modified the build method in DefaultShardManagerBuilder to conditionally login to enhance security by
updated the formatting of the DeleteGlobalRef method call to improve code readability and maintain consistency
updated the join table name for RegisteredServiceImpl _ Properties from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props "
added a check for the completion mark before handling the response completion to ensure that the response is terminated only when the completion is marked to avoid potential
added a condition to check if the user is a user student in FeedbackResponseCommentsLogic . java to ensure that the giver is only
added security checks for linked profiles and improved platform compatibility in BMPImageReader . java to enhance security and ensure proper handling of
updated the boundary indices in the simple cuboid settings in ClassicPlotManager . java to correct the positioning of the plot block in the
added a wait message for PMD status in the PMDOpenTool and refactored actionPerformed method to use a Runnable for asynchronous execution to
refactor gridPresenter initialization logic to utilize a new method for setting grid sizes to improve code readability and maintainability by consolidating grid
changed return values in ContributionsListFragment from false to true and changed return values from false to true to ensure that the method correctly reflects
added a new test method ` testSkipRange ` and modified the scan logic in ` BaseResultIterators . java ` to include a limit
pdfbox - 4892 : add unit test for acrobatcheckboxgroup property , a suggest by valerybokov
added a method to retrieve the last modified timestamp of a file to enhance functionality for retrieving the last modified timestamp of a file
added a check for the existence of a " metaTable " in the file format condition to ensure that the file format is valid for metadata tables
replaced ` TextField ` with ` ComboBox ` for currency selection in ` CashDepositForm . java ` to allow users to
changed catch blocks from IOException to Throwable in WriteFlusher . java to improve error handling by catching broader exceptions
added a new boolean variable ` mStartedEnterAnimation ` and modified animation handling logic in ` IconRecentsView . java ` to improve the
added a new field ` activeKeyId ` with a value of ` String ` to the ` UaaConfiguration ` class to define the active key
updated action labels and descriptions in the sendMail and sendMailWithAttachments methods to improve clarity and consistency in action descriptions for better user under
changed the ` isActive ` variable from private to a volatile variable to ensure visibility of the ` isActive ` variable across multiple threads
updated the method name from ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext . java ` and updated
cast the return value of ` buildImplicitVarPart ` and ` sbBuildLHS ` to ` CharSequence ` in multiple classes to ensure type
added a check for the ownCloud app name in DisplayUtils . java to ensure the application name matches the correct string resource for the ownCloud
hbase - 17451 masterfilesystem . mkdir should set rootdir permission if hbase . security . authentication be set to kerberos
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange . java ` and ` J
refactor Instant class to improve code structure to enhance maintainability and readability of the code
updated state format handling in CollectionsHandler and related classes to return a String instead of an int to improve clarity and consistency in state format handling
updated logging statement formatting in CentralAuthenticationServiceImpl . java and modified condition checks in AbstractTicket . java to improve code readability and maintain
pdfbox - 4892 : handle illegalargumentexception , a suggest by valerybokov
removed unnecessary whitespace in AbstractFileResourceSet . java to improve code readability and maintain consistency
updated PluginParameterExpressionEvaluator to accept PathTranslator as a parameter and added a method to align file paths to the base directory to enhance file path
move protobuf coders to extensions / protobuf and register it for bytestringcoder .
added a boolean parameter to the HqlQueryParsingToken instantiation in HqlQueryRenderer . java and a corresponding test in HqlQueryRenderer
updated ` generateLaunchLugFromRASAeroRailGuide ` and ` generateLaunchLugFromRASAeroRailGuide `
removed the getNonceFactory method from the BitmexStreamingExchange class to simplify the code by eliminating unnecessary functionality
( chore ) camel - mail : avoid string concatenation
[ java ] use default value for mtu _ length in driverconductortest .
changed the default value of initializeLoadedClasses from true to false in ScanSpec . java to disable initialization of loaded classes during scanning
added a call to grab the focus of the search field in FullTextSearchPanel . java to ensure the search field reflects the current focus
refactor NioParams initialization in TlsConnectionLogging . java to improve code readability and maintainability
modified the assertion in StatementTest . java to include a comment to clarify the purpose of the method in the result set
updated the error message format in TestSolrConfigHandler . java to include the server URL to improve clarity of error messages related to expected values
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` mocks in ` CsrfWebFilterTests . java `
updated the density pattern in FilterResourcesStep . java to use a dynamic density string to improve flexibility in identifying drawable density values
added a new method ` elementPrefix ` to retrieve the element UIID based on the component type to improve UI ID generation for different component types
removed the densityDpi check from the rotation condition in RecentsAnimationDeviceState . java to simplify the condition for better readability and
added two new files , TestCloneArrayWithDifferentLengthConstness . java , TestArrayCopyWithLargeObjectAlignment . java , and Test
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with the @ AwaitsFix annotation to
fixed - redissonexecutorservice . schedule ( ) method do n ' t throw npe if nextstartdate be null
simplified the initialization of ` needsToUpdateCredentials ` in ` FileDownloader ` and ` FileUploader ` to improve code readability and
added null check and closing logic for the StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
( chore ) camel - net - metrics : use ` getOrDefault ( ) . doubleValue ( ) ` instead of ` get ( ) `
added nonce parameter handling in TokenMvcMockTests to ensure correct retrieval of claims for a specific token nonce
renamed multiple Java classes related to ChartEditor , DefaultChartEditor , DefaultAxisEditor , DefaultPlotEditor , DefaultTitleEditor , and P
added width and height settings for formLayeredPane in Form . java to ensure the formLayeredPane does not require layouting
updated import statements and added maxY method in BrowserContentPane . java to ensure proper height adjustment based on the owner ' s height
modified the ` openDatabase ` and ` openSharedDatabase ` methods to return a boolean indicating whether the database connection is connected to enhance functionality by
updated references from ` DOCKER _ COMMAND ` to ` Platform . DOCKER _ COMMAND ` in ` DockerTestUtils . java `
added a null check for the input stream before reading and processing files in TestIsartorValidationFromClasspath . java to avoid potential NullPointerExceptions
updated the ` drawLeaveBehind ` method to accept a color parameter for the folder leave behind color to enhance flexibility by allowing customizable
report canary incompatibility for android studio 2.2 . 2
added a null check for the identity proxy table name before retrieving the UUID to avoid potential NullPointerExceptions during identity proxy sanity checks
added modulePersistEnable and modulePersistDisable lists and their getter / setter methods in StartArgs . java to enable and disable module persistence functionality in
updated argument length check and improved error message formatting in GeminiMarketDataService . java to enhance code clarity and ensure correct
replaced HashSet with LinkedHashSet for the questions collection in VerifyPasswordResetRequestAction . java to maintain order of questions in the flow scope
added two new classes TesterResponse . java and TestRealmBase . java , and implemented a test case for role validation in TestRealmBase
added multiple ` removeExclude ( " setup / setup - * " ) ` statements to the ` AuthCheckFilter ` class to exclude specific J
refactor Scheduler class to manage execution of delayed runnables more efficiently to improve readability and maintainability of the runnable execution process
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of String [ ] to improve method flexibility
added error handling to the ` read ` method in ` XMLParser ` to return a ` END _ TAG ` instead of ` char ` to
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to verify the behavior of
added pivot positioning for the arrow in DeepShortcutsContainer to improve the visual appearance of the arrow based on whether the icon is above
replaced ` InterruptedException ` catch block with ` ignored ` catch block in multiple classes to simplify exception handling and improve logging clarity
modified the ` updateThumbnail ` method to include a ` refreshView ` parameter in the ` AbsSwipeUpHandler ` and ` Recent
pdfbox - 4892 : improve usage message , a suggest by valerybokov
updated InternetAddress instantiation to include a boolean parameter and improved validation in HostnameFormatSpecifier to enhance flexibility in address formatting and ensure proper validation
replaced references to ` this ` with the instance variable ` this ` across multiple classes to improve code readability and maintainability by reducing
refactor SizeBasedDocIdIterator and related classes to use a local variable for the maximum document ID to improve code clarity and maintainability
added methods to ` promptToOpenFile ` and ` promptToOpenFile ( String [ ] existingFileName ) ` to ` FileDialo
updated widget span settings and refactored page counting logic in AppsCustomizePagedView . java and AppsCustomizeTabHost
added transformation logic to calculate bounding box for components based on active instances in FlightConfiguration . java to enhance component rendering accuracy and ensure accurate length
camel - 16400 : camel - micrometer - use direct : message instead of seda : message
added Locale . ROOT to the DateTimeFormatter initialization in TimeHelper . java to ensure consistent date formatting across different locales
added authorization checks and modified metadata handling in DSpaceObjectConverter . java to enhance security by ensuring hidden fields are excluded from the metadata list
added a new test method ` testMissingRequired ` to ` StarTreeConfig ` to verify behavior when missing required configurations are provided
updated the recipientList method to include an additional argument for recipients and added tests for dynamic and static recipient lists in SpringRouteBuilderTest to enhance
refactor InlineLayoutBox to use a loop for retrieving the parent of InlineLayoutBox and improve paint handling in HoverListener to enhance layout
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsServiceConnection ` and ` ServiceBinder ` for managing authentication methods to improve service management and
